commit_id,cvs_id,bug_id,committer,commit_msg,commit_time,diff_content
b699c2001a3afec43b61da8d1d5121acacb5e468,25317,311792,David Mandelin,"Fix jsreftest regress-311792-02.js
",1274823044,"""diff --git a/js/src/jsarray.cpp b/js/src/jsarray.cpp
index 2c0c72d..f06a3b4 100644
--- a/js/src/jsarray.cpp
+++ b/js/src/jsarray.cpp
@@ -1644,7 +1644,7 @@ array_reverse(JSContext *cx, uintN argc, Value *vp)
             return false;
         }
     }
-    JS_ASSERT(obj == &vp->asObject());
+    vp->setObject(*obj);
     return true;
 }
 """
1fa53da03aac48a363f1fe9461a1ab5a4b44bf81,25582,341877,Jason Orendorff,"Fix regression of js1_5/GC/regress-341877-01.js noted in bug 523452 comment 11. rs=dmandelin.
",1275505013,"""diff --git a/js/src/jstracer.cpp b/js/src/jstracer.cpp
index 0727766..11aabe8 100644
--- a/js/src/jstracer.cpp
+++ b/js/src/jstracer.cpp
@@ -11089,10 +11089,8 @@ JS_REQUIRES_STACK AbortableRecordingStatus
 TraceRecorder::record_JSOP_DELELEM()
 {
     jsval& lval = stackval(-2);
-    if (JSVAL_IS_PRIMITIVE(lval)) {
-        AbortRecording(cx, """"JSOP_DELELEM on primitive base expression"""");
-        return ARECORD_STOP;
-    }
+    if (JSVAL_IS_PRIMITIVE(lval))
+        RETURN_STOP_A(""""JSOP_DELELEM on primitive base expression"""");
 
     jsval& idx = stackval(-1);
     LIns* rval_ins;
@@ -11104,8 +11102,7 @@ TraceRecorder::record_JSOP_DELELEM()
         LIns* args[] = { get(&idx), get(&lval), cx_ins };
         rval_ins = lir->insCall(&DeleteStrKey_ci, args);
     } else {
-        AbortRecording(cx, """"JSOP_DELELEM on non-int, non-string index"""");
-        return ARECORD_STOP;
+        RETURN_STOP_A(""""JSOP_DELELEM on non-int, non-string index"""");
     }
 
     set(&lval, rval_ins);"""
ae22c50ee8a172aac4dbad1293271e02a97fdae2,38387,371976,Daniel Holbert,"bustage fix for Bug 371976
",1253913653,"""diff --git a/content/html/document/src/nsPluginDocument.cpp b/content/html/document/src/nsPluginDocument.cpp
index 1ed22fe..59331ca 100644
--- a/content/html/document/src/nsPluginDocument.cpp
+++ b/content/html/document/src/nsPluginDocument.cpp
@@ -266,7 +266,7 @@ nsPluginDocument::StartDocumentLoad(const char*         aCommand,
 nsresult
 nsPluginDocument::CreateSyntheticPluginDocument()
 {
-  NS_ASSERTION(!GetPrimaryShell() || !GetPrimaryShell->DidInitialReflow(),
+  NS_ASSERTION(!GetPrimaryShell() || !GetPrimaryShell()->DidInitialReflow(),
                """"Creating synthetic plugin document content too late"""");
 
   // make our generic document"""
0c8ea440ec58289e1abf030cd18fa80708992134,38389,371976,Neil Rashbrook,"Bug 371976 Create synthetic plugin document content later (like image documents) r=smaug
",1253912327,"""diff --git a/content/html/document/src/nsPluginDocument.cpp b/content/html/document/src/nsPluginDocument.cpp
index 06668ff..1ed22fe 100644
--- a/content/html/document/src/nsPluginDocument.cpp
+++ b/content/html/document/src/nsPluginDocument.cpp
@@ -192,11 +192,22 @@ NS_IMPL_ISUPPORTS_INHERITED1(nsPluginDocument, nsMediaDocument,
 void
 nsPluginDocument::SetScriptGlobalObject(nsIScriptGlobalObject* aScriptGlobalObject)
 {
-  if (!aScriptGlobalObject) {
+  // Set the script global object on the superclass before doing
+  // anything that might require it....
+  nsMediaDocument::SetScriptGlobalObject(aScriptGlobalObject);
+
+  if (aScriptGlobalObject) {
+    if (!mPluginContent) {
+      // Create synthetic document
+#ifdef DEBUG
+      nsresult rv =
+#endif
+        CreateSyntheticPluginDocument();
+      NS_ASSERTION(NS_SUCCEEDED(rv), """"failed to create synthetic document"""");
+    }
+  } else {
     mStreamListener = nsnull;
   }
-
-  nsMediaDocument::SetScriptGlobalObject(aScriptGlobalObject);
 }
 
 
@@ -218,6 +229,17 @@ nsPluginDocument::StartDocumentLoad(const char*         aCommand,
                                     PRBool              aReset,
                                     nsIContentSink*     aSink)
 {
+  // do not allow message panes to host full-page plugins
+  // returning an error causes helper apps to take over
+  nsCOMPtr<nsIDocShellTreeItem> dsti (do_QueryInterface(aContainer));
+  if (dsti) {
+    PRBool isMsgPane = PR_FALSE;
+    dsti->NameEquals(NS_LITERAL_STRING(""""messagepane"""").get(), &isMsgPane);
+    if (isMsgPane) {
+      return NS_ERROR_FAILURE;
+    }
+  }
+
   nsresult rv =
     nsMediaDocument::StartDocumentLoad(aCommand, aChannel, aLoadGroup,
                                        aContainer, aDocListener, aReset,
@@ -231,12 +253,6 @@ nsPluginDocument::StartDocumentLoad(const char*         aCommand,
     return rv;
   }
 
-  // Create synthetic document
-  rv = CreateSyntheticPluginDocument();
-  if (NS_FAILED(rv)) {
-    return rv;
-  }
-
   mStreamListener = new nsPluginStreamListener(this);
   if (!mStreamListener) {
     return NS_ERROR_OUT_OF_MEMORY;
@@ -250,16 +266,8 @@ nsPluginDocument::StartDocumentLoad(const char*         aCommand,
 nsresult
 nsPluginDocument::CreateSyntheticPluginDocument()
 {
-  // do not allow message panes to host full-page plugins
-  // returning an error causes helper apps to take over
-  nsCOMPtr<nsIDocShellTreeItem> dsti (do_QueryReferent(mDocumentContainer));
-  if (dsti) {
-    PRBool isMsgPane = PR_FALSE;
-    dsti->NameEquals(NS_LITERAL_STRING(""""messagepane"""").get(), &isMsgPane);
-    if (isMsgPane) {
-      return NS_ERROR_FAILURE;
-    }
-  }
+  NS_ASSERTION(!GetPrimaryShell() || !GetPrimaryShell->DidInitialReflow(),
+               """"Creating synthetic plugin document content too late"""");
 
   // make our generic document
   nsresult rv = nsMediaDocument::CreateSyntheticDocument();"""
b50ccddad8d69432d1463748b6aa463fcc21b4f9,47113,384663,Bob Clary,"bug 384663 - crash test by Martijn Wargers.
",1240592900,"""diff --git a/content/base/crashtests/384663-1-inner.xul b/content/base/crashtests/384663-1-inner.xul
new file mode 100644
index 0000000..f2914ce
--- /dev/null
+++ b/content/base/crashtests/384663-1-inner.xul
@@ -0,0 +1,18 @@
+<window xmlns=""""http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"""">
+<tree>
+  <splitter style=""""overflow: scroll;"""">
+    <treecols style=""""overflow: scroll; display: block;"""">
+      <treeitem id=""""mw_b"""" style="""" display: list-item;""""/>
+    </treecols>
+  </splitter>
+</tree>
+
+<script xmlns=""""http://www.w3.org/1999/xhtml"""">
+function doe() {
+window.addEventListener('DOMAttrModified', function(e) {document.removeChild(document.documentElement); }, true);
+ var y=document.getElementById('mw_b');
+  y.parentNode.removeChild(y);
+}
+setTimeout(doe, 200);
+</script>
+</window>
\ No newline at end of file
diff --git a/content/base/crashtests/384663-1.html b/content/base/crashtests/384663-1.html
new file mode 100644
index 0000000..8cef4f5
--- /dev/null
+++ b/content/base/crashtests/384663-1.html
@@ -0,0 +1,9 @@
+<html class=""""reftest-wait"""">
+<head>
+<script>
+setTimeout('document.documentElement.className = """"""""', 500);
+</script>
+<body>
+<iframe src=""""384663-1-inner.xul""""></iframe>
+</body>
+</html>
diff --git a/content/base/crashtests/crashtests.list b/content/base/crashtests/crashtests.list
index fa587de..094b2bd 100644
--- a/content/base/crashtests/crashtests.list
+++ b/content/base/crashtests/crashtests.list
@@ -29,6 +29,7 @@ load 366200-1.xhtml
 load 369216-1.html
 load 371466-1.xhtml
 load 377360-1.xhtml
+load 384663-1.html
 load 386000-1.html
 load 386794-1.html
 load 395469-1.xhtml"""
e303996747400f20ebb81adffa82411676152edb,47114,384344,Bob Clary,"bug 384344 - crash test by Martijn Wargers.
",1240592900,"""diff --git a/layout/base/crashtests/384344-1-inner.html b/layout/base/crashtests/384344-1-inner.html
new file mode 100644
index 0000000..8135575
--- /dev/null
+++ b/layout/base/crashtests/384344-1-inner.html
@@ -0,0 +1,20 @@
+<table  ><td id=""""mytd""""><small>
+</a>&nbsp- 
+<a >A9
+<a id=""""mya1"""">AOL
+
+
+
+
+
+
+
+<a id=""""mya2"""">Yahoo
+
+<script>
+ mytd.style.display = """"-moz-grid"""";
+ mya2.style.display = """"list-item"""";
+ mya1.style.cssFloat = """"right"""";
+ setTimeout('mya1.style.overflow = """"scroll""""',100);
+</script>
+   
\ No newline at end of file
diff --git a/layout/base/crashtests/384344-1.html b/layout/base/crashtests/384344-1.html
new file mode 100644
index 0000000..ea509bb
--- /dev/null
+++ b/layout/base/crashtests/384344-1.html
@@ -0,0 +1,9 @@
+<html class=""""reftest-wait"""">
+<head>
+<script>
+setTimeout('document.documentElement.className = """"""""', 500);
+</script>
+<body>
+<iframe src=""""384344-1-inner.html""""></iframe>
+</body>
+</html>
diff --git a/layout/base/crashtests/crashtests.list b/layout/base/crashtests/crashtests.list
index 5502b1e..029b380 100644
--- a/layout/base/crashtests/crashtests.list
+++ b/layout/base/crashtests/crashtests.list
@@ -144,6 +144,7 @@ load 382204-1.html
 load 383102-1.xhtml
 load 383129-1.html
 load 383806-1.xhtml
+load 384344-1.html
 load 384392-1.xhtml
 load 384392-2.svg
 load 384649-1.xhtml"""
54eda12eb766ed950a3e2bff28ebb6d546b70034,47118,382568,Bob Clary,"bug 382568 - crash test by Vlad Sukhoy.
",1240592899,"""diff --git a/content/html/content/crashtests/382568-1-inner.xhtml b/content/html/content/crashtests/382568-1-inner.xhtml
new file mode 100644
index 0000000..a3685f4
--- /dev/null
+++ b/content/html/content/crashtests/382568-1-inner.xhtml
@@ -0,0 +1,52 @@
+<?xml version=""""1.0""""?>
+<!DOCTYPE html
+PUBLIC """"-//W3C//DTD XHTML 1.0 Transitional//EN""""
+""""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"""">
+<html  xmlns=""""http://www.w3.org/1999/xhtml""""> <head>
+<title>Test</title>
+<script type=""""text/javascript""""><![CDATA[
+
+function onAttrModified(evt) {
+//  window.alert(""""Mutation event fired within the frame code."""");
+//  evt.target.focus();
+//  evt.target.blur();
+  evt.target.style.background = 'green';
+  bounce(evt.target);
+//  evt.target.normalize();
+//  bounce(evt.target.parentNode);
+}
+function die(n) {
+  p = n.parentNode;
+  p.removeChild(n);
+}
+
+function bounce(n) {
+  p = n.parentNode;
+  p.removeChild(n);
+  p.appendChild(n);
+}
+
+
+function test_AttrModified() {
+  var x = document.getElementById(""""x"""");
+  x.addEventListener(""""DOMAttrModified"""", onAttrModified, false);
+  bounce(x);
+}
+
+function test() {
+  setTimeout(test_AttrModified, 3000);
+}
+]]></script>
+</head>
+
+<body onload=""""test()"""">
+<h1>TestCase for unsafe mutable events from textarea</h1>
+<p>Please wait for 3 seconds after document was loaded,
+if your browser is vulnerable, it may stop responding
+to keyboard and mouse event
+and most likely it will eventually crash (may take a
+while for debug builds).</p>
+<p>
+<textarea id=""""x""""></textarea>
+</p>
+</body> </html>
diff --git a/content/html/content/crashtests/382568-1.html b/content/html/content/crashtests/382568-1.html
new file mode 100644
index 0000000..c10c71f
--- /dev/null
+++ b/content/html/content/crashtests/382568-1.html
@@ -0,0 +1,9 @@
+<html class=""""reftest-wait"""">
+<head>
+<script>
+setTimeout('document.documentElement.className = """"""""', 3500);
+</script>
+<body>
+<iframe src=""""382568-1-inner.xhtml""""></iframe>
+</body>
+</html>
diff --git a/content/html/content/crashtests/crashtests.list b/content/html/content/crashtests/crashtests.list
index 45a200a..c2e99d0 100644
--- a/content/html/content/crashtests/crashtests.list
+++ b/content/html/content/crashtests/crashtests.list
@@ -5,6 +5,7 @@ load 324918-1.xhtml
 load 338649-1.xhtml
 load 339501-1.xhtml
 load 339501-2.xhtml
+load 382568-1.html
 load 423371-1.html
 load 451123-1.html
 load 453406-1.html"""
ee3e8550239c07f0c98ee37dcd176c2107e1c765,47119,382444,Bob Clary,"bug 382444 - crash test by Martijn Wargers.
",1240592899,"""diff --git a/layout/xul/base/src/tree/src/crashtests/382444-1-inner.html b/layout/xul/base/src/tree/src/crashtests/382444-1-inner.html
new file mode 100644
index 0000000..d59a2e7
--- /dev/null
+++ b/layout/xul/base/src/tree/src/crashtests/382444-1-inner.html
@@ -0,0 +1,15 @@
+<html>
+<head>
+<title>Testcase bug - Crash [@ nsINodeInfo::Equals] with underflow event, tree stuff and removing window</title>
+</head>
+<body>
+<iframe src=""""data:application/vnd.mozilla.xul+xml;charset=utf-8,%3Cwindow%20xmlns%3D%22http%3A//www.mozilla.org/keymaster/gatekeeper/there.is.only.xul%22%3E%0A%3Ctree%20style%3D%22overflow%3A%20auto%3B%20display%3A%20-moz-inline-box%3B%22%3E%0A%3Ctreeitem%20style%3D%22overflow%3A%20scroll%3B%20display%3A%20table-cell%3B%22%3E%0A%3Ctreechildren%20style%3D%22%20display%3A%20table-row%3B%22%3E%0A%3Ctreeitem%20id%3D%22a%22%20style%3D%22display%3A%20table-cell%3B%22%3E%0A%3C/treeitem%3E%0A%3C/treechildren%3E%0A%3C/treeitem%3E%0A%0A%3C/tree%3E%0A%0A%3Cscript%20xmlns%3D%22http%3A//www.w3.org/1999/xhtml%22%3E%0Afunction%20doe%28%29%20%7B%0Adocument.getElementById%28%27a%27%29.parentNode.removeChild%28document.getElementById%28%27a%27%29%29%3B%0A%7D%0AsetTimeout%28doe%2C%20100%29%3B%0Adocument.addEventListener%28%27underflow%27%2C%20function%28e%29%20%7Bwindow.frameElement.parentNode.removeChild%28window.frameElement%29%20%7D%2C%20true%29%3B%0Awindow.addEventListener%28%27underflow%27%2C%20function%28e%29%20%7Bwindow.frameElement.parentNode.removeChild%28window.frameElement%29%20%7D%2C%20true%29%3B%0A%3C/script%3E%0A%3C/window%3E"""" id=""""content""""></iframe>
+
+<script>
+function doe() {
+window.location.reload();
+}
+setTimeout(doe, 500);
+</script>
+</body>
+</html>
diff --git a/layout/xul/base/src/tree/src/crashtests/382444-1.html b/layout/xul/base/src/tree/src/crashtests/382444-1.html
new file mode 100644
index 0000000..8926cf1
--- /dev/null
+++ b/layout/xul/base/src/tree/src/crashtests/382444-1.html
@@ -0,0 +1,9 @@
+<html class=""""reftest-wait"""">
+<head>
+<script>
+setTimeout('document.documentElement.className = """"""""', 500);
+</script>
+<body>
+<iframe src=""""382444-1-inner.html""""></iframe>
+</body>
+</html>
diff --git a/layout/xul/base/src/tree/src/crashtests/crashtests.list b/layout/xul/base/src/tree/src/crashtests/crashtests.list
index a361086..026380f 100644
--- a/layout/xul/base/src/tree/src/crashtests/crashtests.list
+++ b/layout/xul/base/src/tree/src/crashtests/crashtests.list
@@ -3,6 +3,7 @@ load 309732-1.xul
 load 309732-2.xul
 load 366583-1.xul
 load 380217-1.xul
+load 382444-1.html
 load 391178-1.xhtml
 load 391178-2.xul
 load 393665-1.xul"""
081145fa5da0bb07239221ca82976e343433b88c,47120,381167,Bob Clary,"bug 381167 - mochikit test by Martijn Wargers.
",1240592898,"""diff --git a/layout/xul/base/test/Makefile.in b/layout/xul/base/test/Makefile.in
index 7c7fc50d..55825ff 100644
--- a/layout/xul/base/test/Makefile.in
+++ b/layout/xul/base/test/Makefile.in
@@ -44,7 +44,8 @@ relativesrcdir  = layout/xul/base/test
 include $(DEPTH)/config/autoconf.mk
 include $(topsrcdir)/config/rules.mk
 
-_TEST_FILES = 	test_bug393970.xul \
+_TEST_FILES = 	test_bug381167.xhtml \
+		test_bug393970.xul \
 		test_resizer.xul \
 		window_resizer.xul \
 		test_bug477754.xul \
diff --git a/layout/xul/base/test/test_bug381167.xhtml b/layout/xul/base/test/test_bug381167.xhtml
new file mode 100644
index 0000000..379d6d7
--- /dev/null
+++ b/layout/xul/base/test/test_bug381167.xhtml
@@ -0,0 +1,51 @@
+<html xmlns=""""http://www.w3.org/1999/xhtml"""" xmlns:xul=""""http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"""">
+<!--
+https://bugzilla.mozilla.org/show_bug.cgi?id=381167
+-->
+<head>
+  <title>Test for Bug 381167</title>
+  <script type=""""application/javascript"""" src=""""/MochiKit/packed.js""""></script>
+  <script type=""""application/javascript"""" src=""""/tests/SimpleTest/SimpleTest.js""""></script>
+  <link rel=""""stylesheet"""" type=""""text/css"""" href=""""/tests/SimpleTest/test.css""""/>
+</head>
+<body>
+<a target=""""_blank"""" href=""""https://bugzilla.mozilla.org/show_bug.cgi?id=381167"""">Mozilla Bug 381167</a>
+<p id=""""display""""></p>
+<div id=""""content"""" style=""""display: none"""">
+  
+</div>
+<xul:tree>
+  <xul:tree>
+    <xul:treechildren/>
+    <xul:treecol/>
+  </xul:tree>
+</xul:tree>
+<pre id=""""test"""">
+<script type=""""application/javascript"""">
+
+/** Test for Bug 381167 **/
+
+SimpleTest.waitForExplicitFinish();
+
+function closeit() {
+  netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');
+  var evt = document.createEvent('KeyEvents');
+                                 evt.initKeyEvent('keypress', true, true,
+                                 window,
+                                 true, false, false, false,
+                                 'W'.charCodeAt(0), 0);
+  window.dispatchEvent(evt);
+
+  setTimeout(finish, 200);
+}
+window.addEventListener('load', closeit, false);
+
+function finish()
+{
+  ok(true, """"This is a mochikit version of a crash test. To complete is to pass."""");
+  SimpleTest.finish();
+}
+</script>
+</pre>
+</body>
+</html>"""
b302842ccc0ff9263d1b7a17edba2545b19fa2d5,47122,378325,Bob Clary,"bug 378325 - crash test by Martijn Wargers.
",1240592898,"""diff --git a/layout/base/crashtests/378325-1.html b/layout/base/crashtests/378325-1.html
new file mode 100644
index 0000000..3742687
--- /dev/null
+++ b/layout/base/crashtests/378325-1.html
@@ -0,0 +1,26 @@
+<html class=""""reftest-wait"""">
+<head>
+<title>Testcase bug - Crash [@ PresShell::FlushPendingNotifications] when removing window on focus and then reappearing again</title>
+<script>
+setTimeout('document.documentElement.className = """"""""', 500);
+</script>
+</head>
+<body>
+<iframe src=""""data:text/html;charset=utf-8,%3Chtml%3E%3Cbody%20tabindex%3D%221%22%20onfocus%3D%22top.doe2%28%29%3Bwindow.frameElement.parentNode.removeChild%28window.frameElement%29%3B%22%3E%0A%3Cscript%3E%0AsetTimeout%28function%28%29%7Bdocument.body.focus%28%29%7D%2C%20200%29%3B%0A%3C/script%3E%3C/body%3E%3C/html%3E"""" id=""""content""""></iframe>
+
+<script>
+function doe() {
+  if (!document.getElementById('content')) {
+  var y = document.createElement('iframe');
+  y.id = 'content';
+  y.src = 'data:text/html;charset=utf-8,%3Chtml%3E%3Cbody%20tabindex%3D%221%22%20onfocus%3D%22top.doe2%28%29%3Bwindow.frameElement.parentNode.removeChild%28window.frameElement%29%3B%22%3E%0A%3Cscript%3E%0AsetTimeout%28function%28%29%7Bdocument.body.focus%28%29%7D%2C%20200%29%3B%0A%3C/script%3E%3C/body%3E%3C/html%3E';
+  document.body.appendChild(y);
+  }
+}
+ 
+ function doe2() {
+ setInterval(doe, 200); 
+ }
+</script>
+</body>
+</html>
diff --git a/layout/base/crashtests/crashtests.list b/layout/base/crashtests/crashtests.list
index 4452594..c06143d 100644
--- a/layout/base/crashtests/crashtests.list
+++ b/layout/base/crashtests/crashtests.list
@@ -132,6 +132,7 @@ load 374193-1.xhtml
 load 374297-1.html
 load 374297-2.html
 load 376223-1.xhtml
+load 378325-1.html
 load 379105-1.xhtml
 load 379419-1.xhtml
 load 379768-1.html"""
862af76a86824e162a66985d1347e1e579b61b79,47124,375399,Bob Clary,"bug 375399 - crash test by Martijn Wargers.
",1240592898,"""diff --git a/dom/base/crashtests/375399-1-inner.xhtml b/dom/base/crashtests/375399-1-inner.xhtml
new file mode 100644
index 0000000..46573b4
--- /dev/null
+++ b/dom/base/crashtests/375399-1-inner.xhtml
@@ -0,0 +1,12 @@
+<html xmlns=""""http://www.w3.org/1999/xhtml"""" xmlns:html=""""http://www.w3.org/1999/xhtml"""" xmlns:xul=""""http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"""" xmlns:svg=""""http://www.w3.org/2000/svg"""">
+<svg:foreignObject x=""""0"""" y=""""0"""" width=""""100%"""" height=""""100%"""">
+<xul:tabs onselect=""""window.frameElement.parentNode.removeChild(window.frameElement)""""><xul:tree id=""""t""""/></xul:tabs>
+</svg:foreignObject>
+
+<html:script>
+function doe() {
+document.getElementById('t');
+}
+setTimeout(doe, 200);
+</html:script>
+</html>
\ No newline at end of file
diff --git a/dom/base/crashtests/375399-1.html b/dom/base/crashtests/375399-1.html
new file mode 100644
index 0000000..8e50c7e
--- /dev/null
+++ b/dom/base/crashtests/375399-1.html
@@ -0,0 +1,11 @@
+<html class=""""reftest-wait"""">
+<head>
+<title>Testcase bug 375399 - Crash [@ nsElementSH::PostCreate] when removing window when accessing xul:tree in xul:tabs onselect in svg:foreignObject</title>
+<script>
+setTimeout('document.documentElement.className = """"""""', 500);
+</script>
+</head>
+<body>
+<iframe id=""""content"""" src=""""./375399-1-inner.xhtml""""></iframe>
+</body>
+</html>
diff --git a/dom/base/crashtests/crashtests.list b/dom/base/crashtests/crashtests.list
index 436fb1c..c0f0d75 100644
--- a/dom/base/crashtests/crashtests.list
+++ b/dom/base/crashtests/crashtests.list
@@ -11,6 +11,7 @@ load 369413-1.html
 load 371124-1.html
 load 371124-2.html
 load 372554-1.html
+load 375399-1.html
 load 404869-1.xul
 load 462947.html
 load 439206-1.html"""
705d25578698deea5117a0cbe1954babb08e402f,47125,374810,Bob Clary,"bug 374810 - crash test by Martijn Wargers.
",1240592897,"""diff --git a/modules/libimg/png/crashtests/374810-1.html b/modules/libimg/png/crashtests/374810-1.html
new file mode 100644
index 0000000..40fe1cd
--- /dev/null
+++ b/modules/libimg/png/crashtests/374810-1.html
@@ -0,0 +1 @@
+<img src=""""data:image/png,%89PNG%0D%0A%1A%0A%00%00%00%0DIHDR%00%00%00%C8%00%00%00%C8%04%03%00%00%00_v%B3%AD%00%00%000PLTE%9D%0B%08%1F%20%1E231%3F%40%3EOQNefdnpm%7F%81~%97%99%96%9F%A1%9E%AE%B0%AD%CC%CE%CB%DE%E0%DD%FE%FF%FC%00%01%00%0F%11%0Di%C4%2B%A9%00%00%00%01tRNS%00%40%E6%D8%0f%00%00%00%01bKGD%00%88%05%1DH%00%00%00%10acTl%00%00%00%0B%00%00%00%00_v%B3%ADi%C4%2B%A9%0D%7Biv%00%00%09RIDATx%9C%ED%9C%7Dl%1Bg%1D%C7%7F%8E%ED8%CE%F9r%99x%1B*k3%95n%7Ft%0D%A1%A1%A4UI%14Q%10%8C%0D%16%A6%F1%07bJ%B32%40%1A%D2%9A%B5%EB%3A%A8%D6%1A1i%7FtL%E9%10%FFP%91%1A%A11%ED%0F2%B7i%95i%DE%1C%0B%26U%02%AD%98l%EAx%99%8A%9Bvi%DAd%97g%0C%8DVE9%9E%B7%7B%B3%EF.%CFs%F6y%DA%C8%CF9%FB%9E%97%BB%CF%3Do%DF%E7wO%7C%06%A8%B6%0E%C7%FEO%BF%C0%3E%2B5%B9%EA4'%A4%D8%D3%18%88%5Em%B3%8E%C4%EE%9CO%269%0B%BC%80%D6%A5%7C%9DE%10%B0%89%BD%D1CR%FF%8AG%0Fi%D1%9BP%12(%9Ch%02%04%3A%1A%04%09%3CM%B1!%90'%E0p%D0y%8A%8D%60(w%C0%9B%D7%03%D2%CF%EC%2F%D5%0FI%E2b%7C%2B%20%3D%B1%3CR%3F%24%8E%B7%23%F5%9FfeHC%EA%3D%C8%12%B8%BA~%135%24%DD%03%E5%AFF%0DQ7%C0rO%E8%A3%DBG%C5%F2%BD%0Ec%A1%19%B0%7B%BBX%BEc0%18%9A%A1%5C%FF%7DI%24_r%00%A4j%EB~%A7%3C%A4%86~%FB5%91%83~%B2S%0A2%F3%C0%0F%1D%A1D%EE%D5%1D%02%07)%0B%EB%E1%AA%04%E4qx%C5%11Jf%D5%B7%04%0E%8A%0D-%C0%F4%9D%E2%90%EDp%0EZ%07%CDP%BA%A7mA%E0%A0%F1%3Fu%822%F0ia%C8%1Dp(%F3%99%9C%19%CA%CC%1D%12%E9%C3%3B%D2r%83%E4%E7Ss%CFo%B4B%F1%E1%1F%8B%1Ct)5%24%C3P%EF%D37%5C%B3%83%FB%9E%12%99%D2%94%2B)%C11%CB%2Cq%B1w%5B%D9%0E%F6%AC%13%19%C8%CA%A2%24d%D1%19j%BFsN%A4%1E%14%24%07%99%D0%9D%C3%24%F9%E8%8D%5D%02%07%A9y%0C)%BC%2C%CAP%8D%D3%CB%B7%DB%CD%10%7Bv%7BE%E8%B8%D4w%40_%1A%14%84%A4%16%E0%AFw%CD%DEk%06%3B%A6%FAE%86%09%40%9B%0E%1BAPK!F%DAy*k%06%8BS%5D%97%C4%0E%9C%04%ED%85M%82%90Iw%B08U%E9%15%3C%12%E2%FF.%AF%9C%89%DA%14%C0%1F%0F8%20%85%C5%DD%A2%90%E7%07Es%9E%84_%9F%DF%60%07%CF%E4%173%A2%87%BE%2B%DC%8B%13%BB%B6%E6%1DU%D6%D2%BF%BE%E4%97%F5%25%D5%99t%02%DE%10%86%A8%FB%B6%FCj%AF3b%E6%B2O%CEV%FD%9B%D9%87%0Ffy%E8%95K%10%CF%89B%C4%ED%E0%93kwe%E3%5C%0F%D2%E7%F3pN%B4%DD%25l%1E%BAg!1%C2%02%1D%FD%00%BFh%3C%03%DEV%DE%99-'x%3B%A4%AE%00%049%F5am%B1u%EF%DA%B1%E9%2C%0F%3D%9E%86%91%08%20%0B%DAk%5B%F4Y%AB%1D%C6%23%40%00%7C%F9%A1%13%07%E6%BB%CCP%E6%3F%91%40%5E%D7%F5%BE%CB%D6%B8Mv%06%DF3%86%B4%17t%5D_%3A%96%E5!%AD%0F%A4fyA%D37%8D%8F%8E%FFm%9E7J%FB%8E%DA%B5%99J%FD%90K%AFI%2C%E0%84%86t%E0%B9%1D%94R%24'7%EDZ%C7%CAy%EA%B7%F7%05%12E%C3C%BC%09%0D%BFj%AB%B6j%0D4%03Id%C6y5y%84%06%12%0C%24%93%B9%E9%10%8DT%17%02%03%0C%03%13I%5D%E0%18%12%89%0C%92%8Ew4%BE%917D3%19%B2%10zq%F8%94%1A%D28%84%9D%1C%0C%8D7%80%C1_%F4ZH6%E9%E2%D8%10%00%C4%20%C8%8C%E7%10D%03l%8Ff%0C%09%D1%B4*%08%AE%3B%D6%00%B8%9A%0C%C3%A0%9B%05%09Y%5D%1A%3D%BD%0D%D1%CC%92%D8E%05%1B%02%B2e%E1%10%DC%9E%B4U%C85%1A%24%D6%B0!%3C%CE%0D%91%C2%F0%1AF%B4%86p%BB%02%EF%5Df%9B%D0%9Ee%D0%8D%D4%1D%85%90%FD0%7DY%F6%98%10%C3%1E%B4p%83L%C0J%F6%AElw%11%B7f%FC%1B%EB%FD5%EFF%8D%AC%D5%82%20!%D4%25Z%88F%86%BA%C1%86%B2%C6D_%A3C%90%C9%B2)%F9d%18%D2%D1jP9%23%8A%AF%89O%A9%9A%25!H%B3%F4%98%08%3BW%19%A6%F1Ts%90%C6%B5%07%D84%20U%12%AE%E5%F4hS%CB5%06A%A6%B6%819%178%B4KfJ5%5C%10*%FAD%D8%11BL%E5%5D%10%83H%3F%92%87%A0*%88y%F1%A4%FAL%95w%96%C2%9A%D0%24%20%06%B2%9B%00%98%E8%5B%CD%C0%E7%5C%ABMX%B3%85%80h%5C%CF%11%BFLD%3D%056%BF%D0%1D%C4.%C5%EC%5Df_%94r%D8%C2%88%B6%B4E'%C0%B6E7%93%ACZc%8Du%5B%AA%87d%DC%D0%DE%1B%19%04%8F%15%EE%86%D7%D7%3FL%99%A7%E2M%AFY%A3%0A%C5%05%07%19a%9C%DF*%E3%9Aj%EB%06%D1s%AEW4%1E5%10%E2%D6r%13B%D5%98%EExs%F4%0Bb%14%03%F9%40%0C%26%C7%B8%26%03%D4Pt%BDK%F3%830q%C4%82%D8%18%88%E6~%01%9FGp%83%B0%3B%3D%FF%DE%25%061e%DE%D9%BB%D8%9D%22%A2%FD%8BBxl%1D%25%E1%C5%09%25%FA%A2%0D_%17D%CE%9A%02%F9%F0Xuu!%9F%FDp%0A%A3yA%D0%07%15%C2%E4%9Dm%40%BD-%B2P%C3g*%EEq%D9%DE%BF%E1%9C%14%C4%98%1Au%0F%C1!%F4%60.%D4P%7F%D1%99%60y%9An%87R%0C%E2%12G%C7B%0D_%C1%B1%12%98%B3_%E5%E0%87%80%B0%5B%1E%06%A1%F3%A3%E5%CB%23%B6%8Ac%03%88%C7%1A%16%82%1C%25%01%2B%91O%C6U%A5%90%818d%9EM%81%F6%8D%17XUop%1F%DF%D9%1E%C2%10%C3p%F6.v%1C%5D%A8%01%E6N%B0%DE%85%98%F7o%B8z%97puy%94%ACA%99%02L%C8%8B%AB%13%22%D6%F3%FF%7F'%05%E9%95%D1P%90%95%D3%EB%BF%17k%0A%C4%1C%8B%88%DF%C2k%C4%8F%A7%1B%5B%BC1%EF%B1%EB2%8D%2B%3DX%8B%CE%86%F5%0Av%1E%E5%20%96%04%3A%97s%EC%AD%B1%10%B3%BA%22%858%A7%26'%A4~%B3%17%CA%18%C4p%BD%04%20g%F5%AF%0B%40%2C%97%9D%2F%D6%BBz%17h%2B%F5%AE%BDpJ%A40Uf%FF'C%C8%AEC%98%C7J%24!%15h%ED%8C%1Cr%13%B4W%E4!%92%F6%BDr%BC'r%C8%99O%0C%0FE%0Ei%BF%B0%24%F2%DD%EB%FALYX%FC%C6H%E4%90%8BC%13b_%5D%0Dk*%FE%5B%CA%17%A3%AD%AF%C4%85%3C%5C%80%89%EEH%FF%A9%14%FF%E5%BB%E5%05%18%9E%0C1%1C%C5-14%BD%06%D4ee%3EJH%1A)7%40%EB%5B%B03J%88%BA%003%A3%E3%A3P%1C%8B%12%F2N%EF%E6%F7.%03%B4t%F1%88(%BEzu%9F%CCC%93am%DDp%B9%3DGv%A2%AC%AEO6%E3%EBpG%9A%019S%FD%80Y%14%0D%1F%FBn%13%1A%3E%CC%F4.m%99%2BM%80%C0%96f%40%8A%A5%26%40%E2%D1%3B%11%003%A2%0Fi%D4c%0F5%81%01%DB%9A%01%F9%F0%7Fcd%D5%3E%80%F6%CC%A9%B1%18%D0_%7B%88n%DESo%82%DBN%12H%E1eYH%06r%829%D3%230%F5m%FCyq%FD%E6%A7%24!%007%0B%8E%CEd%0E%E2X%F6T%3C%1F%3D(%0D%99%F8%AFX%3E%7C%5B%FEg%7C%3D%A9%0A%C09I%D5%98%06%5DP%95%139%20%B5%15%C7%90%8EQ9%C8fxR0gzP!%EEA%82%40%B2r%90%BE%C0TW%B5%7Cq%80%04%DB%B0%E7%D9%91%93%83%7C%3F(Quy6%CA%F1%DE%DE%CF%1F(%DC%06p%7C%AE%2C%059%1E%94X%F5Tp%9C%BE%17%BF%B2%E7%ED%3F%C8%3C%5BM%0E%1C%018%FD%A8%F7%95%25%DD%0D%DCB%DF%D5%FD%3F%C2%D7%B6%D1%2B%BF%9F%A9%F0%B1%F2%D9%8F%3F%5C%EB%F1%3D%87%B7%98%BB%AB%C6%1D%FB%87e%20%00g%AF%DER%F6x%B6%ED%9F%25x%E3%A0%BB%80%F1%9AL%C2%A6%90%DF%A3%F8TMtr%0C%EE%D9%D5%D5(%C8%F4Q%F2%94q-%BBS%E9T%DD%0FE%86%5E%DC%CC%C0%1A%FCn%3F%F3n%DB%B6%B6Q%F8%9C%2B%26%B4%C2%B7%02i%F3X%B66e%FA%F4(%B8%1E%F6%0C_%5D1z%EF%E8%E5%1F%A7o%1D%82%FB%DD%90%B0%DE%D44%7D%FF%92W%D2%D3%F3%2F%5EsE%C4%7F%F7%C4c%A1%20%CF%90%B7%CC%7C%C1%23IY%BB4%E2%8AH%AD%EB%DB%E7u%8E%A9%FD%3F%0B%86%3CBO%A7%EB%9E5%D1%EF%0Ef%0Aw%7B%3E%F5%DAW%B8'%B0%22'u%D8%EA%2Fv%0FTG%A4%0Fz%9D%AD%07%5E%AA%04A%D6%FF%03%F6%F8OZ%8FTG%24%1E%2Cyd%EB%F7%1Ag%0E%23%BF%0F%B0%D57%F5%E9%EA%88%9D%7B%BC%B2%1D%3F%BC3%87%3FR~7%8Ad)%F2%07%BE%90bUM%26%E7o%F7%CA%96%B9%FB%3C%F98r%D2%A7e%F4%1C%A8%FE%0F%FE%9E%CB%B9%C3%C3%A3%DE%F7%E73K%25%DC%7B%E6%8E%FA%2Ci%DF2%00%9F%F5%BF%87%8C%8D%B4%3B%2F%EE%E4u%C5%F34jw%1F%1E%D1%A9%8Ft%FB%2C%D1%1E*%C3%A4%7F%EFJl%DA%B0%DBNM%CD%96%DA%3C%2Fh%E6%BD%03%B8%84'%F2%99%81%C7%DE%F4J%FF%CB%10(%83%BE%90%D4%F9%7CK%D6%0AM%AC%81%96%8F%96js%FD%DD8z%F5%C6%C2%A99%DC%86K%9E%3F%13%82%FB%5E%CD%02%8E%FD%B5)%E52hlYl%A0%26%97%94%E1%CEQuu%B6%A2%AB%CBc%C7XuU%7CK%CB%EC%D9%15%D2k%CC9ml%E7%8FQ%AF%04Y%C1%FE%07o%F8A%AA-%A1%E6%92%00%00%00%19fcTl%00%00%00%00%00%00%00%C8%00%00%00%C8%00%00%00%00%00%00%00%00%00%01%00%0A%02%94'%03%1A%00%00%00%07tIME%07%D7%03%10%13'06*4%98%00%00%09%FAfdAt%00%00%00%01x%9C%ED%9C%7Fl%13%E7%19%C7%1F%9C%B3%7D%B1%CF%17%CARu%A0%8C%98%B6%ACe%A2%FC%A82Z%AD%40L%E3B%60%2Cf%1B%9DhG%87)%EA4%8D%AC%09P%B6I%9D%C6%A5%FCJiJ%A2%89J%FC%01%E5%A0%D34ihN%A7%89U%FBc9%13%83%C2f%E2%AC%B4%1A%D3%D8r%10RX%D7.8%09%E4%97%C3%ED%CE%B1%E3_w%E7%E7%3D%E7%22M%CAW%89%7D%EF%FB%3E%EF%FBy%7D%AF%EF%7D%DF%7B%EE%7D%0D%90%AD%92%B4%E3c%DF%98x%BF%93cU%A0%D2!%11%CF%D4%40%A4l%0D%A4%25V%B6j%18%91I%B7%02%F6%A8P%E0G%40%A8%ED%80%F9%10%FA%0B%94%F9%90%22i%1A%3E%09%84%DB%A7%01%02%25S%04%D1-%262%25%90%E3pB%AF%9C%C8T0%98%AD%F0y%99NzwcW%E1%10%9B%00%F0%7D%9Dtky%7D%E1%10J%FE%3FSx1%F9!Sr%DE%F5d%15%00~o6%C4%E1%01%F1%05%B3!%EC%0A(%F7%18%CE%ED%E4pv%BD%C0%1Bf%C0%AE%8D8%BB%D3%B0%C90%83)%BB%82%BA%8Al%3E%F0%90%94%BBWH%0B%D0%FE%3F%7C%17%93%E9%17%DB%89%20%3D%AF%FF%2C-dm%FD%D7fD%26%26V%01s%09%20%EF%C0%C7i!%5B%0B%7B%0F%91%C9%E2%8FA%F0%25%3Cd%23%F4%81%7D%B2%11%1D%9E%E2%18%22S%E0%9A%1B%18%DFW%D1%90%AD%D0%E0Z%DE%9A%0C%B9%86%1A8D%A6%CD%F2%C5H%A2_v%0C%BD%BFr2D%D5%BD%85%C94L%FBI%18%ECni%C5%BCT%F0%D0)%01%91%89%19%A39%12%88%F5%AEw%83%98%0Az%16%F0%18%C88!d%3C%3D%E4%7Ci%C8%8F%81%CC%26%83%B4I%E9%97%89%ED%CDE%CB%10%99XA%86%84%3B%B1%0C%F6%81%AB%E5%2F%0A%93A%CB%07%1Bq%F3p%BA%16%A4(%B6%F7%A2c%F0%EFo%0E%FC(%19%2C%E9%A8%C1%5C%26%00%C5%12%AC%04d_%0A%16%5E~%E9hI%06%23%1D%CB%86q%19C0%EB%D2j%24%24%94%19%8Ct%DC%F1%22s%02%F5%A0%88%B4%EC%00%F8GS%1A%24%3C%BE%0B%0By%1F%3D%A0%5C%80%DF%F5%AFH%05%BB%85q%176k)%87%B5%B4%EEY%2F%A4%9D%B2%A2%9A%0A%CD1%EB2%9B%9E%D4%0E%B7%D1%10%F6%D0%DA%DF%1EH%8F%E8%19%D5%B0%B4K%2F%B7%1ClN~E%3E%1E%06%AAU%C3RE%CC%B6%91%8Cp%1D%AFn%D7%7Cr%E9%9E%16%CA%3F%11p%F4%0B%D0'%E2!%CA%A5%92%AEnN%D5%8A%1D%81%CA%01%B0%26f%B8%255%00%BF%22%60%00%9Dy%8D%2FW%3F%0B%CC%7Df%CE%80hM%D4%80%1E%03%D0%9B%D4%E7%C86%3B%3D%E4%A8%10%D4!%E3%F6%03K%F9%60%B2M%DEq%00%D1%B4%3D%E8I%0FY%02%EA%1066%EB%E6Zi%40L%86%03%24%08%B0%0FnI%2F%B6M%EBF%EC%3Bo%B47%8DLv%D1%AE%2F%12A%EA%3C%19%C1%DDZ7%04%BD%92T%3D%3Ay%DD%DA%DC%FA%F7%8C%99r%0C%8B%19a%AF%16%E4%92%24I%D1%D3%C96%99U%0D~%3C%C4%16%F5fT%E9%91%C8QU%BBbiu%80%0B%7C%3A%92%A8%92ss%AEoF%AD%FF%D6%F2%CCDU!%F4%F0%CD%7C%0E%9C%92%DC(%0DWT8%D4%A7%1A%EF%1C%96%CB%60%80%D1%99%8E%E3!%EA%B6%B2%E6i%C4O)D3%DETHA%0D%3F%A8%01%A1%08%3Cw3%9A%D1%8Cf4%A3%2C9%1B%09%26%C8%86!%DER%D1%7C%0A%04%B9i%80%D8%3D%D3%00%A1%DD%26%03%AE%5DZ%07%1F%1AwM%A2%C4%94zO%09%DB%04s!%96z%B0%BC%FA%A0%B9%0C%F9%D6%19l%D5%F3a%0A%9Ei%E8H%BE%E9%B0%97%B7%C2%9A%96%FC%A6%C6UR%0F%1F%0E%C9S-%A4%E3%C4%98%1C%83%87%97%0B%00%C3%CBE3)%17%7C%FDr%83%BC%10!%FF%16%B3%AF-F%DB%B6y%FD%F2%AD%B7%7D%24%AFa%B6%ECo%7F%0Bm%DB%F07%B9%FC%EB%FF%5Dpm3Y%E3%3B%7F%0D%01%1Ek%FC44%D7%82%7DYd%CD%A0%88'%1C%F0z%2Bc%40qHs%D7%7D%F9%AE%AF%C2%5B%E6(%F7%E3%190%B6M%AA%1D%03%3B%16R%2C%B7%F8%ED%A5%D1!%F8%8C%E4%82%F4%F5%BF%0D%83%C2u%01i%5E4%D1%12%01%A2%06q%CE%A9%07%B8W%8Ey%0C%11W%F7Dm%AC8_iB%96%A62%0E%C6%F0%F6%FB%26%DE%98%BB%24%90%12%08%B8a%1D%DE%FE%91%C4%7B%A5H%00)%E2%B7%FB%A1%01m%CE%0C%25%0E%EAH%A6%2C%CC%C2G%1F%96%AA%FCXs%F6d%E2%A0%99%23%80%C0%8D%C0%CE%F6W%7D%D5%24Y%14%B5%11A%E0e%A8%13%5CaRH%84%0C%F25%03%9D%1D)%84%99%7FZ0%1DB%BD%B5%CA%00C%07%C2%AE%C9%7DRq*%C4%1B%81%04j%B5R%EC%AD%B6%9C%B8%3A%A9T0%00i%93%BE%A4%91R%222%9Ff%C7%FD%FD%DD%E3%22%BE%EC%12%15G%0D%97i%12%01%B8%19%3F%A0Tl%F5%1C%3B)H%F2%80I%C5e%B9%A2%FA%00%0E%02%B3%CC%5C%7F%17%C5%7DR%E6%AC%AC7%17%C2H%2B%FE%D9%5C%ABS%D8T%40%AC%D1%CA%E8%CF%F5%0A%CB%0F%C9%DF%F0E%AB%98%CB%F1%03%C3%0D%8FP7%99%F7%DD%98%827%F13E%C3%0AA%F3%D7M%87%5C%01W%83%A9w%16%8A%A6aQ%A1%3C%C9%22%98%FB%18S%F8%CF%C30%CA%9B%CB%E8%ADx6%BA%F2%CENS%19%EC3%E0%DA10%FB%03S!%B4%3C%1B%BF%E1%F3%FF%D4D%82%DCc%08%F2%DBa%C1%DC%8BQY%E3I%BB%8B%3D%E6Bx%00%DB%9Dv%D1%5C%88%3C%F1%09%C5%B0%2B%1E%8CB%22%5B%F6%CF%8F%95%A2V%8F%19%87%B0%8DG%1Cf%3F%DCQ%C6%3C%B2u%3B3%90%19%C8%0C%E4%FF%19%12%EE4%1F%D2%5BQu%1C%01%B9%25%7D%AF%00%C83%00%BB%10%90%03p%B1%00%882%C6%23%20e%86g%80%891%9EB%40%EE%80%DDm%0C%02%133T%0A1%0F%5E%02N%E3%BB%95(%1E7%15%FE%B1Hy%8CC%9E%C0m%18%E9~%BC%CEo%1C%D2%BCe%FF%00%02%E2%1C%8C%A2%9D%9E%99%A2G%80%EAl%3C%829%5DLl%7C%9B%B1%1D%1F%3B%7B'%1A%1E%03%B9%EBo%23r%C7%26%E5%E4%E8%16%14%84%95%FF%A2B%C4%D0%F9%B2%8A%EC%12%14%C4%3A(%C0%20%B4U%E6%B3S%13%05%CC%7C%14%84%FAM%A9%18%83%BA%90%DB%00%C4%D6U%C4%E1%3E%89%3F%B8%18%D8r%C6%88S%92%AD%BC%87kx%C7l%E6a%B0%DF%83%ED%06%20%E0%9C%8F%83%B01%E8%E1%02%1CDx%03%90%9EE%13%90%1F46%EAC%E6x%AB%1E%1A%05(J.SD-%BDJ%E8%F4%93%22%0A%B2%3B%AB%C8%5C%0B%1D7%D2%B1%E7%9B%02%F5%F9O%17%B3%A0Nt%C6%1D%FD%BC%96%89%0E%24%D4.Uq%E1%CE%7C%90%E0W%0C9%D5%12%BA%02%9F%DC%DE%5BQu%2C%0Fd%EB%99B%20%96.%D7%C21%80%7Dy%20%7Cw%F6RO%92%86w%3E%06%ED%CA%18%9F%EF%C1%8A%E5%B5%7C%0D%AF%A7%F5%9B(%0E1%C6%170%BC%CB%3AW%AB%ACg%CE%3B%C6%BB%0A%F2%22Y%8E%2B%B3%C7%FC%E3%C9%DAB%20t5%8D%1A%E3%23%85%ACKp%C5h%1Ff%8CO.w7%24%FB%E3%F4Q%CC%18%DFS%88%CB%A2%3D%84k%937%0A%60%B8V%1D%C2A6%14%00%B1%09%1B%14%88%25o%B3%E6%AD%85%8E%FA%3AG%2Fr%08w%7FA%FAH%EE%22%FCfC%9C%7C%FC)%87%B9%10%BAe%1A%20v%C1l%08s%19%A8.%B3!%E7.%F2%160%19%C2.%81U%17%14H%B8%93%14%E2%02%EC%F2%01G%3Dt%FCP~%BF%5BQu%8A%10%02%F0%A4%80%B3%B3%B5%02%25w%7B%EC%D8%E4J%0D%02%B5i%3D%E0%CD%92%DCa%FDU%98%D8%15%D4%87%ACWRA%90%90%BD%B2%B5%15%94%B3E)%0D%CF%91A%AA%E0d~%A3%B8%1C%9B%18%B7%C2R%20%84%CF%B3%F4Wg%08%E9%81o%FB%94%601%2FC%08%97%C7%FED%2F%91u%A7%87%98%F3%5E%EF%BA%A6%F0*%80%F3C%22%11%E4%BC%5Eb%D6%AE%60*%FE%1A%D9%B2%FF%FEG%24%7B%AB%95%8C%F2%2C%FD%EA%9B%EA5%B3q%19%C1%A2%F8%2B%DBxD%AE%DBJ%15sM%B1%F0e%F1%D6c%07%DD9%09%7F%94%FF-BV%85R%3AA%02%01%B85%F7)Qeo%DB%F5.%B8%DD%2CjB%08%C5(%BFG%F1DN%B4%8D%87W%F6d%EE%EB-%00%12%3C%AB%EC2%CEe%BB%197%9B%B9)r%96Q%84%0B%94%E7l%A9%3D%EF)m(%E6%E0%B9%8C%18%C3%3D%BC%1D%DC%F2%ABE%E5%12%0E%5E%E5%20c%B3%A7%F1%D3e%89%DF%3B%AA%CD%8F%1DO%FBao%26D0%08%09%C6_%9FWKzo%E4%2F%F32%22%A8%3F%1DW%DF%2B%97O%E7%94%17%D7%88%DA%DA%2Ffi4%D3%2BF%2F%A8%3E%A4VFG%E3%BB%FA%90%C3%F1%E2%E2%8E%D8%5C%D5d%06%5D%E1%1D%AA%BB%5E%AB%C3%AF%A8fO*%24%C1z%B5%7C%13z%3D%3B%C2%D1%ACV%9A%07.%EBzg%2B%3E%83%FD%DA%83%D6%E1%EC%08%EB%3E%B5%A9v%8D%DAu%96%26%E5%F7%01%D6k%A6%BE%97%1D%B1%7D%BF%9A%D9%F9%13%DB%95%01%86%D6%BAQT%5C%91%DA%8F%D6%23bf%D86%F2%A2%9A%99kG%BF%F2v%E6%82%A0%5E%8C%D4%0A%AC%F6%C6%DF%BE%AC%11%B0%8Es%AB%DA%F5D%BB%945%9Ag%3D%EA%C5%3C%E5%83g%FD%9A%10K%BD3%BDr%17%CA%18%D5b%D8%CAj%5E%3E%5B%8FVj%B8h%1BD%08%89%9A%10%EB%EA%15%BBR%A9%F4%40W%B1j%85z%1Ejr%CB%B7%93%82%CBw%F4s%B5%F4%1B~%60%B4%17%9D%D3%FDBQ%AAWk%5B%0CE%0BU%BE%5D%FFy%E0%EC%DCE%E1%8BCr%1BFU%7F%26D%FE%EE%E9%2C%9BbFa%16%1F%3F%F2i%2C%B1BJ%FErd%D5.%D5%A3%B3%E5%FCi1~%94%EFQ%08%F1%0A%93%F4accb!W%81%BF%0E%F7%3FB%09%85%E9%1Cj%D9V%00%00%00%19fcTl%00%00%00%02%00%00%00%C8%00%00%00%C8%00%00%00%00%00%00%00%00%00%01%00%0A%02%BAw%CA%9A%00%00%0A%13fdAt%00%00%00%03x%9C%ED%9Cml%14%C7%19%C7%1F%EE%D6%F7%BA%BBg%A5%14%C2K%B0!%B4%B4%89%83%1D%C5%16%B4%25p%0EN!%C1%C1(%15%C1m%1A%7C%A5m%40%0D%89%1D%88H%3E%B4b%C1%07v%89%5B%13%8A%E0K%80%B3jW%FD%80bS%C0%FD%12%D5k%03%09%A9%AE%9C%23%DA%A6%A9%D2%B0%60%14%91%C8*%18%1B%02%B6%F1v%F6%DE%7C%B7w%B3%FB%EC%9E%D7%AD*%FF%A5%BB%9D%9Byv%7F%BB%3B%3B%2F%CF%EC%CC%01%A8%E5K%86%5CB%22t%23%C3*G%A5%40%02%13%05%91%D5%1AL%26y%FDT%23c%D2%E2sc9%5E%00J%0FM%06%248%19%90%CB%22%17%7C%DAj%88%7Bqg%F8%98%D5%10x%F2%19%B8.Y%0D%E9%0B%8A%1B%ACf%00%F0%8B%16%5B%0F%81Z%D1z%06%7B%D3z%06%7CX%3BQG%E2%7F%22%D0RJ%7D%94%14%C3r%15%8FPR%F2%96G%26%0A%D2%FD%FE%5DJJm%E5)%AD%1D%CF%8Bx%C8%1F%A1%86b%7D%B0%E0%EB%1A%FBy%1E%5D%8B%874%C2%95u%94%24%F6%9B%1A%FB%F9%FA%9F3%02q%E6S%92%F8%7B%AA%88%FE%0BG%92%E1%AB%60%13%D1%90Np%15R%92%3C%25%AA%88%0D%DB%9B%85D%F8lJ%03%AD%AB%1E%F1%C4~J%12%A3N%A8%04G%B2%C1%BF%08N%DAm%CE%D4N%99z%E7%BB%25UD%1B%B0I%88%EDxw%08%CBp%0C%88%D4%B4%D5%19%C6K%EB%13g%CF5L_%85e%40%F3p%1D-%C9%3D%AA%8A%60W%0C%7C_%F2T%C6x%E5%F8%9B%C5%CD%CC%F7%D3%D2%9C%EA%8Bl%3F%B0)%E4)%0ED%C3%D3n%0Bh%88%7B%8B%9F%5E%A6%3EN%87%B0%A3%D7%8F%2F%5Cp4%F6%23%B2%10%0FaN%D5%ED%C3%DA%BA%96w%F5%F6'%B8%ED%15%06%20g%EB%DE%C3%DA%B2%C5%0B%C6%7Flz%CD%00%A4%CD%3FM%C2Sf%25%C3%8F%06%03h%88%AB%2C%3F%2F%84%B6~*%19%E2%E5%06%3Fz7%A8%1A%C9%A8%3C%E8%AAL%86X%B9%9AV%E3)%A9K%1B%D2%BA%20%9F%17%ACy%00%0D!%0Fb%7F%2C%E4%1E%A8T%D7%9E)%3A%D3%0Bei%11%C7B%7B%D1%90J%F8%2C%EE%090O.%1E%A6%DB%FD%0E%60wZ%84k%EEU4d%87%EB%AB%BB%E2%90g%EE%D0%CF%ED%DC%80%04%DB%D3%A3%9E%08%A1!%EE%07%3F%8D7%96%CE%B1M%7F%A1Z%C9%F3E%A7%AAJ%DA6%D4%8B%858%03%8Ex%06%F2G%18%EA%ED%3A%F6m%9B%3C%24%A6%C7%ED93%17%0B%E1%FD%5D%1D%890'%0B%D9%8D%B8%19%A0%BE%0E%C5%D9%D9%84%85%C0%E1%94%EA%FDG%94%A7%D2%B1%18%BCC%EA%C8%0Dp%85rN%99%B2%0D%04%92%E1%AE%17)6%A4%ED(8%9E%1E%C7%CF%06%8FF%B9J%97%E7%FE_%25%F7%7B%EC%20%05%12%20%F5%8F%9C%9E%CF%EEy%00%F8%E2X%94%0C1sfRN%E4fQ%D5%80%AA%AB%DE-%00%FC%0C%0D%19%2F%1C%5D%7B2r7%AE6%F9%8D%DA4%EF%9D%ED%1C%94%94%BE%17V%E3%BD%E3%9A.%3F%CD%E8%87'%E4gS%7F%17%CB%1B%C1%08%C4%96%7C%84%CB%BBB4%23%AF%BC%7BSG%CAo%B9I%F9%DE%FB%5BjoB%A5%BC%ADR%3C4%BDV%A2%19%D9n%AE%9A%99%DA%CD%A8%8A%9E%CE%EE%E7%91%0Cp%25%8A%20%2F%D3%FBR%5C%D5%CC%3B)%05%3Cc%B4%E5N%96%7Dh%233%19%25..Fo%00'%9BoE%1B%8A%A2%F9a%BA%FE%D9%14D%2B%FE%BF%93%F1S%9A%D2%94%A64%A5)%E5%AA%9E%8Awr%D9%9Do%C2X5%3F1(%E6%00%E9%3B%89%F1%D8%FA%E1%04%BE%7B%9F%A9%8D%9C%88%B2%F3%DEV%BE%3D!3%0C%B2%D7K8%CB*%E5%CBv%DB%0C%24O%84%3D8%CBf%91%7C%F9%0AD%13%10F%C4%BDj%F3%1E%8D%08dc%0B%FAM%40%1C%FBa3%C2%8C%DD%5E%DE%A3%F4%F8%99%26%9A%0F%A5%A1%FE%F3%0Fx%E7!%ECZ%BF%F8%F8%2B~P%DE%FAj%8D%D1g%D7%DF%0Bd%0D_%22EkH%C6%2B%10%B6%B0E2%C8p%DD%16%23%EB%2F%60%2C_!%19%AF%40%A0%E8r%C8%20%E4-%11J%BBQ%96%D7D%A8%89%BAu%87%9C%85%06!_%03%CF(%D3%A1oG%BC%B0%C7V%16oU%02%7D%DCp%D8%18%E4%1B%60%F7%BBq%A3%D1l%B8%BFf%E6%F1p%B8%FD%E5bT%26%8E%AB6t)%C4j%0C%E5%A5%C9%FB%CE%01%D2%D9%9F~h%FA%CB%86%18%E0%1Ai%97%E0~%AC%B1%00%5C%98%DC*%03%2Fyb%FA%D7%1E%F5%88%A0%06%24~_%0D%3F%5Ep0%0C%97E%24%C4%1F%DB%BA%D1%E3F%09%D9%E5%3A%2F%EA%F1%22%F5u%DC%3F%E4%D1%83y%09%B1%B4%81%BC%2C%A6%89%D9%17o%18%85%40%15%F2%3AHQIT%8D%7F5%0C%89%88h%D3%C4%10%A9%DD0%E4z%00m%9Axv%1D%A2QH%3B~%9E%CB%B1x%8F%C3m%18%B2%9E%F6%9E%3AS%97%84%D8%96%0D%19dp%23%F8%F9%14v%7F%1C%22%18%840%25%BFA%DB%26*y%EEM%D1%18%E4-%F1%92%84%B5u%C5K%23%2B%DF4Fi%BEyr%8B%80%B4%F5e%19%A8%A1%ED%CBd%B1%D5%1A%D8%19%87d%89C%0EEqB%F6%F8%09%85%E8%C6%FFoB%3E%C9%09%82%CBxvh%E3%2F~y%D6l%C6%23E%1A%C1%D2%83%E2%04%1D%8C%A6%C3%00%AB%B5%A6%82L%88%D6%00_%80%1D%DE7%A8q%9F%B0%12v%15i%18%E6%A2E%C9P%B0%FCK%C9%22%C8%C5%C7%13!%FB%BB%E8w%93%86%F5j(%1C%F3%0F%AA-C%90%E2q_%E9Je%C2%8C%13%FFv%DD%B8%F8%EF%00%EC%00C%3D%13%E3Rz%B1W%08%60%A9%85%8C%E8%3C(%D2'%7F%BF%D0J%88%2F%06%A9Aw%16MAB%A4G%16%80z%AB%0Ab%0CB%0AJ%E4.T%A3%A7%BA%98%82D%AA%EB%07%E7%FFi%EE%DF%2C%85%F0%8D%FB%98%0F%A6%E7%7F%D7R%08(%035%C1%86%5C%86%C5%90%10h%11%AD%87x%F0%5Dk%B3%10%1F%1C%0BM%02%A4%FC%05%EB!V%BF%3A%F4%01%A2W5%05%89%8A%25%99!N%C2%950b%F8%82%F5%90%D3%A5%2B%AD%5D%99%C0%EF%07f%0E%C0N%84)%5B%F1s%93%903%3F%00%86%B4%F1%D7E%7DS%DB%DB%A7i%D3%83u%B4%CC!2%02%C9xA%DF%D4%0Ep%D4%14%C3%13%80%E5y%0A%04q%8E%8C2%B5%D8%8CH%07%A2RYV%A5t%26%F4d3%FB%A4%BB%05X%ECz%24u%CA%92%C6%09%05%E0%B2)%08%B7%CE%1DpUU%D7cjGn%A8%A1L%DF*%9B%DA%07E%D7%AF%1B%F7a%EE%03%FB%D4%AEW%CDu%FB%D9%92%E8R7%14%24%FF%E4%B5%80)%88c%1D%0E%C2%92%CF%EC%22%97%89w0D%BE%19%BD(%88o%19%40M%C8%85%9F%F7%98%AA%C8%BE%19%9D%18%88%A3%ED%15%E8%07%FB%7B%82%19%C8%89u_%EC%F5%23%20%5C%E19%11%A0%95%C3%BE%1FHS%F0%E1%5E%16%03%81%87%A0%09%F8G%E053%90%86%ABC%2BQ%90Vpu8%04%E8%0B%99%804%C2'%1F%A0%20%B6%8A%8A%BB%07%C9S%96%98a%9D1%F8%92m%EAU%12%02%A8%DB%E5%5D%A17%F5J%E3%10-%15GQ%90%96.%3D%0B%8DCpKO%B1~D%1B%AF_%F1h%1987%B3e%886%BE)'%08lfG%10m%7C%C6%95%18%C9x%D2%00%2B%AB%87t%DB%F8%CE%9C%E6%DC9%C6%98%1B%B1%D1%60M3%BBd%EC%B0%E9%3A%EC%CF%BB%91e5%92Z%1E%FC%12%9BLyWu%B8oD%DD9%1Dm%C9%012%ED%7Be%9F%DE%C3%0C%DE8rXc%1B%CDO%E2%C7%EBB%E0u%F3%10Ec%C4%8F%D7%87%20g%7D%D0%84%CA%130%B0%3C%D0%3C%24%C7%B5%EE8H%8E%FA%3F%81%FC%3B%0A%B1Y7%22%AC%E8%CD(%C4b%9F%F1%5B%93%00%E1G'%01%E2%19%B3%1A%D2%2FA%5E%80%40%AC%F4%E3%F9%D5%0D%81K%E4%B1%BAe%A5%1F%EF%0Ap%A3%7B%09%0B%D3%C6%9B%16%23%40%E7%9C%D8%9Ba%8C%1Fo%1A%D2UH67p~%BC9%11'%BE%8A%1C%5Ci%E31~%BCI%AD%DF%A3%BC%A2t%87H%2B%2CZ%06ak%95%01g%FEqe%0D%B6u%90%19%D1M%A4%BA%1E3%7B%CF%A4%5C%3B%25e%C37%D6%5B%F4%0ESQ%DE%B9x~s%86g%19%E1e%FFga%3Ct%40%B2%0C%E2%E3%17%86b!%C6%EC%FDbu%E7%F1%9D%81%CF%0Bb%5D~S%F7%8B%0F%AE%BE%D0%B2b%96%8E%D5ir%26%8D%B1l9%60%02%C2%AC%09W%2F%E3%C7%FF%8B%20%BBRV%D7%B1%26%20%1F%91%82%BC%1F%D8y%E75%AD~j%E2%C8%E3%F2%06%08%84%E4%E5%8Fgk%9Au%97Vl%A5%24%B1%CF5J%DA%0CNY3%A9L%82%FB%87%A8m%F8%FB%BD2%C5%82%11%CF%0A%DA%FB%06%E5%00%F9V%5D%05%1F%7DJ%C3%AA%0E%D6%12%CA%B3%CB%80%23%A4%C9%E0f%0D%2F!%9B%F5%E9%B1%D1%09%A0%7D%AF%2B%CBo%9Db%D2t%99%3F%FB1%CE%C2%87%92%5B%0B%E2%DEV%12%E9%CD%F8%9F%23%5E%A9%04%9F%87V!%15%D2%F6g%8A%2F%D8%DA%F84%D4j%BD%0Dv%15%EFW%C6y%D5S%7DOJJ%EFG%19%E4%88%24%EE%D9g%82C%C8~%0C%F6V%80%1F.%D4%80xeI%81%A8%C7z%1Dk%A3%5D%AC%7C%F0%26%96%DD%B2E%F4%D6jt%98-%D1r%13%F9%5B%B0M%CA%D2a%7BV%84%22%F0%D6As%3C%B3%D9r%11.R%8E%C1%8D%95%E7%F5%EE%3ABIU%0CdY%99%A9%3FM%1D%EF%98%05%AD%E2%D5%DE%EEe%F1%DF-%95%00%B4%D2%EA%2Ci%DE%E1%91_%5C%24%D2%20%EC%BDp%0F%D90%19%15%E4%1F%1E%F6%CA%95m%C9%3F%AE%F9%92%7C%0EQjQ%7B%5D%E4%CE%EE3%FE%8F%EE%7B%A9%2F%FB%A3%E1%C9%07%3B%C9Zf0%23%E5%F4%92%F9%F2-)%F1k%C1%0B%00%ED%94%D1%8E%EB%1D%EE%81%8D%CE%DBp%AD%802%5DZc%DA%14%BB%B61%BEO%15e%8A%15R%D0%23%A8%A8%E3%8F%80%3BY%C0u%9CYR%2B%BF%ABm%A1%96%05%7FA%F7%1F%B0%1AU%A1%96%23%FD%A5%00%00%00%19fcTl%00%00%00%04%00%00%00%C8%00%00%00%C8%00%00%00%00%00%00%00%00%00%01%00%0A%02%C8%86%90%1A%00%00%09%E3fdAt%00%00%00%05x%9C%ED%9C%7Fp%14g%19%C7%1F%92%FB%B1w%D9%DDcFPD0A%98%14%0A6%94FE%25%E4%0C%A9M-m%C8%B4NQ%DBr%AD%ADSmf%8E%AA0%C5q%9A%85%80%0D%90%9A%40%DB%992%83f%83%0C%A3%D3%D6%04A%FD%07%CDB%00%83%9E%5CZ%CB%F4%C7%3F%D9%90d%AC%8ECBr%F9E%92%AE%EF%DEBH%B2%EF%BE%EF%BB%BB%B7%94*%DF%3F.w%CF%FB%EC~v%EF%7D%EF%FD%F1%BC%CF%06%60%A6%22%26%0B%40%1F%C6%E6J%5E%40%B4%99%1A%60q%B2'%E2%05%F0%AA%CB%3B%20%EBo%06%E4%01O!%87%14%9Dq%E0%88%A7%10~%A9%0A%F0%2F%E8%F4%14%02%3D%CB%01%9E%C7%B6%B4Lj%DF%A3%B0%19z%3D%86%88%8FK%2Ba%8B%C7%10%10v.%7Da-%40B%C9%E09%FFn6%BD%D0%A6%FF%926d%8E!%2C%92M%B6Jt%1F%89%F6%CC1%20%10%BEb%B2%AD%CF%E0%F9%D3j%83%0Au%A6-%E3%7Do-t4%7B%0E%89B%B6d%1B%F2j%BD%5D%88%CF%04%B9%DF%C2%F7%F8%DDj%FAo%F6%D2%9F%D8%83%3C%02%B3%E4%99%B6%EF%AB9%B9cfW~%E4%9C%E1%FA%0A%F0%F6%20%07%60%9F%3A%D3%D6%94%DAu%E2%5BfWn3%ACL%BFy%14%7C%8A-%C8%C5%C4Z%93M%DC%B1%B8%CCl%05%BF%A4%D7%16j%26%B3%81%BF%C3%16%A4c%9Bj6%0AjR1%5B%031~6%F8c%3A%04~c%87!%AE%C2%9A%F9%5C%0C%84%1F%3D%13%E3%EFlN%F7%08mv%20%D9)%AC%F9%E4*L%AF%C2%17h%85%05E%E8%CD%5B%AAp%AF%1DH%D2%DC%A9%E8%FA%D2K%18c%BCp%F9Ce*z%F3%AE%A6%D9%AA%93%96%09%AC9%B5%C0l%E3%06%3A6%A7%EF%8F%5Bt%E0E%C2)%DB%24%D3%D5%E5a%1D%1B%9E7%DB%92k%9B%FE%3C%9C~S%2C%13%18%C1%2F%1FS%A6%5B%04-%86s%14o%C3%18%2B%D4%E2pz%BA%16%2F%97%08%90cjx%7C%06v%D5%40-%A6%8A%83%2B1G%8F%08%83%81%5C%FDMi%01i%3C%FB%01%C0%BA%E9%96%CE%C3%B5%F1!%D5%E4%D8%A4%98%0F%E6%C7%C3%23Y%F1p%19%C0%3DC%B3%09%90%EF%A0%C3%A7%5B%1A%03%92xx%B3%C9q%10s0%9F%0A%8E%F7%B6%C4Q%93%9F7%3A%8E)%BF%E6%B6%15%B5%A6i%16%F1%D3!3%01).c%8C%C7%DF%9E8%96%1C%FD%24%FA%DE%C6pUfH%D8tY%991%D7%09%E6%F1%B8o%1F8%EC%A5%FA%FA%B6%C5%13%A8w%1E%99%D7h%099%B9%E8%AF%A9%D2%85%D3L%DD%0A%AC%C0%FA%FE%09g%8CD%97h%DFD%D5%91%FF%DD%2C%D9%82%11%BE%7F5%2C%DEmjJ%C5)%C5%F2%B2f(%FB%5E%AD%E1%D9%18%C0%8E%8E%D7%F3%2C%5C%B6%C0%044%9A%9Bk%D7%FC%7BX!~%ED%CA%FBz%EF%DCu%E4C%EC%9D%A2%1B%99%40%FD%B4%CF%5C%03%E2%5DY%AC%10%40s%B1%1D%FA%DF%EE%01%05%EF%C0%8F%F1Q%FF%DCy%E6%82%AE%0Af%08%92q%DB%F1%CFZ%14%EF%E2%FA%5ENV%99%2FA%9Cc%83!%8E%A4%BF%F0%CEQ%2B%07n%7Ca%D3%19%D3%F7%F5%FE%93%C36%209Z%FA%C7%CE%8DX%3A%F4%7F%BB%BC%F6S%D3m%C2%8F%B4%C5%F8%CE%1E%2F%D1%98%EB%8B%96%10AK%A5*Z%94i6~%E8%0D.j%03rU3%FB%D9)%DA%9FH%A5%F4y%C0T%0Da%A6%5Dte%11%EE%9E%D3L%D3%CB9%D0%A8%DA%87%B4%60%3B%23CUkL%A6K%90o%9F%01%E5%8AeQ%8F%86%2B%1B%F8%ADmF%CE%90uY%1Dv%89v%16%17S%A1%400%13%E5kzWKM%E9%BBL%D1%16%5C%B3%B4%8A%CC%E0gkh4%A0%05p%EC%84%A2%AC%82%09%11%C81-%A9%3C%80P%F4%B1%85%7C4%15%7FK%B7tK%B7%F4%7F%A8s%AA%F7%8CP%05%26%BE%90i%1D1V%15%9E%8A%DF%00h%7D%94%C9X2F%BEv%04%09%10%96%DE%99P%2F%40R%AD%8B%91%5C%3E%A89%E8%12%D2%0AP%1D%26L%2C%D1r%23W%D3nw%07yS%11%E7%9F%8C%91%3C84%ED%2C%8F%BAa%B4U%CF)YM%B8%91%D3%A52%87f%3E%C1%81%7Fc69%18%F5%D6mm%C35%BB%15k%87%BAr)%BDpj%CCu%DE6%0E%A9%BE%3C%A2CEv%94%BF%2C%A3%D5%DEA%E7%AD%FC%1FkZ%C8%D1%FBD0%1A%EA'%B6%0B%BA%C4%1DZ%E1s%C4k%E4%A2%FEh%95%EC%8E%02%9F%AB%A9!BB%7D%BD%F5%1Dy%EE%18%02-%18%C0%F75%AAn%3B%04%1E%1F%5E%9Er%15%E3%B7%93%16%E6l%10%EA%F1%051%06'%0A%84%BAy%A4%EF%20%B8%84%88%CBX%AE%E4Cw%10%A8%AA%A4%FB%E4%90%22%BD%2Cj%AD%5BN%2C%0F%CD%F9%FA%DE%60%CC%25d%3B%1C*%22%95%A3a%F3%D9N%C5%25%A4%04%B8%85%A4%F2%9Dh%3D9%D7%25%03%86DB%BC%C5%80%C4%DD%26%5E%84%C6%BB%C8%BF%F9%93%EDP%F0%15%97%90%8E%BC'%88%91%88w%8A%E7%AC%1B.%C6%07%BA%99U~%8E%1Cd%7CB%DE4%A8%84%0B%247%0Ca%D0O%EC%BC%04%A3%F4%9F%98%5D%14v%05%26%F8%87I%E5%5C%9E%F1%F7%D4c.%20%9D1r%F9%AC%AB%15%26%7C%D1%05%A4%E1%11F%C7%8B%E4%40%15Q%174%89%CD1%DC%84%09%D4X%1D%EB%C3%F8%92%02%3B%93%FA%D8%C6%BB%FE%97!7%A2%E2o%0Aq7%02%E2u%F6%DAG%06%B9%E49Dh%B7%97%EF%C1%AC%E4%F9%EB%EF9%05%CEx%C1%E8)%5Cw%7D5%E5W%E0%B4%07%0C%F1%AB%00%5B'%3F%F9%00%FE%E2%01%84%DB%80%86%1Ce%0A%E4%D7%1E%40%F4%3C(N%BA%F6)R%DF%BE%D7s%C8%D9%E3%17%AC%F6%98%5DAd4)%B9%06%E17%408%CF%0B%C8%E7Q%23%9E%84H%10%C8x%F6%9F%0E%A9%DBX%3D%2CA87%3D%DF%90%C0%EDz%19%ABY%97j%F6%04d%98U%12%D5%3F%EDM%94%CB%1E%40%F4NE%AF%FC%60%1A%12(dX%BE9%87%08%E9%85%9FO%F5%821%09%81%9F%E9%9F%9E%F6%80%C0%1B%3BmiHNiY%E2%1869%C8%BD%26%EF%04%20%BB%86%94%A8%96!%88%CF%23%C44%88'%23%09%AA%93W%EA%A7%400%19%A5%99P%0F%E4%E9%10c%00%0Ea2J3%A1%B3%B0%FE*%24%BC%2CQ%ADx%03%D9%0D%D1%08%24%CE%23%08%3F%AFF%F6%86%01%AF%89%B1%08%1A%E3%1B%20%9D%FC%EA%91%82K%D4%08%1A%E3%AB%D0o2F%F6%14k%14%A7%10q%25D%D0%18%DFK%3F%01%F7%F4V%A7%14%1F%82%A0c%23%12%DDS%81%03%0E!%1D%F9%06%84%9E%84%EEk%87%1C%D9%19%E4%A5%C2%C7%22%E8P%1DDQ%B0%DEqZ%FE%C6%3D_%AB%D2%C7x%BA'%3F%1FDB~%0EIe%3D%1F%14%E7n%ACfH%AC%10%3FQ%AE-R%1CA*sb%11%B1f%0F%CB%0Ae%BB%CA%17%13%12%B3%08%3A%03%F7%5D%EF%BB%C8%EA%AD%FF%5D%2B%26G%91A%5C%F3%A9%24%0B%C4_%09%FEeW%7C%DB%1D%ED%C4%08%D5%CF%C4Y%20%D9w%CA%FC%A2%E6%AC%EE%A8%13%08%08%F9%0D%2C%90%C0%0A%7D%93%AF%95%B7%93%908E%EB%8BY%20%FCx%97%0C%F0%1C%7C%CF%11C%98%60%82%C0%12%F1%1B%00k%E1MG%95%C2%3D%D9%C4%04I*%AD2W%AF%3F%DF%E1%40%5D%FB%D9%9A%F0)MK%FD*%DDk%1B2%05_%2CSA%91v.%60%82%04si%A9W%A4S%94%DF%C1%049%9A%D4%1F%2B!y%10O%F1%60%D2%18%E3%C9%3A%E1(%A8vU%1C%BA%F5%DF%1Bc%3CQ%097%10%24%DFg%D0%18O%3B%05%E7(%E7n%0A%84e%8C%0Ft%D3*%9E%2C%7D%8AJ%1D%E3%05%9A%03%0B%84%3A%C6%B7%A9%EE%202%CB%18%2F%B0%06%ED-%20lc%FCEw%90%3A%A61%DE%EF%0Er%9Ei%8C%B7%F9P%DDL%88%02%90%E5utY%87%D8%7C%2C%EF%26%85%F8%9Bo%00D%0F%A8%DD%82%DC%7C%90%EC%1B%01%F1%7C%DF%81%93%18%C6x%E7%12%AA%EFF%E3%08%B7%85a%8Cw%AE%80%22%A2%A1%F7%F11%861%DE%B9%DE%01x%00%B8%2F%B0%AD%E3%B1z%88%FE%3C%7F%1B%C0%1A8%FA%B6%C4%B4%8E%C7)%24%BF%A7%D2%7CN%83%D0%C7%AF%F0KL%EBx%9C%DE%03%FC%B3%86S%E5%3B%D1%FA%DA%83JH%06%98%A58%82%1C%04a%98%B6%96%10_%EE%CF%FD9%88E%E0t%F3%A7%16%BA%86%E6%AA%14%A7%D0%FE%D7%91%CB%A6%8D%D5%0Ew3.%D4%14o%E8%A6%85%FB%BArJ%91%D6%0F%EFq%C6%00~%C7.%19%96R%9C%5EM%BF%3Ay2%ED%AA%3A%B2%148E%F11%9E%EE%B2%C8i%22%2FG%0C%EDB%FDQ6%D9%C5%D8%02%D0S%8E0%E2w2%3C%FA%BD%3C%0B-%C2%C8.%7CT%7F%15%F1)%DA%CF%C0%1F%A8%8C%40%9E%8F%BA%07nTF(%8A%2B%CB%891%B4%EB%A4%84%08%94%87L%0D%88%88%FD9%05%258L%85%FCP%15%A8%A3*%A9Y%05W%C2%7DTH%99%FE%E2%8B%91!%ABw%96ZuZ%E2S%BB%C8%07%EB%3A%91%86%FC%94%E8%C3k%DA%80%E5%B3%C1%E26*%C3P6m%AF8%D1%B0%C4%F2%0AX%9F%0B%E8%A4%FCP%D0%BDZ%E6%13_d%7D%E6%F2%B0%8F%D2%11%8Bu%96%5D%E3S%97%FF%A30A%1E%E6%C8YW%7C%FC%C7%92E%91pe%A8%CA%AAl%9A%C4%B10%D9%EF%D4%2FN%AA%16E%81%85%2B%06%A3%2C%90%F0l%9E8%D0%87%17%88%96%99%FD%BD%95Ec%A9_2%40%FC%92H%CC%B1m%92%02%96%17%D1%90%18.%E9%EFW%A8%0C%E1%A8%AA%FF%5B%06k%DD%05%B8%7FYb%A8%84%EF%DFW%DA%B4%94J%E1%D0Z%B3%89%10W%E1%B5m%DB-w%2FG%A1%BF%A8w%F8P%FE%1F-%1C%98%D2%A6%CA-R%AC%18e%3E%A1%93%7F%DCV%0FoP%3C2%00%A1%E8%BF%9A%1Ah%826%3A%E2E%00%00%00%19fcTl%00%00%00%06%00%00%00%C8%00%00%00%C8%00%00%00%00%00%00%00%00%00%01%00%0A%02%E6%D6Y%9A%00%00%09%DFfdAt%00%00%00%07x%9C%ED%9C%7Dl%DC%E4%1D%C7%7FI%EE%FD%7C%BE%B6%8CV%5B%D2%5EV%3AVJ%A3%EB%D2j%82B%93k%12(%DB%BA%BE%20%D8%8AV%20%84%F4EZ%D7%04%08b%7F%C0%E2%D0v%0D%A5U%C2%84%A6j%AA%88%E9%0A%AA%26%B6t%1B%AD%F8%03-N%D2%D0%97%99%CB1%C8%A6I%95p%08%D9K%D5%A9%B9%BC%BF%E2%3D%BE%5C%12_%F3%7Bl%C7gWj%95%AF%14%9F%FD%FC~~%3E%8E%FD%D8%BF%E7%F9%DDs%06%B8Q%C1Y%25%00%3DHYZ%B2%03%22%DF%A8%3E%23NsS%9A%878%AFy%CD%EB%D6U%E0%C3%9B%00%E9%DA~%C6~%C8%8B%AE%5C%DB%19%81%A50f%3B%C4U%09%3F%B6%AE%B6%7F%1EE%8B%B3%CE%C0Ac%15%B0%1F%EB%BA%F8%96%1C%8Ea%E5%24%26%1EN)%B8F%AB%AB%B9%98%D7%83%B4%C4%BC%5Bp%08%BBzj%7D%3F%F9%F3%F7n%AC%C4kX%19%C8%99%5C9N%85%AD%02%B8%1F%2B%CFz%EA%CB%C8%D4%FA%B3%12%40%26%CF%E6%A0%150%3D%D0%24)%2B%EE%1D%CFR%18%CC%04%E0%E7%3E%10%EA%97%A6%D6%1D%05%00g%01%BE%8F%D7%B0%00%82%82%B2r%5D%F2%F0%14%C8W%00%EFc%86%BF%F5%CF%AC%B3k%01j%01~%88%D6%C0%8E'!m%C0PN%E8%FB%A3%E4%B6%C3%0C%8F%C5U%1B%CD%95p%F0%BD%B3%B9x%15%2FHu%E2!r%00%1F%01l%40%1D%98x%9F%C4~%1D%3B%BE%BC%01N%E56%20%D6%C9K%24%1C%E2T%3A%3A%A5%00%9D%12lF%1D%9A%07%E4%FB%0E%60%7C%DF%CE%F1e%AA%CDVy%E02%8E%00%B6lT%14%05%B2%E2.%20%97%07%D3%D6%B1%C1%F0%20v%84%AE%A3%3D%E5%EAmf%A2%8D%02q%AE%CFM%AEm%CF%170%07%7F%7F%0F%E5%01%E5xo%C2%A9%BE%7F%1C%5C%06%8F%7B%FE%AA%BB4%F1%D9%16%96%0BQ%87%AC%EC%9E%FB%F0%5D%83%E2(%3C%AF%AA%F6O%92o%F0%2F%A8%E7%EA%8AI%B7%D03%83%ED%A8%C3%E7%2F%F7%3CD%81D%07%81)%E2%A6%B7%F7%00%9C%0B%C9%C8%85e%BE%2B%0B%C0%9C%E7!Z%B1%E5U%B4%AA%06%B1%A7%86%02%E1%2Bb%C0%CE%3C%D5%EEM%2C%C5%D9%8E%9E%FE%0A%F0%87%E2%DB%EF%3E%24%FFo%10%AD%AA%8C%E9i%12p%08%D7%C9%A9%B7%C7%F1cQ%D4%CC%96%93%3A.%84%E2%CE%09%D4%FE03%91%85%DF%A5%0E%8E%E1S%20Lm%3D%05%F2Y%8B%2C%0F%82%7F%14%9Ax%D4%FE%3Dv%2CP%40%D9%D7%F7%23A%B55P%5E%F2%0D%8Ac%C6%B0X7%0E%9D%BC%9F%E2%B0%13%96P%F6%24w%CA%87%DBT%5BUb%80v%C6%5C%C2%BFe%1E~W%BE%91%DA%F1(%A3B2%EB%7F%A3%DA%BAZ%B8%22B%F3d%C2J%B3%A8%C0%23%81%A2%F6%C5%7F%A0X%3E%17R%EEq%A6%B0%94%E2%C8V'%CESw%9C%A7A%9C%FD%A1%1F%E0%96%C6X%A6z%D35%B2%9CR%85g%40J%7C%B6QG%AC%EC%DA%AB%85%02j)%02%87%DAP%C1_%C7%FD%C8%5D%F2%A4%F2%11%A8%C9%A5A%E0%93%CA%2C%B4m%92%26%99%12%E8%06%A1%5D%A2T%D12%A0%2C%DF%90y%8A%9D%9C%EB%EC%0A%F4%08%9B%D7%80%B7T%B5%FD%F4O%FB17El%94%2CZ%97%8FR%19%E4%DC%A3Ff!y%22%E5%AA%0A%DC!%8D%9B%9E%FC%E3%C3u%BC%86%B9b)V%FA%C7%9CD%3FdF%1Dq%CD%FEw%D3%09%FC%C1%95%DCY%C6%8E%B0%A3W%00%F0%AA%2C%07%E5%FDZ%0Ch%AC%8A%D0%8D%7F%97%EFG%3A%90%AC%FC%14Y%FA%0B%A7%BBw%9F%C9%B4%87JRY%F2%1A%AA%CD%DF%BB%08%2B%F6N%FE%EF%CC%91%A9%82%AB%FD%826%04%DE%A1%B6%0Bp%8C%0F%A97ge%5B%86%A7%2C%1F%08t%A7%A4h%14%87%5E%02g.%A9(%CC7Y.%0A%14%9B%95%10m%DD%B2%10%FA%85%D7rJ%F7%C2%CFk%5E%F3%9A%D7%BCni%097%81%D1%BD%F3%26%40%5Eg%F4s%87i%2B%17N%DB%CE%60%22J%9E%EC6%81%AC%B7%1D%02K%7D%F4~%B8U%F2%2F%2FF%93%CEV%8A%C9%DF%F8%1606c%DE%E6VpP-%D8%CA%F0%8D%07%C6%22%0C%7D%DCb%89%1C%95%DE-y%ED%B4%04%91E%F2%AEr%D4W%24%D3%15%F6%E9%7C8vM%40%CA%19%D1%CA%C6%D0%84~%A1%E1%0F%CB%B4%04%9D%19%05_%C3J%BD%2Fo%97%2C%8488%B4%98%5Dl!%03%7C%0F%A2%C5%1E%3C%23jV%CF%95%94%F0%B3K3%22%96B%A0e%EF%B6%D9%85A%04%9C%96%EA%90%ACx%B0%94%2C%FEZk%5D%3Bv%20%17%D99%22%8A%1F%ED*%D6%CCm%CDIMH%3A%8D-%96%E5%BE%1Cx%DC*%06%13B%AE%09%88%A2%18%3B)%18%FC%B2T_%5DX%26%C0%2B%CB%7B%05O%8Ee%90%E7%B0%7C%9Fg%F8pX%96%87%AD%820h%82%D3%3B%0A%CC%E9%DA%A3%BB%ADa%B0-r%1F%F6%2C%8C%26%8Cw%BEe%09%C45%7Ci%2352%3AW%DE%15%BB%5C%B5U%96%C3H%A2%86%A3%EC%E4%40%7C%B5%12%3Bo%C4%1A%8B%BE%F6%08ih%D7%11%A3E%F9.%DF%10%9C%1A%A1%3AX%04%E9%FC%098%EA%ED%86%FC%FA%08%B4%0BvC~%DEz%ED%EE%A4%83%7D%17~%8FSF%7B%00%96%AAY%B8b%3B%03%7C%3A%89%F9%14%05%CCR%1A%E7%D0%B7%EC%14LB%98%BB%8C%FBV%99d%00%7CZj%D4%93I%A3%7Bs%C2%98%9B%18up%E6!%C6%D4%BD%AE%F8Q%C9f%06%FB%00%C0.%9B%19%E0!%9D%84%2F%04%9B!%CAW%AA%1E%EEv%80d%F1%24%C2%DA%0D%09n%00h%B7%15%E2!O%F1%F6%1D%07%86l%85%10%05%D9%DA%23%B6_%13%25%E6%D9%0B%F1%3D%92%80%A4%CC%0C%B0%5C%AD%DD%9C%FD%90'%FD%B93%90%B6%90%95%23%F3i%05J%A1%40%F5%9F4Kv%40%FC%1ClQA%D0%AC%40%DA%F2%D4%B3kT%90%23%9A%CE%A6!B%8B0%0D%F1m%3Eg%0B%C4%BF%EE%C1%E9%26%EC_%98%93%A9%E7oN%1D0s%9FD%7F%EB.%9D*g%AC%84%3C%A1%40H%8CW%20%E0%BE%E7%A5d%AF%80%DC%A3%16%8A%8C-%82%24%C6%BF%99%80%C0%9F%E5E%11%E5%93%E9%B0%92%C1%F4%F2%10%241%BEZJ%16%B0%D9%CA%E2%F9e%1A%FB%CC%1D2%20%AF%A8%231~f%1ASK%8C%5C%A1%C3%7B%11%DF%0F%F0%C9%D5%06%20%3D%FB%12%B3k%83%DCT%89%2F%07%E0%DC%FAO%10%DFM%87L%0E%12%D8%89%7F%9DI%40f%1EZm%FB%A1%5C%C0%86%3C%118o%0E%02%C5%F0%D2u%1E%92s%85'u%AEv%01t%22%AE%9B%C1o%F2%F9%E9%FA%D6%CE%A7%95%18%9F2%ED!%07%B0%16%FCn%CC%8B%CF%24%D6Wk%5E%90%C4%F8%D4%89%15%0F%1F%C0%92B%9D%B9%19q%C1%1C%24%F0%95%12%E3S%AF%C1%15q%0F%92%8F%F3%C9%BD%BB%F1%A9%C4%BAr%E5(%80%1B%2F4%BBk%D3%AC%06%EB%A8l%F9Xk%1E%9B%86%DE%DD%87A%C8pb%D6%B7~%8E%D7%B3!%DF%1Cd%F3%02%1C2%5B%EEo%0A%EC%1D%E6~h%B2Q0%0A%09%1C%03%FFf%ACE%E8%2B%9Cg%14%02J%B7%F9%B8%19%86%D2M%15%0CC~%09%0E%C9%0Ce2%60%E9C%D8%E3%B5%92%2F%02%BER%3B!5%FD%F2%03%BB%24%60%A7%12%3F%86%A6%5E%CD%11%E2%0A%E9M%BD%D2%AE%C2%10%E4%02%96%FD%9B%13D%8C%EAB.%9B%9A%0E%A7%82%9C%5DW%DC%A0W%85%3B%5D%08%09%EB%D5zU%B8L%CD%B9SARb%3C%0D%F2%A5%DE%85%D7V%E2%C2s%3ANf%83b%0AD%B7%8EH%9A%10%3E5%C6%E3%DA%97%26%24%8F%C4x%5D%AF%B3iB%EAn%8C%F1%A8W%9A%90%E8%8D1%DE%06%88%F3%8C%91%07%A4%D9%8E%5DRJ%A2%40%1F%E2%BA%19%904GE%C6%20i%EA%F6%82d%D0%BF%B4%B2%0Ebo%02%C7%12%08%23%D9%0AI4lf%C71%03%90%A9q%FC%DC%E5%E0%C8%E2%1F%06%1C%3D%2FN%8F%E3%E7%0E%89%90%05%0F%20i%F8%9C%FA%85%02%193%10%E3)%F2(%BF%08%E1%20%C0%D1%5D%02%E3%FF!%0FG%B7%91%18OSu%BD%124%5D%F5%F4%A8%E6%8E%C0%D2%C9%F3%AA%1B%E3ib%F2O%88%BB%C5%E6%18%F8WS%3CH%E0%1DOBL%F7%13%7C%8F%95%D4%C8%2B%E1%BFa%DA%C8%85%B4%A9q%7F%EDV%02%C9%10%CCB%88%DA%2F%1C%BD%B82J%B3%BA%24%FFP8~lC%9A!%E9%10%9C~M%A2Z%3D%D1%EAM%85%3F%032%8EO'%2B%84On%98%96%FB%3B%D9%DEW%C8%F8%A66%AD%04%A73W%CB%CA%16%AD%93%1A%84t%EAO(%A89%22%EE%DA%BF%D8%3D%97%AFn)%D2%EE%B3%BD%7Duh%91%A0%5D%C1IZ%EB7%0Cy%B5%26%CEi%EF%CF%E4%B5%EAOz%D2n%FE%17%17%E2%BFf%9E%91%83%F7%A1%BF%C9K%91%A7T%CB%AA%D3%F6%20q%B7%EE%D0%85%B0%9A%F3%7C%95%F7%03h%CA%F3L%BD%91%E9%C8_%AC%D5%98%84%C3%8C%5C%AA*%114%F6n%18.%AA%BDG%1F%C2%EC%2B%A3%D7%C2%86%E3%B2%9CG%DF9%10Z%E5)1%92%16z%82%7D%85n%BC%22%B0%974f%B39z%2F%1A%20%10uj%7F%F1%C2%9E%D4%804%0Ci%FDNS%A5L%A0%FC%20xR-%7D%F4%17S1%0BG%B4%7F%2C%3A%25%F6%F1%80Vn%D2s%AF%8B%9E%25%CBz4%3F%1E1%02%E9*pr%1A%E6%0A%A1%93%A7%1Ak%DA%E5%B0%91%17p%B1k%A5%17%24%BA%D99%02eT33%DEpg%99%11HWA%AB%D6%DC%95%EB%DB4n%FA%AC%CA%86S%A7%0C%A4%1C%C9%3FR%F4%7B%0D%7B%BB%E4%1A%93(%B6%C0Z%A9%23%EBS%CAk%3ER%0Ef%19%BC%19%FE6%DD%5E%F7%D0%3Br.%ED%00I%CF%20%D8x%07%ED%18f'p%B0%A1%C7V%CA%14%2B%83%9A%A9%88I%BE%CC%C1%F4%8B%DB%18%FD%EE%FA%B4lx%3B%DC%FF%01%1C0w%1Fb%1D%1A%C7%00%00%00%19fcTl%00%00%00%08%00%00%00%C8%00%00%00%C8%00%00%00%00%00%00%00%00%00%01%00%0A%02-d%25%1A%00%00%0A%15fdAt%00%00%00%09x%9C%ED%9C%7Fl%13%E7%19%C7%1F%92%B3%7D%B6_%DF%01%0Bj%A1%94%98.%ABh%96%90%90Fm%B7%011!PJ%D3%26%AB%D8%94%AD%A9%F04%D6Ri(i%AB%22Vm%8A%93%00u%A1%5B%22%D6%7FZ!b%B6%96v%D2Z%D2%C1~I%D3r!)M%A9%89%1D%986mc%E2%E8%C8%CAVJ~%92%90%C4%F4v%E7%1F%18%DB%F7%BE%F7%CBg%A9%15_%25%8E%EF%9E%E7%F5%E7%F2%DE%DD%FB%BC%3F%9E3%40%BA%D8%8C%3D%00%A32%FB%0C%C9%0C%88%90%AE%095N%DAd%F0%10o%E9%96n%C9%88%BA%0A%7C%A63%98e%D0h%3A%04%D5%C3%99%80%D9%10%BB%0F%ACYo%BB%D3%E5l%06%BB%E9%10%E4%06z%BE%E9%90k%40y%09v%A6%E2Q%E3%10j%EC%D0%F7x%92%3D%B8%CB0%83i%89%D4%11%0F%F5%2C%7CK%F1CPe1%D1%EE%10%14%CE%FA%AF%E0BX%09Bu%DA%F7%90%ECyJ%90%1F%82%CDGtp%9D%86%100%23%3C%C1%A5g%82%00%F9%DF%3AA%98%05%9A%0C%E9%12jC%1C%88%3Fx5M%E2!%D6%05%2F%9C%14%E6%C0J%AE%AE%B6O%EB%B6%DE%16%EE%22%B9%14%CC%E2!!%1F%B4T%1D%A8y%9C%C8%80%1E%AFs%81%20%2C%25x0%D3%91%CF%B0%C6.%0EM%173A%9E%0Cq%DC%03%5D%EB%0F%DA%97%E0%3D%D0%B5H%04kl%0D%E7o%AA'%13b%AA%B6xC%CB%F1%95%8Af%E6%DE%C6%1A%AF%00%7B%98S%03%99b%EE%5D%FE%B1%17%0F%89%3C%40*%1D%0A%A9a%A0%19%B80%83%AEc%ED%CEH%3F%11%D2%A7%0A%12%81%D0S%CD%B7c%ED%B6%08%1B%20AzUBj%00%B6D%DF%0FJ%DB%7C%AA%9D%1A%A5H%A7vdP%15d%0E%DD%09%D0%11%7D%BF%5D%AC%9D%86%CET%BB%BD%9E%22%05%13%CA%93%BA%ED%E8%96u%AB%A8%10%F7%C7%EE%F9%5E%1E%FA%F8%D7%D2%ECaz%8Ex%8C%A9%DBC%F2%D7%E9%C7%D2(%E6%CCX%00%80%B7%D6C)%9CIw%A0%A7%09%10%A8%E6b%7F%99%D8%9F71n%7DbS%1F%BDk72%C5%C8%939%3Cs%8C%93%20%7D%0Bc%15%24%05%CF_l%E0Kp~%1D%F1%98t%C2%DB%FB%AA%072%AEX%24p%24%CA%B6%CA%A8%19%DD%0D%AE%D2%B3%AB%3D87%B4*V%91%CC%BDoW%AF%86%1FeB%7C%24%88%B5!v%F4%FF%F6%DA%7C%CC8%B6%E9pE%EF%92%2B%00%97%16%3E%2B%7CX%9E%01%99%C8%D8%95%A2%BBjcn3%14%97y%847D%B9%A5%D7%3E%B1n%3F%D9%7B%F5%25%3E%DDLO%E3%DB%03%F1%B3%9B%26%3D%B1wu'%A4(%89S%07'%BD%B2%B3b%85%B5vf%9A%A9R%7C3%0C%A8n%AC%3A%5EE%F9_z-%88%BF%A5VD_%AD%85%9B%FC%5B%E5.%8E%D0%11%C2%DD%D84%DE%968%04%A6U%A8%E1p~%CEhP%3Aw*RX%F4%5D9%7Bu%C8%8Be%5C%9C%3C%B7*%F9%C1%EF%E1%0F%C6%EA%11cl%8D%20%8C%97%C9FH%E7%ECr%1E%5B%B6enher%EB%05%3C%84-%05%B8vbbb%A3%FFe935y%0D_%B6%AA%3Bt0y%08w%E2%1Dm%C2%83p%3F%BB%ECo%98%3E%DEy%A1%91%97%B7%88*%EC%EE%17J%13%1Bb%CF%1C%AF%93%1B%E0%18%3D%C6%05%E5%ADH%10nn%EB3f%5B%26%B9%84%C9Q%8FuJ%08s%9DRJ%138%C9%B6.%D9%C7%C3u%A2%E4%A6%ADH%FBe%1C%2C%B9%80P%B9%81%F46g%07%92q.%93%178%E5%7F%DA%83qJ%5C%24%18%88%E2%89O%8A%5Eb%F5%91%ECY%91%EB%ABC%BC%9Er%9Fj%F2%EE%DD%A4%87%01%03%80%E4%FB8%B2%B2.%D3%09%E9%D0%00%C9%23%04%1E%82N%C2%8C%06%EF%03%BA%C6%DA%FF%DD%E3%D3pph%D6%AF%07%D2%C8%2C%D12%E1Q%F6%BA%0E%06*%87gU%0D%A4%E2%BA%DC%AE8%A0%97%81%F8%A0G%A6g%81U%3F%B9%EF%84%814C%0F%A7%DE%DD9%A6%C19%A9%95%F0%8C%06%EF!%D2(%1A%AF%F6%CE%BB5x%7FS%C7%19%11uQ%20u%1E%D3%D5%D1%AC%0Bb)%F2i%F1%D67%BF%97%FF'%5D%C5%B4I1%2CfC%F9%B9%80%10%E7%09%3EW%90Wr%01%D9%FD%85%81%B4%E5%02B%9C%9C%CC%96%88%D3%AC%D9%12%AB%25d%E9%95%C5%9B%03%08%5D%9B%03%08Z%94%03%08%94i%E8%3F%EAV%97%3B%07%90%0B%FAz%B7%DAd-%C8%01%84%DE%AA%AF%07%A2%0D%D2%96%833oi%0F%98%0F9%7F%D8%7C%06l%CBAlD%91%15%E6C%F2%1Asp%9Ft%FC%D5m%3A%03M%E5%F9L%87%D0%93%BD%BC%E9%10W%95%B4%18%A1%20Vf%A2%C6%87%F1%A5d%7CI%13%3BI%88%CC%3E%8DSQ%83J%1D%7B%E7%88q%88%E2%E8!t%3E%07%90%07%B3P%5DJ%10%C7%B2%1C%9C%F8%BC%00%D9%9E%15%E9%99M%D1*W.%FA%00%B1E%24%D34%B0%1F%E0%9F%7C%97%A9%D1%99.Z%B7%96%5EPD%CEF1%AA%EF%F3%F0%83%F6%CB%05%3C%D1%09q%E2KP%D5%12%B4l%F1%EB%E2%20%7F%25s%8C%EC5%D4%FE8%0CW%AE%D7%3B%FE%B0%94%8B%BF%CD%A0%B0%18%FF%01%F3%EE%95o%00%EC%04Fv%8DII%AC'%BA%92q%9C%EC5%08%B6%81z%80%8F%06%5Bu%0DAXN%FC%AD%87%CDd%AFn%B0%9E%10%1D%E9U%FA%869%F9%9D%AE%D3l%C1%1E%859G%1F%7C%24%1D%0D%BDZ%17%03hA%B8%C6%BE%FA%12%A0%17I%B7%BC%FFT%89%94%60%A1g-%C2%B6C%84%AC%0D%EE%B2x%60%A0L%F0%12%3C%877p%EC%9Ah2%90f%CD%BB%0AR%12%DEvW%A10%F94%B9%D3%EF%036%D4%D0%3E%AD%03%C2%0A%1C%E4%7B%E1%0E%B8%8CY4%BC!T%0F%2C%E3%DF%A7%90%99%25%AB%D0%B1%A5%D0%C2%11%F2in%C8%D2%1D%8Dyz%20%87Q%A1%B0%14%1Cne%CF%11%BF%BFC'%E4T%B4%9E(%15%25%7B%FE%FC%87%8Ep%F4%1F%D2%A9wye%9F%B6%95%D1%EA%A28%9D%0C%BB%9A%C5%9B%DD%CF%F1%86%20%A1Y5%10%EBm%1DF%20%CE%87T8%1D%80%DDu%BC%01%88*%85%C2%C6%CE%89*%E5%ED%7B%C7%7C%08%AA%7D%CB%7C%08%D8%B6%B3b%8C7%19%E2%9Ae%C5%18%FF%8A%B9%10(a%C5%18%DF%12%87%0C%9B%03%A3%23%AC%14%E3%E3%CD%0A%E5%C3%7B%FEe%A3%EE%B6%A7o%B5%14~%13%1FN%1AJ%9F%0C%FEX'%03%15%97G!%F1%8E%17K8%D8%F7%E1%22%AF%0Fbm%EB%96b%FC%3C.%B69%8F%E0J%01M%C8%DF!B%26b1%3E%BEIJ%FE%CC%0B3%3AG!.%E1%11)%C6%17%C67%CFpxW%E7%8A%3Dj%9A%5C%19IC%C4A%FF%BE%C4%B0%D3%E6!%F8%B6%D6%D4%E9%BE%BE%A4%BB%3D%0EA%FF%22%A4%25%C3%8A%7F%3C%A7%F3%A4%A4%40%9A%7C%A1%80%BC%13z%02%1CS%8B)%E5%F4%7CE%88u%91%CF%85%E9%3B%D3w%05%D0f~%5E%BF%DE%FA%8AB%A2%03u%CB%B0%07%8E%CA%3B%D9%1F%F9%9A%F8%3Ar%D9%AD%13b%0D%DC%A8.%BA%1C%EA%02%B2N.%F7%B0%17%C4q%08!%9D%8E(%A9%CF%15%87%B8f%3F%F8%BA%5B%DE%AB%16%9E%04h%80a%E3%10x%0F%9B%1F%FBK%7F%FBZT%0E4g%1C%22%EA%0DY'W%93%20%8C%EF%E6%81%F1%C6w%10R%AFT%40%F2%C2%7F%7F'%D3%E9%C2%3A%A5%D4%2B%F24R%1A%C4%B1%7F%E2%CB%7C%86%D3OY%A5%F1%81%12%24%982%F9W%F1%98%B0%26%C3%A9VC%3A%9C%2C%E4%F9%CA%F57%2F%89%FE%0EP%DD%CF%D2%9D%1E2%0A%99%13c%FCM%DBbs%FF%F2%1B%814%A7%BD%1Ar%EE%E4d%13c%FC%08%97%DC%CEo%0C%EE%80%F4%A9%83%DFh%C8%B9%93%13%E5%13%FFW_r%9B)%1B%CF%9C%05!%3E%C9%A3B%D2%9Ak%CA%E2%EE%1F%E5%9C8c%10%BB'6%7DqC6%3E%D3I%EF%9D%9E%10*M%C6%F8%98d%D2t%1C%3E%83%90%C2%86%F6%D4%13y%89%CFt2%0Ay4%19%E3cb~%92%E9%E45%08%F1%A8%C8%E3%91%9CL%87%D8s%01q%1AL%60P%051%AA%2F%0E%84%99%9F%8B%2C%B1%D1%5B%10uB%9D%9FH%90%A0%E2%02%9F%01%D9v.%3B*F%B9%AB%A91%3E%CB%F2%C3%E6m%D7%81I%8B%F1Y%D6J8%F0%157%D0%A3%A91%3E%CB%1A%85%D0%FD%5E%A0Fc%A3%3A%93%20%F3a%A4%2F%00%16%11%92g%5E%02%D7%13%D0%1F%E2%C1%1EH%8E%E3M%D0%EF%3F%5C%BCSlV%D6d%25%9B%12%9D%96%DFo%AFzs-%A0%A08%8E%C7%A6%F4%23%15%0BD%C7k%BE%C3%81%FD%01%5C%1Ec%EFF%1E%A4%3B%05%FF%10a%EFo%953%8C%DF%0A%06%9F%3F4%14%B6q%F2fi%C4%FC%A4%EBH%D9%1D%B8%F2L1%FCZ%11%22%E9%F8%16%C8%0F%C8%9B%A4%C7%05H%D3%03%60m%C6%3D%C8%99v0%5B%A6%E1%3C'o%13%AB%11%11%9F%B0%10%87%DF%F9%98%B2)%EA%5D%D4~%F0%DB%18%5B%9B%D8~y%F1E%1D%82%C0%C1Q%5E%05%A4%86G%15%B8y%84%AE0%B4r%F8%A2%3D%3F%AF%9Cz%91%F8%F8jB%0F%03%9C%C1%1D%CC%F9%A2%1A%B9o%FAI%E8%BE%91%E0.%BF%AA%89%8EZ%B1K%EE%C5%D8%9Ce%C2%C4%0ElI%D7gmHes%F3%14%9C%0Bb%9F%D1A%83%CE%AD%D8%92%8E%F2%7B%D4%F6%B3%87%AA%85%F1%FFx%F1v%16%7B%89%A2%E9%EBG%3C%EA%20%AE%C7%BA%F7%C2~%BC%BD%8B%C7%9A%8E.%D8%E2V%07%01t%1F%F6qbQ%8E)%BC%AD%A5R%E9%BB%23%92%0A%11%D6%7F%5DM%84%19%BFP%F8%AC%DA%F9S%87%10%C0%DA%DE%2F%9B%24%B4%1A%3D%CEB%B5%0B%CF%CFT%60M6%E1vR%CB%D4%BEu%FA%90%3A%C6%C5%12%FCs%EDU%F8%9BDR%97%E0%E5U1%06V8%B0%F5j%237%19L%D5bU%08%60%84n%8B%1Bgd%97%12%9Bq%EBB%8F%3A%084%95%B0%9Bq%1Fe%11%88%F3%E2%97%CA%04%FCZ%BE%AA%B4%A9%3AL%8A%95Je~%E0%E7%F5%DB%E1%FE%0F%95l%83%C1J%7D%EDy%00%00%00%19fcTl%00%00%00%0A%00%00%00%C8%00%00%00%C8%00%00%00%00%00%00%00%00%00%01%00%0A%02%034%EC%9A%00%00%0A7fdAt%00%00%00%0Bx%9C%ED%9C%7Fl%14%C7%15%C7%9F%CF%EB%FB%B9%3BWJBi%A1%B6%95%D0%D4!%04%9B%E0%22%D2%108%FF%08%18J1%B4Ph%EB%D6GK%5BTQl%14%A8%92%06%85%0BN%E8%85%10%1FHP%A1%A8%09G%09%89%2B%91%18%08%10%A9%AD%F0%DA%1C%95)%17%9F%A1%FC%D1%FF%BC5%01%14)%8A%8Dm%82%81%C3%DB%5Dl%EC%BB%DB%9D%D9%99%DD%3D%AB%7F%F0%FD%8B%9B%F7f%3E%DE_%F3%DE%BC%9D%05%20S~M%0B%40%AFN%9B%25e%03%22g%AA%9F%C6%89M%16%FF%C4%07z%20%AD%D0%DF%A4%ECCr%3F%08f%1Fr%18%AE%8AY%87%FC%0C%7C%81%ACC%02%80%EE%8E%03%04%92%E3%00%11%86%B2%0E%99%0F%CE%FAl3%CEN%8A%FF%3A%DB%8C%D8%ED%1F%F4%1D%CD2%83%7F%F8%8B%89b%96%19%D0%15%F2%16%05%B2%0D%D9%07y%5B-%DF%C0%E8%DC%9BD%FB1%A9%E7%F4%A0U%08%F7%C2%2C%91d%CF%09%B5t%0EXCt%40%0CN%14%92%3C%5C%F9%9B%C0%1A%C4%F3T(%0C%9DSI.%C2%E4Jx%C4%12%C4%BDu%F6%3A%80%A5D%9F%C8%20%D4Z%82x%F3%AF%16%BC%CC%93%A7%D8%DCAh%16%AD%40%84A%A8%93%AF%93%9Fg%3E%09%DD%92n%E7w()eR%F9%D2O%0C%7C%92%20%E8%B6%0Bk%1B%E9%20%17B%EBf%18%F9%AC%C6%19%F8%B2%DDT%10%3E%D0pL2%F09%8E%EF%5D%1E%05%EFsF%FD%15%B5%E4-7%F0%D8%16%C4%18%C2%E1%ED%7D%1F%1EF%BF3%86%24%3A%E6%18x%CC%F9%8D%A4o%D8%5C!%CB%D7gB%5B%A7!%24'%DA%1A%24%3A%A0%5B%9F%3E%81%B3%F1'%E5%00%E4%8A%86%10~%DE%17%E4C%F1%25%85Y%18%93g%81%5C5G%DAn%7C%24%D0%3A%EF3%89dw%DD%5C%80%BB%01%23%8F%9D%06O1qV%1A%11%3FA%24%9A%D7%F6%2F%C1%FD%11%1FQ%0C%3F%A2%B6%7C%E5%9C%E0%0E%D9%5B%2C%87%B0%3D%2F%04%A9!%E8%97%1F%0A%A5_J%FAF%B7%5C%87%9Fu%F8%8A%CA%CA%DFR%5C%11U%DE%C1%83%C1%E3%B8%F3~%A0%40%24t%AD%ED%2B%1F%20%D9ST%B1%11%60OH%DF%96%2BK%84%9E%C2%F6%9Akw%A8%18%CE%89A%C5%7D%91rH%3A%87%8EH%0Bk%14%3F_%0A%DDT%90%BA%88%A4%CC%11MAp%88Z%23%AFW%0F%B8o%2B%96%E5%97%F9WhrX%E7%D4%E7%15%FF%2F%0B%DF%97%F4%8A%18%17%F0gC8%F4%AD%5D%E7_%95%9F%A6%60%40%AB%A8%B8u%D7%F4%FA%E7%FB%25%AD5%81%9F%CE%5D%FD%12W%F4%0F%91%86%01U%C2%CDF8%10O%E6%DC%F2%EBth%C5'%5D%BE%02%D1%19%A5B%00%9Ap%B2%EAMx%0Bns%93%F5%20hs%CA8%9Aj%CB%A0%CEq%E2*3jbU%94%BB%8E%0B%01%C4%DF%8E%8F%C5n%CE%A8%80%C3R%8AR%7DWr%09w%09%1C%9FV%F0pcZ%3BQ%AC%90wOq%1F%DC%E5%07%F9%94%E0q5a7%E4%E2b~%E6%EA%BCza%E6X%F3%5E%DB%8F%C4%99%0F%3B.%5E%12%E1%BD%B1%E6%A2%CC1%B4%17%5Eg0%D2%85W9%8B%D7*%AB%9EQo!ix%E1%D3%84%0C%EC%23%3A%BBV%84%9E%D1_%7C%D2%1D%A2%EB7%AC%5CJ%3FW%10%F5%8DAz%DDF%E9R%9A.R%FA%A1%D9%E5%CBF%7F%F8J%DC%01%16%C8%3EZG%3E%3E%F6%EF%83%CFpL%90%9F%B08%DF%E7M%85c%94%A7%0B%DD%0BDO%9A%80%B8%EB%A18D%ED%AA%E8%2B%26%20%B9%22%2F%8Bt%AE%BC%92%F0%B8%16%06L%40z%80%A7%AEi%BF%06%F0%07SU%9E%84%12.i%7Ds%A3B%907SSHHn%EA%82%1D%3F%D5s%14%D6%9B%80tu%14%D4%FB%DE%A0tnk%3F%0Aa%13%10%FF%B4A%E8%AE%0E%D19%F3O%04%0D%96%EA%98~%93D%08S%3F%8E%B1%D2%E7i%5DS%25%F4%02%9AO%0DA%2B%E2%C6NZyK%94%87%8C~b1%0Cp%BARfG%87H%0F%89%99%82(%E3w%01%17%CA%3A%E4%10%03%E4%3Dc%17%1D%B9za%9B%94K%0D1%F3%94(%D7%24%E9%91%03~%BA%CA%86i%88%20%CB%A5w%13%22%AD%FB%EB%A6%20pb%89%3By%E04%ADw%8D9%88z%C6%16%5C%17)%7D%CDL*%C3%90%3B%95%95%B4%90%C7i%1D5%10%86%10%B1ev4%FB%90%2B%DE%87(%97%F4%19r2%BC%F6v%89%D7%98R%C1Q9%18%BA%F1%F5%9E%A0)H%22%CA%E0%5C%12%11MA%CA%24%06%E7%A1%9B%A6%18.%A6%D7%0D%83%E6%DE%13F%E638%7B%E7%9A%DB%1CQ%BB%CC%D8gT%5CS%A1)%C8eB%5DE%A3%1Eg%C0%14%04%F63%3C%5E%EF%0A%8B%CDAXd%26%7Fd%16%B6xl%A3%F8%9B%D28P6%8B%E3%00y%A0%FF%13%F9u%0A5!%8C%2F%A7%E3%9BR%D8!%40t%DAH%A5(%96%F6%07%10%93%90%F1%B8%F0%A8%D0%C8%C3%0E%8D%0B%04%9Ff%C7%16%9AK(u%B4%15g%10f%C4%96%D8%05%D9%8538wC%7B%D6!%0E%80%7Ff%1D%C2%014%01%C4%3B%EC%80%04%08%90%EF%C3%95%D2%0A%EA%85-A%D8%F4%CF)y%EB%D13%00%BF%B7%CE8%23%071%16a%FD%8B%A0%D6%AE%BBE%AB%0C4%1D%A6%E3lNe%C6P%00l%95x%DD%81%EAa%15%D6V%03%EA%EB%2Bw%A1UH%8E%04%7F%C4%D9%B8O%C1%1Fe%5B%11%EA%2B%06%C27%B1%10O%D0%FF%AC%E2b%19%D2%16%BD%1C%C5B%D0B%7FbM%C3%90E%88%F0%0By%E0%DBXk%1E%5C%AEC%E1%9D%5E%E3%97%3BDm%BA%F1%97%1A%11ku%8B%D0%DCi%F9%EE%12n%88%11%C2l%EE%8B%DE%0B%AC%16!%7C%12%91%CA%EC(h%0B%A4%E0%3B%C4%F5%AE-%10%B8%24%CB%B7%09%E6%B2N%3B%20%D0u%E4%9C%88%B7%FEk%99-%90f%D8%F35%BC%F5%AF%A7l%81l%87%E9-%22%D6z%D6a%0B%A4%C1%5B%D8%83%1F%23%C6%25%EC%80D%1C%A2%03%3F%C6%89%E6.%3B%20%CD%DB%E3%1C%BE%22%F6%CA%14%BF%12%E3-C%12%B2%BC%A8%E8%E78k%B5%E4Wb%FC~%0A%88C%26d%02%8E%A9%F1%AFb%E3%2F%14%CF%EDQb%FC%26%0AH%D7'%84%CA%B5'%08%11%FC%AB%99%BBM%5Dj%8C%A7%81H%DE%20%DE%CA%D7%DE%C2%DA%DC%C31%9E%A3%808D%7C%FE%06%A8%F61bZ%C5%A9%10%8A%C4%CB%BD%1B%FE%835%5E6(%1Fr%D1a%90%91%84%99%E0%C2%1AW%18%0C%C0%3D%A9%DC%81%14%10%D8%01%9B%24%8C%897%AA%83r%915%0D%FD4%90%FFn%C0nU%13%FA%0C%F6%D9r%1D%E1%9D4%A7%0B%9A%DB%1E%C5%BE%9D%3EF%0A'0r%E1i%20%15%B3%3F7%BD%E3%9D%0A%12%DB%08P%B0%91%2F%97%B2%099%A0dUo%81wG(%9B%90%EE%B0%BA%FCp5bSQ%3B%20%DE%FC3Q%E5%A1%EF%FCS6!h2Z%25%C1%C7%90crENwwE%C2%0D%F3%F8gMG%B7%7B%90%F5%E1%94%D7%9Czs%F6%B6%87*%9F%3B%2B%01*%19%F9M%B5%F5%8A%04%B9%02%9A%AD%ED%BE%09F%5B%AF%C8e%24uoa%FA%E9%CA%EB%8461%DD%E9%C5%1E%A3%8BA%86%B8C%F1%8ET%08*~%A4%A9%E3%7B%19N%01SE%B5%14%C8%96%D2%8A%BD)%10%E7w%0F%CArf%FE%BC%D4*%E4%8ErYS%20%FF%96%CEj%9D%E6%99%DAs7%26%97%1A%E3S%F64%EF%87%CCs%A5h%88m%CF%9DF%5C(%3D%C6%FF%98%D7n%9C%12%AC.%5C%F3B%E91%BE%ED%E3%90%C6%C7%F2%07%86%EAC%9Cvw%ED%0Dj%7D%ACVx%DC%991%9E%0Fh%7C%A8%82%1A%11R%9D%11%E3u%20z%BB%AD%D9%20%8D%191%DE%A5M%CF%F5%B6%0F%B3AB%19%A7Cg%83%8A%FD%10%9D%11%3D%16%19%F7%20%8E%D4%E9%AF%D5%EA%88%99B%C3%90%B4I%23%06%ED%B6~%1A%89%B6)SD0%03%D2%EE%7Ba%9E%9D%90%3Cu%F3Go%E6%91%D4%D8W%2CV%D5%7C%BEP%0B%B9%B2U8%2C%D9%08Y%09w%B5%90%F6%F8%BE%9F%06%ECc%F8%A6%C0%12-d%17%F8N2%7C~c%A4%F7%E3%2F%855%10%F4%B8rYx%DB%18J~sH%85%C4%3BR!%DE%86%AA%F0%AF%EE%FF%B8V%19%B2%08%F1%84%20%B1%01%E0Fi%C5%81%94VGGSxt%05%FA%3A%B2%FAY%B4%F2%18%EE)%01%A4%C6%F8%94%D6%B4%07%BE%10%A2%AC%A3J%99%10T%10%05%B7rMz%C4%B1%D6%D7R%3C%94H%CCx%24he%C6%1EV~%EE%ABOI%12%A7%5E%F8%14Cj%DD%C1%13%60%DDv%E6%12%FF%5E%98%DE%D2%5E%7D%14%B6mQ!)%E15%F5%F3L%F7r%60%9Ca%9C%DA%B75%AB%00%CA%AFG%15%88%FE%8C%886m%F42n%0Bj%07M%B2%F34%C0%E2b%25%C6%B7%E9o%D08x%BD%AF%9A1%85%E0%A4%CB%19%3D%04e5%9B%8C%D4%ADi%18%BA%F4u%9D%0E%CE%81)%1B%18w%E5%FA%D6%CA%99%23%F1C%CA%C19%1E%1D%DC%A9%1C%8B%F6%DC%A3%B2%E3G%02%8C%8C%89%0Bn%C5%CF%95%A7%A5%AC%7C%2Fx%96%F3%C3%DF%13%FDY%DB%23%D9%AA%93%B8%90%84~tbF%7B8%FC%86%98%06%B9%0D%8E%85%95QL%97%9C%E0%5E%9E-%3D%FD(%3EI%D2%B6%D6%AD.%18(%C7%7D3%E0%ED%5C%CD%06%F1%E4%EB~%2F%C6%C9KQ%1D%FE%99%5E%C4%F8_S%08%B8%0AK%CB%14%7C%A7%95%40%F3%D5%E8%98%94%F5%85n%91%D0I%AAB%AD%90%AA%98%20-%2F%A1%B9%3A%CD%A8v%23%A1S%F5%FC%BDL%90%1Fv%9E%09%EA4s%FD%F8%E2%A5%F2%C4Wy%99%20%B1~%DDE%9DC%96%09%89%9C%03%FB%12TW%A8%60%81%A8%DB%1Eo%D2m%1F%96%8Fe%CF%A0Z2UWm%CC%AA%95X%BC%9D%CB%0D%3F~%D7SK%89%B1%CF%98P%19%DB%1D%3F%A2%3A%B6i%C5%115%C1%10d%A6%CD%C5%A7%BEa%82%01y%D3B%D4%BE%9FU%16%17%89f%20%CD%84%0Fd3%D5%10%3Eb%06%01%C2D%C2%1B%B7L%99%FB%F6%40%097%03%B3%24%9CMS%C0%E9%D3q%AA%C6l%B1%A2%94v%40%D3%FFq%DB%E7q%91%C6%CD%1A%04%AF%FF%01%D5%B3%93%8A%C0%85b%9C%00%00%00%19fcTl%00%00%00%0C%00%00%00%C8%00%00%00%C8%00%00%00%00%00%00%00%00%00%01%00%0A%02q%C5%B6%1A%00%00%09%E7fdAt%00%00%00%0Dx%9C%ED%9C%7Dp%14g%1D%C7%7F%09%7B%97%BB%BDg%F7(P%0A%92r%87Ti5%85T%228%25%90%0B9%C2%8B%91%0B%82%8AH%CB)%B5vF%A7%094Ef%7C%C9%A6I%3A%5BL%09%20%FA%8F%CCd%A1%C5Qg4%99%3A%3A8%83%C3%E6%A5j%86%2Bw%D2%81%EA%1F%CAB%A0%14eJ%5E%20%40%DE%D6%BD%23o%DE%EE%3E%CF%DE%ED%3E%FF%F1%9D!%EC%3E%BF%DF%3E%9F%BD%7Dn%9F%DF%F3%FC%F6%D9%03H%97_W%02%D0kPfK4%20j%BA%06%AC8e%26%9B%A7%F8P%0Fe%A8_%2B%F4%19%AE%C5%AB%E9Cj%94%13%D4%19h!%DCj%A3%0Dq%0B%E0%17hCr%12p%86%3AD%EBk%ABd%FA%10v%906%03r%5E%DA%B5%86%3A%C4%D7%B7A%A1%0Eq%A9%B2%ED%3A%D0%D7%08%0E%AD%25!%DB%90%AE%96(%DE%E1%89%B2%11%BB%0C%3E%3Fo%18%EB%80%86%D6%DF%25W%13K%E0%ACl5%FC%0C%7B8%3B%9A%7F%9B%C8x%A7v3%CE%CC%080%03%7B%BC%A7w%24Lbpk%7C%F7%B1%90j8O%82%EC%C5%99%B7%85%C3%1B~%DE%06%DBpux%E7w%3FJ%82%9C%C1%98%AF%865%95%C8%F0%22%AE%8E%8F%02%FD%12%16%E2%EE%1D%CE%C1%3Ah%B7%EB%3C%E9%3A%EE%DB%E3%9B%AB%3E%8F%AF!%B7%F0%9E%9B%00%D9%F3%7Cm%FF!%8C%BD%B5ix%B6%82%AD!%5Ey%8F%C0%B8%B6J%C0%DA%D1%10%3B%F3%FD%7C%AC%CB-a%03%9E%C1%2F%FF%8F%8Cu%98%11%F2%84%F8H5%CE%C5%A7%AC%C7C%DCk%3CxH%5Cv%87%80%7BQ%C1%3A%D5%E0!%DF%94%7DQ%ACC%030!%7C%15%DA%E5x%06k%F6%0E%01%7C%01%EB%B1%11%18%FCYh%E2%F0%0D%EF%2F%8EA%FB%CB8%8F%02%60%04%12%04%F5c%CD%1D%DA%CD%18y%06%D3%3Fr%020%07c%0A%1E%E2U%25%9CY%E4bGg%FF%0B%DB%09%03%A3%AA%95x%08%B3%18%E7%F0%CF%80%AA%CE%95%F15%00%BF%F7%2C%09R%8E%99l%EEU%D5%DB%3F%24%204%A1Y%841h%EE%1B%18%C8%E1%3E%85%8C%D0t)J%B0%9F%C6%40%F8y%96%18%D0%12%C2%DB%5Bob%20y%85%D6%20%CB%04%BC%BD%8C%C3%40%E2%B2%25%06%22%8CA%D1%7D0%1F%AD%F0%16%C6%18I%F5%10%12%15%AEQ%0C%C4%15%B2%06%A9%0A%E2%ED%ED!d%0E9%A2Xbx%07%87%B0v%14%90%D1%E0%9B%C66%97Z%60%89%01n%B5D%C0%D9%3D%EALxaQjS%97m%E9%1F%D4%F7%26f%99%19%93%B1%1B%EA%22%25p%FC%DB%F5ef-l%94%B6%D2%22%E2%B2f%13%7F%EC%81%99A%E2%C5%C6%E5NBNF%DA%A8C%7Ck%3EX%18O%2B%D35%A6Q%C8%CC%A4%E1g%24%E03%CD%B43w%5D%00%AF%8A%E0%0A%A8%D8%E1%92%7DH%D7%06%F0%EEZH%91%01%ED%1A%E4%A9%E4%EDN%13%92%D3%06%BF%1F%FD%5E%AB%C5n%23Ky%16%F2%25Qu%40%A1%0A%81%B5e%C57UuI%02hr%BC%0DA%A4%FEy%CF%3D4%9B%22%04%3C%23H%95P%A4%14%3B%02%CDX%C9Y%06%F7%DE%E4%AE%16%11%03%02%B0M%8E2%E0%C4%0B2%EC%9D%9A%C42AP%05g%09%9A%1A%7CCl%A5K%99%D8u%8DADr%1CR%07%9DoK%DCdj%8B%1D%86-%0A%C6%3D%1B%89b%95X%AF%B6%C1%8A%89%02~N7%3E%E9%92%85%3EY%AA%F6%AD%DF%25%C3%2B%CADI%7B%9F%E00%03%15A%AE%94%ECL%B6%2Cp%B8%E6I%B1M%97c%2F%BB%0B%C1%5D%C9%8E%1E%7F%8E%12%E4%CC%B7n%C3%3BgG%81%AFU%0Fq%BB%BEA%07%B2%D6%A7J%AE%E0%F8%40%11%95%D0%E9%7B%0F%5C%F9%C1%8A%7F%E7%EF%A4R%F7%94%EA%94%1B%25%23%F8%C9%A5mq%16%E7K%E6%F2%AE%93I.n%DB%A1%BC%FD%AF%F8q%BB%A6%CB%82%5D%C8%B7%A1%93%E4rX%B1%0By%0A%18%C2%24%9A%7F%D2.%E3%E4%20%5CQ%F0.h%CC%26%E3%84%FA)%11%9F)%82d%1E%C7%96.%A8%F9%3DspI%C8%94%08i3%82P%60K%1BO%FC%20p%C1%16%A4%FD%EEQm%12MH%CA%DA%14%17%906i_%9E%ADT%3B%8C%9E%BB%A9%89%BE%87%EA%90%B69%0A%A98%FD%AEL%11R%A6%E0%9F%068%A2%8F%B5n)%0A%A8T%A0%CCA%8B%CB%23%FB%B1OP%9C%10%5B%13%9E3%8B6%04%92%F9%13%E2%3Do_%F1%3F%3EN%9D%E1Y%C0%CF%A5%8C%60%1Bg'%A0%96.%C3%B7l%40%B2%9C%8F%CCV%F1%3B%C9%FA%E3ET!%17%D4d%A3_'%3C%CD%C9N~%83D%8D%60%E2%CBd%96%D1%9B%061(%CB%2C%A9f%5E%FE%10%92%25%C4%B4%E1%B9%7Dr%9Ao%D6%0Do%AE%8E%EE%AFg%7F%B0U%15%C3e%85%3A%A4%10%FC2uH%25%DC%A2%3C%A5%D2%14%02q%09u%C8%EB%DDK%DF%A7%BE%BC%0D%95%CA%B0G%8A%9D%A3K%D9%BD%5Dl%E8%2F*%A3%1B%F6%CB%F7%8BM%AB%00%F6Q%85%F4n%06O%25%C0%15%99%22%83%EB%EDTr5%80G%A0%08AAv%B3%9F6%C4%13%82%8B%CDRj%E5!%3DqZ%CC%F7k7J%9C%26%04%5E%87%9A%DA%F8%F6%FA%01%99%26d%C6%EC%0A%95%17%0F0N%40L%EB%F05%B6%95h%FF9%02Y%A0%7D%91%D6)F%16%24D%9C%82%BC%06%F0%D6)%C3%BE%C3%2B-s%0Ar%09%F8B%8F%E1s%7F%97%1C%00%0B%C3%04%2B%F2%CB%5E%09%89%DA%C6o%D3-%B9)%80%23%10%CF%1Aw%5B%F2!%DB%F5%D1tK%D7%03%88%13%8F%0E%F9rw%B5V_W%9F.%D9%F5%7D%E7%3E%09%5C%DD8%06%3B%D0bIg%88%0C%3B%07%81%23%03%8D%CF%D5%C8%06%86s%0EB%F8_%95%19%3C%FA%07%A45%86%EC%18%24921%16%23%C7%CE%D1%87%FC%A1%A8%AC%C5%C2%F1%FC%B6%1F%D9%80h%7D%8E%95%091Z%DDM%5EQo%0A%D1b%FC-%D9%02D%00%F2%F2%ED%A0%19D%00K%0B%F25%C8O%88N%DA%B4G1*w%25!%16%06%5E%1AD%B4%00a%EF%18%95'%07%11V%C6%F6%A8%12%0E%10%9Df%C2%E1%B7%0D!Ok1%9E%CC%004%88%C8%E9%CB%0Ao%FE%2F%0D!%91%ED%F5%96z%C7%06v%808%CF%D8%D4q%EEiC%C8A%F1%80%A5%9Bq_%5E%5D%94%E4%F3%EAc%8D%15%8A%11D%B0%D8%AD%CC%FB*%1B%24%F9%1C%17%9B%D7~)%5BH%DEA%40%7D%02%22%E6%2Fo%C0%C9%EEg%B3%850%B3%DA%B87%C1%BB%5B!%F8%F1G%03%FDF%FD%825H%C1%7C%ED%AF%FB7%84%B5%98%7C%5D%60%83a%DF%83B%16%20%ECh%8F%94%5C%EFS%8Cw%EB(h6%FE%02Z%82%C0%A7%F9%15Z%E4%83%0E%BCW%F3%B9Y%92%0DH%EB%E9%CE(_%40%1A%A0%9D%0F%F9%BE%98%3D%84%AFU%D5%BE.%01Pt%BC%C0d%E9%95%D99X%82tn%25-%BD%C2Wa%09R%E0%17%81Up%1E%24%089%C6%7B*%B3J%AAM%83%7C%9E%1C%E3%2F%CBv!%C3%E4%18_%A3%AB%C3%A4%E1%CD%E4%09%12c%BCo%24%3D%A3G8)%9D%98%DE%07IA%8C%CB%E5h%A6%95%A6%CB%95%84%E0c%7C%C4vR%CC%DBK%9Ai%DD%B0%B8%DA%18%23~%94%F0%20%02El%BE%9B%E5I%B6%22i%1E%DFe3SuQ%FB7%E6%D0%3C%DEL%D7%9F%94R%A3%3E%AA%90R1D%1D%C2%0E%AC%1C%A3%0E%B9%00%C7G%A8C~%01%F1%FB%D4!Q%C8y%F0Ir)%E6%B9C%C0%14%A6%20%86%FD4r%06%B2%19%98%C4%CD%84%19%24Wq%04%B2%1F%AEA%CB%981%E4F%B8Tr%04r%FEt%05l%196%84%A0E%C7%DE38%22%0B%A1%E5%87%E0%B1y%BDF1%3E%D7%89%B5%AE%1F%85%92%7F%8F%01w%7F%FD%1D%A3%18%FFw%E0m%7D%E38%B1%09%D0%13rr%B3B%8B%AC%AF%18%C6%F8.%E8%98%995%A1%23%BC%E4%A7%A7%EB%C2eRjo%04%5Cc%CD%BDF1%BE%91%2B%26%0C%AE1%EA9%BB%F7%1E%C4%BE2%5E%E9%10%5C%9A%99%84%E8%E7%F1%A7%18%A1br%E7%1F%A2%EE%24%B0%3A1'%BCN%EBF%C6%F7%EE%C2%F2%A5)%88.%2Cum%82I%88o~%F7%FCL%18%EE%C1M%E09vvb%F9%ECn%EF%C8%5B%BB%24%80%1C%DD%99%E6V%C3%E4%E5%D2%AC%F87u%D3%D4%12%FD%10%E0%DD%F0%EF%C6w%E3j5zdu%EA%1D%804%5D%92%A7%9E%DCvj%1FU%B1%CE%E0%E7%023%DD%9D%8B%01%B4Wm%AF%D7%AFJ%D4%C6%D7%C1%F1%CDS%DFI.R%B6.v%A1%EF%CB%E9%97%1F%E5%8B%5BuoJ%A0B%C8%1D%9F%F5%FB6%D6%2B%3E%E2%C2%C6i%F2%3C%BB%D3%A5%BB%C7Z%7F%FCY%DD%3B%B2%1D%09%B8%FA%A7%07%9B%3D%81Y%EA%A3r%06%10vk%DB5%7D%E1%23%C1%FF%7B%C5%CA%1B%DE1-%7F%EC%09%ECpe%82HJ%DC%A1%2F%BBX%C9L%BB%5E%1F%AC%8C%B5%DC%9E%AC%96%2F%A9%02W%A6%BF%81%E15%1C%E2sS%D7%EB%C3%BB%C5%E0%9D%A3L%EC%CE(%F6'%BC%A1%0C!%CCk%B2Q%F1%91%C9%AD%FA%C4K%00%E5%93I%A7%3A%D9%25p%83%8A%D11%18%88%F1%CF'L%85%DA%8F%A1g%E7_%F2'2c%FC%7C%E0%3E%01%7F%2B%FAn%2C%13%08%BF%92xV%7C%C3zy%E2W%05%7CA%ED%5E%94%015%86%0D%CF%CDD%17-E%89%FFN%B4%11%5B%14%5Eg%F2F%9E%B9%D0R%2B%5E%DC%B2%C9%3B%B6'%0A%26%E9%12s%E5%60%7F%18aB%ECT%8A%8F%2F%86%BCLg%0E%E8s%B2%05%2F%DF%B4%1BC%04%97%94!%24%E3%11%1BZ%85%1C%7F_C%A7%E6%A6*%BAKf5u%E6%9F%A1%BD%8C%1F%3C%03%09%FAk3%17%1D%82E%B4%AF%16%F3%B8%06%A2%F5v%C8%84%F2%EE%C9f%26K%CB%A6%22%26K%AC%2CJ_a%F6%3F%DC%86%14Kn%F6%20%A6%FA%1Fc%CAy%EBp%20Wn%00%00%00%19fcTl%00%00%00%0E%00%00%00%C8%00%00%00%C8%00%00%00%00%00%00%00%00%00%01%00%0A%02_%95%7F%9A%00%00%09%C3fdAt%00%00%00%0Fx%9C%ED%9C%7Fp%14%E5%19%C7%9F%E46%B9%CBfw%2FB%D4%A0%81%DC%20%12u%A2%80%0D%15%DB(Grc%22Pr%D5%B4%8D%9DTO%E9%20T%2C%88%80Lma%01%81%83A%2F%F2c%FAcl%B3%A0V%FFp%9A%03%87%D6N3%C3%9B%842%09%04.%22%C5a%C6iVB%D0q%18%F3%13BB%F0%BAw%094%3Fv%F7y%F7%EE%DE%FC%95%EFL2%B7%FB%3E%EF%FB%D9%BDw%F7%7D%DE%F7%D9g%0F%60%B4%9Cc%F6%00t%E8%EC%8BK%2C%20%E1%D1%EA%A61%B2%A68%0FqB%13%D2%95%D04%0E%90C%AF%FA%983%C4%3C!%9F9%24U%81%0B%845%24I%05Nf%0D%D1%C6%C1%0B%CA8%406%AB%AC!%B6%CA%C6%EB%AC%19%20%84%BB%14%E6%108%B8%C2%1Bg%0B%F6%E2f%C4B%C8%DB%FD%20EC%A2%C9%B8%F0%8F%E3w%23%B59o%C5%06%9C!%BD%E0)0%2C%DC%0D%87%90S9%A0%96%7C%AA%A2%90%14%1Fl1%2C%F4BJ%A5im%E9%01X%C8%C9(%A4E%853%C4%A8p%258%CC%5Bp%B8!%9B%9F%86BB%1A%C7%10%B2%13%83p%B9%CD%03%F0%04%82%F8%E6%B5UD%9AkT*%3DUS%174%AD%2F%AC%E9%EE%23!%F3~K%CF%E9%CE%EFY%F0%B8Q%B1%AD3%E7*r%94p%BE%DB%B3M6%B5%A8~%13%0A%9E%DF%A9%1A%15o%BE%86!4%0D%808%DB%D4%E0NHw%B5%FE%02x%FD%FBI%BC%D2C%05%01%F3%AFk%00%EC%5EiU8%EC%D2-M%C9%D2%9Bk%8E%96%F1%5D6%A4%B2fN%06%C1%EF%D7%3F%94%967J)%20%8B1%83%DAl%0Db%A8%EA%B3%ABT%1C%B2%103%10%7Fn%06y%81%0B%10%94!mWP%1B%BB%0F%F6%19%B5%E4q%3Cm%3E%A8D%F5%FE%0FP%13!%03%16%0C%18%94%15%0By%DF%C7!%A9%3F%C6%DC%01%C0%FDP2%DD%A0%A8D%BA~%06o%40%CA%F1%A16%B5%A7oT%11%FD%A2b1%E7%D7h%7D%80%C0w%A8%09%7F%5Be%BB%A2_%F4K%08u%1B%F0%87k%0F%DE)%B0'%98%EA%D3%2F%F9%04%F8I%A8%03o%3A%99%B5%D7%DCB*%26%20L%E3%5D%86%06%B5n%84%E1%88%AC%18%CD%3B.%AD%A7'%08OJ%C63%A7j%0C%12~)g%83%1F9%8E%8E%FA%AB%A4%04f%19%0D%E8b%8E%82%40%02%FF%C9F%2C%80%EF%80%BD%E1%3E(%DCiP%9E%8A%0E%C3%97J%B1%C3%00%A1%1F%E0%8B%D3%C6%E5!%A3%FB%F4%96%CE%F7c%16%00%2F%99%17o%F2%E9%EF'%B7%3EQ%DC%89%98rd%DD%DD%9F_Qo~%0C%D3%DC%AE%A6%12%C2%F7%A9z%BB%A7TU%F8%FD%A7%A2%9F%DF%EE%7C%2B%5E%CA%81%B0Og%AF%C3g%0F%CF%98%1F%8E%F2%C5%B5%AB%A3%FB%C6D%5B%F4%A6%07F%91%19%BD%CB%2B9X7%C0a%01%1C%2B%A1(%3D%DB%10%993%D0%BE%DA%A0B%A2%20%01xo%00%F5%99%F1B%3C%10r%CFB%18qC%0A%FD%B7%9D%1C%DD%0B%09%EF%F8%BAp%BF%BD%8By%E4.%E9%AA%CD5g%99%87A%CB%C3%C4%3D%B7%E9%C3%AE.t.%1E'd%FB%15%5BI%23%3Ax%C6'%FBl%C2%C9%17%EEQU%96%10%C7%0D%E0*_%A9%7D%9A%E9%B9%F0%7D%90%DCtM%C8%A1%98_%C6.%E9v%A8%E7%A6%01%CD%9C%3F%0EU%D7dW)%D0%C0%16%C2%E7%FCm%12%5BBT%A9%14%BE%3Dn%B5%F4%8E%03%A4a%962%0E%94%CB%F8%A2bB%13%9A%D0%84%10%7D%BDs%1C%86%92%E5%7F%7D%8C%3D%C4%05%3B%983%04%2F%1Cf%0A%90%F6y%3C%85r%24R%CDP%17%BB%96o%99%EF%86v%EB5%8F%D1_%2C%DA%9A'%A9fY%D3%3C%EB%10%E1Qj%D3%7Cm%A5B%C4%22%C5%3A%04%DA%D0p%EBM%95f%A9%1C%81%A31%DD'%076R%1A%D6%9D%CB%D6%20%C9%EEX%20%D2%E6JH%CF%FF)~%80%9CRn'%C0%DF%88%05%02%E2R%92%A2%A6%60%0F%AE%B4)c%EE%03%0E%19%A4%FBc%82%80%B8n%03%C0Z%CCJz%B7%9B%F0%3E%0AC%1D%C0%09%FF%0E%8FG%5B%95%9D%C5%2C%AB%BA3%40p%01%D4Z%87%B4%F4x%FC%BB%9B.%95o%C1%BE%AEK%FDv%1F%08%DFi3%60%EB%90Z%15%C4%FD%C5%CA%BFk%B0%8E%AF%F2~I%00b%7B%C6%FB%D5%5Dp%F4Z%7D%86%F4g%CC%D0%EE%5D%AF%FD%A7y%2C%A4%A3s%99%9D%CB%BFG%C0%F1%5B%CC0-%F2%94%EF%C9%D8%20p%99T%BD%E8y%86%B4%E5!v%D1p%CD%7Fc%84%88%87%0B%40%DA%D3%F9%0C%96%16R%1Cc%FB%11%09%83%09R%0D%9E%DF!%86%99%A7%2C%B7%ED%D4%09%D4%C8%06%B6%9C%8E%ADQ%60g%24Dg%DF%60(J*%AB%A0%B05%DBO%01q%B8%8F%9F%C6m%E3%84%D8%09%DFJXC4%9F%C1%25%0Ab%D8%F1%BCW%AD%1E9%C6%C4%DC%F1%C6%92%F2'%DF%15%7BmZq%25%25%1F5%19%A73%24F!R%5B%E2%0F0%86%2C%04!%1B%EF%D48%D5%01%D2%7C%95%3D%C4%11%C8c%0D%99%0A%B5%ED%5B%8E%9A%3C%80J%84%B6C%81%F3b~%11%D3%E0%22%D8%5E%ACt%FE%10%60%3DS%88%D6%BC3%03X%E7%EA%B5%92%E4%20%60y7%F1JpEFH%C6%10%E8%E0%14m%12%C7%18%92%C1%3D%A8%8D.l!%82%CC%05%CA%B7%F6%B2%85%B4%AAI%DF%FAw%A5*L!%EFG%87%C7Q%EE1%C1J%CF%1B%07%88%E3%DE%B7%C6%E1L%06%9F%B4%B1%85%00%8C%C3%D75%01%89%05%C2%DA%01'%1E%22%AAz%90%A6%D3%09%85%24%13%1DH%5B~Q%15Me%CF%E8%B5%8C%AE%048%A8%EA%404%1F%BFI%BB'u%F8%23%24f%1F%C6LR%9AAj%5C%F2%23%9D%12%A7%17%A0%1D%AB%1E9D7%92%C9%19m%A6%FE%BD.%97%1ED%038e%0A%88%0B%5EGLR%7CP%20U%E9%A5lD!%14%13%2F%E1%06%1CGL%C4%01%DE%07N%BD%A0%8AS%19%04%A1%EA%85c%98%C9V%BB%0C%87%F4%0A%9C%8F%01%5D%FC%B7%AB%7C%26fb%DB%26knP%0F%12*%DFJ%95X%D1%11%E8T%11%13if%D6%0E%DD%243%A7%E4%DFEu3%CE%16%9ER0%9B%BA%C2.%A2%0B%01%8AaE%D0%FE%96%AC%FF%1AM%11%17f%B9u%F7SA%9C%DA%1DV%B8%DAA%F1(%5B%3F%E7%88%0E2'%A8%9D%8D%BD%0Ce%08r%9A%5E%EC%99%0A%C2-%BAC%FBo%C3%E7g%82%7C%E6%F9%87%C7ZQA%F8%81%CF%9E%8DDa%97%E0%90%DF%B7%7F46fM%E7OfHKU%F8%15%1CS1%88wqu%E5%D8%D4%13%3AH%B5g%C1C%92%0B%1C%3E%0C%E2%EE%98%2B%C7%0A%09%F4x%8A%8E%13%90%A6%0Em%1B%A5%5EI%19%FD%BB*b%84%EC%5B%8A%A5%5E%DDl%22%AF'-olB1%15%E4%11%EAx%D7%F6%5C%A1ol%86%1A%8D%8F%17%5D%D4%90%B6%EB%D0U%40F%14%B5i%A7~%04%F7%F1%8EJ%2B%91%BBM3F%A66%17%11%E0%EE%D6v%23-%D8%C8h%88Q%C7G%D4%A2%8C0%15%F3%B2%81%A3%F0%F1u%A3%23z%A6%D6%81%91%BE%D1%E1%CD%8FNQ1%1Fo)%E2-M%1A%05%91%2F%90(%C4%DC%C7%8B%96%9Em%F1%B7w%8Fx%1D%A7~%A3%5D%89%AC%E3%11%1F%2FdX%81D%9E%3B%0C%DB%10%17%1FnP%A2%EBx%F3JB%3C%2FU%A7%06%F9%19%24%B2%8EG%7C%FCAw%1C%10%ED%BA%EC%04%EE4%E6%E3%C57%E3%60D%20W%A3WWr%5C%D1esq%CD%E9S%A3%10%96%2B-%E1%F5%CD%F5%3E%D6%10%98S%B1%A5%3C%25%C8%16%22%E5%C1%94C%91%80%1AKH%9A%2F%FDF%A8%811%C4.%DB%BD%CC!%C92%A7%84%D6%B2%84%88%05%DA%90%95%04-%9Dr%C4_0%82%D4%3E%0B%CEw%EA6%DA6%C8%EC%82%05%7C%96%B6%C6%0B%87s%B5%E1%3E%C1%EB%F8!%A5%97%AD%84%B7%23c~%D3%A9%10q%AC%A3%5C%C7%5B%94%ED%9DU%EB%86%DE%18%E4%DC%8E%EB%B8%8F%8FE%C7%E0_%7DC%1F%C5~%3B%E5%3A%DE%AA%1A%00nen%BDrQ%A6%5B%C7%5B%D5%B9%C8%802%A4%2F%D7%C9t%EBxk%92%D6%96%D6%7C%EC%BE%B9%95%D6%AB%00%24%91DCZk%E6%05z%D5%5B%9B%D3%B3%01%8F%02XV%7DhD%8E%C4%C7%9A%8F%C7_%7C%B6%AA%B6Q%EF%C4%8A%BD%BB%12%CE%00a%F2%7D%EA%FEa%DB%0Ew%E2%19%90*%9F%9F%5C4l%3B%92%08%93pi%97%D2%DC%23%C3%B6%DF%60%C0%D0%86%5C%BB%3C%EC%0D%3D%09%7D%AD%EF%96%3E%FC%8B%05%C8%D1%AB%C3%5E%2COs%D3V%3C%FB%9B%AD%D4%10%7B%FE%9D%9C%EF%FF%9B%12%5Db%DD%17%8D%FE%02%90%5E%A6%A6%FC)Xk%F9%B7%20%0E%86%F3%3D%DA%CAy%1F%7D%0D%E9Q%97E%86-%8B%80%D0%ADJ%DB%E8%AB%A4eZ%5C%0B%08%99eA%E0%97e.%A0%BFH%40%FC%E3Jk%90%B3%1D%E2OT%D1u%B2G%B5R%0B%0B%BE%8E%14%9F%1B%84%D4J%98%07%F5S%ACP%92%E9.%A9%C1%F7%BF%85%7B%9B%E1%AB%E9%04%AA%09%FC%FD%8A%7F%115%24-%C7%E4%A7%1C%A4%9B%E9_%8E%0Fd%ED%FF%F9%87%15%E0%EF%20%DA%B5%AF%B9%D3o%CA%F4B%F11h%CDkC%0D%7D%CE%3F%A4u%E0L%02%D2%1A%12%D9nLL%FB%11%09%8F%C3g%97%A3.%E7%89%A2%C9%04Z%23K%0Bw%E2%9A%1F%D4%FE%20%A4%AF8%E1%D3%FA%7Ba%F3%1F%16E%BD%E6%A7%8F%246%2F%5Dz%F7%08%01%FB%CF%88%02P%A7B%DBs%25%1FH%DAW%F6%89%92H%06%3F%FF%E54%1F%EC%FDv%FE%8A%A6%13%DA%FC%2F%7D%F7%AB%5Bu%93%8C%A9%D2%A6J%0DR%AC(5%B6%C1%18~%B8%ED%9F%96%FB%80%C1%AF%C3%FD%0F%BA%CCn%86%20%12%A6%14%00%00%00%19fcTl%00%00%00%10%00%00%00%C8%00%00%00%C8%00%00%00%00%00%00%00%00%00%01%00%0A%02%3D%D0I%5B%00%00%09%92fdAt%00%00%00%11x%9C%ED%9Cml%14%C7%19%C7%1F%DBk%DF%FA%3C%B7G%12J%A1q%8C%8B%5CJh%08%A6qy)5%BE%D8n%E2%26%10(%B4*%8D%D2r%A9S%02%91%8D%5DAS%A9%85zi%EC%E8HL%0C%09Q%F8%105g%E2H%E9%07%DE%83%C4%87H%EC%81%A1%94%5C%7D%84%B4%A1j*y%C1%18%DAH%15%B1%8D%DF%C0t%3B%7BN%EB%BB%DDY%E6%B9%97%B9%AA%92%FF%92-%EF%B3%CF%CCo%BD3%BB3%F3%CC%CC%02X%E5%B5Y%00%3Ec%D8R%92%08%88a%D5%00%C6)1%A5x%89%93%9A%D4%FFR%E4e%F1%0C%CF%B7%9B_%11%0E%91T%F2%BAp%C8I%80N%E1%10JxG8%84%FE'%1B%85C%AEk%CA2%E1%10y%C6%E9C%A9%E5%B0%B7%95%EF%D3q35Fhk%B3%CEu%CA%1A%C3dE%02%3B%1C%B2%9A%0BW%FD%DC%E4%FBn%60%20%BB%8F%3F%EBPt%B4Q~%80%9B%7CZ%13%82A%C6%40%BB%9F%7D%AA%14%609%2F%B9%FB%7B%BF%D1%10%90b%80_%40%98u%AA%0E%94%FBx%C9s_%EB%08%22%20%3EP%1E%F70olg%B0%B3%91%97%DC%1B9%AB%F2!%CA7%C2G%FD%DB%99%F5%F0%9D%01%87%FB%18%A3%88%F7%03%04%04%FEa%7C%F5%D5%C1%F3%8C%13%05%83%A3%3A7%F5%D1%EE0%06B%3B%5DC%1A%CB~%E9'%B7%F8%89%9B%23%1A%06B*%C3%3A%F3D%DB%89%1A%14%84%9D%DA%02%A9v%F0%9A%F56%02%D2%11%D1%10%0C%20%8F%06%D9%F6%A1%E6G%F8%A9%3F%F1%A2%20%EE%E5%B4%12%97%3Dn%87%8C%AC%ADF%24%97P%2Fa%D97%17r%FC%1Dv%C8%CD%9Ag0%C9%FD8H%FB%F9Z%D8c%B3%2Bc5%DB%11%C9%F3%FF%85%81%B8%7C%D2%C2%22%B0%DF%19%F7%ED%EA%08%229%19%C5%40%24%9F%D2T%B5%D5%EE*%7F%D6%F01%06%C2%1A%EF0%20%40%60%BB%FDm%EF)%3DQ%8AH%AE%18%AC%B7%85U%B2%8F%FE%CA%F63%CE%14%0C%23%92%83%B1%0Bs)f%1D%CCc%16%9F%C1%AE%9ED%8B%3D%9A%E9%C7%5C%8A)%F7T%CDnTJ%D8%CDI%E8%EEX%E7%95%C5X%08TM%B1%DBr%8B%BE%CF%F4%ED%24%F3%26%0E%8E%0C%E1%87%CE%E5%0C%DBA%F5gL%DF%10%F4%B4%19%F5%E3%7F_%EDSQ%DD%15S%1E%D6%E5%AC%FBt%88%E9%9C%7D%DE%BB%89%7CW%8F%FE%5D%F1%0A%A0!%B4%1E%DB5%18awc%E4%5D%17%00r%A2%95%CAE%2B%E0%1C%2C%24%12%B4%DB%C8%F0%5D%1A%D3%D9c%D0%AC%AF%AB%D1t%AB%00%D6%60!%5E%BF%DD%D6k%14%B2%9D%E5%E1%16%80%86%E8%05%AC%D6i%D1a!%11F%07%AB%CD%08%B2%9D%B3%DAv%D7%9D%194!%C4%7C%5COt!!.F%9F%C85%B0%C2%E1%8A%5C%85%15%FD%FB%17%D4t%81%AB%9F%A2%0E%0E%DBc3%23%8CdN%91%19v%3F7%A27%F0%028%89%84%A2X%BE%F4v%05%B9mn%EA%10%D7%83l%7BZ!%B00%13%90H%83%C5%20%A0%E0A%EE%CF%40%E4%CE%3D2%DF%18%14%92s%8C%B2%7D%E4%CB%AAhHd%E7%CAz%D1%0Cxk%DD%AF%853%A0m~P%3Cd%7BhD%17%CDP%CA%3CM%F7%0Af%5C%9C%FF%18x%FE(%96q%ED%C6o%C5%02LET%F1%0C%90%B4%0C%40H0%03%90I%FD%9F%2B%3F%13%90Kj%06%20%F9%B73%00%81E%99%80%5C%C0%8C%8DSU%BE%F8%20%3B%D5%FAL%40rUb%0C%EB%82!%CA7%AF%E8!Lh%23%25%F5%EC%85%7F%CE%15%CCP%5E%2B%018%23%18rx(r%00N%8Be%F4%0E%9F%CF%5DP-%B6o%A3%3C%AD%81%BB%9E9%13%90%3E%C9%F7%01bVa%5C%24%DC%05%7F%A9%0E%26%01%F1%D3_%9Bq%8C%0A%A3o%C3%E8%19F%20%89%0B1%A7-z%FC%18%D7%AC_%85O%1AAH%A2%B6%13%F3V%91i%18W%3Atl8%B1%0B0ab%AB%9E6'%F8z%1C%A2%0Eq%8A%C0%955%DE%D9%CD%A8%0B%B2%884o%A3E%BF%C3j%DEo%F7%ECV%16gK%CF%F4oJ%02%02J%05%23%10*%AD%D7l%B6%DC5%8D%D7%25%BF%3D%9C%8FR%FE%B0%3D%C3'YW3%B3%FF%A1%AB%C5%1F%EAIA%3Cw%0F%04-%26%E20U%D64u%2C%CF%9F%0C%83%AC%2B%FF%B3%19K%8A%95%EB%3C%C8v%CFs%81Yw%8D%12T%E8%DF%22e%DDt%1D%3A-Ql%09%E0%3D%9Bg%A7a%DC%A8%AB%02%FE%5C%9D%5D%3D%D1%E8_%DBSZ%AC1%B7%F5%AC%3D(%B8Z%23%23%87B%DAO%93%804%2C%D1%C1%7Ce%F8c%8D%9E%E6G%EC%9D%98%FC%EA%B01%E6%5E%F6%09%3Eo%2F%23P%A3%FE%F7%AC%F2%86%1E%E3%2B%25%16%D8%89%810l%13%A1%A8%93%FD%B1%CF%8ES%5C%2B%B5x%97%7B%FA%D82%8Eo%EA%90%C3%A7%1B%03%A2!J%A1W%ED%D6%D2%01%B9C%C1%BB%7C%11M~p%C27%E9%82%BF%E3%05h%11%0Dj%F5T%B2%E0%8B%40%8E%1A%3E%3BG%13K%01%D7%2Cc%ECcV%2C4%9D%92%0E%C1%0F%E1%92%26%18%A2%C11%D8%22%96%019%1At%13%D1%A3%C9n%08%87%BE%AE%0A%86%AC%EF-%AB%EC%D7%C52%0A%C6%96%02%24%D3n%24%A2%D0%BB%AB%00.kB%19%9E%2F%98q9Y%15%0A%F9h%95x%88%E7%1E%C8%09%02%E4%09%85%90!%F0%96%8B%8E%97%CA%F4-%1EY%FB%C2%B0P%08%95W%09%BC%24%B8%E0%C7%DB%BC%8C%40%84%87%97'!%93%90I%08%06%12%EE%C2AR%88%2Fy%7B%CB%AA%F6%60%20%D2%E6%E4W%3C%7Bi%1B%DF%A4%23%1C%03%04%19%C6bAV%99%8B%BF%11%8E%2B%A0%25y%08%05xU%BE%9F%FB%09%DAEK%09%82X%7B%E6%FD%25d%25%0F%09%8E%83x%CA%3E%A2%E7%24%0F1%DBx%C4%B2%07%E9%DC%D2S%C9Ch%1B%8FYX!i%9DCj%D2%10%DA%C6s%87%9D%60%AE%F1%3A%D6P%944%04%10c%5B%13%D22%9A%B7P(D%DA%04%EE%BE%A0%DC%AC%09%85%D4j%9EV%90w%AEBdx1YH%DEV3D%9C%B3%EB%25%8E%9FF%7F%DA%ACFE%C3A%DC%B7%3F%0A%02%7C%A8K%FA%1D%DD%3C%E6%B0%F0%05%AB%B5%97%3E%20%1A%A6%E0%D7%2B%1B%CD%1D4D%E5%B8%D1%1F%DBz%CD%9A%23%D1%06%8B%0F%E9~%FF%B4J%7C%00%9CHqH%07%5B%EC%9D%14I%3A%0Er%D80F%3Ai%0E%7F%FD%FC%D8a%E9%95%D4x%AD%DA%BA%14%93%F8%24%0D%05%F9%FB%02%DE%D2%AB%F1%2C%3C%B77%9E%B3Af%B8p%90%A3%D7y%1E%9Fg%D1%EC%07k%5C%FC%F0%A9%D7)%24%DC%C5%85%1C%C7%06%D5%A4F%08X%CE%DCO%EE%D1%A4ceUo%F1%B2h%C5B%DCcn%CB.%032%05%1At%E9%5E%DA%C6%F3%B2%A8%B3B%1C%0A%1E%94%F9%86e%91%16%AD%93%DD%20a%DA%F8%15%12%AF%E0%FF%A3%02%EB%A6%22R%0A%9D%E3%CF%89%CA%81%14s%CE%C7%C86%0FVD%1F%CF(%84%D7%C6'%B0%17%D9%E6z%A4r%05HA~%1Bo%3E%EBX%15%2BK%E2%0D%9E%E7h%A5%9BgNa%A5%0DB%7C%B2uq~%2B%85%B4%F1%DB%F8%04F%C7%C4w%A9%5D%B7C%BA%F8m%FC%E5%20%1A%02%BE%E7O%2C%8D%B7%BC%0C%90%7B%88%FFZy%03%CF%80y%03%AB%2B%B48K%60%FCV%60%3A%12XM-%CC-%B3%40%C8%8F%D2%0D%D9%A2%C9%7Dz%9C%A5%E5rm%BA!%B4%EC%FB%AA%B7%C5%1Ew%2C%89%BC%9B~%C8%D4%0D%3Bc%8F%23%A5%DE%40%DA!%92%1A%7F%DC%7D(%C7%84d%A58w%11%2F%B3%A1%8F%95%17%24%13%92%DE%D1%EFW%2C%90%9C%A0%B46%DD%90%7Cc%5E%BCAY%2C%97%A4%1B%02ak%BF%A9%E7%C0j%15%3B%8EOZd%8A%FCs%E48%3E%05%DD%92o!%DA%F8%145%C7%85%1D%C7%A7%A0QI%C5%8D%E3S%90r3%0A%C1%EC!K%5E%9E%99%15%14%92%A5%09%CA%9ED%F7%DCx%16%EC%2C%17%F8%11%82Ef%9FUi%A8%07%3A%8EOz%E8%CC%11)%26O%D0%FE%DE%97((%C0%1B%09%26%0F%F1%C1%EF%00%5E%15%BB%FC%92B%CE%C2%9F~%2C%94%01%EER8~%8C%BF%E3%3E5%B5%F7W%97%B0%16%F88%09%F1%C5%04%9B%3A%8D%C4%D6%A9%9E%1A%D0%13f%90i%0B%12%2B%F2%A1%83%C1%84!%A1%F5%AC%3D%93%F1%F2%3E%FC%B7%89%03-%CB%9F(CY%B4%5B'%25%9C%FF%E5b%5E_L%E5%93%8B%80T%F4%D5%25%00%E990%0A%ED%BFw%0C%F9%EC%8D%E2%CF%16%DC%9E%1Dc%9C%0D%A7%1F%08%EF%F3%E3!%8F%C9%C5%05%83%C7%7D%0Eg%DD%3F%88n%BD%0C%9F%DC%3D%3F%E6%9F%0DU%CE%7D%16%94D%A6%A2%0B%0A%B7%04%E68A%24%B8b.%2C%7B%FF%3B%9E%EC%98%05fJ%D8%9C%87%CEnyNGS%F6l%82%19N%90%2B%E3%BB%5Cw%14%83%7Bz%DC%AE%7C%DA%DFp%7F%8B%7C%1ADS%40y%CA%09rA%8B%8Ev%DF%A6%99%BD%19%B7%073%5B%83%BC%F2%84%86%C2y%FB%9D%20%EE%2F%BEh~%85%E1y%DDz%A2%19%E0%D2%E6z%25%81%C5%A4%11%E7%2B%3AS%D9OK%7C%83%D5%EC)%04x%B1%B1%BD%D61%9D%5D%1Dw%18%9CK5%B4z%2F%B6Zs%1AA)%DAg%18%DC%2FsL%E8Ix%C8%F1%8B%24%EDG%DE%5B%EE%B1%EDS%AE%8D.%D4%0D%7FP%A2%A3!%2B%07%3B%B69%9C%DA7%40%BE%D6%5Bi%7DV%F3%87%5BA%DA%10h%85k%85%8C%00%0Ek%E8%B1%D2a%89%15R%F6%0C%13%FCp%5B%C1%0E%F39%FFC%82%0D%88%80%AF%C3%FD%1B_%F5Z%E6%C3%146%83%00%00%00%19fcTl%00%00%00%12%00%00%00%C8%00%00%00%C8%00%00%00%00%00%00%00%00%00%01%00%0A%02%13%80%80%DB%00%00%09~fdAt%00%00%00%13x%9C%ED%9C%7Fl%13%E7%19%C7%9F%24%17%FBl%BF%3E%93%852%AA%04%C8%986h%C5fh%23F%5BJ%9C%C4PF%19A%5B%B61%86%16WC%A8%D3h%13%A4l%AB%04%5D%5C%02%AD%C9%10%89(%7F%A0%0E%81%5BZ%A9R%D7%25%AD%26TU%A3%9C%13%08t%F3r%01%FA%C7%26*%E5%08%23%AB%26%A4%C4%24)-%24%BB%BD%8E%A1%F1%FD%F2%3Dw%E7%8B%D4-_%C9I%FC%DC%F3%DE%E7%EE%DE%F7%DE%E7%7D%9F%7B%2F%00J%05T%16%80%11%0D%9B-9%01%91%94%1A%C58%99%93%CDC%9C%D5%AC%FE%0F%F4%F7%B8%F3%0C%AE%ECG%CEC%BC%9B%0B%9D%87%B0q%AF%F3%10%17%3F%03%90b%DEe%A78%89%89%08%2F%96%B7U'%FE%AAr%84%97%E7%F9%D7%EC%40%5C%3B%ABE%C4%A1%94%AE%B6%03%E9%85%C2.%84%5B%7D%C4%0Ed%2B0Q%84%DB%FC%10~%977%FA%95%96r%60%3A%8C%CB%91%F0r4%C3%5D%BFLa%E1%26%A1%40%05V%CB%D3%8C%1F%86%5C%86%17D%B9%85%8C%C0%EB%88%82%C5G%F0%90W%C0%BDYa*%23%98%26%5C%94%C0C%0E%A6%8F%5C%A6%E1%96%D18%A2%60%40%A8%40%22Hr'x%2B%FCI1%CB%D6%3E%86%A8%11%0A%09lDB%F6%EE%BF%05%EF%CE%AD%92%F8%2C%5B%B0%16U40%80%84pk%12%3F%D82Wn%F3I%02%EEL%84%9D8%88%E7%F8%A3%DCQ%C5%3D%E1%92%8A%E2(%C8%E0A%1C%C4%5B%DB%A4%B2%15J%8C%B2%B9iC%DC%BF%C0A%B8R%B5m8%F8%C9%1CL%D9b%EFz%1C%04%5E%7D%5Ee%12v%1D%9CD%95umEB%12%C1G%94%A63m%0B%CAPeY%F5%A5%D6V7%E1%95%A6%F6%BE%D5%CF%A1%CA%BAPW5%ED%B8'%A9%82%F0uaTY%E6%0E%12%02%8D%D2(%2F%B7%9C%E0%13%25%EA%9A%D2P%D1%A7X%C8%8D7R%13r%8B%C0%93%FB%EBxMg*%DFt%DF%19x%18%0B%A1%01e%5C%FE%DDO%DB%DC7u%BD%D9%87%C4%2F%20%9Dx%88%FFkq%A5)q%5B%D7%DB%B5%23r%EFO%A1%0A%0F%19%DA%BA%40%89-%7DU%C7%B7%7D%F4pr%9E%94%E9%87%FCu%F7%A3%19%E7J%F8%7D%0A%D3%D5%09%BD~x%99%B7%AE%FFaq%9B%98%FE%5B%90D%2C%83%95%9E%81%A2%A8%DC%D6%D0%A6w%B9%26%A0%FB%81%DB%F0n%FATH%C9%09%2C%03Z%9E%A1%FE%F2h%EB%19m%D4%1B%87L%C0%BE%A1%C5%C0%A6%0F%EA%E2m%01%CB%F0N%1D%B3%7C%DC%C0%A4R%A2.%E4%25%B2%82w%A5%CF%E4%CCr4%84%99%3A%09!v%3C%CBF%82%BA%8D%EB%BBd%15W%D9%D1%B9%9B%1E%84%2F*%7C%0F%09%F1%06%D3%B1%83%0D%1F%CA6%5E%D4%EB%94%C8%CD%A0%24%95%3CQvj%EE%01%9E~%3B%A4%CE%CD%7C%A6QJ%2F33%A6%0D%F1%18%26p%CC%A4%A2%B4%7C%E9i%97T%F5o%D3)%917%08%FBt%5DnD%3E%20%9Ep%8B%F3%10%08(%EF%3F'*%5E%F8h%062w%3Fwd%A"""">
diff --git a/modules/libimg/png/crashtests/crashtests.list b/modules/libimg/png/crashtests/crashtests.list
new file mode 100644
index 0000000..f034843
--- /dev/null
+++ b/modules/libimg/png/crashtests/crashtests.list
@@ -0,0 +1 @@
+load 374810-1.html
diff --git a/testing/crashtest/crashtests.list b/testing/crashtest/crashtests.list
index 878da6c..643aae9 100644
--- a/testing/crashtest/crashtests.list
+++ b/testing/crashtest/crashtests.list
@@ -58,3 +58,5 @@ include ../../view/crashtests/crashtests.list
 
 include ../../widget/src/cocoa/crashtests/crashtests.list
 include ../../widget/src/crashtests/crashtests.list
+
+include ../../modules/libimg/png/crashtests/crashtests.list"""
63ce32b873f41d838e17883aae8a7dca1226b85c,47128,371124,Bob Clary,"bug 371124 - crash tests by Martijn Wargers, Mats Palmgren.
",1240592897,"""diff --git a/dom/base/crashtests/371124-1-inner.html b/dom/base/crashtests/371124-1-inner.html
new file mode 100644
index 0000000..d8fb455
--- /dev/null
+++ b/dom/base/crashtests/371124-1-inner.html
@@ -0,0 +1,21 @@
+<html>
+<head>
+<script>
+
+function boom()
+{
+  obj = document.getElementsByTagName(""""object"""")[0];
+  obj.__proto__ = null;
+  for (p in obj)
+    dump(p + """"\n"""");
+}
+
+</script>
+</head>
+
+<body onload=""""setTimeout(boom, 200);"""">
+
+<object></object>
+
+</body>
+</html>
\ No newline at end of file
diff --git a/dom/base/crashtests/371124-1.html b/dom/base/crashtests/371124-1.html
new file mode 100644
index 0000000..ccefd3a
--- /dev/null
+++ b/dom/base/crashtests/371124-1.html
@@ -0,0 +1,9 @@
+<html class=""""reftest-wait"""">
+<head>
+<script>
+setTimeout('document.documentElement.className = """"""""', 500);
+</script>
+<body>
+<iframe src=""""371124-1-inner.html""""></iframe>
+</body>
+</html>
diff --git a/dom/base/crashtests/371124-2-inner.html b/dom/base/crashtests/371124-2-inner.html
new file mode 100644
index 0000000..7883093
--- /dev/null
+++ b/dom/base/crashtests/371124-2-inner.html
@@ -0,0 +1,10 @@
+<html>
+<body>
+
+<script>
+  document.all.tags.__proto__ = null;
+  alert(document.all.tags)
+</script>
+
+</body>
+</html>
\ No newline at end of file
diff --git a/dom/base/crashtests/371124-2.html b/dom/base/crashtests/371124-2.html
new file mode 100644
index 0000000..9389763
--- /dev/null
+++ b/dom/base/crashtests/371124-2.html
@@ -0,0 +1,9 @@
+<html class=""""reftest-wait"""">
+<head>
+<script>
+setTimeout('document.documentElement.className = """"""""', 500);
+</script>
+<body>
+<iframe src=""""371124-2-inner.html""""></iframe>
+</body>
+</html>
diff --git a/dom/base/crashtests/crashtests.list b/dom/base/crashtests/crashtests.list
index d753f18..436fb1c 100644
--- a/dom/base/crashtests/crashtests.list
+++ b/dom/base/crashtests/crashtests.list
@@ -8,6 +8,8 @@ load 338674-1.xhtml
 load 346381-1.html
 load 359432-1.xhtml
 load 369413-1.html
+load 371124-1.html
+load 371124-2.html
 load 372554-1.html
 load 404869-1.xul
 load 462947.html"""
a506bb3f7c9661ad91b6303d1cbf688ac3c7b65e,47129,370360,Bob Clary,"bug 370360 - crash test by Eli Friedman.
",1240592897,"""diff --git a/layout/tables/crashtests/370360-1.html b/layout/tables/crashtests/370360-1.html
new file mode 100644
index 0000000..ffcad72
--- /dev/null
+++ b/layout/tables/crashtests/370360-1.html
@@ -0,0 +1,34 @@
+﻿<!DOCTYPE html PUBLIC """"-//W3C//DTD XHTML 1.0 Strict//EN"""" """"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"""">
+
+<style>
+html {font-size: 70px}
+</style>
+<table>
+<tr>
+<td>test</td>
+<td>a variable-height box within the area defined by the left margin
+and adjacent to the bottom of the top-left-corner.</td>
+<td rowspan=""""3""""> </td>
+<tr>
+<td>test</td>
+<td>a variable-height box within the area defined by the left margin
+and adjacent to the bottom of the top-left-corner.</td>
+<tr>
+<td>test</td>
+<td>a variable-height box within the area defined by the left margin
+and adjacent to the bottom of the top-left-corner.</td>
+
+<tr>
+<td>test</td>
+<td>a variable-height box within the area defined by the left margin
+and adjacent to the bottom of the top-left-corner.</td>
+<td rowspan=""""3""""> </td>
+<tr>
+<td>test</td>
+<td>a variable-height box within the area defined by the left margin
+and adjacent to the bottom of the top-left-corner.</td>
+<tr>
+<td>test</td>
+<td>a variable-height box within the area defined by the left margin
+and adjacent to the bottom of the top-left-corner.</td>
+</table>
\ No newline at end of file
diff --git a/layout/tables/crashtests/crashtests.list b/layout/tables/crashtests/crashtests.list
index 24cb29d..96e0024 100644
--- a/layout/tables/crashtests/crashtests.list
+++ b/layout/tables/crashtests/crashtests.list
@@ -54,6 +54,7 @@ load 364512-1.html
 load 366556-1.xhtml
 load 367673-1.xhtml
 load 368166-1.xhtml
+load 370360-1.html
 load 370876-1.html
 load 370897-1.html
 load 373611-1.html"""
d89fd74c3800b34006a10fd198b69d1ed412e1fe,47130,368863,Bob Clary,"bug 368863 - crash test by Martijn Wargers.
",1240592896,"""diff --git a/layout/generic/crashtests/368863-1.html b/layout/generic/crashtests/368863-1.html
new file mode 100644
index 0000000..ea281da
--- /dev/null
+++ b/layout/generic/crashtests/368863-1.html
@@ -0,0 +1,5 @@
+<style>
+*::first-line { }
+*::before { content:""""before text"""";}
+</style>
+<object style=""""position: fixed;-moz-column-count: 100;""""><ol style=""""float: right;"""">
\ No newline at end of file
diff --git a/layout/generic/crashtests/crashtests.list b/layout/generic/crashtests/crashtests.list
index 82e2acd..97a155d 100644
--- a/layout/generic/crashtests/crashtests.list
+++ b/layout/generic/crashtests/crashtests.list
@@ -48,6 +48,7 @@ load 367246-1.html
 load 368330-1.html
 load 368461-1.xhtml
 load 368860-1.html
+load 368863-1.html
 load 369038-1.xhtml
 load 369150-1.html
 load 369150-2.html"""
eb2bc7ac4240b68535ea154a774cb0d5c1590404,47132,360293,Bob Clary,"bug 360293 - crash test by Vladimir Vukicevic.
",1240592896,"""diff --git a/content/canvas/crashtests/360293-1.html b/content/canvas/crashtests/360293-1.html
new file mode 100644
index 0000000..8a0859e
--- /dev/null
+++ b/content/canvas/crashtests/360293-1.html
@@ -0,0 +1,35 @@
+<html>
+
+
+<body>
+ Firefox: <a href=""""javascript:noCrash()"""">no crash</a> | <a href=""""javascript:crash()"""">crash</a><br/>
+ <canvas id=""""foo"""" width=""""200"""" height=""""200"""">
+ </canvas>
+ <script>
+   function d(lineWidth){
+    var c = document.getElementById(""""foo"""").getContext(""""2d"""")
+    c.clearRect(0,0,200,200)
+    c.lineWidth = lineWidth
+    c.beginPath()
+    c.arc(100,100,80, Math.PI, 2*Math.PI, 1)
+    c.stroke()
+    c.beginPath()
+    c.arc(50,50, 20, 0, 2*Math.PI, 1)
+    c.stroke()
+    c.beginPath()
+    c.arc(150,50, 20, 0, 2*Math.PI, 1)
+    c.stroke()
+   }
+   function noCrash() {
+     d(Math.random()*20+5)
+   }
+   function crash() {
+     d( '_' )
+   }
+
+   crash();
+ </script>
+
+</body>
+
+</html>
diff --git a/content/canvas/crashtests/crashtests.list b/content/canvas/crashtests/crashtests.list
index cf7b0b6..2bc6f5d 100644
--- a/content/canvas/crashtests/crashtests.list
+++ b/content/canvas/crashtests/crashtests.list
@@ -1 +1,2 @@
+load 360293-1.html
 load 421715-1.html"""
45dc05647fad7bb048f0d5629546b6941eeaef35,47135,351236,Bob Clary,"bug 351236 - crash test by Martijn Wargers.
",1240592895,"""diff --git a/editor/composer/src/crashtests/351236-1.html b/editor/composer/src/crashtests/351236-1.html
new file mode 100644
index 0000000..22133a2
--- /dev/null
+++ b/editor/composer/src/crashtests/351236-1.html
@@ -0,0 +1,37 @@
+<html><head>
+<title>Testcase bug 351236 - Crash [@ nsGetInterface::operator()] with designMode iframes, removing styles, removing iframes, reloading, etc</title>
+<script>
+function designmodes(i){
+try {
+window.frames[0].document.designMode='on';
+window.frames[0].focus();
+window.frames[0].getSelection().collapse(window.frames[0].document.body.childNodes[0],window.frames[0].document.body.childNodes[0].length-2)
+window.frames[0].document.execCommand('inserthtml', false, 'tesxt ');
+} catch(e) {}
+
+setTimeout(designmodes,50);
+}
+
+function removestyles(){
+document.getElementsByTagName('iframe')[0].removeAttribute('style');
+document.getElementsByTagName('q')[0].removeAttribute('style');
+}
+
+function doe() {
+setTimeout(designmodes,200);
+setTimeout(removestyles,500);
+setTimeout(function() {document.removeChild(document.documentElement);}, 1000);
+setTimeout(function() {window.location.reload();}, 1500);
+}
+window.onload=doe;
+</script>
+
+</head>
+<body>
+This page should not crash Mozilla within 2 seconds<br>
+<q style=""""display: table-row;"""">
+<iframe style=""""display: table-row;""""></iframe>
+<iframe></iframe>
+</q>
+</body>
+</html>
\ No newline at end of file
diff --git a/editor/composer/src/crashtests/crashtests.list b/editor/composer/src/crashtests/crashtests.list
index 303915c..c126591 100644
--- a/editor/composer/src/crashtests/crashtests.list
+++ b/editor/composer/src/crashtests/crashtests.list
@@ -1 +1,2 @@
+load 351236-1.html
 skip-if(MOZ_WIDGET_TOOLKIT==""""windows"""") load 428844-1.html # bug 471185"""
f03aad278e81e5fbda1987a6685599e4d38c06af,47137,348887,Bob Clary,"bug 348887 - crash test by Martijn Wargers.
",1240592895,"""diff --git a/layout/generic/crashtests/348887-1-inner.html b/layout/generic/crashtests/348887-1-inner.html
new file mode 100644
index 0000000..f78cd35
--- /dev/null
+++ b/layout/generic/crashtests/348887-1-inner.html
@@ -0,0 +1,21 @@
+<html><head>
+<style>
+blockquote::first-letter {float: right;}
+</style>
+<title>
+Testcase bug - Crash [@ nsFrameList::DestroyFrames] on reload with -moz-column-count, -moz-inline-block and blockquote::first-letter
+</title>
+</head>
+<body>
+This page should not crash on reload
+<div style="""" -moz-column-count: 2;"""">
+<span style=""""display: table;""""></span>
+<blockquote style=""""display: -moz-inline-block;"""">anonymous text</blockquote>
+</div>
+
+<script>
+document.location.reload();
+</script>
+
+</body>
+</html>
\ No newline at end of file
diff --git a/layout/generic/crashtests/348887-1.html b/layout/generic/crashtests/348887-1.html
new file mode 100644
index 0000000..b865b4b
--- /dev/null
+++ b/layout/generic/crashtests/348887-1.html
@@ -0,0 +1,9 @@
+<html class=""""reftest-wait"""">
+<head>
+<script>
+setTimeout('document.documentElement.className = """"""""', 1000);
+</script>
+<body>
+<iframe src=""""348887-1-inner.html""""></iframe>
+</body>
+</html>
diff --git a/layout/generic/crashtests/crashtests.list b/layout/generic/crashtests/crashtests.list
index c190aa9..82e2acd 100644
--- a/layout/generic/crashtests/crashtests.list
+++ b/layout/generic/crashtests/crashtests.list
@@ -29,6 +29,7 @@ load 337883-2.html
 load 342322-1.html
 load 343206-1.xhtml
 load 345139-1.xhtml
+load 348887-1.html
 load 348991-1.xhtml
 load 354458-1.html
 load 354458-2.html"""
e8a23613b9b0d6f8150927e6f24fb41387953e78,47138,348729,Bob Clary,"bug 348729 - crash test by Martijn Wargers.
",1240592895,"""diff --git a/layout/base/crashtests/348729-1-inner.html b/layout/base/crashtests/348729-1-inner.html
new file mode 100644
index 0000000..4c6de42
--- /dev/null
+++ b/layout/base/crashtests/348729-1-inner.html
@@ -0,0 +1,26 @@
+<html><head>
+<title>Testcase bug - Crash [@ nsRuleNode::GetParentData]</title>
+<script>
+function addstyles1(){
+var x=document.createElementNS('http://www.w3.org/1999/xhtml','style');
+x.innerHTML='\
+*::first-letter {float: right; }\
+';
+document.documentElement.appendChild(x);
+}
+setTimeout(addstyles1,200);
+
+function removestyles(i){
+document.getElementsByTagName('tfoot')[0].removeAttribute('style');
+document.getElementsByTagName('table')[0].removeAttribute('style');
+}
+setTimeout(removestyles,500);
+</script>
+<style>
+*::before { content:""""before text"""";}
+</style>
+</head><body>
+<table style=""""display: block;"""">
+<tbody><tr><td></td></tr></tbody><tfoot style=""""position: absolute;""""></tfoot>
+</table>
+</body></html>
\ No newline at end of file
diff --git a/layout/base/crashtests/348729-1.html b/layout/base/crashtests/348729-1.html
new file mode 100644
index 0000000..652b011
--- /dev/null
+++ b/layout/base/crashtests/348729-1.html
@@ -0,0 +1,9 @@
+<html class=""""reftest-wait"""">
+<head>
+<script>
+setTimeout('document.documentElement.className = """"""""', 1000);
+</script>
+<body>
+<iframe src=""""348729-1-inner.html""""></iframe>
+</body>
+</html>
diff --git a/layout/base/crashtests/crashtests.list b/layout/base/crashtests/crashtests.list
index 32150a8..00cf7d9 100644
--- a/layout/base/crashtests/crashtests.list
+++ b/layout/base/crashtests/crashtests.list
@@ -102,6 +102,7 @@ load 347898-1.html
 load 348126-1.html
 load 348688-1.html
 load 348708-1.xhtml
+load 348729-1.html
 load 349095-1.xhtml
 load 350128-1.xhtml
 load 354766-1.xhtml"""
5c0dbf0a159fa57e849c8c41a549686dab2e98b0,47141,347355,Bob Clary,"bug 347355 - crash test by Jesse Ruderman.
",1240592894,"""diff --git a/layout/mathml/crashtests/347355-1-inner.xhtml b/layout/mathml/crashtests/347355-1-inner.xhtml
new file mode 100644
index 0000000..9c0b46f
--- /dev/null
+++ b/layout/mathml/crashtests/347355-1-inner.xhtml
@@ -0,0 +1,28 @@
+<html xmlns=""""http://www.w3.org/1999/xhtml"""">
+<head>
+<script>
+
+function foo()
+{
+  var mrow = document.getElementById(""""mrow"""")
+
+  mrow.parentNode.removeChild(mrow);
+}
+
+</script>
+</head>
+
+<body onload=""""setTimeout(foo, 100)"""">
+
+<div>
+<math xmlns=""""http://www.w3.org/1998/Math/MathML"""" display=""""block"""">
+  <mrow id=""""mrow"""">
+    <mtd><img xmlns=""""http://www.w3.org/1999/xhtml"""" src=""""347355-1.gif"""" /></mtd>
+    <mtable>      <mtr>         <mtd><mi>t</mi></mtd>      </mtr>    </mtable>
+  </mrow>
+</math>
+</div>
+
+</body>
+
+</html>
\ No newline at end of file
diff --git a/layout/mathml/crashtests/347355-1.gif b/layout/mathml/crashtests/347355-1.gif
new file mode 100644
index 0000000..475ea8c
Binary files /dev/null and b/layout/mathml/crashtests/347355-1.gif differ
diff --git a/layout/mathml/crashtests/347355-1.html b/layout/mathml/crashtests/347355-1.html
new file mode 100644
index 0000000..7e3c6c7
--- /dev/null
+++ b/layout/mathml/crashtests/347355-1.html
@@ -0,0 +1,9 @@
+<html class=""""reftest-wait"""">
+<head>
+<script>
+setTimeout('document.documentElement.className = """"""""', 1000);
+</script>
+<body>
+<iframe src=""""347355-1-inner.xhtml""""></iframe>
+</body>
+</html>
diff --git a/layout/mathml/crashtests/crashtests.list b/layout/mathml/crashtests/crashtests.list
index 5a6a954..628c0f7 100644
--- a/layout/mathml/crashtests/crashtests.list
+++ b/layout/mathml/crashtests/crashtests.list
@@ -9,6 +9,7 @@ load 323738-1.xml
 load 323741-1.xml
 load 323742-1.xml
 load 336074-1.xhtml
+load 347355-1.html
 load 347495-1.xhtml
 load 347507-1.xhtml
 load 348492-1.xhtml"""
b0af76e02eed1b2f2c9565aa7d79421f7fcd27e0,47145,344000,Bob Clary,"bug 344000 - crash test by Bernd.
",1240592894,"""diff --git a/layout/tables/crashtests/344000-1.html b/layout/tables/crashtests/344000-1.html
new file mode 100644
index 0000000..0dbfac8
--- /dev/null
+++ b/layout/tables/crashtests/344000-1.html
@@ -0,0 +1,45 @@
+<html xmlns=""""http://www.w3.org/1999/xhtml"""">
+<head>
+    <title>dom cellmap crash</title>
+
+
+
+<script>
+function doit()
+{
+  var doc = window.document;
+  var t1= doc.getElementById('table1');
+  var tbA =  doc.createElement('tbody');
+  t1.appendChild(tbA);
+  var trA = doc.createElement('tr');
+  var td = doc.createElement('td');
+  td.setAttribute('rowspan', 2);
+  trA.appendChild(td);
+  tbA.appendChild(trA);
+  var trB = doc.createElement('tr');
+  var tdB = doc.createElement('td');
+  tdB.setAttribute('rowspan', 2);
+  trB.appendChild(tdB);
+  tbA.appendChild(trB);
+  tdB.parentNode.removeChild(tdB);
+  trA.parentNode.removeChild(trA);
+  trB.parentNode.removeChild(trB);
+  var tb =  doc.createElement('tbody');
+  trB.appendChild(tdB);
+  tb.appendChild(trB);
+  t1.appendChild(tb);
+}
+</script>
+
+</head>
+
+<body onload=""""doit()"""">
+
+<table id=""""table1""""><tbody id=""""tbody1""""><tr id=""""tr1""""><td id=""""td1"""">x</td></tr></tbody></table>
+
+
+
+
+</body>
+
+</html>
diff --git a/layout/tables/crashtests/crashtests.list b/layout/tables/crashtests/crashtests.list
index a744f23..24cb29d 100644
--- a/layout/tables/crashtests/crashtests.list
+++ b/layout/tables/crashtests/crashtests.list
@@ -38,6 +38,7 @@ load 339315-1.html
 load 341227-1.xhtml
 load 343087-1.html
 load 343588-1.xhtml
+load 344000-1.html
 load 347506-1.xhtml
 load 347506-2.xhtml
 load 347725-1.xhtml"""
092e93c47e29163f378f639218568d0b98c41c2e,47147,343293,Bob Clary,"bug 343293 - crash tests by Martijn Wargers, Boris Zbarsky.
",1240592893,"""diff --git a/layout/base/crashtests/343293-1.xhtml b/layout/base/crashtests/343293-1.xhtml
new file mode 100644
index 0000000..84da4e1
--- /dev/null
+++ b/layout/base/crashtests/343293-1.xhtml
@@ -0,0 +1,19 @@
+<html xmlns=""""http://www.w3.org/1999/xhtml"""">
+<title>Testcase bug 343293 - Crash [@ nsLayoutUtils::GetFloatFromPlaceholder] using ::first-line, floats, caption and generated content</title>
+<style>
+*::first-line { }
+*::before { content:""""--""""; }
+</style>
+<script>
+function doe() {
+document.getElementsByTagName('caption')[0].removeAttribute('style');
+document.documentElement.offsetHeight;
+document.getElementsByTagName('span')[0].removeAttribute('style');
+}
+window.onload=doe;
+</script>
+
+<caption style=""""float: left;""""></caption>
+<span style=""""float: right;""""></span>
+This should not crash Mozilla
+</html>
\ No newline at end of file
diff --git a/layout/base/crashtests/343293-2.xhtml b/layout/base/crashtests/343293-2.xhtml
new file mode 100644
index 0000000..18be6c9
--- /dev/null
+++ b/layout/base/crashtests/343293-2.xhtml
@@ -0,0 +1,14 @@
+<html xmlns=""""http://www.w3.org/1999/xhtml"""">
+<style>
+html::first-line { }
+</style>
+<script>
+function doe() {
+  document.getElementsByTagName('caption')[0].removeAttribute('style');
+}
+window.onload=doe;
+</script>
+
+<caption style=""""float: left;""""></caption>
+<span style=""""float: right;""""></span>
+</html>
diff --git a/layout/base/crashtests/crashtests.list b/layout/base/crashtests/crashtests.list
index fb9cb1f..2d87ba8 100644
--- a/layout/base/crashtests/crashtests.list
+++ b/layout/base/crashtests/crashtests.list
@@ -90,6 +90,8 @@ load 338703-1.html
 load 339651-1.html
 load 340093-1.xul
 load 341858-1.html
+load 343293-1.xhtml
+load 343293-2.xhtml
 load 343540-1.html
 load 344340-1.xul
 load 347898-1.html"""
f401537d72a354ac11b1ca3ff68619885fc07b6d,47148,343087,Bob Clary,"bug 343087 - crash test by Jesse Ruderman.
",1240592893,"""diff --git a/layout/tables/crashtests/343087-1.html b/layout/tables/crashtests/343087-1.html
new file mode 100644
index 0000000..139e789
--- /dev/null
+++ b/layout/tables/crashtests/343087-1.html
@@ -0,0 +1,40 @@
+<!doctype html public """"-//w3c//dtd html 3.2//en"""">
+
+<html>
+
+<head>
+<title>testcase</title>
+<script>
+
+function doit()
+{
+	var doc = window.document;
+	var t1 = doc.getElementById('table1');
+	var tb =  doc.createElement('tfoot');
+	var tr = doc.createElement('tr');
+	tb.appendChild(tr);
+	t1.appendChild(tb);
+	var tb =  doc.createElement('tfoot');
+	var tr = doc.createElement('tr');
+      tb.appendChild(tr);
+	t1.appendChild(tb);
+	var tb =  doc.createElement('tfoot');
+      var td = doc.createElement('td');
+	tr.appendChild(td); 
+      tb.appendChild(tr);
+ 	t1.insertBefore(tb, doc.getElementById(""""colg1""""));
+	tr.parentNode.removeChild(tr);
+}
+</script>
+
+</head>
+
+<body onload=""""doit()"""">
+
+<table id=""""table1""""><tbody id=""""tbody1""""><tr id=""""tr1""""><td id=""""td1"""">x</td></tr></tbody><colgroup id =""""colg1""""></table>
+
+
+
+</body>
+
+</html>
diff --git a/layout/tables/crashtests/crashtests.list b/layout/tables/crashtests/crashtests.list
index 581c3a1..a744f23 100644
--- a/layout/tables/crashtests/crashtests.list
+++ b/layout/tables/crashtests/crashtests.list
@@ -36,6 +36,7 @@ load 339130-1.html
 load 339246-1.html
 load 339315-1.html
 load 341227-1.xhtml
+load 343087-1.html
 load 343588-1.xhtml
 load 347506-1.xhtml
 load 347506-2.xhtml"""
9758d1270dd1905ec6ee730adb3072d68228db71,47149,339246,Bob Clary,"bug 339246 - crash test by Jesse Ruderman.
",1240592893,"""diff --git a/layout/tables/crashtests/339246-1.html b/layout/tables/crashtests/339246-1.html
new file mode 100644
index 0000000..5366e26
--- /dev/null
+++ b/layout/tables/crashtests/339246-1.html
@@ -0,0 +1,32 @@
+<!DOCTYPE HTML PUBLIC """"-//W3C//DTD HTML 4.01//EN"""" """"http://www.w3.org/TR/html4/strict.dtd"""">
+<html>
+
+<head>
+<script>
+
+function boom()
+{
+  var doomed = document.getElementById(""""doomed""""); 
+  doomed.parentNode.removeChild(doomed);
+}
+  
+</script>
+</head>
+
+<body onload=""""boom();"""">
+
+<table>
+  <tr style=""""visibility: collapse;"""">
+    <td>td</td>
+  </tr>
+  <tr>
+    <td id=""""doomed"""">td</td>
+    <td rowspan=""""0"""" colspan=""""0"""">td</td>
+  </tr>
+  <tr>
+    <td>td</td>
+  </tr>
+</table>
+
+</body>
+</html>
diff --git a/layout/tables/crashtests/crashtests.list b/layout/tables/crashtests/crashtests.list
index 54484c8..581c3a1 100644
--- a/layout/tables/crashtests/crashtests.list
+++ b/layout/tables/crashtests/crashtests.list
@@ -33,6 +33,7 @@ load 331344-1.html
 load 331446-1.xhtml
 load 331690-1.html
 load 339130-1.html
+load 339246-1.html
 load 339315-1.html
 load 341227-1.xhtml
 load 343588-1.xhtml"""
94e1eb6ecf4c45b4abbf26ed1454afed3b867e5a,47150,339130,Bob Clary,"bug 339130 - crash test by Jesse Ruderman.
",1240592893,"""diff --git a/layout/tables/crashtests/339130-1.html b/layout/tables/crashtests/339130-1.html
new file mode 100644
index 0000000..61cb6ad
--- /dev/null
+++ b/layout/tables/crashtests/339130-1.html
@@ -0,0 +1,37 @@
+<!DOCTYPE HTML PUBLIC """"-//W3C//DTD HTML 4.01//EN"""" """"http://www.w3.org/TR/html4/strict.dtd"""">
+<html>
+
+<head>
+<script>
+
+function boom()
+{
+  var table = document.getElementById(""""table"""");
+
+  table.insertBefore(document.createElement(""""thead""""), document.getElementById(""""A""""));
+
+  var tb2 = document.createElement(""""tfoot"""");
+  var tr1 = document.createElement(""""tr"""");
+  tb2.appendChild(tr1);
+  table.appendChild(tb2);
+
+  var tr = document.createElement(""""tr"""");
+  var td = document.createElement(""""td"""");
+  td.appendChild(document.createTextNode(""""td""""));
+  td.setAttribute(""""rowspan"""", 0);
+  tr.appendChild(td);
+  document.getElementById(""""B"""").appendChild(tr);
+}
+  
+</script>
+</head>
+<body onload=""""boom();"""">
+
+<table id=""""table"""">
+  <tfoot id=""""A""""><tr><td>td</td></tr></tfoot>
+  <tfoot id=""""B""""><tr><td>td</td></tr></tfoot>
+  <thead></thead>
+</table>
+
+</body>
+</html>
diff --git a/layout/tables/crashtests/crashtests.list b/layout/tables/crashtests/crashtests.list
index 97136ba..54484c8 100644
--- a/layout/tables/crashtests/crashtests.list
+++ b/layout/tables/crashtests/crashtests.list
@@ -32,6 +32,7 @@ load 323489-1.html
 load 331344-1.html
 load 331446-1.xhtml
 load 331690-1.html
+load 339130-1.html
 load 339315-1.html
 load 341227-1.xhtml
 load 343588-1.xhtml"""
7b78bf22d2aa8690c8df8d6f71816f5975038f5b,47151,336994,Bob Clary,"bug 336994 - crash test by Martijn Wargers.
",1240592893,"""diff --git a/content/svg/content/src/crashtests/336994-1.html b/content/svg/content/src/crashtests/336994-1.html
new file mode 100644
index 0000000..4e251cd
--- /dev/null
+++ b/content/svg/content/src/crashtests/336994-1.html
@@ -0,0 +1,12 @@
+<html class=""""reftest-wait"""">
+<head>
+<title>Testcase bug 336994 - Crash when window gets destroyed on SVGZoom event</title>
+<script>
+setTimeout('document.documentElement.className = """"""""', 500);
+</script>
+</head>
+<body>
+This page should not crash Mozilla, you should see no iframe<br>
+<iframe src=""""data:image/svg+xml;charset=utf-8,%3C%3Fxml%20version%3D%221.0%22%20standalone%3D%22no%22%3F%3E%0A%3C%21DOCTYPE%20svg%20PUBLIC%20%22-//W3C//DTD%20SVG%201.1//EN%22%20%22http%3A//www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd%22%3E%0A%3Csvg%20width%3D%22100%25%22%20height%3D%22100%25%22%20version%3D%221.1%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cscript%20xmlns%3D%22http%3A//www.w3.org/1999/xhtml%22%3E%0Awindow.addEventListener%28%27SVGZoom%27%2C%20doe%2C%20true%29%3B%0Afunction%20doe%28e%29%20%7B%0Avar%20x%3D%20parent.document.getElementsByTagName%28%27iframe%27%29%5B0%5D%3B%0Ax.parentNode.removeChild%28x%29%3B%0A%7D%0AsetTimeout%28doe2%2C%201000%29%3B%0A%0Afunction%20doe2%28%29%20%7B%0Adocument.documentElement.currentScale%20%3D%202%3B%0A%7D%0A%3C/script%3E%0A%3C/svg%3E""""></iframe>
+</body>
+</html>
\ No newline at end of file
diff --git a/content/svg/content/src/crashtests/crashtests.list b/content/svg/content/src/crashtests/crashtests.list
index b54e9f9..018b54d 100644
--- a/content/svg/content/src/crashtests/crashtests.list
+++ b/content/svg/content/src/crashtests/crashtests.list
@@ -1,5 +1,6 @@
 load 307322-1.svg
 load 327705-1.svg
+load 336994-1.html
 load 344888-1.svg
 load 345445-1.svg
 load 360836-1.svg"""
1c33cd81996de9136112bca034bd4f4319853667,47153,336744,Bob Clary,"bug 336744 - crash test by Martijn Wargers.
",1240592892,"""diff --git a/content/xbl/crashtests/336744-1-inner.html b/content/xbl/crashtests/336744-1-inner.html
new file mode 100644
index 0000000..4af1fbd
--- /dev/null
+++ b/content/xbl/crashtests/336744-1-inner.html
@@ -0,0 +1,6 @@
+<html><head>
+<title>Testcase bug 336744 - Crash when window gets destroyed during popuphiding event</title>
+</head><body>
+This should not crash Mozilla within 1 second<br>
+<iframe src=""""data:application/vnd.mozilla.xul+xml;charset=utf-8,%3C%3Fxml%20version%3D%221.0%22%3F%3E%0A%3C%3Fxml-stylesheet%20href%3D%22chrome%3A//global/skin%22%20type%3D%22text/css%22%3F%3E%0A%0A%3Cwindow%20xmlns%3Ahtml%3D%22http%3A//www.w3.org/1999/xhtml%22%0A%20%20%20%20%20%20%20%20xmlns%3D%22http%3A//www.mozilla.org/keymaster/gatekeeper/there.is.only.xul%22%3E%0A%3Chtml%3Ascript%3E%0Adocument.addEventListener%28%22popuphiding%22%2C%20doe%2C%20true%29%3B%0Afunction%20doe%28e%29%20%7B%0Avar%20x%3D%20parent.document.getElementsByTagName%28%27iframe%27%29%5B0%5D%3B%0Ax.parentNode.removeChild%28x%29%3B%0A%7D%0AsetTimeout%28function%28%29%20%7B%20document.getElementsByTagName%28%22menupopup%22%29%5B0%5D.showPopup%28%29%3B%20%7D%2C%20800%29%3B%0AsetTimeout%28function%28%29%20%7B%20document.getElementsByTagName%28%22menupopup%22%29%5B0%5D.hidePopup%28%29%3B%20%7D%2C%201000%29%3B%0A%3C/html%3Ascript%3E%0A%3Cscript%3E%0A%0A%3C/script%3E%0A%3Cmenupopup%3E%0A%20%20%3Cmenuitem%20label%3D%22One%22/%3E%0A%3C/menupopup%3E%0A%3C/window%3E%0A""""></iframe>
+</body></html>
\ No newline at end of file
diff --git a/content/xbl/crashtests/336744-1.html b/content/xbl/crashtests/336744-1.html
new file mode 100644
index 0000000..48d5c17
--- /dev/null
+++ b/content/xbl/crashtests/336744-1.html
@@ -0,0 +1,9 @@
+<html class=""""reftest-wait"""">
+<head>
+<script>
+setTimeout('document.documentElement.className = """"""""', 1000);
+</script>
+<body>
+<iframe src=""""336744-1-inner.html""""></iframe>
+</body>
+</html>
diff --git a/content/xbl/crashtests/crashtests.list b/content/xbl/crashtests/crashtests.list
index 312f36e..2453de1 100644
--- a/content/xbl/crashtests/crashtests.list
+++ b/content/xbl/crashtests/crashtests.list
@@ -4,6 +4,7 @@ load 226744-1.xhtml
 load 232095-1.xul
 load 277523-1.xhtml
 load 277950-1.xhtml
+load 336744-1.html
 load 342954-1.xhtml
 load 342954-2.xhtml
 load 368276-1.xhtml"""
45e16108514385d592f158c32bac74d69d8c468c,47155,331883,Bob Clary,"bug 331883 - crash tests by Jesse Ruderman, Leon Sha.
",1240592892,"""diff --git a/layout/base/crashtests/331883-1-inner.html b/layout/base/crashtests/331883-1-inner.html
new file mode 100644
index 0000000..2189dff
--- /dev/null
+++ b/layout/base/crashtests/331883-1-inner.html
@@ -0,0 +1,30 @@
+<html>
+
+<head style=""""display: none"""">
+
+<style id=""""style"""">
+.lizard:first-line { }
+</style>
+
+<script>
+
+function init()
+{
+  document.getElementById(""""style"""").textContent += """"* { position: relative; }"""";
+  document.getElementById(""""comment10div"""").setAttribute(""""class"""", """"lizard"""");
+  document.getElementById(""""style"""").textContent += """"*::-moz-line-frame { position: absolute; }"""";
+  setTimeout(function() { location.reload(); }, 200);
+} 
+
+window.addEventListener(""""load"""", init, false);
+
+</script>
+
+</head>
+
+<body>
+
+<div id=""""comment10div"""">XXXXXXXXXXXXXXXXXXXXXXXX <spanspan></div>
+
+</body>
+</html>
diff --git a/layout/base/crashtests/331883-1.html b/layout/base/crashtests/331883-1.html
new file mode 100644
index 0000000..8a4eab8
--- /dev/null
+++ b/layout/base/crashtests/331883-1.html
@@ -0,0 +1,9 @@
+<html class=""""reftest-wait"""">
+<head>
+<script>
+setTimeout('document.documentElement.className = """"""""', 1000);
+</script>
+<body>
+<iframe src=""""331883-1-inner.html""""></iframe>
+</body>
+</html>
diff --git a/layout/base/crashtests/331883-2-inner.html b/layout/base/crashtests/331883-2-inner.html
new file mode 100644
index 0000000..44629ed
--- /dev/null
+++ b/layout/base/crashtests/331883-2-inner.html
@@ -0,0 +1,35 @@
+<html>
+
+<head style=""""display: none"""">
+
+<style id=""""style"""">
+.lizard:first-line { }
+</style>
+
+<script>
+
+function init()
+{
+
+  document.getElementById(""""style"""").textContent += """"* { position: relative; }"""";
+
+  document.getElementById(""""comment10div"""").setAttribute(""""class"""", """"lizard"""");
+
+  document.getElementById(""""style"""").textContent += """"*::-moz-line-frame { position: absolute; }"""";
+
+  setTimeout(function() { location.reload(); }, 200);
+
+} 
+
+window.addEventListener(""""load"""", init, false);
+
+</script>
+
+</head>
+
+<body>
+
+<div id=""""comment10div"""">XXXXXXXXXXXXXXXXXXXXXXXX <spanspan></div>
+
+</body>
+</html>
diff --git a/layout/base/crashtests/331883-2.html b/layout/base/crashtests/331883-2.html
new file mode 100644
index 0000000..4c197dc
--- /dev/null
+++ b/layout/base/crashtests/331883-2.html
@@ -0,0 +1,9 @@
+<html class=""""reftest-wait"""">
+<head>
+<script>
+setTimeout('document.documentElement.className = """"""""', 1000);
+</script>
+<body>
+<iframe src=""""331883-2-inner.html""""></iframe>
+</body>
+</html>
diff --git a/layout/base/crashtests/crashtests.list b/layout/base/crashtests/crashtests.list
index 1918ccc..fb9cb1f 100644
--- a/layout/base/crashtests/crashtests.list
+++ b/layout/base/crashtests/crashtests.list
@@ -77,6 +77,8 @@ load 331204-1.html
 load 331679-1.xhtml
 load 331679-2.xml
 load 331679-3.xml
+load 331883-1.html
+load 331883-2.html
 load 335140-1.html
 load 336291-1.html
 load 336999-1.xul"""
8f546b9d0102b8fac130b503a4b920b2b55035f2,47157,329900,Bob Clary,"bug 329900 - crash test by Martijn Wargers.
",1240592891,"""diff --git a/layout/base/crashtests/329900-1.html b/layout/base/crashtests/329900-1.html
new file mode 100644
index 0000000..54d7021
--- /dev/null
+++ b/layout/base/crashtests/329900-1.html
@@ -0,0 +1,15 @@
+<html>
+<head>
+<title>Testcase bug 329900 - Crash with evil testcase, using table-column-group, table-column, table-cell</title>
+</head>
+<body>
+Mozilla should not crash with this page
+<div style=""""display: table-cell;"""">
+  <span style=""""display: table-cell;""""></span>
+	 <span style=""""display: table-column;""""></span>
+		<span style=""""display: table-column-group;""""></span>
+  <span style=""""display: table-cell;""""></span>
+  <table></table>
+</div>
+
+</body></html>"""
25c333c8acbc9e95a473e6fbbc2a445f0991e7e2,47160,326834,Bob Clary,"bug 326834 - crash test by Martijn Wargers.
",1240592891,"""diff --git a/layout/xul/base/src/crashtests/326834-1-inner.xul b/layout/xul/base/src/crashtests/326834-1-inner.xul
new file mode 100644
index 0000000..0fbdca7
--- /dev/null
+++ b/layout/xul/base/src/crashtests/326834-1-inner.xul
@@ -0,0 +1,17 @@
+<window title=""""Testcase bug 326834 - Crash with evil xul testcase, using listbox/listitem and display: table-cell""""
+        xmlns:html=""""http://www.w3.org/1999/xhtml""""
+        xmlns=""""http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"""">
+<listbox>
+  <listitem label=""""This page should not crash Mozilla""""/>
+</listbox>
+<html:script>
+function doe() {
+var el=document.getElementsByTagName('*');
+document.getElementsByTagName('listbox')[0].style.display = 'table-cell';
+document.getElementsByTagName('listitem')[0].style.display = 'table-cell';
+window.getComputedStyle(document.getElementsByTagName('listitem')[0], '').getPropertyValue(""""height"""");
+document.getElementsByTagName('listitem')[0].style.display = '';
+}
+setTimeout(doe,500);
+</html:script>
+</window>
diff --git a/layout/xul/base/src/crashtests/326834-1.html b/layout/xul/base/src/crashtests/326834-1.html
new file mode 100644
index 0000000..ca531ca
--- /dev/null
+++ b/layout/xul/base/src/crashtests/326834-1.html
@@ -0,0 +1,9 @@
+<html class=""""reftest-wait"""">
+<head>
+<script>
+setTimeout('document.documentElement.className = """"""""', 1000);
+</script>
+<body>
+<iframe src=""""326834-1-inner.xul""""></iframe>
+</body>
+</html>
diff --git a/layout/xul/base/src/crashtests/crashtests.list b/layout/xul/base/src/crashtests/crashtests.list
index d071eef..7244714 100644
--- a/layout/xul/base/src/crashtests/crashtests.list
+++ b/layout/xul/base/src/crashtests/crashtests.list
@@ -9,6 +9,7 @@ load 291702-2.xul
 load 291702-3.xul
 load 294371-1.xul
 load 311457-1.html
+load 326834-1.html
 load 322786-1.xul
 load 326879-1.xul
 load 327776-1.xul"""
b2b68e45835bdb41fbc67eb9eb3bb09b78dc2fe2,47163,320459,Bob Clary,"bug 320459 - crash test by Waldegger Thomas.
",1240592890,"""diff --git a/layout/base/crashtests/320459-1.html b/layout/base/crashtests/320459-1.html
new file mode 100644
index 0000000..2448fa5
--- /dev/null
+++ b/layout/base/crashtests/320459-1.html
@@ -0,0 +1,7 @@
+          <legend>
+            <kbd>
+                <object>
+                  <h4>
+                </object>
+            </kbd>
+
diff --git a/layout/base/crashtests/crashtests.list b/layout/base/crashtests/crashtests.list
index 128057c..3bf3235 100644
--- a/layout/base/crashtests/crashtests.list
+++ b/layout/base/crashtests/crashtests.list
@@ -62,6 +62,7 @@ load 311661-1.html
 load 311661-2.html
 load 313086-1.xml
 load 317934-1.html
+load 320459-1.html
 load 321058-1.xul
 load 321058-2.xul
 load 321077-1.xul"""
46a1fea7cdc8bc0b1dd70187beb98097b9ad2701,47167,322215,Bob Clary,"bug 322215 - crash test by Georgi Guninski.
",1240592889,"""diff --git a/layout/svg/crashtests/322215-1.svg b/layout/svg/crashtests/322215-1.svg
new file mode 100755
index 0000000..91fee85
--- /dev/null
+++ b/layout/svg/crashtests/322215-1.svg
@@ -0,0 +1,29 @@
+<?xml version=""""1.0"""" standalone=""""no""""?>
+<!DOCTYPE svg PUBLIC """"-//W3C//DTD SVG 1.1//EN"""" 
+""""http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"""">
+<!--
+Copyright Georgi Guninski
+Licence granted to Mozilla Corporation
+-->
+
+
+<svg width=""""100%"""" height=""""100%"""" version=""""1.1""""
+xmlns=""""http://www.w3.org/2000/svg"""">
+
+<defs>
+<filter id=""""MyFilter"""" filterUnits=""""userSpaceOnUse""""
+x=""""0"""" y=""""0"""" width=""""32769"""" height=""""32769"""">
+
+<feGaussianBlur in=""""SourceAlpha"""" stdDeviation=""""4"""" result=""""blur""""/>
+
+</filter>
+</defs>
+
+<rect x=""""1"""" y=""""1"""" width=""""198"""" height=""""118"""" fill=""""#cccccc"""" />
+
+<g filter=""""url(#MyFilter)"""">
+<text fill=""""#FFFFFF"""" stroke=""""black"""" font-size=""""45""""
+x=""""42"""" y=""""42"""">Feck b1ll</text>
+</g>
+
+</svg>
diff --git a/layout/svg/crashtests/crashtests.list b/layout/svg/crashtests/crashtests.list
index a06941a..cc599bf 100644
--- a/layout/svg/crashtests/crashtests.list
+++ b/layout/svg/crashtests/crashtests.list
@@ -6,6 +6,7 @@ load 308615-1.svg
 load 308917-1.svg
 load 310436-1.svg
 load 322185-1.svg
+load 322215-1.svg
 load 326495-1.svg
 load 326974-1.svg
 load 327711-1.svg"""
72198053a0a590d40df9ab85f1d3e4d115b007fd,47168,317934,Bob Clary,"bug 317934 - crash test by Martijn Wargers.
",1240592889,"""diff --git a/layout/base/crashtests/317934-1-inner.html b/layout/base/crashtests/317934-1-inner.html
new file mode 100755
index 0000000..9c14d03
--- /dev/null
+++ b/layout/base/crashtests/317934-1-inner.html
@@ -0,0 +1,31 @@
+<html>
+<head>
+<script>
+function clickit()
+{
+document.getElementById('button').click();
+}
+window.addEventListener('load', clickit, false);
+</script>
+</head>
+<body>
+<div style=""""width:400px;"""">
+<q style=""""position:relative;""""><q style=""""position:relative;"""">
+Some random text, some random text, some random text
+<span style=""""position: relative;"""">
+Some random text, some random text, some random text
+</span>
+</q></q>
+</div>
+<script>
+function doe(){
+var q1=document.getElementsByTagName('q')[0];
+var q2=document.getElementsByTagName('q')[1];
+q1.style.position='static';
+q2.style.position='static';
+}
+//setTimeout(doe,200);
+</script>
+<button id=""""button"""" onclick=""""doe()"""">Clicking this button should not crash Mozilla</button>
+</body>
+</html>
\ No newline at end of file
diff --git a/layout/base/crashtests/317934-1.html b/layout/base/crashtests/317934-1.html
new file mode 100644
index 0000000..ee77106
--- /dev/null
+++ b/layout/base/crashtests/317934-1.html
@@ -0,0 +1,9 @@
+<html class=""""reftest-wait"""">
+<head>
+<script>
+setTimeout('document.documentElement.className = """"""""', 500);
+</script>
+<body>
+<iframe src=""""317934-1-inner.html""""></iframe>
+</body>
+</html>
diff --git a/layout/base/crashtests/crashtests.list b/layout/base/crashtests/crashtests.list
index deb29d4..d2b3ad1 100644
--- a/layout/base/crashtests/crashtests.list
+++ b/layout/base/crashtests/crashtests.list
@@ -58,6 +58,7 @@ load 310267-1.xml
 load 310638-1.svg
 load 310638-2.html
 load 313086-1.xml
+load 317934-1.html
 load 321058-1.xul
 load 321058-2.xul
 load 321077-1.xul"""
486f144161d5cf027b9578dfed2d43f3aa5384d5,47171,313173,Bob Clary,"bug 313173 - crash test by Martijn Wargers.
",1240592889,"""diff --git a/layout/xul/base/src/grid/crashtests/313173-1-inner.xul b/layout/xul/base/src/grid/crashtests/313173-1-inner.xul
new file mode 100755
index 0000000..284d6c1
--- /dev/null
+++ b/layout/xul/base/src/grid/crashtests/313173-1-inner.xul
@@ -0,0 +1,41 @@
+<?xml version=""""1.0""""?>
+
+<?xml-stylesheet href=""""chrome://global/skin/"""" type=""""text/css""""?>
+
+<window title=""""Testcase bug - Crash with evil xul testcase, using -moz-grid/table-caption""""
+        xmlns:html=""""http://www.w3.org/1999/xhtml""""
+        xmlns=""""http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"""">
+
+<grid flex=""""1"""">
+  <columns>
+    <column flex=""""1""""/>
+  </columns>
+
+  <rows>
+    <row>
+    </row>
+  </rows>
+</grid>
+
+<html:script>
+function doe(){
+document.getElementsByTagName('columns')[0].style.display='table-caption';
+setTimeout(doe2,20);
+}
+function doe2(){
+document.getElementsByTagName('columns')[0].style.display='-moz-grid';
+}     
+
+function clickit() {
+  var button = document.getElementById('button');
+  var evt = document.createEvent(""""MouseEvents"""");
+  evt.initMouseEvent(""""click"""", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
+  button.dispatchEvent(evt);
+setTimeout('clickit();', 20);
+}
+window.addEventListener('load', clickit, false);
+
+</html:script>
+        <html:button id=""""button"""" onclick=""""doe()"""" label=""""click"""">Clicking this should not crash Mozilla</html:button>
+</window>
+
diff --git a/layout/xul/base/src/grid/crashtests/313173-1.html b/layout/xul/base/src/grid/crashtests/313173-1.html
new file mode 100644
index 0000000..8b45339
--- /dev/null
+++ b/layout/xul/base/src/grid/crashtests/313173-1.html
@@ -0,0 +1,9 @@
+<html class=""""reftest-wait"""">
+<head>
+<script>
+setTimeout('document.documentElement.className = """"""""', 500);
+</script>
+<body>
+<iframe src=""""313173-1-inner.xul""""></iframe>
+</body>
+</html>
diff --git a/layout/xul/base/src/grid/crashtests/crashtests.list b/layout/xul/base/src/grid/crashtests/crashtests.list
index 2062e6e..afe8e10 100644
--- a/layout/xul/base/src/grid/crashtests/crashtests.list
+++ b/layout/xul/base/src/grid/crashtests/crashtests.list
@@ -3,6 +3,7 @@ load 306911-grid-testcases.xul
 load 306911-grid-testcases2.xul
 load 311710-1.xul
 load 312784-1.xul
+load 313173-1.html
 load 321066-1.xul
 load 321073-1.xul
 load 382750-1.xul"""
face08c310671eb8d72e5d33176b4177eae6cadd,47173,311710,Bob Clary,"bug 311710 - crash test by Martijn Wargers.
",1240592888,"""diff --git a/layout/xul/base/src/grid/crashtests/311710-1.xul b/layout/xul/base/src/grid/crashtests/311710-1.xul
new file mode 100755
index 0000000..403b267
--- /dev/null
+++ b/layout/xul/base/src/grid/crashtests/311710-1.xul
@@ -0,0 +1,22 @@
+<window title=""""Testcase bug 311710 - Evil xul testcase, using display:-moz-grid-group causes crash [@ nsGridRow::IsCollapsed]""""
+        xmlns=""""http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"""" 
+        xmlns:html=""""http://www.w3.org/1999/xhtml"""">
+<script type=""""application/x-javascript"""">
+function clickit() {
+  var button = document.getElementById('button');
+  var evt = document.createEvent(""""MouseEvents"""");
+  evt.initMouseEvent(""""click"""", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
+  button.dispatchEvent(evt);
+}
+window.addEventListener('load', clickit, false);
+</script>
+
+        <grid>
+          <rows>
+            <row>
+            <separator/> 
+            </row>
+          </rows>
+        </grid>
+<button id=""""button"""" onclick=""""document.getElementsByTagName('row')[0].style.display='-moz-grid-group'"""" label=""""Mozilla should not crash, when clicking this button""""/>
+</window>
diff --git a/layout/xul/base/src/grid/crashtests/crashtests.list b/layout/xul/base/src/grid/crashtests/crashtests.list
index 7f6b990..da2f045 100644
--- a/layout/xul/base/src/grid/crashtests/crashtests.list
+++ b/layout/xul/base/src/grid/crashtests/crashtests.list
@@ -1,6 +1,7 @@
 load 306911-crash.xul
 load 306911-grid-testcases.xul
 load 306911-grid-testcases2.xul
+load 311710-1.xul
 load 321066-1.xul
 load 321073-1.xul
 load 382750-1.xul"""
c78ae42d44b8ab1ed03d20eef0819413b7d5744e,49314,366601,Bob Clary,"imported patch bug-366601.patch
",1233160451,"""diff --git a/js/tests/public-failures.txt b/js/tests/public-failures.txt
index 633756d..e724e14 100644
--- a/js/tests/public-failures.txt
+++ b/js/tests/public-failures.txt
@@ -341,8 +341,8 @@ TEST_ID=js1_5/Regress/regress-3649-n.js, TEST_BRANCH=1.8.1, TEST_REPO=.*, TEST_B
 TEST_ID=js1_5/Regress/regress-3649-n.js, TEST_BRANCH=1.9.0, TEST_REPO=.*, TEST_BUILDTYPE=.*, TEST_TYPE=browser, TEST_OS=nt, TEST_KERNEL=.*, TEST_PROCESSORTYPE=.*, TEST_MEMORY=.*, TEST_CPUSPEED=.*, TEST_TIMEZONE=.*, TEST_OPTIONS=.*, TEST_RESULT=FAILED, TEST_EXITSTATUS=NORMAL, TEST_DESCRIPTION=No test results reported
 TEST_ID=js1_5/Regress/regress-3649-n.js, TEST_BRANCH=1.9.1, TEST_REPO=.*, TEST_BUILDTYPE=.*, TEST_TYPE=browser, TEST_OS=nt, TEST_KERNEL=.*, TEST_PROCESSORTYPE=.*, TEST_MEMORY=.*, TEST_CPUSPEED=.*, TEST_TIMEZONE=.*, TEST_OPTIONS=.*, TEST_RESULT=FAILED, TEST_EXITSTATUS=NORMAL, TEST_DESCRIPTION=No test results reported
 TEST_ID=js1_5/Regress/regress-3649-n.js, TEST_BRANCH=1.9.2, TEST_REPO=.*, TEST_BUILDTYPE=.*, TEST_TYPE=browser, TEST_OS=nt, TEST_KERNEL=.*, TEST_PROCESSORTYPE=.*, TEST_MEMORY=.*, TEST_CPUSPEED=.*, TEST_TIMEZONE=.*, TEST_OPTIONS=.*, TEST_RESULT=FAILED, TEST_EXITSTATUS=NORMAL, TEST_DESCRIPTION=No test results reported
-TEST_ID=js1_5/Regress/regress-366601.js, TEST_BRANCH=1.9.1, TEST_REPO=tracemonkey, TEST_BUILDTYPE=.*, TEST_TYPE=browser, TEST_OS=.*, TEST_KERNEL=.*, TEST_PROCESSORTYPE=.*, TEST_MEMORY=.*, TEST_CPUSPEED=.*, TEST_TIMEZONE=.*, TEST_OPTIONS=.*, TEST_RESULT=FAILED, TEST_EXITSTATUS=NORMAL, TEST_DESCRIPTION=`.``*`/js1_5/Regress/regress-366601.js:`.``*`: script too large
-TEST_ID=js1_5/Regress/regress-366601.js, TEST_BRANCH=1.9.1, TEST_REPO=tracemonkey, TEST_BUILDTYPE=.*, TEST_TYPE=shell, TEST_OS=.*, TEST_KERNEL=.*, TEST_PROCESSORTYPE=.*, TEST_MEMORY=.*, TEST_CPUSPEED=.*, TEST_TIMEZONE=.*, TEST_OPTIONS=.*, TEST_RESULT=FAILED, TEST_EXITSTATUS=ABNORMAL 3, TEST_DESCRIPTION=`.``*`/js1_5/Regress/regress-366601.js:`.``*`: InternalError: script too large
+TEST_ID=js1_5/Regress/regress-366601.js, TEST_BRANCH=1.9.1, TEST_REPO=.*, TEST_BUILDTYPE=.*, TEST_TYPE=browser, TEST_OS=.*, TEST_KERNEL=.*, TEST_PROCESSORTYPE=.*, TEST_MEMORY=.*, TEST_CPUSPEED=.*, TEST_TIMEZONE=.*, TEST_OPTIONS=.*, TEST_RESULT=FAILED, TEST_EXITSTATUS=NORMAL, TEST_DESCRIPTION=`.``*`/js1_5/Regress/regress-366601.js:`.``*`: script too large
+TEST_ID=js1_5/Regress/regress-366601.js, TEST_BRANCH=1.9.1, TEST_REPO=.*, TEST_BUILDTYPE=.*, TEST_TYPE=shell, TEST_OS=.*, TEST_KERNEL=.*, TEST_PROCESSORTYPE=.*, TEST_MEMORY=.*, TEST_CPUSPEED=.*, TEST_TIMEZONE=.*, TEST_OPTIONS=.*, TEST_RESULT=FAILED, TEST_EXITSTATUS=ABNORMAL 3, TEST_DESCRIPTION=`.``*`/js1_5/Regress/regress-366601.js:`.``*`: InternalError: script too large
 TEST_ID=js1_5/Regress/regress-366601.js, TEST_BRANCH=1.9.2, TEST_REPO=mozilla-central, TEST_BUILDTYPE=.*, TEST_TYPE=browser, TEST_OS=.*, TEST_KERNEL=.*, TEST_PROCESSORTYPE=.*, TEST_MEMORY=.*, TEST_CPUSPEED=.*, TEST_TIMEZONE=.*, TEST_OPTIONS=.*, TEST_RESULT=FAILED, TEST_EXITSTATUS=NORMAL, TEST_DESCRIPTION=`.``*`/js1_5/Regress/regress-366601.js:`.``*`: script too large
 TEST_ID=js1_5/Regress/regress-366601.js, TEST_BRANCH=1.9.2, TEST_REPO=mozilla-central, TEST_BUILDTYPE=.*, TEST_TYPE=shell, TEST_OS=.*, TEST_KERNEL=.*, TEST_PROCESSORTYPE=.*, TEST_MEMORY=.*, TEST_CPUSPEED=.*, TEST_TIMEZONE=.*, TEST_OPTIONS=.*, TEST_RESULT=FAILED, TEST_EXITSTATUS=ABNORMAL 3, TEST_DESCRIPTION=`.``*`/js1_5/Regress/regress-366601.js:`.``*`: InternalError: script too large
 TEST_ID=js1_5/Regress/regress-383674.js, TEST_BRANCH=1.8.1, TEST_REPO=.*, TEST_BUILDTYPE=.*, TEST_TYPE=.*, TEST_OS=.*, TEST_KERNEL=.*, TEST_PROCESSORTYPE=.*, TEST_MEMORY=.*, TEST_CPUSPEED=.*, TEST_TIMEZONE=.*, TEST_OPTIONS=.*, TEST_RESULT=FAILED, TEST_EXITSTATUS=NORMAL, TEST_DESCRIPTION=Statement that implicitly calls toString should not be optimized away as a """"useless expression"""": 1 reason: Expected value 'toString called', Actual value 'toString not called'"""
9db746f256ebdb9aa88471b052e5bfc64e0ace3b,52567,380418,bjarne@runitsoft.com,"Fixing bug 380418. Prevent XMLHttpRequest from reading HTTPOnly cookies. r+sr=jonas@sicking.cc, a=b2 blocker
",1226629081,"""diff --git a/content/base/src/nsXMLHttpRequest.cpp b/content/base/src/nsXMLHttpRequest.cpp
index 513ea90..6650a53 100644
--- a/content/base/src/nsXMLHttpRequest.cpp
+++ b/content/base/src/nsXMLHttpRequest.cpp
@@ -1560,6 +1560,17 @@ nsXMLHttpRequest::GetResponseHeader(const nsACString& header,
   nsresult rv = NS_OK;
   _retval.Truncate();
 
+  // See bug #380418. Hide """"Set-Cookie"""" headers from non-chrome scripts.
+  PRBool chrome = PR_FALSE; // default to false in case IsCapabilityEnabled fails
+  IsCapabilityEnabled(""""UniversalXPConnect"""", &chrome);
+  if (!chrome &&
+       (header.LowerCaseEqualsASCII(""""set-cookie"""") ||
+        header.LowerCaseEqualsASCII(""""set-cookie2""""))) {
+    NS_WARNING(""""blocked access to response header"""");
+    _retval.SetIsVoid(PR_TRUE);
+    return NS_OK;
+  }
+
   // Check for dangerous headers
   if (mState & XML_HTTP_REQUEST_USE_XSITE_AC) {
     
@@ -3343,10 +3354,19 @@ NS_IMPL_ISUPPORTS1(nsXMLHttpRequest::nsHeaderVisitor, nsIHttpHeaderVisitor)
 NS_IMETHODIMP nsXMLHttpRequest::
 nsHeaderVisitor::VisitHeader(const nsACString &header, const nsACString &value)
 {
-    mHeaders.Append(header);
-    mHeaders.Append("""": """");
-    mHeaders.Append(value);
-    mHeaders.Append('\n');
+    // See bug #380418. Hide """"Set-Cookie"""" headers from non-chrome scripts.
+    PRBool chrome = PR_FALSE; // default to false in case IsCapabilityEnabled fails
+    IsCapabilityEnabled(""""UniversalXPConnect"""", &chrome);
+    if (!chrome &&
+         (header.LowerCaseEqualsASCII(""""set-cookie"""") ||
+          header.LowerCaseEqualsASCII(""""set-cookie2""""))) {
+        NS_WARNING(""""blocked access to response header"""");
+    } else {
+        mHeaders.Append(header);
+        mHeaders.Append("""": """");
+        mHeaders.Append(value);
+        mHeaders.Append('\n');
+    }
     return NS_OK;
 }
 
diff --git a/content/base/test/Makefile.in b/content/base/test/Makefile.in
index d917e38..6a46e7c 100644
--- a/content/base/test/Makefile.in
+++ b/content/base/test/Makefile.in
@@ -258,6 +258,8 @@ _TEST_FILES = 	test_bug5141.html \
 		bug461735-redirect2.sjs \
 		bug461735-post-redirect.js \
 		test_bug461735.html \
+		test_bug380418.html \
+		test_bug380418.html^headers^ \
 		$(NULL)
 
 # Disabled for now. Mochitest isn't reliable enough for these.
diff --git a/content/base/test/test_bug380418.html b/content/base/test/test_bug380418.html
new file mode 100644
index 0000000..1059027f
--- /dev/null
+++ b/content/base/test/test_bug380418.html
@@ -0,0 +1,51 @@
+<!DOCTYPE HTML>
+<html>
+<!-- https://bugzilla.mozilla.org/show_bug.cgi?id=380418 -->
+<head>
+  <title>Test for Bug 380418</title>
+  <script type=""""text/javascript"""" src=""""/MochiKit/MochiKit.js""""></script>
+  <script type=""""text/javascript"""" src=""""/tests/SimpleTest/SimpleTest.js""""></script>        
+  <link rel=""""stylesheet"""" type=""""text/css"""" href=""""/tests/SimpleTest/test.css"""" />
+</head>
+<body>
+<a target=""""_blank"""" href=""""https://bugzilla.mozilla.org/show_bug.cgi?id=380418"""">Mozilla Bug 380418</a>
+<p id=""""display""""></p>
+<div id=""""content"""" style=""""display: none"""">
+  
+</div>
+<pre id=""""test"""">
+<script class=""""testbody"""" type=""""text/javascript"""">
+
+	SimpleTest.waitForExplicitFinish();
+	
+	var request = new XMLHttpRequest();
+	request.open(""""GET"""", window.location.href, false);
+	request.send(null);
+	
+	// Try reading headers in privileged context
+	netscape.security.PrivilegeManager.enablePrivilege(""""UniversalXPConnect UniversalBrowserRead"""");
+	is(request.getResponseHeader(""""Set-Cookie""""), """"test"""", """"Reading Set-Cookie response header in privileged context"""");
+	is(request.getResponseHeader(""""Set-Cookie2""""), """"test2"""", """"Reading Set-Cookie2 response header in privileged context"""");
+	is(request.getResponseHeader(""""X-Dummy""""), """"test"""", """"Reading X-Dummy response header in privileged context"""");
+	
+	ok(/\bSet-Cookie:/i.test(request.getAllResponseHeaders()), """"Looking for Set-Cookie in all response headers in privileged context"""");
+	ok(/\bSet-Cookie2:/i.test(request.getAllResponseHeaders()), """"Looking for Set-Cookie2 in all response headers in privileged context"""");
+	ok(/\bX-Dummy:/i.test(request.getAllResponseHeaders()), """"Looking for X-Dummy in all response headers in privileged context"""");
+	
+	// Try reading headers in unprivileged context
+	setTimeout(function() {
+	  is(request.getResponseHeader(""""Set-Cookie""""), null, """"Reading Set-Cookie response header in unprivileged context"""");
+	  is(request.getResponseHeader(""""Set-Cookie2""""), null, """"Reading Set-Cookie2 response header in unprivileged context"""");
+	  is(request.getResponseHeader(""""X-Dummy""""), """"test"""", """"Reading X-Dummy response header in unprivileged context"""");
+	  
+	  ok(!/\bSet-Cookie:/i.test(request.getAllResponseHeaders()), """"Looking for Set-Cookie in all response headers in unprivileged context"""");
+	  ok(!/\bSet-Cookie2:/i.test(request.getAllResponseHeaders()), """"Looking for Set-Cookie2 in all response headers in unprivileged context"""");
+	  ok(/\bX-Dummy:/i.test(request.getAllResponseHeaders()), """"Looking for X-Dummy in all response headers in unprivileged context"""");
+	
+	  SimpleTest.finish();
+	}, 0);
+
+</script>
+</pre>
+</body>
+</html>
diff --git a/content/base/test/test_bug380418.html^headers^ b/content/base/test/test_bug380418.html^headers^
new file mode 100644
index 0000000..5f8d496
--- /dev/null
+++ b/content/base/test/test_bug380418.html^headers^
@@ -0,0 +1,4 @@
+Set-Cookie: test
+Set-Cookie2: test2
+X-Dummy: test
+Cache-Control: max-age=0"""
ed82289b00a88d71724351d54170a30eeb2eb14e,60264,379959,bent.mozilla@gmail.com,"Bug 379959. Patch by Jonas Sicking <jonas@sicking.cc>. r+sr=bz, a=damons.
",1209426967,"""diff --git a/build/pgo/automation.py.in b/build/pgo/automation.py.in
index 09cc15a..c48564a 100644
--- a/build/pgo/automation.py.in
+++ b/build/pgo/automation.py.in
@@ -240,6 +240,7 @@ user_pref(""""browser.shell.checkDefaultBrowser"""", false);
 user_pref(""""browser.warnOnQuit"""", false);
 user_pref(""""accessibility.typeaheadfind.autostart"""", false);
 user_pref(""""javascript.options.showInConsole"""", true);
+user_pref(""""layout.debug.enable_data_xbl"""", true);
 """"""""""""
   prefs.append(part)
 
diff --git a/content/base/public/nsContentUtils.h b/content/base/public/nsContentUtils.h
index 7d9df7b..b1898a2 100644
--- a/content/base/public/nsContentUtils.h
+++ b/content/base/public/nsContentUtils.h
@@ -546,6 +546,7 @@ public:
   static void UnregisterPrefCallback(const char *aPref,
                                      PrefChangedFunc aCallback,
                                      void * aClosure);
+  static void AddBoolPrefVarCache(const char* aPref, PRBool* aVariable);
   static nsIPrefBranch *GetPrefBranch()
   {
     return sPrefBranch;
diff --git a/content/base/src/nsContentUtils.cpp b/content/base/src/nsContentUtils.cpp
index e81c2ca..c249569 100644
--- a/content/base/src/nsContentUtils.cpp
+++ b/content/base/src/nsContentUtils.cpp
@@ -2500,6 +2500,22 @@ nsContentUtils::UnregisterPrefCallback(const char *aPref,
     sPref->UnregisterCallback(aPref, aCallback, aClosure);
 }
 
+static int PR_CALLBACK
+BoolVarChanged(const char *aPref, void *aClosure)
+{
+  PRBool* cache = static_cast<PRBool*>(aClosure);
+  *cache = nsContentUtils::GetBoolPref(aPref, PR_FALSE);
+  
+  return 0;
+}
+
+void
+nsContentUtils::AddBoolPrefVarCache(const char *aPref,
+                                    PRBool* aCache)
+{
+  *aCache = GetBoolPref(aPref, PR_FALSE);
+  RegisterPrefCallback(aPref, BoolVarChanged, aCache);
+}
 
 static const char *gEventNames[] = {""""event""""};
 static const char *gSVGEventNames[] = {""""evt""""};
@@ -3844,6 +3860,13 @@ nsContentUtils::CheckSecurityBeforeLoad(nsIURI* aURIToLoad,
                                         nsISupports* aExtra)
 {
   NS_PRECONDITION(aLoadingPrincipal, """"Must have a loading principal here"""");
+
+  PRBool isSystemPrin = PR_FALSE;
+  if (NS_SUCCEEDED(sSecurityManager->IsSystemPrincipal(aLoadingPrincipal,
+                                                       &isSystemPrin)) &&
+      isSystemPrin) {
+    return NS_OK;
+  }
   
   // XXXbz do we want to fast-path skin stylesheets loading XBL here somehow?
   // CheckLoadURIWithPrincipal
diff --git a/content/xbl/src/nsXBLService.cpp b/content/xbl/src/nsXBLService.cpp
index 5d8a500..6a86315 100644
--- a/content/xbl/src/nsXBLService.cpp
+++ b/content/xbl/src/nsXBLService.cpp
@@ -427,7 +427,8 @@ nsXBLStreamListener::Load(nsIDOMEvent* aEvent)
 
 // Static member variable initialization
 PRUint32 nsXBLService::gRefCnt = 0;
- 
+PRBool nsXBLService::gAllowDataURIs = PR_FALSE;
+
 nsHashtable* nsXBLService::gClassTable = nsnull;
 
 JSCList  nsXBLService::gClassLRUList = JS_INIT_STATIC_CLIST(&nsXBLService::gClassLRUList);
@@ -446,6 +447,9 @@ nsXBLService::nsXBLService(void)
   if (gRefCnt == 1) {
     gClassTable = new nsHashtable();
   }
+  
+  nsContentUtils::AddBoolPrefVarCache(""""layout.debug.enable_data_xbl"""",
+                                      &gAllowDataURIs);
 }
 
 nsXBLService::~nsXBLService(void)
@@ -958,7 +962,7 @@ nsXBLService::LoadBindingDocumentInfo(nsIContent* aBoundElement,
     rv = nsContentUtils::
       CheckSecurityBeforeLoad(aBindingURI, aOriginPrincipal,
                               nsIScriptSecurityManager::ALLOW_CHROME,
-                              PR_TRUE,
+                              gAllowDataURIs,
                               nsIContentPolicy::TYPE_XBL,
                               aBoundDocument);
     NS_ENSURE_SUCCESS(rv, rv);
diff --git a/content/xbl/src/nsXBLService.h b/content/xbl/src/nsXBLService.h
index d8c506b..b6bb9a2 100644
--- a/content/xbl/src/nsXBLService.h
+++ b/content/xbl/src/nsXBLService.h
@@ -150,6 +150,9 @@ public:
   static JSCList  gClassLRUList;             // LRU list of cached classes.
   static PRUint32 gClassLRUListLength;       // Number of classes on LRU list.
   static PRUint32 gClassLRUListQuota;        // Quota on class LRU list.
+  static PRBool   gAllowDataURIs;            // Whether we should allow data
+                                             // urls in -moz-binding. Needed for
+                                             // testing.
 
   nsFixedSizeAllocator mPool;
 };
diff --git a/content/xbl/test/Makefile.in b/content/xbl/test/Makefile.in
index 9deb767..28037a7 100644
--- a/content/xbl/test/Makefile.in
+++ b/content/xbl/test/Makefile.in
@@ -49,6 +49,7 @@ include $(topsrcdir)/config/rules.mk
 _TEST_FILES =	\
 		test_bug296375.xul \
 		test_bug310107.html \
+		bug310107-resource.xhtml \
 		test_bug366770.html \
 		test_bug371724.xhtml \
 		test_bug372769.xhtml \
@@ -60,7 +61,10 @@ _TEST_FILES =	\
 		test_bug400705.xhtml \
 		test_bug401907.xhtml \
 		test_bug403162.xhtml \
-		bug310107-resource.xhtml \
+		test_bug379959.html \
+		file_bug379959_data.html \
+		file_bug379959_cross.html \
+		file_bug379959_xbl.xml \
 		$(NULL)
 
 libs:: $(_TEST_FILES)
diff --git a/content/xbl/test/file_bug379959_cross.html b/content/xbl/test/file_bug379959_cross.html
new file mode 100644
index 0000000..21e1149
--- /dev/null
+++ b/content/xbl/test/file_bug379959_cross.html
@@ -0,0 +1,25 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+<style>
+#div1 {
+  color: green;
+  -moz-binding: url(file_bug379959_xbl.xml#xbltest);
+}
+#div2 {
+  color: green;
+  -moz-binding: url(http://example.com/tests/content/xbl/test/file_bug379959_xbl.xml#xbltest);
+}
+</style>
+<body>
+<div id=""""div1""""></div>
+<div id=""""div2""""></div>
+<script>
+onload = function() {
+  nodes = document.getAnonymousNodes(document.getElementById('div1'));
+  parent.postMessage(nodes ? nodes.length : 0);
+  nodes = document.getAnonymousNodes(document.getElementById('div2'));
+  parent.postMessage(nodes ? nodes.length : 0);
+}
+</script>
+</html>
diff --git a/content/xbl/test/file_bug379959_data.html b/content/xbl/test/file_bug379959_data.html
new file mode 100644
index 0000000..ae9d943
--- /dev/null
+++ b/content/xbl/test/file_bug379959_data.html
@@ -0,0 +1,18 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+<style>
+#d {
+  color: green;
+  -moz-binding: url(data:text/xml;charset=utf-8,%3C%3Fxml%20version%3D%221.0%22%3F%3E%0A%3Cbindings%20id%3D%22xbltestBindings%22%20xmlns%3D%22http%3A//www.mozilla.org/xbl%22%3E%0A%20%20%3Cbinding%20id%3D%22xbltest%22%3E%3Ccontent%3EPASS%3C/content%3E%3C/binding%3E%0A%3C/bindings%3E%0A);
+}
+</style>
+<body>
+<div id=""""d""""></div>
+<script>
+onload = function() {
+  nodes = document.getAnonymousNodes(document.getElementById('d'));
+  parent.postMessage(nodes ? nodes.length : 0);
+}
+</script>
+</html>
diff --git a/content/xbl/test/file_bug379959_xbl.xml b/content/xbl/test/file_bug379959_xbl.xml
new file mode 100644
index 0000000..c791a2e
--- /dev/null
+++ b/content/xbl/test/file_bug379959_xbl.xml
@@ -0,0 +1,4 @@
+<?xml version=""""1.0""""?>
+<bindings id=""""xbltestBindings"""" xmlns=""""http://www.mozilla.org/xbl"""">
+  <binding id=""""xbltest""""><content>PASS</content></binding>
+</bindings>
diff --git a/content/xbl/test/test_bug379959.html b/content/xbl/test/test_bug379959.html
new file mode 100644
index 0000000..fdda4f2
--- /dev/null
+++ b/content/xbl/test/test_bug379959.html
@@ -0,0 +1,82 @@
+<!DOCTYPE HTML>
+<html>
+<!--
+https://bugzilla.mozilla.org/show_bug.cgi?id=366770
+-->
+<head>
+  <title>Test for Bug 366770</title>
+  <script type=""""text/javascript"""" src=""""/MochiKit/MochiKit.js""""></script>
+  <script type=""""text/javascript"""" src=""""/tests/SimpleTest/SimpleTest.js""""></script>
+  <link rel=""""stylesheet"""" type=""""text/css"""" href=""""/tests/SimpleTest/test.css"""" />
+</head>
+<body onload=""""gen.next();"""">
+  <a target=""""_blank"""" href=""""https://bugzilla.mozilla.org/show_bug.cgi?id=366770"""">Mozilla Bug 366770</a>
+  <p id=""""display"""">
+    Note: In order to re-run this test correctly you need to shift-reload
+    rather than simply reload. If you just reload we will restore the
+    previous url in the iframe which will result in an extra unexpected
+    message.
+  </p>
+  <div id=""""content"""" style=""""display: none""""></div>
+  <iframe id=""""f""""></iframe>
+
+  <pre id=""""test"""">
+    <script class=""""testbody"""" type=""""application/javascript;version=1.7"""">
+SimpleTest.waitForExplicitFinish();
+
+gen = runTest();
+var messages = 0;
+
+document.addEventListener(""""message"""",
+                          function(e) { messages++; gen.send(e.data); },
+                          false);
+
+const prefName = """"layout.debug.enable_data_xbl"""";
+
+function runTest() {
+  iframe = document.getElementById('f');
+
+  // Turn on loads of data-urls
+  netscape.security.PrivilegeManager.enablePrivilege(""""UniversalXPConnect"""");
+  var prefs = Components.classes[""""@mozilla.org/preferences-service;1""""]
+    .getService(Components.interfaces.nsIPrefBranch);
+  var oldPrefVal = undefined;
+  if (prefs.prefHasUserValue(prefName)) {
+    oldPrefVal = prefs.getBoolPref(prefName);
+  }
+
+  // Test with data-urls off
+  prefs.setBoolPref(prefName, false);
+  iframe.src = """"file_bug379959_data.html"""";
+  is((yield), 0, """"data-url load should have failed"""");
+
+  // Test with data-urls on
+  prefs.setBoolPref(prefName, true);
+  iframe.src = """"file_bug379959_data.html"""";
+  is((yield), 1, """"data-url load should have been successful"""");
+
+  // Try a cross-site load
+  iframe.src = """"file_bug379959_cross.html"""";
+  is((yield), 1, """"same site load should have succeeded"""");
+  is((yield), 0, """"cross site load should have failed"""");
+
+  // Check that we got the right number of messages to make sure that
+  // the right message has aligned with the right test
+  is(messages, 4, """"wrong number of messages"""");
+
+  // We're done
+  if (oldPrefVal === undefined) {
+    prefs.clearUserPref(prefName);
+  }
+  else {
+    prefs.setBoolPref(prefName, oldPrefVal);
+  }
+
+  SimpleTest.finish();
+
+  yield;
+}
+    </script>
+  </pre>
+</body>
+</html>
diff --git a/testing/mochitest/runtests.pl.in b/testing/mochitest/runtests.pl.in
index cd20d64..0d956bc 100644
--- a/testing/mochitest/runtests.pl.in
+++ b/testing/mochitest/runtests.pl.in
@@ -438,6 +438,7 @@ user_pref(""""browser.shell.checkDefaultBrowser"""", false);
 user_pref(""""browser.warnOnQuit"""", false);
 user_pref(""""accessibility.typeaheadfind.autostart"""", false);
 user_pref(""""javascript.options.showInConsole"""", true);
+user_pref(""""layout.debug.enable_data_xbl"""", true);
 PREFEND
 
   # Grant God-power to all the servers on which tests can run.
diff --git a/testing/tools/profiles/createTestingProfile.py b/testing/tools/profiles/createTestingProfile.py
index 4c10002..6cdc32ff 100644
--- a/testing/tools/profiles/createTestingProfile.py
+++ b/testing/tools/profiles/createTestingProfile.py
@@ -23,7 +23,8 @@ userPrefs = {
     'dom.disable_window_move_resize': 'false',
     'layout.fire_onload_after_image_background_loads': 'true',
     'javascript.options.showInConsole': 'true',
-    'privacy.popups.firstTime': 'false'
+    'privacy.popups.firstTime': 'false',
+    'layout.debug.enable_data_xbl': 'true'
 }
 
 def usage():"""
a34a3be0669847a943604a8990ef170b91c27afc,60360,379959,jonas@sicking.cc,"Change reftest and crashtest in preparation for bug 379959 to not use data-urls for -moz-binding. r=dholbert. Test changes only.
",1209012093,"""diff --git a/content/xul/content/crashtests/360078-1.xhtml b/content/xul/content/crashtests/360078-1.xhtml
index 69bed72..a290870 100644
--- a/content/xul/content/crashtests/360078-1.xhtml
+++ b/content/xul/content/crashtests/360078-1.xhtml
@@ -3,7 +3,7 @@
 
 <style>
 <![CDATA[
-#baz { -moz-binding: url('data:text/xml,%3Cbindings%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%3E%3Cbinding%20id%3D%22foo%22%3E%3Ccontent%3E%0D%0A%3Ca%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20href%3D%22http%3A%2F%2Fwww.mozilla.org%2F%22%20id%3D%22mlink%22%3EFoo%3Cchildren%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%2F%3E%3C%2Fa%3E%0D%0A%3C%2Fcontent%3E%3C%2Fbinding%3E%3C%2Fbindings%3E%0D%0A'); }
+#baz { -moz-binding: url(360078-1xbl.xml#foo); }
 ]]>
 </style>
 
diff --git a/content/xul/content/crashtests/360078-1xbl.xml b/content/xul/content/crashtests/360078-1xbl.xml
new file mode 100644
index 0000000..c0f428c
--- /dev/null
+++ b/content/xul/content/crashtests/360078-1xbl.xml
@@ -0,0 +1,3 @@
+<bindings xmlns=""""http://www.mozilla.org/xbl""""><binding id=""""foo""""><content>
+<a xmlns=""""http://www.w3.org/1999/xhtml"""" href=""""http://www.mozilla.org/"""" id=""""mlink"""">Foo<children xmlns=""""http://www.mozilla.org/xbl""""/></a>
+</content></binding></bindings>
diff --git a/layout/reftests/bugs/372323-1.xhtml b/layout/reftests/bugs/372323-1.xhtml
index 3fc02a0..f43d520 100644
--- a/layout/reftests/bugs/372323-1.xhtml
+++ b/layout/reftests/bugs/372323-1.xhtml
@@ -5,20 +5,8 @@
     </style>
   </head>
   <body onload=""""runTest()"""">
-    <!-- The data: URIs are this binding
-<bindings xmlns=""""http://www.mozilla.org/xbl"""">
-  <binding id=""""test"""">
-    <content>
-      <children includes=""""span""""/>
-      <html:div xmlns:html=""""http://www.w3.org/1999/xhtml"""" style=""""color: red"""">
-        <children/>
-      </html:div>
-    </content>
-  </binding>
-</bindings>
-    -->
-    <div id=""""test1"""" style=""""-moz-binding: url(data:text/xml,%3Cbindings%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%3E%0D%0A%20%20%3Cbinding%20id%3D%22test%22%3E%0D%0A%20%20%20%20%3Ccontent%3E%0D%0A%20%20%20%20%20%20%3Cchildren%20includes%3D%22span%22%2F%3E%0D%0A%20%20%20%20%20%20%3Chtml%3Adiv%20xmlns%3Ahtml%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22color%3A%20red%22%3E%0D%0A%20%20%20%20%20%20%20%20%3Cchildren%2F%3E%0D%0A%20%20%20%20%20%20%3C%2Fhtml%3Adiv%3E%0D%0A%20%20%20%20%3C%2Fcontent%3E%0D%0A%20%20%3C%2Fbinding%3E%0D%0A%3C%2Fbindings%3E%0D%0A);""""/>
-    <div id=""""test2"""" style=""""-moz-binding: url(data:text/xml,%3Cbindings%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%3E%0D%0A%20%20%3Cbinding%20id%3D%22test%22%3E%0D%0A%20%20%20%20%3Ccontent%3E%0D%0A%20%20%20%20%20%20%3Cchildren%20includes%3D%22span%22%2F%3E%0D%0A%20%20%20%20%20%20%3Chtml%3Adiv%20xmlns%3Ahtml%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22color%3A%20red%22%3E%0D%0A%20%20%20%20%20%20%20%20%3Cchildren%2F%3E%0D%0A%20%20%20%20%20%20%3C%2Fhtml%3Adiv%3E%0D%0A%20%20%20%20%3C%2Fcontent%3E%0D%0A%20%20%3C%2Fbinding%3E%0D%0A%3C%2Fbindings%3E%0D%0A);"""">
+    <div id=""""test1"""" style=""""-moz-binding: url(372323-1xbl.xml#test);""""/>
+    <div id=""""test2"""" style=""""-moz-binding: url(372323-1xbl.xml#test);"""">
       <!-- Make the script load, so the binding loads first -->
       <script src=""""data:text/javascript,document.body.offsetWidth;""""/>
       <!-- The whitespace here is important... or this comment will do
diff --git a/layout/reftests/bugs/372323-1xbl.xml b/layout/reftests/bugs/372323-1xbl.xml
new file mode 100644
index 0000000..e72d031
--- /dev/null
+++ b/layout/reftests/bugs/372323-1xbl.xml
@@ -0,0 +1,11 @@
+<bindings xmlns=""""http://www.mozilla.org/xbl"""">
+  <binding id=""""test"""">
+    <content>
+      <children includes=""""span""""/>
+      <html:div xmlns:html=""""http://www.w3.org/1999/xhtml"""" style=""""color: red"""">
+        <children/>
+      </html:div>
+    </content>
+  </binding>
+
+</bindings>
diff --git a/layout/reftests/bugs/374193-1.xhtml b/layout/reftests/bugs/374193-1.xhtml
index 3c000fe..b567f97 100644
--- a/layout/reftests/bugs/374193-1.xhtml
+++ b/layout/reftests/bugs/374193-1.xhtml
@@ -2,6 +2,6 @@
   ><mtd xmlns=""""http://www.w3.org/1998/Math/MathML""""
   ><th xmlns=""""http://www.w3.org/1999/xhtml""""
   /><mtable xmlns=""""http://www.w3.org/1998/Math/MathML""""
-  ><th xmlns=""""http://www.w3.org/1999/xhtml"""" style=""""-moz-binding: url(data:text/xml;charset=utf-8,%3Cbindings%20xmlns%3D%22http%3A//www.mozilla.org/xbl%22%3E%0A%3Cbinding%20id%3D%22a%22%3E%0A%3Cimplementation%3E%0A%3Cconstructor%3E%0A%20%20this.style.position%3D%27fixed%27%3B%0A%3C/constructor%3E%0A%3C/implementation%3E%0A%3Ccontent%3E%3Cchildren/%3E%3C/content%3E%0A%3C/binding%3E%0A%3C/bindings%3E);"""" id=""""mw_th20""""></th></mtable></mtd><style>
+  ><th xmlns=""""http://www.w3.org/1999/xhtml"""" style=""""-moz-binding: url(374193-1xbl.xml);"""" id=""""mw_th20""""></th></mtable></mtd><style>
 mtable::after { content:""""anonymous text""""; }
 </style></html>
diff --git a/layout/reftests/bugs/374193-1xbl.xml b/layout/reftests/bugs/374193-1xbl.xml
new file mode 100644
index 0000000..c1d2883
--- /dev/null
+++ b/layout/reftests/bugs/374193-1xbl.xml
@@ -0,0 +1,10 @@
+<bindings xmlns=""""http://www.mozilla.org/xbl"""">
+<binding id=""""a"""">
+<implementation>
+<constructor>
+  this.style.position='fixed';
+</constructor>
+</implementation>
+<content><children/></content>
+</binding>
+</bindings>
diff --git a/layout/reftests/bugs/396286-1.html b/layout/reftests/bugs/396286-1.html
index 2a5a7a1..0af9132 100644
--- a/layout/reftests/bugs/396286-1.html
+++ b/layout/reftests/bugs/396286-1.html
@@ -2,10 +2,10 @@
 <style id=""""script"""">#a::first-line {}</style>
 </head>
 <body>
-<span id=""""a"""" style=""""-moz-binding: url(data:text/xml;charset=utf-8,%3Cbindings%20xmlns%3D%22http%3A//www.mozilla.org/xbl%22%3E%0A%3Cbinding%20id%3D%22a%22%3E%0A%3Cimplementation%3E%0A%3Cconstructor%3E%0A%20%20this.style.position%3D%27fixed%27%3B%0A%3C/constructor%3E%0A%3C/implementation%3E%0A%3Ccontent%3E%0A%3Cchildren/%3E%0A%3C/content%3E%0A%3C/binding%3E%0A%3C/bindings%3E);"""">
+<span id=""""a"""" style=""""-moz-binding: url(396286-1xbl.xml#a);"""">
   <br>
-  <span style=""""-moz-binding: url(data:text/xml;charset=utf-8,%3Cbindings%20xmlns%3D%22http%3A//www.mozilla.org/xbl%22%3E%0A%3Cbinding%20id%3D%22a%22%3E%0A%3Ccontent%3E%0A%3Cchildren/%3E%0A%3C/content%3E%0A%3C/binding%3E%0A%3C/bindings%3E);"""">
-    <span style=""""position: absolute;-moz-binding: url(data:text/xml;charset=utf-8,%3Cbindings%20xmlns%3D%22http%3A//www.mozilla.org/xbl%22%3E%0A%3Cbinding%20id%3D%22a%22%3E%0A%3Cimplementation%3E%0A%3Cconstructor%3E%0A%20%20this.style.position%3D%27fixed%27%3B%0A%3C/constructor%3E%0A%3C/implementation%3E%0A%3Ccontent%3E%0A%3Cchildren/%3E%0A%3C/content%3E%0A%3C/binding%3E%0A%3C/bindings%3E);""""></span>
+  <span style=""""-moz-binding: url(396286-1xbl.xml#b);"""">
+    <span style=""""position: absolute;-moz-binding: url(396286-1xbl.xml#a);""""></span>
   </span>
 </span>
 </body>
diff --git a/layout/reftests/bugs/396286-1xbl.xml b/layout/reftests/bugs/396286-1xbl.xml
new file mode 100644
index 0000000..d1421d2
--- /dev/null
+++ b/layout/reftests/bugs/396286-1xbl.xml
@@ -0,0 +1,20 @@
+<bindings xmlns=""""http://www.mozilla.org/xbl"""">
+
+<binding id=""""a"""">
+<implementation>
+<constructor>
+  this.style.position='fixed';
+</constructor>
+</implementation>
+<content>
+<children/>
+</content>
+</binding>
+
+<binding id=""""b"""">
+<content>
+<children/>
+</content>
+</binding>
+
+</bindings>
diff --git a/layout/reftests/bugs/403962-1.xhtml b/layout/reftests/bugs/403962-1.xhtml
index 16f9bdb..6f135ca 100644
--- a/layout/reftests/bugs/403962-1.xhtml
+++ b/layout/reftests/bugs/403962-1.xhtml
@@ -1,39 +1,10 @@
 <html xmlns=""""http://www.w3.org/1999/xhtml"""" class=""""reftest-wait"""">
   <head>
-    <!--
-      The binding attached to #test1 and #test2 is:
-
-<bindings xmlns=""""http://www.mozilla.org/xbl"""">
-  <binding id=""""test"""">
-    <content>
-      <html:div xmlns:html=""""http://www.w3.org/1999/xhtml""""
-                style=""""color: red; -moz-binding: url(data:text/xml,%3Cbindings%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%3E%0D%0A%20%20%3Cbinding%20id%3D%22test-base%22%3E%0D%0A%20%20%20%20%3Ccontent%3E%0D%0A%20%20%20%20%20%20%3Chtml%3Adiv%20xmlns%3Ahtml%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22color%3A%20green%22%3E%0D%0A%20%20%20%20%20%20%20%20%3Cchildren%20includes%3D%22span%22%2F%3E%0D%0A%20%20%20%20%20%20%3C%2Fhtml%3Adiv%3E%0D%0A%20%20%20%20%20%20%3Chtml%3Adiv%20xmlns%3Ahtml%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22color%3A%20red%22%3E%0D%0A%20%20%20%20%20%20%20%20%3Cchildren%2F%3E%0D%0A%20%20%20%20%20%20%3C%2Fhtml%3Adiv%3E%0D%0A%20%20%20%20%3C%2Fcontent%3E%0D%0A%20%20%3C%2Fbinding%3E%0D%0A%3C%2Fbindings%3E%0D%0A)"""">
-        <children/>
-      </html:div>
-    </content>
-  </binding>
-</bindings>
-
-    where the binding attached to the content div is:
-      
-<bindings xmlns=""""http://www.mozilla.org/xbl"""">
-  <binding id=""""test-base"""">
-    <content>
-      <html:div xmlns:html=""""http://www.w3.org/1999/xhtml"""" style=""""color: green"""">
-        <children includes=""""span""""/>
-      </html:div>
-      <html:div xmlns:html=""""http://www.w3.org/1999/xhtml"""" style=""""color: red"""">
-        <children/>
-      </html:div>
-    </content>
-  </binding>
-</bindings>
--->
     <style>
       div { color: green; }
 
       #test1, #test2 {
-        -moz-binding: url(""""data:text/xml,%3Cbindings%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%3E%0D%0A%20%20%3Cbinding%20id%3D%22test%22%3E%0D%0A%20%20%20%20%3Ccontent%3E%0D%0A%20%20%20%20%20%20%3Chtml%3Adiv%20xmlns%3Ahtml%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20style%3D%22color%3A%20red%3B%20-moz-binding%3A%20url(data%3Atext%2Fxml%2C%253Cbindings%2520xmlns%253D%2522http%253A%252F%252Fwww.mozilla.org%252Fxbl%2522%253E%250D%250A%2520%2520%253Cbinding%2520id%253D%2522test-base%2522%253E%250D%250A%2520%2520%2520%2520%253Ccontent%253E%250D%250A%2520%2520%2520%2520%2520%2520%253Chtml%253Adiv%2520xmlns%253Ahtml%253D%2522http%253A%252F%252Fwww.w3.org%252F1999%252Fxhtml%2522%2520style%253D%2522color%253A%2520green%2522%253E%250D%250A%2520%2520%2520%2520%2520%2520%2520%2520%253Cchildren%2520includes%253D%2522span%2522%252F%253E%250D%250A%2520%2520%2520%2520%2520%2520%253C%252Fhtml%253Adiv%253E%250D%250A%2520%2520%2520%2520%2520%2520%253Chtml%253Adiv%2520xmlns%253Ahtml%253D%2522http%253A%252F%252Fwww.w3.org%252F1999%252Fxhtml%2522%2520style%253D%2522color%253A%2520red%2522%253E%250D%250A%2520%2520%2520%2520%2520%2520%2520%2520%253Cchildren%252F%253E%250D%250A%2520%2520%2520%2520%2520%2520%253C%252Fhtml%253Adiv%253E%250D%250A%2520%2520%2520%2520%253C%252Fcontent%253E%250D%250A%2520%2520%253C%252Fbinding%253E%250D%250A%253C%252Fbindings%253E%250D%250A)%22%3E%0D%0A%20%20%20%20%20%20%20%20%3Cchildren%2F%3E%0D%0A%20%20%20%20%20%20%3C%2Fhtml%3Adiv%3E%0D%0A%20%20%20%20%3C%2Fcontent%3E%0D%0A%20%20%3C%2Fbinding%3E%0D%0A%3C%2Fbindings%3E%0D%0A"""");
+        -moz-binding: url(403962-1xbl.xml#test);
       }
     </style>
   </head>
diff --git a/layout/reftests/bugs/403962-1xbl.xml b/layout/reftests/bugs/403962-1xbl.xml
new file mode 100644
index 0000000..5f26345
--- /dev/null
+++ b/layout/reftests/bugs/403962-1xbl.xml
@@ -0,0 +1,22 @@
+<bindings xmlns=""""http://www.mozilla.org/xbl"""">
+  <binding id=""""test"""">
+    <content>
+      <html:div xmlns:html=""""http://www.w3.org/1999/xhtml""""
+                style=""""color: red; -moz-binding: url(403962-1xbl.xml#test-base)"""">
+        <children/>
+      </html:div>
+    </content>
+  </binding>
+
+  <binding id=""""test-base"""">
+    <content>
+      <html:div xmlns:html=""""http://www.w3.org/1999/xhtml"""" style=""""color: green"""">
+        <children includes=""""span""""/>
+      </html:div>
+      <html:div xmlns:html=""""http://www.w3.org/1999/xhtml"""" style=""""color: red"""">
+        <children/>
+      </html:div>
+
+    </content>
+  </binding>
+</bindings>"""
b82a7c41079a99b08199da4e4e8721cd0d335e4d,61537,338001,bclary@bclary.com,"JavaScript Tests - update test for bug 338001 to handle various memory pressure scenarios
",1206731685,"""diff --git a/js/tests/js1_5/Function/regress-338001.js b/js/tests/js1_5/Function/regress-338001.js
index 58f4189..7952b0e 100755
--- a/js/tests/js1_5/Function/regress-338001.js
+++ b/js/tests/js1_5/Function/regress-338001.js
@@ -40,7 +40,7 @@ var gTestfile = 'regress-338001.js';
 var BUGNUMBER = 338001;
 var summary = 'integer overflow in jsfun.c:Function';
 var actual = 'No Crash';
-var expect = 'No Crash';
+var expect = /No Crash|InternalError: allocation size overflow|InternalError: script stack space quota is exhausted/;
 
 printBugNumber(BUGNUMBER);
 printStatus (summary);
@@ -66,10 +66,9 @@ try
 catch(ex)
 {
   // handle changed 1.9 branch behavior. see bug 422348
-  expect = 'InternalError: allocation size overflow';
   actual = ex + '';
 }
  
-print('Done');
+print('Done: ' + actual);
 
-reportCompare(expect, actual, summary);
+reportMatch(expect, actual, summary);"""
8e4fd01c692f3e2f35adc10c563b3af57a120aa2,61736,360529,mozilla.mano@sent.com,"Bug 360529, r+a=mconnor.
",1206362624,"""diff --git a/browser/components/feeds/src/FeedWriter.js b/browser/components/feeds/src/FeedWriter.js
index cd874b5..087ed45 100755
--- a/browser/components/feeds/src/FeedWriter.js
+++ b/browser/components/feeds/src/FeedWriter.js
@@ -203,10 +203,15 @@ FeedWriter.prototype = {
   },
 
   _setContentText: function FW__setContentText(id, text) {
-    var element = this._document.getElementById(id);
-    while (element.hasChildNodes())
-      element.removeChild(element.firstChild);
-    element.appendChild(this._document.createTextNode(text));
+    this._contentSandbox.element = this._document.getElementById(id);
+    this._contentSandbox.textNode = this._document.createTextNode(text);
+    var codeStr =
+      """"while (element.hasChildNodes()) """" +
+      """"  element.removeChild(element.firstChild);"""" +
+      """"element.appendChild(textNode);"""";
+    Cu.evalInSandbox(codeStr, this._contentSandbox);
+    this._contentSandbox.element = null;
+    this._contentSandbox.textNode = null;
   },
 
   /**
@@ -229,11 +234,28 @@ FeedWriter.prototype = {
       // checkLoadURIStrWithPrincipal will throw if the link URI should not be
       // loaded, either because our feedURI isn't allowed to load it or per
       // the rules specified in |flags|, so we'll never """"linkify"""" the link...
-      element.setAttribute(attribute, uri);
     }
     catch (e) {
       // Not allowed to load this link because secman.checkLoadURIStr threw
+      return;
     }
+
+    this._contentSandbox.element = element;
+    this._contentSandbox.uri = uri;
+    var codeStr = """"element.setAttribute('"""" + attribute + """"', uri);"""";
+    Cu.evalInSandbox(codeStr, this._contentSandbox);
+  },
+
+  /**
+   * Use this sandbox to run any dom manipulation code on nodes which
+   * are already inserted into the content document.
+   */
+  __contentSandbox: null,
+  get _contentSandbox() {
+    if (!this.__contentSandbox)
+      this.__contentSandbox = new Cu.Sandbox(this._window);
+
+    return this.__contentSandbox;
   },
 
   /**
@@ -244,9 +266,9 @@ FeedWriter.prototype = {
    *        the XUL element to call doCommand() on.
    */
   _safeDoCommand: function FW___safeDoCommand(aElement) {
-    var sandbox = new Cu.Sandbox(this._window);
-    sandbox.element = aElement;
-    Cu.evalInSandbox(""""element.doCommand();"""", sandbox);
+    this._contentSandbox.element = aElement;
+    Cu.evalInSandbox(""""element.doCommand();"""", this._contentSandbox);
+    this._contentSandbox.element = null;
   },
 
   __faviconService: null,
@@ -290,47 +312,23 @@ FeedWriter.prototype = {
   },
 
   _setCheckboxCheckedState: function FW__setCheckboxCheckedState(aCheckbox, aValue) {
-    // see checkbox.xml
+    // see checkbox.xml, xbl bindings are not applied within the sandbox!
+    this._contentSandbox.checkbox = aCheckbox;
+    var codeStr;
     var change = (aValue != (aCheckbox.getAttribute('checked') == 'true'));
     if (aValue)
-      aCheckbox.setAttribute('checked', 'true');
+      codeStr = """"checkbox.setAttribute('checked', 'true'); """";
     else
-      aCheckbox.removeAttribute('checked');
+      codeStr = """"checkbox.removeAttribute('checked'); """";
 
     if (change) {
-      var sandbox = new Cu.Sandbox(this._window);
-      sandbox.document = this._document;
-      sandbox.checkbox = aCheckbox;
-      var codeStr = """"var event = document.createEvent('Events'); """" +
-                    """"event.initEvent('CheckboxStateChange', true, true);"""" +
-                    """"checkbox.dispatchEvent(event);""""
-      Cu.evalInSandbox(codeStr, sandbox);
-    }
-  },
-
-  // For setting and getting the file expando property, we need to keep a
-  // reference to explict XPCNativeWrappers around the associated menuitems
-  _selectedApplicationItemWrapped: null,
-  get selectedApplicationItemWrapped() {
-    if (!this._selectedApplicationItemWrapped) {
-      this._selectedApplicationItemWrapped =
-        XPCNativeWrapper(this._document.getElementById(""""selectedAppMenuItem""""));
-    }
-
-    return this._selectedApplicationItemWrapped;
-  },
-
-  _defaultSystemReaderItemWrapped: null,
-  get defaultSystemReaderItemWrapped() {
-    if (!this._defaultSystemReaderItemWrapped) {
-      // Unlike the selected application item, this might not exist at all,
-      // see _initSubscriptionUI
-      var menuItem = this._document.getElementById(""""defaultHandlerMenuItem"""");
-      if (menuItem)
-        this._defaultSystemReaderItemWrapped = XPCNativeWrapper(menuItem);
+      this._contentSandbox.document = this._document;
+      codeStr += """"var event = document.createEvent('Events'); """" +
+                 """"event.initEvent('CheckboxStateChange', true, true);"""" +
+                 """"checkbox.dispatchEvent(event);""""
     }
 
-    return this._defaultSystemReaderItemWrapped;
+    Cu.evalInSandbox(codeStr, this._contentSandbox);
   },
 
    /**
@@ -424,7 +422,13 @@ FeedWriter.prototype = {
 
       var titleText = this._getFormattedString(""""linkTitleTextFormat"""", 
                                                [parts.getPropertyAsAString(""""title"""")]);
-      feedTitleLink.setAttribute(""""title"""", titleText);
+      this._contentSandbox.feedTitleLink = feedTitleLink;
+      this._contentSandbox.titleText = titleText;
+      var codeStr = """"feedTitleLink.setAttribute('title', titleText);"""";
+      Cu.evalInSandbox(codeStr, this._contentSandbox);
+      this._contentSandbox.feedTitleLink = null;
+      this._contentSandbox.titleText = null;
+
       this._safeSetURIAttribute(feedTitleLink, """"href"""", 
                                 parts.getPropertyAsAString(""""link""""));
 
@@ -446,13 +450,17 @@ FeedWriter.prototype = {
    */
   _writeFeedContent: function FW__writeFeedContent(container) {
     // Build the actual feed content
-    var feedContent = this._document.getElementById(""""feedContent"""");
     var feed = container.QueryInterface(Ci.nsIFeed);
-    
+    if (feed.items.length == 0)
+      return;
+
+    this._contentSandbox.feedContent =
+      this._document.getElementById(""""feedContent"""");
+
     for (var i = 0; i < feed.items.length; ++i) {
       var entry = feed.items.queryElementAt(i, Ci.nsIFeedEntry);
       entry.QueryInterface(Ci.nsIFeedContainer);
-      
+
       var entryContainer = this._document.createElementNS(HTML_NS, """"div"""");
       entryContainer.className = """"entry"""";
 
@@ -460,29 +468,29 @@ FeedWriter.prototype = {
       if (entry.title) {
         var a = this._document.createElementNS(HTML_NS, """"a"""");
         a.appendChild(this._document.createTextNode(entry.title.plainText()));
-      
+
         // Entries are not required to have links, so entry.link can be null.
         if (entry.link)
           this._safeSetURIAttribute(a, """"href"""", entry.link.spec);
 
         var title = this._document.createElementNS(HTML_NS, """"h3"""");
         title.appendChild(a);
-        entryContainer.appendChild(title);
 
         var lastUpdated = this._parseDate(entry.updated);
         if (lastUpdated) {
           var dateDiv = this._document.createElementNS(HTML_NS, """"div"""");
-          dateDiv.setAttribute(""""class"""", """"lastUpdated"""");
-          title.appendChild(dateDiv);
+          dateDiv.className = """"lastUpdated"""";
           dateDiv.textContent = lastUpdated;
+          title.appendChild(dateDiv);
         }
+
+        entryContainer.appendChild(title);
       }
 
       var body = this._document.createElementNS(HTML_NS, """"div"""");
       var summary = entry.summary || entry.content;
       var docFragment = null;
       if (summary) {
-
         if (summary.base)
           body.setAttributeNS(XML_NS, """"base"""", summary.base.spec);
         else
@@ -510,11 +518,19 @@ FeedWriter.prototype = {
         entryContainer.appendChild(enclosuresDiv);
       }
 
-      feedContent.appendChild(entryContainer);
-      var clearDiv = this._document.createElementNS(HTML_NS, """"div"""");
-      clearDiv.style.clear = """"both"""";
-      feedContent.appendChild(clearDiv);
+      this._contentSandbox.entryContainer = entryContainer;
+      this._contentSandbox.clearDiv =
+        this._document.createElementNS(HTML_NS, """"div"""");
+      this._contentSandbox.clearDiv.style.clear = """"both"""";
+      
+      var codeStr = """"feedContent.appendChild(entryContainer); """" +
+                     """"feedContent.appendChild(clearDiv);""""
+      Cu.evalInSandbox(codeStr, this._contentSandbox);
     }
+
+    this._contentSandbox.feedContent = null;
+    this._contentSandbox.entryContainer = null;
+    this._contentSandbox.clearDiv = null;
   },
 
   /**
@@ -546,7 +562,7 @@ FeedWriter.prototype = {
    */
   _buildEnclosureDiv: function FW__buildEnclosureDiv(entry) {
     var enclosuresDiv = this._document.createElementNS(HTML_NS, """"div"""");
-    enclosuresDiv.setAttribute(""""class"""", """"enclosures"""");
+    enclosuresDiv.className = """"enclosures"""";
 
     enclosuresDiv.appendChild(this._document.createTextNode(this._getString(""""mediaLabel"""")));
 
@@ -708,9 +724,12 @@ FeedWriter.prototype = {
    *          The menuitem's associated file
    */
   _initMenuItemWithFile: function(aMenuItem, aFile) {
-    aMenuItem.setAttribute(""""label"""", this._getFileDisplayName(aFile));
-    aMenuItem.setAttribute(""""image"""", this._getFileIconURL(aFile));
-    aMenuItem.file = aFile;
+    this._contentSandbox.menuitem = aMenuItem;
+    this._contentSandbox.label = this._getFileDisplayName(aFile);
+    this._contentSandbox.image = this._getFileIconURL(aFile);
+    var codeStr = """"menuitem.setAttribute('label', label); """" +
+                  """"menuitem.setAttribute('image', image);""""
+    Cu.evalInSandbox(codeStr, this._contentSandbox);
   },
 
   /**
@@ -726,8 +745,8 @@ FeedWriter.prototype = {
       fp.appendFilters(Ci.nsIFilePicker.filterApps);
 
       if (fp.show() == Ci.nsIFilePicker.returnOK) {
-        var selectedApp = fp.file;
-        if (selectedApp) {
+        this._selectedApp = fp.file;
+        if (this._selectedApp) {
           // XXXben - we need to compare this with the running instance executable
           //          just don't know how to do that via script...
           // XXXmano TBD: can probably add this to nsIShellService
@@ -740,12 +759,13 @@ FeedWriter.prototype = {
 #expand           if (fp.file.leafName != """"__MOZ_APP_NAME__-bin"""") {
 #endif
 #endif
-            var selectedAppMenuItem = this.selectedApplicationItemWrapped;
-            this._initMenuItemWithFile(selectedAppMenuItem, selectedApp);
+            this._initMenuItemWithFile(this._contentSandbox.selectedAppMenuItem,
+                                       this._selectedApp);
 
             // Show and select the selected application menuitem
-            selectedAppMenuItem.hidden = false;
-            this._safeDoCommand(selectedAppMenuItem);
+            var codeStr = """"selectedAppMenuItem.hidden = false;"""" +
+                          """"selectedAppMenuItem.doCommand();""""
+            Cu.evalInSandbox(codeStr, this._contentSandbox);
             return true;
           }
         }
@@ -772,8 +792,7 @@ FeedWriter.prototype = {
   },
 
   _setSubscribeUsingLabel: function FW__setSubscribeUsingLabel() {
-    var stringLabel = null;
-
+    var stringLabel = """"subscribeFeedUsing"""";
     switch (this._getFeedType()) {
       case Ci.nsIFeed.TYPE_VIDEO:
         stringLabel = """"subscribeVideoPodcastUsing"""";
@@ -782,13 +801,13 @@ FeedWriter.prototype = {
       case Ci.nsIFeed.TYPE_AUDIO:
         stringLabel = """"subscribeAudioPodcastUsing"""";
         break;
-
-      default:
-        stringLabel = """"subscribeFeedUsing"""";
     }
 
-    var subscribeUsing = this._document.getElementById(""""subscribeUsingDescription"""");
-    subscribeUsing.setAttribute(""""value"""", this._getString(stringLabel));
+    this._contentSandbox.subscribeUsing =
+      this._document.getElementById(""""subscribeUsingDescription"""");
+    this._contentSandbox.label = this._getString(stringLabel);
+    var codeStr = """"subscribeUsing.setAttribute('value', label);""""
+    Cu.evalInSandbox(codeStr, this._contentSandbox);
   },
 
   _setAlwaysUseLabel: function FW__setAlwaysUseLabel() {
@@ -798,7 +817,7 @@ FeedWriter.prototype = {
       if (handlersMenuList) {
         var handlerName = this._getSelectedItemFromMenulist(handlersMenuList)
                               .getAttribute(""""label"""");
-        var stringlabel = null;
+        var stringLabel = """"alwaysUseForFeeds"""";
         switch (this._getFeedType()) {
           case Ci.nsIFeed.TYPE_VIDEO:
             stringlabel = """"alwaysUseForVideoPodcasts"""";
@@ -807,12 +826,13 @@ FeedWriter.prototype = {
           case Ci.nsIFeed.TYPE_AUDIO:
             stringlabel = """"alwaysUseForAudioPodcasts"""";
             break;
-
-          default:
-            stringlabel = """"alwaysUseForFeeds"""";
         }
-  
-        checkbox.setAttribute(""""label"""", this._getFormattedString(stringlabel, [handlerName]));
+
+        this._contentSandbox.checkbox = checkbox;
+        this._contentSandbox.label = this._getFormattedString(stringlabel, [handlerName]);
+        
+        var codeStr = """"checkbox.setAttribute('label', label);"""";
+        Cu.evalInSandbox(codeStr, this._contentSandbox);
       }
     }
   },
@@ -883,27 +903,29 @@ FeedWriter.prototype = {
         break;
       }
       case """"client"""": {
-        var selectedAppMenuItem = this.selectedApplicationItemWrapped;
-        if (selectedAppMenuItem) {
-          try {
-            var selectedApp = prefs.getComplexValue(getPrefAppForType(feedType),
-                                                    Ci.nsILocalFile);
-          } catch(ex) { }
-
-          if (selectedApp) {
-            this._initMenuItemWithFile(selectedAppMenuItem, selectedApp);
-            selectedAppMenuItem.hidden = false;
-            this._safeDoCommand(selectedAppMenuItem);
-
-            // Only show the default reader menuitem if the default reader
-            // isn't the selected application
-            var defaultHandlerMenuItem = this.defaultSystemReaderItemWrapped;
-            if (defaultHandlerMenuItem) {
-              defaultHandlerMenuItem.hidden =
-                defaultHandlerMenuItem.file.path == selectedApp.path;
-            }
-            break;
+        try {
+          this._selectedApp =
+            prefs.getComplexValue(getPrefAppForType(feedType), Ci.nsILocalFile);
+        }
+        catch(ex) {
+          this._selectedApp = null;
+        }
+
+        if (this._selectedApp) {
+          this._initMenuItemWithFile(this._contentSandbox.selectedAppMenuItem,
+                                     this._selectedApp);
+          var codeStr = """"selectedAppMenuItem.hidden = false; """" +
+                        """"selectedAppMenuItem.doCommand(); """";
+
+          // Only show the default reader menuitem if the default reader
+          // isn't the selected application
+          if (this._defaultSystemReader) {
+            var shouldHide =
+              this._defaultSystemReader.path == this._selectedApp.path;
+            codeStr += """"defaultHandlerMenuItem.hidden = """" + shouldHide + """";""""
           }
+          Cu.evalInSandbox(codeStr, this._contentSandbox);
+          break;
         }
       }
       case """"bookmarks"""":
@@ -921,79 +943,92 @@ FeedWriter.prototype = {
       return;
  
     var feedType = this._getFeedType();
+    var codeStr;
 
     // change the background
     var header = this._document.getElementById(""""feedHeader"""");
+    this._contentSandbox.header = header;
     switch (feedType) {
       case Ci.nsIFeed.TYPE_VIDEO:
-        header.setAttribute(""""class"""", """"videoPodcastBackground"""");
+        codeStr = """"header.className = 'videoPodcastBackground'; """";
         break;
 
       case Ci.nsIFeed.TYPE_AUDIO:
-        header.setAttribute(""""class"""", """"audioPodcastBackground"""");
+        codeStr = """"header.className = 'audioPodcastBackground'; """";
         break;
 
       default:
-        header.setAttribute(""""class"""", """"feedBackground"""");
+        codeStr = """"header.className = 'feedBackground'; """";
+        header.className = """"feedBackground"""";
     }
 
+
     // Last-selected application
-    var selectedApp;
     var menuItem = this._document.createElementNS(XUL_NS, """"menuitem"""");
     menuItem.id = """"selectedAppMenuItem"""";
     menuItem.className = """"menuitem-iconic"""";
     menuItem.setAttribute(""""handlerType"""", """"client"""");
-    handlersMenuPopup.appendChild(menuItem);
-
-    var selectedApplicationItem = this.selectedApplicationItemWrapped;
     try {
       var prefs = Cc[""""@mozilla.org/preferences-service;1""""].
                   getService(Ci.nsIPrefBranch);
-      selectedApp = prefs.getComplexValue(getPrefAppForType(feedType),
-                                          Ci.nsILocalFile);
+      this._selectedApp = prefs.getComplexValue(getPrefAppForType(feedType),
+                                                Ci.nsILocalFile);
 
-      if (selectedApp.exists())
-        this._initMenuItemWithFile(selectedApplicationItem, selectedApp);
+      if (this._selectedApp.exists())
+        this._initMenuItemWithFile(menuItem, this._selectedApp);
       else {
         // Hide the menuitem if the last selected application doesn't exist
-        selectedApplicationItem.hidden = true;
+        menuItem.setAttribute(""""hidden"""", true);
       }
     }
     catch(ex) {
       // Hide the menuitem until an application is selected
-      selectedApplicationItem.hidden = true;
+      menuItem.setAttribute(""""hidden"""", true);
     }
+    this._contentSandbox.handlersMenuPopup = handlersMenuPopup;
+    this._contentSandbox.selectedAppMenuItem = menuItem;
+    
+    codeStr += """"handlersMenuPopup.appendChild(selectedAppMenuItem); """";
 
     // List the default feed reader
-    var defaultReader = null;
     try {
-      var defaultReader = Cc[""""@mozilla.org/browser/shell-service;1""""].
-                          getService(Ci.nsIShellService).defaultFeedReader;
+      this._defaultSystemReader = Cc[""""@mozilla.org/browser/shell-service;1""""].
+                                  getService(Ci.nsIShellService).
+                                  defaultFeedReader;
       menuItem = this._document.createElementNS(XUL_NS, """"menuitem"""");
       menuItem.id = """"defaultHandlerMenuItem"""";
       menuItem.className = """"menuitem-iconic"""";
       menuItem.setAttribute(""""handlerType"""", """"client"""");
-      handlersMenuPopup.appendChild(menuItem);
 
-      var defaultSystemReaderItem = this.defaultSystemReaderItemWrapped;
-      this._initMenuItemWithFile(defaultSystemReaderItem, defaultReader);
+      this._initMenuItemWithFile(menuItem, this._defaultSystemReader);
 
       // Hide the default reader item if it points to the same application
       // as the last-selected application
-      if (selectedApp && selectedApp.path == defaultReader.path)
-        defaultSystemReaderItem.hidden = true;
+      if (this._selectedApp &&
+          this._selectedApp.path == this._defaultSystemReader.path)
+        menuItem.hidden = true;
+    }
+    catch(ex) { menuItem = null; /* no default reader */ }
+
+    if (menuItem) {
+      this._contentSandbox.defaultHandlerMenuItem = menuItem;
+      codeStr += """"handlersMenuPopup.appendChild(defaultHandlerMenuItem); """";
     }
-    catch(ex) { /* no default reader */ }
 
     // """"Choose Application..."""" menuitem
     menuItem = this._document.createElementNS(XUL_NS, """"menuitem"""");
     menuItem.id = """"chooseApplicationMenuItem"""";
     menuItem.setAttribute(""""label"""", this._getString(""""chooseApplicationMenuItem""""));
-    handlersMenuPopup.appendChild(menuItem);
+
+    this._contentSandbox.chooseAppMenuItem = menuItem;
+    codeStr += """"handlersMenuPopup.appendChild(chooseAppMenuItem); """";
 
     // separator
-    handlersMenuPopup.appendChild(this._document.createElementNS(XUL_NS,
-                                  """"menuseparator""""));
+    this._contentSandbox.chooseAppSep =
+      this._document.createElementNS(XUL_NS, """"menuseparator"""")
+    codeStr += """"handlersMenuPopup.appendChild(chooseAppSep); """";
+
+    Cu.evalInSandbox(codeStr, this._contentSandbox);
 
     var historySvc = Cc[""""@mozilla.org/browser/nav-history-service;1""""].
                      getService(Ci.nsINavHistoryService);
@@ -1010,7 +1045,9 @@ FeedWriter.prototype = {
         menuItem.setAttribute(""""label"""", handlers[i].name);
         menuItem.setAttribute(""""handlerType"""", """"web"""");
         menuItem.setAttribute(""""webhandlerurl"""", handlers[i].uri);
-        handlersMenuPopup.appendChild(menuItem);
+        this._contentSandbox.menuItem = menuItem;
+        codeStr = """"handlersMenuPopup.appendChild(menuItem);"""";
+        Cu.evalInSandbox(codeStr, this._contentSandbox);
 
         // For privacy reasons we cannot set the image attribute directly
         // to the icon url, see Bug 358878
@@ -1022,6 +1059,7 @@ FeedWriter.prototype = {
           }
         }
       }
+      this._contentSandbox.menuItem = null;
     }
 
     this._setSelectedHandler(feedType);
@@ -1049,39 +1087,32 @@ FeedWriter.prototype = {
     }
     catch (ex) { }
     if (showFirstRunUI) {
-      var feedHeader = this._document.getElementById(""""feedHeader"""");
-      if (feedHeader) {
-        var textfeedinfo1 = null;
-        switch (this._getFeedType()) {
-          case Ci.nsIFeed.TYPE_VIDEO:
-            textfeedinfo1 = """"feedSubscriptionVideoPodcast1"""";
-            break;
-          case Ci.nsIFeed.TYPE_AUDIO:
-            textfeedinfo1 = """"feedSubscriptionAudioPodcast1"""";
-            break;
-          default:
-            textfeedinfo1 = """"feedSubscriptionFeed1"""";
-        }
-        var feedinfo1 = this._document.getElementById(""""feedSubscriptionInfo1"""")
-        feedinfo1.setAttribute(""""value"""", this._getString(textfeedinfo1));
-
-        var textfeedinfo2 = null;
-        switch (this._getFeedType()) {
-          case Ci.nsIFeed.TYPE_VIDEO:
-            textfeedinfo2 = """"feedSubscriptionVideoPodcast2"""";
-            break;
-          case Ci.nsIFeed.TYPE_AUDIO:
-            textfeedinfo2 = """"feedSubscriptionAudioPodcast2"""";
-            break;
-          default:
-            textfeedinfo2 = """"feedSubscriptionFeed2"""";
-        }
-        var feedinfo2 = this._document.getElementById(""""feedSubscriptionInfo2"""")
-        feedinfo2.setAttribute(""""value"""", this._getString(textfeedinfo2));
-
-        feedHeader.setAttribute(""""firstrun"""", """"true"""");
+      var textfeedinfo1, textfeedinfo2;
+      switch (feedType) {
+        case Ci.nsIFeed.TYPE_VIDEO:
+          textfeedinfo1 = """"feedSubscriptionVideoPodcast1"""";
+          textfeedinfo2 = """"feedSubscriptionVideoPodcast2"""";
+          break;
+        case Ci.nsIFeed.TYPE_AUDIO:
+          textfeedinfo1 = """"feedSubscriptionAudioPodcast1"""";
+          textfeedinfo2 = """"feedSubscriptionAudioPodcast2"""";
+          break;
+        default:
+          textfeedinfo1 = """"feedSubscriptionFeed1"""";
+          textfeedinfo2 = """"feedSubscriptionFeed2"""";
       }
 
+      this._contentSandbox.feedinfo1 =
+        this._document.getElementById(""""feedSubscriptionInfo1"""");
+      this._contentSandbox.feedinfo1Str = this._getString(textfeedinfo1);
+      this._contentSandbox.feedinfo2 =
+        this._document.getElementById(""""feedSubscriptionInfo2"""");
+      this._contentSandbox.feedinfo2Str = this._getString(textfeedinfo2);
+      this._contentSandbox.header = header;
+      codeStr = """"feedinfo1.value = feedinfo1Str; """" +
+                """"feedinfo2.value = feedinfo2Str; """" +
+                """"header.setAttribute('firstrun', 'true');""""
+      Cu.evalInSandbox(codeStr, this._contentSandbox);
       prefs.setBoolPref(PREF_SHOW_FIRST_RUN_UI, false);
     }
   },
@@ -1198,9 +1229,9 @@ FeedWriter.prototype = {
     this._removeFeedFromCache();
     this.__faviconService = null;
     this.__bundle = null;
-    this._selectedApplicationItemWrapped = null;
-    this._defaultSystemReaderItemWrapped = null;
     this._feedURI = null;
+    this.__contentSandbox = null;
+
     var historySvc = Cc[""""@mozilla.org/browser/nav-history-service;1""""].
                      getService(Ci.nsINavHistoryService);
     historySvc.removeObserver(this);
@@ -1262,12 +1293,12 @@ FeedWriter.prototype = {
         case """"selectedAppMenuItem"""":
           prefs.setCharPref(getPrefReaderForType(feedType), """"client"""");
           prefs.setComplexValue(getPrefAppForType(feedType), Ci.nsILocalFile, 
-                                this.selectedApplicationItemWrapped.file);
+                                this._selectedApp);
           break;
         case """"defaultHandlerMenuItem"""":
           prefs.setCharPref(getPrefReaderForType(feedType), """"client"""");
           prefs.setComplexValue(getPrefAppForType(feedType), Ci.nsILocalFile, 
-                                this.defaultSystemReaderItemWrapped.file);
+                                this._defaultSystemReader);
           break;
         case """"liveBookmarksMenuItem"""":
           defaultHandler = """"bookmarks"""";
@@ -1349,7 +1380,14 @@ FeedWriter.prototype = {
       if (bytes) {
         var dataURI = """"data:"""" + mimeType.value + """";"""" + """"base64,"""" +
                       btoa(String.fromCharCode.apply(null, bytes));
-        aMenuItem.setAttribute(""""image"""", dataURI);
+
+        this._contentSandbox.menuItem = aMenuItem;
+        this._contentSandbox.dataURI = dataURI;
+        var codeStr = """"menuItem.setAttribute('image', dataURI);"""";
+        Cu.evalInSandbox(codeStr, this._contentSandbox);
+        this._contentSandbox.menuItem = null;
+        this._contentSandbox.dataURI = null;
+
         return true;
       }
     }"""
7e8b55fb2901f29dd84ae5fc66fcb9c2279e1481,61748,375711,bclary@bclary.com,"JavaScript Tests - update ecma_3/RegExp/regress-375711.js due to change in bug 416933
",1206308764,"""diff --git a/js/tests/ecma_3/RegExp/regress-375711.js b/js/tests/ecma_3/RegExp/regress-375711.js
index 9c2bf77..07051ba 100755
--- a/js/tests/ecma_3/RegExp/regress-375711.js
+++ b/js/tests/ecma_3/RegExp/regress-375711.js
@@ -53,16 +53,66 @@ function test()
   printBugNumber(BUGNUMBER);
   printStatus (summary);
  
+  var s;
+
+  // see bug 416933
+  print('see bug 416933 for changed behavior on Gecko 1.9');
+
+  try
+  {
+    s = '/[Q-b]/.exec("""""""")';
+    expect = 'No Error';
+    print(s + ' expect ' + expect);
+    eval(s);
+    actual = 'No Error';
+  }
+  catch(ex)
+  {
+    actual = ex + '';
+  }
+  reportCompare(expect, actual, summary + ': ' + s);
+
+  try
+  {
+    s ='/[Q-b]/i.exec("""""""")';
+    expect = 'No Error';
+    print(s + ' expect ' + expect);
+    eval(s);
+    actual = 'No Error';
+  }
+  catch(ex)
+  {
+    actual = ex + '';
+  }
+  reportCompare(expect, actual, summary + ': ' + s);
+
   try
   {
+    s = '/[q-b]/.exec("""""""")';
     expect = 'SyntaxError: invalid range in character class';
-    eval('/[Q-b]/i.exec("""""""")');
+    print(s + ' expect ' + expect);
+    eval(s);
+    actual = 'No Error';
+  }
+  catch(ex)
+  {
+    actual = ex + '';
+  }
+  reportCompare(expect, actual, summary + ': ' + s);
+
+  try
+  {
+    s ='/[q-b]/i.exec("""""""")';
+    expect = 'No Error';
+    print(s + ' expect ' + expect);
+    eval(s);
+    actual = 'No Error';
   }
   catch(ex)
   {
     actual = ex + '';
   }
-  reportCompare(expect, actual, summary);
+  reportCompare(expect, actual, summary + ': ' + s);
 
   exitFunc ('test');
 }"""
b56e9ca3ff3e88f77b26cc840cd4a852f930a726,61939,329385,Olli.Pettay@helsinki.fi,"Bug 329385, additional patch, r+sr=jst
",1205957921,"""diff --git a/widget/src/beos/nsDragService.cpp b/widget/src/beos/nsDragService.cpp
index 2dfdef0..fc24a6c 100644
--- a/widget/src/beos/nsDragService.cpp
+++ b/widget/src/beos/nsDragService.cpp
@@ -151,8 +151,11 @@ nsDragService::InvokeDragSession (nsIDOMNode *aDOMNode,
                                   PRUint32 aActionType)
 {
     PR_LOG(sDragLm, PR_LOG_DEBUG, (""""nsDragService::InvokeDragSession""""));
-    nsBaseDragService::InvokeDragSession (aDOMNode, aArrayTransferables,
-                                         aRegion, aActionType);
+    nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode,
+                                                       aArrayTransferables,
+                                                       aRegion, aActionType);
+    NS_ENSURE_SUCCESS(rv, rv);
+
     ResetDragInfo();       
     // make sure that we have an array of transferables to use
     if (nsnull == aArrayTransferables)
diff --git a/widget/src/cocoa/nsDragService.mm b/widget/src/cocoa/nsDragService.mm
index f53bb57..b8a3de9 100644
--- a/widget/src/cocoa/nsDragService.mm
+++ b/widget/src/cocoa/nsDragService.mm
@@ -253,7 +253,10 @@ nsDragService::InvokeDragSession(nsIDOMNode* aDOMNode, nsISupportsArray* aTransf
 {
   NS_OBJC_BEGIN_TRY_ABORT_BLOCK_NSRESULT;
 
-  nsBaseDragService::InvokeDragSession(aDOMNode, aTransferableArray, aDragRgn, aActionType);
+  nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode,
+                                                     aTransferableArray,
+                                                     aDragRgn, aActionType);
+  NS_ENSURE_SUCCESS(rv, rv);
 
   mDataItems = aTransferableArray;
 
diff --git a/widget/src/gtk2/nsDragService.cpp b/widget/src/gtk2/nsDragService.cpp
index 01b3c43..2b8ba11 100644
--- a/widget/src/gtk2/nsDragService.cpp
+++ b/widget/src/gtk2/nsDragService.cpp
@@ -155,8 +155,11 @@ nsDragService::InvokeDragSession(nsIDOMNode *aDOMNode,
                                  PRUint32 aActionType)
 {
     PR_LOG(sDragLm, PR_LOG_DEBUG, (""""nsDragService::InvokeDragSession""""));
-    nsBaseDragService::InvokeDragSession(aDOMNode, aArrayTransferables,
-                                         aRegion, aActionType);
+    nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode,
+                                                       aArrayTransferables,
+                                                       aRegion, aActionType);
+    NS_ENSURE_SUCCESS(rv, rv);
+
     // make sure that we have an array of transferables to use
     if (!aArrayTransferables)
         return NS_ERROR_INVALID_ARG;
diff --git a/widget/src/os2/nsDragService.cpp b/widget/src/os2/nsDragService.cpp
index 01074de..ff017e5 100644
--- a/widget/src/os2/nsDragService.cpp
+++ b/widget/src/os2/nsDragService.cpp
@@ -142,8 +142,10 @@ NS_IMETHODIMP nsDragService::InvokeDragSession(nsIDOMNode *aDOMNode,
   if (mDoingDrag)
     return NS_ERROR_UNEXPECTED;
 
-  nsBaseDragService::InvokeDragSession ( aDOMNode, aTransferables,
-                                         aRegion, aActionType );
+  nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode, aTransferables,
+                                                     aRegion, aActionType);
+  NS_ENSURE_SUCCESS(rv, rv);
+
   mSourceDataItems = aTransferables;
   WinSetCapture(HWND_DESKTOP, NULLHANDLE);
 
@@ -166,7 +168,7 @@ NS_IMETHODIMP nsDragService::InvokeDragSession(nsIDOMNode *aDOMNode,
   dragitem.hstrContainerName   = NULLHANDLE;
   dragitem.hstrSourceName      = NULLHANDLE;
 
-  nsresult rv = NS_ERROR_FAILURE;
+  rv = NS_ERROR_FAILURE;
   ULONG idIcon = 0;
 
     // bracket this to reduce our footprint before the drag begins
diff --git a/widget/src/photon/nsDragService.cpp b/widget/src/photon/nsDragService.cpp
index 8726fb7..bbe2bfc 100644
--- a/widget/src/photon/nsDragService.cpp
+++ b/widget/src/photon/nsDragService.cpp
@@ -130,7 +130,10 @@ nsDragService::InvokeDragSession (nsIDOMNode *aDOMNode,
 #ifdef DEBUG
 	printf( """"nsDragService::InvokeDragSession\n"""" );
 #endif
-  nsBaseDragService::InvokeDragSession (aDOMNode, aArrayTransferables, aRegion, aActionType);
+  nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode,
+                                                     aArrayTransferables,
+                                                     aRegion, aActionType);
+  NS_ENSURE_SUCCESS(rv, rv);
 
   if(!aArrayTransferables) return NS_ERROR_INVALID_ARG;
 
@@ -172,7 +175,7 @@ nsDragService::InvokeDragSession (nsIDOMNode *aDOMNode,
 						const char *FlavourStr = ( const char * ) flavorStr;
 						nsCOMPtr<nsISupports> data;
 						PRUint32 tmpDataLen = 0;
-						nsresult rv = currItem->GetTransferData( FlavourStr, getter_AddRefs(data), &tmpDataLen );
+						rv = currItem->GetTransferData( FlavourStr, getter_AddRefs(data), &tmpDataLen );
 						if( NS_SUCCEEDED( rv ) ) {
 							/* insert FlavourStr, data into the PtTransportCtrl_t */
 							int len = sizeof( PRUint32 ) + sizeof( PRUint32 ) + strlen( FlavourStr ) + 1 + tmpDataLen;
diff --git a/widget/src/windows/nsDragService.cpp b/widget/src/windows/nsDragService.cpp
index eea1306..4c589b6 100644
--- a/widget/src/windows/nsDragService.cpp
+++ b/widget/src/windows/nsDragService.cpp
@@ -189,9 +189,11 @@ nsDragService::InvokeDragSession(nsIDOMNode *aDOMNode,
                                  nsIScriptableRegion *aRegion,
                                  PRUint32 aActionType)
 {
-  nsBaseDragService::InvokeDragSession(aDOMNode, anArrayTransferables, aRegion,
-                                       aActionType);
-  nsresult rv;
+  nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode,
+                                                     anArrayTransferables,
+                                                     aRegion,
+                                                     aActionType);
+  NS_ENSURE_SUCCESS(rv, rv);
 
   // Try and get source URI of the items that are being dragged
   nsIURI *uri = nsnull;"""
036cbf2e466727cb2a0888df7429091f18f89e82,61966,329385,Olli.Pettay@helsinki.fi,"Bug 329385, r+sr=jst
",1205885182,"""diff --git a/dom/src/base/nsGlobalWindow.cpp b/dom/src/base/nsGlobalWindow.cpp
index ade1aae..a3b27b3 100644
--- a/dom/src/base/nsGlobalWindow.cpp
+++ b/dom/src/base/nsGlobalWindow.cpp
@@ -194,6 +194,7 @@
 #include """"nsIPopupWindowManager.h""""
 
 #include """"nsIPermissionManager.h""""
+#include """"nsIDragService.h""""
 
 #ifdef MOZ_LOGGING
 // so we can get logging even in release builds
@@ -212,6 +213,8 @@ static PRInt32              gRefCnt                    = 0;
 static PRInt32              gOpenPopupSpamCount        = 0;
 static PopupControlState    gPopupControlState         = openAbused;
 static PRInt32              gRunningTimeoutDepth       = 0;
+static PRBool               gMouseDown                 = PR_FALSE;
+static PRBool               gDragServiceDisabled       = PR_FALSE;
 
 #ifdef DEBUG
 static PRUint32             gSerialCounter             = 0;
@@ -2181,6 +2184,20 @@ nsGlobalWindow::PreHandleEvent(nsEventChainPreVisitor& aVisitor)
     }
   } else if (msg == NS_RESIZE_EVENT) {
     mIsHandlingResizeEvent = PR_TRUE;
+  } else if (msg == NS_MOUSE_BUTTON_DOWN &&
+             NS_IS_TRUSTED_EVENT(aVisitor.mEvent)) {
+    gMouseDown = PR_TRUE;
+  } else if (msg == NS_MOUSE_BUTTON_UP &&
+             NS_IS_TRUSTED_EVENT(aVisitor.mEvent)) {
+    gMouseDown = PR_FALSE;
+    if (gDragServiceDisabled) {
+      nsCOMPtr<nsIDragService> ds =
+        do_GetService(""""@mozilla.org/widget/dragservice;1"""");
+      if (ds) {
+        gDragServiceDisabled = PR_FALSE;
+        ds->Unsuppress();
+      }
+    }
   }
 
   aVisitor.mParentTarget = mChromeEventHandler;
@@ -3947,8 +3964,19 @@ nsGlobalWindow::CanMoveResizeWindows()
   PRUint32 testResult;
   rv = pm->TestPermission(uri, """"moveresize"""", &testResult);
   NS_ENSURE_SUCCESS(rv, PR_FALSE);
-  
-  return testResult == nsIPermissionManager::ALLOW_ACTION;
+
+  if (testResult == nsIPermissionManager::ALLOW_ACTION) {
+    if (gMouseDown && !gDragServiceDisabled) {
+      nsCOMPtr<nsIDragService> ds =
+        do_GetService(""""@mozilla.org/widget/dragservice;1"""");
+      if (ds) {
+        gDragServiceDisabled = PR_TRUE;
+        ds->Suppress();
+      }
+    }
+    return PR_TRUE;
+  }
+  return PR_FALSE;
 }
 
 NS_IMETHODIMP
diff --git a/widget/public/nsIDragService.idl b/widget/public/nsIDragService.idl
index 52aaa94..1c5c160 100644
--- a/widget/public/nsIDragService.idl
+++ b/widget/public/nsIDragService.idl
@@ -47,7 +47,7 @@ interface nsIDOMNode;
 interface nsIDOMMouseEvent;
 interface nsISelection;
 
-[scriptable, uuid(E8CD74A6-8BB6-4D27-9C65-4ED1B4398F8C)]
+[scriptable, uuid(034c44a4-604b-44a2-9205-676d5135f359)]
 interface nsIDragService : nsISupports
 {
   const long DRAGDROP_ACTION_NONE = 0;
@@ -134,6 +134,13 @@ interface nsIDragService : nsISupports
    * Fire a drag event at the source of the drag
    */
   void fireDragEventAtSource ( in unsigned long aMsg );
+
+  /**
+   * Increase/decrease dragging suppress level by one.
+   * If level is greater than one, dragging is disabled.
+   */
+  void suppress();
+  void unsuppress();
 };
 
 
diff --git a/widget/src/xpwidgets/nsBaseDragService.cpp b/widget/src/xpwidgets/nsBaseDragService.cpp
index 11dd635..01f250a 100644
--- a/widget/src/xpwidgets/nsBaseDragService.cpp
+++ b/widget/src/xpwidgets/nsBaseDragService.cpp
@@ -79,7 +79,7 @@
 nsBaseDragService::nsBaseDragService()
   : mCanDrop(PR_FALSE), mDoingDrag(PR_FALSE), mHasImage(PR_FALSE),
     mDragAction(DRAGDROP_ACTION_NONE), mTargetSize(0,0),
-    mImageX(0), mImageY(0), mScreenX(-1), mScreenY(-1)
+    mImageX(0), mImageY(0), mScreenX(-1), mScreenY(-1), mSuppressLevel(0)
 {
 }
 
@@ -203,6 +203,7 @@ nsBaseDragService::InvokeDragSession(nsIDOMNode *aDOMNode,
                                      PRUint32 aActionType)
 {
   NS_ENSURE_TRUE(aDOMNode, NS_ERROR_INVALID_ARG);
+  NS_ENSURE_TRUE(mSuppressLevel == 0, NS_ERROR_FAILURE);
 
   // stash the document of the dom node
   aDOMNode->GetOwnerDocument(getter_AddRefs(mSourceDocument));
@@ -241,6 +242,7 @@ nsBaseDragService::InvokeDragSessionWithImage(nsIDOMNode* aDOMNode,
                                               nsIDOMMouseEvent* aDragEvent)
 {
   NS_ENSURE_TRUE(aDragEvent, NS_ERROR_NULL_POINTER);
+  NS_ENSURE_TRUE(mSuppressLevel == 0, NS_ERROR_FAILURE);
 
   mSelection = nsnull;
   mHasImage = PR_TRUE;
@@ -262,6 +264,7 @@ nsBaseDragService::InvokeDragSessionWithSelection(nsISelection* aSelection,
 {
   NS_ENSURE_TRUE(aSelection, NS_ERROR_NULL_POINTER);
   NS_ENSURE_TRUE(aDragEvent, NS_ERROR_NULL_POINTER);
+  NS_ENSURE_TRUE(mSuppressLevel == 0, NS_ERROR_FAILURE);
 
   mSelection = aSelection;
   mHasImage = PR_TRUE;
@@ -288,7 +291,7 @@ nsBaseDragService::GetCurrentSession(nsIDragSession ** aSession)
 
   // """"this"""" also implements a drag session, so say we are one but only
   // if there is currently a drag going on.
-  if (mDoingDrag) {
+  if (!mSuppressLevel && mDoingDrag) {
     *aSession = this;
     NS_ADDREF(*aSession);      // addRef because we're a """"getter""""
   }
@@ -317,7 +320,7 @@ nsBaseDragService::EndDragSession(PRBool aDoneDrag)
     return NS_ERROR_FAILURE;
   }
 
-  if (aDoneDrag)
+  if (aDoneDrag && !mSuppressLevel)
     FireDragEventAtSource(NS_DRAGDROP_END);
 
   mDoingDrag = PR_FALSE;
@@ -339,7 +342,7 @@ nsBaseDragService::EndDragSession(PRBool aDoneDrag)
 NS_IMETHODIMP
 nsBaseDragService::FireDragEventAtSource(PRUint32 aMsg)
 {
-  if (mSourceNode) {
+  if (mSourceNode && !mSuppressLevel) {
     nsCOMPtr<nsIDocument> doc = do_QueryInterface(mSourceDocument);
     if (doc) {
       nsCOMPtr<nsIPresShell> presShell = doc->GetPrimaryShell();
@@ -578,3 +581,17 @@ nsBaseDragService::ConvertToUnscaledDevPixels(nsPresContext* aPresContext,
   *aScreenY = nsPresContext::CSSPixelsToAppUnits(*aScreenY) / adj;
 }
 
+NS_IMETHODIMP
+nsBaseDragService::Suppress()
+{
+  EndDragSession(PR_FALSE);
+  ++mSuppressLevel;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsBaseDragService::Unsuppress()
+{
+  --mSuppressLevel;
+  return NS_OK;
+}
diff --git a/widget/src/xpwidgets/nsBaseDragService.h b/widget/src/xpwidgets/nsBaseDragService.h
index f6ed5f1..3bcf348 100644
--- a/widget/src/xpwidgets/nsBaseDragService.h
+++ b/widget/src/xpwidgets/nsBaseDragService.h
@@ -146,6 +146,8 @@ protected:
   // supplied so the screen position is not known
   PRInt32 mScreenX;
   PRInt32 mScreenY;
+
+  PRUint32 mSuppressLevel;
 };
 
 #endif // nsBaseDragService_h__"""
fc21040bdf04eac9d0ec02b5a877dbc6bf545147,62753,360529,mozilla.mano@sent.com,"Bug 360529, r=sayrer, sr=jst, a=beltzner.
",1204532137,"""diff --git a/browser/components/feeds/src/FeedWriter.js b/browser/components/feeds/src/FeedWriter.js
index 3b86e3d..cd874b5 100755
--- a/browser/components/feeds/src/FeedWriter.js
+++ b/browser/components/feeds/src/FeedWriter.js
@@ -43,8 +43,9 @@
 const Cc = Components.classes;
 const Ci = Components.interfaces;
 const Cr = Components.results;
+const Cu = Components.utils;
 
-Components.utils.import(""""resource://gre/modules/XPCOMUtils.jsm"""");
+Cu.import(""""resource://gre/modules/XPCOMUtils.jsm"""");
 
 function LOG(str) {
   var prefB = Cc[""""@mozilla.org/preferences-service;1""""].
@@ -84,6 +85,7 @@ const TYPE_MAYBE_FEED = """"application/vnd.mozilla.maybe.feed"""";
 const TYPE_MAYBE_AUDIO_FEED = """"application/vnd.mozilla.maybe.audio.feed"""";
 const TYPE_MAYBE_VIDEO_FEED = """"application/vnd.mozilla.maybe.video.feed"""";
 const URI_BUNDLE = """"chrome://browser/locale/feeds/subscribe.properties"""";
+const SUBSCRIBE_PAGE_URI = """"chrome://browser/content/feeds/subscribe.xhtml"""";
 
 const PREF_SELECTED_APP = """"browser.feeds.handlers.application"""";
 const PREF_SELECTED_WEB = """"browser.feeds.handlers.webservice"""";
@@ -234,6 +236,19 @@ FeedWriter.prototype = {
     }
   },
 
+  /**
+   * Calls doCommand for a the given XUL element within the context of the
+   * content document.
+   *
+   * @param aElement
+   *        the XUL element to call doCommand() on.
+   */
+  _safeDoCommand: function FW___safeDoCommand(aElement) {
+    var sandbox = new Cu.Sandbox(this._window);
+    sandbox.element = aElement;
+    Cu.evalInSandbox(""""element.doCommand();"""", sandbox);
+  },
+
   __faviconService: null,
   get _faviconService() {
     if (!this.__faviconService)
@@ -283,9 +298,13 @@ FeedWriter.prototype = {
       aCheckbox.removeAttribute('checked');
 
     if (change) {
-      var event = this._document.createEvent('Events');
-      event.initEvent('CheckboxStateChange', true, true);
-      aCheckbox.dispatchEvent(event);
+      var sandbox = new Cu.Sandbox(this._window);
+      sandbox.document = this._document;
+      sandbox.checkbox = aCheckbox;
+      var codeStr = """"var event = document.createEvent('Events'); """" +
+                    """"event.initEvent('CheckboxStateChange', true, true);"""" +
+                    """"checkbox.dispatchEvent(event);""""
+      Cu.evalInSandbox(codeStr, sandbox);
     }
   },
 
@@ -726,7 +745,7 @@ FeedWriter.prototype = {
 
             // Show and select the selected application menuitem
             selectedAppMenuItem.hidden = false;
-            selectedAppMenuItem.doCommand();
+            this._safeDoCommand(selectedAppMenuItem);
             return true;
           }
         }
@@ -859,7 +878,7 @@ FeedWriter.prototype = {
             return;
           }
 
-          handlers[0].doCommand();
+          this._safeDoCommand(handlers[0]);
         }
         break;
       }
@@ -874,7 +893,7 @@ FeedWriter.prototype = {
           if (selectedApp) {
             this._initMenuItemWithFile(selectedAppMenuItem, selectedApp);
             selectedAppMenuItem.hidden = false;
-            selectedAppMenuItem.doCommand();
+            this._safeDoCommand(selectedAppMenuItem);
 
             // Only show the default reader menuitem if the default reader
             // isn't the selected application
@@ -891,7 +910,7 @@ FeedWriter.prototype = {
       default: {
         var liveBookmarksMenuItem = this._document.getElementById(""""liveBookmarksMenuItem"""");
         if (liveBookmarksMenuItem)
-          liveBookmarksMenuItem.doCommand();
+          this._safeDoCommand(liveBookmarksMenuItem);
       } 
     }
   },
@@ -1078,7 +1097,6 @@ FeedWriter.prototype = {
                getInterface(Ci.nsIWebNavigation).
                QueryInterface(Ci.nsIDocShell).currentDocumentChannel;
 
-    const SUBSCRIBE_PAGE_URI = """"chrome://browser/content/feeds/subscribe.xhtml"""";
     var uri = makeURI(SUBSCRIBE_PAGE_URI);
     var resolvedURI = Cc[""""@mozilla.org/chrome/chrome-registry;1""""].
                       getService(Ci.nsIChromeRegistry).
@@ -1182,7 +1200,7 @@ FeedWriter.prototype = {
     this.__bundle = null;
     this._selectedApplicationItemWrapped = null;
     this._defaultSystemReaderItemWrapped = null;
-    this._FeedURI = null;
+    this._feedURI = null;
     var historySvc = Cc[""""@mozilla.org/browser/nav-history-service;1""""].
                      getService(Ci.nsINavHistoryService);
     historySvc.removeObserver(this);"""
00c9f3a489ce437092813cd13996b3d26b700e3e,63850,367121,bclary@bclary.com,"JavaScript Tests - fix window detection in test for bug 367121
",1202503868,"""diff --git a/js/tests/js1_5/extensions/regress-367121.js b/js/tests/js1_5/extensions/regress-367121.js
index 404796e..f3fcd00 100755
--- a/js/tests/js1_5/extensions/regress-367121.js
+++ b/js/tests/js1_5/extensions/regress-367121.js
@@ -91,4 +91,7 @@ function handleLoad()
   jsTestDriverEnd();
 }
 
-window.onload = handleLoad;
+if (typeof window != 'undefined')
+{
+  window.onload = handleLoad;
+}"""
619a736c5545e763dd8f7ebc608706050fe2f582,63915,367121,bclary@bclary.com,"JavaScript Tests - regression test for bug 367121, by moz_bug_r_a4
",1202398180,"""diff --git a/js/tests/js1_5/extensions/regress-367121.js b/js/tests/js1_5/extensions/regress-367121.js
new file mode 100755
index 0000000..404796e
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367121.js
@@ -0,0 +1,94 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-367121.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 367121;
+var summary = 'self modifying script detection';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  if (typeof window == 'undefined')
+  {
+    actual = expect = 'Test skipped - Test must be run in the browser.';
+    reportCompare(expect, actual, summary);
+  }
+  else if (typeof Script == 'undefined')
+  {
+    actual = expect = 'Test skipped - Test requires Script object..';
+    reportCompare(expect, actual, summary);
+  }
+  else
+  {
+    gDelayTestDriverEnd = true;
+  }
+
+  exitFunc ('test');
+}
+
+function handleLoad()
+{
+  var iframe = document.body.appendChild(document.createElement('iframe'));
+	var d = iframe.contentDocument;
+
+	d.addEventListener(""""test"""", function(e) {
+      s.compile("""""""");
+      Array(11).join(Array(11).join(Array(101).join(""""aaaaa"""")));
+    }, true);
+
+	var e = d.createEvent(""""Events"""");
+	e.initEvent(""""test"""", true, true);
+	var s = new Script(""""d.dispatchEvent(e);"""");
+	s.exec();
+
+  gDelayTestDriverEnd = false;
+  reportCompare(expect, actual, summary);
+  jsTestDriverEnd();
+}
+
+window.onload = handleLoad;"""
3776f34e7b1db3b04b87a43e0445c43219e184ef,65030,394610,dolske@mozilla.com,"Bug 394610 - Add checks for problematic whitespace. r=gavin, a=blocking-ff3+
",1200292089,"""diff --git a/toolkit/components/passwordmgr/src/nsLoginManager.js b/toolkit/components/passwordmgr/src/nsLoginManager.js
index 96a49f4..13a5bba 100644
--- a/toolkit/components/passwordmgr/src/nsLoginManager.js
+++ b/toolkit/components/passwordmgr/src/nsLoginManager.js
@@ -477,6 +477,10 @@ LoginManager.prototype = {
      * Enable or disable storing logins for the specified host.
      */
     setLoginSavingEnabled : function (hostname, enabled) {
+        // Nulls won't round-trip with getAllDisabledHosts().
+        if (hostname.indexOf(""""\0"""") != -1)
+            throw """"Invalid hostname"""";
+
         this.log(""""Saving logins for """" + hostname + """" enabled? """" + enabled);
         return this._storage.setLoginSavingEnabled(hostname, enabled);
     },
diff --git a/toolkit/components/passwordmgr/src/storage-Legacy.js b/toolkit/components/passwordmgr/src/storage-Legacy.js
index eff6022..72d0f80 100644
--- a/toolkit/components/passwordmgr/src/storage-Legacy.js
+++ b/toolkit/components/passwordmgr/src/storage-Legacy.js
@@ -177,6 +177,9 @@ LoginManagerStorage_legacy.prototype = {
      *
      */
     addLogin : function (login) {
+        // Throws if there are bogus values.
+        this._checkLoginValues(login);
+
         // We rely on using login.wrappedJSObject. addLogin is the
         // only entry point where we might get a nsLoginInfo object
         // that wasn't created by us (and so might not be a JS
@@ -272,6 +275,9 @@ LoginManagerStorage_legacy.prototype = {
      *
      */
     modifyLogin : function (oldLogin, newLogin) {
+        // Throws if there are bogus values.
+        this._checkLoginValues(newLogin);
+
         this.removeLogin(oldLogin);
         this.addLogin(newLogin);
     },
@@ -341,6 +347,14 @@ LoginManagerStorage_legacy.prototype = {
      *
      */
     setLoginSavingEnabled : function (hostname, enabled) {
+        // File format prohibits certain values. Also, nulls
+        // won't round-trip with getAllDisabledHosts().
+        if (hostname == """"."""" ||
+            hostname.indexOf(""""\r"""") != -1 ||
+            hostname.indexOf(""""\n"""") != -1 ||
+            hostname.indexOf(""""\0"""") != -1)
+            throw """"Invalid hostname"""";
+
         if (enabled)
             delete this._disabledHosts[hostname];
         else
@@ -457,6 +471,45 @@ LoginManagerStorage_legacy.prototype = {
 
 
     /*
+     * _checkLoginValues
+     *
+     * Due to the way the signons2.txt file is formatted, we need to make
+     * sure certain field values or characters do not cause the file to
+     * be parse incorrectly. Reject logins that we can't store correctly.
+     */
+    _checkLoginValues : function (aLogin) {
+        function badCharacterPresent(l, c) {
+            return ((l.formSubmitURL && l.formSubmitURL.indexOf(c) != -1) ||
+                    (l.httpRealm     && l.httpRealm.indexOf(c)     != -1) ||
+                                        l.hostname.indexOf(c)      != -1  ||
+                                        l.usernameField.indexOf(c) != -1  ||
+                                        l.passwordField.indexOf(c) != -1);
+        }
+
+        // Nulls are invalid, as they don't round-trip well.
+        // Mostly not a formatting problem, although """".\0"""" can be quirky.
+        if (badCharacterPresent(aLogin, """"\0""""))
+            throw """"login values can't contain nulls"""";
+
+        // Newlines are invalid for any field stored as plaintext.
+        if (badCharacterPresent(aLogin, """"\r"""") ||
+            badCharacterPresent(aLogin, """"\n""""))
+            throw """"login values can't contain newlines"""";
+
+        // A line with just a """"."""" can have special meaning.
+        if (aLogin.usernameField == """"."""" ||
+            aLogin.formSubmitURL == """"."""")
+            throw """"login values can't be periods"""";
+
+        // A hostname with """"\ \("""" won't roundtrip.
+        // eg host=""""foo ("""", realm=""""bar"""" --> """"foo ( (bar)""""
+        // vs host=""""foo"""", realm="""" (bar"""" --> """"foo ( (bar)""""
+        if (aLogin.hostname.indexOf("""" ("""") != -1)
+            throw """"bad parens in hostname"""";
+    },
+
+
+    /*
      * _getSignonsFile
      *
      * Determines what file to use based on prefs. Returns it as a
diff --git a/toolkit/components/passwordmgr/test/unit/head_storage_legacy_1.js b/toolkit/components/passwordmgr/test/unit/head_storage_legacy_1.js
index d4e1f43..37310e1 100644
--- a/toolkit/components/passwordmgr/test/unit/head_storage_legacy_1.js
+++ b/toolkit/components/passwordmgr/test/unit/head_storage_legacy_1.js
@@ -45,7 +45,7 @@ const LoginTest = {
    */
   initStorage : function (storage, aInputPathName,  aInputFileName,
                           aOutputPathName, aOutputFileName, aExpectedError) {
-    var e, caughtError = false;
+    var err = null;
 
     var inputFile  = Cc[""""@mozilla.org/file/local;1""""]
                             .createInstance(Ci.nsILocalFile);
@@ -63,24 +63,34 @@ const LoginTest = {
     try {
         storage.initWithFile(inputFile, outputFile);
     } catch (e) {
-        caughtError = true;
-        var err = e;
+        err = e;
     }
 
+    this.checkExpectedError(aExpectedError, err);
+
+    return;
+  },
+
+
+  /*
+   * checkExpectedError
+   *
+   * Checks to see if a thrown error was expected or not, and if it
+   * matches the expected value.
+   */
+  checkExpectedError : function (aExpectedError, aActualError) {
     if (aExpectedError) {
-        if (!caughtError)
+        if (!aActualError)
             throw """"Storage didn't throw as expected ("""" + aExpectedError + """")"""";
 
-        if (!aExpectedError.test(err))
-            throw """"Storage threw ("""" + err + """"), not ("""" + aExpectedError;
+        if (!aExpectedError.test(aActualError))
+            throw """"Storage threw ("""" + aActualError + """"), not ("""" + aExpectedError;
 
         // We got the expected error, so make a note in the test log.
         dump(""""...that error was expected.\n\n"""");
-    } else if (caughtError) {
-        throw """"Component threw unexpected error: """" + err;
+    } else if (aActualError) {
+        throw """"Component threw unexpected error: """" + aActualError;
     }
-
-    return;
   },
 
 
@@ -126,6 +136,31 @@ const LoginTest = {
         do_check_true(found);
     }
 
+  },
+
+  /*
+   * countLinesInFile
+   *
+   * Counts the number of lines in the specified file.
+   */
+  countLinesInFile : function (aPathName,  aFileName) {
+    var inputFile  = Cc[""""@mozilla.org/file/local;1""""].
+                     createInstance(Ci.nsILocalFile);
+    inputFile.initWithPath(aPathName);
+    inputFile.append(aFileName);
+
+    var inputStream = Cc[""""@mozilla.org/network/file-input-stream;1""""].
+                      createInstance(Ci.nsIFileInputStream);
+    // init the stream as RD_ONLY, -1 == default permissions.
+    inputStream.init(inputFile, 0x01, -1, null);
+    var lineStream = inputStream.QueryInterface(Ci.nsILineInputStream);
+
+    var line = { value : null };
+    var lineCount = 0;
+    while (lineStream.readLine(line)) 
+        lineCount++;
+
+    return lineCount;
   }
 
 };
diff --git a/toolkit/components/passwordmgr/test/unit/test_storage_legacy_3.js b/toolkit/components/passwordmgr/test/unit/test_storage_legacy_3.js
index 66f2129..ec05ebd 100644
--- a/toolkit/components/passwordmgr/test/unit/test_storage_legacy_3.js
+++ b/toolkit/components/passwordmgr/test/unit/test_storage_legacy_3.js
@@ -122,7 +122,6 @@ testnum++;
 testdesc = """"testing import of non-ascii username and password.""""
 LoginTest.initStorage(storage, INDIR, """"signons-381262.txt"""",
                                OUTDIR, """"output-381262-1.txt"""");
-var logins = storage.getAllLogins({});
 LoginTest.checkStorageData(storage, [], [dummyuser4]);
 
 testdesc = """"[flush and reload for verification]""""
@@ -142,7 +141,6 @@ LoginTest.checkStorageData(storage, [], [dummyuser4]);
 
 testdesc = """"[flush and reload for verification]""""
 LoginTest.initStorage(storage, OUTDIR, """"output-381262-2.txt"""");
-logins = storage.getAllLogins({});
 LoginTest.checkStorageData(storage, [], [dummyuser4]);
 
 
@@ -178,6 +176,334 @@ testdesc = """"[flush and reload for verification]"""";
 LoginTest.initStorage(storage, OUTDIR, """"output-400751-1.txt"""");
 LoginTest.checkStorageData(storage, [], [dummyuser1, dummyuser2]);
 
+/*
+ * ---------------------- Bug 394610 ----------------------
+ * Ensure input which might mess with the format or structure of
+ * the store file is appropriately filtered.
+ */
+
+/* ========== 10 ========== */
+testnum++;
+
+function tryAddUser(storage, aUser, aExpectedError) {
+    var err = null;
+    try {
+        storage.addLogin(aUser);
+    } catch (e) {
+        err = e;
+    }
+
+    LoginTest.checkExpectedError(aExpectedError, err);
+}
+
+testdesc = """"preparting to try logins with bogus values"""";
+LoginTest.initStorage(storage, INDIR, """"signons-empty.txt"""",
+                               OUTDIR, """"output-394610-1.txt"""");
+LoginTest.checkStorageData(storage, [], []);
+
+
+var failUser = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+               createInstance(Ci.nsILoginInfo);
+// init with legal values, we'll change on-the-fly
+failUser.init(""""http://failure.site.org"""",
+    """"http://failure.site.org"""", null,
+    """"username"""", """"password"""", """"uname"""", """"pword"""");
+
+
+testdesc = """"storing data values with embedded newlines.""""
+
+
+// newline in """"never for this site"""" address.
+var failHost = """"http://new\nline.never.net"""";
+var error = null;
+try {
+    storage.setLoginSavingEnabled(failHost, false);
+} catch (e) {
+    error = e;
+}
+LoginTest.checkExpectedError(/Invalid hostname/, error);
+
+// CR in """"never for this site"""" address.
+failHost = """"http://new\rline.never.net"""";
+error = null;
+try {
+    storage.setLoginSavingEnabled(failHost, false);
+} catch (e) {
+    error = e;
+}
+LoginTest.checkExpectedError(/Invalid hostname/, error);
+
+
+// check hostname
+failUser.hostname = """"http://fail\nure.site.org"""";
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.hostname = """"http://fail\rure.site.org"""";
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.hostname = """"http://failure.site.org"""";
+
+
+// check httpRealm and formSubmitURL
+failUser.httpRealm = """"http://fail\nure.site.org"""";
+failUser.formSubmitURL = null;
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.httpRealm = """"http://fail\rure.site.org"""";
+failUser.formSubmitURL = null;
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.formSubmitURL = """"http://fail\nure.site.org"""";
+failUser.httpRealm = null;
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.formSubmitURL = """"http://fail\rure.site.org"""";
+failUser.httpRealm = null;
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.formSubmitURL = """"http://failure.site.org"""";
+
+
+// check usernameField
+failUser.usernameField = """"u\nname"""";
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.usernameField = """"u\rname"""";
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.usernameField = """"uname"""";
+
+
+// check passwordField
+failUser.passwordField = """"p\nword"""";
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.passwordField = """"p\rword"""";
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.passwordField = """"pword"""";
+
+
+// check username and password, which are OK with embedded newlines.
+failUser.username = """"user\r\nname"""";
+failUser.password = """"pass\r\nword"""";
+tryAddUser(storage, failUser, null);
+
+var numLines = LoginTest.countLinesInFile(OUTDIR, """"output-394610-1.txt"""");
+do_check_eq(numLines, 9);
+
+testdesc = """"[flush and reload for verification]""""
+LoginTest.initStorage(storage, OUTDIR, """"output-394610-1.txt"""");
+LoginTest.checkStorageData(storage, [], [failUser]);
+
+failUser.username = """"username"""";
+failUser.password = """"password"""";
+
+
+/* ========== 11 ========== */
+testnum++;
+
+testdesc = """"storing data values with special period-only value""""
+LoginTest.initStorage(storage, INDIR, """"signons-empty.txt"""",
+                               OUTDIR, """"output-394610-2.txt"""");
+LoginTest.checkStorageData(storage, [], []);
+
+
+failHost = """"."""";
+error = null;
+try {
+    storage.setLoginSavingEnabled(failHost, false);
+} catch (e) {
+    error = e;
+}
+LoginTest.checkExpectedError(/Invalid hostname/, error);
+
+
+
+// check usernameField
+failUser.usernameField = """"."""";
+tryAddUser(storage, failUser, /login values can't be periods/);
+failUser.usernameField = """"uname"""";
+
+// check formSubmitURL
+failUser.usernameField = """"."""";
+tryAddUser(storage, failUser, /login values can't be periods/);
+failUser.formSubmitURL = """"http://failure.site.org"""";
+
+testdesc = """"check added data""""
+LoginTest.checkStorageData(storage, [], []);
+var numLines = LoginTest.countLinesInFile(OUTDIR, """"output-394610-2.txt"""");
+do_check_eq(numLines, 2);
+
+testdesc = """"[flush and reload for verification]""""
+LoginTest.initStorage(storage, OUTDIR, """"output-394610-2.txt"""");
+LoginTest.checkStorageData(storage, [], []);
+
+
+/* ========== 12 ========== */
+testnum++;
+
+testdesc = """"create logins with parens in host/httpRealm""""
+
+LoginTest.initStorage(storage, INDIR, """"signons-empty.txt"""",
+                               OUTDIR, """"output-394610-3.txt"""");
+LoginTest.checkStorageData(storage, [], []);
+
+var parenUser1 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+var parenUser2 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+var parenUser3 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+var parenUser4 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+var parenUser5 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+var parenUser6 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+var parenUser7 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+var parenUser8 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+var parenUser9 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+
+// realm as """"(realm"""", """"realm)"""", """"(realm)"""", """")realm(""""
+parenUser1.init(""""http://parens.site.org"""", null, """"(realm"""",
+    """"user1"""", """"pass1"""", """"uname"""", """"pword"""");
+parenUser2.init(""""http://parens.site.org"""", null, """"realm)"""",
+    """"user2"""", """"pass2"""", """"uname"""", """"pword"""");
+parenUser3.init(""""http://parens.site.org"""", null, """"(realm)"""",
+    """"user3"""", """"pass3"""", """"uname"""", """"pword"""");
+parenUser4.init(""""http://parens.site.org"""", null, """")realm("""",
+    """"user4"""", """"pass4"""", """"uname"""", """"pword"""");
+
+// hostname as """"xx(xx"""", """"xx)xx"""", """"xx()xx"""", """"xx)(xx""""
+parenUser5.init(""""http://parens(yay.site.org"""", null, """"realm"""",
+    """"user5"""", """"pass5"""", """"uname"""", """"pword"""");
+parenUser6.init(""""http://parens)yay.site.org"""", null, """"realm"""",
+    """"user6"""", """"pass6"""", """"uname"""", """"pword"""");
+parenUser7.init(""""http://parens(yay).site.org"""", null, """"realm"""",
+    """"user7"""", """"pass7"""", """"uname"""", """"pword"""");
+parenUser8.init(""""http://parens)yay(.site.org"""", null, """"realm"""",
+    """"user8"""", """"pass8"""", """"uname"""", """"pword"""");
+
+// """"xx (xx"""" as a special case
+parenUser9.init(""""http://parens (.site.org"""", null, """"realm"""",
+    """"user9"""", """"pass9"""", """"uname"""", """"pword"""");
+
+testdesc = """"add logins with parens in host/httpRealm""""
+tryAddUser(storage, parenUser1, null);
+tryAddUser(storage, parenUser2, null);
+tryAddUser(storage, parenUser3, null);
+tryAddUser(storage, parenUser4, null);
+tryAddUser(storage, parenUser5, null);
+tryAddUser(storage, parenUser6, null);
+tryAddUser(storage, parenUser7, null);
+tryAddUser(storage, parenUser8, null);
+
+// we expect this one to fail.
+tryAddUser(storage, parenUser9, /bad parens in hostname/);
+
+var parenLogins = [
+    parenUser1, parenUser2, parenUser3, parenUser4,
+    parenUser5, parenUser6, parenUser7, parenUser8
+    ];
+
+testdesc = """"check added data""""
+LoginTest.checkStorageData(storage, [], parenLogins);
+var numLines = LoginTest.countLinesInFile(OUTDIR, """"output-394610-3.txt"""");
+do_check_eq(numLines, 58);
+
+testdesc = """"[flush and reload for verification]""""
+LoginTest.initStorage(storage, OUTDIR, """"output-394610-3.txt"""");
+LoginTest.checkStorageData(storage, [], parenLogins);
+
+
+/* ========== 13 ========== */
+testnum++;
+
+testdesc = """"storing data values with embedded nulls.""""
+
+// sanity check
+do_check_eq( """"foo\0bar"""", """"foo\0bar"""");
+do_check_neq(""""foo\0bar"""", """"foobar"""");
+
+LoginTest.initStorage(storage, INDIR, """"signons-empty.txt"""",
+                               OUTDIR, """"output-394610-4.txt"""");
+LoginTest.checkStorageData(storage, [], []);
+
+var nullUser = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+               createInstance(Ci.nsILoginInfo);
+
+nullUser.init(""""http://null.site.org"""",
+    """"http://null.site.org"""", null,
+    """"username"""", """"password"""", """"usernull"""", """"passnull"""");
+
+// null in """"never for this site"""" address.
+var nullHost = """"http://never\0X.sit.org"""";
+error = null;
+try {
+    storage.setLoginSavingEnabled(nullHost, false);
+} catch (e) {
+    error = e;
+}
+LoginTest.checkExpectedError(/Invalid hostname/, error);
+
+
+// check hostname
+nullUser.hostname = """"http://null\0X.site.org"""";
+tryAddUser(storage, nullUser, /login values can't contain nulls/);
+nullUser.hostname = """"http://null.site.org"""";
+
+
+// check httpRealm and formSubmitURL
+nullUser.httpRealm = """"http://null\0X.site.org"""";
+nullUser.formSubmitURL = null;
+tryAddUser(storage, nullUser, /login values can't contain nulls/);
+
+nullUser.formSubmitURL = """"http://null\0X.site.org"""";
+nullUser.httpRealm = null;
+tryAddUser(storage, nullUser, /login values can't contain nulls/);
+
+nullUser.formSubmitURL = """"http://null.site.org"""";
+
+
+// check usernameField
+nullUser.usernameField = """"usernull\0X"""";
+tryAddUser(storage, nullUser, /login values can't contain nulls/);
+nullUser.usernameField = """"usernull"""";
+
+// check usernameField with a special case value
+nullUser.usernameField = """".\0"""";
+tryAddUser(storage, nullUser, /login values can't contain nulls/);
+nullUser.usernameField = """"usernull"""";
+
+// check passwordField
+nullUser.passwordField = """"passnull\0X"""";
+tryAddUser(storage, nullUser, /login values can't contain nulls/);
+nullUser.passwordField = """"passnull"""";
+
+
+// check username and password, which are OK with embedded nulls.
+nullUser.username = """"user\0name"""";
+nullUser.password = """"pass\0word"""";
+tryAddUser(storage, nullUser, null);
+
+LoginTest.checkStorageData(storage, [], [nullUser]);
+var numLines = LoginTest.countLinesInFile(OUTDIR, """"output-394610-4.txt"""");
+do_check_eq(numLines, 9);
+
+testdesc = """"[flush and reload for verification]""""
+LoginTest.initStorage(storage, OUTDIR, """"output-394610-4.txt"""");
+LoginTest.checkStorageData(storage, [], [nullUser]);
+
+nullUser.username = """"username"""";
+nullUser.password = """"password"""";
+
+
+
+/* ========== end ========== */
 } catch (e) {
     throw (""""FAILED in test #"""" + testnum + """" -- """" + testdesc + """": """" + e);
 }"""
72c8a81d02c5b24892a839d11acabf162179aee8,66203,369413,jruderman@hmc.edu,"Add crashtest for bug 369413.
",1197688744,"""diff --git a/dom/src/base/crashtests/369413-1.html b/dom/src/base/crashtests/369413-1.html
new file mode 100644
index 0000000..4fc3b7d
--- /dev/null
+++ b/dom/src/base/crashtests/369413-1.html
@@ -0,0 +1,12 @@
+<html>
+<head>
+<script>
+try { atob(null); } catch(e) { }
+try { atob(""""""""); } catch(e) { }
+try { atob(""""A=""""); } catch(e) { }
+try { atob(""""AA=""""); } catch(e) { }
+</script>
+</head>
+<body>
+</body>
+</html>
diff --git a/dom/src/base/crashtests/crashtests.list b/dom/src/base/crashtests/crashtests.list
index c8fc2b7..b8cb666 100644
--- a/dom/src/base/crashtests/crashtests.list
+++ b/dom/src/base/crashtests/crashtests.list
@@ -1,2 +1,3 @@
 load 327571-1.html
 load 327695-1.html
+load 369413-1.html"""
dcdbef10dfb30a53da9d0237c9a81def38a5ede1,66362,306940,jruderman@hmc.edu,"Add crashtest for bug 306940.
",1197434968,"""diff --git a/layout/base/crashtests/306940-1.html b/layout/base/crashtests/306940-1.html
new file mode 100644
index 0000000..f6197c3
--- /dev/null
+++ b/layout/base/crashtests/306940-1.html
@@ -0,0 +1,50 @@
+<html>
+<head>
+
+<script>
+
+function init()
+{
+  var c1 = document.getElementById(""""c1""""); 
+  var f1 = document.getElementById(""""f1""""); 
+  var a1 = document.getElementById(""""a1""""); 
+  
+  function first()
+  {
+    f1.style.display = """"-moz-popup"""";
+    c1.style.height = """"2em"""";
+    window.status = """"A"""";
+  }
+  
+  function second()
+  {
+    c1.style.position = """"absolute"""";
+    c1.style.overflow = """"auto"""";
+    a1.style.position = """"absolute"""";
+    window.status = """"B"""";
+  }
+
+  first();
+  document.documentElement.offsetHeight;
+  second();
+}
+
+</script>
+</head>
+
+<body onload=""""init();"""">
+  <div id=""""c1"""">
+    <div id=""""f1"""">
+      <table>
+        <tr>
+          <td>
+
+            <span id=""""a1"""">Foo</span>
+          </td>
+        </tr>
+      </table>
+    </div>
+  </div>
+</body>
+
+</html>
diff --git a/layout/base/crashtests/crashtests.list b/layout/base/crashtests/crashtests.list
new file mode 100644
index 0000000..a2de903
--- /dev/null
+++ b/layout/base/crashtests/crashtests.list
@@ -0,0 +1 @@
+load 306940-1.html
diff --git a/testing/crashtest/crashtests.list b/testing/crashtest/crashtests.list
index 9512b2e..31093b3 100644
--- a/testing/crashtest/crashtests.list
+++ b/testing/crashtest/crashtests.list
@@ -3,4 +3,5 @@
 
 include ../../testing/crashtest/sanity/crashtests.list
 include ../../gfx/src/mac/crashtests/crashtests.list
+include ../../layout/base/crashtests/crashtests.list
 include ../../layout/xul/base/src/grid/crashtests/crashtests.list"""
afb5d346dd0783bdaac922d41304c413d2dba653,66368,306902,jruderman@hmc.edu,"Add crashtest for bug 306902 (the first crashtest!)
",1197426395,"""diff --git a/gfx/src/mac/crashtests/306902-1.xml b/gfx/src/mac/crashtests/306902-1.xml
new file mode 100644
index 0000000..24e8c06
--- /dev/null
+++ b/gfx/src/mac/crashtests/306902-1.xml
@@ -0,0 +1,14 @@
+<?xml version='1.0'?>
+
+<html xmlns=""""http://www.w3.org/1999/xhtml"""">
+
+<body>
+
+<math xmlns='http://www.w3.org/1998/Math/MathML' display='block'><msup>
+

+
+</msup></math>
+
+</body>
+</html>
diff --git a/gfx/src/mac/crashtests/crashtests.list b/gfx/src/mac/crashtests/crashtests.list
new file mode 100644
index 0000000..b185a01
--- /dev/null
+++ b/gfx/src/mac/crashtests/crashtests.list
@@ -0,0 +1 @@
+load 306902-1.xml
diff --git a/testing/crashtest/crashtests.list b/testing/crashtest/crashtests.list
index 9ebd279..08373b3 100644
--- a/testing/crashtest/crashtests.list
+++ b/testing/crashtest/crashtests.list
@@ -2,3 +2,4 @@
 # DO NOT ADD CRASHTESTS INDIVIDUALLY HERE!
 
 include ../../testing/crashtest/sanity/crashtests.list
+include ../../gfx/src/mac/crashtests/crashtests.list"""
963b9e36b747435e05493eb4494ab68020e44483,66518,335816,smontagu@smontagu.org,"Regression test for bug 335816
",1196960686,"""diff --git a/intl/uconv/tests/Makefile.in b/intl/uconv/tests/Makefile.in
index 6691f32..b48371b 100644
--- a/intl/uconv/tests/Makefile.in
+++ b/intl/uconv/tests/Makefile.in
@@ -39,6 +39,7 @@ DEPTH		= ../../..
 topsrcdir	= @top_srcdir@
 srcdir		= @srcdir@
 VPATH		= @srcdir@
+relativesrcdir	= intl/uconv/tests
 
 include $(DEPTH)/config/autoconf.mk
 
@@ -65,6 +66,16 @@ endif
 
 SIMPLE_PROGRAMS	= $(CPPSRCS:.cpp=$(BIN_SUFFIX))
 
+ifdef MOZ_MOCHITEST
+
+_TEST_FILES =	\
+		test_bug335816.html \
+		$(NULL)
+libs:: $(_TEST_FILES)
+	$(INSTALL) $(foreach f,$^,""""$f"""") $(DEPTH)/_tests/testing/mochitest/tests/$(relativesrcdir)
+
+endif # MOZ_MOCHITEST
+
 XPCSHELL_TESTS = unit
 
 include $(topsrcdir)/config/rules.mk
diff --git a/intl/uconv/tests/test_bug335816.html b/intl/uconv/tests/test_bug335816.html
new file mode 100644
index 0000000..da9f179
--- /dev/null
+++ b/intl/uconv/tests/test_bug335816.html
@@ -0,0 +1,42 @@
+<!DOCTYPE HTML>
+<html>
+<!--
+https://bugzilla.mozilla.org/show_bug.cgi?id=335816
+-->
+<head>
+  <meta http-equiv=""""Content-type"""" content=""""text/html; charset=UTF-8"""">
+  <title>Test for Bug 335816</title>
+  <script type=""""text/javascript"""" src=""""/MochiKit/MochiKit.js""""></script>
+  <script type=""""text/javascript"""" src=""""/tests/SimpleTest/SimpleTest.js""""></script>
+  <link rel=""""stylesheet"""" type=""""text/css"""" href=""""/tests/SimpleTest/test.css"""" />
+</head>
+<body>
+<pre id=""""test"""">
+<script class=""""testbody"""" type=""""text/javascript"""">
+
+/** Test for Bug 335816 **/
+function test()
+{
+  ok($(""""display"""").innerHTML != """"Keep that breathless charm"""", """"Hidden script not executed"""");
+  SimpleTest.finish();
+}
+
+function WontYouPleaseArrangeIt()
+{
+  $(""""display"""").innerHTML = """"Keep that breathless charm"""";
+}
+
+  setTimeout(test, 100);
+  SimpleTest.waitForExplicitFinish();
+</script>
+</pre>
+<a target=""""_blank"""" href=""""https://bugzilla.mozilla.org/show_bug.cgi?id=335816"""">Mozilla Bug 335816</a>
+<p id=""""display"""">Lovely ... Never, ever change.</p>
+
+<!-- There is a UTF-8 BOM just here - - - 
+                                         |  which should not be stripped 
+                                         v      -->
+<div id=""""content"""" style=""""display: none""""><﻿script>WontYouPleaseArrangeIt();</script></div>
+</body>
+</html>
+"""
fe23c348c44555e8ccd6dc57c7e86aaf4e9453f7,66952,369814,dcamp@mozilla.com,"fix test bustage from bug 369814.
",1196145607,"""diff --git a/content/html/content/test/Makefile.in b/content/html/content/test/Makefile.in
index 377bb3a..f1c3a3f 100644
--- a/content/html/content/test/Makefile.in
+++ b/content/html/content/test/Makefile.in
@@ -100,6 +100,8 @@ _TEST_FILES = 	test_bug589.html \
 		test_bug390975.html \
 		test_bug391994.html \
 		test_bug392567.html \
+		bug392567.jar       \
+		bug392567.jar^headers^ \
 		test_bug394700.html \
 		test_bug401160.xhtml \
 		$(NULL)
diff --git a/content/html/content/test/bug392567.jar b/content/html/content/test/bug392567.jar
new file mode 100644
index 0000000..bca0651
Binary files /dev/null and b/content/html/content/test/bug392567.jar differ
diff --git a/content/html/content/test/bug392567.jar^headers^ b/content/html/content/test/bug392567.jar^headers^
new file mode 100644
index 0000000..28b8aa0
--- /dev/null
+++ b/content/html/content/test/bug392567.jar^headers^
@@ -0,0 +1 @@
+Content-Type: application/java-archive
diff --git a/content/html/content/test/test_bug392567.html b/content/html/content/test/test_bug392567.html
index 4087618..fb3b154 100644
--- a/content/html/content/test/test_bug392567.html
+++ b/content/html/content/test/test_bug392567.html
@@ -22,7 +22,7 @@ https://bugzilla.mozilla.org/show_bug.cgi?id=392567
 
 /** Test for Bug 392567 **/
 
-var dataUrl = """"data:application/octet-stream;base64,UEsDBBQAAgAIAO1yETcAAAAAAgAAAAAAAAAKAAAAaW5kZXguaHRtbAMAUEsBAhQAFAACAAgA7XIRNwAAAAACAAAAAAAAAAoAAAAAAAAAAAAgAAAAAAAAAGluZGV4Lmh0bWxQSwUGAAAAAAEAAQA4AAAAKgAAAAAA"""";
+var dataUrl = """"http://localhost:8888/tests/content/html/content/test/bug392567.jar"""";
 var jarUrl = """"jar:"""" + dataUrl + """"!/index.html"""";
 var httpUrl = location.href.replace(/\.html.*/, """"_404"""");
 """
08fc863c1c55469c0e07e8059c39982a75f7cf02,66953,369814,dcamp@mozilla.com,"Bug 369814: don't open jar: content unless served from a safe mime type.  r=bz, sr=dveditz, ui-r=beltzner
",1196141543,"""diff --git a/browser/locales/en-US/chrome/overrides/appstrings.properties b/browser/locales/en-US/chrome/overrides/appstrings.properties
index e70e763..b1b2102 100644
--- a/browser/locales/en-US/chrome/overrides/appstrings.properties
+++ b/browser/locales/en-US/chrome/overrides/appstrings.properties
@@ -53,6 +53,7 @@ deniedPortAccess=This address uses a network port which is normally used for pur
 proxyResolveFailure=Firefox is configured to use a proxy server that can't be found.
 proxyConnectFailure=Firefox is configured to use a proxy server that is refusing connections.
 contentEncodingError=The page you are trying to view cannot be shown because it uses an invalid or unsupported form of compression. Please contact the website owners to inform them of this problem.
+unsafeContentType=The page you are trying to view cannot be shown because it is contained in a file type that may not be safe to open. Please contact the website owners to inform them of this problem.
 externalProtocolTitle=External Protocol Request
 externalProtocolPrompt=An external application must be launched to handle %1$S: links.\n\n\nRequested link:\n\n%2$S\n\nApplication: %3$S\n\n\nIf you were not expecting this request it may be an attempt to exploit a weakness in that other program. Cancel this request unless you are sure it is not malicious.\n
 #LOCALIZATION NOTE (externalProtocolUnknown): The following string is shown if the application name can't be determined
diff --git a/browser/locales/en-US/chrome/overrides/netError.dtd b/browser/locales/en-US/chrome/overrides/netError.dtd
index cc93b97..60d0e47 100644
--- a/browser/locales/en-US/chrome/overrides/netError.dtd
+++ b/browser/locales/en-US/chrome/overrides/netError.dtd
@@ -66,6 +66,13 @@
 </ul>
 """">
 
+<!ENTITY unsafeContentType.title """"Unsafe File Type"""">
+<!ENTITY unsafeContentType.longDesc """"
+<ul>
+  <li>Please contact the website owners to inform them of this problem.</li>
+</ul>
+"""">
+
 <!ENTITY netReset.title """"The connection was reset"""">
 <!ENTITY netReset.longDesc """"&sharedLongDesc;"""">
 
diff --git a/docshell/base/Makefile.in b/docshell/base/Makefile.in
index 2bb7172..7e4e1ac 100644
--- a/docshell/base/Makefile.in
+++ b/docshell/base/Makefile.in
@@ -85,6 +85,7 @@ REQUIRES	= xpcom \
 		  windowwatcher \
 		  imglib2 \
 		  mimetype \
+		  jar \
 		  $(NULL)
 
 SDK_XPIDLSRCS = \
diff --git a/docshell/base/nsDocShell.cpp b/docshell/base/nsDocShell.cpp
index 3233392..56b5006 100644
--- a/docshell/base/nsDocShell.cpp
+++ b/docshell/base/nsDocShell.cpp
@@ -168,6 +168,8 @@
 
 #include """"nsITextToSubURI.h""""
 
+#include """"nsIJARChannel.h""""
+
 #include """"prlog.h""""
 #include """"prmem.h""""
 
@@ -1301,11 +1303,36 @@ nsDocShell::SetDocumentCharsetInfo(nsIDocumentCharsetInfo *
 }
 
 NS_IMETHODIMP
+nsDocShell::GetChannelIsUnsafe(PRBool *aUnsafe)
+{
+    *aUnsafe = PR_FALSE;
+
+    nsCOMPtr<nsIChannel> channel;
+    GetCurrentDocumentChannel(getter_AddRefs(channel));
+    if (!channel) {
+        return NS_OK;
+    }
+
+    nsCOMPtr<nsIJARChannel> jarChannel = do_QueryInterface(channel);
+    if (!jarChannel) {
+        return NS_OK;
+    }
+
+    return jarChannel->GetIsUnsafe(aUnsafe);
+}
+
+NS_IMETHODIMP
 nsDocShell::GetAllowPlugins(PRBool * aAllowPlugins)
 {
     NS_ENSURE_ARG_POINTER(aAllowPlugins);
 
     *aAllowPlugins = mAllowPlugins;
+    if (!mAllowPlugins) {
+        return NS_OK;
+    }
+
+    PRBool unsafe;
+    *aAllowPlugins = NS_SUCCEEDED(GetChannelIsUnsafe(&unsafe)) && !unsafe;
     return NS_OK;
 }
 
@@ -1323,6 +1350,12 @@ nsDocShell::GetAllowJavascript(PRBool * aAllowJavascript)
     NS_ENSURE_ARG_POINTER(aAllowJavascript);
 
     *aAllowJavascript = mAllowJavascript;
+    if (!mAllowJavascript) {
+        return NS_OK;
+    }
+
+    PRBool unsafe;
+    *aAllowJavascript = NS_SUCCEEDED(GetChannelIsUnsafe(&unsafe)) && !unsafe;
     return NS_OK;
 }
 
@@ -1338,6 +1371,12 @@ NS_IMETHODIMP nsDocShell::GetAllowMetaRedirects(PRBool * aReturn)
     NS_ENSURE_ARG_POINTER(aReturn);
 
     *aReturn = mAllowMetaRedirects;
+    if (!mAllowMetaRedirects) {
+        return NS_OK;
+    }
+
+    PRBool unsafe;
+    *aReturn = NS_SUCCEEDED(GetChannelIsUnsafe(&unsafe)) && !unsafe;
     return NS_OK;
 }
 
@@ -3036,6 +3075,10 @@ nsDocShell::DisplayLoadError(nsresult aError, nsIURI *aURI,
             // Bad Content Encoding.
             error.AssignLiteral(""""contentEncodingError"""");
             break;
+        case NS_ERROR_UNSAFE_CONTENT_TYPE:
+            // Channel refused to load from an unrecognized content type.
+            error.AssignLiteral(""""unsafeContentType"""");
+            break;
         }
     }
 
@@ -6553,6 +6596,25 @@ nsDocShell::InternalLoad(nsIURI * aURI,
             (aFlags & INTERNAL_LOAD_FLAGS_INHERIT_OWNER) &&
             NS_SUCCEEDED(URIInheritsSecurityContext(aURI, &inherits)) &&
             inherits) {
+
+            // Don't allow loads that would inherit our security context
+            // if this document came from an unsafe channel.
+            nsCOMPtr<nsIDocShellTreeItem> treeItem = this;
+            do {
+                nsCOMPtr<nsIDocShell> itemDocShell =
+                    do_QueryInterface(treeItem);
+                PRBool isUnsafe;
+                if (itemDocShell &&
+                    NS_SUCCEEDED(itemDocShell->GetChannelIsUnsafe(&isUnsafe)) &&
+                    isUnsafe) {
+                    return NS_ERROR_DOM_SECURITY_ERR;
+                }
+
+                nsCOMPtr<nsIDocShellTreeItem> parent;
+                treeItem->GetSameTypeParent(getter_AddRefs(parent));
+                parent.swap(treeItem);
+            } while (treeItem);
+
             owner = GetInheritedPrincipal(PR_TRUE);
         }
     }
diff --git a/docshell/base/nsIDocShell.idl b/docshell/base/nsIDocShell.idl
index 86a2935..b6d8205 100644
--- a/docshell/base/nsIDocShell.idl
+++ b/docshell/base/nsIDocShell.idl
@@ -68,7 +68,7 @@ interface nsILayoutHistoryState;
 interface nsISecureBrowserUI;
 interface nsIDOMStorage;
 
-[scriptable, uuid(10ed386d-8598-408c-b571-e75ad18edeb0)]
+[scriptable, uuid(4b00222a-8d0a-46d7-a1fe-43bd89d19324)]
 interface nsIDocShell : nsISupports
 {
   /**
@@ -448,5 +448,12 @@ interface nsIDocShell : nsISupports
    * document has been set up)
    */
   readonly attribute boolean isInUnload;
+
+  /**
+   * Find out if the currently loaded document came from a suspicious channel
+   * (such as a JAR channel where the server-returned content type isn't a
+   * known JAR type).
+   */
+  readonly attribute boolean channelIsUnsafe;
 };
 
diff --git a/docshell/base/nsWebShell.cpp b/docshell/base/nsWebShell.cpp
index c146c49..937391e 100644
--- a/docshell/base/nsWebShell.cpp
+++ b/docshell/base/nsWebShell.cpp
@@ -1196,6 +1196,7 @@ nsresult nsWebShell::EndPageLoad(nsIWebProgress *aProgress,
              aStatus == NS_ERROR_NET_RESET ||
              aStatus == NS_ERROR_MALWARE_URI ||
              aStatus == NS_ERROR_PHISHING_URI ||
+             aStatus == NS_ERROR_UNSAFE_CONTENT_TYPE ||
              NS_ERROR_GET_MODULE(aStatus) == NS_ERROR_MODULE_SECURITY) {
       DisplayLoadError(aStatus, url, nsnull, channel);
     }
diff --git a/docshell/resources/content/netError.xhtml b/docshell/resources/content/netError.xhtml
index 3584d59..ccee9cd 100644
--- a/docshell/resources/content/netError.xhtml
+++ b/docshell/resources/content/netError.xhtml
@@ -219,6 +219,7 @@
         <h1 id=""""et_proxyResolveFailure"""">&proxyResolveFailure.title;</h1>
         <h1 id=""""et_proxyConnectFailure"""">&proxyConnectFailure.title;</h1>
         <h1 id=""""et_contentEncodingError"""">&contentEncodingError.title;</h1>
+        <h1 id=""""et_unsafeContentType"""">&unsafeContentType.title;</h1>
         <h1 id=""""et_nssFailure2"""">&nssFailure2.title;</h1>
         <h1 id=""""et_nssBadCert"""">&nssBadCert.title;</h1>
         <h1 id=""""et_malwareBlocked"""">&malwareBlocked.title;</h1>
@@ -240,6 +241,7 @@
         <div id=""""ed_proxyResolveFailure"""">&proxyResolveFailure.longDesc;</div>
         <div id=""""ed_proxyConnectFailure"""">&proxyConnectFailure.longDesc;</div>
         <div id=""""ed_contentEncodingError"""">&contentEncodingError.longDesc;</div>
+        <div id=""""ed_unsafeContentType"""">&unsafeContentType.longDesc;</div>
         <div id=""""ed_nssFailure2"""">&nssFailure2.longDesc;</div>
         <div id=""""ed_nssBadCert"""">&nssBadCert.longDesc2;</div>
         <div id=""""ed_malwareBlocked"""">&malwareBlocked.longDesc;</div>
diff --git a/docshell/test/Makefile.in b/docshell/test/Makefile.in
index e58d2da..745bc73 100644
--- a/docshell/test/Makefile.in
+++ b/docshell/test/Makefile.in
@@ -54,6 +54,8 @@ include $(topsrcdir)/config/rules.mk
 
 _TEST_FILES = \
 		test_bug344861.html \
+		test_bug369814.html \
+		bug369814.zip       \
 		test_bug384014.html \
 		test_bug387979.html \
 		test_bug404548.html \
diff --git a/docshell/test/bug369814.zip b/docshell/test/bug369814.zip
new file mode 100644
index 0000000..86b9c8c
Binary files /dev/null and b/docshell/test/bug369814.zip differ
diff --git a/docshell/test/test_bug369814.html b/docshell/test/test_bug369814.html
new file mode 100644
index 0000000..85a7b3b
--- /dev/null
+++ b/docshell/test/test_bug369814.html
@@ -0,0 +1,204 @@
+<!DOCTYPE HTML>
+<html>
+<!--
+https://bugzilla.mozilla.org/show_bug.cgi?id=369814
+-->
+<head>
+  <title>Test for Bug 369814</title>
+  <script type=""""text/javascript"""" src=""""/MochiKit/MochiKit.js""""></script>
+  <script type=""""text/javascript"""" src=""""/tests/SimpleTest/SimpleTest.js""""></script>
+  <script type=""""text/javascript"""" src=""""/tests/SimpleTest/EventUtils.js""""></script>
+  <link rel=""""stylesheet"""" type=""""text/css"""" href=""""/tests/SimpleTest/test.css"""" />
+</head>
+<body>
+<a target=""""_blank"""" href=""""https://bugzilla.mozilla.org/show_bug.cgi?id=384014"""">Mozilla Bug 369814</a>
+
+<p>
+
+<iframe id=""""testFrame""""></iframe>
+
+<pre id=""""test"""">
+<script class=""""testbody"""" type=""""text/javascript"""">
+
+/** Tests for Bug 369814 **/
+
+SimpleTest.waitForExplicitFinish();
+
+// Because child scripts won't be able to run to tell us they're done,
+// we need to just wait for them.  Wait this amount of time before checking
+// the results.
+const gLoadTimeout = 3000;
+
+var Ci = Components.interfaces;
+
+var gCurrentTest;
+var gTargetWindow;
+var gNumPokes;
+var gPrefValue;
+
+var gTestFrame = document.getElementById('testFrame');
+
+/**
+ * Called by documents loaded from jar files to indicate that they can access
+ * this document.
+ */
+function poke(description) {
+  ok(false, gCurrentTest['name'] + """": got unexpected poke: """" + description);
+  gNumPokes++;
+}
+
+function loadEvent(window, callback)
+{
+  var fn = function() {
+    window.removeEventListener(""""load"""", fn, false);
+    callback();
+  };
+  window.addEventListener(""""load"""", fn, false);
+}
+
+function loadTestTarget(callback)
+{
+  gTargetWindow = window.open(""""http://localhost:8888"""", """"bug369814target"""");
+  loadEvent(gTargetWindow, callback);
+}
+
+function closeTestTarget()
+{
+  gTargetWindow.close();
+  gTargetWindow = null;
+}
+
+function loadErrorTest(test)
+{
+  gTestFrame.src = test['url'];
+
+  // Give the frame a chance to fail at loading
+  setTimeout(function() {
+      // XXX: There doesn't seem to be a reliable check for """"got an error,""""
+      // but reaching in to an error document will throw an exception
+      var errorPage;
+      try {
+        var item = gTestFrame.contentDocument.getElementById(gCurrentTest['data-iframe']);
+        errorPage = false;
+      } catch (e) {
+        errorPage = true;
+      }
+      ok(errorPage, gCurrentTest[""""name""""] + """": should block a suspicious JAR load."""");
+
+      finishTest();
+    }, gLoadTimeout);
+}
+
+function iframeTest(test) {
+  gTestFrame.src = test['url'];
+  loadEvent(gTestFrame, function() {
+      finishTest();
+    });
+}
+
+function refreshTest(test) {
+  gTestFrame.src = test['url'];
+  loadEvent(gTestFrame, function() {
+      // Wait for the frame to try and refresh
+      // XXX: a """"blocked redirect"""" signal would be needed to get rid of
+      // this timeout.
+      setTimeout(function() {
+          finishTest();
+        }, gLoadTimeout);
+    });
+}
+
+function anchorTest(test) {
+  loadTestTarget(function() {
+      gTestFrame.src = test['url'];
+      loadEvent(gTestFrame, function() {
+        sendMouseEvent({type:'click'}, 'target', gTestFrame.contentWindow);
+        sendMouseEvent({type:'click'}, 'notarget', gTestFrame.contentWindow);
+
+        // Give the clicks a chance to load
+        setTimeout(function() {
+            closeTestTarget();
+            finishTest();
+          }, gLoadTimeout);
+        });
+    });
+}
+
+var gTests = [
+  { """"name"""" : """"iframes.html loaded from non-jar type, pref disabled"""",
+    """"url"""" : """"jar:http://localhost:8888/tests/docshell/test/bug369814.zip!/iframes.html"""",
+    """"pref"""" : false,
+    """"pokes"""" : { },
+    """"func"""" : loadErrorTest,
+  },
+  { """"name"""" : """"refresh.html loaded from non-jar type, pref enabled"""",
+    """"url"""" : """"jar:http://localhost:8888/tests/docshell/test/bug369814.zip!/refresh.html"""",
+    """"pref"""" : true,
+    """"pokes"""" : { },
+    """"func"""" : refreshTest,
+  },
+  { """"name"""" : """"iframes.html loaded from non-jar type, pref enabled"""",
+    """"url"""" : """"jar:http://localhost:8888/tests/docshell/test/bug369814.zip!/iframes.html"""",
+    """"pref"""" : true,
+    """"pokes"""" : { },
+    """"func"""" : iframeTest,
+  },
+  { """"name"""" : """"anchors.html loaded from non-jar type, pref enabled"""",
+    """"url"""" : """"jar:http://localhost:8888/tests/docshell/test/bug369814.zip!/anchors.html"""",
+    """"pref"""" : true,
+    """"pokes"""" : { },
+    """"func"""" : anchorTest,
+  },
+];
+
+var gNextTest = 0;
+
+function runNextTest()
+{
+  netscape.security.PrivilegeManager.enablePrivilege(""""UniversalXPConnect"""");
+  var prefs = Components.classes[""""@mozilla.org/preferences-service;1""""].
+    getService(Components.interfaces.nsIPrefBranch);
+
+  if (gNextTest < gTests.length) {
+    gCurrentTest = gTests[gNextTest++];
+    gNumPokes = 0;
+
+    prefs.setBoolPref(""""network.jar.open-unsafe-types"""", gCurrentTest['pref']);
+
+    gCurrentTest['func'](gCurrentTest);
+  } else {
+    // Put back the pref value we had at test start
+    prefs.setBoolPref(""""network.jar.open-unsafe-types"""", gPrefValue);
+    SimpleTest.finish();
+  }
+}
+
+function finishTest()
+{
+    netscape.security.PrivilegeManager.enablePrivilege(""""UniversalXPConnect"""");
+    var prefs = Components.classes[""""@mozilla.org/preferences-service;1""""].
+      getService(Components.interfaces.nsIPrefBranch);
+    prefs.setBoolPref(""""network.jar.open-unsafe-types"""", false);
+
+  if (gNumPokes == 0) {
+    ok(true, gCurrentTest[""""name""""] + """": no unexpected pokes"""");
+  }
+
+  runNextTest();
+}
+
+function startTests()
+{
+  netscape.security.PrivilegeManager.enablePrivilege(""""UniversalXPConnect"""");
+  var prefs = Components.classes[""""@mozilla.org/preferences-service;1""""].
+    getService(Components.interfaces.nsIPrefBranch);
+  gPrefValue = prefs.getBoolPref(""""network.jar.open-unsafe-types"""");
+}
+
+addLoadEvent(runNextTest);
+
+</script>
+</pre>
+</body>
+</html>
+
diff --git a/dom/locales/en-US/chrome/appstrings.properties b/dom/locales/en-US/chrome/appstrings.properties
index 2efa1b8..21b2f05 100644
--- a/dom/locales/en-US/chrome/appstrings.properties
+++ b/dom/locales/en-US/chrome/appstrings.properties
@@ -53,6 +53,7 @@ deniedPortAccess=Access to the port number given has been disabled for security
 proxyResolveFailure=The proxy server you have configured could not be found. Please check your proxy settings and try again.
 proxyConnectFailure=The connection was refused when attempting to contact the proxy server you have configured. Please check your proxy settings and try again.
 contentEncodingError=The page you are trying to view cannot be shown because it uses an invalid or unsupported form of compression. Please contact the website owners to inform them of this problem.
+unsafeContentType=The page you are trying to view cannot be shown because it is contained in a file type that may not be safe to open. Please contact the website owners to inform them of this problem.
 externalProtocolTitle=External Protocol Request
 externalProtocolPrompt=An external application must be launched to handle %1$S: links.\n\n\nRequested link:\n\n%2$S\n\nApplication: %3$S\n\n\nIf you were not expecting this request it may be an attempt to exploit a weakness in that other program. Cancel this request unless you are sure it is not malicious.\n
 #LOCALIZATION NOTE (externalProtocolUnknown): The following string is shown if the application name can't be determined
diff --git a/dom/locales/en-US/chrome/netError.dtd b/dom/locales/en-US/chrome/netError.dtd
index 43e27ea..716be04 100644
--- a/dom/locales/en-US/chrome/netError.dtd
+++ b/dom/locales/en-US/chrome/netError.dtd
@@ -30,6 +30,13 @@
 <!ENTITY contentEncodingError.title """"Content Encoding Error"""">
 <!ENTITY contentEncodingError.longDesc """"<p>The page you are trying to view cannot be shown because it uses an invalid or unsupported form of compression.</p><ul><li>Please contact the website owners to inform them of this problem.</li></ul>"""">
 
+<!ENTITY unsafeContentType.title """"Unsafe File Type"""">
+<!ENTITY unsafeContentType.longDesc """"
+<ul>
+  <li>Please contact the website owners to inform them of this problem.</li>
+</ul>
+"""">
+
 <!ENTITY netReset.title """"Connection Interrupted"""">
 <!ENTITY netReset.longDesc """"<p>The network link was interrupted while negotiating a connection. Please try again.</p>"""">
 
diff --git a/modules/libjar/nsIJARChannel.idl b/modules/libjar/nsIJARChannel.idl
index a234dab..ee4063b 100644
--- a/modules/libjar/nsIJARChannel.idl
+++ b/modules/libjar/nsIJARChannel.idl
@@ -37,7 +37,14 @@
 
 #include """"nsIChannel.idl""""
 
-[scriptable, uuid(c7e410d1-85f2-11d3-9f63-006008a6efe9)]
+[scriptable, uuid(6e6cc56d-51eb-4299-a795-dcfd1229ab3d)]
 interface nsIJARChannel : nsIChannel 
 {
+    /**
+     * Returns TRUE if the JAR file is not safe (if the content type reported
+     * by the server for a remote JAR is not of an expected type).  Scripting,
+     * redirects, and plugins should be disabled when loading from this
+     * channel.
+     */
+    readonly attribute boolean isUnsafe;
 };
diff --git a/modules/libjar/nsJARChannel.cpp b/modules/libjar/nsJARChannel.cpp
index a4e1460..d90fb12 100644
--- a/modules/libjar/nsJARChannel.cpp
+++ b/modules/libjar/nsJARChannel.cpp
@@ -44,6 +44,8 @@
 #include """"nsNetUtil.h""""
 #include """"nsInt64.h""""
 #include """"nsEscape.h""""
+#include """"nsIPrefService.h""""
+#include """"nsIPrefBranch.h""""
 
 #include """"nsIScriptSecurityManager.h""""
 #include """"nsIPrincipal.h""""
@@ -222,6 +224,7 @@ nsJARChannel::nsJARChannel()
     , mLoadFlags(LOAD_NORMAL)
     , mStatus(NS_OK)
     , mIsPending(PR_FALSE)
+    , mIsUnsafe(PR_TRUE)
     , mJarInput(nsnull)
 {
 #if defined(PR_LOGGING)
@@ -323,6 +326,8 @@ nsJARChannel::EnsureJarInput(PRBool blocking)
     }
 
     if (mJarFile) {
+        mIsUnsafe = PR_FALSE;
+
         // NOTE: we do not need to deal with mSecurityInfo here,
         // because we're loading from a local file
         rv = CreateJarInput(gJarHandler->JarCache());
@@ -337,7 +342,7 @@ nsJARChannel::EnsureJarInput(PRBool blocking)
         if (NS_SUCCEEDED(rv))
             rv = NS_OpenURI(mDownloader, nsnull, mJarBaseURI, nsnull,
                             mLoadGroup, mCallbacks,
-                            mLoadFlags & ~LOAD_DOCUMENT_URI);
+                            mLoadFlags & ~(LOAD_DOCUMENT_URI | LOAD_CALL_CONTENT_SNIFFERS));
     }
     return rv;
 
@@ -644,6 +649,9 @@ nsJARChannel::Open(nsIInputStream **stream)
     NS_ENSURE_TRUE(!mJarInput, NS_ERROR_IN_PROGRESS);
     NS_ENSURE_TRUE(!mIsPending, NS_ERROR_IN_PROGRESS);
 
+    mJarFile = nsnull;
+    mIsUnsafe = PR_TRUE;
+
     nsresult rv = EnsureJarInput(PR_TRUE);
     if (NS_FAILED(rv)) return rv;
 
@@ -666,6 +674,9 @@ nsJARChannel::AsyncOpen(nsIStreamListener *listener, nsISupports *ctx)
     NS_ENSURE_ARG_POINTER(listener);
     NS_ENSURE_TRUE(!mIsPending, NS_ERROR_IN_PROGRESS);
 
+    mJarFile = nsnull;
+    mIsUnsafe = PR_TRUE;
+
     // Initialize mProgressSink
     NS_QueryNotificationCallbacks(mCallbacks, mLoadGroup, mProgressSink);
 
@@ -691,6 +702,16 @@ nsJARChannel::AsyncOpen(nsIStreamListener *listener, nsISupports *ctx)
 }
 
 //-----------------------------------------------------------------------------
+// nsIJARChannel
+//-----------------------------------------------------------------------------
+NS_IMETHODIMP
+nsJARChannel::GetIsUnsafe(PRBool *isUnsafe)
+{
+    *isUnsafe = mIsUnsafe;
+    return NS_OK;
+}
+
+//-----------------------------------------------------------------------------
 // nsIDownloadObserver
 //-----------------------------------------------------------------------------
 
@@ -729,6 +750,47 @@ nsJARChannel::OnDownloadComplete(nsIDownloader *downloader,
             }
             status = rv;
         }
+
+        nsCOMPtr<nsIHttpChannel> httpChannel(do_QueryInterface(channel));
+        if (httpChannel) {
+            // We only want to run scripts if the server really intended to
+            // send us a JAR file.  Check the server-supplied content type for
+            // a JAR type.
+            nsCAutoString header;
+            httpChannel->GetResponseHeader(NS_LITERAL_CSTRING(""""Content-Type""""),
+                                           header);
+
+            nsCAutoString contentType;
+            nsCAutoString charset;
+            NS_ParseContentType(header, contentType, charset);
+
+            mIsUnsafe = !contentType.EqualsLiteral(""""application/java-archive"""") &&
+                        !contentType.EqualsLiteral(""""application/x-jar"""");
+        } else {
+            nsCOMPtr<nsIJARChannel> innerJARChannel(do_QueryInterface(channel));
+            if (innerJARChannel) {
+                PRBool unsafe;
+                innerJARChannel->GetIsUnsafe(&unsafe);
+                mIsUnsafe = unsafe;
+            }
+        }
+
+        // XXX: THIS IS TEMPORARY
+        //mIsUnsafe = PR_FALSE;
+    }
+
+    if (mIsUnsafe) {
+        PRBool allowUnpack = PR_FALSE;
+
+        nsCOMPtr<nsIPrefBranch> prefs =
+            do_GetService(NS_PREFSERVICE_CONTRACTID);
+        if (prefs) {
+            prefs->GetBoolPref(""""network.jar.open-unsafe-types"""", &allowUnpack);
+        }
+
+        if (!allowUnpack) {
+            status = NS_ERROR_UNSAFE_CONTENT_TYPE;
+        }
     }
 
     if (NS_SUCCEEDED(status)) {
@@ -745,6 +807,7 @@ nsJARChannel::OnDownloadComplete(nsIDownloader *downloader,
     }
 
     if (NS_FAILED(status)) {
+        mStatus = status;
         OnStartRequest(nsnull, nsnull);
         OnStopRequest(nsnull, nsnull, status);
     }
diff --git a/modules/libjar/nsJARChannel.h b/modules/libjar/nsJARChannel.h
index a015c5d..719b298 100644
--- a/modules/libjar/nsJARChannel.h
+++ b/modules/libjar/nsJARChannel.h
@@ -97,7 +97,8 @@ private:
     PRInt32                         mContentLength;
     PRUint32                        mLoadFlags;
     nsresult                        mStatus;
-    PRBool                          mIsPending;
+    PRPackedBool                    mIsPending;
+    PRPackedBool                    mIsUnsafe;
 
     nsJARInputThunk                *mJarInput;
     nsCOMPtr<nsIStreamListener>     mDownloader;
diff --git a/modules/libpref/src/init/all.js b/modules/libpref/src/init/all.js
index 1f4751b..9c51c53 100644
--- a/modules/libpref/src/init/all.js
+++ b/modules/libpref/src/init/all.js
@@ -613,6 +613,11 @@ pref(""""network.http.pipelining.maxrequests"""" , 4);
 
 // </http>
 
+// If false, remote JAR files that are served with a content type other than
+// application/java-archive or application/x-jar will not be opened
+// by the jar channel.
+pref(""""network.jar.open-unsafe-types"""", false);
+
 // This preference controls whether or not internationalized domain names (IDN)
 // are handled.  IDN requires a nsIIDNService implementation.
 pref(""""network.enableIDN"""", true);
diff --git a/netwerk/base/public/nsNetError.h b/netwerk/base/public/nsNetError.h
index 65b1534..f3f8bda 100644
--- a/netwerk/base/public/nsNetError.h
+++ b/netwerk/base/public/nsNetError.h
@@ -232,6 +232,13 @@
 #define NS_ERROR_REDIRECT_LOOP \
     NS_ERROR_GENERATE_FAILURE(NS_ERROR_MODULE_NETWORK, 31)
 
+/**
+ * The request failed because the content type returned by the server was
+ * not a type expected by the channel (for nested channels such as the JAR
+ * channel).
+ */
+#define NS_ERROR_UNSAFE_CONTENT_TYPE \
+    NS_ERROR_GENERATE_FAILURE(NS_ERROR_MODULE_NETWORK, 74)
 
 /******************************************************************************
  * FTP specific error codes:
diff --git a/testing/mochitest/tests/SimpleTest/EventUtils.js b/testing/mochitest/tests/SimpleTest/EventUtils.js
index 9852551..2a13d8d 100644
--- a/testing/mochitest/tests/SimpleTest/EventUtils.js
+++ b/testing/mochitest/tests/SimpleTest/EventUtils.js
@@ -15,20 +15,24 @@
  *
  * sendMouseEvent({type:'click'}, 'node');
  */
-function sendMouseEvent(aEvent, aTarget) {
+function sendMouseEvent(aEvent, aTarget, aWindow) {
   if (['click', 'mousedown', 'mouseup', 'mouseover', 'mouseout'].indexOf(aEvent.type) == -1) {
     throw new Error(""""sendMouseEvent doesn't know about event type '""""+aEvent.type+""""'"""");
   }
 
+  if (!aWindow) {
+    aWindow = window;
+  }
+
   // For events to trigger the UA's default actions they need to be """"trusted""""
   netscape.security.PrivilegeManager.enablePrivilege('UniversalBrowserWrite');
 
-  var event = document.createEvent('MouseEvent');
+  var event = aWindow.document.createEvent('MouseEvent');
 
   var typeArg          = aEvent.type;
   var canBubbleArg     = true;
   var cancelableArg    = true;
-  var viewArg          = window;
+  var viewArg          = aWindow;
   var detailArg        = aEvent.detail        || (aEvent.type == 'click'     ||
                                                   aEvent.type == 'mousedown' ||
                                                   aEvent.type == 'mouseup' ? 1 : 0);
@@ -48,7 +52,7 @@ function sendMouseEvent(aEvent, aTarget) {
                        ctrlKeyArg, altKeyArg, shiftKeyArg, metaKeyArg,
                        buttonArg, relatedTargetArg);
 
-  document.getElementById(aTarget).dispatchEvent(event);
+  aWindow.document.getElementById(aTarget).dispatchEvent(event);
 }
 
 /**"""
90b89b67e5175c23952572334e2f7b168d03af30,67667,395623,bzbarsky@mit.edu,"Implement hixie's first-line proposal: only inherit properties that inherit by default from ::first-line.  Inherit the reset properties from its style parent (which is the node that we'd inherit from if the ::first-line were not there). Bug 395623, r+sr=dbaron, a=beltzner
",1194455580,"""diff --git a/layout/base/nsFrameManager.cpp b/layout/base/nsFrameManager.cpp
index a6147b9..b6d1c63 100644
--- a/layout/base/nsFrameManager.cpp
+++ b/layout/base/nsFrameManager.cpp
@@ -853,7 +853,7 @@ VerifyStyleTree(nsPresContext* aPresContext, nsIFrame* aFrame,
     while (child) {
       if (!(child->GetStateBits() & NS_FRAME_OUT_OF_FLOW)
           || (child->GetStateBits() & NS_FRAME_IS_OVERFLOW_CONTAINER)) {
-        // only do frames that are in flow
+        // only do frames that don't have placeholders
         if (nsGkAtoms::placeholderFrame == child->GetType()) { 
           // placeholder: first recurse and verify the out of flow frame,
           // then verify the placeholder's context
@@ -905,6 +905,15 @@ nsFrameManager::DebugVerifyStyleTree(nsIFrame* aFrame)
 nsresult
 nsFrameManager::ReParentStyleContext(nsIFrame* aFrame)
 {
+  if (nsGkAtoms::placeholderFrame == aFrame->GetType()) {
+    // Also reparent the out-of-flow
+    nsIFrame* outOfFlow =
+      nsPlaceholderFrame::GetRealFrameForPlaceholder(aFrame);
+    NS_ASSERTION(outOfFlow, """"no out-of-flow frame"""");
+
+    ReParentStyleContext(outOfFlow);
+  }
+
   // DO NOT verify the style tree before reparenting.  The frame
   // tree has already been changed, so this check would just fail.
   nsStyleContext* oldContext = aFrame->GetStyleContext();
@@ -938,6 +947,16 @@ nsFrameManager::ReParentStyleContext(nsIFrame* aFrame)
                                                  newParentContext);
     if (newContext) {
       if (newContext != oldContext) {
+        // Make sure to call CalcStyleDifference so that the new context ends
+        // up resolving all the structs the old context resolved.
+        nsChangeHint styleChange = oldContext->CalcStyleDifference(newContext);
+        // The style change is always 0 because we have the same rulenode and
+        // CalcStyleDifference optimizes us away.  That's OK, though:
+        // reparenting should never trigger a frame reconstruct, and whenever
+        // it's happening we already plan to reflow and repaint the frames.
+        NS_ASSERTION(!(styleChange & nsChangeHint_ReconstructFrame),
+                     """"Our frame tree is likely to be bogus!"""");
+        
         PRInt32 listIndex = 0;
         nsIAtom* childList = nsnull;
         nsIFrame* child;
@@ -947,27 +966,22 @@ nsFrameManager::ReParentStyleContext(nsIFrame* aFrame)
         do {
           child = aFrame->GetFirstChild(childList);
           while (child) {
-            // only do frames that are in flow
-            if (!(child->GetStateBits() & NS_FRAME_OUT_OF_FLOW)
-                 || (child->GetStateBits() & NS_FRAME_IS_OVERFLOW_CONTAINER)) {
+            // only do frames that don't have placeholders
+            if ((!(child->GetStateBits() & NS_FRAME_OUT_OF_FLOW) ||
+                 (child->GetStateBits() & NS_FRAME_IS_OVERFLOW_CONTAINER)) &&
+                child != providerChild) {
+#ifdef DEBUG
               if (nsGkAtoms::placeholderFrame == child->GetType()) {
-                // get out of flow frame and recurse there
                 nsIFrame* outOfFlowFrame =
                   nsPlaceholderFrame::GetRealFrameForPlaceholder(child);
                 NS_ASSERTION(outOfFlowFrame, """"no out-of-flow frame"""");
 
                 NS_ASSERTION(outOfFlowFrame != providerChild,
                              """"Out of flow provider?"""");
-
-                ReParentStyleContext(outOfFlowFrame);
-
-                // reparent placeholder too
-                ReParentStyleContext(child);
-              }
-              else if (child != providerChild) {
-                // regular frame, not reparented yet
-                ReParentStyleContext(child);
               }
+#endif
+
+              ReParentStyleContext(child);
             }
 
             child = child->GetNextSibling();
@@ -1001,6 +1015,21 @@ nsFrameManager::ReParentStyleContext(nsIFrame* aFrame)
                                                               oldExtraContext,
                                                               newContext);
             if (newExtraContext) {
+              if (newExtraContext != oldExtraContext) {
+                // Make sure to call CalcStyleDifference so that the new
+                // context ends up resolving all the structs the old context
+                // resolved.
+                styleChange =
+                  oldExtraContext->CalcStyleDifference(newExtraContext);
+                // The style change is always 0 because we have the same
+                // rulenode and CalcStyleDifference optimizes us away.  That's
+                // OK, though: reparenting should never trigger a frame
+                // reconstruct, and whenever it's happening we already plan to
+                // reflow and repaint the frames.
+                NS_ASSERTION(!(styleChange & nsChangeHint_ReconstructFrame),
+                             """"Our frame tree is likely to be bogus!"""");
+              }
+              
               aFrame->SetAdditionalStyleContext(contextIndex, newExtraContext);
             }
           }
diff --git a/layout/reftests/first-line/basic-1.html b/layout/reftests/first-line/basic-1.html
new file mode 100644
index 0000000..e59148a
--- /dev/null
+++ b/layout/reftests/first-line/basic-1.html
@@ -0,0 +1,12 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <style>
+      body { color: red }
+      body::first-line { color: green; }
+    </style>
+  </head>
+  <body>
+    This should be green
+  </body>
+</html>
diff --git a/layout/reftests/first-line/basic-ref.html b/layout/reftests/first-line/basic-ref.html
new file mode 100644
index 0000000..fb93056
--- /dev/null
+++ b/layout/reftests/first-line/basic-ref.html
@@ -0,0 +1,11 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <style>
+      body { color: green }
+    </style>
+  </head>
+  <body>
+    This should be green
+  </body>
+</html>
diff --git a/layout/reftests/first-line/out-of-flow-1-ref.html b/layout/reftests/first-line/out-of-flow-1-ref.html
new file mode 100644
index 0000000..077268d
--- /dev/null
+++ b/layout/reftests/first-line/out-of-flow-1-ref.html
@@ -0,0 +1,12 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <style>
+      div { color: green }
+    </style>
+  </head>
+  <body>
+    <div><span style=""""float: left"""">This should be green</span></div>
+  </body>
+</html>
+
diff --git a/layout/reftests/first-line/out-of-flow-1a.html b/layout/reftests/first-line/out-of-flow-1a.html
new file mode 100644
index 0000000..ba6dc25
--- /dev/null
+++ b/layout/reftests/first-line/out-of-flow-1a.html
@@ -0,0 +1,13 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <style>
+      div { color: green }
+      div::first-line { color: red }
+    </style>
+  </head>
+  <body>
+    <div><span style=""""float: left"""">This should be green</span></div>
+  </body>
+</html>
+
diff --git a/layout/reftests/first-line/out-of-flow-1b.html b/layout/reftests/first-line/out-of-flow-1b.html
new file mode 100644
index 0000000..02b1a84
--- /dev/null
+++ b/layout/reftests/first-line/out-of-flow-1b.html
@@ -0,0 +1,12 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <style>
+      div { color: red }
+      div::first-line { color: green }
+    </style>
+  </head>
+  <body>
+    <div><span><span style=""""float: left"""">This should be green</span></span></div>
+  </body>
+</html>
diff --git a/layout/reftests/first-line/out-of-flow-1c.html b/layout/reftests/first-line/out-of-flow-1c.html
new file mode 100644
index 0000000..a49156e
--- /dev/null
+++ b/layout/reftests/first-line/out-of-flow-1c.html
@@ -0,0 +1,16 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <style>
+      div { color: green }
+      div::first-line { color: red }
+    </style>
+  </head>
+  <body onload=""""document.getElementById('test').className = ''"""">
+    <div>
+      <span class=""""some value"""" style=""""float: left"""">
+        This should be green
+      </span>
+    </div>
+  </body>
+</html>
diff --git a/layout/reftests/first-line/out-of-flow-1d.html b/layout/reftests/first-line/out-of-flow-1d.html
new file mode 100644
index 0000000..61228fdb2
--- /dev/null
+++ b/layout/reftests/first-line/out-of-flow-1d.html
@@ -0,0 +1,22 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <style>
+      div { color: green }
+      div::first-line { color: red }
+    </style>
+    <script>
+      function runTest() {
+        var s = document.createElement(""""span"""");
+        s.setAttribute(""""style"""", """"float: left"""");
+        s.appendChild(document.createTextNode(""""This should be green""""));
+        var i = document.getElementById(""""i"""");
+        i.parentNode.insertBefore(s, i);
+      }
+    </script>
+  </head>
+  <body onload=""""runTest()"""">
+    <div><span id=""""i""""></span></div>
+  </body>
+</html>
+
diff --git a/layout/reftests/first-line/reftest.list b/layout/reftests/first-line/reftest.list
new file mode 100644
index 0000000..c983eb3
--- /dev/null
+++ b/layout/reftests/first-line/reftest.list
@@ -0,0 +1,21 @@
+# basic functionality
+== basic-1.html basic-ref.html
+
+# handling of out-of-flows when ::first-line happens
+== out-of-flow-1a.html out-of-flow-1-ref.html
+== out-of-flow-1b.html out-of-flow-1-ref.html
+== out-of-flow-1c.html out-of-flow-1-ref.html
+fails == out-of-flow-1d.html out-of-flow-1-ref.html # bug 396645
+
+# stress-tests
+== stress-1.html about:blank # assertion test
+== stress-2.html stress-2-ref.html # assertion + rendering test
+== stress-3.html about:blank # assertion test
+== stress-4.html about:blank # assertion/crash test
+== stress-5.html about:blank # assertion/crash test
+== stress-6.html about:blank # assertion/crash test
+== stress-7.html about:blank # assertion/crash test
+== stress-8.html stress-8-ref.html # assertion/crash test
+== stress-9.html stress-9-ref.html # assertion/crash test
+== stress-10.html about:blank # crash test
+== stress-11.xhtml stress-11-ref.xhtml # crash test
diff --git a/layout/reftests/first-line/stress-1.html b/layout/reftests/first-line/stress-1.html
new file mode 100644
index 0000000..1add82e
--- /dev/null
+++ b/layout/reftests/first-line/stress-1.html
@@ -0,0 +1,41 @@
+<!DOCTYPE html>
+<html class=""""reftest-wait"""">
+<head>
+
+<style>
+  .fl:first-line { }
+  .inh { position: inherit; }
+  .abs { position: absolute; }
+  body { visibility: hidden; }
+</style>
+ 
+<script>
+
+function boom()
+{
+  x = document.getElementById(""""x"""");
+  y = document.getElementById(""""y"""");
+
+  x.setAttribute('class', """"fl abs"""");
+  y.setAttribute('class', """"inh"""");
+  setTimeout(boom2, 5);
+}
+
+function boom2()
+{
+  y.setAttribute('class', """"abs"""");
+  document.body.offsetWidth;
+  document.documentElement.className = """""""";
+}
+
+</script>
+
+</head>
+
+<body onload=""""setTimeout(boom, 5);"""">
+<div id=""""x"""">
+  <p id=""""y"""">foo</p>
+</div>
+</body>
+
+</html>
diff --git a/layout/reftests/first-line/stress-10.html b/layout/reftests/first-line/stress-10.html
new file mode 100644
index 0000000..656f8f8
--- /dev/null
+++ b/layout/reftests/first-line/stress-10.html
@@ -0,0 +1,5 @@
+<style>
+*::first-line { }
+*::before { content:""""before text"""";}
+</style>
+<object style=""""position: fixed;-moz-column-count: 100;""""><ol style=""""float: right;"""">
diff --git a/layout/reftests/first-line/stress-11-ref.xhtml b/layout/reftests/first-line/stress-11-ref.xhtml
new file mode 100644
index 0000000..6249792
--- /dev/null
+++ b/layout/reftests/first-line/stress-11-ref.xhtml
@@ -0,0 +1,9 @@
+<html xmlns=""""http://www.w3.org/1999/xhtml"""">
+<style>
+*::before { content:""""--""""; }
+</style>
+
+<caption></caption>
+<span></span>
+This should not crash Mozilla
+</html>
diff --git a/layout/reftests/first-line/stress-11.xhtml b/layout/reftests/first-line/stress-11.xhtml
new file mode 100644
index 0000000..261250a
--- /dev/null
+++ b/layout/reftests/first-line/stress-11.xhtml
@@ -0,0 +1,18 @@
+<html xmlns=""""http://www.w3.org/1999/xhtml"""">
+<style>
+*::first-line { }
+*::before { content:""""--""""; }
+</style>
+<script>
+function doe() {
+document.getElementsByTagName('caption')[0].removeAttribute('style');
+document.documentElement.offsetHeight;
+document.getElementsByTagName('span')[0].removeAttribute('style');
+}
+window.onload=doe;
+</script>
+
+<caption style=""""float: left;""""></caption>
+<span style=""""float: right;""""></span>
+This should not crash Mozilla
+</html>
diff --git a/layout/reftests/first-line/stress-2-ref.html b/layout/reftests/first-line/stress-2-ref.html
new file mode 100644
index 0000000..586010e
--- /dev/null
+++ b/layout/reftests/first-line/stress-2-ref.html
@@ -0,0 +1,10 @@
+<!DOCTYPE html>
+<html>
+<body>
+
+<div>
+  <b><span>Foo</span></b>
+</div>
+
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-2.html b/layout/reftests/first-line/stress-2.html
new file mode 100644
index 0000000..5002007
--- /dev/null
+++ b/layout/reftests/first-line/stress-2.html
@@ -0,0 +1,26 @@
+<!DOCTYPE html>
+<html class=""""reftest-wait"""">
+<head>
+
+<style>
+#fl:first-line { }
+</style>
+
+<script>
+function boom()
+{
+  document.getElementById(""""s"""").style.overflow = """"auto"""";
+  document.body.offsetWidth;
+  document.documentElement.className = """""""";  
+}
+</script>
+
+</head>
+<body onload=""""setTimeout(boom, 300);"""">
+
+<div id=""""fl"""">
+  <b><span id=""""s"""">Foo</span></b>
+</div>
+
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-3.html b/layout/reftests/first-line/stress-3.html
new file mode 100644
index 0000000..8e43ca68
--- /dev/null
+++ b/layout/reftests/first-line/stress-3.html
@@ -0,0 +1,35 @@
+<!DOCTYPE html>
+<html class=""""reftest-wait"""" id=""""fl"""" style=""""position: absolute"""">
+<head>
+
+<style>
+
+.flcounter:first-line { content: counter(egg); }
+
+#fl:first-line { }
+
+</style>
+
+<script>
+
+function boom()
+{
+  document.documentElement.appendChild(document.createTextNode(""""\n""""));
+  document.getElementById(""""div"""").style.counterReset = """""""";
+  setTimeout(boom2, 20);
+}
+
+function boom2()
+{
+  document.body.removeAttribute(""""class"""");
+  document.body.offsetWidth;
+  document.documentElement.className = """""""";  
+}
+
+</script>
+</head>
+
+<body style=""""position: inherit; float: left;"""" class=""""flcounter"""" onload=""""boom();"""">
+<div id=""""div"""" style=""""counter-reset: chicken;""""></div>
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-4.html b/layout/reftests/first-line/stress-4.html
new file mode 100644
index 0000000..9deabde
--- /dev/null
+++ b/layout/reftests/first-line/stress-4.html
@@ -0,0 +1,28 @@
+<!DOCTYPE html>
+<html class=""""reftest-wait"""">
+<head>
+<style>
+#a:first-child::first-line { }
+body { visibility: hidden; }
+</style>
+<script>
+  function runTest() {
+    document.getElementById(""""test"""").removeAttribute('style');
+    document.body.offsetWidth;
+    document.documentElement.className = """""""";  
+  }
+</script>
+</head><body>
+
+<div style=""""position:absolute;"""">
+  <span id=""""a"""" style=""""position:fixed;"""">
+    <span>
+      <span style=""""display:table;position:absolute;"""">
+      </span>
+    </span>
+    Loading this should not crash Mozilla
+  </span>
+</div>
+
+
+</body></html>
diff --git a/layout/reftests/first-line/stress-5.html b/layout/reftests/first-line/stress-5.html
new file mode 100644
index 0000000..2b6b285
--- /dev/null
+++ b/layout/reftests/first-line/stress-5.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html>
+<html>
+<head>
+<style>
+#b::first-letter { }
+#c::first-line { }
+</style>
+</head>
+<body style=""""visibility: hidden"""">
+This page should not crash Mozilla
+<div id=""""c"""">
+  <table>
+    <div id=""""b"""" style=""""display:table-header-group;"""">
+      <q>
+        text
+        <div style=""""position:fixed;"""">
+          <q>y</q>
+        </div>
+      </q>  
+    </div>
+    <span style=""""display: table;""""></span>
+</div>
+
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-6.html b/layout/reftests/first-line/stress-6.html
new file mode 100644
index 0000000..50db02d
--- /dev/null
+++ b/layout/reftests/first-line/stress-6.html
@@ -0,0 +1,47 @@
+<!DOCTYPE html>
+<html class=""""reftest-wait""""><head>
+<style>
+#b td::first-line { font-size:110%;}
+nobr::first-line { font-size:110%;}
+
+#b td::after { content:""""anonymous text""""; }
+nobr::after{ content:""""anonymous text""""; }
+
+#b::before { content:""""before text"""";}
+#b td::before { content:""""before text"""";}
+
+body { visibility: hidden; }
+</style>
+</head>
+<body>
+<table style=""""display: table-row;""""></table><nobr style=""""display: list-item; -moz-column-count: 2;"""">
+<table id=""""b"""" style=""""display: inline;""""></table>
+</nobr>
+<br>
+This page should not crash Mozilla
+<script>
+function doe(){
+   var td = document.createElement('td');;
+   td.setAttribute('height', '50%');
+   var tr = document.createElement('tr');;
+   tr.setAttribute('height', '50%');
+   tr.appendChild(td);
+   document.getElementsByTagName('table')[1].appendChild(tr);
+   document.body.offsetHeight;
+
+   var td = document.createElement('td');;
+   td.setAttribute('height', '50%');
+   document.getElementsByTagName('tr')[0].appendChild(td); 
+   document.body.offsetHeight;
+
+   var td = document.createElement('td');;
+   td.setAttribute('height', '50%');
+   document.getElementsByTagName('tr')[0].appendChild(td);
+
+   document.body.offsetWidth;
+   document.documentElement.className = """""""";  
+} 
+setTimeout(doe, 60);
+</script>
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-7.html b/layout/reftests/first-line/stress-7.html
new file mode 100644
index 0000000..81ef983
--- /dev/null
+++ b/layout/reftests/first-line/stress-7.html
@@ -0,0 +1,17 @@
+<!DOCTYPE html>
+<html><head>
+<style>
+body > span::first-line { }
+span::before { content:""""before text""""; border:3px solid black;}
+</style>
+</head>
+<body>
+
+<span style="""" float: left; -moz-column-count: 2;"""">
+  <span style=""""float: right;"""">
+    <span style="""" float: right;-moz-column-count: 2;""""></span>
+  </span>
+</span>
+
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-8-ref.html b/layout/reftests/first-line/stress-8-ref.html
new file mode 100644
index 0000000..30e9caa
--- /dev/null
+++ b/layout/reftests/first-line/stress-8-ref.html
@@ -0,0 +1,15 @@
+<!DOCTYPE html>
+<html>
+<body>
+<div>
+a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a
+b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b
+a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a
+b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b
+a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a
+b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b
+a b a b a b a b a b
+
+</div>
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-8.html b/layout/reftests/first-line/stress-8.html
new file mode 100644
index 0000000..120f2d0
--- /dev/null
+++ b/layout/reftests/first-line/stress-8.html
@@ -0,0 +1,18 @@
+<!DOCTYPE html>
+<html>
+<head><style>
+ div:first-line {}
+</style></head>
+<body>
+<div>
+a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a
+b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b
+a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a
+b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b
+a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a
+b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b
+a b a b a b a b a b
+
+</div>
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-9-ref.html b/layout/reftests/first-line/stress-9-ref.html
new file mode 100644
index 0000000..2096313
--- /dev/null
+++ b/layout/reftests/first-line/stress-9-ref.html
@@ -0,0 +1,14 @@
+<!DOCTYPE html>
+<html><head>
+<style>
+*::after { content:""""anonymous text""""; }
+*::before { content:""""before text""""; }
+</style>
+</head>
+<body>
+
+<ol style=""""overflow: hidden;  float: right; -moz-column-count: 3;"""">
+<span style=""""overflow: auto;  float: left;""""></span>
+</ol>
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-9.html b/layout/reftests/first-line/stress-9.html
new file mode 100644
index 0000000..138593b
--- /dev/null
+++ b/layout/reftests/first-line/stress-9.html
@@ -0,0 +1,15 @@
+<!DOCTYPE html>
+<html><head>
+<style>
+*::first-line { }
+*::after { content:""""anonymous text""""; }
+*::before { content:""""before text""""; }
+</style>
+</head>
+<body>
+
+<ol style=""""overflow: hidden;  float: right; -moz-column-count: 3;"""">
+<span style=""""overflow: auto;  float: left;""""></span>
+</ol>
+</body>
+</html>
diff --git a/layout/reftests/reftest.list b/layout/reftests/reftest.list
index 8b4e596..41caba0 100644
--- a/layout/reftests/reftest.list
+++ b/layout/reftests/reftest.list
@@ -39,6 +39,9 @@ include counters/reftest.list
 # first-letter/
 include first-letter/reftest.list
 
+# first-line/
+include first-line/reftest.list
+
 # svg/
 include svg/reftest.list
 
diff --git a/layout/style/nsRuleNode.cpp b/layout/style/nsRuleNode.cpp
index 9cf4f783..75de635 100644
--- a/layout/style/nsRuleNode.cpp
+++ b/layout/style/nsRuleNode.cpp
@@ -1797,6 +1797,11 @@ nsRuleNode::AdjustLogicalBoxProp(nsStyleContext* aContext,
                """"should not have bothered calling Compute*Data"""");              \
                                                                               \
   nsStyleContext* parentContext = aContext->GetParent();                      \
+  if (parentContext &&                                                        \
+      parentContext->GetPseudoType() == nsCSSPseudoElements::firstLine) {     \
+    /* Reset structs don't inherit from first-line */                         \
+    parentContext = parentContext->GetParent();                               \
+  }                                                                           \
                                                                               \
   const nsRuleData##rdtype_& rdata_ =                                         \
     static_cast<const nsRuleData##rdtype_&>(aData);                           \"""
bc08a79ea211f649c64f7fa3b79fd62e90825843,68218,397427,bzbarsky@mit.edu,"Landing files that somehow got missed.  Bug 397427.
",1193177468,"""diff --git a/layout/style/test/redirect-1.css b/layout/style/test/redirect-1.css
new file mode 100644
index 0000000..e69de29
diff --git a/layout/style/test/redirect-2.css b/layout/style/test/redirect-2.css
new file mode 100644
index 0000000..e69de29
diff --git a/layout/style/test/redirect-3.css b/layout/style/test/redirect-3.css
new file mode 100644
index 0000000..e69de29"""
5c0c2e0d4a73d2d6ec461c15d41b0c77841c218c,68219,397427,bzbarsky@mit.edu,"Make the ""href"" property of stylesheets reflect the original URI that was reflected to load the sheet.  Bug 397427, r=dbaron,biesi, sr=dbaron, a=dsicore
",1193176601,"""diff --git a/caps/src/nsScriptSecurityManager.cpp b/caps/src/nsScriptSecurityManager.cpp
index 7714173..11effe6 100644
--- a/caps/src/nsScriptSecurityManager.cpp
+++ b/caps/src/nsScriptSecurityManager.cpp
@@ -446,13 +446,8 @@ nsScriptSecurityManager::GetChannelPrincipal(nsIChannel* aChannel,
     // OK, get the principal from the URI.  Make sure this does the same thing
     // as nsDocument::Reset and nsXULDocument::StartDocumentLoad.
     nsCOMPtr<nsIURI> uri;
-    nsLoadFlags loadFlags = 0;
-    nsresult rv = aChannel->GetLoadFlags(&loadFlags);
-    if (NS_SUCCEEDED(rv) && (loadFlags & nsIChannel::LOAD_REPLACE)) {
-      aChannel->GetURI(getter_AddRefs(uri));
-    } else {
-      aChannel->GetOriginalURI(getter_AddRefs(uri));
-    }
+    nsresult rv = NS_GetFinalChannelURI(aChannel, getter_AddRefs(uri));
+    NS_ENSURE_SUCCESS(rv, rv);
 
     return GetCodebasePrincipal(uri, aPrincipal);
 }
diff --git a/content/base/src/nsDocument.cpp b/content/base/src/nsDocument.cpp
index 300f44f..4567ccb 100644
--- a/content/base/src/nsDocument.cpp
+++ b/content/base/src/nsDocument.cpp
@@ -1161,13 +1161,7 @@ nsDocument::Reset(nsIChannel* aChannel, nsILoadGroup* aLoadGroup)
     // Note: this code is duplicated in nsXULDocument::StartDocumentLoad and
     // nsScriptSecurityManager::GetChannelPrincipal.    
     // Note: this should match nsDocShell::OnLoadingSite
-    nsLoadFlags loadFlags = 0;
-    nsresult rv = aChannel->GetLoadFlags(&loadFlags);
-    if (NS_SUCCEEDED(rv) && (loadFlags & nsIChannel::LOAD_REPLACE)) {
-      aChannel->GetURI(getter_AddRefs(uri));
-    } else {
-      aChannel->GetOriginalURI(getter_AddRefs(uri));
-    }
+    NS_GetFinalChannelURI(aChannel, getter_AddRefs(uri));
 
     nsIScriptSecurityManager *securityManager =
       nsContentUtils::GetSecurityManager();
diff --git a/content/xul/document/src/nsXULDocument.cpp b/content/xul/document/src/nsXULDocument.cpp
index 06eed00..c8c0548 100644
--- a/content/xul/document/src/nsXULDocument.cpp
+++ b/content/xul/document/src/nsXULDocument.cpp
@@ -424,18 +424,8 @@ nsXULDocument::StartDocumentLoad(const char* aCommand, nsIChannel* aChannel,
     mChannel = aChannel;
 
     // Get the URI.  Note that this should match nsDocShell::OnLoadingSite
-    // XXXbz this code is repeated from nsDocument::Reset and
-    // nsScriptSecurityManager::GetChannelPrincipal; we really need to refactor
-    // this part better.
-    nsLoadFlags loadFlags = 0;
-    nsresult rv = aChannel->GetLoadFlags(&loadFlags);
-    if (NS_SUCCEEDED(rv)) {
-        if (loadFlags & nsIChannel::LOAD_REPLACE) {
-            rv = aChannel->GetURI(getter_AddRefs(mDocumentURI));
-        } else {
-            rv = aChannel->GetOriginalURI(getter_AddRefs(mDocumentURI));
-        }
-    }
+    nsresult rv =
+        NS_GetFinalChannelURI(aChannel, getter_AddRefs(mDocumentURI));
     NS_ENSURE_SUCCESS(rv, rv);
     
     rv = ResetStylesheetsToURI(mDocumentURI);
diff --git a/docshell/base/nsDocShell.cpp b/docshell/base/nsDocShell.cpp
index 8c07f26..9e0c5e4 100644
--- a/docshell/base/nsDocShell.cpp
+++ b/docshell/base/nsDocShell.cpp
@@ -7760,12 +7760,7 @@ nsDocShell::OnLoadingSite(nsIChannel * aChannel, PRBool aFireOnLocationChange,
     // else use the original url
     //
     // Note that this should match what documents do (see nsDocument::Reset).
-    nsLoadFlags loadFlags = 0;
-    aChannel->GetLoadFlags(&loadFlags);
-    if (loadFlags & nsIChannel::LOAD_REPLACE)
-        aChannel->GetURI(getter_AddRefs(uri));
-    else
-        aChannel->GetOriginalURI(getter_AddRefs(uri));
+    NS_GetFinalChannelURI(aChannel, getter_AddRefs(uri));
     NS_ENSURE_TRUE(uri, PR_FALSE);
 
     return OnNewURI(uri, aChannel, mLoadType, aFireOnLocationChange,
diff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp
index e4e5c67..7f2470f 100644
--- a/layout/base/nsPresShell.cpp
+++ b/layout/base/nsPresShell.cpp
@@ -1849,7 +1849,7 @@ nsresult PresShell::CreatePreferenceStyleSheet(void)
     result = NS_NewURI(getter_AddRefs(uri), """"about:PreferenceStyleSheet"""", nsnull);
     if (NS_SUCCEEDED(result)) {
       NS_ASSERTION(uri, """"null but no error"""");
-      result = mPrefStyleSheet->SetURIs(uri, uri);
+      result = mPrefStyleSheet->SetURIs(uri, nsnull, uri);
       if (NS_SUCCEEDED(result)) {
         mPrefStyleSheet->SetComplete();
         nsCOMPtr<nsIDOMCSSStyleSheet> sheet(do_QueryInterface(mPrefStyleSheet));
diff --git a/layout/mathml/base/src/nsMathMLFrame.cpp b/layout/mathml/base/src/nsMathMLFrame.cpp
index 9611a96..6c6516c 100644
--- a/layout/mathml/base/src/nsMathMLFrame.cpp
+++ b/layout/mathml/base/src/nsMathMLFrame.cpp
@@ -594,7 +594,7 @@ GetMathMLAttributeStyleSheet(nsPresContext* aPresContext,
   nsCOMPtr<nsICSSStyleSheet> cssSheet(do_CreateInstance(kCSSStyleSheetCID));
   if (!cssSheet)
     return;
-  cssSheet->SetURIs(uri, uri);
+  cssSheet->SetURIs(uri, nsnull, uri);
   cssSheet->SetTitle(NS_ConvertASCIItoUTF16(kTitle));
   // all done, no further activity from the net involved, so we better do this
   cssSheet->SetComplete();
diff --git a/layout/style/nsCSSLoader.cpp b/layout/style/nsCSSLoader.cpp
index 55d0af6..fb549ba 100644
--- a/layout/style/nsCSSLoader.cpp
+++ b/layout/style/nsCSSLoader.cpp
@@ -777,19 +777,18 @@ SheetLoadData::OnStreamComplete(nsIUnicharStreamLoader* aLoader,
     return NS_OK;
   }
   
-  nsCOMPtr<nsIURI> channelURI;
+  nsCOMPtr<nsIURI> originalURI;
+  channel->GetOriginalURI(getter_AddRefs(originalURI));
+
   // If the channel's original URI is """"chrome:"""", we want that, since
   // the observer code in nsXULPrototypeCache depends on chrome stylesheets
   // having a chrome URI.  (Whether or not chrome stylesheets come through
   // this codepath seems nondeterministic.)
   // Otherwise we want the potentially-HTTP-redirected URI.
-  channel->GetOriginalURI(getter_AddRefs(channelURI));
-  PRBool isChrome;
-  if (NS_FAILED(channelURI->SchemeIs(""""chrome"""", &isChrome)) || !isChrome) {
-    channel->GetURI(getter_AddRefs(channelURI));
-  }
+  nsCOMPtr<nsIURI> channelURI;
+  NS_GetFinalChannelURI(channel, getter_AddRefs(channelURI));
 
-  if (!channelURI) {
+  if (!channelURI || !originalURI) {
     NS_ERROR(""""Someone just violated the nsIRequest contract"""");
     LOG_WARN((""""  Channel without a URI.  Bad!""""));
     mLoader->SheetComplete(this, NS_ERROR_UNEXPECTED);
@@ -875,9 +874,9 @@ SheetLoadData::OnStreamComplete(nsIUnicharStreamLoader* aLoader,
     return NS_OK;
   }    
 
-  // Enough to set the URI on mSheet, since any sibling datas we have share
+  // Enough to set the URIs on mSheet, since any sibling datas we have share
   // the same mInner as mSheet and will thus get the same URI.
-  mSheet->SetURIs(channelURI, channelURI);
+  mSheet->SetURIs(channelURI, originalURI, channelURI);
   
   PRBool completed;
   return mLoader->ParseSheet(aDataStream, this, completed);
@@ -1082,19 +1081,25 @@ CSSLoaderImpl::CreateSheet(nsIURI* aURI,
 
   if (!*aSheet) {
     aSheetState = eSheetNeedsParser;
-    nsIURI *sheetURI = aURI;
-    nsCOMPtr<nsIURI> baseURI = aURI;
+    nsIURI *sheetURI;
+    nsCOMPtr<nsIURI> baseURI;
+    nsIURI* originalURI;
     if (!aURI) {
       // Inline style.  Use the document's base URL so that @import in
       // the inline sheet picks up the right base.
       NS_ASSERTION(aLinkingContent, """"Inline stylesheet without linking content?"""");
       baseURI = aLinkingContent->GetBaseURI();
       sheetURI = aLinkingContent->GetDocument()->GetDocumentURI();
+      originalURI = nsnull;
+    } else {
+      baseURI = aURI;
+      sheetURI = aURI;
+      originalURI = aURI;
     }
 
     rv = NS_NewCSSStyleSheet(aSheet);
     NS_ENSURE_SUCCESS(rv, rv);
-    (*aSheet)->SetURIs(sheetURI, baseURI);
+    (*aSheet)->SetURIs(sheetURI, originalURI, baseURI);
   }
 
   NS_ASSERTION(*aSheet, """"We should have a sheet by now!"""");
diff --git a/layout/style/nsCSSParser.cpp b/layout/style/nsCSSParser.cpp
index 6afc9eb..a844d74 100644
--- a/layout/style/nsCSSParser.cpp
+++ b/layout/style/nsCSSParser.cpp
@@ -707,7 +707,7 @@ CSSParserImpl::Parse(nsIUnicharInputStream* aInput,
     NS_NewCSSStyleSheet(getter_AddRefs(mSheet));
     NS_ENSURE_TRUE(mSheet, NS_ERROR_OUT_OF_MEMORY);
 
-    mSheet->SetURIs(aSheetURI, aBaseURI);
+    mSheet->SetURIs(aSheetURI, aSheetURI, aBaseURI);
     mSheet->SetPrincipal(aSheetPrincipal);
     mNameSpaceMap = nsnull;
   }
diff --git a/layout/style/nsCSSStyleSheet.cpp b/layout/style/nsCSSStyleSheet.cpp
index a2f458f..2dc36f8 100644
--- a/layout/style/nsCSSStyleSheet.cpp
+++ b/layout/style/nsCSSStyleSheet.cpp
@@ -771,7 +771,8 @@ nsCSSStyleSheet::DropRuleProcessor(nsCSSRuleProcessor* aProcessor)
 
 
 NS_IMETHODIMP
-nsCSSStyleSheet::SetURIs(nsIURI* aSheetURI, nsIURI* aBaseURI)
+nsCSSStyleSheet::SetURIs(nsIURI* aSheetURI, nsIURI* aOriginalSheetURI,
+                         nsIURI* aBaseURI)
 {
   NS_PRECONDITION(aSheetURI && aBaseURI, """"null ptr"""");
 
@@ -779,6 +780,7 @@ nsCSSStyleSheet::SetURIs(nsIURI* aSheetURI, nsIURI* aBaseURI)
                """"Can't call SetURL on sheets that are complete or have rules"""");
 
   mInner->mSheetURI = aSheetURI;
+  mInner->mOriginalSheetURI = aOriginalSheetURI;
   mInner->mBaseURI = aBaseURI;
   return NS_OK;
 }
@@ -1416,15 +1418,14 @@ nsCSSStyleSheet::GetParentStyleSheet(nsIDOMStyleSheet** aParentStyleSheet)
 NS_IMETHODIMP
 nsCSSStyleSheet::GetHref(nsAString& aHref)
 {
-  nsCAutoString str;
-
-  // XXXldb The DOM spec says that this should be null for inline style sheets.
-  if (mInner->mSheetURI) {
-    mInner->mSheetURI->GetSpec(str);
+  if (mInner->mOriginalSheetURI) {
+    nsCAutoString str;
+    mInner->mOriginalSheetURI->GetSpec(str);
+    CopyUTF8toUTF16(str, aHref);
+  } else {
+    SetDOMStringToNull(aHref);
   }
 
-  CopyUTF8toUTF16(str, aHref);
-
   return NS_OK;
 }
 
diff --git a/layout/style/nsCSSStyleSheet.h b/layout/style/nsCSSStyleSheet.h
index 9179cee..9b72f99 100644
--- a/layout/style/nsCSSStyleSheet.h
+++ b/layout/style/nsCSSStyleSheet.h
@@ -74,6 +74,7 @@ public:
 
   nsAutoVoidArray        mSheets;
   nsCOMPtr<nsIURI>       mSheetURI; // for error reports, etc.
+  nsCOMPtr<nsIURI>       mOriginalSheetURI;  // for GetHref.  Can be null.
   nsCOMPtr<nsIURI>       mBaseURI; // for resolving relative URIs
   nsCOMPtr<nsIPrincipal> mPrincipal;
   nsCOMArray<nsICSSRule> mOrderedRules;
@@ -136,7 +137,8 @@ public:
   NS_IMETHOD ReplaceRuleInGroup(nsICSSGroupRule* aGroup, nsICSSRule* aOld, nsICSSRule* aNew);
   NS_IMETHOD StyleSheetCount(PRInt32& aCount) const;
   NS_IMETHOD GetStyleSheetAt(PRInt32 aIndex, nsICSSStyleSheet*& aSheet) const;
-  NS_IMETHOD SetURIs(nsIURI* aSheetURI, nsIURI* aBaseURI);
+  NS_IMETHOD SetURIs(nsIURI* aSheetURI, nsIURI* aOriginalSheetURI,
+                     nsIURI* aBaseURI);
   virtual NS_HIDDEN_(void) SetPrincipal(nsIPrincipal* aPrincipal);
   virtual NS_HIDDEN_(nsIPrincipal*) Principal() const;
   NS_IMETHOD SetTitle(const nsAString& aTitle);
diff --git a/layout/style/nsICSSStyleSheet.h b/layout/style/nsICSSStyleSheet.h
index 77df3fa..c38b836 100644
--- a/layout/style/nsICSSStyleSheet.h
+++ b/layout/style/nsICSSStyleSheet.h
@@ -53,10 +53,10 @@ class nsICSSImportRule;
 class nsIPrincipal;
 
 // IID for the nsICSSStyleSheet interface
-// 36541c18-e735-48ef-8622-3a481275b757
+// 74fa10f3-fab7-425a-a7dd-e2afd1ba7a07
 #define NS_ICSS_STYLE_SHEET_IID     \
-{ 0x36541c18, 0xe735, 0x48ef, \
- { 0x86, 0x22, 0x3a, 0x48, 0x12, 0x75, 0xb7, 0x57 } }
+{ 0x74fa10f3, 0xfab7, 0x425a, \
+ { 0xa7, 0xdd, 0xe2, 0xaf, 0xd1, 0xba, 0x7a, 0x07 } }
 
 class nsICSSStyleSheet : public nsIStyleSheet {
 public:
@@ -87,7 +87,8 @@ public:
    * SetURIs may only be called while the sheet is 1) incomplete and 2)
    * has no rules in it
    */
-  NS_IMETHOD  SetURIs(nsIURI* aSheetURI, nsIURI* aBaseURI) = 0;
+  NS_IMETHOD  SetURIs(nsIURI* aSheetURI, nsIURI* aOriginalSheetURI,
+                      nsIURI* aBaseURI) = 0;
 
   /**
    * SetPrincipal should be called on all sheets before parsing into them.
diff --git a/layout/style/test/Makefile.in b/layout/style/test/Makefile.in
index 1ba18df..69cb05e 100644
--- a/layout/style/test/Makefile.in
+++ b/layout/style/test/Makefile.in
@@ -83,6 +83,7 @@ _TEST_FILES =	test_bug74880.html \
 		test_bug389464.html \
 		test_bug391034.html \
 		test_bug391221.html \
+		test_bug397427.html \
 		test_compute_data_with_start_struct.html \
 		test_dont_use_document_colors.html \
 		test_inherit_storage.html \
@@ -101,6 +102,15 @@ _TEST_FILES =	test_bug74880.html \
 		unstyled.css \
 		unstyled-frame.xml \
 		unstyled-frame.css \
+		redirect-1.css \
+		post-redirect-1.css \
+		redirect-1.css^headers^ \
+		redirect-2.css \
+		post-redirect-2.css \
+		redirect-2.css^headers^ \
+		redirect-3.css \
+		redirect-3.css^headers^ \
+		post-redirect-3.css \
 		$(NULL)
 
 
diff --git a/layout/style/test/post-redirect-1.css b/layout/style/test/post-redirect-1.css
new file mode 100644
index 0000000..c2ae5d6
--- /dev/null
+++ b/layout/style/test/post-redirect-1.css
@@ -0,0 +1 @@
+#one { color: green; background: url(""""#""""); }
diff --git a/layout/style/test/post-redirect-2.css b/layout/style/test/post-redirect-2.css
new file mode 100644
index 0000000..0a75299
--- /dev/null
+++ b/layout/style/test/post-redirect-2.css
@@ -0,0 +1 @@
+#two { color: green; background: url(""""#""""); }
diff --git a/layout/style/test/post-redirect-3.css b/layout/style/test/post-redirect-3.css
new file mode 100644
index 0000000..b33887a
--- /dev/null
+++ b/layout/style/test/post-redirect-3.css
@@ -0,0 +1 @@
+#three { color: green; background: url(""""#""""); }
diff --git a/layout/style/test/redirect-1.css^headers^ b/layout/style/test/redirect-1.css^headers^
new file mode 100644
index 0000000..582de3f
--- /dev/null
+++ b/layout/style/test/redirect-1.css^headers^
@@ -0,0 +1,2 @@
+HTTP 302 Found
+Location: http://example.org/tests/layout/style/test/post-redirect-1.css
diff --git a/layout/style/test/redirect-2.css^headers^ b/layout/style/test/redirect-2.css^headers^
new file mode 100644
index 0000000..09280cc
--- /dev/null
+++ b/layout/style/test/redirect-2.css^headers^
@@ -0,0 +1,2 @@
+HTTP 302 Found
+Location: http://example.org/tests/layout/style/test/post-redirect-2.css
diff --git a/layout/style/test/redirect-3.css^headers^ b/layout/style/test/redirect-3.css^headers^
new file mode 100644
index 0000000..4241923
--- /dev/null
+++ b/layout/style/test/redirect-3.css^headers^
@@ -0,0 +1,2 @@
+HTTP 302 Found
+Location: http://example.org/tests/layout/style/test/post-redirect-3.css
diff --git a/layout/style/test/test_bug397427.html b/layout/style/test/test_bug397427.html
new file mode 100644
index 0000000..ae45721
--- /dev/null
+++ b/layout/style/test/test_bug397427.html
@@ -0,0 +1,92 @@
+<!DOCTYPE HTML>
+<html>
+<!--
+https://bugzilla.mozilla.org/show_bug.cgi?id=397427
+-->
+<head>
+  <title>Test for Bug 397427</title>
+  <script type=""""text/javascript"""" src=""""/MochiKit/MochiKit.js""""></script>
+  <script type=""""text/javascript"""" src=""""/tests/SimpleTest/SimpleTest.js""""></script>
+  <link rel=""""stylesheet"""" type=""""text/css"""" href=""""/tests/SimpleTest/test.css"""" />
+  <style id=""""a"""">
+    @import url(""""redirect-1.css"""");
+    @import url(""""redirect-2.css"""");
+    .test { color: red }
+  </style>
+  <link id=""""b"""" rel=""""stylesheet"""" href=""""http://example.com"""">
+  <link id=""""c"""" rel=""""stylesheet"""" href=""""redirect-2.css"""">
+  <link id=""""d"""" rel=""""stylesheet"""" href=""""redirect-3.css"""">
+</head>
+<body>
+<a target=""""_blank"""" href=""""https://bugzilla.mozilla.org/show_bug.cgi?id=397427"""">Mozilla Bug 397427</a>
+<p id=""""display"""">
+<span id=""""one"""" class=""""test""""></span>
+<span id=""""two"""" class=""""test""""></span>
+<span id=""""three"""" class=""""test""""></span>
+</p>
+<div id=""""content"""" style=""""display: none"""">
+  
+</div>
+<pre id=""""test"""">
+<script class=""""testbody"""" type=""""text/javascript"""">
+
+/** Test for Bug 397427 **/
+SimpleTest.waitForExplicitFinish();
+
+addLoadEvent(function() {
+  is($(""""a"""").sheet.href, null, """"href should be null"""");
+  is(typeof($(""""a"""").sheet.href), """"object"""", """"should be actual null"""");
+
+  // Make sure the redirected sheets are loaded and have the right base URI
+  is(document.defaultView.getComputedStyle($(""""one""""), """""""").color,
+     """"rgb(0, 128, 0)"""", """"Redirect 1 did not work"""");
+  is(document.defaultView.getComputedStyle($(""""one""""), """""""").backgroundImage,
+     """"url(http://example.org/tests/layout/style/test/post-redirect-1.css#)"""",
+      """"Redirect 1 did not get right base URI"""");
+  is(document.defaultView.getComputedStyle($(""""two""""), """""""").color,
+     """"rgb(0, 128, 0)"""", """"Redirect 2 did not work"""");
+  is(document.defaultView.getComputedStyle($(""""two""""), """""""").backgroundImage,
+     """"url(http://example.org/tests/layout/style/test/post-redirect-2.css#)"""",
+      """"Redirect 2 did not get right base URI"""");
+  is(document.defaultView.getComputedStyle($(""""three""""), """""""").color,
+     """"rgb(0, 128, 0)"""", """"Redirect 3 did not work"""");
+  is(document.defaultView.getComputedStyle($(""""three""""), """""""").backgroundImage,
+     """"url(http://example.org/tests/layout/style/test/post-redirect-3.css#)"""",
+      """"Redirect 3 did not get right base URI"""");
+
+  var ruleList = $(""""a"""").sheet.cssRules;
+  
+  is(ruleList[0].styleSheet.href,
+     window.location.href.replace(/test_bug397427.html$/, """"redirect-1.css""""),
+     """"Unexpected href for imported sheet"""");
+  todo(ruleList[0].href == window.location.href.replace(/test_bug397427.html$/, """"redirect-1.css""""),
+       """"Rule href should be absolute"""");
+  is(ruleList[1].styleSheet.href,
+     window.location.href.replace(/test_bug397427.html$/, """"redirect-2.css""""),
+     """"Unexpected href for imported sheet"""");
+  todo(ruleList[1].href == window.location.href.replace(/test_bug397427.html$/, """"redirect-2.css""""),
+       """"Rule href should be absolute"""");
+
+  is($(""""b"""").href, """"http://example.com/"""", """"Unexpected href one"""");
+  is($(""""b"""").href, $(""""b"""").sheet.href,
+     """"Should have the same href when not redirecing"""");
+
+  is($(""""c"""").href,
+     window.location.href.replace(/test_bug397427.html$/, """"redirect-2.css""""),
+     """"Unexpected href two"""");
+  is($(""""c"""").href, $(""""c"""").sheet.href,
+     """"Should have the same href when redirecting"""");
+     
+  is($(""""d"""").href,
+     window.location.href.replace(/test_bug397427.html$/, """"redirect-3.css""""),
+     """"Unexpected href three"""");
+  is($(""""d"""").href, $(""""d"""").sheet.href,
+     """"Should have the same href when redirecting again"""");
+})
+
+addLoadEvent(SimpleTest.finish);
+</script>
+</pre>
+</body>
+</html>
+
diff --git a/netwerk/base/public/nsNetUtil.h b/netwerk/base/public/nsNetUtil.h
index ce786fe..5a159b5 100644
--- a/netwerk/base/public/nsNetUtil.h
+++ b/netwerk/base/public/nsNetUtil.h
@@ -1304,4 +1304,26 @@ NS_GetInnermostURI(nsIURI *uri)
     return uri;
 }
 
+/**
+ * Get the """"final"""" URI for a channel.  This is either the same as GetURI or
+ * GetOriginalURI, depending on whether this channel has
+ * nsIChanel::LOAD_REPLACE set.  For channels without that flag set, the final
+ * URI is the original URI, while for ones with the flag the final URI is the
+ * channel URI.
+ */
+inline nsresult
+NS_GetFinalChannelURI(nsIChannel* channel, nsIURI** uri)
+{
+    *uri = nsnull;
+    nsLoadFlags loadFlags = 0;
+    nsresult rv = channel->GetLoadFlags(&loadFlags);
+    NS_ENSURE_SUCCESS(rv, rv);
+    
+    if (loadFlags & nsIChannel::LOAD_REPLACE) {
+        return channel->GetURI(uri);
+    }
+    
+    return channel->GetOriginalURI(uri);
+}
+
 #endif // !nsNetUtil_h__"""
18ec53c0e0a4308e10374ad3499462885a8615c7,68229,394974,reed@reedloden.com,"Bustage fix for bug 394974.
",1193106842,"""diff --git a/docshell/build/Makefile.in b/docshell/build/Makefile.in
index a018bc2..d2019f9 100644
--- a/docshell/build/Makefile.in
+++ b/docshell/build/Makefile.in
@@ -135,7 +135,7 @@ EXTRA_DSO_LDOPTS += \
 endif
 
 ifeq ($(OS_ARCH),WINNT)
-OS_LIBS		+= $(call EXPAND_LIBNAME, shell32)
+OS_LIBS		+= $(call EXPAND_LIBNAME, shell32 ole32)
 endif
 
 ifeq ($(MOZ_WIDGET_TOOLKIT),gtk2)"""
111e1c11841c1ab1711d89425f89ccd85d57b837,68233,394974,reed@reedloden.com,"Bug 394974 - ""URIs with invalid % encodings launch wrong handler on WinXP+IE7"" (use Windows's own rules to vet URIs before handing them off to the shell) [p=jimm r=biesi a=blocking1.9+ for M9]
",1193094194,"""diff --git a/uriloader/exthandler/win/nsMIMEInfoWin.cpp b/uriloader/exthandler/win/nsMIMEInfoWin.cpp
index 42a8415..9c8a150 100755
--- a/uriloader/exthandler/win/nsMIMEInfoWin.cpp
+++ b/uriloader/exthandler/win/nsMIMEInfoWin.cpp
@@ -227,6 +227,13 @@ nsMIMEInfoWin::GetProperty(const nsAString& aName, nsIVariant* *_retval)
   return NS_OK;
 }
 
+typedef HRESULT (STDMETHODCALLTYPE *MySHParseDisplayName)
+                 (PCWSTR pszName,
+                  IBindCtx *pbc,
+                  LPITEMIDLIST *ppidl,
+                  SFGAOF sfgaoIn,
+                  SFGAOF *psfgaoOut);
+
 // this implementation was pretty much copied verbatime from 
 // Tony Robinson's code in nsExternalProtocolWin.cpp
 nsresult
@@ -254,10 +261,46 @@ nsMIMEInfoWin::LoadUriInternal(nsIURI * aURL)
     if (urlSpec.Length() > maxSafeURL)
       return NS_ERROR_FAILURE;
 
-    LONG r = (LONG) ::ShellExecute(NULL, """"open"""", urlSpec.get(), NULL, NULL, 
-                                   SW_SHOWNORMAL);
-    if (r < 32) 
-      rv = NS_ERROR_FAILURE;
+    LPITEMIDLIST pidl;
+    SFGAOF sfgao;
+    
+    // Bug 394974
+    HMODULE hDll = ::LoadLibrary(""""shell32.dll"""");
+    MySHParseDisplayName pMySHParseDisplayName = NULL;
+    // Version 6.0 and higher
+    if (pMySHParseDisplayName = 
+          (MySHParseDisplayName)::GetProcAddress(hDll,
+                                                 """"SHParseDisplayName"""")) {
+      if (SUCCEEDED(pMySHParseDisplayName(NS_ConvertUTF8toUTF16(urlSpec).get(),
+                                          NULL, &pidl, 0, &sfgao))) {
+        static const char cmdVerb[] = """"open"""";
+        SHELLEXECUTEINFO sinfo;
+        memset(&sinfo, 0, sizeof(SHELLEXECUTEINFO));
+        sinfo.cbSize   = sizeof(SHELLEXECUTEINFO);
+        sinfo.fMask    = SEE_MASK_FLAG_DDEWAIT |
+                         SEE_MASK_FLAG_NO_UI |
+                         SEE_MASK_INVOKEIDLIST;
+        sinfo.hwnd     = NULL;
+        sinfo.lpVerb   = (LPCSTR)&cmdVerb;
+        sinfo.nShow    = SW_SHOWNORMAL;
+        sinfo.lpIDList = pidl;
+        
+        BOOL result = ShellExecuteEx(&sinfo);
+
+        CoTaskMemFree(pidl);
+
+        if (!result || ((int)sinfo.hInstApp) < 32)
+          rv = NS_ERROR_FAILURE;
+      }
+    } else {
+      // Version of shell32.dll < 6.0
+      LONG r = (LONG) ::ShellExecute(NULL, """"open"""", urlSpec.get(), NULL, NULL, 
+                                     SW_SHOWNORMAL);
+      if (r < 32) 
+        rv = NS_ERROR_FAILURE;
+    }
+    if (hDll) 
+      ::FreeLibrary(hDll);
   }
 
   return rv;"""
0a17b608c3d9f392737938fcd7ca23ab19626fd2,68430,387258,bzbarsky@mit.edu,"Fix bug 387258 by hacking in a force-override for the ""txt"" extension-to-type mapping.  r+sr=biesi, a=sayrer
",1192386186,"""diff --git a/uriloader/exthandler/nsExternalHelperAppService.cpp b/uriloader/exthandler/nsExternalHelperAppService.cpp
index fa8c945..6c5f821 100644
--- a/uriloader/exthandler/nsExternalHelperAppService.cpp
+++ b/uriloader/exthandler/nsExternalHelperAppService.cpp
@@ -406,7 +406,8 @@ static nsDefaultMimeTypeEntry defaultMimeEntries [] =
   { TEXT_HTML, """"htm"""" },
   { APPLICATION_XPINSTALL, """"xpi"""" },
   { """"application/xhtml+xml"""", """"xhtml"""" },
-  { """"application/xhtml+xml"""", """"xht"""" }
+  { """"application/xhtml+xml"""", """"xht"""" },
+  { TEXT_PLAIN, """"txt"""" }
 };
 
 /**"""
220f856a451de8bf72a467a89c499e4a7f257e51,69197,380933,bclary@bclary.com,"JavaScript Test - regression test for bug 380933, by Jesse Ruderman, not part of the build
",1190386545,"""diff --git a/js/tests/js1_7/extensions/regress-380933.js b/js/tests/js1_7/extensions/regress-380933.js
new file mode 100755
index 0000000..69b9265
--- /dev/null
+++ b/js/tests/js1_7/extensions/regress-380933.js
@@ -0,0 +1,75 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-380933.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 380933;
+var summary = 'Do not assert with uneval object with setter with modified proto';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var f = (function(){}); 
+  var y = ({p getter: f}); 
+  f.__proto__ = []; 
+
+  expect = /TypeError: Array.prototype.toSource called on incompatible Function/;
+  try
+  {
+    uneval(y);
+    actual = 'No Error';
+  }
+  catch(ex)
+  {
+    actual = ex + '';
+  }
+
+  reportMatch(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
1ea65f7760f7f6429bdea3b998ccf5e4c4e02e3f,69199,381374,bclary@bclary.com,"JavaScript Test - regression test for bug 381374, by Jesse Ruderman, not part of the build
",1190386135,"""diff --git a/js/tests/js1_7/GC/regress-381374.js b/js/tests/js1_7/GC/regress-381374.js
new file mode 100755
index 0000000..61852b9
--- /dev/null
+++ b/js/tests/js1_7/GC/regress-381374.js
@@ -0,0 +1,86 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-381374.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 381374;
+var summary = 'js_AddScopeProperty - overwrite property with watchpoint';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  function huh()
+  {
+    var f;
+
+    Iterator; // ???
+
+    if (0 && 0) {
+      eval(""""""""); // ???
+    }
+
+    f = new Function(""""x = 1"""");
+
+    try {
+      f();
+    } catch(e) {}
+  }
+
+  this.watch('x', function(){});
+  this.__defineGetter__('x', new Function());
+  huh();
+  if (typeof gczeal == 'function')
+  {
+    gczeal(2); 
+  }
+  for (y in [0,1]) { this.__defineSetter__('x', function(){}); }
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
24a4f2d765a8568edb6911c4b64b8a91871ac5b0,69201,358594,bclary@bclary.com,"JavaScript Tests - regression tests for bug 358594, by Jesse Ruderman, not part of the build
",1190385549,"""diff --git a/js/tests/js1_5/extensions/regress-358594-01.js b/js/tests/js1_5/extensions/regress-358594-01.js
new file mode 100755
index 0000000..52ba5fd
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-358594-01.js
@@ -0,0 +1,65 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-358594-01.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 358594;
+var summary = 'Do not crash on uneval(this).';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+
+  // don't crash|assert
+  function f() { } 
+  f.__proto__ = this; 
+  this.m setter = f; 
+  uneval(this);
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-358594-02.js b/js/tests/js1_5/extensions/regress-358594-02.js
new file mode 100755
index 0000000..ba1ac4d
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-358594-02.js
@@ -0,0 +1,54 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-358594-02.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 358594;
+var summary = 'Do not crash on uneval(this).';
+var actual = '';
+var expect = '';
+
+printBugNumber(BUGNUMBER);
+printStatus (summary);
+
+// don't crash|assert
+function f() { } 
+f.__proto__ = this; 
+this.m setter = f; 
+uneval(this);
+reportCompare(expect, actual, summary);
diff --git a/js/tests/js1_5/extensions/regress-358594-03.js b/js/tests/js1_5/extensions/regress-358594-03.js
new file mode 100755
index 0000000..8068b90
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-358594-03.js
@@ -0,0 +1,64 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-358594-03.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 358594;
+var summary = 'Do not crash on uneval(this).';
+var actual = '';
+var expect = '';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+
+  // don't crash|assert
+  f = function () { };
+  f.__proto__ = this; 
+  this.m setter = f; 
+  uneval(this);
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-358594-04.js b/js/tests/js1_5/extensions/regress-358594-04.js
new file mode 100755
index 0000000..652e143
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-358594-04.js
@@ -0,0 +1,54 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-358594-04.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 358594;
+var summary = 'Do not crash on uneval(this).';
+var actual = '';
+var expect = '';
+
+printBugNumber(BUGNUMBER);
+printStatus (summary);
+
+// don't crash|assert
+f = function () { };
+f.__proto__ = this; 
+this.m setter = f; 
+uneval(this);
+reportCompare(expect, actual, summary);
diff --git a/js/tests/js1_5/extensions/regress-358594-05.js b/js/tests/js1_5/extensions/regress-358594-05.js
new file mode 100755
index 0000000..7ca4e72
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-358594-05.js
@@ -0,0 +1,65 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-358594-05.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 358594;
+var summary = 'Do not crash on uneval(this).';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+
+  // don't crash|assert
+  f = function () { };
+  f.hhhhhhhhh = this; 
+  this.m setter = f; 
+  uneval(this);
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-358594-06.js b/js/tests/js1_5/extensions/regress-358594-06.js
new file mode 100755
index 0000000..ae88383
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-358594-06.js
@@ -0,0 +1,54 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-358594-06.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 358594;
+var summary = 'Do not crash on uneval(this).';
+var actual = '';
+var expect = '';
+
+printBugNumber(BUGNUMBER);
+printStatus (summary);
+
+// don't crash|assert
+f = function () { };
+f.hhhhhhhhh = this; 
+this.m setter = f; 
+uneval(this);
+reportCompare(expect, actual, summary);"""
b383bef130d1478996619c124a001d92decb9fe3,69202,379245,bclary@bclary.com,"JavaScript Test - regression test for bug 379245, by Igor Bukanov, not part of the build
",1190385209,"""diff --git a/js/tests/js1_5/Regress/regress-379245.js b/js/tests/js1_5/Regress/regress-379245.js
new file mode 100755
index 0000000..7b4147f
--- /dev/null
+++ b/js/tests/js1_5/Regress/regress-379245.js
@@ -0,0 +1,72 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-379245.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 379245;
+var summary = 'inline calls';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var fThis;
+
+  function f()
+  {
+    fThis = this;
+    return ({x: f}).x;
+  }
+
+  f()();
+
+  if (this !== fThis)
+    throw """"bad this"""";
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
81f550806f1e84a48191cbb917f82a01efaf2d7c,69203,382503,bclary@bclary.com,"JavaScript Test - regression test for bug 382503, by Jesse Ruderman, not part of the build
",1190385019,"""diff --git a/js/tests/js1_5/Object/regress-382503.js b/js/tests/js1_5/Object/regress-382503.js
new file mode 100755
index 0000000..be8650d
--- /dev/null
+++ b/js/tests/js1_5/Object/regress-382503.js
@@ -0,0 +1,62 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-383503.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 382503;
+var summary = 'Do not assert: with prototype=regexp';
+var actual = '';
+var expect = '';
+
+printBugNumber(BUGNUMBER);
+printStatus (summary);
+ 
+function f(x)
+{
+  prototype = /a/;
+
+  if (x) {
+    return /b/;
+    return /c/;
+  } else {
+    return /d/;
+  }
+}
+
+void f(false);
+
+reportCompare(expect, actual, summary);"""
96e7cac800ff1ffe0c367b9fd66a7d4b1774266c,69204,375976,bclary@bclary.com,"JavaScript Test - regression test for bug 375976, by Jesse Ruderman, not part of the build
",1190384795,"""diff --git a/js/tests/js1_5/GetSet/regress-375976.js b/js/tests/js1_5/GetSet/regress-375976.js
new file mode 100755
index 0000000..eb50b8a
--- /dev/null
+++ b/js/tests/js1_5/GetSet/regress-375976.js
@@ -0,0 +1,64 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-375976.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 375976;
+var summary = 'Do not crash with postincrement custom property';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  this.__defineSetter__('x', gc);
+  this.__defineGetter__('x', Math.sin);
+  x = x++;
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
8dec8801e950c5b6c986336adc156bab6e7a527d,69385,395942,dveditz@cruzio.com,"bug 395942 mitigations for QuickTime media-link flaw, r=gavin,neil, b=beltzner
",1190076843,"""diff --git a/browser/components/nsBrowserContentHandler.js b/browser/components/nsBrowserContentHandler.js
index 21f6ba8..00f3c14 100644
--- a/browser/components/nsBrowserContentHandler.js
+++ b/browser/components/nsBrowserContentHandler.js
@@ -51,6 +51,7 @@ const nsIFactory             = Components.interfaces.nsIFactory;
 const nsIFileURL             = Components.interfaces.nsIFileURL;
 const nsIHttpProtocolHandler = Components.interfaces.nsIHttpProtocolHandler;
 const nsIInterfaceRequestor  = Components.interfaces.nsIInterfaceRequestor;
+const nsINetUtil             = Components.interfaces.nsINetUtil;
 const nsIPrefBranch          = Components.interfaces.nsIPrefBranch;
 const nsIPrefLocalizedString = Components.interfaces.nsIPrefLocalizedString;
 const nsISupportsString      = Components.interfaces.nsISupportsString;
@@ -67,6 +68,9 @@ const NS_BINDING_ABORTED = 0x804b0002;
 const NS_ERROR_WONT_HANDLE_CONTENT = 0x805d0001;
 const NS_ERROR_ABORT = Components.results.NS_ERROR_ABORT;
 
+const URI_INHERITS_SECURITY_CONTEXT = nsIHttpProtocolHandler
+                                        .URI_INHERITS_SECURITY_CONTEXT;
+
 function shouldLoadURI(aURI) {
   if (aURI && !aURI.schemeIs(""""chrome""""))
     return true;
@@ -430,12 +434,21 @@ var nsBrowserContentHandler = {
       // Handle the old preference dialog URL separately (bug 285416)
       if (chromeParam == """"chrome://browser/content/pref/pref.xul"""") {
         openPreferences();
-      } else {
+        cmdLine.preventDefault = true;
+      } else try {
+        // only load URIs which do not inherit chrome privs
         var features = """"chrome,dialog=no,all"""" + this.getFeatures(cmdLine);
-        openWindow(null, chromeParam, """"_blank"""", features, """""""");
+        var uri = resolveURIInternal(cmdLine, chromeParam);
+        var netutil = Components.classes[""""@mozilla.org/network/util;1""""]
+                                .getService(nsINetUtil);
+        if (!netutil.URIChainHasFlags(uri, URI_INHERITS_SECURITY_CONTEXT)) {
+          openWindow(null, uri.spec, """"_blank"""", features, """""""");
+          cmdLine.preventDefault = true;
+        }
+      }
+      catch (e) {
+        Components.utils.reportError(e);
       }
-
-      cmdLine.preventDefault = true;
     }
     if (cmdLine.handleFlag(""""preferences"""", false)) {
       openPreferences();
diff --git a/toolkit/mozapps/extensions/src/nsExtensionManager.js.in b/toolkit/mozapps/extensions/src/nsExtensionManager.js.in
index 20bcd69..5a70a6f 100644
--- a/toolkit/mozapps/extensions/src/nsExtensionManager.js.in
+++ b/toolkit/mozapps/extensions/src/nsExtensionManager.js.in
@@ -2616,6 +2616,12 @@ ExtensionManager.prototype = {
   _installGlobalItem: function(file) {
     if (!file || !file.exists())
       throw new Error(""""Unable to find the file specified on the command line!"""");
+#ifdef XP_WIN
+    // make sure the file is local on Windows
+    file.normalize();
+    if (file.path[1] != ':')
+      throw new Error(""""Can't install global chrome from non-local file """"+file.path);
+#endif
     var installManifestFile = extractRDFFileToTempDir(file, FILE_INSTALL_MANIFEST, true);
     if (!installManifestFile.exists())
       throw new Error(""""The package is missing an install manifest!"""");"""
7d5e7d6e15489ff880ea21b1f038968fbcab8a06,70551,391043,martijn.martijn@gmail.com,"Let only top level documents call this code, bug 391043, r=jst, sr=bzbarsky, a=dbaron
",1187678683,"""diff --git a/content/xul/content/src/nsXULElement.cpp b/content/xul/content/src/nsXULElement.cpp
index 6d5e263..7ff8297 100644
--- a/content/xul/content/src/nsXULElement.cpp
+++ b/content/xul/content/src/nsXULElement.cpp
@@ -2234,6 +2234,10 @@ nsXULElement::HideWindowChrome(PRBool aShouldHide)
     if (!doc || doc->GetRootContent() != this)
       return NS_ERROR_UNEXPECTED;
 
+    // only top level chrome documents can hide the window chrome
+    if (doc->GetParentDocument())
+      return NS_OK;
+
     nsIPresShell *shell = doc->GetPrimaryShell();
 
     if (shell) {
@@ -2242,7 +2246,7 @@ nsXULElement::HideWindowChrome(PRBool aShouldHide)
 
         nsPresContext *presContext = shell->GetPresContext();
 
-        if (frame && presContext) {
+        if (frame && presContext && presContext->IsChrome()) {
             nsIView* view = frame->GetClosestView();
 
             if (view) {"""
3db5e8880232f20d64eed912d69fafd98f7434b6,71020,367501,bclary@bclary.com,"JavaScript Tests - regression tests for bug 367501, by moz_bug_r_a4, not part of the build
",1186585508,"""diff --git a/js/tests/js1_5/extensions/regress-367501-01.js b/js/tests/js1_5/extensions/regress-367501-01.js
new file mode 100755
index 0000000..87b216c
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367501-01.js
@@ -0,0 +1,68 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-367501-01.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 367501;
+var summary = 'getter/setter issues';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+
+  try
+  { 
+    expect = 'undefined';
+    var a = { set x() {} };
+    actual = a.x + '';
+  }
+  catch(ex)
+  {
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-367501-02.js b/js/tests/js1_5/extensions/regress-367501-02.js
new file mode 100755
index 0000000..dedb4e9
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367501-02.js
@@ -0,0 +1,70 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-367501-02.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 367501;
+var summary = 'getter/setter crashes';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+
+  try
+  {
+    expect = 'undefined';
+    var a = { set x() {} };
+    for (var i = 0; i < 92169 - 3; ++i) a[i] = 1;
+    actual = a.x + '';
+    actual = a.x + '';
+  }
+  catch(ex)
+  {
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-367501-03.js b/js/tests/js1_5/extensions/regress-367501-03.js
new file mode 100755
index 0000000..3b56eb5
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367501-03.js
@@ -0,0 +1,71 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-367501-03.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 367501;
+var summary = 'getter/setter crashes';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  try
+  {
+    expect = actual = 'No Crash';
+    var a = { set x() {} };
+    for (var i = 0; i < 0x4bf20 - 3; ++i) a[i] = 1;
+    a.x;
+    a.x.x;
+  }
+  catch(ex)
+  {
+  }
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-367501-04.js b/js/tests/js1_5/extensions/regress-367501-04.js
new file mode 100755
index 0000000..c916a23
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367501-04.js
@@ -0,0 +1,71 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-367501-04.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 367501;
+var summary = 'getter/setter crashes';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+
+  try
+  {
+    expect = actual = 'No Crash'; 
+    var a = { set x() {} };
+    for (var i = 0; i < 0x10050c - 3; ++i) a[i] = 1;
+    a.x;
+    typeof a.x;
+  }
+  catch(ex)
+  {
+  }
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
0c82b1cf5d4d69829ec881654f3673e772ebc80b,71021,366601,bclary@bclary.com,"JavaScript Tests - regression test for bug 366601, by Igor Bukanov
",1186584774,"""diff --git a/js/tests/js1_5/Regress/regress-366601.js b/js/tests/js1_5/Regress/regress-366601.js
new file mode 100755
index 0000000..8e09459
--- /dev/null
+++ b/js/tests/js1_5/Regress/regress-366601.js
@@ -0,0 +1,71 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-366601.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 366601;
+var summary = 'Switch with more than 64k atoms';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var N = 100*1000;
+  var src = 'var x = [""""';
+  var array = Array(N);
+  for (var i = 0; i != N; ++i)
+    array[i] = i;
+  src += array.join('"""",""""')+'""""];\n';
+  src += 'switch (a) { case """"a"""": case """"b"""": case """"c"""": return null; }  return x;';
+  var f = Function('a', src);
+  var r = f(""""a"""");
+  if (r !== null)
+    throw """"Unexpected result: bad switch label"""";
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
b0d5d7e7a38e93774ab00b501d8d8f58af9ded39,71022,365692,bclary@bclary.com,"JavaScript Tests - regression test for bug 365692, by Igor Bukanov
",1186584537,"""diff --git a/js/tests/js1_5/extensions/regress-365692.js b/js/tests/js1_5/extensions/regress-365692.js
new file mode 100755
index 0000000..bdb50ed
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-365692.js
@@ -0,0 +1,73 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-365692.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 365692;
+var summary = 'getter/setter bytecodes should support atoms over 64k';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+printBugNumber(BUGNUMBER);
+printStatus (summary);
+ 
+function g()
+{
+  return 10;
+}
+
+try
+{
+  var N = 100*1000;
+  var src = 'var x = [""""';
+  var array = Array(N);
+  for (var i = 0; i != N; ++i)
+    array[i] = i;
+  src += array.join('"""",""""')+'""""]; x.a getter = g; return x.a;';
+  var f = Function(src);
+  if (f() != 10)
+    throw """"Unexpected result"""";
+}
+catch(ex)
+{
+  if (ex == """"Unexpected result"""")
+  {
+    actual = ex;
+  }
+}
+reportCompare(expect, actual, summary);"""
210986f50c4a1ea212e7a49f9412f4dadc2ac37d,71028,364023,bclary@bclary.com,"JavaScript Tests - regression test for bug 364023, by shutdown, not part of the build
",1186569008,"""diff --git a/js/tests/js1_5/Function/regress-364023.js b/js/tests/js1_5/Function/regress-364023.js
new file mode 100755
index 0000000..7c16938
--- /dev/null
+++ b/js/tests/js1_5/Function/regress-364023.js
@@ -0,0 +1,73 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): shutdown
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-364023.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 364023;
+var summary = 'Do not crash in JS_GetPrivate';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  function exploit() {
+    var code = """""""";
+    for(var i = 0; i < 0x10000; i++) {
+      if(i == 125) {
+        code += """"void 0x10000050505050;\n"""";
+      } else {
+        code += """"void """" + (0x10000000000000 + i) + """";\n"""";
+      }
+    }
+    code += """"function foo() {}\n"""";
+    eval(code);
+  }
+  exploit();
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
208e71179d3a302b2910ecbdb0fbfdd13ad52452,71029,362872,bclary@bclary.com,"JavaScript Tests - regression tests for bug 362872, by shutdown, Blake Kaplan, not part of the build
",1186568805,"""diff --git a/js/tests/js1_5/Object/regress-362872-01.js b/js/tests/js1_5/Object/regress-362872-01.js
new file mode 100755
index 0000000..661794d
--- /dev/null
+++ b/js/tests/js1_5/Object/regress-362872-01.js
@@ -0,0 +1,74 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): shutdown
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-362872-01.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 362872;
+var summary = 'script should not drop watchpoint that is in use';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  function exploit() {
+    var rooter = {}, object = {}, filler1 = """""""", filler2 = """"\u5555"""";
+    for(var i = 0; i < 32/2-2; i++) { filler1 += """"\u5050""""; }
+    object.watch(""""foo"""", function(){
+		   object.unwatch(""""foo"""");
+		   object.unwatch(""""foo"""");
+		   for(var i = 0; i < 8 * 1024; i++) {
+		     rooter[i] = filler1 + filler2;
+		   }
+		 });
+    object.foo = """"bar"""";
+  }
+  exploit();
+
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/Object/regress-362872-02.js b/js/tests/js1_5/Object/regress-362872-02.js
new file mode 100755
index 0000000..6333b34
--- /dev/null
+++ b/js/tests/js1_5/Object/regress-362872-02.js
@@ -0,0 +1,55 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Blake Kaplan
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-362872-02.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 362872;
+var summary = 'script should not drop watchpoint that is in use';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber(BUGNUMBER);
+printStatus (summary);
+ 
+this.watch('x', function f() {
+             print(""""before"""");
+             x = 3;
+             print(""""after"""");
+           });
+x = 3;
+
+reportCompare(expect, actual, summary);"""
aaa86c40d2524d6dfb1672a4a4cdeaf81ec5169a,71401,389580,cbiesinger@gmx.at,"389580 don't allow escaped null bytes in URLs for external protocol handlers
r=bzbarsky sr=dveditz
",1185422661,"""diff --git a/uriloader/exthandler/nsExternalHelperAppService.cpp b/uriloader/exthandler/nsExternalHelperAppService.cpp
index d1bd09d..e25a5b8 100644
--- a/uriloader/exthandler/nsExternalHelperAppService.cpp
+++ b/uriloader/exthandler/nsExternalHelperAppService.cpp
@@ -1214,6 +1214,9 @@ NS_IMETHODIMP nsExternalHelperAppService::LoadURI(nsIURI * aURL, nsIPrompt * aPr
   nsCAutoString spec;
   aURL->GetSpec(spec);
 
+  if (spec.Find(""""%00"""") != -1)
+    return NS_ERROR_MALFORMED_URI;
+
   spec.ReplaceSubstring(""""\"""""""", """"%22"""");
   spec.ReplaceSubstring(""""`"""", """"%60"""");
 """
49e7254aec1bae3a578681ee9fb2ad751ce066c8,71428,389580,cbiesinger@gmx.at,"389580 don't allow escaped null bytes in URLs for external protocol handlers
r=bzbarsky sr=dveditz
",1185403680,"""diff --git a/uriloader/exthandler/nsExternalHelperAppService.cpp b/uriloader/exthandler/nsExternalHelperAppService.cpp
index 199494b..d1cbe56 100644
--- a/uriloader/exthandler/nsExternalHelperAppService.cpp
+++ b/uriloader/exthandler/nsExternalHelperAppService.cpp
@@ -1215,6 +1215,9 @@ NS_IMETHODIMP nsExternalHelperAppService::LoadURI(nsIURI * aURL, nsIPrompt * aPr
   nsCAutoString spec;
   aURL->GetSpec(spec);
 
+  if (spec.Find(""""%00"""") != -1)
+    return NS_ERROR_MALFORMED_URI;
+
   spec.ReplaceSubstring(""""\"""""""", """"%22"""");
   spec.ReplaceSubstring(""""`"""", """"%60"""");
 """
23cd39d58de119c2574c7506e8846bd643a9dae2,71606,389106,cbiesinger@gmx.at,"bug 389106 escape spaces even for the OnlyNonASCII flag
r=bzbarsky sr=dveditz
",1185236922,"""diff --git a/xpcom/io/nsEscape.cpp b/xpcom/io/nsEscape.cpp
index a838c08..ab626f5 100644
--- a/xpcom/io/nsEscape.cpp
+++ b/xpcom/io/nsEscape.cpp
@@ -410,7 +410,7 @@ NS_COM PRBool NS_EscapeURL(const char *part,
       // non-ASCII character as it may be part of a multi-byte character.
       if ((NO_NEED_ESC(c) || (c == HEX_ESCAPE && !forced)
                           || (c > 0x7f && ignoreNonAscii)
-                          || (c > 0x1f && c < 0x7f && ignoreAscii))
+                          || (c > 0x20 && c < 0x7f && ignoreAscii))
           && !(c == ':' && colon)
           && !(previousIsNonASCII && c == '|' && !ignoreNonAscii))
       {"""
0350d7cf6bde5a4938a70c2cadda39beea552046,71607,389106,cbiesinger@gmx.at,"bug 389106 didn't mean to check in this line
",1185235978,"""diff --git a/uriloader/exthandler/nsExternalHelperAppService.cpp b/uriloader/exthandler/nsExternalHelperAppService.cpp
index 69dcbb9..7d8f740 100644
--- a/uriloader/exthandler/nsExternalHelperAppService.cpp
+++ b/uriloader/exthandler/nsExternalHelperAppService.cpp
@@ -1216,7 +1216,6 @@ NS_IMETHODIMP nsExternalHelperAppService::LoadURI(nsIURI * aURL, nsIPrompt * aPr
   aURL->GetSpec(spec);
 
   spec.ReplaceSubstring(""""\"""""""", """"%22"""");
-  spec.ReplaceSubstring(""""'"""", """"%27"""");
   spec.ReplaceSubstring(""""`"""", """"%60"""");
 
   nsCOMPtr<nsIIOService> ios(do_GetIOService());"""
7b517af97edcf6f65f0b2b5fc76c74ce02f016ff,71625,384384,rob_strong@exchangecode.com,"addendum to bug 384384. r=sspitzer
",1185218824,"""diff --git a/browser/installer/windows/nsis/shared.nsh b/browser/installer/windows/nsis/shared.nsh
index cea1edd..04621bb 100755
--- a/browser/installer/windows/nsis/shared.nsh
+++ b/browser/installer/windows/nsis/shared.nsh
@@ -426,5 +426,8 @@
   ${Unless} ${Errors}
     DeleteRegKey SHCTX """"$0\gopher""""
   ${EndUnless}
+
+  ; Remove protocol handler registry keys added by the MS shim
+  DeleteRegKey HKLM """"Software\Classes\Firefox.URL""""
 !macroend
 !define FixClassKeys """"!insertmacro FixClassKeys"""""""
7e647277ada190a2463f3f93177acbfd0fe609ef,71642,389106,cbiesinger@gmx.at,"bug 389106 escape quotes
r=bz sr=dveditz
",1185167446,"""diff --git a/uriloader/exthandler/nsExternalHelperAppService.cpp b/uriloader/exthandler/nsExternalHelperAppService.cpp
index 2c891b9..6b22c24 100644
--- a/uriloader/exthandler/nsExternalHelperAppService.cpp
+++ b/uriloader/exthandler/nsExternalHelperAppService.cpp
@@ -1214,7 +1214,19 @@ class nsExternalLoadRequest : public nsRunnable {
 
 NS_IMETHODIMP nsExternalHelperAppService::LoadURI(nsIURI * aURL, nsIPrompt * aPrompt)
 {
-  nsCOMPtr<nsIRunnable> event = new nsExternalLoadRequest(aURL, aPrompt);
+  nsCAutoString spec;
+  aURL->GetSpec(spec);
+
+  spec.ReplaceSubstring(""""\"""""""", """"%22"""");
+  spec.ReplaceSubstring(""""'"""", """"%27"""");
+  spec.ReplaceSubstring(""""`"""", """"%60"""");
+
+  nsCOMPtr<nsIIOService> ios(do_GetIOService());
+  nsCOMPtr<nsIURI> uri;
+  nsresult rv = ios->NewURI(spec, nsnull, nsnull, getter_AddRefs(uri));
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  nsCOMPtr<nsIRunnable> event = new nsExternalLoadRequest(uri, aPrompt);
   return NS_DispatchToCurrentThread(event);
 }
 """
43a0684dd34b2240271d5134f0869aa65abd52cc,71806,388121,bzbarsky@mit.edu,"More consistent handling of principals for loads across docshell type
boundaries.  Bug 388121, r+sr=jst
",1184723227,"""diff --git a/content/base/src/nsFrameLoader.cpp b/content/base/src/nsFrameLoader.cpp
index 08fcb04..e64cab4 100644
--- a/content/base/src/nsFrameLoader.cpp
+++ b/content/base/src/nsFrameLoader.cpp
@@ -187,23 +187,8 @@ nsFrameLoader::LoadURI(nsIURI* aURI)
   
   // We'll use our principal, not that of the document loaded inside us.  This
   // is very important; needed to prevent XSS attacks on documents loaded in
-  // subframes!  But only use our principal if our docshell's type is the same
-  // as the type of our ownerDocument's docshell.  Note that we could try
-  // checking GetSameTypeParent() on mDocShell, but that might break if we ever
-  // support docshells loaded inside disconnected nodes...
-  nsCOMPtr<nsISupports> container = doc->GetContainer();
-  nsCOMPtr<nsIDocShellTreeItem> parentItem = do_QueryInterface(container);
-  nsCOMPtr<nsIDocShellTreeItem> ourItem = do_QueryInterface(mDocShell);
-  NS_ASSERTION(ourItem, """"Must have item"""");
-  if (parentItem) {
-    PRInt32 parentType;
-    rv = parentItem->GetItemType(&parentType);
-    PRInt32 ourType;
-    nsresult rv2 = ourItem->GetItemType(&ourType);
-    if (NS_SUCCEEDED(rv) && NS_SUCCEEDED(rv2) && ourType == parentType) {
-      loadInfo->SetOwner(principal);
-    }
-  }
+  // subframes!
+  loadInfo->SetOwner(principal);
 
   nsCOMPtr<nsIURI> referrer;
   rv = principal->GetURI(getter_AddRefs(referrer));
diff --git a/docshell/base/nsDocShell.cpp b/docshell/base/nsDocShell.cpp
index dfe0600..b3172fd 100644
--- a/docshell/base/nsDocShell.cpp
+++ b/docshell/base/nsDocShell.cpp
@@ -819,30 +819,44 @@ nsDocShell::LoadURI(nsIURI * aURI,
     }
     // Perform the load...
     else {
-        // We need an owner (a referring principal). 3 possibilities:
-        // (1) If a principal was passed in, that's what we'll use.
-        // (2) If the caller has allowed inheriting from the current document,
+        // We need an owner (a referring principal). 4 possibilities:
+        // (1) If the system principal was passed in and we're a typeContent
+        //     docshell, inherit the principal from the current document
+        //     instead.
+        // (2) In all other cases when the principal passed in is not null,
+        //     use that principal.
+        // (3) If the caller has allowed inheriting from the current document,
         //     or if we're being called from system code (eg chrome JS or pure
         //     C++) then inheritOwner should be true and InternalLoad will get
         //     an owner from the current document. If none of these things are
         //     true, then
-        // (3) we pass a null owner into the channel, and an owner will be
-        //     created later from the URL.
+        // (4) we pass a null owner into the channel, and an owner will be
+        //     created later from the channel's internal data.
         //
-        // NOTE: This all only works because the only thing the owner is used
-        //       for in InternalLoad is data: and javascript: URIs.  For other
-        //       URIs this would all be dead wrong!
+        // NOTE: This all only works because the only thing the owner is used  
+        //       for in InternalLoad is data:, javascript:, and about:blank
+        //       URIs.  For other URIs this would all be dead wrong!
+        nsCOMPtr<nsIScriptSecurityManager> secMan =
+            do_GetService(NS_SCRIPTSECURITYMANAGER_CONTRACTID, &rv);
+        NS_ENSURE_SUCCESS(rv, rv);
+
+        if (owner && mItemType != typeChrome) {
+            nsCOMPtr<nsIPrincipal> ownerPrincipal = do_QueryInterface(owner);
+            PRBool isSystem;
+            rv = secMan->IsSystemPrincipal(ownerPrincipal, &isSystem);
+            NS_ENSURE_SUCCESS(rv, rv);
+            
+            if (isSystem) {
+                owner = nsnull;
+                inheritOwner = PR_TRUE;
+            }
+        }
         if (!owner && !inheritOwner) {
             // See if there's system or chrome JS code running
-            nsCOMPtr<nsIScriptSecurityManager> secMan;
-
-            secMan = do_GetService(NS_SCRIPTSECURITYMANAGER_CONTRACTID, &rv);
-            if (NS_SUCCEEDED(rv)) {
-                rv = secMan->SubjectPrincipalIsSystem(&inheritOwner);
-                if (NS_FAILED(rv)) {
-                    // Set it back to false
-                    inheritOwner = PR_FALSE;
-                }
+            rv = secMan->SubjectPrincipalIsSystem(&inheritOwner);
+            if (NS_FAILED(rv)) {
+                // Set it back to false
+                inheritOwner = PR_FALSE;
             }
         }
 
diff --git a/embedding/components/windowwatcher/src/nsWindowWatcher.cpp b/embedding/components/windowwatcher/src/nsWindowWatcher.cpp
index c78bb8d..e9e6105 100644
--- a/embedding/components/windowwatcher/src/nsWindowWatcher.cpp
+++ b/embedding/components/windowwatcher/src/nsWindowWatcher.cpp
@@ -656,10 +656,7 @@ nsWindowWatcher::OpenWindowJSInternal(nsIDOMWindow *aParent,
 
         // chrome is always allowed, so clear the flag if the opener is chrome
         if (popupConditions) {
-          PRBool isChrome = PR_FALSE;
-          if (sm)
-            sm->SubjectPrincipalIsSystem(&isChrome);
-          popupConditions = !isChrome;
+          popupConditions = !isCallerChrome;
         }
 
         if (popupConditions)
@@ -823,6 +820,17 @@ nsWindowWatcher::OpenWindowJSInternal(nsIDOMWindow *aParent,
       }
     }
 
+    PRBool isSystem;
+    rv = sm->IsSystemPrincipal(newWindowPrincipal, &isSystem);
+    if (NS_FAILED(rv) || isSystem) {
+      // Don't pass this principal along to content windows
+      PRInt32 itemType;
+      rv = newDocShellItem->GetItemType(&itemType);
+      if (NS_FAILED(rv) || itemType != nsIDocShellTreeItem::typeChrome) {
+        newWindowPrincipal = nsnull;        
+      }
+    }
+
     nsCOMPtr<nsPIDOMWindow> newWindow = do_QueryInterface(*_retval);
 #ifdef DEBUG
     nsCOMPtr<nsPIDOMWindow> newDebugWindow = do_GetInterface(newDocShell);"""
b10deb3d968c6879a9f5fff26da073c6cf96c368,71980,374810,dveditz@cruzio.com,"bug 374810 pick up crash fix from libpng 1.2.17, patch=glennrp, r=tor, sr=dveditz
",1184285143,"""diff --git a/configure.in b/configure.in
index d7b482c..6783928 100644
--- a/configure.in
+++ b/configure.in
@@ -103,7 +103,7 @@ _SUBDIR_CONFIG_ARGS=""""$ac_configure_args""""
 dnl Set the version number of the libs included with mozilla
 dnl ========================================================
 MOZJPEG=62
-MOZPNG=10207
+MOZPNG=10217
 MOZZLIB=0x1230
 NSPR_VERSION=4
 NSS_VERSION=3
diff --git a/modules/libimg/png/MOZCHANGES b/modules/libimg/png/MOZCHANGES
index 78e592f..919667e 100644
--- a/modules/libimg/png/MOZCHANGES
+++ b/modules/libimg/png/MOZCHANGES
@@ -1,6 +1,10 @@
 
 Changes made to pristine png source by mozilla.org developers.
 
+2007/05/05  -- Zero png_ptr->num_trans on CRC error (bug 374810)
+
+2007/04/19  -- Synced with libpng-1.2.16 tree
+
 2007/03/20  -- Added support for APNG
 
 2006/06/27  -- Synced with libpng-1.2.12 tree
diff --git a/modules/libimg/png/pngrutil.c b/modules/libimg/png/pngrutil.c
index c547e0d..67623ee 100644
--- a/modules/libimg/png/pngrutil.c
+++ b/modules/libimg/png/pngrutil.c
@@ -1319,7 +1319,10 @@ png_handle_tRNS(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)
    }
 
    if (png_crc_finish(png_ptr, 0))
+   {
+      png_ptr->num_trans = 0;
       return;
+   }
 
    png_set_tRNS(png_ptr, info_ptr, readbuf, png_ptr->num_trans,
       &(png_ptr->trans_values));"""
59adfcad7d173c02e4e6f7b96c2821f8023e51f9,71987,383478,dveditz@cruzio.com,"bug 383478 deal with %00 in file urls, r=bz,darin
",1184281464,"""diff --git a/netwerk/base/src/nsURLHelperOS2.cpp b/netwerk/base/src/nsURLHelperOS2.cpp
index c61736f..e90310c 100644
--- a/netwerk/base/src/nsURLHelperOS2.cpp
+++ b/netwerk/base/src/nsURLHelperOS2.cpp
@@ -130,6 +130,8 @@ net_GetFileFromURLSpec(const nsACString &aURL, nsIFile **result)
     }
     
     NS_UnescapeURL(path);
+    if (path.Length() != strlen(path.get()))
+        return NS_ERROR_FILE_INVALID_PATH;
 
     // remove leading '\'
     if (path.CharAt(0) == '\\')
diff --git a/netwerk/base/src/nsURLHelperOSX.cpp b/netwerk/base/src/nsURLHelperOSX.cpp
index 906f93d..b5a36ad 100644
--- a/netwerk/base/src/nsURLHelperOSX.cpp
+++ b/netwerk/base/src/nsURLHelperOSX.cpp
@@ -231,6 +231,8 @@ net_GetFileFromURLSpec(const nsACString &aURL, nsIFile **result)
   }
 
   NS_UnescapeURL(path);
+  if (path.Length() != strlen(path.get()))
+    return NS_ERROR_FILE_INVALID_PATH;
 
   if (bHFSPath)
     convertHFSPathtoPOSIX(path, path);
diff --git a/netwerk/base/src/nsURLHelperUnix.cpp b/netwerk/base/src/nsURLHelperUnix.cpp
index 51b5746..dd01714 100644
--- a/netwerk/base/src/nsURLHelperUnix.cpp
+++ b/netwerk/base/src/nsURLHelperUnix.cpp
@@ -114,6 +114,8 @@ net_GetFileFromURLSpec(const nsACString &aURL, nsIFile **result)
     }
     
     NS_UnescapeURL(path);
+    if (path.Length() != strlen(path.get()))
+        return NS_ERROR_FILE_INVALID_PATH;
 
     if (IsUTF8(path)) {
         // speed up the start-up where UTF-8 is the native charset
diff --git a/netwerk/base/src/nsURLHelperWin.cpp b/netwerk/base/src/nsURLHelperWin.cpp
index ef8d576..8613d75 100644
--- a/netwerk/base/src/nsURLHelperWin.cpp
+++ b/netwerk/base/src/nsURLHelperWin.cpp
@@ -130,6 +130,8 @@ net_GetFileFromURLSpec(const nsACString &aURL, nsIFile **result)
     }
     
     NS_UnescapeURL(path);
+    if (path.Length() != strlen(path.get()))
+        return NS_ERROR_FILE_INVALID_PATH;
 
     // remove leading '\'
     if (path.CharAt(0) == '\\')"""
1bd50df0a2515710b7df56ae32360bce208b52bc,72086,384384,rob_strong@exchangecode.com,"Bug 384384. r=bsmedberg, r=mscott for Thunderbird
",1184133596,"""diff --git a/browser/components/nsBrowserContentHandler.js b/browser/components/nsBrowserContentHandler.js
index bc0fdf6..24f8d9b 100644
--- a/browser/components/nsBrowserContentHandler.js
+++ b/browser/components/nsBrowserContentHandler.js
@@ -61,6 +61,7 @@ const nsIWindowWatcher       = Components.interfaces.nsIWindowWatcher;
 const nsICategoryManager     = Components.interfaces.nsICategoryManager;
 const nsIWebNavigationInfo   = Components.interfaces.nsIWebNavigationInfo;
 const nsIBrowserSearchService = Components.interfaces.nsIBrowserSearchService;
+const nsICommandLineValidator = Components.interfaces.nsICommandLineValidator;
 
 const NS_BINDING_ABORTED = 0x804b0002;
 const NS_ERROR_WONT_HANDLE_CONTENT = 0x805d0001;
@@ -301,6 +302,7 @@ var nsBrowserContentHandler = {
         !iid.equals(nsICommandLineHandler) &&
         !iid.equals(nsIBrowserHandler) &&
         !iid.equals(nsIContentHandler) &&
+        !iid.equals(nsICommandLineValidator) &&
         !iid.equals(nsIFactory))
       throw Components.results.NS_ERROR_NO_INTERFACE;
 
@@ -604,6 +606,21 @@ var nsBrowserContentHandler = {
     request.cancel(NS_BINDING_ABORTED);
   },
 
+  /* nsICommandLineValidator */
+  validate : function bch_validate(cmdLine) {
+    // Other handlers may use osint so only handle the osint flag if the url
+    // flag is also present and the command line is valid.
+    var osintFlagIdx = cmdLine.findFlag(""""osint"""", false);
+    var urlFlagIdx = cmdLine.findFlag(""""url"""", false);
+    if (urlFlagIdx > -1 && (osintFlagIdx > -1 ||
+        cmdLine.state == nsICommandLine.STATE_REMOTE_EXPLICIT)) {
+      var urlParam = cmdLine.getArgument(urlFlagIdx + 1);
+      if (cmdLine.length != urlFlagIdx + 2 || /firefoxurl:/.test(urlParam))
+        throw NS_ERROR_ABORT;
+      cmdLine.handleFlag(""""osint"""", false)
+    }
+  },
+
   /* nsIFactory */
   createInstance: function bch_CI(outer, iid) {
     if (outer != null)
@@ -866,6 +883,9 @@ var Module = {
     catMan.addCategoryEntry(""""command-line-handler"""",
                             """"x-default"""",
                             dch_contractID, true, true);
+    catMan.addCategoryEntry(""""command-line-validator"""",
+                            """"b-browser"""",
+                            bch_contractID, true, true);
   },
     
   unregisterSelf : function mod_unregself(compMgr, location, type) {
@@ -880,6 +900,8 @@ var Module = {
                                """"m-browser"""", true);
     catMan.deleteCategoryEntry(""""command-line-handler"""",
                                """"x-default"""", true);
+    catMan.deleteCategoryEntry(""""command-line-validator"""",
+                               """"b-browser"""", true);
   },
 
   canUnload: function(compMgr) {
diff --git a/browser/components/shell/src/nsWindowsShellService.cpp b/browser/components/shell/src/nsWindowsShellService.cpp
index cd76ec0..edc7179 100644
--- a/browser/components/shell/src/nsWindowsShellService.cpp
+++ b/browser/components/shell/src/nsWindowsShellService.cpp
@@ -151,7 +151,7 @@ OpenKeyForWriting(HKEY aStartKey, const char* aKeyName, HKEY* aKey,
 //
 //   HKCU\SOFTWARE\Classes\FirefoxHTML\
 //     DefaultIcon                      (default)         REG_SZ     <apppath>,1
-//     shell\open\command               (default)         REG_SZ     <apppath> -url """"%1"""" -requestPending
+//     shell\open\command               (default)         REG_SZ     <apppath> -requestPending -osint -url """"%1""""
 //     shell\open\ddeexec               (default)         REG_SZ     """"%1"""",,0,0,,,,
 //     shell\open\ddeexec               NoActivateHandler REG_SZ
 //                       \Application   (default)         REG_SZ     Firefox
@@ -163,7 +163,7 @@ OpenKeyForWriting(HKEY aStartKey, const char* aKeyName, HKEY* aKey,
 //                                      EditFlags         REG_DWORD  2
 //                                      FriendlyTypeName  REG_SZ     <appname> URL
 //     DefaultIcon                      (default)         REG_SZ     <apppath>,1
-//     shell\open\command               (default)         REG_SZ     <apppath> -url """"%1"""" -requestPending
+//     shell\open\command               (default)         REG_SZ     <apppath> -requestPending -osint -url """"%1""""
 //     shell\open\ddeexec               (default)         REG_SZ     """"%1"""",,0,0,,,,
 //     shell\open\ddeexec               NoActivateHandler REG_SZ
 //                       \Application   (default)         REG_SZ     Firefox
@@ -177,7 +177,7 @@ OpenKeyForWriting(HKEY aStartKey, const char* aKeyName, HKEY* aKey,
 //
 //   HKCU\SOFTWARE\Classes\<protocol>\
 //     DefaultIcon                      (default)         REG_SZ     <apppath>,1
-//     shell\open\command               (default)         REG_SZ     <apppath> -url """"%1"""" -requestPending
+//     shell\open\command               (default)         REG_SZ     <apppath> -requestPending -osint -url """"%1""""
 //     shell\open\ddeexec               (default)         REG_SZ     """"%1"""",,0,0,,,,
 //     shell\open\ddeexec               NoActivateHandler REG_SZ
 //                       \Application   (default)         REG_SZ     Firefox
@@ -232,7 +232,7 @@ typedef struct {
 #define CLS_HTML """"FirefoxHTML""""
 #define CLS_URL """"FirefoxURL""""
 #define VAL_FILE_ICON """"%APPPATH%,1""""
-#define VAL_OPEN """"\""""%APPPATH%\"""" -url \""""%1\"""" -requestPending""""
+#define VAL_OPEN """"\""""%APPPATH%\"""" -requestPending -osint -url \""""%1\""""""""
 
 #define MAKE_KEY_NAME1(PREFIX, MID) \
   PREFIX MID
diff --git a/browser/installer/windows/nsis/shared.nsh b/browser/installer/windows/nsis/shared.nsh
index 7516564..862cee9 100755
--- a/browser/installer/windows/nsis/shared.nsh
+++ b/browser/installer/windows/nsis/shared.nsh
@@ -136,7 +136,7 @@
   GetFullPathName $8 """"$INSTDIR\${FileMainEXE}""""
 
   StrCpy $0 """"SOFTWARE\Classes""""
-  StrCpy $2 """"$\""""$8$\"""" -url $\""""%1$\"""" -requestPending""""
+  StrCpy $2 """"$\""""$8$\"""" -requestPending -osint -url $\""""%1$\""""""""
 
   ; Associate the file handlers with FirefoxHTML
   WriteRegStr SHCTX """"$0\.htm""""   """""""" """"FirefoxHTML""""
@@ -364,7 +364,7 @@
 
   ; Store the command to open the app with an url in a register for easy access.
   GetFullPathName $8 """"$INSTDIR\${FileMainEXE}""""
-  StrCpy $1 """"$\""""$8$\"""" -url $\""""%1$\"""" -requestPending""""
+  StrCpy $1 """"$\""""$8$\"""" -requestPending -osint -url $\""""%1$\""""""""
 
   ; Always set the file and protocol handlers since they may specify a
   ; different path and the path is used by Vista when setting associations.
diff --git a/toolkit/components/commandlines/public/Makefile.in b/toolkit/components/commandlines/public/Makefile.in
index 64890e0..0342007 100644
--- a/toolkit/components/commandlines/public/Makefile.in
+++ b/toolkit/components/commandlines/public/Makefile.in
@@ -49,6 +49,7 @@ XPIDLSRCS = \
 	nsICommandLine.idl \
 	nsICommandLineRunner.idl \
 	nsICommandLineHandler.idl \
+	nsICommandLineValidator.idl \
 	$(NULL)
 
 include $(topsrcdir)/config/rules.mk
diff --git a/toolkit/components/commandlines/public/nsICommandLineValidator.idl b/toolkit/components/commandlines/public/nsICommandLineValidator.idl
new file mode 100644
index 0000000..327070d
--- /dev/null
+++ b/toolkit/components/commandlines/public/nsICommandLineValidator.idl
@@ -0,0 +1,70 @@
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is the Mozilla toolkit.
+ *
+ * The Initial Developer of the Original Code is
+ * Robert Strong <robert.bugzilla@gmail.com>
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s):
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+#include """"nsISupports.idl""""
+
+interface nsICommandLine;
+
+/**
+ * Validates arguments on the command line of an XUL application.
+ *
+ * Each validator is registered in the category """"command-line-validator"""".
+ * The entries in this category are read in alphabetical order, and each
+ * category value is treated as a service contractid implementing this
+ * interface.
+ *
+ * By convention, validator with ordinary priority should begin with """"m"""".
+ *
+ * Example:
+ * Category               Entry          Value
+ * command-line-validator b-browser      @mozilla.org/browser/clh;1
+ * command-line-validator m-edit         @mozilla.org/composer/clh;1
+ * command-line-validator m-irc          @mozilla.org/chatzilla/clh;1
+ *
+ */
+
+[scriptable, uuid(5ecaa593-7660-4a3a-957a-92d5770671c7)]
+interface nsICommandLineValidator : nsISupports
+{
+  /**
+   * Process the command-line validators in the proper order, calling
+   * """"validate()"""" on each.
+   *
+   * @throws NS_ERROR_ABORT if any validator throws NS_ERROR_ABORT. All other
+   *         errors thrown by validators will be silently ignored.
+   */
+  void validate(in nsICommandLine aCommandLine);
+};
diff --git a/toolkit/components/commandlines/src/nsCommandLine.cpp b/toolkit/components/commandlines/src/nsCommandLine.cpp
index 9f360de..706a109 100644
--- a/toolkit/components/commandlines/src/nsCommandLine.cpp
+++ b/toolkit/components/commandlines/src/nsCommandLine.cpp
@@ -39,6 +39,7 @@
 
 #include """"nsICategoryManager.h""""
 #include """"nsICommandLineHandler.h""""
+#include """"nsICommandLineValidator.h""""
 #include """"nsIClassInfoImpl.h""""
 #include """"nsIDOMWindow.h""""
 #include """"nsIFile.h""""
@@ -86,12 +87,16 @@ public:
 protected:
   ~nsCommandLine() { }
 
-  typedef nsresult (*EnumerateCallback)(nsICommandLineHandler* aHandler,
+  typedef nsresult (*EnumerateHandlersCallback)(nsICommandLineHandler* aHandler,
+					nsICommandLine* aThis,
+					void *aClosure);
+  typedef nsresult (*EnumerateValidatorsCallback)(nsICommandLineValidator* aValidator,
 					nsICommandLine* aThis,
 					void *aClosure);
 
   void appendArg(const char* arg);
-  nsresult EnumerateHandlers(EnumerateCallback aCallback, void *aClosure);
+  nsresult EnumerateHandlers(EnumerateHandlersCallback aCallback, void *aClosure);
+  nsresult EnumerateValidators(EnumerateValidatorsCallback aCallback, void *aClosure);
 
   nsStringArray     mArgs;
   PRUint32          mState;
@@ -537,7 +542,7 @@ nsCommandLine::Init(PRInt32 argc, char** argv, nsIFile* aWorkingDir,
 }
 
 nsresult
-nsCommandLine::EnumerateHandlers(EnumerateCallback aCallback, void *aClosure)
+nsCommandLine::EnumerateHandlers(EnumerateHandlersCallback aCallback, void *aClosure)
 {
   nsresult rv;
 
@@ -579,6 +584,55 @@ nsCommandLine::EnumerateHandlers(EnumerateCallback aCallback, void *aClosure)
   return rv;
 }
 
+nsresult
+nsCommandLine::EnumerateValidators(EnumerateValidatorsCallback aCallback, void *aClosure)
+{
+  nsresult rv;
+
+  nsCOMPtr<nsICategoryManager> catman
+    (do_GetService(NS_CATEGORYMANAGER_CONTRACTID));
+  NS_ENSURE_TRUE(catman, NS_ERROR_UNEXPECTED);
+
+  nsCOMPtr<nsISimpleEnumerator> entenum;
+  rv = catman->EnumerateCategory(""""command-line-validator"""",
+                                 getter_AddRefs(entenum));
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  nsCOMPtr<nsIUTF8StringEnumerator> strenum (do_QueryInterface(entenum));
+  NS_ENSURE_TRUE(strenum, NS_ERROR_UNEXPECTED);
+
+  nsCAutoString entry;
+  PRBool hasMore;
+  while (NS_SUCCEEDED(strenum->HasMore(&hasMore)) && hasMore) {
+    strenum->GetNext(entry);
+
+    nsXPIDLCString contractID;
+    rv = catman->GetCategoryEntry(""""command-line-validator"""",
+				  entry.get(),
+				  getter_Copies(contractID));
+    if (!contractID)
+      continue;
+
+    nsCOMPtr<nsICommandLineValidator> clv(do_GetService(contractID.get()));
+    if (!clv)
+      continue;
+
+    rv = (aCallback)(clv, this, aClosure);
+    if (rv == NS_ERROR_ABORT)
+      break;
+
+    rv = NS_OK;
+  }
+
+  return rv;
+}
+
+static nsresult
+EnumValidate(nsICommandLineValidator* aValidator, nsICommandLine* aThis, void*)
+{
+  return aValidator->Validate(aThis);
+}  
+
 static nsresult
 EnumRun(nsICommandLineHandler* aHandler, nsICommandLine* aThis, void*)
 {
@@ -590,6 +644,10 @@ nsCommandLine::Run()
 {
   nsresult rv;
 
+  rv = EnumerateValidators(EnumValidate, nsnull);
+  if (rv == NS_ERROR_ABORT)
+    return rv;
+
   rv = EnumerateHandlers(EnumRun, nsnull);
   if (rv == NS_ERROR_ABORT)
     return rv;
diff --git a/toolkit/xre/nsAppRunner.cpp b/toolkit/xre/nsAppRunner.cpp
index 5475b7c..dd1b729 100644
--- a/toolkit/xre/nsAppRunner.cpp
+++ b/toolkit/xre/nsAppRunner.cpp
@@ -386,13 +386,16 @@ static void RemoveArg(char **argv)
  * --arg (or /arg on win32/OS2).
  *
  * @param aArg the parameter to check. Must be lowercase.
+ * @param aCheckOSInt if true returns ARG_BAD if the osint argument is present
+ *        when aArg is also present.
  * @param if non-null, the -arg <data> will be stored in this pointer. This is *not*
  *        allocated, but rather a pointer to the argv data.
  */
 static ArgResult
-CheckArg(const char* aArg, const char **aParam = nsnull)
+CheckArg(const char* aArg, PRBool aCheckOSInt = PR_FALSE, const char **aParam = nsnull)
 {
   char **curarg = gArgv + 1; // skip argv[0]
+  ArgResult ar = ARG_NONE;
 
   while (*curarg) {
     char *arg = curarg[0];
@@ -409,7 +412,8 @@ CheckArg(const char* aArg, const char **aParam = nsnull)
       if (strimatch(aArg, arg)) {
         RemoveArg(curarg);
         if (!aParam) {
-          return ARG_FOUND;
+          ar = ARG_FOUND;
+          break;
         }
 
         if (*curarg) {
@@ -422,7 +426,8 @@ CheckArg(const char* aArg, const char **aParam = nsnull)
 
           *aParam = *curarg;
           RemoveArg(curarg);
-          return ARG_FOUND;
+          ar = ARG_FOUND;
+          break;
         }
         return ARG_BAD;
       }
@@ -431,7 +436,15 @@ CheckArg(const char* aArg, const char **aParam = nsnull)
     ++curarg;
   }
 
-  return ARG_NONE;
+  if (aCheckOSInt && ar == ARG_FOUND) {
+    ArgResult arOSInt = CheckArg(""""osint"""");
+    if (arOSInt == ARG_FOUND) {
+      ar = ARG_BAD;
+      PR_fprintf(PR_STDERR, """"Error: argument -osint is invalid\n"""");
+    }
+  }
+
+  return ar;
 }
 
 #if defined(XP_WIN)
@@ -1163,14 +1176,14 @@ HandleRemoteArgument(const char* remote, const char* aDesktopStartupID)
   ToLowerCase(program);
   const char *username = getenv(""""LOGNAME"""");
 
-  ar = CheckArg(""""p"""", &profile);
+  ar = CheckArg(""""p"""", PR_FALSE, &profile);
   if (ar == ARG_BAD) {
     PR_fprintf(PR_STDERR, """"Error: argument -p requires a profile name\n"""");
     return 1;
   }
 
   const char *temp = nsnull;
-  ar = CheckArg(""""a"""", &temp);
+  ar = CheckArg(""""a"""", PR_FALSE, &temp);
   if (ar == ARG_BAD) {
     PR_fprintf(PR_STDERR, """"Error: argument -a requires an application name\n"""");
     return 1;
@@ -1178,7 +1191,7 @@ HandleRemoteArgument(const char* remote, const char* aDesktopStartupID)
     program.Assign(temp);
   }
 
-  ar = CheckArg(""""u"""", &username);
+  ar = CheckArg(""""u"""", PR_FALSE, &username);
   if (ar == ARG_BAD) {
     PR_fprintf(PR_STDERR, """"Error: argument -u requires a username\n"""");
     return 1;
@@ -1221,7 +1234,7 @@ RemoteCommandLine(const char* aDesktopStartupID)
   const char *username = getenv(""""LOGNAME"""");
 
   const char *temp = nsnull;
-  ar = CheckArg(""""a"""", &temp);
+  ar = CheckArg(""""a"""", PR_TRUE, &temp);
   if (ar == ARG_BAD) {
     PR_fprintf(PR_STDERR, """"Error: argument -a requires an application name\n"""");
     return PR_FALSE;
@@ -1229,7 +1242,7 @@ RemoteCommandLine(const char* aDesktopStartupID)
     program.Assign(temp);
   }
 
-  ar = CheckArg(""""u"""", &username);
+  ar = CheckArg(""""u"""", PR_TRUE, &username);
   if (ar == ARG_BAD) {
     PR_fprintf(PR_STDERR, """"Error: argument -u requires a username\n"""");
     return PR_FALSE;
@@ -1697,10 +1710,17 @@ SelectProfile(nsIProfileLock* *aResult, nsINativeAppSupport* aNative,
   *aResult = nsnull;
   *aStartOffline = PR_FALSE;
 
+  ar = CheckArg(""""offline"""", PR_TRUE);
+  if (ar == ARG_BAD) {
+    PR_fprintf(PR_STDERR, """"Error: argument -offline is invalid when argument -osint is specified\n"""");
+    return NS_ERROR_FAILURE;
+  }
+
   arg = PR_GetEnv(""""XRE_START_OFFLINE"""");
-  if ((arg && *arg) || CheckArg(""""offline""""))
+  if ((arg && *arg) || ar)
     *aStartOffline = PR_TRUE;
 
+
   arg = PR_GetEnv(""""XRE_PROFILE_PATH"""");
   if (arg && *arg) {
     nsCOMPtr<nsILocalFile> lf;
@@ -1725,17 +1745,22 @@ SelectProfile(nsIProfileLock* *aResult, nsINativeAppSupport* aNative,
 
     // Clear out flags that we handled (or should have handled!) last startup.
     const char *dummy;
-    CheckArg(""""p"""", &dummy);
-    CheckArg(""""profile"""", &dummy);
+    CheckArg(""""p"""", PR_FALSE, &dummy);
+    CheckArg(""""profile"""", PR_FALSE, &dummy);
     CheckArg(""""profilemanager"""");
 
     return NS_LockProfilePath(lf, localDir, nsnull, aResult);
   }
 
-  if (CheckArg(""""migration""""))
+  ar = CheckArg(""""migration"""", PR_TRUE);
+  if (ar == ARG_BAD) {
+    PR_fprintf(PR_STDERR, """"Error: argument -migration is invalid when argument -osint is specified\n"""");
+    return NS_ERROR_FAILURE;
+  } else if (ar == ARG_FOUND) {
     gDoMigration = PR_TRUE;
+  }
 
-  ar = CheckArg(""""profile"""", &arg);
+  ar = CheckArg(""""profile"""", PR_TRUE, &arg);
   if (ar == ARG_BAD) {
     PR_fprintf(PR_STDERR, """"Error: argument -profile requires a path\n"""");
     return NS_ERROR_FAILURE;
@@ -1760,7 +1785,7 @@ SelectProfile(nsIProfileLock* *aResult, nsINativeAppSupport* aNative,
   rv = NS_NewToolkitProfileService(getter_AddRefs(profileSvc));
   NS_ENSURE_SUCCESS(rv, rv);
 
-  ar = CheckArg(""""createprofile"""", &arg);
+  ar = CheckArg(""""createprofile"""", PR_TRUE, &arg);
   if (ar == ARG_BAD) {
     PR_fprintf(PR_STDERR, """"Error: argument -createprofile requires a profile name\n"""");
     return NS_ERROR_FAILURE;
@@ -1822,11 +1847,21 @@ SelectProfile(nsIProfileLock* *aResult, nsINativeAppSupport* aNative,
     }
   }
 
-  ar = CheckArg(""""p"""", &arg);
+  ar = CheckArg(""""p"""", PR_FALSE, &arg);
   if (ar == ARG_BAD) {
+    ar = CheckArg(""""osint"""");
+    if (ar == ARG_FOUND) {
+      PR_fprintf(PR_STDERR, """"Error: argument -p is invalid when argument -osint is specified\n"""");
+      return NS_ERROR_FAILURE;
+    }
     return ShowProfileManager(profileSvc, aNative);
   }
   if (ar) {
+    ar = CheckArg(""""osint"""");
+    if (ar == ARG_FOUND) {
+      PR_fprintf(PR_STDERR, """"Error: argument -p is invalid when argument -osint is specified\n"""");
+      return NS_ERROR_FAILURE;
+    }
     nsCOMPtr<nsIToolkitProfile> profile;
     rv = profileSvc->GetProfileByName(nsDependentCString(arg),
                                       getter_AddRefs(profile));
@@ -1854,7 +1889,11 @@ SelectProfile(nsIProfileLock* *aResult, nsINativeAppSupport* aNative,
     return ShowProfileManager(profileSvc, aNative);
   }
 
-  if (CheckArg(""""profilemanager"""")) {
+  ar = CheckArg(""""profilemanager"""", PR_TRUE);
+  if (ar == ARG_BAD) {
+    PR_fprintf(PR_STDERR, """"Error: argument -profilemanager is invalid when argument -osint is specified\n"""");
+    return NS_ERROR_FAILURE;
+  } else if (ar == ARG_FOUND) {
     return ShowProfileManager(profileSvc, aNative);
   }
 
@@ -2219,6 +2258,7 @@ int
 XRE_main(int argc, char* argv[], const nsXREAppData* aAppData)
 {
   nsresult rv;
+  ArgResult ar;
   NS_TIMELINE_MARK(""""enter main"""");
 
 #ifdef DEBUG
@@ -2448,17 +2488,28 @@ XRE_main(int argc, char* argv[], const nsXREAppData* aAppData)
   ScopedFPHandler handler;
 #endif /* XP_OS2 */
 
+  ar = CheckArg(""""safe-mode"""", PR_TRUE);
+  if (ar == ARG_BAD) {
+    PR_fprintf(PR_STDERR, """"Error: argument -safe-mode is invalid when argument -osint is specified\n"""");
+    return 1;
+  } else if (ar == ARG_FOUND) {
+    gSafeMode = PR_TRUE;
+  }
+
 #ifdef XP_MACOSX
-  if (CheckArg(""""safe-mode"""") || GetCurrentKeyModifiers() & optionKey)
-#else
-  if (CheckArg(""""safe-mode""""))
-#endif
+  if (GetCurrentKeyModifiers() & optionKey)
     gSafeMode = PR_TRUE;
+#endif
 
   // Handle -no-remote command line argument. Setup the environment to
   // better accommodate other components and various restart scenarios.
-  if (CheckArg(""""no-remote""""))
+  ar = CheckArg(""""no-remote"""", PR_TRUE);
+  if (ar == ARG_BAD) {
+    PR_fprintf(PR_STDERR, """"Error: argument -a requires an application name\n"""");
+    return 1;
+  } else if (ar == ARG_FOUND) {
     PR_SetEnv(""""MOZ_NO_REMOTE=1"""");
+  }
 
   // Handle -help and -version command line arguments.
   // They should return quickly, so we deal with them here.
@@ -2483,7 +2534,11 @@ XRE_main(int argc, char* argv[], const nsXREAppData* aAppData)
       return 1;
 
     // Check for -register, which registers chrome and then exits immediately.
-    if (CheckArg(""""register"""")) {
+    ar = CheckArg(""""register"""", PR_TRUE);
+    if (ar == ARG_BAD) {
+      PR_fprintf(PR_STDERR, """"Error: argument -register is invalid when argument -osint is specified\n"""");
+      return 1;
+    } else if (ar == ARG_FOUND) {
       ScopedXPCOMStartup xpcom;
       rv = xpcom.Initialize();
       NS_ENSURE_SUCCESS(rv, 1);
@@ -2584,7 +2639,7 @@ XRE_main(int argc, char* argv[], const nsXREAppData* aAppData)
     // handle -remote now that xpcom is fired up
 
     const char* xremotearg;
-    ArgResult ar = CheckArg(""""remote"""", &xremotearg);
+    ar = CheckArg(""""remote"""", PR_TRUE, &xremotearg);
     if (ar == ARG_BAD) {
       PR_fprintf(PR_STDERR, """"Error: -remote requires an argument\n"""");
       return 1;
@@ -2804,7 +2859,21 @@ XRE_main(int argc, char* argv[], const nsXREAppData* aAppData)
           nsCOMPtr<nsIExtensionManager> em(do_GetService(""""@mozilla.org/extensions/manager;1""""));
           NS_ENSURE_TRUE(em, 1);
 
-          if (CheckArg(""""install-global-extension"""") || CheckArg(""""install-global-theme"""")) {
+          ar = CheckArg(""""install-global-extension"""", PR_TRUE);
+          if (ar == ARG_BAD) {
+            PR_fprintf(PR_STDERR, """"Error: argument -install-global-extension is invalid when argument -osint is specified\n"""");
+            return 1;
+          } else if (ar == ARG_FOUND) {
+            // Do the required processing and then shut down.
+            em->HandleCommandLineArgs(cmdLine);
+            return 0;
+          }
+
+          ar = CheckArg(""""install-global-theme"""", PR_TRUE);
+          if (ar == ARG_BAD) {
+            PR_fprintf(PR_STDERR, """"Error: argument -install-global-theme is invalid when argument -osint is specified\n"""");
+            return 1;
+          } else if (ar == ARG_FOUND) {
             // Do the required processing and then shut down.
             em->HandleCommandLineArgs(cmdLine);
             return 0;"""
dc40b9463dfe036b5517083f8cf4ec5e5fb103f7,72335,382778,peterv@propagandism.org,"Part 2 of the fix for bug 382778. r=smaug, sr=sicking.
",1183467612,"""diff --git a/editor/libeditor/html/nsHTMLEditRules.cpp b/editor/libeditor/html/nsHTMLEditRules.cpp
index 3fc1a0f..c0fc5538 100644
--- a/editor/libeditor/html/nsHTMLEditRules.cpp
+++ b/editor/libeditor/html/nsHTMLEditRules.cpp
@@ -5609,6 +5609,21 @@ nsHTMLEditRules::PromoteRange(nsIDOMRange *inRange,
   return res;
 } 
 
+class nsUniqueFunctor : public nsBoolDomIterFunctor
+{
+public:
+  nsUniqueFunctor(nsCOMArray<nsIDOMNode> &aArray) : mArray(aArray)
+  {
+  }
+  virtual PRBool operator()(nsIDOMNode* aNode)  // used to build list of all nodes iterator covers
+  {
+    return mArray.IndexOf(aNode) < 0;
+  }
+
+private:
+  nsCOMArray<nsIDOMNode> &mArray;
+};
+
 ///////////////////////////////////////////////////////////////////////////
 // GetNodesForOperation: run through the ranges in the array and construct 
 //                       a new array of nodes to be acted on.
@@ -5673,12 +5688,25 @@ nsHTMLEditRules::GetNodesForOperation(nsCOMArray<nsIDOMRange>& inArrayOfRanges,
   {
     opRange = inArrayOfRanges[i];
     
-    nsTrivialFunctor functor;
     nsDOMSubtreeIterator iter;
     res = iter.Init(opRange);
     if (NS_FAILED(res)) return res;
-    res = iter.AppendList(functor, outArrayOfNodes);
-    if (NS_FAILED(res)) return res;    
+    if (outArrayOfNodes.Count() == 0) {
+      nsTrivialFunctor functor;
+      res = iter.AppendList(functor, outArrayOfNodes);
+      if (NS_FAILED(res)) return res;    
+    }
+    else {
+      // We don't want duplicates in outArrayOfNodes, so we use an
+      // iterator/functor that only return nodes that are not already in
+      // outArrayOfNodes.
+      nsCOMArray<nsIDOMNode> nodes;
+      nsUniqueFunctor functor(outArrayOfNodes);
+      res = iter.AppendList(functor, nodes);
+      if (NS_FAILED(res)) return res;
+      if (!outArrayOfNodes.AppendObjects(nodes))
+        return NS_ERROR_OUT_OF_MEMORY;
+    }
   }    
 
   // certain operations should not act on li's and td's, but rather inside """
2ee71208020265b191d70b78f86903968676e4bd,72379,382778,peterv@propagandism.org,"Fix for bug 382778. r=smaug, sr=sicking.
",1183384887,"""diff --git a/editor/libeditor/base/PlaceholderTxn.cpp b/editor/libeditor/base/PlaceholderTxn.cpp
index 818385f..d06ba1d 100644
--- a/editor/libeditor/base/PlaceholderTxn.cpp
+++ b/editor/libeditor/base/PlaceholderTxn.cpp
@@ -133,8 +133,8 @@ NS_IMETHODIMP PlaceholderTxn::Merge(nsITransaction *aTransaction, PRBool *aDidMe
   // we are absorbing all txn's if mAbsorb is lit.
   if (mAbsorb)
   { 
-    IMETextTxn*  otherTxn = nsnull;
-    if (NS_SUCCEEDED(aTransaction->QueryInterface(IMETextTxn::GetCID(),(void**)&otherTxn)) && otherTxn)
+    nsRefPtr<IMETextTxn> otherTxn;
+    if (NS_SUCCEEDED(aTransaction->QueryInterface(IMETextTxn::GetCID(), getter_AddRefs(otherTxn))) && otherTxn)
     {
       // special handling for IMETextTxn's: they need to merge with any previous
       // IMETextTxn in this placeholder, if possible.
@@ -157,7 +157,6 @@ NS_IMETHODIMP PlaceholderTxn::Merge(nsITransaction *aTransaction, PRBool *aDidMe
           AppendChild(editTxn);
         }
       }
-      NS_IF_RELEASE(otherTxn);
     }
     else if (!plcTxn)  // see bug 171243: just drop incoming placeholders on the floor.
     {                  // their children will be swallowed by this preexisting one.
diff --git a/editor/libeditor/base/nsEditor.cpp b/editor/libeditor/base/nsEditor.cpp
index adbd4dc..682613b 100644
--- a/editor/libeditor/base/nsEditor.cpp
+++ b/editor/libeditor/base/nsEditor.cpp
@@ -645,8 +645,9 @@ nsEditor::DoTransaction(nsITransaction *aTxn)
     // this transaction goes through here.  I bet this is a record.
     
     // We start off with an EditTxn since that's what the factory returns.
-    EditTxn *editTxn;
-    result = TransactionFactory::GetNewTransaction(PlaceholderTxn::GetCID(), &editTxn);
+    nsRefPtr<EditTxn> editTxn;
+    result = TransactionFactory::GetNewTransaction(PlaceholderTxn::GetCID(),
+                                                   getter_AddRefs(editTxn));
     if (NS_FAILED(result)) { return result; }
     if (!editTxn) { return NS_ERROR_NULL_POINTER; }
 
@@ -683,9 +684,6 @@ nsEditor::DoTransaction(nsITransaction *aTxn)
         }
       }
     }
-    
-    // txn mgr will now own this if it's around, and if it isn't we don't care
-    NS_IF_RELEASE(editTxn);    
   }
 
   if (aTxn)
@@ -1269,13 +1267,12 @@ nsEditor::InsertFromDrop(nsIDOMEvent *aEvent)
 NS_IMETHODIMP 
 nsEditor::SetAttribute(nsIDOMElement *aElement, const nsAString & aAttribute, const nsAString & aValue)
 {
-  ChangeAttributeTxn *txn;
-  nsresult result = CreateTxnForSetAttribute(aElement, aAttribute, aValue, &txn);
+  nsRefPtr<ChangeAttributeTxn> txn;
+  nsresult result = CreateTxnForSetAttribute(aElement, aAttribute, aValue,
+                                             getter_AddRefs(txn));
   if (NS_SUCCEEDED(result))  {
     result = DoTransaction(txn);  
   }
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
   return result;
 }
 
@@ -1305,13 +1302,12 @@ nsEditor::GetAttributeValue(nsIDOMElement *aElement,
 NS_IMETHODIMP 
 nsEditor::RemoveAttribute(nsIDOMElement *aElement, const nsAString& aAttribute)
 {
-  ChangeAttributeTxn *txn;
-  nsresult result = CreateTxnForRemoveAttribute(aElement, aAttribute, &txn);
+  nsRefPtr<ChangeAttributeTxn> txn;
+  nsresult result = CreateTxnForRemoveAttribute(aElement, aAttribute,
+                                                getter_AddRefs(txn));
   if (NS_SUCCEEDED(result))  {
     result = DoTransaction(txn);  
   }
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
   return result;
 }
 
@@ -1393,8 +1389,9 @@ NS_IMETHODIMP nsEditor::CreateNode(const nsAString& aTag,
   for (i = 0; i < mActionListeners.Count(); i++)
     mActionListeners[i]->WillCreateNode(aTag, aParent, aPosition);
 
-  CreateElementTxn *txn;
-  nsresult result = CreateTxnForCreateElement(aTag, aParent, aPosition, &txn);
+  nsRefPtr<CreateElementTxn> txn;
+  nsresult result = CreateTxnForCreateElement(aTag, aParent, aPosition,
+                                              getter_AddRefs(txn));
   if (NS_SUCCEEDED(result)) 
   {
     result = DoTransaction(txn);  
@@ -1404,8 +1401,6 @@ NS_IMETHODIMP nsEditor::CreateNode(const nsAString& aTag,
       NS_ASSERTION((NS_SUCCEEDED(result)), """"GetNewNode can't fail if txn::DoTransaction succeeded."""");
     }
   }
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
   
   mRangeUpdater.SelAdjCreateNode(aParent, aPosition);
   
@@ -1426,13 +1421,12 @@ NS_IMETHODIMP nsEditor::InsertNode(nsIDOMNode * aNode,
   for (i = 0; i < mActionListeners.Count(); i++)
     mActionListeners[i]->WillInsertNode(aNode, aParent, aPosition);
 
-  InsertElementTxn *txn;
-  nsresult result = CreateTxnForInsertElement(aNode, aParent, aPosition, &txn);
+  nsRefPtr<InsertElementTxn> txn;
+  nsresult result = CreateTxnForInsertElement(aNode, aParent, aPosition,
+                                              getter_AddRefs(txn));
   if (NS_SUCCEEDED(result))  {
     result = DoTransaction(txn);  
   }
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
 
   mRangeUpdater.SelAdjInsertNode(aParent, aPosition);
 
@@ -1454,8 +1448,8 @@ nsEditor::SplitNode(nsIDOMNode * aNode,
   for (i = 0; i < mActionListeners.Count(); i++)
     mActionListeners[i]->WillSplitNode(aNode, aOffset);
 
-  SplitElementTxn *txn;
-  nsresult result = CreateTxnForSplitNode(aNode, aOffset, &txn);
+  nsRefPtr<SplitElementTxn> txn;
+  nsresult result = CreateTxnForSplitNode(aNode, aOffset, getter_AddRefs(txn));
   if (NS_SUCCEEDED(result))  
   {
     result = DoTransaction(txn);
@@ -1465,8 +1459,6 @@ nsEditor::SplitNode(nsIDOMNode * aNode,
       NS_ASSERTION((NS_SUCCEEDED(result)), """"result must succeeded for GetNewNode"""");
     }
   }
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
 
   mRangeUpdater.SelAdjSplitNode(aNode, aOffset, *aNewLeftNode);
 
@@ -1501,15 +1493,12 @@ nsEditor::JoinNodes(nsIDOMNode * aLeftNode,
   for (i = 0; i < mActionListeners.Count(); i++)
     mActionListeners[i]->WillJoinNodes(aLeftNode, aRightNode, aParent);
 
-  JoinElementTxn *txn;
-  result = CreateTxnForJoinNode(aLeftNode, aRightNode, &txn);
+  nsRefPtr<JoinElementTxn> txn;
+  result = CreateTxnForJoinNode(aLeftNode, aRightNode, getter_AddRefs(txn));
   if (NS_SUCCEEDED(result))  {
     result = DoTransaction(txn);  
   }
 
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
-
   mRangeUpdater.SelAdjJoinNodes(aLeftNode, aRightNode, aParent, offset, (PRInt32)oldLeftNodeLen);
   
   for (i = 0; i < mActionListeners.Count(); i++)
@@ -1532,15 +1521,12 @@ NS_IMETHODIMP nsEditor::DeleteNode(nsIDOMNode * aElement)
   for (i = 0; i < mActionListeners.Count(); i++)
     mActionListeners[i]->WillDeleteNode(aElement);
 
-  DeleteElementTxn *txn;
-  result = CreateTxnForDeleteElement(aElement, &txn);
+  nsRefPtr<DeleteElementTxn> txn;
+  result = CreateTxnForDeleteElement(aElement, getter_AddRefs(txn));
   if (NS_SUCCEEDED(result))  {
     result = DoTransaction(txn);  
   }
 
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
-
   for (i = 0; i < mActionListeners.Count(); i++)
     mActionListeners[i]->DidDeleteNode(aElement, result);
 
@@ -2586,7 +2572,7 @@ NS_IMETHODIMP nsEditor::InsertTextIntoTextNodeImpl(const nsAString& aStringToIns
                                                      nsIDOMCharacterData *aTextNode, 
                                                      PRInt32 aOffset, PRBool suppressIME)
 {
-  EditTxn *txn;
+  nsRefPtr<EditTxn> txn;
   nsresult result;
   // suppressIME s used when editor must insert text, yet this text is not
   // part of current ime operation.  example: adjusting whitespace around an ime insertion.
@@ -2635,13 +2621,18 @@ NS_IMETHODIMP nsEditor::InsertTextIntoTextNodeImpl(const nsAString& aStringToIns
       } // for
     } // if
 
-    result = CreateTxnForIMEText(aStringToInsert, (IMETextTxn**)&txn);
+    nsRefPtr<IMETextTxn> imeTxn;
+    result = CreateTxnForIMEText(aStringToInsert, getter_AddRefs(imeTxn));
+    txn = imeTxn;
   }
   else
   {
-    result = CreateTxnForInsertText(aStringToInsert, aTextNode, aOffset, (InsertTextTxn**)&txn);
+    nsRefPtr<InsertTextTxn> insertTxn;
+    result = CreateTxnForInsertText(aStringToInsert, aTextNode, aOffset,
+                                    getter_AddRefs(insertTxn));
+    txn = insertTxn;
   }
-  if (NS_FAILED(result)) return result;  // we potentially leak txn here?
+  if (NS_FAILED(result)) return result;
 
   // let listeners know what's up
   PRInt32 i;
@@ -2677,13 +2668,10 @@ NS_IMETHODIMP nsEditor::InsertTextIntoTextNodeImpl(const nsAString& aStringToIns
     {
       DeleteNode(mIMETextNode);
       mIMETextNode = nsnull;
-      ((IMETextTxn*)txn)->MarkFixed();  // mark the ime txn """"fixed""""
+      NS_STATIC_CAST(IMETextTxn*, txn.get())->MarkFixed();  // mark the ime txn """"fixed""""
     }
   }
   
-  // The transaction system (if any) has taken ownership of txns.
-  // aggTxn released at end of routine.
-  NS_IF_RELEASE(txn);
   return result;
 }
 
@@ -2820,8 +2808,9 @@ NS_IMETHODIMP nsEditor::DeleteText(nsIDOMCharacterData *aElement,
                               PRUint32             aOffset,
                               PRUint32             aLength)
 {
-  DeleteTextTxn *txn;
-  nsresult result = CreateTxnForDeleteText(aElement, aOffset, aLength, &txn);
+  nsRefPtr<DeleteTextTxn> txn;
+  nsresult result = CreateTxnForDeleteText(aElement, aOffset, aLength,
+                                           getter_AddRefs(txn));
   nsAutoRules beginRulesSniffing(this, kOpDeleteText, nsIEditor::ePrevious);
   if (NS_SUCCEEDED(result))  
   {
@@ -2836,8 +2825,6 @@ NS_IMETHODIMP nsEditor::DeleteText(nsIDOMCharacterData *aElement,
     for (i = 0; i < mActionListeners.Count(); i++)
       mActionListeners[i]->DidDeleteText(aElement, aOffset, aLength, result);
   }
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
   return result;
 }
 
@@ -4406,10 +4393,12 @@ nsEditor::DeleteSelectionImpl(nsIEditor::EDirection aAction)
   nsCOMPtr<nsISelection>selection;
   nsresult res = GetSelection(getter_AddRefs(selection));
   if (NS_FAILED(res)) return res;
-  EditAggregateTxn *txn;
+  nsRefPtr<EditAggregateTxn> txn;
   nsCOMPtr<nsIDOMNode> deleteNode;
   PRInt32 deleteCharOffset = 0, deleteCharLength = 0;
-  res = CreateTxnForDeleteSelection(aAction, &txn, getter_AddRefs(deleteNode), &deleteCharOffset, &deleteCharLength);
+  res = CreateTxnForDeleteSelection(aAction, getter_AddRefs(txn),
+                                    getter_AddRefs(deleteNode),
+                                    &deleteCharOffset, &deleteCharLength);
   nsCOMPtr<nsIDOMCharacterData> deleteCharData(do_QueryInterface(deleteNode));
 
   if (NS_SUCCEEDED(res))  
@@ -4442,9 +4431,6 @@ nsEditor::DeleteSelectionImpl(nsIEditor::EDirection aAction)
         mActionListeners[i]->DidDeleteNode(deleteNode, res);
   }
 
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
-
   return res;
 }
 
diff --git a/editor/libeditor/html/nsHTMLCSSUtils.cpp b/editor/libeditor/html/nsHTMLCSSUtils.cpp
index 874c1f3..f115c0a 100644
--- a/editor/libeditor/html/nsHTMLCSSUtils.cpp
+++ b/editor/libeditor/html/nsHTMLCSSUtils.cpp
@@ -57,6 +57,7 @@
 #include """"nsHTMLCSSUtils.h""""
 #include """"nsColor.h""""
 #include """"nsAttrName.h""""
+#include """"nsAutoPtr.h""""
 
 static
 void ProcessBValue(const nsAString * aInputString, nsAString & aOutputString,
@@ -465,8 +466,9 @@ nsresult
 nsHTMLCSSUtils::SetCSSProperty(nsIDOMElement *aElement, nsIAtom * aProperty, const nsAString & aValue,
                                PRBool aSuppressTransaction)
 {
-  ChangeCSSInlineStyleTxn *txn;
-  nsresult result = CreateCSSPropertyTxn(aElement, aProperty, aValue, &txn, PR_FALSE);
+  nsRefPtr<ChangeCSSInlineStyleTxn> txn;
+  nsresult result = CreateCSSPropertyTxn(aElement, aProperty, aValue,
+                                         getter_AddRefs(txn), PR_FALSE);
   if (NS_SUCCEEDED(result))  {
     if (aSuppressTransaction) {
       result = txn->DoTransaction();
@@ -475,8 +477,6 @@ nsHTMLCSSUtils::SetCSSProperty(nsIDOMElement *aElement, nsIAtom * aProperty, con
       result = mHTMLEditor->DoTransaction(txn);
     }
   }
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
   return result;
 }
 
@@ -499,8 +499,9 @@ nsresult
 nsHTMLCSSUtils::RemoveCSSProperty(nsIDOMElement *aElement, nsIAtom * aProperty, const nsAString & aValue,
                                   PRBool aSuppressTransaction)
 {
-  ChangeCSSInlineStyleTxn *txn;
-  nsresult result = CreateCSSPropertyTxn(aElement, aProperty, aValue, &txn, PR_TRUE);
+  nsRefPtr<ChangeCSSInlineStyleTxn> txn;
+  nsresult result = CreateCSSPropertyTxn(aElement, aProperty, aValue,
+                                         getter_AddRefs(txn), PR_TRUE);
   if (NS_SUCCEEDED(result))  {
     if (aSuppressTransaction) {
       result = txn->DoTransaction();
@@ -509,8 +510,6 @@ nsHTMLCSSUtils::RemoveCSSProperty(nsIDOMElement *aElement, nsIAtom * aProperty,
       result = mHTMLEditor->DoTransaction(txn);
     }
   }
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
   return result;
 }
 
diff --git a/editor/libeditor/html/nsHTMLEditor.cpp b/editor/libeditor/html/nsHTMLEditor.cpp
index 111851b..e97058f 100644
--- a/editor/libeditor/html/nsHTMLEditor.cpp
+++ b/editor/libeditor/html/nsHTMLEditor.cpp
@@ -708,11 +708,11 @@ nsHTMLEditor::IsBlockNode(nsIDOMNode *aNode)
 NS_IMETHODIMP 
 nsHTMLEditor::SetDocumentTitle(const nsAString &aTitle)
 {
-  SetDocTitleTxn *txn;
-  nsresult result = TransactionFactory::GetNewTransaction(SetDocTitleTxn::GetCID(), (EditTxn **)&txn);
+  nsRefPtr<EditTxn> txn;
+  nsresult result = TransactionFactory::GetNewTransaction(SetDocTitleTxn::GetCID(), getter_AddRefs(txn));
   if (NS_SUCCEEDED(result))  
   {
-    result = txn->Init(this, &aTitle);
+    result = NS_STATIC_CAST(SetDocTitleTxn*, txn.get())->Init(this, &aTitle);
 
     if (NS_SUCCEEDED(result)) 
     {
@@ -721,8 +721,6 @@ nsHTMLEditor::SetDocumentTitle(const nsAString &aTitle)
 
       result = nsEditor::DoTransaction(txn);  
     }
-    // The transaction system (if any) has taken ownership of txn
-    NS_IF_RELEASE(txn);
   }
   return result;
 }
@@ -3569,8 +3567,8 @@ nsHTMLEditor::RemoveStyleSheet(const nsAString &aURL)
   if (!sheet)
     return NS_ERROR_UNEXPECTED;
 
-  RemoveStyleSheetTxn* txn;
-  rv = CreateTxnForRemoveStyleSheet(sheet, &txn);
+  nsRefPtr<RemoveStyleSheetTxn> txn;
+  rv = CreateTxnForRemoveStyleSheet(sheet, getter_AddRefs(txn));
   if (!txn) rv = NS_ERROR_NULL_POINTER;
   if (NS_SUCCEEDED(rv))
   {
@@ -3581,8 +3579,6 @@ nsHTMLEditor::RemoveStyleSheet(const nsAString &aURL)
     // Remove it from our internal list
     rv = RemoveStyleSheetFromList(aURL);
   }
-  // The transaction system (if any) has taken ownership of txns
-  NS_IF_RELEASE(txn);
   
   return rv;
 }
@@ -4100,8 +4096,8 @@ nsHTMLEditor::StyleSheetLoaded(nsICSSStyleSheet* aSheet, PRBool aWasAlternate,
   if (!mLastStyleSheetURL.IsEmpty())
     RemoveStyleSheet(mLastStyleSheetURL);
 
-  AddStyleSheetTxn* txn;
-  rv = CreateTxnForAddStyleSheet(aSheet, &txn);
+  nsRefPtr<AddStyleSheetTxn> txn;
+  rv = CreateTxnForAddStyleSheet(aSheet, getter_AddRefs(txn));
   if (!txn) rv = NS_ERROR_NULL_POINTER;
   if (NS_SUCCEEDED(rv))
   {
@@ -4129,8 +4125,6 @@ nsHTMLEditor::StyleSheetLoaded(nsICSSStyleSheet* aSheet, PRBool aWasAlternate,
       }
     }
   }
-  // The transaction system (if any) has taken ownership of txns
-  NS_IF_RELEASE(txn);
 
   return NS_OK;
 }
diff --git a/editor/libeditor/text/nsTextEditRules.cpp b/editor/libeditor/text/nsTextEditRules.cpp
index 81f0c5f..f78e18d 100644
--- a/editor/libeditor/text/nsTextEditRules.cpp
+++ b/editor/libeditor/text/nsTextEditRules.cpp
@@ -62,6 +62,7 @@
 #include """"nsUnicharUtils.h""""
 #include """"nsILookAndFeel.h""""
 #include """"nsWidgetsCID.h""""
+#include """"DeleteTextTxn.h""""
 
 // for IBMBIDI
 #include """"nsIPresShell.h""""
@@ -1225,17 +1226,16 @@ nsTextEditRules::ReplaceNewlines(nsIDOMRange *aRange)
       if (offset == -1) break; // done with this node
       
       // delete the newline
-      EditTxn *txn;
+      nsRefPtr<DeleteTextTxn> txn;
       // note 1: we are not telling edit listeners about these because they don't care
       // note 2: we are not wrapping these in a placeholder because we know they already are,
       //         or, failing that, undo is disabled
-      res = mEditor->CreateTxnForDeleteText(textNode, offset, 1, (DeleteTextTxn**)&txn);
+      res = mEditor->CreateTxnForDeleteText(textNode, offset, 1,
+                                            getter_AddRefs(txn));
       if (NS_FAILED(res))  return res; 
       if (!txn)  return NS_ERROR_OUT_OF_MEMORY;
       res = mEditor->DoTransaction(txn); 
       if (NS_FAILED(res))  return res; 
-      // The transaction system (if any) has taken ownership of txn
-      NS_IF_RELEASE(txn);
       
       // insert a break
       res = mEditor->CreateBR(textNode, offset, address_of(brNode));"""
d9cca2d13a25571ddc1c93148911dbf9e1a0f5ee,72881,384663,Olli.Pettay@helsinki.fi,"Bug 384663, r+sr=bz
",1182181420,"""diff --git a/content/base/src/nsGenericElement.cpp b/content/base/src/nsGenericElement.cpp
index d4c43fc..53a2f24 100644
--- a/content/base/src/nsGenericElement.cpp
+++ b/content/base/src/nsGenericElement.cpp
@@ -3572,7 +3572,8 @@ nsGenericElement::SetAttrAndNotify(PRInt32 aNamespaceID,
   NS_ENSURE_SUCCESS(rv, rv);
 
   if (document) {
-    nsXBLBinding *binding = document->BindingManager()->GetBinding(this);
+    nsRefPtr<nsXBLBinding> binding =
+      document->BindingManager()->GetBinding(this);
     if (binding) {
       binding->AttributeChanged(aName, aNamespaceID, PR_FALSE, aNotify);
     }
diff --git a/content/xbl/src/nsXBLPrototypeBinding.cpp b/content/xbl/src/nsXBLPrototypeBinding.cpp
index dd384ca..705e400 100644
--- a/content/xbl/src/nsXBLPrototypeBinding.cpp
+++ b/content/xbl/src/nsXBLPrototypeBinding.cpp
@@ -547,12 +547,13 @@ nsXBLPrototypeBinding::AttributeChanged(nsIAtom* aAttribute,
     return;
 
   // Iterate over the elements in the array.
-  nsIContent* content = GetImmediateChild(nsGkAtoms::content);
+  nsCOMPtr<nsIContent> content = GetImmediateChild(nsGkAtoms::content);
   while (xblAttr) {
     nsIContent* element = xblAttr->GetElement();
 
-    nsIContent *realElement = LocateInstance(aChangedElement, content,
-                                             aAnonymousContent, element);
+    nsCOMPtr<nsIContent> realElement = LocateInstance(aChangedElement, content,
+                                                      aAnonymousContent,
+                                                      element);
 
     if (realElement) {
       nsIAtom* dstAttr = xblAttr->GetDstAttribute();"""
6dba454815b3ca3ae1b89dc377c0c455a6f2f5c7,72958,369211,mrbkap@gmail.com,"Use a better filename when eval is used across scopes. bug 369211, r=brendan
",1181941226,"""diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index abf3720..3472bcc 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -1345,9 +1345,14 @@ obj_eval(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 
     str = JSVAL_TO_STRING(argv[0]);
     if (caller) {
-        file = caller->script->filename;
-        line = js_PCToLineNumber(cx, caller->script, caller->pc);
         principals = JS_EvalFramePrincipals(cx, fp, caller);
+        if (principals == caller->script->principals) {
+            file = caller->script->filename;
+            line = js_PCToLineNumber(cx, caller->script, caller->pc);
+        } else {
+            file = principals->codebase;
+            line = 0;
+        }
     } else {
         file = NULL;
         line = 0;"""
a6d978178261ecdff72d439cb6d329f77d9a0e8d,72987,369666,bclary@bclary.com,"JavaScript Test - regression test for bug 369666, by Brendan Eich
",1181860989,"""diff --git a/js/tests/js1_7/regress/regress-369666-01.js b/js/tests/js1_7/regress/regress-369666-01.js
new file mode 100755
index 0000000..8257ae6
--- /dev/null
+++ b/js/tests/js1_7/regress/regress-369666-01.js
@@ -0,0 +1,92 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Brendan Eich
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-369666-01.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 369666;
+var summary = 'inner function declaration in let-induced outer ' +
+  'function body gets wrong scope.';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+
+  function foo() {
+    let x = 42
+
+      function bar() {
+      return x;
+    }
+
+    return bar;
+  }
+
+  print(foo()());
+
+  baz = false;
+
+  function foo2() {
+    let x = 42
+
+      function bar() {
+      return x;
+    }
+
+    try {
+      if (baz)
+        return bar;
+    } finally {
+      print('finally', x);
+    }
+    return bar;
+  }
+
+  print(foo2()());
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_7/regress/regress-369666-02.js b/js/tests/js1_7/regress/regress-369666-02.js
new file mode 100755
index 0000000..e5be2a9
--- /dev/null
+++ b/js/tests/js1_7/regress/regress-369666-02.js
@@ -0,0 +1,96 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Brendan Eich
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-369666-02.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 369666;
+var summary = 'inner function declaration in let-induced outer ' +
+  'function body gets wrong scope.';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+
+  function foo() {
+    let x = 42
+
+      function bar() {
+      return x;
+    }
+
+    return bar;
+  }
+
+  print(foo()());
+
+  baz = false;
+
+  function foo2() {
+    let x = 42
+
+      function bar() {
+      return x;
+    }
+
+    function bletch() {
+      return x * x;
+    }
+
+    try {
+      if (baz)
+        return bar;
+    } finally {
+      print('finally', x);
+    }
+    return bletch;
+  }
+
+  print(foo2()());
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
bd7954ed3da0cfff852a66fffc9be8dded7e5da4,72988,351102,bclary@bclary.com,"JavaScript Tests - regression tests for bug 351102, by Jesse Ruderman, Igor Bukanov
",1181860743,"""diff --git a/js/tests/js1_7/extensions/regress-351102-03.js b/js/tests/js1_7/extensions/regress-351102-03.js
new file mode 100755
index 0000000..6b1a9a4
--- /dev/null
+++ b/js/tests/js1_7/extensions/regress-351102-03.js
@@ -0,0 +1,77 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-351102-03.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 351102;
+var summary = 'try/catch-guard/finally GC issues';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var f;
+  f = function()
+    {
+      try
+      {
+        d.d.d;
+      }
+      catch([] if gc())
+      {
+      }
+      catch(y)
+      {
+        print(y);
+      }
+    };
+
+  f();
+  f();
+
+  reportCompare(expect, actual, summary + ': 3');
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_7/extensions/regress-351102-04.js b/js/tests/js1_7/extensions/regress-351102-04.js
new file mode 100755
index 0000000..03c622a
--- /dev/null
+++ b/js/tests/js1_7/extensions/regress-351102-04.js
@@ -0,0 +1,67 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-351102-04.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 351102;
+var summary = 'try/catch-guard/finally GC issues';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var f;
+  try
+  {
+    try { @foo } catch([] if gc()) { }
+  }
+  catch(ex)
+  {
+  }
+  reportCompare(expect, actual, summary + ': 4');
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_7/extensions/regress-351102-05.js b/js/tests/js1_7/extensions/regress-351102-05.js
new file mode 100755
index 0000000..cc306c7
--- /dev/null
+++ b/js/tests/js1_7/extensions/regress-351102-05.js
@@ -0,0 +1,67 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-351102-05.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 351102;
+var summary = 'try/catch-guard/finally GC issues';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var f;
+  try
+  {
+    try { d.d.d } catch([] if gc()) { }
+  }
+  catch(ex)
+  {
+  }
+  reportCompare(expect, actual, summary + ': 5');
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_7/extensions/regress-351102-07.js b/js/tests/js1_7/extensions/regress-351102-07.js
new file mode 100755
index 0000000..fdef17f
--- /dev/null
+++ b/js/tests/js1_7/extensions/regress-351102-07.js
@@ -0,0 +1,76 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-351102-07.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 351102;
+var summary = 'try/catch-guard/finally GC issues';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var f;
+  var obj = { get a() {
+      try {
+        throw 1;
+      } catch (e) {
+      }
+      return false;
+    }};
+
+  try {
+    throw obj;
+  } catch ({a: a} if a) {
+    throw """"Unreachable"""";
+  } catch (e) {
+    if (e !== obj)
+      throw """"Unexpected exception: """"+uneval(e);
+  }
+  reportCompare(expect, actual, summary + ': 7');
+
+  exitFunc ('test');
+}"""
550aabd226d73b51f8f81fb44ebb41a7e9c624c7,72989,375183,bclary@bclary.com,"JavaScript Tests - regression test for bug 375183, by Igor Bukanov
",1181860449,"""diff --git a/js/tests/js1_5/extensions/regress-375183.js b/js/tests/js1_5/extensions/regress-375183.js
new file mode 100755
index 0000000..0ac98b1
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-375183.js
@@ -0,0 +1,95 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-375183.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 375184;
+var summary = '__noSuchMethod__ should not allocate beyond fp->script->depth';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var obj = { get __noSuchMethod__() {
+      print(""""Executed"""");
+      return new Object();
+    }};
+
+  try
+  {
+    obj.x();
+  }
+  catch(ex)
+  {
+  }
+
+  reportCompare(expect, actual, summary + ':1');
+
+  obj = { __noSuchMethod__: {} };
+  try
+  {
+    obj.x();
+  }
+  catch(ex)
+  {
+  }
+
+  reportCompare(expect, actual, summary + ':2');
+
+  obj = { }
+  obj.__noSuchMethod__ = {};
+  try
+  {
+    obj.x();
+  }
+  catch(ex)
+  {
+  }
+
+  reportCompare(expect, actual, summary + ':3');
+
+  exitFunc ('test');
+}"""
bf896c184e2f75d23ec262361fca22e374ad5724,72990,367630,bclary@bclary.com,"JavaScript Tests - regression test for bug 367630, by Jesse Ruderman
",1181860277,"""diff --git a/js/tests/js1_5/extensions/regress-367630.js b/js/tests/js1_5/extensions/regress-367630.js
new file mode 100755
index 0000000..4fdd3c6
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367630.js
@@ -0,0 +1,77 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-367630.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 367630;
+var summary = 'Do not crash in js_PCToLineNumber with invalid sharp expression';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  try
+  {
+    uneval(#1={a:#1#}); (function() { return #1# })();
+  }
+  catch(ex)
+  {
+    print(ex);
+  }
+  reportCompare(expect, actual, summary);
+
+  try
+  {
+    w = {a:#1=function(){return #1#}}; w.a();
+  }
+  catch(ex)
+  {
+    print(ex);
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
cf564c0cb7d40f3fde79e5d626ccdf21d214c105,72992,351102,bclary@bclary.com,"JavaScript Test - regression tests for bug 351102, by Brendan Eich, Igor Bukanov
",1181859818,"""diff --git a/js/tests/js1_5/extensions/regress-351102-01.js b/js/tests/js1_5/extensions/regress-351102-01.js
new file mode 100755
index 0000000..4fb313b
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-351102-01.js
@@ -0,0 +1,72 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Brendan Eich
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-351102-01.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 351102;
+var summary = 'try/catch-guard/finally GC issues';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var f;
+
+  f = function () {
+    try {
+      throw new Error('bad');
+    } catch (e if (e = null, gc(), false)) {
+    } catch (e) {
+      // e is dangling now
+    }
+  };
+
+  f();
+
+  reportCompare(expect, actual, summary + ': 1');
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-351102-02.js b/js/tests/js1_5/extensions/regress-351102-02.js
new file mode 100755
index 0000000..edfd8f0
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-351102-02.js
@@ -0,0 +1,78 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-351102-02.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 351102;
+var summary = 'try/catch-guard/finally GC issues';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var f;
+  f = function ()
+    {
+      var a = null;
+      try {  
+        a();
+      } catch (e) {
+      }
+      return false;
+    };
+
+  try {  
+    throw 1;
+  } catch (e if f()) {
+  } catch (e if e == 1) {
+    print(""""GOOD"""");
+  } catch (e) {
+    print(""""BAD: """"+e);
+  }
+
+  reportCompare(expect, actual, summary + ': 2');
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-351102-06.js b/js/tests/js1_5/extensions/regress-351102-06.js
new file mode 100755
index 0000000..7218ced
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-351102-06.js
@@ -0,0 +1,67 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-351102-06.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 351102;
+var summary = 'try/catch-guard/finally GC issues';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var f;
+  try
+  {
+    try { null.a } catch(e if (e = null, gc())) { }
+  }
+  catch(ex)
+  {
+  }
+  reportCompare(expect, actual, summary + ': 6');
+
+  exitFunc ('test');
+}"""
5ec745944b275fccad0301040a4fd750dcd56fbf,72993,367561,bclary@bclary.com,"JavaScript Tests - regression test for bug 367561, by Igor Bukanov
",1181859591,"""diff --git a/js/tests/js1_5/Regress/regress-367561-01.js b/js/tests/js1_5/Regress/regress-367561-01.js
new file mode 100755
index 0000000..4f66f18
--- /dev/null
+++ b/js/tests/js1_5/Regress/regress-367561-01.js
@@ -0,0 +1,70 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-367561-01.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 367561;
+var summary = 'JSOP_(GET|SET)METHOD and JSOP_SETCONST with > 64K atoms';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var N = 1 << 16;
+  var src = 'var x = /';
+  var array = Array();
+  for (var i = 0; i != N/2; ++i)
+    array[i] = i;
+  src += array.join('/;x=/')+'/; x=""""';
+  src += array.join('"""";x=""""')+'"""";';
+  src += 'y.some_function();';
+  var f = Function(src);
+  var src2 = f.toString();
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/Regress/regress-367561-03.js b/js/tests/js1_5/Regress/regress-367561-03.js
new file mode 100755
index 0000000..955d560
--- /dev/null
+++ b/js/tests/js1_5/Regress/regress-367561-03.js
@@ -0,0 +1,69 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-367561-03.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 367561;
+var summary = 'JSOP_(GET|SET)METHOD and JSOP_SETCONST with > 64K atoms';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var N = 1 << 16;
+  var src = 'var x = /';
+  var array = Array();
+  for (var i = 0; i != N/2; ++i)
+    array[i] = i;
+  src += array.join('/;x=/')+'/; x=""""';
+  src += array.join('"""";x=""""')+'"""";';
+  src += 'const some_const = 10';
+  eval(src);
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
c54558e56a7236aae4f1726e96bf2c93d3621ab0,72994,366122,bclary@bclary.com,"JavaScript Test - regression test for bug 366122, by Igor Bukanov
",1181859349,"""diff --git a/js/tests/js1_5/Regress/regress-366122.js b/js/tests/js1_5/Regress/regress-366122.js
new file mode 100755
index 0000000..de67e2a
--- /dev/null
+++ b/js/tests/js1_5/Regress/regress-366122.js
@@ -0,0 +1,79 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-366122.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 366122;
+var summary = 'Compile large script';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  function exploit() {
+    var code = """""""", obj = {};
+    for(var i = 0; i < 0x10000; i++) {
+      if(i == 10242) {
+        code += """"void 0x10000050505050;\n"""";
+      } else {
+        code += """"void 'x"""" + i + """"';\n"""";
+      }
+    }
+    code += """"export undefined;\n"""";
+    code += """"void 125;\n"""";
+    eval(code);
+  }
+  try
+  {
+    exploit();
+  }
+  catch(ex)
+  {
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
80e0258a728e2ac60004c00cdd46d4f3b7e95ec3,72996,375711,bclary@bclary.com,"JavaScript Test - regression test for bug 375711, by Jesse Ruderman
",1181858658,"""diff --git a/js/tests/ecma_3/RegExp/regress-375711.js b/js/tests/ecma_3/RegExp/regress-375711.js
new file mode 100755
index 0000000..9c2bf77
--- /dev/null
+++ b/js/tests/ecma_3/RegExp/regress-375711.js
@@ -0,0 +1,68 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-375711.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 375711;
+var summary = 'Do not assert with /[Q-b]/i.exec("""""""")';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  try
+  {
+    expect = 'SyntaxError: invalid range in character class';
+    eval('/[Q-b]/i.exec("""""""")');
+  }
+  catch(ex)
+  {
+    actual = ex + '';
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
3b6dd2d9e894bcc6927f51da2924ecf3d4695dfc,73007,371360,bzbarsky@mit.edu,"Don't allow loads to start in a docshell that's firing the unload event.  Alsodon't allow document.open of the document in that docshell.  Bug 371360,r=biesi, sr=jst
",1181845085,"""diff --git a/content/html/document/src/nsHTMLDocument.cpp b/content/html/document/src/nsHTMLDocument.cpp
index 3b24aed..08f25b3 100644
--- a/content/html/document/src/nsHTMLDocument.cpp
+++ b/content/html/document/src/nsHTMLDocument.cpp
@@ -2040,6 +2040,16 @@ nsHTMLDocument::OpenCommon(const nsACString& aContentType, PRBool aReplace)
     return NS_ERROR_DOM_NOT_SUPPORTED_ERR;
   }
 
+  // check whether we're in the middle of unload.  If so, ignore this call.
+  nsCOMPtr<nsIDocShell> shell = do_QueryReferent(mDocumentContainer);
+  if (shell) {
+    PRBool inUnload;
+    shell->GetIsInUnload(&inUnload);
+    if (inUnload) {
+      return NS_OK;
+    }
+  }
+
   // Note: We want to use GetDocumentFromContext here because this document
   // should inherit the security information of the document that's opening us,
   // (since if it's secure, then it's presumeably trusted).
diff --git a/docshell/base/nsDocShell.cpp b/docshell/base/nsDocShell.cpp
index 1ff8df7..2bbbc31 100644
--- a/docshell/base/nsDocShell.cpp
+++ b/docshell/base/nsDocShell.cpp
@@ -671,6 +671,9 @@ nsDocShell::LoadURI(nsIURI * aURI,
                     PRUint32 aLoadFlags,
                     PRBool aFirstParty)
 {
+    if (mFiredUnloadEvent) {
+      return NS_OK; // JS may not handle returning of an error code
+    }
     nsresult rv;
     nsCOMPtr<nsIURI> referrer;
     nsCOMPtr<nsIInputStream> postStream;
@@ -973,6 +976,7 @@ nsDocShell::FirePageHideNotification(PRBool aIsUnload)
             }
         }
     }
+
     return NS_OK;
 }
 
@@ -2198,6 +2202,13 @@ nsDocShell::SetChildOffset(PRUint32 aChildOffset)
     return NS_OK;
 }
 
+NS_IMETHODIMP
+nsDocShell::GetIsInUnload(PRBool* aIsInUnload)
+{
+    *aIsInUnload = mFiredUnloadEvent;
+    return NS_OK;
+}
+
 //*****************************************************************************
 // nsDocShell::nsIDocShellTreeNode
 //*****************************************************************************   
@@ -2630,6 +2641,12 @@ nsDocShell::IsPrintingOrPP(PRBool aDisplayErrorDialog)
   return mIsPrintingOrPP;
 }
 
+PRBool
+nsDocShell::IsNavigationAllowed(PRBool aDisplayPrintErrorDialog)
+{
+    return !IsPrintingOrPP(aDisplayPrintErrorDialog) && !mFiredUnloadEvent;
+}
+
 //*****************************************************************************
 // nsDocShell::nsIWebNavigation
 //*****************************************************************************   
@@ -2637,7 +2654,7 @@ nsDocShell::IsPrintingOrPP(PRBool aDisplayErrorDialog)
 NS_IMETHODIMP
 nsDocShell::GetCanGoBack(PRBool * aCanGoBack)
 {
-    if (IsPrintingOrPP(PR_FALSE)) {
+    if (!IsNavigationAllowed(PR_FALSE)) {
       *aCanGoBack = PR_FALSE;
       return NS_OK; // JS may not handle returning of an error code
     }
@@ -2654,7 +2671,7 @@ nsDocShell::GetCanGoBack(PRBool * aCanGoBack)
 NS_IMETHODIMP
 nsDocShell::GetCanGoForward(PRBool * aCanGoForward)
 {
-    if (IsPrintingOrPP(PR_FALSE)) {
+    if (!IsNavigationAllowed(PR_FALSE)) {
       *aCanGoForward = PR_FALSE;
       return NS_OK; // JS may not handle returning of an error code
     }
@@ -2671,7 +2688,7 @@ nsDocShell::GetCanGoForward(PRBool * aCanGoForward)
 NS_IMETHODIMP
 nsDocShell::GoBack()
 {
-    if (IsPrintingOrPP()) {
+    if (!IsNavigationAllowed()) {
       return NS_OK; // JS may not handle returning of an error code
     }
     nsresult rv;
@@ -2687,7 +2704,7 @@ nsDocShell::GoBack()
 NS_IMETHODIMP
 nsDocShell::GoForward()
 {
-    if (IsPrintingOrPP()) {
+    if (!IsNavigationAllowed()) {
       return NS_OK; // JS may not handle returning of an error code
     }
     nsresult rv;
@@ -2702,7 +2719,7 @@ nsDocShell::GoForward()
 
 NS_IMETHODIMP nsDocShell::GotoIndex(PRInt32 aIndex)
 {
-    if (IsPrintingOrPP()) {
+    if (!IsNavigationAllowed()) {
       return NS_OK; // JS may not handle returning of an error code
     }
     nsresult rv;
@@ -2723,7 +2740,7 @@ nsDocShell::LoadURI(const PRUnichar * aURI,
                     nsIInputStream * aPostStream,
                     nsIInputStream * aHeaderStream)
 {
-    if (IsPrintingOrPP()) {
+    if (!IsNavigationAllowed()) {
       return NS_OK; // JS may not handle returning of an error code
     }
     nsCOMPtr<nsIURI> uri;
@@ -3107,7 +3124,7 @@ nsDocShell::LoadErrorPage(nsIURI *aURI, const PRUnichar *aURL,
 NS_IMETHODIMP
 nsDocShell::Reload(PRUint32 aReloadFlags)
 {
-    if (IsPrintingOrPP()) {
+    if (!IsNavigationAllowed()) {
       return NS_OK; // JS may not handle returning of an error code
     }
     nsresult rv;
diff --git a/docshell/base/nsDocShell.h b/docshell/base/nsDocShell.h
index 74a75c5..7128622 100644
--- a/docshell/base/nsDocShell.h
+++ b/docshell/base/nsDocShell.h
@@ -380,6 +380,7 @@ protected:
                              const PRUnichar *aPage,
                              const PRUnichar *aDescription,
                              nsIChannel* aFailedChannel);
+    PRBool IsNavigationAllowed(PRBool aDisplayPrintErrorDialog = PR_TRUE);
     PRBool IsPrintingOrPP(PRBool aDisplayErrorDialog = PR_TRUE);
 
     nsresult SetBaseUrlForWyciwyg(nsIContentViewer * aContentViewer);
diff --git a/docshell/base/nsIDocShell.idl b/docshell/base/nsIDocShell.idl
index 81fa00b..86a2935 100644
--- a/docshell/base/nsIDocShell.idl
+++ b/docshell/base/nsIDocShell.idl
@@ -68,7 +68,7 @@ interface nsILayoutHistoryState;
 interface nsISecureBrowserUI;
 interface nsIDOMStorage;
 
-[scriptable, uuid(db67b973-ba1a-49fa-b5b4-7670d203fa0e)]
+[scriptable, uuid(10ed386d-8598-408c-b571-e75ad18edeb0)]
 interface nsIDocShell : nsISupports
 {
   /**
@@ -184,6 +184,9 @@ interface nsIDocShell : nsISupports
    * Notify the associated content viewer and all child docshells that they are
    * about to be hidden.  If |isUnload| is true, then the document is being
    * unloaded as well.
+   *
+   * @param isUnload if true, fire the unload event in addition to the pagehide
+   *                 event.
    */
   [noscript] void firePageHideNotification(in boolean isUnload);
 
@@ -438,5 +441,12 @@ interface nsIDocShell : nsISupports
    * Set the offset of this child in its container.
    */
   [noscript] void setChildOffset(in unsigned long offset);
+
+  /**
+   * Find out whether the docshell is currently in the middle of a page
+   * transition (after the onunload event has fired, but before the new
+   * document has been set up)
+   */
+  readonly attribute boolean isInUnload;
 };
 
diff --git a/docshell/base/nsWebShell.cpp b/docshell/base/nsWebShell.cpp
index 9812201..ad27f54 100644
--- a/docshell/base/nsWebShell.cpp
+++ b/docshell/base/nsWebShell.cpp
@@ -768,6 +768,11 @@ nsWebShell::OnLinkClick(nsIContent* aContent,
                         nsIInputStream* aHeadersDataStream)
 {
   NS_ASSERTION(NS_IsMainThread(), """"wrong thread"""");
+
+  if (mFiredUnloadEvent) {
+    return NS_OK;
+  }
+  
   nsCOMPtr<nsIRunnable> ev =
       new OnLinkClickEvent(this, aContent, aURI, aTargetSpec,
                            aPostDataStream, aHeadersDataStream);
@@ -791,6 +796,10 @@ nsWebShell::OnLinkClickSync(nsIContent *aContent,
     *aRequest = nsnull;
   }
 
+  if (mFiredUnloadEvent) {
+    return NS_OK;
+  }
+
   {
     // defer to an external protocol handler if necessary...
     nsCOMPtr<nsIExternalProtocolService> extProtService = do_GetService(NS_EXTERNALPROTOCOLSERVICE_CONTRACTID);"""
de72c0427df63d97d70d6cb93628921ec0bf8446,73020,382444,Olli.Pettay@helsinki.fi,"Bug 382444, r+sr=roc
",1181810241,"""diff --git a/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp b/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
index 7950c7d..d8051226 100644
--- a/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
+++ b/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
@@ -317,6 +317,7 @@ nsTreeBodyFrame::CalcMaxRowWidth()
 void
 nsTreeBodyFrame::Destroy()
 {
+  mScrollEvent.Revoke();
   // Make sure we cancel any posted callbacks. 
   if (mReflowCallbackPosted) {
     PresContext()->PresShell()->CancelReflowCallback(this);
@@ -470,9 +471,9 @@ nsTreeBodyFrame::ReflowFinished()
         EnsureRowIsVisibleInternal(parts, currentIndex);
     }
 
-    InvalidateScrollbars(parts);
-    UpdateScrollbars(parts);
-    CheckOverflow(parts);
+    if (!FullScrollbarsUpdate(PR_FALSE)) {
+      return PR_FALSE;
+    }
   }
 
   mReflowCallbackPosted = PR_FALSE;
@@ -533,14 +534,8 @@ NS_IMETHODIMP nsTreeBodyFrame::SetView(nsITreeView * aView)
     PRBool isInReflow;
     PresContext()->PresShell()->IsReflowLocked(&isInReflow);
     if (!isInReflow) {
-      ScrollParts parts = GetScrollParts();
       // The scrollbar will need to be updated.
-      InvalidateScrollbars(parts);
-
-      // Reset scrollbar position.
-      UpdateScrollbars(parts);
-
-      CheckOverflow(parts);
+      FullScrollbarsUpdate(PR_FALSE);
     } else if (!mReflowCallbackPosted) {
       mReflowCallbackPosted = PR_TRUE;
       PresContext()->PresShell()->PostReflowCallback(this);
@@ -858,6 +853,7 @@ void
 nsTreeBodyFrame::CheckOverflow(const ScrollParts& aParts)
 {
   PRBool verticalOverflowChanged = PR_FALSE;
+  PRBool horizontalOverflowChanged = PR_FALSE;
 
   if (!mVerticalOverflow && mRowCount > mPageLength) {
     mVerticalOverflow = PR_TRUE;
@@ -868,47 +864,39 @@ nsTreeBodyFrame::CheckOverflow(const ScrollParts& aParts)
     verticalOverflowChanged = PR_TRUE;
   }
 
-  nsPresContext* presContext = PresContext();
+  if (aParts.mColumnsScrollableView) {
+    nsRect bounds = aParts.mColumnsScrollableView->View()->GetBounds();
+    if (bounds.width != 0) {
+      /* Ignore overflows that are less than half a pixel. Yes these happen
+         all over the place when flex boxes are compressed real small. 
+         Probably a result of a rounding errors somewhere in the layout code. */
+      bounds.width += nsPresContext::CSSPixelsToAppUnits(0.5f);
+      if (!mHorizontalOverflow && bounds.width < mHorzWidth) {
+        mHorizontalOverflow = PR_TRUE;
+        horizontalOverflowChanged = PR_TRUE;
+      } else if (mHorizontalOverflow && bounds.width >= mHorzWidth) {
+        mHorizontalOverflow = PR_FALSE;
+        horizontalOverflowChanged = PR_TRUE;
+      }
+    }
+  }
+ 
+  nsRefPtr<nsPresContext> presContext = PresContext();
+  nsCOMPtr<nsIContent> content = mContent;
 
   if (verticalOverflowChanged) {
     nsScrollPortEvent event(PR_TRUE, mVerticalOverflow ? NS_SCROLLPORT_OVERFLOW
                             : NS_SCROLLPORT_UNDERFLOW, nsnull);
     event.orient = nsScrollPortEvent::vertical;
-
-    nsEventStatus status = nsEventStatus_eIgnore;
-    nsEventDispatcher::Dispatch(mContent, presContext, &event, nsnull, &status);
-  }
-
-  if (!aParts.mColumnsScrollableView)
-    return;
-
-  nsRect bounds = aParts.mColumnsScrollableView->View()->GetBounds();
-  if (bounds.width == 0)
-    return;
-
-  /* Ignore overflows that are less than half a pixel. Yes these happen
-     all over the place when flex boxes are compressed real small. 
-     Probably a result of a rounding errors somewhere in the layout code. */
-  bounds.width += nsPresContext::CSSPixelsToAppUnits(0.5f);
-  
-  PRBool horizontalOverflowChanged = PR_FALSE;
-  if (!mHorizontalOverflow && bounds.width < mHorzWidth) {
-    mHorizontalOverflow = PR_TRUE;
-    horizontalOverflowChanged = PR_TRUE;
-  } else if (mHorizontalOverflow && bounds.width >= mHorzWidth) {
-    mHorizontalOverflow = PR_FALSE;
-    horizontalOverflowChanged = PR_TRUE;
+    nsEventDispatcher::Dispatch(content, presContext, &event);
   }
 
   if (horizontalOverflowChanged) {
     nsScrollPortEvent event(PR_TRUE,
                             mHorizontalOverflow ? NS_SCROLLPORT_OVERFLOW
-                                                : NS_SCROLLPORT_UNDERFLOW,
-                            nsnull);
+                            : NS_SCROLLPORT_UNDERFLOW, nsnull);
     event.orient = nsScrollPortEvent::horizontal;
-
-    nsEventStatus status = nsEventStatus_eIgnore;
-    nsEventDispatcher::Dispatch(mContent, presContext, &event, nsnull, &status);
+    nsEventDispatcher::Dispatch(content, presContext, &event);
   }
 }
 
@@ -1822,18 +1810,18 @@ NS_IMETHODIMP nsTreeBodyFrame::RowCountChanged(PRInt32 aIndex, PRInt32 aCount)
 
   if (mTopRowIndex == 0) {    
     // Just update the scrollbar and return.
-    InvalidateScrollbars(parts);
-    CheckOverflow(parts);
-    MarkDirtyIfSelect();
+    if (FullScrollbarsUpdate(PR_FALSE)) {
+      MarkDirtyIfSelect();
+    }
     return NS_OK;
   }
 
+  PRBool needsInvalidation = PR_FALSE;
   // Adjust our top row index.
   if (aCount > 0) {
     if (mTopRowIndex > aIndex) {
       // Rows came in above us.  Augment the top row index.
       mTopRowIndex += aCount;
-      UpdateScrollbars(parts);
     }
   }
   else if (aCount < 0) {
@@ -1841,22 +1829,19 @@ NS_IMETHODIMP nsTreeBodyFrame::RowCountChanged(PRInt32 aIndex, PRInt32 aCount)
       // No need to invalidate. The remove happened
       // completely above us (offscreen).
       mTopRowIndex -= count;
-      UpdateScrollbars(parts);
     }
     else if (mTopRowIndex >= aIndex) {
       // This is a full-blown invalidate.
       if (mTopRowIndex + mPageLength > mRowCount - 1) {
         mTopRowIndex = PR_MAX(0, mRowCount - 1 - mPageLength);
-        UpdateScrollbars(parts);
       }
-      Invalidate();
+      needsInvalidation = PR_TRUE;
     }
   }
 
-  InvalidateScrollbars(parts);
-  CheckOverflow(parts);
-  MarkDirtyIfSelect();
-
+  if (FullScrollbarsUpdate(needsInvalidation)) {
+    MarkDirtyIfSelect();
+  }
   return NS_OK;
 }
 
@@ -1877,14 +1862,10 @@ NS_IMETHODIMP nsTreeBodyFrame::EndUpdateBatch()
       PRInt32 countBeforeUpdate = mRowCount;
       mView->GetRowCount(&mRowCount);
       if (countBeforeUpdate != mRowCount) {
-        ScrollParts parts = GetScrollParts();
-        
         if (mTopRowIndex + mPageLength > mRowCount - 1) {
           mTopRowIndex = PR_MAX(0, mRowCount - 1 - mPageLength);
-          UpdateScrollbars(parts);
         }
-        InvalidateScrollbars(parts);
-        CheckOverflow(parts);
+        FullScrollbarsUpdate(PR_FALSE);
       }
     }
   }
@@ -3736,7 +3717,11 @@ nsTreeBodyFrame::PaintBackgroundLayer(nsStyleContext*      aStyleContext,
 // Scrolling
 NS_IMETHODIMP nsTreeBodyFrame::EnsureRowIsVisible(PRInt32 aRow)
 {
-  return EnsureRowIsVisibleInternal(GetScrollParts(), aRow);
+  ScrollParts parts = GetScrollParts();
+  nsresult rv = EnsureRowIsVisibleInternal(parts, aRow);
+  NS_ENSURE_SUCCESS(rv, rv);
+  UpdateScrollbars(parts);
+  return rv;
 }
 
 nsresult nsTreeBodyFrame::EnsureRowIsVisibleInternal(const ScrollParts& aParts, PRInt32 aRow)
@@ -3791,21 +3776,32 @@ NS_IMETHODIMP nsTreeBodyFrame::EnsureCellIsVisible(PRInt32 aRow, nsITreeColumn*
     if(NS_FAILED(rv)) return rv;
   }
 
-  return EnsureRowIsVisibleInternal(parts, aRow);
+  rv = EnsureRowIsVisibleInternal(parts, aRow);
+  NS_ENSURE_SUCCESS(rv, rv);
+  UpdateScrollbars(parts);
+  return rv;
 }
 
 NS_IMETHODIMP nsTreeBodyFrame::ScrollToCell(PRInt32 aRow, nsITreeColumn* aCol)
 {
   ScrollParts parts = GetScrollParts();
   nsresult rv = ScrollToRowInternal(parts, aRow);
-  if(NS_FAILED(rv)) return rv;
+  NS_ENSURE_SUCCESS(rv, rv);
 
-  return ScrollToColumnInternal(parts, aCol);
+  rv = ScrollToColumnInternal(parts, aCol);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  UpdateScrollbars(parts);
+  return rv;
 }
 
 NS_IMETHODIMP nsTreeBodyFrame::ScrollToColumn(nsITreeColumn* aCol)
 {
-  return ScrollToColumnInternal(GetScrollParts(), aCol);
+  ScrollParts parts = GetScrollParts();
+  nsresult rv = ScrollToColumnInternal(parts, aCol);
+  NS_ENSURE_SUCCESS(rv, rv);
+  UpdateScrollbars(parts);
+  return rv;
 }
 
 nsresult nsTreeBodyFrame::ScrollToColumnInternal(const ScrollParts& aParts,
@@ -3825,20 +3821,26 @@ nsresult nsTreeBodyFrame::ScrollToColumnInternal(const ScrollParts& aParts,
 
 NS_IMETHODIMP nsTreeBodyFrame::ScrollToHorizontalPosition(PRInt32 aHorizontalPosition)
 {
-  ScrollHorzInternal(GetScrollParts(),
-                     nsPresContext::CSSPixelsToAppUnits(aHorizontalPosition));
-  return NS_OK;
+  ScrollParts parts = GetScrollParts();
+  PRInt32 position = nsPresContext::CSSPixelsToAppUnits(aHorizontalPosition);
+  nsresult rv = ScrollHorzInternal(parts, position);
+  NS_ENSURE_SUCCESS(rv, rv);
+  UpdateScrollbars(parts);
+  return rv;
 }
 
 NS_IMETHODIMP nsTreeBodyFrame::ScrollToRow(PRInt32 aRow)
 {
-  return ScrollToRowInternal(GetScrollParts(), aRow);
+  ScrollParts parts = GetScrollParts();
+  nsresult rv = ScrollToRowInternal(parts, aRow);
+  NS_ENSURE_SUCCESS(rv, rv);
+  UpdateScrollbars(parts);
+  return rv;
 }
 
 nsresult nsTreeBodyFrame::ScrollToRowInternal(const ScrollParts& aParts, PRInt32 aRow)
 {
   ScrollInternal(aParts, aRow);
-  UpdateScrollbars(aParts);
 
 #if defined(XP_MAC) || defined(XP_MACOSX)
   // mac can't process the event loop during a drag, so if we're dragging,
@@ -3911,8 +3913,6 @@ nsTreeBodyFrame::ScrollInternal(const ScrollParts& aParts, PRInt32 aRow)
 
   mTopRowIndex += delta;
 
-  nsPresContext* presContext = PresContext();
-
   // See if we have a transparent background or a background image.  
   // If we do, then we cannot blit.
   const nsStyleBackground* background = GetStyleBackground();
@@ -3922,19 +3922,13 @@ nsTreeBodyFrame::ScrollInternal(const ScrollParts& aParts, PRInt32 aRow)
   } else {
     nsIWidget* widget = nsLeafBoxFrame::GetView()->GetWidget();
     if (widget) {
-      nscoord rowHeightAsPixels = presContext->AppUnitsToDevPixels(mRowHeight);
+      nscoord rowHeightAsPixels =
+        PresContext()->AppUnitsToDevPixels(mRowHeight);
       widget->Scroll(0, -delta*rowHeightAsPixels, nsnull);
     }
   }
 
-  nsScrollbarEvent event(PR_TRUE, NS_SCROLL_EVENT, nsnull);
-  // scroll events fired at elements don't bubble (although scroll events
-  // fired at documents do, to the window)
-  event.flags |= NS_EVENT_FLAG_CANT_BUBBLE;
-
-  nsEventStatus status = nsEventStatus_eIgnore;
-  nsEventDispatcher::Dispatch(mContent, presContext, &event, nsnull, &status);
-
+  PostScrollEvent();
   return NS_OK;
 }
 
@@ -3969,26 +3963,11 @@ nsTreeBodyFrame::ScrollHorzInternal(const ScrollParts& aParts, PRInt32 aPosition
     }
   }
 
-  // Reflect the change in the scrollbar 
-  nsAutoString curPos;
-  curPos.AppendInt(aPosition);
-  nsWeakFrame weakFrame(this);
-  aParts.mHScrollbarContent->SetAttr(kNameSpaceID_None,
-                                     nsGkAtoms::curpos, curPos, PR_TRUE);
-  NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
   // Update the column scroll view
   aParts.mColumnsScrollableView->ScrollTo(mHorzPosition, 0, 0);
 
   // And fire off an event about it all
-  nsScrollbarEvent event(PR_TRUE, NS_SCROLL_EVENT, nsnull);
-  // scroll events fired at elements don't bubble (although scroll events
-  // fired at documents do, to the window)
-  event.flags |= NS_EVENT_FLAG_CANT_BUBBLE;
-
-  nsEventStatus status = nsEventStatus_eIgnore;
-  nsEventDispatcher::Dispatch(mContent, PresContext(), &event, nsnull,
-                              &status);
-
+  PostScrollEvent();
   return NS_OK;
 }
 
@@ -4002,7 +3981,6 @@ nsTreeBodyFrame::ScrollbarButtonPressed(nsISupports* aScrollbar, PRInt32 aOldInd
 
   ScrollParts parts = GetScrollParts();
 
-  nsWeakFrame weakFrame(this);
   if (sf == parts.mVScrollbar) {
     if (aNewIndex > aOldIndex)
       ScrollToRowInternal(parts, mTopRowIndex+1);
@@ -4012,7 +3990,6 @@ nsTreeBodyFrame::ScrollbarButtonPressed(nsISupports* aScrollbar, PRInt32 aOldInd
     ScrollHorzInternal(parts, aNewIndex);
   }
 
-  NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
   UpdateScrollbars(parts);
 
   return NS_OK;
@@ -4036,22 +4013,13 @@ nsTreeBodyFrame::PositionChanged(nsISupports* aScrollbar, PRInt32 aOldIndex, PRI
     nscoord rh = nsPresContext::AppUnitsToIntCSSPixels(mRowHeight);
 
     nscoord newrow = aNewIndex/rh;
-    nsWeakFrame weakFrame(this);
     ScrollInternal(parts, newrow);
-    NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
-
-    // Go exactly where we're supposed to
-    // Update the scrollbar.
-    nsAutoString curPos;
-    curPos.AppendInt(aNewIndex);
-    parts.mVScrollbarContent->SetAttr(kNameSpaceID_None,
-                                      nsGkAtoms::curpos, curPos, PR_TRUE);
-
   // Horizontal Scrollbar
   } else if (parts.mHScrollbar == sf) {
     ScrollHorzInternal(parts, aNewIndex);
   }
 
+  UpdateScrollbars(parts);
   return NS_OK;
 }
 
@@ -4274,11 +4242,12 @@ nsTreeBodyFrame::LazyScrollCallback(nsITimer *aTimer, void *aClosure)
     self->mSlots->mTimer = nsnull;
 
     if (self->mView) {
-      self->ScrollByLines(self->mSlots->mScrollLines);
       // Set a new timer to scroll the tree repeatedly.
       self->CreateTimer(nsILookAndFeel::eMetric_TreeScrollDelay,
                         ScrollCallback, nsITimer::TYPE_REPEATING_SLACK,
                         getter_AddRefs(self->mSlots->mTimer));
+      self->ScrollByLines(self->mSlots->mScrollLines);
+      // ScrollByLines may have deleted |self|.
     }
   }
 }
@@ -4298,3 +4267,53 @@ nsTreeBodyFrame::ScrollCallback(nsITimer *aTimer, void *aClosure)
     }
   }
 }
+
+NS_IMETHODIMP
+nsTreeBodyFrame::ScrollEvent::Run()
+{
+  if (mInner) {
+    mInner->FireScrollEvent();
+  }
+  return NS_OK;
+}
+
+
+void
+nsTreeBodyFrame::FireScrollEvent()
+{
+  mScrollEvent.Forget();
+  nsScrollbarEvent event(PR_TRUE, NS_SCROLL_EVENT, nsnull);
+  // scroll events fired at elements don't bubble
+  event.flags |= NS_EVENT_FLAG_CANT_BUBBLE;
+  nsEventDispatcher::Dispatch(GetContent(), PresContext(), &event);
+}
+
+void
+nsTreeBodyFrame::PostScrollEvent()
+{
+  if (mScrollEvent.IsPending())
+    return;
+
+  nsRefPtr<ScrollEvent> ev = new ScrollEvent(this);
+  if (NS_FAILED(NS_DispatchToCurrentThread(ev))) {
+    NS_WARNING(""""failed to dispatch ScrollEvent"""");
+  } else {
+    mScrollEvent = ev;
+  }
+}
+
+PRBool
+nsTreeBodyFrame::FullScrollbarsUpdate(PRBool aNeedsFullInvalidation)
+{
+  ScrollParts parts = GetScrollParts();
+  nsWeakFrame weakFrame(this);
+  UpdateScrollbars(parts);
+  NS_ENSURE_TRUE(weakFrame.IsAlive(), PR_FALSE);
+  if (aNeedsFullInvalidation) {
+    Invalidate();
+  }
+  InvalidateScrollbars(parts);
+  NS_ENSURE_TRUE(weakFrame.IsAlive(), PR_FALSE);
+  CheckOverflow(parts);
+  return weakFrame.IsAlive();
+}
diff --git a/layout/xul/base/src/tree/src/nsTreeBodyFrame.h b/layout/xul/base/src/tree/src/nsTreeBodyFrame.h
index 4c15d72..82c3472 100644
--- a/layout/xul/base/src/tree/src/nsTreeBodyFrame.h
+++ b/layout/xul/base/src/tree/src/nsTreeBodyFrame.h
@@ -58,6 +58,7 @@
 #include """"imgIRequest.h""""
 #include """"imgIDecoderObserver.h""""
 #include """"nsIScrollbarFrame.h""""
+#include """"nsThreadUtils.h""""
 
 // An entry in the tree's image cache
 struct nsTreeImageCacheEntry
@@ -309,6 +310,11 @@ protected:
   // Check overflow and generate events.
   void CheckOverflow(const ScrollParts& aParts);
 
+  // Calls UpdateScrollbars, Invalidate aNeedsFullInvalidation if PR_TRUE,
+  // InvalidateScrollbars and finally CheckOverflow.
+  // returns PR_TRUE if the frame is still alive after the method call.
+  PRBool FullScrollbarsUpdate(PRBool aNeedsFullInvalidation);
+
   // Use to auto-fill some of the common properties without the view having to do it.
   // Examples include container, open, selected, and focus.
   void PrefillPropertyArray(PRInt32 aRowIndex, nsTreeColumn* aCol);
@@ -390,6 +396,18 @@ protected:
 
   static void ScrollCallback(nsITimer *aTimer, void *aClosure);
 
+  class ScrollEvent : public nsRunnable {
+  public:
+    NS_DECL_NSIRUNNABLE
+    ScrollEvent(nsTreeBodyFrame *aInner) : mInner(aInner) {}
+    void Revoke() { mInner = nsnull; }
+  private:
+    nsTreeBodyFrame* mInner;
+  };
+
+  void PostScrollEvent();
+  void FireScrollEvent();
+
 protected: // Data Members
   // The cached box object parent.
   nsCOMPtr<nsITreeBoxObject> mTreeBoxObject;
@@ -489,4 +507,6 @@ protected: // Data Members
   };
 
   Slots* mSlots;
+
+  nsRevocableEventPtr<ScrollEvent> mScrollEvent;
 }; // class nsTreeBodyFrame"""
f0be1f3d234f8bf281f5a42b3508115c96c03dee,73062,366128,roc+@cs.cmu.edu,"Bug 366128. Restrict disabling of floats in XUL to cases where the container is not a float containing block. r+sr=bzbarsky
",1181726005,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index f34d8e5..f7b280c 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -5792,6 +5792,8 @@ nsCSSFrameConstructor::ConstructXULFrame(nsFrameConstructorState& aState,
                aTag == nsGkAtoms::description) {
         if ((aTag == nsGkAtoms::label || aTag == nsGkAtoms::description) && 
             (! aContent->HasAttr(kNameSpaceID_None, nsGkAtoms::value))) {
+          // XXX we should probably be calling ConstructBlock here to handle
+          // things like columns etc
           newFrame = NS_NewAreaFrame(mPresShell, aStyleContext,
                                      NS_BLOCK_SPACE_MGR | NS_BLOCK_MARGIN_ROOT);
         }
@@ -6114,12 +6116,14 @@ nsCSSFrameConstructor::ConstructXULFrame(nsFrameConstructorState& aState,
     }
 #endif
 
-    // Push a null float containing block to disable floating within xul
+    // If the new frame isn't a float containing block, then push a null
+    // float containing block to disable floats. This is needed to disable
+    // floats within XUL frames.
     nsFrameConstructorSaveState floatSaveState;
-    if (newFrame->IsBoxFrame()) {
-      aState.PushFloatContainingBlock(nsnull, floatSaveState, PR_FALSE,
-                                      PR_FALSE);
-    }
+    PRBool isFloatContainingBlock =
+      newFrame->GetContentInsertionFrame()->IsFloatContainingBlock();
+    aState.PushFloatContainingBlock(isFloatContainingBlock ? newFrame : nsnull,
+                                    floatSaveState, PR_FALSE, PR_FALSE);
 
     // Process the child content if requested
     nsFrameItems childItems;"""
becc150796ab31e92c2e847d465c32ab7ef19e14,73083,379959,jonas@sicking.cc,"Bug 379959: Add checks to loadBindingDocument. r/sr=jst
",1181685366,"""diff --git a/content/base/public/nsContentUtils.h b/content/base/public/nsContentUtils.h
index 2b9f4ce..2d4304e 100644
--- a/content/base/public/nsContentUtils.h
+++ b/content/base/public/nsContentUtils.h
@@ -1015,6 +1015,39 @@ public:
    * FALSE.
    */
   static void NotifyInstalledMenuKeyboardListener(PRBool aInstalling);
+
+  /**
+   * Do security checks before loading a resource. Does the following checks:
+   *   nsIScriptSecurityManager::CheckLoadURIWithPrincipal
+   *   NS_CheckContentLoadPolicy
+   *   nsIScriptSecurityManager::CheckSameOriginURI
+   *
+   * You will still need to do at least SameOrigin checks before on redirects.
+   *
+   * @param aURIToLoad         URI that is getting loaded.
+   * @param aLoadingPrincipal  Principal of the resource that is initiating
+   *                           the load
+   * @param aCheckLoadFlags    Flags to be passed to
+   *                           nsIScriptSecurityManager::CheckLoadURIWithPrincipal
+   *                           NOTE: If this contains ALLOW_CHROME the
+   *                                 CheckSameOriginURI check will be skipped if
+   *                                 aURIToLoad is a chrome uri.
+   * @param aAllowData         Set to true to skip CheckSameOriginURI check when
+                               aURIToLoad is a data uri.
+   * @param aContentPolicyType Type     \
+   * @param aContext           Context   |- to be passed to
+   * @param aMimeGuess         Mimetype  |      NS_CheckContentLoadPolicy
+   * @param aExtra             Extra    /
+   */
+  static nsresult CheckSecurityBeforeLoad(nsIURI* aURIToLoad,
+                                          nsIPrincipal* aLoadingPrincipal,
+                                          PRUint32 aCheckLoadFlags,
+                                          PRBool aAllowData,
+                                          PRUint32 aContentPolicyType,
+                                          nsISupports* aContext,
+                                          const nsACString& aMimeGuess = EmptyCString(),
+                                          nsISupports* aExtra = nsnull);
+
 private:
 
   static PRBool InitializeEventTable();
diff --git a/content/base/src/nsContentUtils.cpp b/content/base/src/nsContentUtils.cpp
index 65f2a31..db892db 100644
--- a/content/base/src/nsContentUtils.cpp
+++ b/content/base/src/nsContentUtils.cpp
@@ -137,6 +137,7 @@ static NS_DEFINE_CID(kXTFServiceCID, NS_XTFSERVICE_CID);
 #include """"nsMutationEvent.h""""
 #include """"nsIKBStateControl.h""""
 #include """"nsIMEStateManager.h""""
+#include """"nsContentErrors.h""""
 
 #ifdef IBMBIDI
 #include """"nsIBidiKeyboard.h""""
@@ -3552,3 +3553,56 @@ nsContentUtils::NotifyInstalledMenuKeyboardListener(PRBool aInstalling)
 {
   nsIMEStateManager::OnInstalledMenuKeyboardListener(aInstalling);
 }
+
+static PRBool SchemeIs(nsIURI* aURI, const char* aScheme)
+{
+  nsCOMPtr<nsIURI> baseURI = NS_GetInnermostURI(aURI);
+  NS_ENSURE_TRUE(baseURI, PR_FALSE);
+
+  PRBool isScheme = PR_FALSE;
+  return NS_SUCCEEDED(baseURI->SchemeIs(aScheme, &isScheme)) && isScheme;
+}
+
+/* static */
+nsresult
+nsContentUtils::CheckSecurityBeforeLoad(nsIURI* aURIToLoad,
+                                        nsIPrincipal* aLoadingPrincipal,
+                                        PRUint32 aCheckLoadFlags,
+                                        PRBool aAllowData,
+                                        PRUint32 aContentPolicyType,
+                                        nsISupports* aContext,
+                                        const nsACString& aMimeGuess,
+                                        nsISupports* aExtra)
+{
+  nsCOMPtr<nsIURI> loadingURI;
+  nsresult rv = aLoadingPrincipal->GetURI(getter_AddRefs(loadingURI));
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  // CheckLoadURIWithPrincipal
+  rv = sSecurityManager->
+    CheckLoadURIWithPrincipal(aLoadingPrincipal, aURIToLoad, aCheckLoadFlags);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  // Content Policy
+  PRInt16 shouldLoad = nsIContentPolicy::ACCEPT;
+  rv = NS_CheckContentLoadPolicy(aContentPolicyType,
+                                 aURIToLoad,
+                                 loadingURI,
+                                 aContext,
+                                 aMimeGuess,
+                                 aExtra,
+                                 &shouldLoad,
+                                 GetContentPolicy());
+  NS_ENSURE_SUCCESS(rv, rv);
+  if (NS_CP_REJECTED(shouldLoad)) {
+    return NS_ERROR_CONTENT_BLOCKED;
+  }
+
+  // Same Origin
+  if ((aAllowData && SchemeIs(aURIToLoad, """"data"""")) ||
+      ((aCheckLoadFlags & nsIScriptSecurityManager::ALLOW_CHROME) &&
+       SchemeIs(aURIToLoad, """"chrome""""))) {
+    return NS_OK;
+  }
+  return sSecurityManager->CheckSameOriginURI(loadingURI, aURIToLoad);
+}
diff --git a/content/base/src/nsDocument.cpp b/content/base/src/nsDocument.cpp
index 2cb1ea3..61e40db 100644
--- a/content/base/src/nsDocument.cpp
+++ b/content/base/src/nsDocument.cpp
@@ -154,6 +154,7 @@ static NS_DEFINE_CID(kDOMEventGroupCID, NS_DOMEVENTGROUP_CID);
 #include """"nsIXPConnect.h""""
 #include """"nsCycleCollector.h""""
 #include """"nsCCUncollectableMarker.h""""
+#include """"nsIContentPolicy.h""""
 
 #ifdef MOZ_LOGGING
 // so we can get logging even in release builds
@@ -3430,23 +3431,16 @@ nsDocument::RemoveBinding(nsIDOMElement* aContent, const nsAString& aURI)
 }
 
 NS_IMETHODIMP
-nsDocument::LoadBindingDocument(const nsAString& aURI,
-                                nsIDOMDocument** aResult)
+nsDocument::LoadBindingDocument(const nsAString& aURI)
 {
   nsCOMPtr<nsIURI> uri;
   nsresult rv = NS_NewURI(getter_AddRefs(uri), aURI,
                           mCharacterSet.get(),
                           NS_STATIC_CAST(nsIDocument *, this)->GetBaseURI());
-
   NS_ENSURE_SUCCESS(rv, rv);
-  
-  nsCOMPtr<nsIDocument> doc;
-  mBindingManager->LoadBindingDocument(this, uri, getter_AddRefs(doc));
 
-  if (doc) {
-    CallQueryInterface(doc, aResult);
-  }
-  
+  mBindingManager->LoadBindingDocument(this, uri);
+
   return NS_OK;
 }
 
diff --git a/content/xbl/src/nsBindingManager.cpp b/content/xbl/src/nsBindingManager.cpp
index c5a9541..5ebf6e2 100644
--- a/content/xbl/src/nsBindingManager.cpp
+++ b/content/xbl/src/nsBindingManager.cpp
@@ -766,19 +766,11 @@ nsBindingManager::RemoveLayeredBinding(nsIContent* aContent, nsIURI* aURL)
 
 nsresult
 nsBindingManager::LoadBindingDocument(nsIDocument* aBoundDoc,
-                                      nsIURI* aURL,
-                                      nsIDocument** aResult)
+                                      nsIURI* aURL)
 {
   NS_PRECONDITION(aURL, """"Must have a URI to load!"""");
   
-  nsCAutoString otherScheme;
-  aURL->GetScheme(otherScheme);
-  
-  nsCAutoString scheme;
-  aBoundDoc->GetDocumentURI()->GetScheme(scheme);
-
   // First we need to load our binding.
-  *aResult = nsnull;
   nsresult rv;
   nsCOMPtr<nsIXBLService> xblService = 
            do_GetService(""""@mozilla.org/xbl;1"""", &rv);
@@ -792,11 +784,6 @@ nsBindingManager::LoadBindingDocument(nsIDocument* aBoundDoc,
   if (!info)
     return NS_ERROR_FAILURE;
 
-  // XXXbz Why is this based on a scheme comparison?  Shouldn't this
-  // be a real security check???
-    if (!strcmp(scheme.get(), otherScheme.get()))
-    info->GetDocument(aResult); // Addref happens here.
-    
   return NS_OK;
 }
 
diff --git a/content/xbl/src/nsBindingManager.h b/content/xbl/src/nsBindingManager.h
index 79c5918..d3e6a76 100755
--- a/content/xbl/src/nsBindingManager.h
+++ b/content/xbl/src/nsBindingManager.h
@@ -156,8 +156,7 @@ public:
 
   nsresult AddLayeredBinding(nsIContent* aContent, nsIURI* aURL);
   nsresult RemoveLayeredBinding(nsIContent* aContent, nsIURI* aURL);
-  nsresult LoadBindingDocument(nsIDocument* aBoundDoc, nsIURI* aURL,
-                               nsIDocument** aResult);
+  nsresult LoadBindingDocument(nsIDocument* aBoundDoc, nsIURI* aURL);
 
   nsresult AddToAttachedQueue(nsXBLBinding* aBinding);
   void ProcessAttachedQueue();
diff --git a/content/xbl/src/nsXBLService.cpp b/content/xbl/src/nsXBLService.cpp
index 38baa9b..917ce17 100644
--- a/content/xbl/src/nsXBLService.cpp
+++ b/content/xbl/src/nsXBLService.cpp
@@ -522,42 +522,21 @@ nsXBLService::LoadBindings(nsIContent* aContent, nsIURI* aURL, PRBool aAugmentFl
     }
   }
 
-  // Security check - remote pages can't load local bindings, except from chrome
-  nsIURI *docURI = document->GetDocumentURI();
-  PRBool isChrome = PR_FALSE;
-  rv = docURI->SchemeIs(""""chrome"""", &isChrome);
-
-  // Not everything with a chrome URI has a system principal.  See bug 160042.
-  if (NS_FAILED(rv) || !isChrome) {
-    rv = nsContentUtils::GetSecurityManager()->
-      CheckLoadURIWithPrincipal(document->NodePrincipal(), aURL,
-                                nsIScriptSecurityManager::ALLOW_CHROME);
-    if (NS_FAILED(rv))
-      return rv;
-  }
-
-  // Content policy check.  We have to be careful to not pass aContent as the
-  // context here.  Otherwise, if there is a JS-implemented content policy, we
-  // will attempt to wrap the content node, which will try to load XBL bindings
-  // for it, if any.  Since we're not done loading this binding yet, that will
-  // reenter this method and we'll end up creating a binding and then
-  // immediately clobbering it in our table.  That makes things very confused,
-  // leading to misbehavior and crashes.
-  PRInt16 decision = nsIContentPolicy::ACCEPT;
-  rv = NS_CheckContentLoadPolicy(nsIContentPolicy::TYPE_OTHER,
-                                 aURL,
-                                 docURI,
-                                 document,        // context
-                                 EmptyCString(),  // mime guess
-                                 nsnull,          // extra
-                                 &decision,
-                                 nsContentUtils::GetContentPolicy());
-
-  if (NS_SUCCEEDED(rv) && !NS_CP_ACCEPTED(decision))
-    rv = NS_ERROR_NOT_AVAILABLE;
-
-  if (NS_FAILED(rv))
-    return rv;
+  // Security check - Enforce same-origin policy, except to chrome.
+  // We have to be careful to not pass aContent as the context here. 
+  // Otherwise, if there is a JS-implemented content policy, we will attempt
+  // to wrap the content node, which will try to load XBL bindings for it, if
+  // any. Since we're not done loading this binding yet, that will reenter
+  // this method and we'll end up creating a binding and then immediately
+  // clobbering it in our table.  That makes things very confused, leading to
+  // misbehavior and crashes.
+  rv = nsContentUtils::CheckSecurityBeforeLoad(aURL,
+                                               document->NodePrincipal(),
+                                               nsIScriptSecurityManager::ALLOW_CHROME,
+                                               PR_TRUE,
+                                               nsIContentPolicy::TYPE_OTHER,
+                                               document);
+  NS_ENSURE_SUCCESS(rv, rv);
 
   PRBool ready;
   nsRefPtr<nsXBLBinding> newBinding;
@@ -986,7 +965,16 @@ nsXBLService::LoadBindingDocumentInfo(nsIContent* aBoundElement,
 {
   NS_PRECONDITION(aBindingURI, """"Must have a binding URI"""");
   
-  nsresult rv = NS_OK;
+  nsresult rv;
+  if (aBoundDocument) {
+    rv = nsContentUtils::
+      CheckSecurityBeforeLoad(aBindingURI, aBoundDocument->NodePrincipal(),
+                              nsIScriptSecurityManager::ALLOW_CHROME,
+                              PR_TRUE,
+                              nsIContentPolicy::TYPE_OTHER,
+                              aBoundDocument);
+    NS_ENSURE_SUCCESS(rv, rv);
+  }
 
   *aResult = nsnull;
   nsCOMPtr<nsIXBLDocumentInfo> info;
@@ -1097,6 +1085,43 @@ nsXBLService::LoadBindingDocumentInfo(nsIContent* aBoundElement,
   return NS_OK;
 }
 
+class nsSameOriginChecker : public nsIChannelEventSink,
+                            public nsIInterfaceRequestor
+{
+  NS_DECL_ISUPPORTS
+  NS_DECL_NSICHANNELEVENTSINK
+  NS_DECL_NSIINTERFACEREQUESTOR
+};
+
+NS_IMPL_ISUPPORTS2(nsSameOriginChecker,
+                   nsIChannelEventSink,
+                   nsIInterfaceRequestor)
+
+NS_IMETHODIMP
+nsSameOriginChecker::OnChannelRedirect(nsIChannel *aOldChannel,
+                                       nsIChannel *aNewChannel,
+                                       PRUint32    aFlags)
+{
+    NS_PRECONDITION(aNewChannel, """"Redirecting to null channel?"""");
+
+    nsCOMPtr<nsIURI> oldURI;
+    nsresult rv = aOldChannel->GetURI(getter_AddRefs(oldURI)); // The original URI
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    nsCOMPtr<nsIURI> newURI;
+    rv = aNewChannel->GetURI(getter_AddRefs(newURI)); // The new URI
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    return nsContentUtils::GetSecurityManager()->
+      CheckSameOriginURI(oldURI, newURI);
+}
+
+NS_IMETHODIMP
+nsSameOriginChecker::GetInterface(const nsIID & aIID, void **aResult)
+{
+    return QueryInterface(aIID, aResult);
+}
+
 nsresult
 nsXBLService::FetchBindingDocument(nsIContent* aBoundElement, nsIDocument* aBoundDocument,
                                    nsIURI* aDocumentURI, nsIURI* aBindingURI, 
@@ -1131,6 +1156,11 @@ nsXBLService::FetchBindingDocument(nsIContent* aBoundElement, nsIDocument* aBoun
   rv = NS_NewChannel(getter_AddRefs(channel), aDocumentURI, nsnull, loadGroup);
   NS_ENSURE_SUCCESS(rv, rv);
 
+  nsCOMPtr<nsIInterfaceRequestor> sameOriginChecker = new nsSameOriginChecker;
+  NS_ENSURE_TRUE(sameOriginChecker, NS_ERROR_OUT_OF_MEMORY);
+
+  channel->SetNotificationCallbacks(sameOriginChecker);
+
   nsCOMPtr<nsIStreamListener> listener;
   rv = doc->StartDocumentLoad(""""loadAsInteractiveData"""",
                               channel,
diff --git a/content/xml/document/src/nsXMLPrettyPrinter.cpp b/content/xml/document/src/nsXMLPrettyPrinter.cpp
index 708733d..6051519 100644
--- a/content/xml/document/src/nsXMLPrettyPrinter.cpp
+++ b/content/xml/document/src/nsXMLPrettyPrinter.cpp
@@ -155,9 +155,7 @@ nsXMLPrettyPrinter::PrettyPrint(nsIDocument* aDocument,
     NS_ASSERTION(xblDoc, """"xml document doesn't implement nsIDOMDocumentXBL"""");
     NS_ENSURE_TRUE(xblDoc, NS_ERROR_FAILURE);
 
-    nsCOMPtr<nsIDOMDocument> dummy;
-    xblDoc->LoadBindingDocument(NS_LITERAL_STRING(""""chrome://global/content/xml/XMLPrettyPrint.xml""""),
-                                getter_AddRefs(dummy));
+    xblDoc->LoadBindingDocument(NS_LITERAL_STRING(""""chrome://global/content/xml/XMLPrettyPrint.xml""""));
 
     nsCOMPtr<nsIDOMElement> rootElem;
     sourceDocument->GetDocumentElement(getter_AddRefs(rootElem));
diff --git a/dom/public/idl/xbl/nsIDOMDocumentXBL.idl b/dom/public/idl/xbl/nsIDOMDocumentXBL.idl
index 21c83b9..6a7a9fb 100644
--- a/dom/public/idl/xbl/nsIDOMDocumentXBL.idl
+++ b/dom/public/idl/xbl/nsIDOMDocumentXBL.idl
@@ -39,7 +39,7 @@
 
 #include """"domstubs.idl""""
 
-[scriptable, uuid(c7c0ae9b-a0ba-4f4e-9f2c-c18deb62ee8b)]
+[scriptable, uuid(1a38762b-4da5-4f61-80fb-9317e198cb92)]
 interface nsIDOMDocumentXBL : nsISupports
 {
   nsIDOMNodeList        getAnonymousNodes(in nsIDOMElement elt);
@@ -53,5 +53,5 @@ interface nsIDOMDocumentXBL : nsISupports
                                       in DOMString bindingURL);
 
   nsIDOMElement         getBindingParent(in nsIDOMNode node);
-  nsIDOMDocument        loadBindingDocument(in DOMString documentURL);
+  void                  loadBindingDocument(in DOMString documentURL);
 };"""
27c77171e3f2b359406da8fd1e0b8c0aa35c24ff,73087,383424,jst@mozilla.org,"Fixing bug 383424. Make the context pusher use the owner document. r=mrbkap@gmail.com, sr=bzbarsky@mit.edu
",1181683018,"""diff --git a/content/base/src/nsContentUtils.cpp b/content/base/src/nsContentUtils.cpp
index 97b9ee7..65f2a31 100644
--- a/content/base/src/nsContentUtils.cpp
+++ b/content/base/src/nsContentUtils.cpp
@@ -2404,7 +2404,7 @@ nsCxPusher::Push(nsISupports *aCurrentTarget)
   nsCOMPtr<nsIDocument> document;
 
   if (content) {
-    document = content->GetDocument();
+    document = content->GetOwnerDoc();
   }
 
   if (!document) {"""
9bded5a16416d2a0cf2c8decab66664376182106,73301,370127,mrbkap@gmail.com,"Create XPCNativeWrapper function wrappers with the right parent. bug 370127, r=bzbarsky sr=brendan
",1180993437,"""diff --git a/js/src/xpconnect/src/XPCNativeWrapper.cpp b/js/src/xpconnect/src/XPCNativeWrapper.cpp
index 127eccd..9a242af 100644
--- a/js/src/xpconnect/src/XPCNativeWrapper.cpp
+++ b/js/src/xpconnect/src/XPCNativeWrapper.cpp
@@ -1,5 +1,5 @@
 /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* vim: set ts=2 sw=2 et tw=80: */
+/* vim: set ts=2 sw=2 et tw=78: */
 /* ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
  *
@@ -226,18 +226,31 @@ WrapFunction(JSContext* cx, JSObject* funobj, jsval *rval)
     *rval = OBJECT_TO_JSVAL(funobj);
     return JS_TRUE;
   }
+
+  // Ensure that we've been called from JS. Native code should extract
+  // the wrapped native and deal with that directly.
+  // XXX Can we simply trust |cx| here?
+  JSStackFrame *iterator = nsnull;
+  if (!::JS_FrameIterator(cx, &iterator)) {
+    ::JS_ReportError(cx, """"XPCNativeWrappers must be used from script"""");
+    return JS_FALSE;
+  }
   
   // Create a new function that'll call our given function.  This new
   // function's parent will be the original function and that's how we
   // get the right thing to call when this function is called.
+  // Note that we pass nsnull as the nominal parent so that we'll inherit
+  // our caller's Function.prototype.
   JSFunction *funWrapper =
-    ::JS_NewFunction(cx, XPC_NW_FunctionWrapper, 0, 0, funobj,
+    ::JS_NewFunction(cx, XPC_NW_FunctionWrapper, 0, 0, nsnull,
                      """"XPCNativeWrapper function wrapper"""");
   if (!funWrapper) {
     return JS_FALSE;
   }
 
-  *rval = OBJECT_TO_JSVAL(::JS_GetFunctionObject(funWrapper));
+  JSObject* funWrapperObj = ::JS_GetFunctionObject(funWrapper);
+  ::JS_SetParent(cx, funWrapperObj, funobj);
+  *rval = OBJECT_TO_JSVAL(funWrapperObj);
   return JS_TRUE;
 }
 """
912ea946db0a37764ce984274679104e134c7b33,73342,382253,igor@mir2.org,"Bug 382253: consistent termination of inline functions. r=brendan
",1180755999,"""diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index 8285867..bd79871 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -3950,7 +3950,7 @@ interrupt:
                 if (!JSVAL_IS_OBJECT(vp[1])) {
                     PRIMITIVE_TO_OBJECT(cx, vp[1], obj2);
                     if (!obj2)
-                        goto out;
+                        goto bad_inline_call;
                     vp[1] = OBJECT_TO_JSVAL(obj2);
                 }
                 newifp->frame.thisp =
@@ -3959,10 +3959,8 @@ interrupt:
                                    ? parent
                                    : JSVAL_TO_OBJECT(vp[1]),
                                    newifp->frame.argv);
-                if (!newifp->frame.thisp) {
-                    js_FreeRawStack(cx, newmark);
+                if (!newifp->frame.thisp)
                     goto bad_inline_call;
-                }
 #ifdef DUMP_CALL_TABLE
                 LogCall(cx, *vp, argc, vp + 2);
 #endif
@@ -3989,8 +3987,7 @@ interrupt:
                 /* Scope with a call object parented by the callee's parent. */
                 if (JSFUN_HEAVYWEIGHT_TEST(fun->flags) &&
                     !js_GetCallObject(cx, &newifp->frame, parent)) {
-                    ok = JS_FALSE;
-                    goto out;
+                    goto bad_inline_call;
                 }
 
                 /* Switch to new version if currentVersion wasn't overridden. */
@@ -4015,9 +4012,12 @@ interrupt:
                 DO_OP();
 
               bad_inline_call:
+                RESTORE_SP(fp);
+                JS_ASSERT(fp->pc == pc);
                 script = fp->script;
                 depth = (jsint) script->depth;
                 atoms = script->atomMap.vector;
+                js_FreeRawStack(cx, newmark);
                 ok = JS_FALSE;
                 goto out;
             }"""
21c9b66f99a59a1a062670c67231645664289afc,73452,353214,bclary@bclary.com,"JavaScript Test - tweak decompilation result, bug 353214
",1180476311,"""diff --git a/js/tests/js1_5/extensions/regress-353214.js b/js/tests/js1_5/extensions/regress-353214.js
index 4fcde7d..5c32f79 100755
--- a/js/tests/js1_5/extensions/regress-353214.js
+++ b/js/tests/js1_5/extensions/regress-353214.js
@@ -54,7 +54,7 @@ function test()
   printStatus (summary);
  
   var f = function() { (function ([x]) { })(); eval('return 3;') }
-  expect = 'function() { (function ([x]) { })(); eval(""""return 3;""""); }';
+  expect = 'function() { (function ([x]) { }()); eval(""""return 3;""""); }';
   actual = f + '';
   compareSource(expect, actual, summary);
 """
760ea01817d09811a07c05a74cc812b9f4c81f65,73503,351236,Olli.Pettay@helsinki.fi,"Bug 351236, r+sr=neil
",1180299433,"""diff --git a/editor/composer/src/nsComposerCommandsUpdater.cpp b/editor/composer/src/nsComposerCommandsUpdater.cpp
index 7c08154..0106479 100644
--- a/editor/composer/src/nsComposerCommandsUpdater.cpp
+++ b/editor/composer/src/nsComposerCommandsUpdater.cpp
@@ -49,14 +49,12 @@
 #include """"nsString.h""""
 
 #include """"nsICommandManager.h""""
-#include """"nsPICommandUpdater.h""""
 
 #include """"nsIDocShell.h""""
 #include """"nsITransactionManager.h""""
 
 nsComposerCommandsUpdater::nsComposerCommandsUpdater()
 :  mDOMWindow(nsnull)
-,  mDocShell(nsnull)
 ,  mDirtyState(eStateUninitialized)
 ,  mSelectionCollapsed(eStateUninitialized)
 ,  mFirstDoOfFirstUndo(PR_TRUE)
@@ -248,7 +246,7 @@ nsComposerCommandsUpdater::Init(nsIDOMWindow* aDOMWindow)
   nsCOMPtr<nsPIDOMWindow> window(do_QueryInterface(aDOMWindow));
   if (window)
   {
-    mDocShell = window->GetDocShell();
+    mDocShell = do_GetWeakReference(window->GetDocShell());
   }
   return NS_OK;
 }
@@ -301,10 +299,7 @@ nsComposerCommandsUpdater::UpdateDirtyState(PRBool aNowDirty)
 nsresult
 nsComposerCommandsUpdater::UpdateCommandGroup(const nsAString& aCommandGroup)
 {
-  if (!mDocShell) return NS_ERROR_FAILURE;
-
-  nsCOMPtr<nsICommandManager> commandManager = do_GetInterface(mDocShell);
-  nsCOMPtr<nsPICommandUpdater> commandUpdater = do_QueryInterface(commandManager);
+  nsCOMPtr<nsPICommandUpdater> commandUpdater = GetCommandUpdater();
   if (!commandUpdater) return NS_ERROR_FAILURE;
 
   
@@ -358,10 +353,7 @@ nsComposerCommandsUpdater::UpdateCommandGroup(const nsAString& aCommandGroup)
 nsresult
 nsComposerCommandsUpdater::UpdateOneCommand(const char *aCommand)
 {
-  if (!mDocShell) return NS_ERROR_FAILURE;
-  
-  nsCOMPtr<nsICommandManager>  	commandManager = do_GetInterface(mDocShell);
-  nsCOMPtr<nsPICommandUpdater>	commandUpdater = do_QueryInterface(commandManager);
+  nsCOMPtr<nsPICommandUpdater> commandUpdater = GetCommandUpdater();
   if (!commandUpdater) return NS_ERROR_FAILURE;
 
   commandUpdater->CommandStatusChanged(aCommand);
@@ -387,6 +379,18 @@ nsComposerCommandsUpdater::SelectionIsCollapsed()
   return PR_FALSE;
 }
 
+already_AddRefed<nsPICommandUpdater>
+nsComposerCommandsUpdater::GetCommandUpdater()
+{
+  nsCOMPtr<nsIDocShell> docShell = do_QueryReferent(mDocShell);
+  NS_ENSURE_TRUE(docShell, nsnull);
+  nsCOMPtr<nsICommandManager> manager = do_GetInterface(docShell);
+  nsCOMPtr<nsPICommandUpdater> updater = do_QueryInterface(manager);
+  nsPICommandUpdater* retVal = nsnull;
+  updater.swap(retVal);
+  return retVal;
+}
+
 #if 0
 #pragma mark -
 #endif
diff --git a/editor/composer/src/nsComposerCommandsUpdater.h b/editor/composer/src/nsComposerCommandsUpdater.h
index 75c9b32..a660e35 100644
--- a/editor/composer/src/nsComposerCommandsUpdater.h
+++ b/editor/composer/src/nsComposerCommandsUpdater.h
@@ -47,6 +47,8 @@
 
 #include """"nsCOMPtr.h""""
 #include """"nsITimer.h""""
+#include """"nsWeakPtr.h""""
+#include """"nsPICommandUpdater.h""""
 
 #include """"nsISelectionListener.h""""
 #include """"nsIDocumentStateListener.h""""
@@ -110,13 +112,15 @@ protected:
   nsresult      UpdateDirtyState(PRBool aNowDirty);  
   nsresult      UpdateOneCommand(const char* aCommand);
   nsresult      UpdateCommandGroup(const nsAString& aCommandGroup);
+
+  already_AddRefed<nsPICommandUpdater> GetCommandUpdater();
   
   nsresult      PrimeUpdateTimer();
   void          TimerCallback();
   nsCOMPtr<nsITimer>  mUpdateTimer;
 
   nsIDOMWindow* mDOMWindow;  // Weak reference
-  nsIDocShell*  mDocShell;   // Weak reference
+  nsWeakPtr     mDocShell;
   PRInt8        mDirtyState;  
   PRInt8        mSelectionCollapsed;  
   PRPackedBool  mFirstDoOfFirstUndo;"""
3dbfd770e9bb1277c33a6361b03332aa52812011,73599,370127,mrbkap@gmail.com,"Use the currently executing function as the nominal parent for our function so that we pull the correct prototype for our function. bug 370127, r+sr=jst
",1179965880,"""diff --git a/js/src/xpconnect/src/XPCNativeWrapper.cpp b/js/src/xpconnect/src/XPCNativeWrapper.cpp
index 127eccd..e05a225 100644
--- a/js/src/xpconnect/src/XPCNativeWrapper.cpp
+++ b/js/src/xpconnect/src/XPCNativeWrapper.cpp
@@ -231,13 +231,15 @@ WrapFunction(JSContext* cx, JSObject* funobj, jsval *rval)
   // function's parent will be the original function and that's how we
   // get the right thing to call when this function is called.
   JSFunction *funWrapper =
-    ::JS_NewFunction(cx, XPC_NW_FunctionWrapper, 0, 0, funobj,
+    ::JS_NewFunction(cx, XPC_NW_FunctionWrapper, 0, 0, nsnull,
                      """"XPCNativeWrapper function wrapper"""");
   if (!funWrapper) {
     return JS_FALSE;
   }
 
-  *rval = OBJECT_TO_JSVAL(::JS_GetFunctionObject(funWrapper));
+  JSObject* funWrapperObj = ::JS_GetFunctionObject(funWrapper);
+  ::JS_SetParent(cx, funWrapperObj, funobj);
+  *rval = OBJECT_TO_JSVAL(funWrapperObj);
   return JS_TRUE;
 }
 """
bf1c2cb81f975703ffabbd1cb1e8029c5a1dbc4a,73715,381374,mrbkap@gmail.com,"Mark the overwritten scope property in the space between where we remove it and re-add it in its changed form. bug 381374, r=igor
",1179795304,"""diff --git a/js/src/jsscope.c b/js/src/jsscope.c
index 9448858..dcfe6d6 100644
--- a/js/src/jsscope.c
+++ b/js/src/jsscope.c
@@ -978,6 +978,7 @@ js_AddScopeProperty(JSContext *cx, JSScope *scope, jsid id,
     JSScopeProperty **spp, *sprop, *overwriting, **spvec, **spp2, child;
     uint32 size, splen, i;
     int change;
+    JSTempValueRooter tvr;
 
     JS_ASSERT(JS_IS_SCOPE_LOCKED(cx, scope));
     CHECK_ANCESTOR_LINE(scope, JS_TRUE);
@@ -1249,7 +1250,9 @@ js_AddScopeProperty(JSContext *cx, JSScope *scope, jsid id,
          */
         if (!JS_CLIST_IS_EMPTY(&cx->runtime->watchPointList) &&
             js_FindWatchPoint(cx->runtime, scope, id)) {
+            JS_PUSH_TEMP_ROOT_SPROP(cx, overwriting, &tvr);
             setter = js_WrapWatchedSetter(cx, id, attrs, setter);
+            JS_POP_TEMP_ROOT(cx, &tvr);
             if (!setter)
                 goto fail_overwrite;
         }"""
91a84c470d64c995efcc3473d94a3d8be500fcc9,73720,375976,mrbkap@gmail.com,"Protect the number from GC, even if it was originally a number. bug 375976, r=crowder
",1179791142,"""diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index a2df5fc..8e6d67b 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -3588,8 +3588,8 @@ interrupt:
                 ok = js_NewNumberValue(cx, d, &rtmp);                         \
                 if (!ok)                                                      \
                     goto out;                                                 \
-                *vp = rtmp;                                                   \
             }                                                                 \
+            *vp = rtmp;                                                       \
             (cs->format & JOF_INC) ? d++ : d--;                               \
             ok = js_NewNumberValue(cx, d, &rval);                             \
         } else {                                                              \"""
5e9b763ef047c841f131a486689c6321efd8ec4c,73734,380933,mrbkap@gmail.com,"Handle Function.prototype.toString not returning what we expect it to return (a function expression). bug 380933, r=crowder
",1179770468,"""diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index f6c132b..202eae60 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -963,8 +963,12 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 if (vchars[0] == '(')
                     vchars++;
                 vchars = js_strchr_limit(vchars, '(', vchars + vlength);
-                JS_ASSERT(vchars && *vchars);
-                vlength -= vchars - start + 1;
+                if (vchars) {
+                    vlength -= vchars - start + 1;
+                } else {
+                    gsop[j] = NULL;
+                    vchars = start;
+                }
             }
 #else
             needOldStyleGetterSetter = JS_TRUE;"""
dedfc9ca13cd07a5364793d0e9b03ab40701d92a,73744,381167,Olli.Pettay@helsinki.fi,"Bug 381167, r+sr=roc
",1179732467,"""diff --git a/layout/xul/base/src/tree/src/nsTreeBoxObject.cpp b/layout/xul/base/src/tree/src/nsTreeBoxObject.cpp
index b678c88..843bdfe 100644
--- a/layout/xul/base/src/tree/src/nsTreeBoxObject.cpp
+++ b/layout/xul/base/src/tree/src/nsTreeBoxObject.cpp
@@ -120,9 +120,12 @@ static void FindBodyElement(nsIContent* aParent, nsIContent** aResult)
       *aResult = content;
       NS_ADDREF(*aResult);
       break;
-    }
-    else if (content->IsNodeOfType(nsINode::eELEMENT) &&
-             !ni->Equals(nsGkAtoms::_template, kNameSpaceID_XUL)) {
+    } else if (ni->Equals(nsGkAtoms::tree, kNameSpaceID_XUL)) {
+      // There are nesting tree elements. Only the innermost should
+      // find the treechilren.
+      break;
+    } else if (content->IsNodeOfType(nsINode::eELEMENT) &&
+               !ni->Equals(nsGkAtoms::_template, kNameSpaceID_XUL)) {
       FindBodyElement(content, aResult);
       if (*aResult)
         break;"""
28aacf9a4925cf89398d6d187d969037ca97cdb4,73920,358594,crowder@fiverocks.com,"Bug 358594: sharp variables should deserialize using old getter/setter syntax.
",1179268884,"""diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index b8dad1f..816eb62 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -719,6 +719,7 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     uintN attrs;
 #endif
     jsval *val;
+    JSString *gsopold[2];
     JSString *gsop[2];
     JSAtom *atom;
     JSString *idstr, *valstr, *str;
@@ -877,31 +878,23 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 (attrs & (JSPROP_GETTER | JSPROP_SETTER))) {
                 if (attrs & JSPROP_GETTER) {
                     val[valcnt] = (jsval) ((JSScopeProperty *)prop)->getter;
-#ifdef OLD_GETTER_SETTER
-                    gsop[valcnt] =
+                    gsopold[valcnt] =
                         ATOM_TO_STRING(cx->runtime->atomState.getterAtom);
-#else
-                    gsop[valcnt] = needOldStyleGetterSetter
-                        ? ATOM_TO_STRING(cx->runtime->atomState.getterAtom)
-                        : ATOM_TO_STRING(cx->runtime->atomState.getAtom);
-#endif
-                    valcnt++;
+                    gsop[valcnt] =
+                        ATOM_TO_STRING(cx->runtime->atomState.getAtom);
                 }
                 if (attrs & JSPROP_SETTER) {
                     val[valcnt] = (jsval) ((JSScopeProperty *)prop)->setter;
-#ifdef OLD_GETTER_SETTER
-                    gsop[valcnt] =
+                    gsopold[valcnt] =
                         ATOM_TO_STRING(cx->runtime->atomState.setterAtom);
-#else
-                    gsop[valcnt] = needOldStyleGetterSetter
-                        ? ATOM_TO_STRING(cx->runtime->atomState.setterAtom)
-                        : ATOM_TO_STRING(cx->runtime->atomState.setAtom);
-#endif
-                    valcnt++;
+                    gsop[valcnt] =
+                        ATOM_TO_STRING(cx->runtime->atomState.setAtom);
                 }
+                valcnt++;
             } else {
                 valcnt = 1;
                 gsop[0] = NULL;
+                gsopold[0] = NULL;
                 ok = OBJ_GET_PROPERTY(cx, obj, id, &val[0]);
             }
             OBJ_DROP_PROPERTY(cx, obj2, prop);
@@ -917,6 +910,7 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
          */
         valcnt = 1;
         gsop[0] = NULL;
+        gsopold[0] = NULL;
         ok = OBJ_GET_PROPERTY(cx, obj, id, &val[0]);
 
 #endif /* !JS_HAS_GETTER_SETTER */
@@ -952,6 +946,12 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
             vchars = JSSTRING_CHARS(valstr);
             vlength = JSSTRING_LENGTH(valstr);
 
+            if (vchars[0] == '#')
+                needOldStyleGetterSetter = JS_TRUE;
+
+            if (needOldStyleGetterSetter)
+                gsop[j] = gsopold[j];
+
 #ifndef OLD_GETTER_SETTER
             /*
              * Remove '(function ' from the beginning of valstr and ')' from the
@@ -964,6 +964,9 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 vchars += n;
                 vlength -= n + 1;
             }
+#else
+            needOldStyleGetterSetter = JS_TRUE;
+            gsop[j] = gsopold[j];
 #endif
 
             /* If val[j] is a non-sharp object, consider sharpening it. */
@@ -980,10 +983,14 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 if (IS_SHARP(he)) {
                     vchars = vsharp;
                     vlength = js_strlen(vchars);
+                    needOldStyleGetterSetter = JS_TRUE;
+                    gsop[j] = gsopold[j];
                 } else {
                     if (vsharp) {
                         vsharplength = js_strlen(vsharp);
                         MAKE_SHARP(he);
+                        needOldStyleGetterSetter = JS_TRUE;
+                        gsop[j] = gsopold[j];
                     }
                     js_LeaveSharpObject(cx, NULL);
                 }
@@ -1029,17 +1036,6 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
             }
             comma = """", """";
 
-#ifdef OLD_GETTER_SETTER
-            js_strncpy(&chars[nchars], idstrchars, idstrlength);
-            nchars += idstrlength;
-            if (gsop[j]) {
-                chars[nchars++] = ' ';
-                gsoplength = JSSTRING_LENGTH(gsop[j]);
-                js_strncpy(&chars[nchars], JSSTRING_CHARS(gsop[j]), gsoplength);
-                nchars += gsoplength;
-            }
-            chars[nchars++] = ':';
-#else
             if (needOldStyleGetterSetter) {
                 js_strncpy(&chars[nchars], idstrchars, idstrlength);
                 nchars += idstrlength;
@@ -1064,7 +1060,7 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 /* Extraneous space after id here will be extracted later */
                 chars[nchars++] = gsop[j] ? ' ' : ':';
             }
-#endif
+
             if (vsharplength) {
                 js_strncpy(&chars[nchars], vsharp, vsharplength);
                 nchars += vsharplength;"""
0e05369c5fd22dbe4e9a70d39fd330d74a7d9893,74264,367120,bclary@bclary.com,"JavaScript Test - regression test for bug 367120, by moz_bu_r_a4
",1178440904,"""diff --git a/js/tests/js1_5/extensions/regress-367120-01.js b/js/tests/js1_5/extensions/regress-367120-01.js
new file mode 100755
index 0000000..4a44c47
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367120-01.js
@@ -0,0 +1,72 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 367120;
+var summary = 'memory corruption in script_toSource';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  if (typeof Script == 'undefined' || !('toSource' in {}))
+  {
+    print('Test skipped. Script or toSource not defined');
+  }
+  else
+  {
+    var s = new Script("""""""");
+    var o = {
+      valueOf : function() {
+        s.compile("""""""");
+        Array(11).join(Array(11).join(Array(101).join(""""aaaaa"""")));
+        return;
+      }
+    };
+    s.toSource(o);
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-367120-02.js b/js/tests/js1_5/extensions/regress-367120-02.js
new file mode 100755
index 0000000..09e008d
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367120-02.js
@@ -0,0 +1,72 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 367120;
+var summary = 'memory corruption in script_toString';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  if (typeof Script == 'undefined')
+  {
+    print('Test skipped. Script not defined.');
+  }
+  else
+  {
+    var s = new Script("""""""");
+    var o = {
+      valueOf : function() {
+        s.compile("""""""");
+        Array(11).join(Array(11).join(Array(101).join(""""aaaaa"""")));
+        return;
+      }
+    };
+    s.toString(o);
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
4cbbc1a971c6127d429114996a3bb663814339ed,74265,367119,bclary@bclary.com,"JavaScript Test - regression test for bug 367119, by moz_bu_r_a4
",1178440786,"""diff --git a/js/tests/js1_5/extensions/regress-367119-01.js b/js/tests/js1_5/extensions/regress-367119-01.js
new file mode 100755
index 0000000..01b1ca2
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367119-01.js
@@ -0,0 +1,72 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 367119;
+var summary = 'memory corruption in script_exec';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  if (typeof Script == 'undefined')
+  {
+    print('Test skipped. Script or toSource not defined');
+  }
+  else
+  {
+    var s = new Script("""""""");
+    var o = {
+      valueOf : function() {
+        s.compile("""""""");
+        Array(11).join(Array(11).join(Array(101).join(""""aaaaa"""")));
+        return {};
+      }
+    };
+    s.exec(o);
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-367119-02.js b/js/tests/js1_5/extensions/regress-367119-02.js
new file mode 100755
index 0000000..c0bb8ae
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367119-02.js
@@ -0,0 +1,72 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 367119;
+var summary = 'memory corruption in script_exec';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  if (typeof Script == 'undefined')
+  {
+    print('Test skipped. Script or toSource not defined');
+  }
+  else
+  {
+    var s = new Script("""""""");
+    var o = {
+      valueOf : function() {
+        s.compile("""""""");
+        print(1);
+        return {};
+      }
+    };
+    s.exec(o);
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
574f8f693128ed612e55d97792205d44646d1a0d,74266,367118,bclary@bclary.com,"JavaScript Test - regression test for bug 367118, by moz_bu_r_a4
",1178440634,"""diff --git a/js/tests/js1_5/extensions/regress-367118-01.js b/js/tests/js1_5/extensions/regress-367118-01.js
new file mode 100755
index 0000000..f0921a7
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367118-01.js
@@ -0,0 +1,72 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 367118;
+var summary = 'memory corruption in script_compile';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  if (typeof Script == 'undefined')
+  {
+    print('Test skipped. Script or toSource not defined');
+  }
+  else
+  {
+    var s = new Script("""""""");
+    var o = {
+      toString : function() {
+        s.compile("""""""");
+        Array(11).join(Array(11).join(Array(101).join(""""aaaaa"""")));
+        return """"a"""";
+      }
+    };
+    s.compile(o);
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-367118-02.js b/js/tests/js1_5/extensions/regress-367118-02.js
new file mode 100755
index 0000000..56d87bd
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367118-02.js
@@ -0,0 +1,72 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 367118;
+var summary = 'memory corruption in script_compile';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  if (typeof Script == 'undefined')
+  {
+    print('Test skipped. Script or toSource not defined');
+  }
+  else
+  {
+    var s = new Script("""""""");
+    var o = {
+      toString : function() {
+        s.compile("""""""");
+        print(1);
+        return """"a"""";
+      }
+    };
+    s.compile(o);
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
25d1ccac284a3d8af6391bef7aea38b7de33b31f,74267,366123,bclary@bclary.com,"JavaScript Test - regression test for bug 366123, by shutdown
",1178440465,"""diff --git a/js/tests/e4x/Expressions/regress-366123.js b/js/tests/e4x/Expressions/regress-366123.js
new file mode 100755
index 0000000..2270fcf
--- /dev/null
+++ b/js/tests/e4x/Expressions/regress-366123.js
@@ -0,0 +1,65 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): shutdown
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 366123;
+var summary = 'Compiling long XML filtering predicate';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+function exploit() {
+  var code = """"foo = <x/>.("""", obj = {};
+  for(var i = 0; i < 0x10000; i++) {
+    code += """"0, """";
+  }
+  code += """"0);"""";
+  Function(code);
+}
+try
+{
+    exploit();
+}
+catch(ex)
+{
+}
+
+TEST(1, expect, actual);
+
+END();"""
e85c9a974ad9994b3ea38330d253f42f6d3a0c20,74268,365527,bclary@bclary.com,"JavaScript Test - regression test for bug 365527, by Igor Bukanov
",1178440259,"""diff --git a/js/tests/js1_5/extensions/regress-365527.js b/js/tests/js1_5/extensions/regress-365527.js
new file mode 100755
index 0000000..b6fc196
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-365527.js
@@ -0,0 +1,97 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 365527;
+var summary = 'JSOP_ARGUMENTS should set obj register';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+
+  counter = 500*1000;
+
+  var obj;
+
+  function getter()
+    {
+      obj = { get x() { 
+        return getter(); 
+      }, counter: counter};
+      return obj;
+    }
+
+
+  var x;
+
+  function g()
+    {
+      x += this.counter;
+      if (--counter == 0)
+        throw """"Done"""";
+    }
+
+
+  function f()
+    {
+      arguments=g;
+      try {
+        for (;;) {
+          arguments();
+          obj.x;
+        }
+      } catch (e) {
+        print(e);
+      }
+    }
+
+
+  getter();
+  f();
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
51b28511974f7430b760f47eac0eb56a897662d3,74308,375399,bzbarsky@mit.edu,"Make sure that the style context doesn't live too long.  Bug 375399, r=smaug,sr=jst
",1178343924,"""diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index c2c5b92..889a56e 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -6845,26 +6845,31 @@ nsElementSH::PostCreate(nsIXPConnectWrappedNative *wrapper, JSContext *cx,
   nsPresContext *pctx = shell->GetPresContext();
   NS_ENSURE_TRUE(pctx, NS_ERROR_UNEXPECTED);
 
-  nsRefPtr<nsStyleContext> sc = pctx->StyleSet()->ResolveStyleFor(content,
-                                                                  nsnull);
-  NS_ENSURE_TRUE(sc, NS_ERROR_FAILURE);
-
-  nsIURI *bindingURL = sc->GetStyleDisplay()->mBinding;
-  if (!bindingURL) {
-    // No binding, nothing left to do here.
-    return NS_OK;
-  }
-
-  // We have a binding that must be installed.
-  PRBool dummy;
+  // Make sure the style context goes away _before_ we execute the binding
+  // constructor, since the constructor can destroy the relevant presshell.
+  nsRefPtr<nsXBLBinding> binding;
+  {
+    // Scope for the nsRefPtr
+    nsRefPtr<nsStyleContext> sc = pctx->StyleSet()->ResolveStyleFor(content,
+                                                                    nsnull);
+    NS_ENSURE_TRUE(sc, NS_ERROR_FAILURE);
+
+    nsIURI *bindingURL = sc->GetStyleDisplay()->mBinding;
+    if (!bindingURL) {
+      // No binding, nothing left to do here.
+      return NS_OK;
+    }
 
-  nsCOMPtr<nsIXBLService> xblService(do_GetService(""""@mozilla.org/xbl;1""""));
-  NS_ENSURE_TRUE(xblService, NS_ERROR_NOT_AVAILABLE);
+    // We have a binding that must be installed.
+    PRBool dummy;
 
-  nsRefPtr<nsXBLBinding> binding;
-  xblService->LoadBindings(content, bindingURL, PR_FALSE,
-                           getter_AddRefs(binding), &dummy);
+    nsCOMPtr<nsIXBLService> xblService(do_GetService(""""@mozilla.org/xbl;1""""));
+    NS_ENSURE_TRUE(xblService, NS_ERROR_NOT_AVAILABLE);
 
+    xblService->LoadBindings(content, bindingURL, PR_FALSE,
+                             getter_AddRefs(binding), &dummy);
+  }
+  
   if (binding) {
     binding->ExecuteAttachedHandler();
   }"""
13cf6c90ba51db1ca45d3e2f030b5ba98718f121,74338,378787,sayrer@gmail.com,"Bug 378787. Digest Authentication Request Splitting. r=biesi, sr=brendan
",1178249490,"""diff --git a/netwerk/protocol/http/src/nsHttpDigestAuth.cpp b/netwerk/protocol/http/src/nsHttpDigestAuth.cpp
index c4d95b8..b5f00fe 100644
--- a/netwerk/protocol/http/src/nsHttpDigestAuth.cpp
+++ b/netwerk/protocol/http/src/nsHttpDigestAuth.cpp
@@ -338,14 +338,31 @@ nsHttpDigestAuth::GenerateCredentials(nsIHttpChannel *httpChannel,
                          cnonce, response_digest);
   if (NS_FAILED(rv)) return rv;
 
+  //
+  // Values that need to match the quoted-string production from RFC 2616:
+  //
+  //    username
+  //    realm
+  //    nonce
+  //    opaque
+  //    cnonce
+  //
+
   nsCAutoString authString;
-  authString.AssignLiteral(""""Digest username=\"""""""");
-  authString += cUser;
-  authString.AppendLiteral(""""\"""", realm=\"""""""");
-  authString += realm;
-  authString.AppendLiteral(""""\"""", nonce=\"""""""");
-  authString += nonce;
-  authString.AppendLiteral(""""\"""", uri=\"""""""");
+
+  authString.AssignLiteral(""""Digest username="""");
+  rv = AppendQuotedString(cUser, authString);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  authString.AppendLiteral("""", realm="""");
+  rv = AppendQuotedString(realm, authString);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  authString.AppendLiteral("""", nonce="""");
+  rv = AppendQuotedString(nonce, authString);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  authString.AppendLiteral("""", uri=\"""""""");
   authString += path;
   if (algorithm & ALGO_SPECIFIED) {
     authString.AppendLiteral(""""\"""", algorithm="""");
@@ -358,14 +375,16 @@ nsHttpDigestAuth::GenerateCredentials(nsIHttpChannel *httpChannel,
   }
   authString.AppendLiteral("""", response=\"""""""");
   authString += response_digest;
+  authString += '\""""';
 
   if (!opaque.IsEmpty()) {
-    authString.AppendLiteral(""""\"""", opaque=\"""""""");
-    authString += opaque;
+    authString.AppendLiteral("""", opaque="""");
+    rv = AppendQuotedString(opaque, authString);
+    NS_ENSURE_SUCCESS(rv, rv);
   }
 
   if (qop) {
-    authString.AppendLiteral(""""\"""", qop="""");
+    authString.AppendLiteral("""", qop="""");
     if (requireExtraQuotes)
       authString += '\""""';
     authString.AppendLiteral(""""auth"""");
@@ -375,10 +394,12 @@ nsHttpDigestAuth::GenerateCredentials(nsIHttpChannel *httpChannel,
       authString += '\""""';
     authString.AppendLiteral("""", nc="""");
     authString += nonce_count;
-    authString.AppendLiteral("""", cnonce=\"""""""");
-    authString += cnonce;
+
+    authString.AppendLiteral("""", cnonce="""");
+    rv = AppendQuotedString(cnonce, authString);
+    NS_ENSURE_SUCCESS(rv, rv);
   }
-  authString += '\""""';
+
 
   *creds = ToNewCString(authString);
   return NS_OK;
@@ -669,4 +690,39 @@ nsHttpDigestAuth::ParseChallenge(const char * challenge,
   return NS_OK;
 }
 
+nsresult
+nsHttpDigestAuth::AppendQuotedString(const nsACString & value,
+                                     nsACString & aHeaderLine)
+{
+  nsCAutoString quoted;
+  nsACString::const_iterator s, e;
+  value.BeginReading(s);
+  value.EndReading(e);
+
+  //
+  // Encode string according to RFC 2616 quoted-string production
+  //
+  quoted.Append('""""');
+  for ( ; s != e; ++s) {
+    //
+    // CTL = <any US-ASCII control character (octets 0 - 31) and DEL (127)>
+    //
+    if (*s <= 31 || *s == 127) {
+      return NS_ERROR_FAILURE;
+    }
+
+    // Escape two syntactically significant characters
+    if (*s == '""""' || *s == '\\') {
+      quoted.Append('\\');
+    }
+
+    quoted.Append(*s);
+  }
+  // FIXME: bug 41489
+  // We should RFC2047-encode non-Latin-1 values according to spec
+  quoted.Append('""""');
+  aHeaderLine.Append(quoted);
+  return NS_OK;
+}
+
 // vim: ts=2 sw=2
diff --git a/netwerk/protocol/http/src/nsHttpDigestAuth.h b/netwerk/protocol/http/src/nsHttpDigestAuth.h
index cb1e022..044236a 100644
--- a/netwerk/protocol/http/src/nsHttpDigestAuth.h
+++ b/netwerk/protocol/http/src/nsHttpDigestAuth.h
@@ -109,6 +109,10 @@ class nsHttpDigestAuth : public nsIHttpAuthenticator
 
     nsresult GetMethodAndPath(nsIHttpChannel *, PRBool, nsCString &, nsCString &);
 
+    // append the quoted version of value to aHeaderLine
+    nsresult AppendQuotedString(const nsACString & value,
+                                nsACString & aHeaderLine);
+
   protected:
     nsCOMPtr<nsICryptoHash>        mVerifier;
     char                           mHashBuf[DIGEST_LENGTH];
diff --git a/netwerk/test/unit/test_authentication.js b/netwerk/test/unit/test_authentication.js
index 0cf0768..8bde8f0 100644
--- a/netwerk/test/unit/test_authentication.js
+++ b/netwerk/test/unit/test_authentication.js
@@ -85,13 +85,14 @@ AuthPrompt2.prototype = {
     function ap2_promptAuth(channel, level, authInfo)
   {
     var isNTLM = channel.URI.path.indexOf(""""ntlm"""") != -1;
+    var isDigest = channel.URI.path.indexOf(""""digest"""") != -1;
 
     if (isNTLM)
       this.expectedRealm = """"""""; // NTLM knows no realms
 
     do_check_eq(this.expectedRealm, authInfo.realm);
 
-    var expectedLevel = isNTLM ?
+    var expectedLevel = (isNTLM || isDigest) ?
                         nsIAuthPrompt2.LEVEL_PW_ENCRYPTED :
                         nsIAuthPrompt2.LEVEL_NONE;
     do_check_eq(expectedLevel, level);
@@ -103,7 +104,7 @@ AuthPrompt2.prototype = {
 
     do_check_eq(expectedFlags, authInfo.flags);
 
-    var expectedScheme = isNTLM ? """"ntlm"""" : """"basic"""";
+    var expectedScheme = isNTLM ? """"ntlm"""" : isDigest ? """"digest"""" : """"basic"""";
     do_check_eq(expectedScheme, authInfo.authenticationScheme);
 
     // No passwords in the URL -> nothing should be prefilled
@@ -130,9 +131,10 @@ AuthPrompt2.prototype = {
   }
 };
 
-function Requestor(flags, versions) {
+function Requestor(flags, versions, username) {
   this.flags = flags;
   this.versions = versions;
+  this.username = username;
 }
 
 Requestor.prototype = {
@@ -155,7 +157,9 @@ Requestor.prototype = {
         iid.equals(Components.interfaces.nsIAuthPrompt2)) {
       // Allow the prompt to store state by caching it here
       if (!this.prompt2)
-        this.prompt2 = new AuthPrompt2(this.flags); 
+        this.prompt2 = new AuthPrompt2(this.flags);
+      if (this.username)
+        this.prompt2.user = this.username;
       return this.prompt2;
     }
 
@@ -251,7 +255,8 @@ function makeChan(url) {
 
 var tests = [test_noauth, test_returnfalse1, test_wrongpw1, test_prompt1,
              test_returnfalse2, test_wrongpw2, test_prompt2, test_ntlm,
-             test_auth];
+             test_auth, test_digest_noauth, test_digest,
+             test_digest_bogus_user];
 var current_test = 0;
 
 var httpserv = null;
@@ -262,6 +267,7 @@ function run_test() {
   httpserv.registerPathHandler(""""/auth"""", authHandler);
   httpserv.registerPathHandler(""""/auth/ntlm/simple"""", authNtlmSimple);
   httpserv.registerPathHandler(""""/auth/realm"""", authRealm);
+  httpserv.registerPathHandler(""""/auth/digest"""", authDigest);
 
   httpserv.start(4444);
 
@@ -357,6 +363,35 @@ function test_auth() {
   do_test_pending();
 }
 
+function test_digest_noauth() {
+  var chan = makeChan(""""http://localhost:4444/auth/digest"""");
+
+  //chan.notificationCallbacks = new Requestor(FLAG_RETURN_FALSE, 2);
+  listener.expectedCode = 401; // Unauthorized
+  chan.asyncOpen(listener, null);
+
+  do_test_pending();
+}
+
+function test_digest() {
+  var chan = makeChan(""""http://localhost:4444/auth/digest"""");
+
+  chan.notificationCallbacks = new Requestor(0, 2);
+  listener.expectedCode = 200; // OK
+  chan.asyncOpen(listener, null);
+
+  do_test_pending();
+}
+
+function test_digest_bogus_user() {
+  var chan = makeChan(""""http://localhost:4444/auth/digest"""");
+  chan.notificationCallbacks =  new Requestor(0, 2, """"foo\nbar"""");
+  listener.expectedCode = 401; // unauthorized
+  chan.asyncOpen(listener, null);
+
+  do_test_pending();
+}
+
 // PATH HANDLERS
 
 // /auth
@@ -406,3 +441,82 @@ function authRealm(metadata, response) {
 
   response.bodyOutputStream.write(body, body.length);
 }
+
+//
+// Digest functions
+// 
+function bytesFromString(str) {
+ var converter =
+   Components.classes[""""@mozilla.org/intl/scriptableunicodeconverter""""]
+     .createInstance(Components.interfaces.nsIScriptableUnicodeConverter);
+ converter.charset = """"UTF-8"""";
+ var result = {};
+ var data = converter.convertToByteArray(str, result);
+ return data;
+}
+
+// return the two-digit hexadecimal code for a byte
+function toHexString(charCode) {
+ return (""""0"""" + charCode.toString(16)).slice(-2);
+}
+
+function H(str) {
+ var data = bytesFromString(str);
+ var ch = Components.classes[""""@mozilla.org/security/hash;1""""]
+            .createInstance(Components.interfaces.nsICryptoHash);
+ ch.init(Components.interfaces.nsICryptoHash.MD5);
+ ch.update(data, data.length);
+ var hash = ch.finish(false);
+ return [toHexString(hash.charCodeAt(i)) for (i in hash)].join("""""""");
+}
+
+//
+// Digest handler
+//
+// /auth/digest
+function authDigest(metadata, response) {
+ var nonce = """"6f93719059cf8d568005727f3250e798"""";
+ var opaque = """"1234opaque1234"""";
+ var cnonceRE = /cnonce=""""(\w+)""""/;
+ var responseRE = /response=""""(\w+)""""/;
+ var usernameRE = /username=""""(\w+)""""/;
+ var authenticate = 'Digest realm=""""secret"""", domain=""""/"""",  qop=auth,' +
+                    'algorithm=MD5, nonce=""""' + nonce+ '"""" opaque=""""' + 
+                     opaque + '""""';
+ var body;
+ // check creds if we have them
+ if (metadata.hasHeader(""""Authorization"""")) {
+   var auth = metadata.getHeader(""""Authorization"""");
+   var cnonce = (auth.match(cnonceRE))[1];
+   var clientDigest = (auth.match(responseRE))[1];
+   var username = (auth.match(usernameRE))[1];
+   var nc = """"00000001"""";
+   
+   if (username != """"guest"""") {
+     response.setStatusLine(metadata.httpVersion, 400, """"bad request"""");
+     body = """"should never get here"""";
+   } else {
+     // see RFC2617 for the description of this calculation
+     var A1 = """"guest:secret:guest"""";
+     var A2 = """"GET:/auth/digest"""";
+     var noncebits = [nonce, nc, cnonce, """"auth"""", H(A2)].join("""":"""");
+     var digest = H([H(A1), noncebits].join("""":""""));
+
+     if (clientDigest == digest) {
+       response.setStatusLine(metadata.httpVersion, 200, """"OK, authorized"""");
+       body = """"success"""";
+     } else {
+       response.setStatusLine(metadata.httpVersion, 401, """"Unauthorized"""");
+       response.setHeader(""""WWW-Authenticate"""", authenticate, false);
+       body = """"auth failed"""";
+     }
+   }
+ } else {
+   // no header, send one
+   response.setStatusLine(metadata.httpVersion, 401, """"Unauthorized"""");
+   response.setHeader(""""WWW-Authenticate"""", authenticate, false);
+   body = """"failed, no header"""";
+ }
+ 
+ response.bodyOutputStream.write(body, body.length);
+}"""
9d93c8910f98a2e5695880bb3acc36bc3f8a2d26,74491,378273,mats.palmgren@bredband.net,"Make nsWindow methods assume the caller holds a strong ref on 'this'. b=378273 r+sr=roc
",1177894007,"""diff --git a/content/events/src/nsIMEStateManager.cpp b/content/events/src/nsIMEStateManager.cpp
index 0b39f6c..f3db6f8 100755
--- a/content/events/src/nsIMEStateManager.cpp
+++ b/content/events/src/nsIMEStateManager.cpp
@@ -85,7 +85,7 @@ nsIMEStateManager::OnRemoveContent(nsPresContext* aPresContext,
     return NS_OK;
 
   // Current IME transaction should commit
-  nsIKBStateControl* kb = GetKBStateControl(sPresContext);
+  nsCOMPtr<nsIKBStateControl> kb = GetKBStateControl(sPresContext);
   if (kb) {
     nsresult rv = kb->CancelIMEComposition();
     if (NS_FAILED(rv))
@@ -109,7 +109,7 @@ nsIMEStateManager::OnChangeFocus(nsPresContext* aPresContext,
     return NS_OK;
   }
 
-  nsIKBStateControl* kb = GetKBStateControl(aPresContext);
+  nsCOMPtr<nsIKBStateControl> kb = GetKBStateControl(aPresContext);
   if (!kb) {
     // This platform doesn't support IME controlling
     return NS_OK;
@@ -138,7 +138,7 @@ nsIMEStateManager::OnChangeFocus(nsPresContext* aPresContext,
 
   // Current IME transaction should commit
   if (sPresContext) {
-    nsIKBStateControl* oldKB;
+    nsCOMPtr<nsIKBStateControl> oldKB;
     if (sPresContext == aPresContext)
       oldKB = kb;
     else
@@ -183,7 +183,7 @@ nsIMEStateManager::OnDeactivate(nsPresContext* aPresContext)
   // may be changed on other applications.
   sContent = nsnull;
   // We should enable the IME state for other applications.
-  nsIKBStateControl* kb = GetKBStateControl(aPresContext);
+  nsCOMPtr<nsIKBStateControl> kb = GetKBStateControl(aPresContext);
   if (kb)
     SetIMEState(aPresContext, nsIContent::IME_STATUS_ENABLE, kb);
 #endif // NS_KBSC_USE_SHARED_CONTEXT
diff --git a/widget/src/gtk2/nsWindow.cpp b/widget/src/gtk2/nsWindow.cpp
index ca01f7f..4eabde4 100644
--- a/widget/src/gtk2/nsWindow.cpp
+++ b/widget/src/gtk2/nsWindow.cpp
@@ -804,7 +804,7 @@ nsWindow::SetFocus(PRBool aRaise)
         }
     }
 
-    nsWindow  *owningWindow = get_window_for_gtk_widget(owningWidget);
+    nsRefPtr<nsWindow> owningWindow = get_window_for_gtk_widget(owningWidget);
     if (!owningWindow)
         return NS_ERROR_FAILURE;
 
@@ -841,6 +841,7 @@ nsWindow::SetFocus(PRBool aRaise)
     // If there is already a focused child window, dispatch a LOSTFOCUS
     // event from that widget and unset its got focus flag.
     if (gFocusWindow) {
+        nsRefPtr<nsWindow> kungFuDeathGrip = gFocusWindow;
 #ifdef USE_XIM
         // If the focus window and this window share the same input
         // context we don't have to change the focus of the IME
@@ -1741,56 +1742,62 @@ nsWindow::OnExposeEvent(GtkWidget *aWidget, GdkEventExpose *aEvent)
     nsEventStatus status;
     DispatchEvent(&event, status);
 
+    // DispatchEvent can Destroy us (bug 378273), avoid doing any paint
+    // operations below if that happened - it will lead to XError and exit().
+    if (NS_LIKELY(!mIsDestroyed)) {
+
 #ifdef MOZ_CAIRO_GFX
-    if (status != nsEventStatus_eIgnore) {
-        if (translucent) {
-            nsRefPtr<gfxPattern> pattern = ctx->PopGroup();
-            ctx->SetOperator(gfxContext::OPERATOR_SOURCE);
-            ctx->SetPattern(pattern);
-            ctx->Paint();
-
-            nsRefPtr<gfxImageSurface> img =
-                new gfxImageSurface(gfxIntSize(boundsRect.width, boundsRect.height),
-                                    gfxImageSurface::ImageFormatA8);
-            img->SetDeviceOffset(gfxPoint(-boundsRect.x, -boundsRect.y));
+        if (status != nsEventStatus_eIgnore) {
+            if (translucent) {
+                nsRefPtr<gfxPattern> pattern = ctx->PopGroup();
+                ctx->SetOperator(gfxContext::OPERATOR_SOURCE);
+                ctx->SetPattern(pattern);
+                ctx->Paint();
+
+                nsRefPtr<gfxImageSurface> img =
+                    new gfxImageSurface(gfxIntSize(boundsRect.width, boundsRect.height),
+                                        gfxImageSurface::ImageFormatA8);
+                img->SetDeviceOffset(gfxPoint(-boundsRect.x, -boundsRect.y));
             
-            nsRefPtr<gfxContext> imgCtx = new gfxContext(img);
-            imgCtx->SetPattern(pattern);
-            imgCtx->SetOperator(gfxContext::OPERATOR_SOURCE);
-            imgCtx->Paint();
+                nsRefPtr<gfxContext> imgCtx = new gfxContext(img);
+                imgCtx->SetPattern(pattern);
+                imgCtx->SetOperator(gfxContext::OPERATOR_SOURCE);
+                imgCtx->Paint();
         
-            UpdateTranslucentWindowAlphaInternal(nsRect(boundsRect.x, boundsRect.y,
-                                                        boundsRect.width, boundsRect.height),
-                                                 img->Data(), img->Stride());
-        } else {
+                UpdateTranslucentWindowAlphaInternal(nsRect(boundsRect.x, boundsRect.y,
+                                                            boundsRect.width, boundsRect.height),
+                                                     img->Data(), img->Stride());
+            } else {
 #ifdef MOZ_ENABLE_GLITZ
-            ctx->PopGroupToSource();
-            ctx->Paint();
-#else // MOZ_ENABLE_GLITZ
-            if (bufferPixmapSurface) {
-                ctx->SetSource(bufferPixmapSurface);
+                ctx->PopGroupToSource();
                 ctx->Paint();
-            }
+#else // MOZ_ENABLE_GLITZ
+                if (bufferPixmapSurface) {
+                    ctx->SetSource(bufferPixmapSurface);
+                    ctx->Paint();
+                }
 #endif // MOZ_ENABLE_GLITZ
-        }
-    } else {
-        // ignore
-        if (translucent) {
-            ctx->PopGroup();
+            }
         } else {
+            // ignore
+            if (translucent) {
+                ctx->PopGroup();
+            } else {
 #ifdef MOZ_ENABLE_GLITZ
-            ctx->PopGroup();
+                ctx->PopGroup();
 #endif // MOZ_ENABLE_GLITZ
+            }
         }
-    }
 
-    if (bufferPixmap) {
-        g_object_unref(G_OBJECT(bufferPixmap));
-    }
+        if (bufferPixmap) {
+            g_object_unref(G_OBJECT(bufferPixmap));
+        }
 
-    ctx->Restore();
+        ctx->Restore();
 #endif // MOZ_CAIRO_GFX
 
+    }
+
     g_free(rects);
 
     // check the return value!
@@ -1933,6 +1940,7 @@ nsWindow::OnMotionNotifyEvent(GtkWidget *aWidget, GdkEventMotion *aEvent)
 
     // if plugins still keeps the focus, get it back
     if (gPluginFocusWindow && gPluginFocusWindow != this) {
+        nsRefPtr<nsWindow> kungFuDeathGrip = gPluginFocusWindow;
         gPluginFocusWindow->LoseNonXEmbedPluginFocus();
     }
 
@@ -2017,8 +2025,6 @@ nsWindow::OnButtonPressEvent(GtkWidget *aWidget, GdkEventButton *aEvent)
         break;
     }
 
-    nsCOMPtr<nsIWidget> kungFuDeathGrip = this;
-
     nsMouseEvent event(PR_TRUE, NS_MOUSE_BUTTON_DOWN, this, nsMouseEvent::eReal);
     event.button = domButton;
     InitButtonEvent(event, aEvent);
@@ -2026,7 +2032,8 @@ nsWindow::OnButtonPressEvent(GtkWidget *aWidget, GdkEventButton *aEvent)
     DispatchEvent(&event, status);
 
     // right menu click on linux should also pop up a context menu
-    if (domButton == nsMouseEvent::eRightButton) {
+    if (domButton == nsMouseEvent::eRightButton &&
+        NS_LIKELY(!mIsDestroyed)) {
         nsMouseEvent contextMenuEvent(PR_TRUE, NS_CONTEXTMENU, this,
                                       nsMouseEvent::eReal);
         InitButtonEvent(contextMenuEvent, aEvent);
@@ -2108,6 +2115,7 @@ nsWindow::OnContainerFocusOutEvent(GtkWidget *aWidget, GdkEventFocus *aEvent)
 
     // plugin lose focus
     if (gPluginFocusWindow) {
+        nsRefPtr<nsWindow> kungFuDeathGrip = gPluginFocusWindow;
         gPluginFocusWindow->LoseNonXEmbedPluginFocus();
     }
 
@@ -2139,6 +2147,7 @@ nsWindow::OnContainerFocusOutEvent(GtkWidget *aWidget, GdkEventFocus *aEvent)
 
  foundit:
 
+    nsRefPtr<nsWindow> kungFuDeathGrip = gFocusWindow;
 #ifdef USE_XIM
     gFocusWindow->IMELoseFocus();
 #endif
@@ -2147,7 +2156,7 @@ nsWindow::OnContainerFocusOutEvent(GtkWidget *aWidget, GdkEventFocus *aEvent)
 
     // We only dispatch a deactivate event if we are a toplevel
     // window, otherwise the embedding code takes care of it.
-    if (mIsTopLevel)
+    if (mIsTopLevel && NS_LIKELY(!gFocusWindow->mIsDestroyed))
         gFocusWindow->DispatchDeactivateEvent();
 
     gFocusWindow = nsnull;
@@ -2199,6 +2208,8 @@ nsWindow::OnKeyPressEvent(GtkWidget *aWidget, GdkEventKey *aEvent)
         nsKeyEvent downEvent(PR_TRUE, NS_KEY_DOWN, this);
         InitKeyEvent(downEvent, aEvent);
         DispatchEvent(&downEvent, status);
+        if (NS_UNLIKELY(mIsDestroyed))
+            return PR_TRUE;
         isKeyDownCancelled = (status == nsEventStatus_eConsumeNoDefault);
     }
 
@@ -2292,8 +2303,6 @@ nsWindow::OnKeyReleaseEvent(GtkWidget *aWidget, GdkEventKey *aEvent)
         return TRUE;
 #endif
 
-    nsEventStatus status;
-
     // send the key event as a key up event
     nsKeyEvent event(PR_TRUE, NS_KEY_UP, this);
     InitKeyEvent(event, aEvent);
@@ -2301,6 +2310,7 @@ nsWindow::OnKeyReleaseEvent(GtkWidget *aWidget, GdkEventKey *aEvent)
     // unset the key down flag
     ClearKeyDownFlag(event.keyCode);
 
+    nsEventStatus status;
     DispatchEvent(&event, status);
 
     // If the event was consumed, return.
@@ -2387,7 +2397,7 @@ nsWindow::ThemeChanged()
     nsEventStatus status = nsEventStatus_eIgnore;
     DispatchEvent(&event, status);
 
-    if (!mDrawingarea)
+    if (!mDrawingarea || NS_UNLIKELY(mIsDestroyed))
         return;
 
     // Dispatch NS_THEMECHANGED to all child windows
@@ -2399,8 +2409,10 @@ nsWindow::ThemeChanged()
         nsWindow *win = (nsWindow*) g_object_get_data(G_OBJECT(gdkWin),
                                                       """"nsWindow"""");
 
-        if (win && win != this)   // guard against infinite recursion
+        if (win && win != this) { // guard against infinite recursion
+            nsRefPtr<nsWindow> kungFuDeathGrip = win;
             win->ThemeChanged();
+        }
 
         children = children->next;
     }
@@ -2447,12 +2459,9 @@ nsWindow::OnDragMotionEvent(GtkWidget *aWidget,
     nscoord retx = 0;
     nscoord rety = 0;
 
-    GdkWindow *thisWindow = aWidget->window;
-    GdkWindow *returnWindow = NULL;
-    returnWindow = get_inner_gdk_window(thisWindow, aX, aY,
-                                        &retx, &rety);
-    nsWindow *innerMostWidget = NULL;
-    innerMostWidget = get_window_for_gdk_window(returnWindow);
+    GdkWindow *innerWindow = get_inner_gdk_window(aWidget->window, aX, aY,
+                                                  &retx, &rety);
+    nsRefPtr<nsWindow> innerMostWidget = get_window_for_gdk_window(innerWindow);
 
     if (!innerMostWidget)
         innerMostWidget = this;
@@ -2462,6 +2471,7 @@ nsWindow::OnDragMotionEvent(GtkWidget *aWidget,
         // if it wasn't this
         if (mLastDragMotionWindow != innerMostWidget) {
             // send a drag event to the last window that got a motion event
+            nsRefPtr<nsWindow> kungFuDeathGrip = mLastDragMotionWindow;
             mLastDragMotionWindow->OnDragLeave();
             // and enter on the new one
             innerMostWidget->OnDragEnter(retx, rety);
@@ -2497,13 +2507,9 @@ nsWindow::OnDragMotionEvent(GtkWidget *aWidget,
     event.refPoint.y = rety;
     event.time = aTime;
 
-    innerMostWidget->AddRef();
-
     nsEventStatus status;
     innerMostWidget->DispatchEvent(&event, status);
 
-    innerMostWidget->Release();
-
     // we're done with the drag motion event.  notify the drag service.
     dragSessionGTK->TargetEndDragMotion(aWidget, aDragContext, aTime);
 
@@ -2557,12 +2563,9 @@ nsWindow::OnDragDropEvent(GtkWidget *aWidget,
     nscoord retx = 0;
     nscoord rety = 0;
 
-    GdkWindow *thisWindow = aWidget->window;
-    GdkWindow *returnWindow = NULL;
-    returnWindow = get_inner_gdk_window(thisWindow, aX, aY, &retx, &rety);
-
-    nsWindow *innerMostWidget = NULL;
-    innerMostWidget = get_window_for_gdk_window(returnWindow);
+    GdkWindow *innerWindow = get_inner_gdk_window(aWidget->window, aX, aY,
+                                                  &retx, &rety);
+    nsRefPtr<nsWindow> innerMostWidget = get_window_for_gdk_window(innerWindow);
 
     // set this now before any of the drag enter or leave events happen
     dragSessionGTK->TargetSetLastContext(aWidget, aDragContext, aTime);
@@ -2575,6 +2578,7 @@ nsWindow::OnDragDropEvent(GtkWidget *aWidget,
         // if it wasn't this
         if (mLastDragMotionWindow != innerMostWidget) {
             // send a drag event to the last window that got a motion event
+            nsRefPtr<nsWindow> kungFuDeathGrip = mLastDragMotionWindow;
             mLastDragMotionWindow->OnDragLeave();
             // and enter on the new one
             innerMostWidget->OnDragEnter(retx, rety);
@@ -2600,8 +2604,6 @@ nsWindow::OnDragDropEvent(GtkWidget *aWidget,
     // re-validate the drag target and then we do the drop.  The events
     // look the same except for the type.
 
-    innerMostWidget->AddRef();
-
     nsMouseEvent event(PR_TRUE, NS_DRAGDROP_OVER, innerMostWidget,
                        nsMouseEvent::eReal);
 
@@ -2617,14 +2619,17 @@ nsWindow::OnDragDropEvent(GtkWidget *aWidget,
     nsEventStatus status;
     innerMostWidget->DispatchEvent(&event, status);
 
-    event.message = NS_DRAGDROP_DROP;
-    event.widget = innerMostWidget;
-    event.refPoint.x = retx;
-    event.refPoint.y = rety;
-
-    innerMostWidget->DispatchEvent(&event, status);
+    // We need to check innerMostWidget->mIsDestroyed here because the nsRefPtr
+    // only protects innerMostWidget from being deleted, it does NOT protect
+    // against nsView::~nsView() calling Destroy() on it, bug 378670.
+    if (!innerMostWidget->mIsDestroyed) {
+        event.message = NS_DRAGDROP_DROP;
+        event.widget = innerMostWidget;
+        event.refPoint.x = retx;
+        event.refPoint.y = rety;
 
-    innerMostWidget->Release();
+        innerMostWidget->DispatchEvent(&event, status);
+    }
 
     // before we unset the context we need to do a drop_finish
 
@@ -2675,8 +2680,6 @@ nsWindow::OnDragLeave(void)
 
     nsMouseEvent event(PR_TRUE, NS_DRAGDROP_EXIT, this, nsMouseEvent::eReal);
 
-    AddRef();
-
     nsEventStatus status;
     DispatchEvent(&event, status);
 
@@ -2699,8 +2702,6 @@ nsWindow::OnDragLeave(void)
             }
         }
     }
-
-    Release();
 }
 
 void
@@ -2710,8 +2711,6 @@ nsWindow::OnDragEnter(nscoord aX, nscoord aY)
 
     LOG((""""nsWindow::OnDragEnter(%p)\n"""", this));
 
-    nsRefPtr<nsWindow> kungFuDeathGrip(this);
-
     nsCOMPtr<nsIDragService> dragService = do_GetService(kCDragServiceCID);
 
     if (dragService) {
@@ -3782,6 +3781,7 @@ nsWindow::SetNonXEmbedPluginFocus()
     }
 
     if (gPluginFocusWindow) {
+        nsRefPtr<nsWindow> kungFuDeathGrip = gPluginFocusWindow;
         gPluginFocusWindow->LoseNonXEmbedPluginFocus();
     }
 
@@ -4272,7 +4272,7 @@ get_gtk_cursor(nsCursor aCursor)
 gboolean
 expose_event_cb(GtkWidget *widget, GdkEventExpose *event)
 {
-    nsWindow *window = get_window_for_gdk_window(event->window);
+    nsRefPtr<nsWindow> window = get_window_for_gdk_window(event->window);
     if (!window)
         return FALSE;
 
@@ -4293,7 +4293,7 @@ gboolean
 configure_event_cb(GtkWidget *widget,
                    GdkEventConfigure *event)
 {
-    nsWindow *window = get_window_for_gtk_widget(widget);
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(widget);
     if (!window)
         return FALSE;
 
@@ -4304,7 +4304,7 @@ configure_event_cb(GtkWidget *widget,
 void
 size_allocate_cb (GtkWidget *widget, GtkAllocation *allocation)
 {
-    nsWindow *window = get_window_for_gtk_widget(widget);
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(widget);
     if (!window)
         return;
 
@@ -4315,7 +4315,7 @@ size_allocate_cb (GtkWidget *widget, GtkAllocation *allocation)
 gboolean
 delete_event_cb(GtkWidget *widget, GdkEventAny *event)
 {
-    nsWindow *window = get_window_for_gtk_widget(widget);
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(widget);
     if (!window)
         return FALSE;
 
@@ -4326,14 +4326,14 @@ delete_event_cb(GtkWidget *widget, GdkEventAny *event)
 
 /* static */
 gboolean
-enter_notify_event_cb (GtkWidget *widget,
-                       GdkEventCrossing *event)
+enter_notify_event_cb(GtkWidget *widget,
+                      GdkEventCrossing *event)
 {
     if (is_parent_ungrab_enter(event)) {
         return TRUE;
     }
 
-    nsWindow *window = get_window_for_gdk_window(event->window);
+    nsRefPtr<nsWindow> window = get_window_for_gdk_window(event->window);
     if (!window)
         return TRUE;
 
@@ -4344,14 +4344,14 @@ enter_notify_event_cb (GtkWidget *widget,
 
 /* static */
 gboolean
-leave_notify_event_cb (GtkWidget *widget,
-                       GdkEventCrossing *event)
+leave_notify_event_cb(GtkWidget *widget,
+                      GdkEventCrossing *event)
 {
     if (is_parent_grab_leave(event)) {
         return TRUE;
     }
 
-    nsWindow *window = get_window_for_gdk_window(event->window);
+    nsRefPtr<nsWindow> window = get_window_for_gdk_window(event->window);
     if (!window)
         return TRUE;
 
@@ -4362,9 +4362,9 @@ leave_notify_event_cb (GtkWidget *widget,
 
 /* static */
 gboolean
-motion_notify_event_cb (GtkWidget *widget, GdkEventMotion *event)
+motion_notify_event_cb(GtkWidget *widget, GdkEventMotion *event)
 {
-    nsWindow *window = get_window_for_gdk_window(event->window);
+    nsRefPtr<nsWindow> window = get_window_for_gdk_window(event->window);
     if (!window)
         return TRUE;
 
@@ -4375,7 +4375,7 @@ motion_notify_event_cb (GtkWidget *widget, GdkEventMotion *event)
 
 /* static */
 gboolean
-button_press_event_cb   (GtkWidget *widget, GdkEventButton *event)
+button_press_event_cb(GtkWidget *widget, GdkEventButton *event)
 {
     LOG((""""button_press_event_cb\n""""));
     nsWindow *window = get_window_for_gdk_window(event->window);
@@ -4389,9 +4389,9 @@ button_press_event_cb   (GtkWidget *widget, GdkEventButton *event)
 
 /* static */
 gboolean
-button_release_event_cb (GtkWidget *widget, GdkEventButton *event)
+button_release_event_cb(GtkWidget *widget, GdkEventButton *event)
 {
-    nsWindow *window = get_window_for_gdk_window(event->window);
+    nsRefPtr<nsWindow> window = get_window_for_gdk_window(event->window);
     if (!window)
         return TRUE;
 
@@ -4402,9 +4402,9 @@ button_release_event_cb (GtkWidget *widget, GdkEventButton *event)
 
 /* static */
 gboolean
-focus_in_event_cb (GtkWidget *widget, GdkEventFocus *event)
+focus_in_event_cb(GtkWidget *widget, GdkEventFocus *event)
 {
-    nsWindow *window = get_window_for_gtk_widget(widget);
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(widget);
     if (!window)
         return FALSE;
 
@@ -4415,9 +4415,9 @@ focus_in_event_cb (GtkWidget *widget, GdkEventFocus *event)
 
 /* static */
 gboolean
-focus_out_event_cb (GtkWidget *widget, GdkEventFocus *event)
+focus_out_event_cb(GtkWidget *widget, GdkEventFocus *event)
 {
-    nsWindow *window = get_window_for_gtk_widget(widget);
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(widget);
     if (!window)
         return FALSE;
 
@@ -4428,14 +4428,14 @@ focus_out_event_cb (GtkWidget *widget, GdkEventFocus *event)
 
 /* static */
 GdkFilterReturn
-plugin_window_filter_func (GdkXEvent *gdk_xevent, GdkEvent *event, gpointer data)
+plugin_window_filter_func(GdkXEvent *gdk_xevent, GdkEvent *event, gpointer data)
 {
     GtkWidget *widget;
     GdkWindow *plugin_window;
     gpointer  user_data;
     XEvent    *xevent;
 
-    nsWindow  *nswindow = (nsWindow*)data;
+    nsRefPtr<nsWindow> nswindow = (nsWindow*)data;
     GdkFilterReturn return_val;
 
     xevent = (XEvent *)gdk_xevent;
@@ -4490,9 +4490,9 @@ plugin_window_filter_func (GdkXEvent *gdk_xevent, GdkEvent *event, gpointer data
 
 /* static */
 GdkFilterReturn
-plugin_client_message_filter (GdkXEvent *gdk_xevent,
-                              GdkEvent *event,
-                              gpointer data)
+plugin_client_message_filter(GdkXEvent *gdk_xevent,
+                             GdkEvent *event,
+                             gpointer data)
 {
     XEvent    *xevent;
     xevent = (XEvent *)gdk_xevent;
@@ -4527,7 +4527,7 @@ plugin_client_message_filter (GdkXEvent *gdk_xevent,
 
 /* static */
 gboolean
-key_press_event_cb (GtkWidget *widget, GdkEventKey *event)
+key_press_event_cb(GtkWidget *widget, GdkEventKey *event)
 {
     LOG((""""key_press_event_cb\n""""));
     // find the window with focus and dispatch this event to that widget
@@ -4535,13 +4535,13 @@ key_press_event_cb (GtkWidget *widget, GdkEventKey *event)
     if (!window)
         return FALSE;
 
-    nsWindow *focusWindow = gFocusWindow ? gFocusWindow : window;
+    nsRefPtr<nsWindow> focusWindow = gFocusWindow ? gFocusWindow : window;
 
     return focusWindow->OnKeyPressEvent(widget, event);
 }
 
 gboolean
-key_release_event_cb (GtkWidget *widget, GdkEventKey *event)
+key_release_event_cb(GtkWidget *widget, GdkEventKey *event)
 {
     LOG((""""key_release_event_cb\n""""));
     // find the window with focus and dispatch this event to that widget
@@ -4549,16 +4549,16 @@ key_release_event_cb (GtkWidget *widget, GdkEventKey *event)
     if (!window)
         return FALSE;
 
-    nsWindow *focusWindow = gFocusWindow ? gFocusWindow : window;
+    nsRefPtr<nsWindow> focusWindow = gFocusWindow ? gFocusWindow : window;
 
     return focusWindow->OnKeyReleaseEvent(widget, event);
 }
 
 /* static */
 gboolean
-scroll_event_cb (GtkWidget *widget, GdkEventScroll *event)
+scroll_event_cb(GtkWidget *widget, GdkEventScroll *event)
 {
-    nsWindow *window = get_window_for_gdk_window(event->window);
+    nsRefPtr<nsWindow> window = get_window_for_gdk_window(event->window);
     if (!window)
         return FALSE;
 
@@ -4571,7 +4571,7 @@ scroll_event_cb (GtkWidget *widget, GdkEventScroll *event)
 gboolean
 visibility_notify_event_cb (GtkWidget *widget, GdkEventVisibility *event)
 {
-    nsWindow *window = get_window_for_gdk_window(event->window);
+    nsRefPtr<nsWindow> window = get_window_for_gdk_window(event->window);
     if (!window)
         return FALSE;
 
@@ -4584,7 +4584,7 @@ visibility_notify_event_cb (GtkWidget *widget, GdkEventVisibility *event)
 gboolean
 window_state_event_cb (GtkWidget *widget, GdkEventWindowState *event)
 {
-    nsWindow *window = get_window_for_gtk_widget(widget);
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(widget);
     if (!window)
         return FALSE;
 
@@ -4597,7 +4597,8 @@ window_state_event_cb (GtkWidget *widget, GdkEventWindowState *event)
 void
 theme_changed_cb (GtkSettings *settings, GParamSpec *pspec, nsWindow *data)
 {
-    data->ThemeChanged();
+    nsRefPtr<nsWindow> window = data;
+    window->ThemeChanged();
 }
 
 //////////////////////////////////////////////////////////////////////
@@ -4662,7 +4663,7 @@ drag_motion_event_cb(GtkWidget *aWidget,
                      guint aTime,
                      gpointer aData)
 {
-    nsWindow *window = get_window_for_gtk_widget(aWidget);
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(aWidget);
     if (!window)
         return FALSE;
 
@@ -4677,7 +4678,7 @@ drag_leave_event_cb(GtkWidget *aWidget,
                     guint aTime,
                     gpointer aData)
 {
-    nsWindow *window = get_window_for_gtk_widget(aWidget);
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(aWidget);
     if (!window)
         return;
 
@@ -4694,29 +4695,27 @@ drag_drop_event_cb(GtkWidget *aWidget,
                    guint aTime,
                    gpointer *aData)
 {
-    nsWindow *window = get_window_for_gtk_widget(aWidget);
-
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(aWidget);
     if (!window)
         return FALSE;
 
     return window->OnDragDropEvent(aWidget,
                                    aDragContext,
                                    aX, aY, aTime, aData);
-
 }
 
 /* static */
 void
-drag_data_received_event_cb (GtkWidget *aWidget,
-                             GdkDragContext *aDragContext,
-                             gint aX,
-                             gint aY,
-                             GtkSelectionData  *aSelectionData,
-                             guint aInfo,
-                             guint aTime,
-                             gpointer aData)
-{
-    nsWindow *window = get_window_for_gtk_widget(aWidget);
+drag_data_received_event_cb(GtkWidget *aWidget,
+                            GdkDragContext *aDragContext,
+                            gint aX,
+                            gint aY,
+                            GtkSelectionData  *aSelectionData,
+                            guint aInfo,
+                            guint aTime,
+                            gpointer aData)
+{
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(aWidget);
     if (!window)
         return;
 
@@ -4807,6 +4806,7 @@ nsWindow::FireDragLeaveTimer(void)
 
     // clean up any pending drag motion window info
     if (mLastDragMotionWindow) {
+        nsRefPtr<nsWindow> kungFuDeathGrip = mLastDragMotionWindow;
         // send our leave signal
         mLastDragMotionWindow->OnDragLeave();
         mLastDragMotionWindow = 0;
@@ -4817,7 +4817,7 @@ nsWindow::FireDragLeaveTimer(void)
 guint
 nsWindow::DragMotionTimerCallback(gpointer aClosure)
 {
-    nsWindow *window = NS_STATIC_CAST(nsWindow *, aClosure);
+    nsRefPtr<nsWindow> window = NS_STATIC_CAST(nsWindow *, aClosure);
     window->FireDragMotionTimer();
     return FALSE;
 }
@@ -4826,7 +4826,7 @@ nsWindow::DragMotionTimerCallback(gpointer aClosure)
 void
 nsWindow::DragLeaveTimerCallback(nsITimer *aTimer, void *aClosure)
 {
-    nsWindow *window = NS_STATIC_CAST(nsWindow *, aClosure);
+    nsRefPtr<nsWindow> window = NS_STATIC_CAST(nsWindow *, aClosure);
     window->FireDragLeaveTimer();
 }
 
@@ -5147,6 +5147,9 @@ nsWindow::IMEComposeStart(void)
     nsEventStatus status;
     DispatchEvent(&compEvent, status);
 
+    if (NS_UNLIKELY(mIsDestroyed))
+        return;
+
     gint x1, y1, x2, y2;
     GtkWidget *widget =
         get_gtk_widget_for_gdk_window(this->mDrawingarea->inner_window);
@@ -5164,11 +5167,11 @@ nsWindow::IMEComposeStart(void)
 }
 
 void
-nsWindow::IMEComposeText (const PRUnichar *aText,
-                          const PRInt32 aLen,
-                          const gchar *aPreeditString,
-                          const gint aCursorPos,
-                          const PangoAttrList *aFeedback)
+nsWindow::IMEComposeText(const PRUnichar *aText,
+                         const PRInt32 aLen,
+                         const gchar *aPreeditString,
+                         const gint aCursorPos,
+                         const PangoAttrList *aFeedback)
 {
     if (!mIMEData) {
         NS_ERROR(""""This widget doesn't support IM"""");
@@ -5176,8 +5179,12 @@ nsWindow::IMEComposeText (const PRUnichar *aText,
     }
 
     // Send our start composition event if we need to
-    if (!IMEComposingWindow())
+    if (!IMEComposingWindow()) {
         IMEComposeStart();
+        if (NS_UNLIKELY(mIsDestroyed))
+            return;
+    }
+
 
     LOGIM((""""IMEComposeText\n""""));
     nsTextEvent textEvent(PR_TRUE, NS_TEXT_TEXT, this);
@@ -5199,6 +5206,9 @@ nsWindow::IMEComposeText (const PRUnichar *aText,
         delete[] textEvent.rangeArray;
     }
 
+    if (NS_UNLIKELY(mIsDestroyed))
+        return;
+
     gint x1, y1, x2, y2;
     GtkWidget *widget =
         get_gtk_widget_for_gdk_window(this->mDrawingarea->inner_window);
@@ -5332,7 +5342,7 @@ nsWindow::ResetInputState()
 {
     IMEInitData();
 
-    nsWindow *win = IMEComposingWindow();
+    nsRefPtr<nsWindow> win = IMEComposingWindow();
     if (win) {
         GtkIMContext *im = IMEGetContext();
         if (!im)
@@ -5384,7 +5394,7 @@ nsWindow::SetIMEEnabled(PRUint32 aState)
 
     GtkIMContext *focusedIm = nsnull;
     // XXX Don't we need to check gFocusWindow?
-    nsWindow *focusedWin = gIMEFocusWindow;
+    nsRefPtr<nsWindow> focusedWin = gIMEFocusWindow;
     if (focusedWin && focusedWin->mIMEData)
         focusedIm = focusedWin->mIMEData->mContext;
 
@@ -5436,7 +5446,7 @@ nsWindow::CancelIMEComposition()
     gtk_im_context_reset(im);
     gIMESuppressCommit = PR_FALSE;
 
-    nsWindow *win = IMEComposingWindow();
+    nsRefPtr<nsWindow> win = IMEComposingWindow();
     if (win) {
         win->IMEComposeText(nsnull, 0, nsnull, 0, nsnull);
         win->IMEComposeEnd();
@@ -5455,7 +5465,7 @@ IM_preedit_changed_cb(GtkIMContext *aContext,
     PangoAttrList *feedback_list;
 
     // if gFocusWindow is null, use the last focused gIMEFocusWindow
-    nsWindow *window = gFocusWindow ? gFocusWindow : gIMEFocusWindow;
+    nsRefPtr<nsWindow> window = gFocusWindow ? gFocusWindow : gIMEFocusWindow;
     if (!window)
         return;
 
@@ -5505,9 +5515,9 @@ IM_preedit_changed_cb(GtkIMContext *aContext,
 
 /* static */
 void
-IM_commit_cb (GtkIMContext *aContext,
-              const gchar  *aUtf8_str,
-              nsWindow     *aWindow)
+IM_commit_cb(GtkIMContext *aContext,
+             const gchar  *aUtf8_str,
+             nsWindow     *aWindow)
 {
     if (gIMESuppressCommit)
         return;
@@ -5517,7 +5527,7 @@ IM_commit_cb (GtkIMContext *aContext,
     gKeyEventCommitted = PR_TRUE;
 
     // if gFocusWindow is null, use the last focused gIMEFocusWindow
-    nsWindow *window = gFocusWindow ? gFocusWindow : gIMEFocusWindow;
+    nsRefPtr<nsWindow> window = gFocusWindow ? gFocusWindow : gIMEFocusWindow;
 
     if (!window)
         return;
@@ -5547,8 +5557,8 @@ IM_commit_cb (GtkIMContext *aContext,
 
 /* static */
 void
-IM_commit_cb_internal (const gchar  *aUtf8_str,
-                       nsWindow     *aWindow)
+IM_commit_cb_internal(const gchar  *aUtf8_str,
+                      nsWindow     *aWindow)
 {
     gunichar2 *uniStr = nsnull;
     glong uniStrLen = 0;"""
bf7143155ad422f2a4a0bafd38a6d22c07869ed6,74492,378273,mats.palmgren@bredband.net,"Lookup the view again since WillPaint() might lead to its destruction. b=378273 r+sr=roc
",1177893987,"""diff --git a/view/src/nsViewManager.cpp b/view/src/nsViewManager.cpp
index 7abdf06..c1dc342 100644
--- a/view/src/nsViewManager.cpp
+++ b/view/src/nsViewManager.cpp
@@ -1215,6 +1215,10 @@ NS_IMETHODIMP nsViewManager::DispatchEvent(nsGUIEvent *aEvent, nsEventStatus *aS
                 BeginUpdateViewBatch();
                 observer->WillPaint();
                 EndUpdateViewBatch(NS_VMREFRESH_NO_SYNC);
+
+                // Get the view pointer again since the code above might have
+                // destroyed it (bug 378273).
+                view = nsView::GetViewFor(aEvent->widget);
               }
             }
             // Make sure to sync up any widget geometry changes we
@@ -1222,8 +1226,11 @@ NS_IMETHODIMP nsViewManager::DispatchEvent(nsGUIEvent *aEvent, nsEventStatus *aS
             if (rootVM->mHasPendingUpdates) {
               rootVM->ProcessPendingUpdates(mRootView, PR_FALSE);
             }
-            Refresh(view, event->renderingContext, region,
-                    NS_VMREFRESH_DOUBLE_BUFFER);
+            
+            if (view) {
+              Refresh(view, event->renderingContext, region,
+                      NS_VMREFRESH_DOUBLE_BUFFER);
+            }
           }
         } else {
           // since we got an NS_PAINT event, we need to"""
f235c17ab273d0ee9315eef76b7d01922235569f,74507,353165,bclary@bclary.com,"JavaScript Test - regression test for bug 353165, only test for crash
",1177799912,"""diff --git a/js/tests/e4x/extensions/regress-353165.js b/js/tests/e4x/extensions/regress-353165.js
index 1f77590..eb53debc 100755
--- a/js/tests/e4x/extensions/regress-353165.js
+++ b/js/tests/e4x/extensions/regress-353165.js
@@ -104,12 +104,10 @@ function crash2() {
             return undefined;
         }
 
-        var actual = set.unrooter();
-        print('actual:   ' + actual);
-        print('expected: ' + expected);
+        set.unrooter();
     }
     catch(ex) {
         print('2: ' + ex);
     }
-    TEST(2, true, actual === expected);
+    TEST(2, expect, actual);
 }"""
08ba2fc7247513a18246691a7320e4caaa471f4d,74510,364112,dveditz@cruzio.com,"bug 364112 truncate large form history data. r=mano
",1177738013,"""diff --git a/toolkit/components/satchel/src/nsFormHistory.cpp b/toolkit/components/satchel/src/nsFormHistory.cpp
index 9849884..4d0c8a3 100644
--- a/toolkit/components/satchel/src/nsFormHistory.cpp
+++ b/toolkit/components/satchel/src/nsFormHistory.cpp
@@ -72,6 +72,10 @@ static void SwapBytes(PRUnichar* aDest, const PRUnichar* aSrc, PRUint32 aLen)
 #define PREF_FORMFILL_BRANCH """"browser.formfill.""""
 #define PREF_FORMFILL_ENABLE """"enable""""
 
+// upper bounds on saved form data, more isn't useful.
+#define FORMFILL_NAME_MAX_LEN  1000
+#define FORMFILL_VALUE_MAX_LEN 4000
+
 static const char *kFormHistoryFileName = """"formhistory.dat"""";
 
 NS_INTERFACE_MAP_BEGIN(nsFormHistory)
@@ -613,7 +617,11 @@ nsFormHistory::AppendRow(const nsAString &aName, const nsAString &aValue, nsIMdb
   if (!mTable)
     return NS_ERROR_NOT_INITIALIZED;
 
-  PRBool exists;
+  if (aName.Length() > FORMFILL_NAME_MAX_LEN ||
+      aValue.Length() > FORMFILL_VALUE_MAX_LEN)
+    return NS_ERROR_INVALID_ARG;
+
+  PRBool exists = PR_TRUE;
   EntryExists(aName, aValue, &exists);
   if (exists)
     return NS_OK;
diff --git a/toolkit/components/satchel/src/nsStorageFormHistory.cpp b/toolkit/components/satchel/src/nsStorageFormHistory.cpp
index f90342b..572cb4b 100644
--- a/toolkit/components/satchel/src/nsStorageFormHistory.cpp
+++ b/toolkit/components/satchel/src/nsStorageFormHistory.cpp
@@ -227,7 +227,7 @@ nsFormHistory::AddEntry(const nsAString &aName, const nsAString &aValue)
 
   mozStorageTransaction transaction(mDBConn, PR_FALSE);
 
-  PRBool exists;
+  PRBool exists = PR_TRUE;
   EntryExists(aName, aValue, &exists);
   if (!exists) {
     mozStorageStatementScoper scope(mDBInsertNameValue);"""
b44232f1600594dd5866d7cd45c53f54ceda30cc,74544,378682,mats.palmgren@bredband.net,"Crash [@ nsPresContext::GetContainerInternal]. b=378682 r+sr=bzbarsky
",1177671982,"""diff --git a/layout/base/nsDocumentViewer.cpp b/layout/base/nsDocumentViewer.cpp
index 168da38..03aa83a 100644
--- a/layout/base/nsDocumentViewer.cpp
+++ b/layout/base/nsDocumentViewer.cpp
@@ -1082,6 +1082,7 @@ DocumentViewerImpl::LoadComplete(nsresult aStatus)
   // Now that the document has loaded, we can tell the presshell
   // to unsuppress painting.
   if (mPresShell && !mStopped) {
+    nsCOMPtr<nsIPresShell> shellDeathGrip(mPresShell); // bug 378682
     mPresShell->UnsuppressPainting();
   }
 
@@ -1261,8 +1262,10 @@ DocumentViewerImpl::PageHide(PRBool aIsUnload)
 
   // look for open menupopups and close them after the unload event, in case
   // the unload event listeners open any new popups
-  if (mPresShell)
+  if (mPresShell) {
+    nsCOMPtr<nsIPresShell> kungFuDeathGrip = mPresShell;
     mPresShell->HidePopups();
+  }
 
   return NS_OK;
 }
@@ -1634,6 +1637,7 @@ DocumentViewerImpl::Stop(void)
 
   if (!mLoaded && mPresShell) {
     // Well, we might as well paint what we have so far.
+    nsCOMPtr<nsIPresShell> shellDeathGrip(mPresShell); // bug 378682
     mPresShell->UnsuppressPainting();
   }
 
@@ -1982,6 +1986,7 @@ DocumentViewerImpl::Show(void)
     // window is shown because some JS on the page caused it to be
     // shown...
 
+    nsCOMPtr<nsIPresShell> shellDeathGrip(mPresShell); // bug 378682
     mPresShell->UnsuppressPainting();
   }
 """
8e2c9316235a542a67baf591bf4a5d56c8108cb1,74686,378325,Olli.Pettay@helsinki.fi,"Bug 378325, r+sr=roc
",1177307607,"""diff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp
index b8a440e..0ba4072 100644
--- a/layout/base/nsPresShell.cpp
+++ b/layout/base/nsPresShell.cpp
@@ -4589,15 +4589,16 @@ PresShell::FlushPendingNotifications(mozFlushType aType)
 
   NS_ASSERTION(!isSafeToFlush || mViewManager, """"Must have view manager"""");
   if (isSafeToFlush && mViewManager) {
+    // Processing pending notifications can kill us, and some callers only
+    // hold weak refs when calling FlushPendingNotifications().  :(
+    nsCOMPtr<nsIPresShell> kungFuDeathGrip(this);
+
     // Style reresolves not in conjunction with reflows can't cause
     // painting or geometry changes, so don't bother with view update
     // batching if we only have style reresolve
     mViewManager->BeginUpdateViewBatch();
 
     if (aType & Flush_StyleReresolves) {
-      // Processing pending restyles can kill us, and some callers only
-      // hold weak refs when calling FlushPendingNotifications().  :(
-      nsCOMPtr<nsIPresShell> kungFuDeathGrip(this);
       mFrameConstructor->ProcessPendingRestyles();
       if (mIsDestroying) {
         // We no longer have a view manager and all that.
@@ -4610,6 +4611,12 @@ PresShell::FlushPendingNotifications(mozFlushType aType)
     if (aType & Flush_OnlyReflow) {
       mFrameConstructor->RecalcQuotesAndCounters();
       ProcessReflowCommands(PR_FALSE);
+      if (mIsDestroying) {
+        // We no longer have a view manager and all that.
+        // XXX FIXME: Except we're in the middle of a view update batch...  We
+        // need to address that somehow.  See bug 369165.
+        return NS_OK;
+      }
     }
 
     PRUint32 updateFlags = NS_VMREFRESH_NO_SYNC;"""
cd2041244fdfcc2225acd41643c90ab3b55bd682,74704,306902,stuart.morgan@alumni.case.edu,"Bug 306902. r=josh sr=smfr a=dveditz
",1177211451,"""diff --git a/gfx/src/mac/nsUnicodeRenderingToolkit.cpp b/gfx/src/mac/nsUnicodeRenderingToolkit.cpp
index 2117a77..0968982 100644
--- a/gfx/src/mac/nsUnicodeRenderingToolkit.cpp
+++ b/gfx/src/mac/nsUnicodeRenderingToolkit.cpp
@@ -1126,7 +1126,7 @@ void nsUnicodeRenderingToolkit::GetScriptTextBoundingMetrics(
     {
         widths = (Fixed*) nsMemory::Alloc(aLen * sizeof(Fixed));
         lefts = (Fixed*) nsMemory::Alloc(aLen * sizeof(Fixed));
-        rects = (Rect*) nsMemory::Alloc(aLen * sizeof(Fixed));
+        rects = (Rect*) nsMemory::Alloc(aLen * sizeof(Rect));
         
         // if any of the allocations failed the 'else' case below will be executed
     }"""
5cad346afbc3104b398fc374c8b03e179254a648,74721,368863,roc+@cs.cmu.edu,"Bug 368863. Reparent floats properly when placeholders move between inline continuations. r+sr=dbaron
",1177116178,"""diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
index ca28355..0be338c 100644
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -1605,10 +1605,11 @@ static PRBool LineHasClear(nsLineBox* aLine) {
  */
 void
 nsBlockFrame::ReparentFloats(nsIFrame* aFirstFrame,
-                             nsBlockFrame* aOldParent, PRBool aFromOverflow) {
+                             nsBlockFrame* aOldParent, PRBool aFromOverflow,
+                             PRBool aReparentSiblings) {
   nsFrameList list;
   nsIFrame* tail = nsnull;
-  aOldParent->CollectFloats(aFirstFrame, list, &tail, aFromOverflow);
+  aOldParent->CollectFloats(aFirstFrame, list, &tail, aFromOverflow, aReparentSiblings);
   if (list.NotEmpty()) {
     for (nsIFrame* f = list.FirstChild(); f; f = f->GetNextSibling()) {
       ReparentFrame(f, aOldParent, this);
@@ -1983,7 +1984,7 @@ nsBlockFrame::ReflowDirtyLines(nsBlockReflowState& aState)
       lastFrame->SetNextSibling(nsnull);
 
       // Reparent floats whose placeholders are in the line.
-      ReparentFloats(toMove->mFirstChild, nextInFlow, collectOverflowFloats);
+      ReparentFloats(toMove->mFirstChild, nextInFlow, collectOverflowFloats, PR_TRUE);
 
       // Add line to our line list
       if (aState.mPrevChild) {
@@ -2344,7 +2345,7 @@ nsBlockFrame::PullFrameFrom(nsBlockReflowState& aState,
 
       // The frame might have (or contain) floats that need to be
       // brought over too.
-      ReparentFloats(frame, aFromContainer, aFromOverflowLine);
+      ReparentFloats(frame, aFromContainer, aFromOverflowLine, PR_TRUE);
     }
 
     // Stop pulling because we found a frame to pull
@@ -3983,7 +3984,7 @@ nsBlockFrame::PushLines(nsBlockReflowState&  aState,
     // Remove floats in the lines from mFloats
     nsFrameList floats;
     nsIFrame* tail = nsnull;
-    CollectFloats(overBegin->mFirstChild, floats, &tail, PR_FALSE);
+    CollectFloats(overBegin->mFirstChild, floats, &tail, PR_FALSE, PR_TRUE);
 
     if (floats.NotEmpty()) {
       // Push the floats onto the front of the overflow out-of-flows list
@@ -6199,7 +6200,7 @@ nsBlockFrame::ReflowBullet(nsBlockReflowState& aState,
 // floats from whatever list they might be in. We don't search descendants
 // that are float containing blocks. The floats must be children of 'this'.
 void nsBlockFrame::CollectFloats(nsIFrame* aFrame, nsFrameList& aList, nsIFrame** aTail,
-                                 PRBool aFromOverflow) {
+                                 PRBool aFromOverflow, PRBool aCollectSiblings) {
   while (aFrame) {
     // Don't descend into float containing blocks.
     if (!aFrame->IsFloatContainingBlock()) {
@@ -6221,9 +6222,11 @@ void nsBlockFrame::CollectFloats(nsIFrame* aFrame, nsFrameList& aList, nsIFrame*
         *aTail = outOfFlowFrame;
       }
 
-      CollectFloats(aFrame->GetFirstChild(nsnull), aList, aTail, aFromOverflow);
+      CollectFloats(aFrame->GetFirstChild(nsnull), aList, aTail, aFromOverflow,
+                    PR_TRUE);
     }
-    
+    if (!aCollectSiblings)
+      break;
     aFrame = aFrame->GetNextSibling();
   }
 }
diff --git a/layout/generic/nsBlockFrame.h b/layout/generic/nsBlockFrame.h
index 31295ec..74b16a7 100644
--- a/layout/generic/nsBlockFrame.h
+++ b/layout/generic/nsBlockFrame.h
@@ -379,6 +379,11 @@ public:
     */
   nsresult DoRemoveFrame(nsIFrame* aDeletedFrame, PRBool aDestroyFrames = PR_TRUE, 
                          PRBool aRemoveOnlyFluidContinuations = PR_TRUE);
+
+  void ReparentFloats(nsIFrame* aFirstFrame,
+                      nsBlockFrame* aOldParent, PRBool aFromOverflow,
+                      PRBool aReparentSiblings);
+
 protected:
 
   /** grab overflow lines from this block's prevInFlow, and make them
@@ -394,7 +399,7 @@ protected:
   line_iterator RemoveFloat(nsIFrame* aFloat);
 
   void CollectFloats(nsIFrame* aFrame, nsFrameList& aList, nsIFrame** aTail,
-                     PRBool aFromOverflow);
+                     PRBool aFromOverflow, PRBool aCollectFromSiblings);
   // Remove a float, abs, rel positioned frame from the appropriate block's list
   static void DoRemoveOutOfFlowFrame(nsIFrame* aFrame);
 
@@ -508,10 +513,6 @@ protected:
   void PushLines(nsBlockReflowState& aState,
                  nsLineList::iterator aLineBefore);
 
-
-  void ReparentFloats(nsIFrame* aFirstFrame,
-                      nsBlockFrame* aOldParent, PRBool aFromOverflow);
-
   void PropagateFloatDamage(nsBlockReflowState& aState,
                             nsLineBox* aLine,
                             nscoord aDeltaY);
diff --git a/layout/generic/nsColumnSetFrame.cpp b/layout/generic/nsColumnSetFrame.cpp
index 6df6f7e..61c66db 100644
--- a/layout/generic/nsColumnSetFrame.cpp
+++ b/layout/generic/nsColumnSetFrame.cpp
@@ -270,7 +270,8 @@ nsColumnSetFrame::ChooseColumnStrategy(const nsHTMLReflowState& aReflowState)
     }
 
     // Compute extra space and divide it among the columns
-    nscoord extraSpace = availContentWidth - (colWidth*numColumns + colGap*(numColumns - 1));
+    nscoord extraSpace =
+      PR_MAX(0, availContentWidth - (colWidth*numColumns + colGap*(numColumns - 1)));
     nscoord extraToColumns = extraSpace/numColumns;
     colWidth += extraToColumns;
     expectedWidthLeftOver = extraSpace - (extraToColumns*numColumns);
diff --git a/layout/generic/nsFrameList.cpp b/layout/generic/nsFrameList.cpp
index 41c7909..77c252d 100644
--- a/layout/generic/nsFrameList.cpp
+++ b/layout/generic/nsFrameList.cpp
@@ -248,37 +248,6 @@ nsFrameList::Split(nsIFrame* aAfterFrame, nsIFrame** aNextFrameResult)
 }
 
 nsIFrame*
-nsFrameList::PullFrame(nsIFrame* aParent,
-                       nsIFrame* aLastChild,
-                       nsFrameList& aFromList)
-{
-  NS_PRECONDITION(nsnull != aParent, """"null ptr"""");
-
-  nsIFrame* pulledFrame = nsnull;
-  if (nsnull != aParent) {
-    pulledFrame = aFromList.FirstChild();
-    if (nsnull != pulledFrame) {
-      // Take frame off old list
-      aFromList.RemoveFirstChild();
-
-      // Put it on the end of this list
-      if (nsnull == aLastChild) {
-        NS_ASSERTION(nsnull == mFirstChild, """"bad aLastChild"""");
-        mFirstChild = pulledFrame;
-      }
-      else {
-        aLastChild->SetNextSibling(pulledFrame);
-      }
-      pulledFrame->SetParent(aParent);
-    }
-  }
-#ifdef DEBUG
-  CheckForLoops();
-#endif
-  return pulledFrame;
-}
-
-nsIFrame*
 nsFrameList::LastChild() const
 {
   nsIFrame* frame = mFirstChild;
diff --git a/layout/generic/nsFrameList.h b/layout/generic/nsFrameList.h
index 4cf4a52..5ca0fbb 100644
--- a/layout/generic/nsFrameList.h
+++ b/layout/generic/nsFrameList.h
@@ -121,10 +121,6 @@ public:
    */
   void SortByContentOrder();
 
-  nsIFrame* PullFrame(nsIFrame* aParent,
-                      nsIFrame* aLastChild,
-                      nsFrameList& aFromList);
-
   nsIFrame* FirstChild() const {
     return mFirstChild;
   }
diff --git a/layout/generic/nsInlineFrame.cpp b/layout/generic/nsInlineFrame.cpp
index 71afcc0..ef6b943 100644
--- a/layout/generic/nsInlineFrame.cpp
+++ b/layout/generic/nsInlineFrame.cpp
@@ -247,6 +247,58 @@ nsInlineFrame::ComputeSize(nsIRenderingContext *aRenderingContext,
   return nsSize(NS_UNCONSTRAINEDSIZE, NS_UNCONSTRAINEDSIZE);
 }
 
+void
+nsInlineFrame::ReparentFloatsForInlineChild(nsIFrame* aOurLineContainer,
+                                            nsIFrame* aFrame,
+                                            PRBool aReparentSiblings)
+{
+  NS_ASSERTION(aOurLineContainer->GetNextContinuation() ||
+               aOurLineContainer->GetPrevContinuation(),
+               """"Don't call this when we have no continuation, it's a waste"""");
+
+  nsIFrame* ancestor = aFrame;
+  nsIFrame* ancestorBlockChild;
+  do {
+    ancestorBlockChild = ancestor;
+    ancestor = ancestor->GetParent();
+    if (!ancestor)
+      return;
+  } while (!ancestor->IsFloatContainingBlock());
+
+  if (ancestor == aOurLineContainer)
+    return;
+
+  nsBlockFrame* ourBlock;
+  nsresult rv = aOurLineContainer->QueryInterface(kBlockFrameCID, (void**)&ourBlock);
+  NS_ASSERTION(NS_SUCCEEDED(rv), """"Not a block, but broke vertically?"""");
+  nsBlockFrame* frameBlock;
+  rv = ancestor->QueryInterface(kBlockFrameCID, (void**)&frameBlock);
+  NS_ASSERTION(NS_SUCCEEDED(rv), """"ancestor not a block"""");
+
+  nsFrameList blockChildren(ancestor->GetFirstChild(nsnull));
+  PRBool isOverflow = !blockChildren.ContainsFrame(ancestorBlockChild);
+
+  while (PR_TRUE) {
+    ourBlock->ReparentFloats(aFrame, frameBlock, isOverflow, PR_FALSE);
+
+    if (!aReparentSiblings)
+      return;
+    nsIFrame* next = aFrame->GetNextSibling();
+    if (!next)
+      return;
+    if (next->GetParent() == aFrame->GetParent()) {
+      aFrame = next;
+      continue;
+    }
+    // This is paranoid and will hardly ever get hit ... but we can't actually
+    // trust that the frames in the sibling chain all have the same parent,
+    // because lazy reparenting may be going on. If we find a different
+    // parent we need to redo our analysis.
+    ReparentFloatsForInlineChild(aOurLineContainer, next, aReparentSiblings);
+    return;
+  }
+}
+
 NS_IMETHODIMP
 nsInlineFrame::Reflow(nsPresContext*          aPresContext,
                       nsHTMLReflowMetrics&     aMetrics,
@@ -261,7 +313,9 @@ nsInlineFrame::Reflow(nsPresContext*          aPresContext,
 
   PRBool  lazilySetParentPointer = PR_FALSE;
 
-  // Check for an overflow list with our prev-in-flow
+  nsIFrame* lineContainer = aReflowState.mLineLayout->GetLineContainerFrame();
+
+   // Check for an overflow list with our prev-in-flow
   nsInlineFrame* prevInFlow = (nsInlineFrame*)GetPrevInFlow();
   if (nsnull != prevInFlow) {
     nsIFrame* prevOverflowFrames = prevInFlow->GetOverflowFrames(aPresContext, PR_TRUE);
@@ -282,8 +336,11 @@ nsInlineFrame::Reflow(nsPresContext*          aPresContext,
         NS_ASSERTION(mFrames.IsEmpty(), """"child list is not empty for initial reflow"""");
         mFrames.SetFrames(prevOverflowFrames);
         lazilySetParentPointer = PR_TRUE;
-
       } else {
+        // Assign all floats to our block if necessary
+        if (lineContainer && lineContainer->GetPrevContinuation()) {
+          ReparentFloatsForInlineChild(lineContainer, prevOverflowFrames, PR_TRUE);
+        }
         // Insert the new frames at the beginning of the child list
         // and set their parent pointer
         mFrames.InsertFrames(this, nsnull, prevOverflowFrames);
@@ -331,6 +388,7 @@ nsInlineFrame::Reflow(nsPresContext*          aPresContext,
   // aReflowState)
   InlineReflowState irs;
   irs.mPrevFrame = nsnull;
+  irs.mLineContainer = lineContainer;
   irs.mNextInFlow = (nsInlineFrame*) GetNextInFlow();
   irs.mSetParentPointer = lazilySetParentPointer;
 
@@ -393,8 +451,22 @@ nsInlineFrame::ReflowFrames(nsPresContext* aPresContext,
 
     // Check if we should lazily set the child frame's parent pointer
     if (irs.mSetParentPointer) {
+      PRBool havePrevBlock =
+        irs.mLineContainer && irs.mLineContainer->GetPrevContinuation();
+      // If our block is the first in flow, then any floats under the pulled
+      // frame must already belong to our block.
+      if (havePrevBlock) {
+        // This has to happen before we update frame's parent; we need to
+        // know frame's ancestry under its old block.
+        // The blockChildren.ContainsFrame check performed by
+        // ReparentFloatsForInlineChild here may be slow, but we can't
+        // easily avoid it because we don't know where 'frame' originally
+        // came from. If we really really have to optimize this we could
+        // cache whether frame->GetParent() is under its containing blocks
+        // overflowList or not.
+        ReparentFloatsForInlineChild(irs.mLineContainer, frame, PR_FALSE);
+      }
       frame->SetParent(this);
-
       // We also need to check if frame has a next-in-flow. If it does, then set
       // its parent frame pointer, too. Otherwise, if we reflow frame and it's
       // complete we'll fail when deleting its next-in-flow which is no longer
@@ -406,6 +478,9 @@ nsInlineFrame::ReflowFrames(nsPresContext* aPresContext,
         // the continuing child frame must be in our child list as well. If
         // not, then something is wrong
         NS_ASSERTION(mFrames.ContainsFrame(nextInFlow), """"unexpected flow"""");
+        if (havePrevBlock) {
+          ReparentFloatsForInlineChild(irs.mLineContainer, nextInFlow, PR_FALSE);
+        }
         nextInFlow->SetParent(this);
         nextInFlow = nextInFlow->GetNextInFlow();
       }
@@ -567,6 +642,10 @@ nsInlineFrame::ReflowInlineFrame(nsPresContext* aPresContext,
         // remaining child frames in our child list with the wrong parent
         // frame pointer...
         if (irs.mSetParentPointer) {
+          if (irs.mLineContainer && irs.mLineContainer->GetPrevContinuation()) {
+            ReparentFloatsForInlineChild(irs.mLineContainer, aFrame->GetNextSibling(),
+                                         PR_TRUE);
+          }
           for (nsIFrame* f = aFrame->GetNextSibling(); f; f = f->GetNextSibling()) {
             f->SetParent(this);
           }
@@ -635,8 +714,19 @@ nsInlineFrame::PullOneFrame(nsPresContext* aPresContext,
   nsIFrame* frame = nsnull;
   nsInlineFrame* nextInFlow = irs.mNextInFlow;
   while (nsnull != nextInFlow) {
-    frame = mFrames.PullFrame(this, irs.mPrevFrame, nextInFlow->mFrames);
+    frame = nextInFlow->mFrames.FirstChild();
     if (nsnull != frame) {
+      // If our block has no next continuation, then any floats belonging to
+      // the pulled frame must belong to our block already. This check ensures
+      // we do no extra work in the common non-vertical-breaking case.
+      if (irs.mLineContainer && irs.mLineContainer->GetNextContinuation()) {
+        // The blockChildren.ContainsFrame check performed by
+        // ReparentFloatsForInlineChild will be fast because frame's ancestor
+        // will be the first child of its containing block.
+        ReparentFloatsForInlineChild(irs.mLineContainer, frame, PR_FALSE);
+      }
+      nextInFlow->mFrames.RemoveFirstChild();
+      mFrames.InsertFrame(this, irs.mPrevFrame, frame);
       isComplete = PR_FALSE;
       nsHTMLContainerFrame::ReparentFrameView(aPresContext, frame, nextInFlow, this);
       break;
@@ -782,7 +872,8 @@ nsFirstLineFrame::StealFramesFrom(nsIFrame* aFrame)
 }
 
 nsIFrame*
-nsFirstLineFrame::PullOneFrame(nsPresContext* aPresContext, InlineReflowState& irs, PRBool* aIsComplete)
+nsFirstLineFrame::PullOneFrame(nsPresContext* aPresContext, InlineReflowState& irs,
+                               PRBool* aIsComplete)
 {
   nsIFrame* frame = nsInlineFrame::PullOneFrame(aPresContext, irs, aIsComplete);
   if (frame && !GetPrevInFlow()) {
@@ -804,6 +895,8 @@ nsFirstLineFrame::Reflow(nsPresContext* aPresContext,
     return NS_ERROR_INVALID_ARG;
   }
 
+  nsIFrame* lineContainer = aReflowState.mLineLayout->GetLineContainerFrame();
+
   // Check for an overflow list with our prev-in-flow
   nsFirstLineFrame* prevInFlow = (nsFirstLineFrame*)GetPrevInFlow();
   if (nsnull != prevInFlow) {
@@ -811,6 +904,10 @@ nsFirstLineFrame::Reflow(nsPresContext* aPresContext,
     if (prevOverflowFrames) {
       nsFrameList frames(prevOverflowFrames);
       
+      // Assign all floats to our block if necessary
+      if (lineContainer && lineContainer->GetPrevContinuation()) {
+        ReparentFloatsForInlineChild(lineContainer, prevOverflowFrames, PR_TRUE);
+      }
       mFrames.InsertFrames(this, nsnull, prevOverflowFrames);
       ReParentChildListStyle(aPresContext, frames, this);
     }
@@ -830,6 +927,7 @@ nsFirstLineFrame::Reflow(nsPresContext* aPresContext,
   // aReflowState)
   InlineReflowState irs;
   irs.mPrevFrame = nsnull;
+  irs.mLineContainer = lineContainer;
   irs.mNextInFlow = (nsInlineFrame*) GetNextInFlow();
 
   nsresult rv;
diff --git a/layout/generic/nsInlineFrame.h b/layout/generic/nsInlineFrame.h
index e49301d..a2c92ef 100644
--- a/layout/generic/nsInlineFrame.h
+++ b/layout/generic/nsInlineFrame.h
@@ -160,12 +160,14 @@ protected:
   struct InlineReflowState {
     nsIFrame* mPrevFrame;
     nsInlineFrame* mNextInFlow;
+    nsIFrame*      mLineContainer;
     PRPackedBool mSetParentPointer;  // when reflowing child frame first set its
                                      // parent frame pointer
 
     InlineReflowState()  {
       mPrevFrame = nsnull;
       mNextInFlow = nsnull;
+      mLineContainer = nsnull;
       mSetParentPointer = PR_FALSE;
     };
   };
@@ -186,6 +188,15 @@ protected:
                              nsIFrame* aFrame,
                              nsReflowStatus& aStatus);
 
+  /**
+   * Reparent floats whose placeholders are inline descendants of aFrame from
+   * whatever block they're currently parented by to aOurBlock.
+   * @param aReparentSiblings if this is true, we follow aFrame's
+   * GetNextSibling chain reparenting them all
+   */
+  void ReparentFloatsForInlineChild(nsIFrame* aOurBlock, nsIFrame* aFrame,
+                                    PRBool aReparentSiblings);
+
   virtual nsIFrame* PullOneFrame(nsPresContext* aPresContext,
                                  InlineReflowState& rs,
                                  PRBool* aIsComplete);"""
1a00a93030c2622f1ab881f6e1ed8b54f4d08db5,74730,374570,enndeakin@sympatico.ca,"Bug 374570, constrain popups to frame, r+sr=roc
",1177093203,"""diff --git a/dom/src/base/nsGlobalWindow.cpp b/dom/src/base/nsGlobalWindow.cpp
index 2340d85..429c02c 100644
--- a/dom/src/base/nsGlobalWindow.cpp
+++ b/dom/src/base/nsGlobalWindow.cpp
@@ -3027,6 +3027,14 @@ nsGlobalWindow::SetScreenY(PRInt32 aScreenY)
 nsresult
 nsGlobalWindow::CheckSecurityWidthAndHeight(PRInt32* aWidth, PRInt32* aHeight)
 {
+  if (!nsContentUtils::IsCallerTrustedForWrite()) {
+    // if attempting to resize the window, hide any open popups
+    nsCOMPtr<nsIPresShell> presShell;
+    mDocShell->GetPresShell(getter_AddRefs(presShell));
+    if (presShell)
+      presShell->HidePopups();
+  }
+
   // This one is easy. Just ensure the variable is greater than 100;
   if ((aWidth && *aWidth < 100) || (aHeight && *aHeight < 100)) {
     // Check security state for use in determing window dimensions
@@ -3053,6 +3061,12 @@ nsGlobalWindow::CheckSecurityLeftAndTop(PRInt32* aLeft, PRInt32* aTop)
   // Check security state for use in determing window dimensions
 
   if (!nsContentUtils::IsCallerTrustedForWrite()) {
+    // if attempting to move the window, hide any open popups
+    nsCOMPtr<nsIPresShell> presShell;
+    mDocShell->GetPresShell(getter_AddRefs(presShell));
+    if (presShell)
+      presShell->HidePopups();
+
     PRInt32 screenLeft, screenTop, screenWidth, screenHeight;
     PRInt32 winLeft, winTop, winWidth, winHeight;
 
diff --git a/layout/base/nsDocumentViewer.cpp b/layout/base/nsDocumentViewer.cpp
index 353ec43..2f941bb 100644
--- a/layout/base/nsDocumentViewer.cpp
+++ b/layout/base/nsDocumentViewer.cpp
@@ -365,8 +365,6 @@ private:
   nsresult GetPopupLinkNode(nsIDOMNode** aNode);
   nsresult GetPopupImageNode(nsIImageLoadingContent** aNode);
 
-  void HideViewIfPopup(nsIView* aView);
-
   void DumpContentToPPM(const char* aFileName);
 
   void PrepareToStartLoad(void);
@@ -1261,40 +1259,10 @@ DocumentViewerImpl::PageHide(PRBool aIsUnload)
     nsEventDispatcher::Dispatch(window, mPresContext, &event, nsnull, &status);
   }
 
-  if (mPresShell) {
-    // look for open menupopups and close them after the unload event, in case
-    // the unload event listeners open any new popups
-    nsIViewManager *vm = mPresShell->GetViewManager();
-    if (vm) {
-      nsIView *rootView = nsnull;
-      vm->GetRootView(rootView);
-      if (rootView)
-        HideViewIfPopup(rootView);
-    }
-  }
-
-  return NS_OK;
-}
-
-void
-DocumentViewerImpl::HideViewIfPopup(nsIView* aView)
-{
-  nsIFrame* frame = NS_STATIC_CAST(nsIFrame*, aView->GetClientData());
-  if (frame) {
-    nsIMenuParent* parent;
-    CallQueryInterface(frame, &parent);
-    if (parent) {
-      parent->HideChain();
-      // really make sure the view is hidden
-      mViewManager->SetViewVisibility(aView, nsViewVisibility_kHide);
-    }
-  }
-
-  nsIView* child = aView->GetFirstChild();
-  while (child) {
-    HideViewIfPopup(child);
-    child = child->GetNextSibling();
-  }
+  // look for open menupopups and close them after the unload event, in case
+  // the unload event listeners open any new popups
+  if (mPresShell)
+    mPresShell->HidePopups();
 }
 
 static void
diff --git a/layout/base/nsIPresShell.h b/layout/base/nsIPresShell.h
index 6fa6d9c..473a1f9 100644
--- a/layout/base/nsIPresShell.h
+++ b/layout/base/nsIPresShell.h
@@ -100,10 +100,10 @@ class gfxASurface;
 
 typedef short SelectionType;
 
-// A68CFCE1-2A15-47F0-B61B-F2C34079A909
+// DC543B71-6F1A-4B9F-B4CF-693AEC4BA24A
 #define NS_IPRESSHELL_IID \
-{ 0xa78cfce1, 0x2a15, 0x47f0, \
-  { 0xb6, 0x1b, 0xf2, 0xc3, 0x40, 0x79, 0xa9, 0x09 } }
+{ 0xdc543b71, 0x6f1a, 0x4b9f, \
+  { 0xb4, 0xcf, 0x69, 0x3a, 0xec, 0x4b, 0xa2, 0x4a } }
 
 // Constants for ScrollContentIntoView() function
 #define NS_PRESSHELL_SCROLL_TOP      0
@@ -715,6 +715,8 @@ public:
                                                         nsPoint& aPoint,
                                                         nsRect* aScreenRect) = 0;
 
+  virtual void HidePopups() = 0;
+
   void AddWeakFrame(nsWeakFrame* aWeakFrame);
   void RemoveWeakFrame(nsWeakFrame* aWeakFrame);
 
diff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp
index 822d099..b8a440e 100644
--- a/layout/base/nsPresShell.cpp
+++ b/layout/base/nsPresShell.cpp
@@ -194,6 +194,7 @@
 #include """"nsIMenuFrame.h""""
 #include """"nsITreeBoxObject.h""""
 #endif
+#include """"nsIMenuParent.h""""
 #include """"nsPlaceholderFrame.h""""
 
 // Content viewer interfaces
@@ -933,6 +934,8 @@ public:
                                                         nsPoint& aPoint,
                                                         nsRect* aScreenRect);
 
+  virtual void HidePopups();
+
   //nsIViewObserver interface
 
   NS_IMETHOD Paint(nsIView *aView,
@@ -1150,6 +1153,9 @@ protected:
   void AddAgentSheet(nsISupports* aSheet);
   void RemoveSheet(nsStyleSet::sheetType aType, nsISupports* aSheet);
 
+  // Hide a view if it is a popup
+  void HideViewIfPopup(nsIView* aView);
+
   nsICSSStyleSheet*         mPrefStyleSheet; // mStyleSet owns it but we maintain a ref, may be null
 #ifdef DEBUG
   PRUint32                  mUpdateCount;
@@ -6121,6 +6127,18 @@ PresShell::Thaw()
   UnsuppressPainting();
 }
 
+void
+PresShell::HidePopups()
+{
+  nsIViewManager *vm = GetViewManager();
+  if (vm) {
+    nsIView *rootView = nsnull;
+    vm->GetRootView(rootView);
+    if (rootView)
+      HideViewIfPopup(rootView);
+  }
+}
+
 //--------------------------------------------------------
 // Start of protected and private methods on the PresShell
 //--------------------------------------------------------
@@ -6589,6 +6607,27 @@ PresShell::EnumeratePlugins(nsIDOMDocument *aDocument,
   }
 }
 
+void
+PresShell::HideViewIfPopup(nsIView* aView)
+{
+  nsIFrame* frame = NS_STATIC_CAST(nsIFrame*, aView->GetClientData());
+  if (frame) {
+    nsIMenuParent* parent;
+    CallQueryInterface(frame, &parent);
+    if (parent) {
+      parent->HideChain();
+      // really make sure the view is hidden
+      mViewManager->SetViewVisibility(aView, nsViewVisibility_kHide);
+    }
+  }
+
+  nsIView* child = aView->GetFirstChild();
+  while (child) {
+    HideViewIfPopup(child);
+    child = child->GetNextSibling();
+  }
+}
+
 //------------------------------------------------------
 // End of protected and private methods on the PresShell
 //------------------------------------------------------
diff --git a/layout/xul/base/src/nsMenuPopupFrame.cpp b/layout/xul/base/src/nsMenuPopupFrame.cpp
index e694c7b..71a0fd0 100644
--- a/layout/xul/base/src/nsMenuPopupFrame.cpp
+++ b/layout/xul/base/src/nsMenuPopupFrame.cpp
@@ -142,7 +142,8 @@ nsMenuPopupFrame::nsMenuPopupFrame(nsIPresShell* aShell, nsStyleContext* aContex
   mMenuCanOverlapOSBar(PR_FALSE),
   mShouldAutoPosition(PR_TRUE),
   mShouldRollup(PR_TRUE),
-  mConsumeRollupEvent(nsIPopupBoxObject::ROLLUP_DEFAULT)
+  mConsumeRollupEvent(nsIPopupBoxObject::ROLLUP_DEFAULT),
+  mInContentShell(PR_TRUE)
 {
   SetIsContextMenu(PR_FALSE);   // we're not a context menu by default
 } // ctor
@@ -191,6 +192,13 @@ nsMenuPopupFrame::Init(nsIContent*      aContent,
   // about that constraint.
   viewManager->SetViewFloating(ourView, PR_TRUE);
 
+  nsCOMPtr<nsISupports> cont = PresContext()->GetContainer();
+  nsCOMPtr<nsIDocShellTreeItem> dsti = do_QueryInterface(cont);
+  PRInt32 type = -1;
+  if (dsti && NS_SUCCEEDED(dsti->GetItemType(&type)) &&
+      type == nsIDocShellTreeItem::typeChrome)
+    mInContentShell = PR_FALSE;
+
   // XXX make sure we are hidden (shouldn't this be done automatically?)
   viewManager->SetViewVisibility(ourView, nsViewVisibility_kHide);
   if (!ourView->HasWidget()) {
@@ -217,15 +225,7 @@ nsMenuPopupFrame::CreateWidgetForView(nsIView* aView)
     nsCSSRendering::FindBackground(PresContext(), this, &bg, &isCanvas);
   PRBool viewHasTransparentContent = hasBG &&
     (bg->mBackgroundFlags & NS_STYLE_BG_COLOR_TRANSPARENT) &&
-    !GetStyleDisplay()->mAppearance;
-  if (viewHasTransparentContent) {
-    nsCOMPtr<nsISupports> cont = PresContext()->GetContainer();
-    nsCOMPtr<nsIDocShellTreeItem> dsti = do_QueryInterface(cont);
-    PRInt32 type = -1;
-    if (!dsti || NS_FAILED(dsti->GetItemType(&type)) ||
-        type != nsIDocShellTreeItem::typeChrome)
-      viewHasTransparentContent = PR_FALSE;
-  }
+    !GetStyleDisplay()->mAppearance && !mInContentShell;
 
   nsIContent* parentContent = GetContent()->GetParent();
   nsIAtom *tag = nsnull;
@@ -657,7 +657,7 @@ nsMenuPopupFrame::SyncViewWithFrame(nsPresContext* aPresContext,
   NS_ENSURE_ARG(aPresContext);
   NS_ENSURE_ARG(aFrame);
 
-  if (!mShouldAutoPosition) 
+  if (!mShouldAutoPosition && !mInContentShell) 
     return NS_OK;
 
   // |containingView|
@@ -756,6 +756,13 @@ nsMenuPopupFrame::SyncViewWithFrame(nsPresContext* aPresContext,
   rect.width  -= nsPresContext::CSSPixelsToAppUnits(3);
   rect.height -= nsPresContext::CSSPixelsToAppUnits(3);
 
+  // for content shells, clip to the client area rather than the screen area
+  if (mInContentShell) {
+    nsRect rootScreenRect = presShell->GetRootFrame()->GetScreenRect();
+    rootScreenRect.ScaleRoundIn(aPresContext->AppUnitsPerDevPixel());
+    rect.IntersectRect(rect, rootScreenRect);
+  }
+
   PRInt32 screenLeftTwips   = rect.x;
   PRInt32 screenTopTwips    = rect.y;
   PRInt32 screenWidthTwips  = rect.width;
@@ -2028,6 +2035,10 @@ nsMenuPopupFrame::MoveTo(PRInt32 aLeft, PRInt32 aTop)
 void
 nsMenuPopupFrame::MoveToInternal(PRInt32 aLeft, PRInt32 aTop)
 {
+  // just don't support moving popups for content shells
+  if (mInContentShell)
+    return;
+
   nsIView* view = GetView();
   NS_ASSERTION(view->GetParent(), """"Must have parent!"""");
   
diff --git a/layout/xul/base/src/nsMenuPopupFrame.h b/layout/xul/base/src/nsMenuPopupFrame.h
index 8f4a8a4..860d539 100644
--- a/layout/xul/base/src/nsMenuPopupFrame.h
+++ b/layout/xul/base/src/nsMenuPopupFrame.h
@@ -257,6 +257,7 @@ protected:
   PRPackedBool mShouldAutoPosition; // Should SyncViewWithFrame be allowed to auto position popup?
   PRPackedBool mShouldRollup; // Should this menupopup be allowed to dismiss automatically?
   PRPackedBool mConsumeRollupEvent; // Should the rollup event be consumed?
+  PRPackedBool mInContentShell; // True if the popup is in a content shell
 
   nsString     mIncrementalString;  // for incremental typing navigation
 """
70a2f60c08f4ca3c524364882762e2643c96a763,74838,377356,jst@mozilla.org,"Fixing bug 377356. Move code around to ensure security checks are always done against the right object. r+sr=bzbarsky@mit.edu
",1176765075,"""diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index 53eadf3..c7d41ea 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -6543,6 +6543,19 @@ nsEventReceiverSH::AddEventListenerHelper(JSContext *cx, JSObject *obj,
     return JS_FALSE;
   }
 
+  nsCOMPtr<nsIXPConnectWrappedNative> wrapper;
+  nsresult rv =
+    sXPConnect->GetWrappedNativeOfJSObject(cx, obj, getter_AddRefs(wrapper));
+  if (NS_FAILED(rv)) {
+    nsDOMClassInfo::ThrowJSException(cx, rv);
+
+    return JS_FALSE;
+  }
+
+  // Set obj to be the object on which we'll actually register the
+  // event listener.
+  wrapper->GetJSObject(&obj);
+
   // Check that the caller has permission to call obj's addEventListener.
   if (NS_FAILED(sSecMan->CheckPropertyAccess(cx, obj,
                                              JS_GET_CLASS(cx, obj)->name,
@@ -6559,15 +6572,6 @@ nsEventReceiverSH::AddEventListenerHelper(JSContext *cx, JSObject *obj,
     return JS_FALSE;
   }
 
-  nsCOMPtr<nsIXPConnectWrappedNative> wrapper;
-  nsresult rv =
-    sXPConnect->GetWrappedNativeOfJSObject(cx, obj, getter_AddRefs(wrapper));
-  if (NS_FAILED(rv)) {
-    nsDOMClassInfo::ThrowJSException(cx, rv);
-
-    return JS_FALSE;
-  }
-
   if (JSVAL_IS_PRIMITIVE(argv[1])) {
     // The second argument must be a function, or a
     // nsIDOMEventListener. Throw an error."""
90f01dc9d6ae01be6af2da63cd1f61a786bbadbc,74857,377216,bzbarsky@mit.edu,"Recalc quotes and counters before reflow.  Bug 377216, r+sr=dbaron
",1176682294,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index 3aeee46..6b3bd06 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -10180,18 +10180,7 @@ nsCSSFrameConstructor::EndUpdate()
     // This is the end of our last update.  Before we decrement
     // mUpdateCount, recalc quotes and counters as needed.
 
-    if (mQuotesDirty) {
-      mQuotesDirty = PR_FALSE;
-      mQuoteList.RecalcAll();
-    }
-
-    if (mCountersDirty) {
-      mCountersDirty = PR_FALSE;
-      mCounterManager.RecalcAll();
-    }
-
-    NS_ASSERTION(!mQuotesDirty, """"Quotes updates will be lost"""");
-    NS_ASSERTION(!mCountersDirty, """"Counter updates will be lost"""");
+    RecalcQuotesAndCounters();
     NS_ASSERTION(mUpdateCount == 1, """"Odd update count"""");
   }
 
@@ -10199,6 +10188,23 @@ nsCSSFrameConstructor::EndUpdate()
 }
 
 void
+nsCSSFrameConstructor::RecalcQuotesAndCounters()
+{
+  if (mQuotesDirty) {
+    mQuotesDirty = PR_FALSE;
+    mQuoteList.RecalcAll();
+  }
+
+  if (mCountersDirty) {
+    mCountersDirty = PR_FALSE;
+    mCounterManager.RecalcAll();
+  }
+
+  NS_ASSERTION(!mQuotesDirty, """"Quotes updates will be lost"""");
+  NS_ASSERTION(!mCountersDirty, """"Counter updates will be lost"""");  
+}
+
+void
 nsCSSFrameConstructor::WillDestroyFrameTree()
 {
 #if defined(DEBUG_dbaron_off)
diff --git a/layout/base/nsCSSFrameConstructor.h b/layout/base/nsCSSFrameConstructor.h
index 92f547f..c750fa5 100644
--- a/layout/base/nsCSSFrameConstructor.h
+++ b/layout/base/nsCSSFrameConstructor.h
@@ -133,6 +133,7 @@ public:
 
   void BeginUpdate() { ++mUpdateCount; }
   void EndUpdate();
+  void RecalcQuotesAndCounters();
 
   void WillDestroyFrameTree();
 
diff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp
index 30fa71b..822d099 100644
--- a/layout/base/nsPresShell.cpp
+++ b/layout/base/nsPresShell.cpp
@@ -4602,6 +4602,7 @@ PresShell::FlushPendingNotifications(mozFlushType aType)
     }
 
     if (aType & Flush_OnlyReflow) {
+      mFrameConstructor->RecalcQuotesAndCounters();
       ProcessReflowCommands(PR_FALSE);
     }
 """
e49fa9b2c9228f7cff3b1e306982ce09a0d24d68,74891,376223,roc+@cs.cmu.edu,"Bug 376223. Make frame construction for XUL listbox content grab pseudo frames if necessary. r+sr=bzbarsky
",1176483057,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index 67add71..0320720 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -12219,7 +12219,10 @@ nsCSSFrameConstructor::CreateListBoxContent(nsPresContext* aPresContext,
                                 aParentFrame, aChild->Tag(),
                                 aChild->GetNameSpaceID(),
                                 styleContext, frameItems, PR_FALSE);
-    
+    if (!state.mPseudoFrames.IsEmpty()) {
+      ProcessPseudoFrames(state, frameItems); 
+    }
+
     nsIFrame* newFrame = frameItems.childList;
     *aNewFrame = newFrame;
 """
685fd4184450bcb9ddf4d769f5d3cfd465b98495,74917,376924,aaronleventhal@moonset.net,"Bug 376924. Traversing the accessible tree after changes to CSS display property can crash Firefox. r=mats.palmgren
",1176390264,"""diff --git a/accessible/src/html/nsHTMLLinkAccessible.cpp b/accessible/src/html/nsHTMLLinkAccessible.cpp
index 950e919..5139bad 100644
--- a/accessible/src/html/nsHTMLLinkAccessible.cpp
+++ b/accessible/src/html/nsHTMLLinkAccessible.cpp
@@ -44,7 +44,7 @@
 NS_IMPL_ISUPPORTS_INHERITED0(nsHTMLLinkAccessible, nsLinkableAccessible)
 
 nsHTMLLinkAccessible::nsHTMLLinkAccessible(nsIDOMNode* aDomNode, nsIWeakReference* aShell, nsIFrame *aFrame):
-nsLinkableAccessible(aDomNode, aShell), mFrame(aFrame)
+nsLinkableAccessible(aDomNode, aShell)
 { 
 }
 
@@ -84,24 +84,3 @@ nsHTMLLinkAccessible::GetState(PRUint32 *aState, PRUint32 *aExtraState)
 
   return NS_OK;
 }
-
-nsIFrame* nsHTMLLinkAccessible::GetFrame()
-{
-  if (mWeakShell) {
-    if (!mFrame) {
-      mFrame = nsLinkableAccessible::GetFrame();
-    }
-    return mFrame;
-  }
-  return nsnull;
-}
-
-NS_IMETHODIMP nsHTMLLinkAccessible::FireToolkitEvent(PRUint32 aEvent,
-                                                     nsIAccessible *aTarget,
-                                                     void *aData)
-{
-  if (aEvent == nsIAccessibleEvent::EVENT_HIDE) {
-    mFrame = nsnull;  // Invalidate cached frame
-  }
-  return nsLinkableAccessible::FireToolkitEvent(aEvent, aTarget, aData);
-}
diff --git a/accessible/src/html/nsHTMLLinkAccessible.h b/accessible/src/html/nsHTMLLinkAccessible.h
index d5ed09f..fe9a766 100644
--- a/accessible/src/html/nsHTMLLinkAccessible.h
+++ b/accessible/src/html/nsHTMLLinkAccessible.h
@@ -52,17 +52,6 @@ public:
   NS_IMETHOD GetName(nsAString& _retval); 
   NS_IMETHOD GetRole(PRUint32 *_retval); 
   NS_IMETHOD GetState(PRUint32 *aState, PRUint32 *aExtraState);
-  NS_IMETHOD Shutdown() { mFrame = nsnull; return nsLinkableAccessible::Shutdown(); }
-  
-  // nsPIAccessNode
-  NS_IMETHOD_(nsIFrame *) GetFrame(void);
-
-  // nsPIAccessible
-  NS_IMETHOD FireToolkitEvent(PRUint32 aEvent, nsIAccessible *aTarget,
-                              void *aData);
-
-private:
-  nsIFrame *mFrame;  // XXX What's special about links that we cache frames for them?
 };
 
 #endif  
diff --git a/accessible/src/html/nsHTMLTextAccessible.cpp b/accessible/src/html/nsHTMLTextAccessible.cpp
index f336c5a..6635b2b 100644
--- a/accessible/src/html/nsHTMLTextAccessible.cpp
+++ b/accessible/src/html/nsHTMLTextAccessible.cpp
@@ -50,7 +50,7 @@
 #include """"nsComponentManagerUtils.h""""
 
 nsHTMLTextAccessible::nsHTMLTextAccessible(nsIDOMNode* aDomNode, nsIWeakReference* aShell, nsIFrame *aFrame):
-nsTextAccessibleWrap(aDomNode, aShell), mFrame(aFrame)
+nsTextAccessibleWrap(aDomNode, aShell)
 { 
 }
 
@@ -77,27 +77,6 @@ NS_IMETHODIMP nsHTMLTextAccessible::GetName(nsAString& aName)
   return rv;
 }
 
-nsIFrame* nsHTMLTextAccessible::GetFrame()
-{
-  if (!mWeakShell) {
-    return nsnull;
-  }
-  if (!mFrame) {
-    mFrame = nsTextAccessible::GetFrame();
-  }
-  return mFrame;
-}
-
-NS_IMETHODIMP nsHTMLTextAccessible::FireToolkitEvent(PRUint32 aEvent,
-                                                     nsIAccessible *aTarget,
-                                                     void *aData)
-{
-  if (aEvent == nsIAccessibleEvent::EVENT_HIDE) {
-    mFrame = nsnull;  // Invalidate cached frame
-  }
-  return nsTextAccessibleWrap::FireToolkitEvent(aEvent, aTarget, aData);
-}
-
 NS_IMETHODIMP nsHTMLTextAccessible::GetRole(PRUint32 *aRole)
 {
   nsIFrame *frame = GetFrame();
@@ -315,7 +294,7 @@ void nsHTMLLIAccessible::CacheChildren()
 nsHTMLListBulletAccessible::
   nsHTMLListBulletAccessible(nsIDOMNode* aDomNode, nsIWeakReference* aShell,
                              nsIFrame *aFrame, const nsAString& aBulletText) :
-    nsLeafAccessible(aDomNode, aShell), mFrame(aFrame), mWeakParent(nsnull),
+    nsLeafAccessible(aDomNode, aShell), mWeakParent(nsnull),
     mBulletText(aBulletText)
 {
   mBulletText += ' '; // Otherwise bullets are jammed up against list text
@@ -334,22 +313,10 @@ nsHTMLListBulletAccessible::Shutdown()
 {
   mBulletText.Truncate();
   mWeakParent = nsnull;
-  mFrame = nsnull;
 
   return nsLeafAccessible::Shutdown();
 }
 
-nsIFrame*
-nsHTMLListBulletAccessible::GetFrame()
-{
-  if (!mWeakShell)
-    return nsnull;
-
-  if (!mFrame)
-    mFrame = nsLeafAccessible::GetFrame();
-  return mFrame;
-}
-
 NS_IMETHODIMP
 nsHTMLListBulletAccessible::GetName(nsAString &aName)
 {
@@ -391,23 +358,12 @@ nsHTMLListBulletAccessible::GetParent(nsIAccessible **aParentAccessible)
 }
 
 NS_IMETHODIMP
-nsHTMLListBulletAccessible::FireToolkitEvent(PRUint32 aEvent,
-                                             nsIAccessible *aTarget,
-                                             void *aData)
-{
-  if (aEvent == nsIAccessibleEvent::EVENT_HIDE)
-    mFrame = nsnull;  // Invalidate cached frame
-  return nsLeafAccessible::FireToolkitEvent(aEvent, aTarget, aData);
-}
-
-NS_IMETHODIMP
 nsHTMLListBulletAccessible::GetContentText(nsAString& aText)
 {
   aText = mBulletText;
   return NS_OK;
 }
 
-
 // nsHTMLListAccessible
 
 NS_IMETHODIMP
diff --git a/accessible/src/html/nsHTMLTextAccessible.h b/accessible/src/html/nsHTMLTextAccessible.h
index 9110e54..fb352e4 100644
--- a/accessible/src/html/nsHTMLTextAccessible.h
+++ b/accessible/src/html/nsHTMLTextAccessible.h
@@ -55,20 +55,6 @@ public:
   NS_IMETHOD GetState(PRUint32 *aState, PRUint32 *aExtraState);
   NS_IMETHOD GetRole(PRUint32 *aRole);
   virtual nsresult GetAttributesInternal(nsIPersistentProperties *aAttributes);
-  NS_IMETHOD Shutdown() { mFrame = nsnull; return nsTextAccessibleWrap::Shutdown(); }
-  
-  // nsPIAccessNode
-  NS_IMETHOD_(nsIFrame *) GetFrame(void);
-
-  // nsPIAccessible
-  NS_IMETHOD FireToolkitEvent(PRUint32 aEvent, nsIAccessible *aTarget,
-                              void *aData);
-
-private:
-  // We cache frames for text accessibles so that the primary frame map isn't
-  // increased in size just due to accessibility. Normally the primary frame map,
-  // which is used by nsIPresShell::GetPrimaryFrameFor(), does not include text frames
-  nsIFrame *mFrame; // Only valid if node is not shut down (mWeakShell != null)
 };
 
 class nsHTMLHRAccessible : public nsLeafAccessible
@@ -111,7 +97,6 @@ public:
 
   // nsPIAccessNode
   NS_IMETHOD Shutdown();
-  NS_IMETHOD_(nsIFrame *) GetFrame(void);
 
   // nsIAccessible
   NS_IMETHOD GetName(nsAString& aName);
@@ -125,8 +110,6 @@ public:
   NS_IMETHOD GetParent(nsIAccessible **aParentAccessible);
 
   // nsPIAccessible
-  NS_IMETHOD FireToolkitEvent(PRUint32 aEvent, nsIAccessible *aTarget,
-                              void *aData);
   NS_IMETHOD GetContentText(nsAString& aText);
 
 protected:
@@ -137,7 +120,6 @@ protected:
   // here should not be a problem if we invalidate the right parts of
   // the accessibility cache when mutation events occur.
   nsIAccessible *mWeakParent;
-  nsIFrame *mFrame;
   nsString mBulletText;
 };
 """
a0d131a706f01a2463bc390321df2053abc39e27,74950,376987,jst@mozilla.org,"Fixing bug 376987. Add missing code to event listener registration helper code. r=mrbkap@gmail.com, sr=bzbarsky@mit.edu
",1176249568,"""diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index 281ae5c..53eadf3 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -6543,6 +6543,22 @@ nsEventReceiverSH::AddEventListenerHelper(JSContext *cx, JSObject *obj,
     return JS_FALSE;
   }
 
+  // Check that the caller has permission to call obj's addEventListener.
+  if (NS_FAILED(sSecMan->CheckPropertyAccess(cx, obj,
+                                             JS_GET_CLASS(cx, obj)->name,
+                                             sAddEventListener_id,
+                                             nsIXPCSecurityManager::ACCESS_GET_PROPERTY)) ||
+      NS_FAILED(sSecMan->CheckPropertyAccess(cx, obj,
+                                             JS_GET_CLASS(cx, obj)->name,
+                                             sAddEventListener_id,
+                                             nsIXPCSecurityManager::ACCESS_CALL_METHOD))) {
+    // The caller doesn't have access to get or call the callee
+    // object's addEventListener method. The security manager already
+    // threw an exception for us, so simply return false.
+
+    return JS_FALSE;
+  }
+
   nsCOMPtr<nsIXPConnectWrappedNative> wrapper;
   nsresult rv =
     sXPConnect->GetWrappedNativeOfJSObject(cx, obj, getter_AddRefs(wrapper));"""
d3fbee0af37edd97bd914d17feca9480b608c232,74955,369150,Olli.Pettay@helsinki.fi,"Additional patch for bug 369150, r+sr=bz
",1176232101,"""diff --git a/layout/generic/nsFrameSetFrame.cpp b/layout/generic/nsFrameSetFrame.cpp
index df59a25..de292cf 100644
--- a/layout/generic/nsFrameSetFrame.cpp
+++ b/layout/generic/nsFrameSetFrame.cpp
@@ -1019,7 +1019,12 @@ nsHTMLFramesetFrame::Reflow(nsPresContext*          aPresContext,
   ourContent->GetColSpec(&cols, &colSpecs);
   // If the number of cols or rows has changed, the frame for the frameset
   // will be re-created.
-  NS_ENSURE_STATE(mNumRows == rows && mNumCols == cols);
+  if (mNumRows != rows || mNumCols != cols) {
+    aStatus = NS_FRAME_COMPLETE;
+    mDrag.UnSet();
+    NS_FRAME_SET_TRUNCATION(aStatus, aReflowState, aDesiredSize);
+    return NS_OK;
+  }
 
   if (!mDrag.mActive) {
     CalculateRowCol(aPresContext, width, mNumCols, colSpecs, mColSizes);"""
897dac6ab298170df0cdadba7fea99180e3e7f8f,75059,375183,igor@mir2.org,"Bug 375183: simpler noSuchMethod implementation, r=brendan.
",1175725137,"""diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index 3574c6f..78e2c5a 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -581,15 +581,14 @@ js_ComputeThis(JSContext *cx, JSObject *thisp, jsval *argv)
 
 static JSBool
 NoSuchMethod(JSContext *cx, JSStackFrame *fp, jsval *vp, uint32 flags,
-             uintN *argcp)
+             uintN argc)
 {
-    jsval v, *sp, *newsp;
     JSObject *thisp, *argsobj;
+    jsval *sp, roots[3];
+    JSTempValueRooter tvr;
     jsid id;
+    JSBool ok;
     jsbytecode *pc;
-    JSAtom *atom;
-    uintN argc;
-    JSArena *a;
 
     /*
      * We must call js_ComputeThis here to censor Call objects.  A performance
@@ -618,6 +617,11 @@ NoSuchMethod(JSContext *cx, JSStackFrame *fp, jsval *vp, uint32 flags,
     thisp = js_ComputeThis(cx, thisp, vp + 2);
     if (!thisp)
         return JS_FALSE;
+    vp[1] = OBJECT_TO_JSVAL(thisp);
+
+    /* From here on, control must flow through label out: to return. */
+    memset(roots, 0, sizeof roots);
+    JS_PUSH_TEMP_ROOT(cx, JS_ARRAY_LENGTH(roots), roots, &tvr);
 
     id = ATOM_TO_JSID(cx->runtime->atomState.noSuchMethodAtom);
 #if JS_HAS_XML_SUPPORT
@@ -625,18 +629,21 @@ NoSuchMethod(JSContext *cx, JSStackFrame *fp, jsval *vp, uint32 flags,
         JSXMLObjectOps *ops;
 
         ops = (JSXMLObjectOps *) thisp->map->ops;
-        thisp = ops->getMethod(cx, thisp, id, &v);
-        if (!thisp)
-            return JS_FALSE;
+        thisp = ops->getMethod(cx, thisp, id, &roots[2]);
+        if (!thisp) {
+            ok = JS_FALSE;
+            goto out;
+        }
         vp[1] = OBJECT_TO_JSVAL(thisp);
     } else
 #endif
     {
-        if (!OBJ_GET_PROPERTY(cx, thisp, id, &v))
-            return JS_FALSE;
+        ok = OBJ_GET_PROPERTY(cx, thisp, id, &roots[2]);
+        if (!ok)
+            goto out;
     }
-    if (JSVAL_IS_PRIMITIVE(v))
-        goto bad;
+    if (JSVAL_IS_PRIMITIVE(roots[2]))
+        goto not_function;
 
     pc = (jsbytecode *) vp[-(intN)fp->script->depth];
     switch ((JSOp) *pc) {
@@ -645,55 +652,29 @@ NoSuchMethod(JSContext *cx, JSStackFrame *fp, jsval *vp, uint32 flags,
 #if JS_HAS_XML_SUPPORT
       case JSOP_CALLPROP:
 #endif
-        atom = js_GetAtomFromBytecode(fp->script, pc, 0);
-        argc = *argcp;
+        roots[0] = ATOM_KEY(js_GetAtomFromBytecode(fp->script, pc, 0));
         argsobj = js_NewArrayObject(cx, argc, vp + 2);
-        if (!argsobj)
-            return JS_FALSE;
-
-        sp = vp + 4;
-        if (argc < 2) {
-            a = cx->stackPool.current;
-            if ((jsuword)sp > a->limit) {
-                /*
-                 * Arguments must be contiguous, and must include argv[-1]
-                 * and argv[-2], so allocate more stack, advance sp, and
-                 * set newsp[1] to thisp (vp[1]).  The other argv elements
-                 * will be set below, using negative indexing from sp.
-                 */
-                newsp = js_AllocRawStack(cx, 4, NULL);
-                if (!newsp)
-                    return JS_FALSE;
-                newsp[1] = OBJECT_TO_JSVAL(thisp);
-                sp = newsp + 4;
-            } else if ((jsuword)sp > a->avail) {
-                /*
-                 * Inline, optimized version of JS_ARENA_ALLOCATE to claim
-                 * the small number of words not already allocated as part
-                 * of the caller's operand stack.
-                 */
-                JS_ArenaCountAllocation(&cx->stackPool,
-                                        (jsuword)sp - a->avail);
-                a->avail = (jsuword)sp;
-            }
+        if (!argsobj) {
+            ok = JS_FALSE;
+            goto out;
         }
-
-        sp[-4] = v;
-        JS_ASSERT(sp[-3] == OBJECT_TO_JSVAL(thisp));
-        sp[-2] = ATOM_KEY(atom);
-        sp[-1] = OBJECT_TO_JSVAL(argsobj);
-        SAVE_SP(fp);
-        *argcp = 2;
+        roots[1] = OBJECT_TO_JSVAL(argsobj);
+        ok = js_InternalInvoke(cx, thisp, roots[2], flags | JSINVOKE_INTERNAL,
+                               2, roots, &vp[0]);
         break;
 
       default:
-        goto bad;
+        goto not_function;
     }
-    return JS_TRUE;
 
-bad:
+  out:
+    JS_POP_TEMP_ROOT(cx, &tvr);
+    return ok;
+
+  not_function:
     js_ReportIsNotFunction(cx, vp, flags & JSINVOKE_FUNFLAGS);
-    return JS_FALSE;
+    ok = JS_FALSE;
+    goto out;
 }
 
 #endif /* JS_HAS_NO_SUCH_METHOD */
@@ -1097,16 +1078,14 @@ js_Invoke(JSContext *cx, uintN argc, uintN flags)
      */
     if (JSVAL_IS_PRIMITIVE(v)) {
 #if JS_HAS_NO_SUCH_METHOD
-        if (!fp->script || (flags & JSINVOKE_INTERNAL))
-            goto bad;
-        ok = NoSuchMethod(cx, fp, vp, flags, &argc);
-        if (!ok)
+        if (fp->script && !(flags & JSINVOKE_INTERNAL)) {
+            ok = NoSuchMethod(cx, fp, vp, flags, argc);
+            if (ok)
+                frame.rval = *vp;
             goto out2;
-        RESTORE_SP(fp);
-        v = *vp;
-#else
-        goto bad;
+        }
 #endif
+        goto bad;
     }
 
     /* Load thisv after potentially calling NoSuchMethod, which may set it. */
@@ -3847,16 +3826,6 @@ interrupt:
             vp = sp - (argc + 2);
             lval = *vp;
             SAVE_SP_AND_PC(fp);
-#if JS_HAS_NO_SUCH_METHOD
-            if (JSVAL_IS_PRIMITIVE(lval)) {
-                ok = NoSuchMethod(cx, fp, vp, 0, &argc);
-                if (!ok)
-                    goto out;
-                RESTORE_SP(fp);
-                lval = *vp;
-            }
-#endif
-
             if (VALUE_IS_FUNCTION(cx, lval) &&
                 (obj = JSVAL_TO_OBJECT(lval),
                  fun = (JSFunction *) JS_GetPrivate(cx, obj),"""
c3bded9c67863d1a73018cc342d10cb5a73d9aa1,75194,375711,mrbkap@gmail.com,"Deal with the /i option before calculating the start (and localMax) for ranges. bug 375711, r=crowder
",1175192355,"""diff --git a/js/src/jsregexp.c b/js/src/jsregexp.c
index 1934771..ab8c60e 100644
--- a/js/src/jsregexp.c
+++ b/js/src/jsregexp.c
@@ -1024,6 +1024,11 @@ lexHex:
             localMax = *src++;
             break;
         }
+        if (state->flags & JSREG_FOLD) {
+            c = JS_MAX(upcase((jschar) localMax), downcase((jschar) localMax));
+            if (c > localMax)
+                localMax = c;
+        }
         if (inRange) {
             if (rangeStart > localMax) {
                 JS_ReportErrorNumber(state->context,
@@ -1042,11 +1047,6 @@ lexHex:
                 }
             }
         }
-        if (state->flags & JSREG_FOLD) {
-            c = JS_MAX(upcase((jschar)localMax), downcase((jschar)localMax));
-            if (c > localMax)
-                localMax = c;
-        }
         if (localMax > max)
             max = localMax;
     }"""
e2599767e256c697ecf67b40cde094c87ae4ae71,75312,375196,Olli.Pettay@helsinki.fi,"375196, r+sr=roc
",1174887502,"""diff --git a/content/base/src/nsGenericElement.cpp b/content/base/src/nsGenericElement.cpp
index 57467e1..d23abda 100644
--- a/content/base/src/nsGenericElement.cpp
+++ b/content/base/src/nsGenericElement.cpp
@@ -2440,7 +2440,7 @@ nsGenericElement::DispatchEvent(nsPresContext* aPresContext,
     return NS_OK;
   }
 
-  nsIPresShell *shell = aPresContext->GetPresShell();
+  nsCOMPtr<nsIPresShell> shell = aPresContext->GetPresShell();
   if (!shell) {
     return NS_OK;
   }
@@ -3882,7 +3882,7 @@ nsGenericElement::PostHandleEventForLinks(nsEventChainPostVisitor& aVisitor)
       }
 
       // The default action is simply to dispatch DOMActivate
-      nsIPresShell *shell = aVisitor.mPresContext->GetPresShell();
+      nsCOMPtr<nsIPresShell> shell = aVisitor.mPresContext->GetPresShell();
       if (shell) {
         // single-click
         nsEventStatus status = nsEventStatus_eIgnore;
diff --git a/content/html/content/src/nsHTMLButtonElement.cpp b/content/html/content/src/nsHTMLButtonElement.cpp
index 8ee3bee..a8f4523 100644
--- a/content/html/content/src/nsHTMLButtonElement.cpp
+++ b/content/html/content/src/nsHTMLButtonElement.cpp
@@ -379,7 +379,8 @@ nsHTMLButtonElement::PostHandleEvent(nsEventChainPostVisitor& aVisitor)
       case NS_MOUSE_CLICK:
         {
           if (NS_IS_MOUSE_LEFT_CLICK(aVisitor.mEvent)) {
-            nsIPresShell *presShell = aVisitor.mPresContext->GetPresShell();
+            nsCOMPtr<nsIPresShell> presShell =
+              aVisitor.mPresContext->GetPresShell();
             if (presShell) {
               // single-click
               nsUIEvent event(NS_IS_TRUSTED_EVENT(aVisitor.mEvent),
@@ -403,7 +404,8 @@ nsHTMLButtonElement::PostHandleEvent(nsEventChainPostVisitor& aVisitor)
             event.originator      = this;
             nsEventStatus status  = nsEventStatus_eIgnore;
 
-            nsIPresShell *presShell = aVisitor.mPresContext->GetPresShell();
+            nsCOMPtr<nsIPresShell> presShell =
+              aVisitor.mPresContext->GetPresShell();
             // If |nsIPresShell::Destroy| has been called due to
             // handling the event, the pres context will return
             // a null pres shell.  See bug 125624.
diff --git a/content/html/content/src/nsHTMLInputElement.cpp b/content/html/content/src/nsHTMLInputElement.cpp
index d56034a..050944c 100644
--- a/content/html/content/src/nsHTMLInputElement.cpp
+++ b/content/html/content/src/nsHTMLInputElement.cpp
@@ -1045,7 +1045,7 @@ nsHTMLInputElement::MaybeSubmitForm(nsPresContext* aPresContext)
     return NS_OK;
   }
   
-  nsIPresShell* shell = aPresContext->GetPresShell();
+  nsCOMPtr<nsIPresShell> shell = aPresContext->GetPresShell();
   if (!shell) {
     return NS_OK;
   }
@@ -1502,7 +1502,7 @@ nsHTMLInputElement::PostHandleEvent(nsEventChainPostVisitor& aVisitor)
       NS_IS_MOUSE_LEFT_CLICK(aVisitor.mEvent)) {
     nsUIEvent actEvent(NS_IS_TRUSTED_EVENT(aVisitor.mEvent), NS_UI_ACTIVATE, 1);
 
-    nsIPresShell *shell = aVisitor.mPresContext->GetPresShell();
+    nsCOMPtr<nsIPresShell> shell = aVisitor.mPresContext->GetPresShell();
     if (shell) {
       nsEventStatus status = nsEventStatus_eIgnore;
       SET_BOOLBIT(mBitField, BF_IN_INTERNAL_ACTIVATE, PR_TRUE);
@@ -1770,7 +1770,8 @@ nsHTMLInputElement::PostHandleEvent(nsEventChainPostVisitor& aVisitor)
             event.originator      = this;
             nsEventStatus status  = nsEventStatus_eIgnore;
 
-            nsIPresShell *presShell = aVisitor.mPresContext->GetPresShell();
+            nsCOMPtr<nsIPresShell> presShell =
+              aVisitor.mPresContext->GetPresShell();
 
             // If |nsIPresShell::Destroy| has been called due to
             // handling the event the pres context will return a null
diff --git a/content/svg/content/src/nsSVGSVGElement.cpp b/content/svg/content/src/nsSVGSVGElement.cpp
index 0f37554..e78ba01 100644
--- a/content/svg/content/src/nsSVGSVGElement.cpp
+++ b/content/svg/content/src/nsSVGSVGElement.cpp
@@ -1011,7 +1011,7 @@ nsSVGSVGElement::SetCurrentScaleTranslate(float s, float x, float y)
   // now dispatch an SVGZoom event if we are the root element
   nsIDocument* doc = GetCurrentDoc();
   if (doc) {
-    nsIPresShell* presShell = doc->GetShellAt(0);
+    nsCOMPtr<nsIPresShell> presShell = doc->GetShellAt(0);
     NS_ASSERTION(presShell, """"no presShell"""");
     if (presShell &&
         doc->GetRootContent() == NS_STATIC_CAST(nsIContent*, this)) {
@@ -1036,7 +1036,7 @@ nsSVGSVGElement::SetCurrentTranslate(float x, float y)
   // now dispatch an SVGScroll event if we are the root element
   nsIDocument* doc = GetCurrentDoc();
   if (doc) {
-    nsIPresShell* presShell = doc->GetShellAt(0);
+    nsCOMPtr<nsIPresShell> presShell = doc->GetShellAt(0);
     NS_ASSERTION(presShell, """"no presShell"""");
     if (presShell &&
         doc->GetRootContent() == NS_STATIC_CAST(nsIContent*, this)) {
diff --git a/content/xml/document/src/nsXMLContentSink.cpp b/content/xml/document/src/nsXMLContentSink.cpp
index 5a1d2dc..3d1ae45 100644
--- a/content/xml/document/src/nsXMLContentSink.cpp
+++ b/content/xml/document/src/nsXMLContentSink.cpp
@@ -1114,7 +1114,7 @@ nsXMLContentSink::HandleEndElement(const PRUnichar *aName)
     nsEventStatus status = nsEventStatus_eIgnore;
     nsEvent event(PR_TRUE, NS_SVG_LOAD);
     event.eventStructType = NS_SVG_EVENT;
-    nsIPresShell *presShell = mDocument->GetShellAt(0);
+    nsCOMPtr<nsIPresShell> presShell = mDocument->GetShellAt(0);
     if (presShell) {
       FlushTags();
       presShell->HandleDOMEventWithTarget(content, &event, &status);
diff --git a/layout/base/nsIPresShell.h b/layout/base/nsIPresShell.h
index 07c281c..6fa6d9c 100644
--- a/layout/base/nsIPresShell.h
+++ b/layout/base/nsIPresShell.h
@@ -514,6 +514,7 @@ public:
 
   /**
     * Interface to dispatch events via the presshell
+    * @note The caller must have a strong reference to the PresShell.
     */
   NS_IMETHOD HandleEventWithTarget(nsEvent* aEvent,
                                    nsIFrame* aFrame,
@@ -522,6 +523,7 @@ public:
 
   /**
    * Dispatch event to content only (NOT full processing)
+   * @note The caller must have a strong reference to the PresShell.
    */
   NS_IMETHOD HandleDOMEventWithTarget(nsIContent* aTargetContent,
                                       nsEvent* aEvent,
diff --git a/layout/forms/nsComboboxControlFrame.cpp b/layout/forms/nsComboboxControlFrame.cpp
index e40aac5..219101d 100644
--- a/layout/forms/nsComboboxControlFrame.cpp
+++ b/layout/forms/nsComboboxControlFrame.cpp
@@ -394,7 +394,7 @@ nsComboboxControlFrame::ShowPopup(PRBool aShowPopup)
                      NS_XUL_POPUP_SHOWING : NS_XUL_POPUP_HIDING, nsnull,
                      nsMouseEvent::eReal);
 
-  nsIPresShell *shell = GetPresContext()->GetPresShell();
+  nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
   if (shell) 
     shell->HandleDOMEventWithTarget(mContent, &event, &status);
 }
diff --git a/layout/forms/nsListControlFrame.cpp b/layout/forms/nsListControlFrame.cpp
index e3ff0ff..378294b 100644
--- a/layout/forms/nsListControlFrame.cpp
+++ b/layout/forms/nsListControlFrame.cpp
@@ -1658,7 +1658,7 @@ nsListControlFrame::FireOnChange()
   nsEventStatus status = nsEventStatus_eIgnore;
   nsEvent event(PR_TRUE, NS_FORM_CHANGE);
 
-  nsIPresShell *presShell = GetPresContext()->GetPresShell();
+  nsCOMPtr<nsIPresShell> presShell = GetPresContext()->GetPresShell();
   if (presShell) {
     presShell->HandleEventWithTarget(&event, this, nsnull, &status);
   }
diff --git a/layout/forms/nsTextControlFrame.cpp b/layout/forms/nsTextControlFrame.cpp
index 683244c..d9fc605 100644
--- a/layout/forms/nsTextControlFrame.cpp
+++ b/layout/forms/nsTextControlFrame.cpp
@@ -305,7 +305,7 @@ nsTextInputListener::NotifySelectionChanged(nsIDOMDocument* aDoc, nsISelection*
       nsCOMPtr<nsIDocument> doc = content->GetDocument();
       if (doc) 
       {
-        nsIPresShell *presShell = doc->GetShellAt(0);
+        nsCOMPtr<nsIPresShell> presShell = doc->GetShellAt(0);
         if (presShell) 
         {
           nsEventStatus status = nsEventStatus_eIgnore;
@@ -2467,8 +2467,8 @@ nsTextControlFrame::FireOnInput()
 
   // Have the content handle the event, propagating it according to normal
   // DOM rules.
-  GetPresContext()->PresShell()->HandleEventWithTarget(&event, nsnull, mContent,
-                                                       &status); 
+  nsCOMPtr<nsIPresShell> shell = GetPresContext()->PresShell();
+  shell->HandleEventWithTarget(&event, nsnull, mContent, &status);
 }
 
 nsresult
@@ -2488,9 +2488,8 @@ nsTextControlFrame::CheckFireOnChange()
     // Dispatch the change event
     nsEventStatus status = nsEventStatus_eIgnore;
     nsInputEvent event(PR_TRUE, NS_FORM_CHANGE, nsnull);
-
-    GetPresContext()->PresShell()->HandleEventWithTarget(&event, nsnull,
-                                                         mContent, &status);
+    nsCOMPtr<nsIPresShell> shell = GetPresContext()->PresShell();
+    shell->HandleEventWithTarget(&event, nsnull, mContent, &status);
   }
   return NS_OK;
 }
diff --git a/layout/xul/base/src/nsButtonBoxFrame.cpp b/layout/xul/base/src/nsButtonBoxFrame.cpp
index be3dab1..831d4e8 100644
--- a/layout/xul/base/src/nsButtonBoxFrame.cpp
+++ b/layout/xul/base/src/nsButtonBoxFrame.cpp
@@ -155,9 +155,8 @@ nsButtonBoxFrame::DoMouseClick(nsGUIEvent* aEvent, PRBool aTrustEvent)
   }
 
   // Have the content handle the event, propagating it according to normal DOM rules.
-  nsIPresShell *shell = GetPresContext()->GetPresShell();
+  nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
   if (shell) {
     shell->HandleDOMEventWithTarget(mContent, &event, &status);
-    // shell may no longer be alive, don't use it here unless you keep a ref
   }
 }
diff --git a/layout/xul/base/src/nsMenuFrame.cpp b/layout/xul/base/src/nsMenuFrame.cpp
index 476263c..eb8f4f5 100644
--- a/layout/xul/base/src/nsMenuFrame.cpp
+++ b/layout/xul/base/src/nsMenuFrame.cpp
@@ -1726,7 +1726,7 @@ nsMenuFrame::OnCreate()
   
   nsresult rv = NS_OK;
 
-  nsIPresShell *shell = GetPresContext()->GetPresShell();
+  nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
   if (shell) {
     if (child) {
       rv = shell->HandleDOMEventWithTarget(child, &event, &status);
@@ -1734,7 +1734,6 @@ nsMenuFrame::OnCreate()
     else {
       rv = shell->HandleDOMEventWithTarget(mContent, &event, &status);
     }
-    // shell may no longer be alive, don't use it here unless you keep a ref
   }
 
   if ( NS_FAILED(rv) || status == nsEventStatus_eConsumeNoDefault )
@@ -1800,7 +1799,7 @@ nsMenuFrame::OnCreated()
   GetMenuChildrenElement(getter_AddRefs(child));
   
   nsresult rv = NS_OK;
-  nsIPresShell *shell = GetPresContext()->GetPresShell();
+  nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
   if (shell) {
     if (child) {
       rv = shell->HandleDOMEventWithTarget(child, &event, &status);
@@ -1808,7 +1807,6 @@ nsMenuFrame::OnCreated()
     else {
       rv = shell->HandleDOMEventWithTarget(mContent, &event, &status);
     }
-    // shell may no longer be alive, don't use it here unless you keep a ref
   }
 
   if ( NS_FAILED(rv) || status == nsEventStatus_eConsumeNoDefault )
@@ -1827,7 +1825,7 @@ nsMenuFrame::OnDestroy()
   GetMenuChildrenElement(getter_AddRefs(child));
   
   nsresult rv = NS_OK;
-  nsIPresShell *shell = GetPresContext()->GetPresShell();
+  nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
   if (shell) {
     if (child) {
       rv = shell->HandleDOMEventWithTarget(child, &event, &status);
@@ -1835,7 +1833,6 @@ nsMenuFrame::OnDestroy()
     else {
       rv = shell->HandleDOMEventWithTarget(mContent, &event, &status);
     }
-    // shell may no longer be alive, don't use it here unless you keep a ref
   }
 
   if ( NS_FAILED(rv) || status == nsEventStatus_eConsumeNoDefault )
@@ -1854,7 +1851,7 @@ nsMenuFrame::OnDestroyed()
   GetMenuChildrenElement(getter_AddRefs(child));
   
   nsresult rv = NS_OK;
-  nsIPresShell *shell = GetPresContext()->GetPresShell();
+  nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
   if (shell) {
     if (child) {
       rv = shell->HandleDOMEventWithTarget(child, &event, &status);
@@ -1862,7 +1859,6 @@ nsMenuFrame::OnDestroyed()
     else {
       rv = shell->HandleDOMEventWithTarget(mContent, &event, &status);
     }
-    // shell may no longer be alive, don't use it here unless you keep a ref
   }
 
   if ( NS_FAILED(rv) || status == nsEventStatus_eConsumeNoDefault )
diff --git a/layout/xul/base/src/nsPopupSetFrame.cpp b/layout/xul/base/src/nsPopupSetFrame.cpp
index 5ba229a..b128e6e 100644
--- a/layout/xul/base/src/nsPopupSetFrame.cpp
+++ b/layout/xul/base/src/nsPopupSetFrame.cpp
@@ -645,11 +645,10 @@ nsPopupSetFrame::OnCreate(PRInt32 aX, PRInt32 aY, nsIContent* aPopupContent)
 
   if (aPopupContent) {
     nsCOMPtr<nsIContent> kungFuDeathGrip(aPopupContent);
-    nsIPresShell *shell = GetPresContext()->GetPresShell();
+    nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
     if (shell) {
       nsresult rv = shell->HandleDOMEventWithTarget(aPopupContent, &event,
                                                     &status);
-      // shell may no longer be alive, don't use it here unless you keep a ref
       if ( NS_FAILED(rv) || status == nsEventStatus_eConsumeNoDefault )
         return PR_FALSE;
     }
@@ -714,11 +713,10 @@ nsPopupSetFrame::OnCreated(PRInt32 aX, PRInt32 aY, nsIContent* aPopupContent)
   //event.point.y = aY;
 
   if (aPopupContent) {
-    nsIPresShell *shell = GetPresContext()->GetPresShell();
+    nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
     if (shell) {
       nsresult rv = shell->HandleDOMEventWithTarget(aPopupContent, &event,
                                                     &status);
-      // shell may no longer be alive, don't use it here unless you keep a ref
       if ( NS_FAILED(rv) || status == nsEventStatus_eConsumeNoDefault )
         return PR_FALSE;
     }"""
b3fe482ae28094de88587326ab240f56ee0e7460,75348,374584,Olli.Pettay@helsinki.fi,"Bug 374584, r=peterv, sr=jst
",1174733587,"""diff --git a/content/xul/document/src/nsXULCommandDispatcher.cpp b/content/xul/document/src/nsXULCommandDispatcher.cpp
index 9f9680a..0bbca2e 100644
--- a/content/xul/document/src/nsXULCommandDispatcher.cpp
+++ b/content/xul/document/src/nsXULCommandDispatcher.cpp
@@ -77,7 +77,7 @@ static PRLogModuleInfo* gLog;
 ////////////////////////////////////////////////////////////////////////
 
 nsXULCommandDispatcher::nsXULCommandDispatcher(nsIDocument* aDocument)
-    : mFocusController(nsnull), mDocument(aDocument), mUpdaters(nsnull)
+    : mDocument(aDocument), mUpdaters(nsnull)
 {
 
 #ifdef PR_LOGGING
@@ -88,50 +88,56 @@ nsXULCommandDispatcher::nsXULCommandDispatcher(nsIDocument* aDocument)
 
 nsXULCommandDispatcher::~nsXULCommandDispatcher()
 {
-  while (mUpdaters) {
-    Updater* doomed = mUpdaters;
-    mUpdaters = mUpdaters->mNext;
-    delete doomed;
-  }
+  Disconnect();
 }
 
+NS_IMPL_CYCLE_COLLECTION_CLASS(nsXULCommandDispatcher)
+
 // QueryInterface implementation for nsXULCommandDispatcher
 NS_INTERFACE_MAP_BEGIN(nsXULCommandDispatcher)
     NS_INTERFACE_MAP_ENTRY(nsIDOMXULCommandDispatcher)
     NS_INTERFACE_MAP_ENTRY(nsISupportsWeakReference)
     NS_INTERFACE_MAP_ENTRY_AMBIGUOUS(nsISupports, nsIDOMXULCommandDispatcher)
     NS_INTERFACE_MAP_ENTRY_CONTENT_CLASSINFO(XULCommandDispatcher)
+    NS_INTERFACE_MAP_ENTRIES_CYCLE_COLLECTION(nsXULCommandDispatcher)
 NS_INTERFACE_MAP_END
 
+NS_IMPL_CYCLE_COLLECTING_ADDREF(nsXULCommandDispatcher)
+NS_IMPL_CYCLE_COLLECTING_RELEASE(nsXULCommandDispatcher)
 
-NS_IMPL_ADDREF(nsXULCommandDispatcher)
-NS_IMPL_RELEASE(nsXULCommandDispatcher)
+NS_IMPL_CYCLE_COLLECTION_UNLINK_BEGIN(nsXULCommandDispatcher)
+  tmp->Disconnect();
+NS_IMPL_CYCLE_COLLECTION_UNLINK_END
 
+NS_IMPL_CYCLE_COLLECTION_TRAVERSE_BEGIN(nsXULCommandDispatcher)
+  NS_IMPL_CYCLE_COLLECTION_TRAVERSE_NSCOMPTR(mDocument)
+  Updater* updater = tmp->mUpdaters;
+  while (updater) {
+    cb.NoteXPCOMChild(updater->mElement);
+    updater = updater->mNext;
+  }
+NS_IMPL_CYCLE_COLLECTION_TRAVERSE_END
 
-NS_IMETHODIMP
-nsXULCommandDispatcher::Create(nsIDocument* aDoc, nsIDOMXULCommandDispatcher** aResult)
+void
+nsXULCommandDispatcher::Disconnect()
 {
-  nsXULCommandDispatcher* dispatcher = new nsXULCommandDispatcher(aDoc);
-  if (!dispatcher)
-    return NS_ERROR_OUT_OF_MEMORY;
-
-  *aResult = dispatcher;
-  NS_ADDREF(*aResult);
-  return NS_OK;
+  while (mUpdaters) {
+    Updater* doomed = mUpdaters;
+    mUpdaters = mUpdaters->mNext;
+    delete doomed;
+  }
+  mDocument = nsnull;
 }
 
-void
-nsXULCommandDispatcher::EnsureFocusController()
+nsIFocusController*
+nsXULCommandDispatcher::GetFocusController()
 {
-  if (!mFocusController) {
-    nsCOMPtr<nsPIDOMWindow> win(do_QueryInterface(mDocument->GetScriptGlobalObject()));
-  
-    // An inelegant way to retrieve this to be sure, but we are
-    // guaranteed that the focus controller outlives us, so it
-    // is safe to hold on to it (since we can't die until it has
-    // died).
-    mFocusController = win->GetRootFocusController(); // Store as a weak ptr.
+  if (!mDocument) {
+    return nsnull;
   }
+
+  nsCOMPtr<nsPIDOMWindow> win(do_QueryInterface(mDocument->GetScriptGlobalObject()));
+  return win ? win->GetRootFocusController() : nsnull;
 }
 
 ////////////////////////////////////////////////////////////////
@@ -140,10 +146,10 @@ nsXULCommandDispatcher::EnsureFocusController()
 NS_IMETHODIMP
 nsXULCommandDispatcher::GetFocusedElement(nsIDOMElement** aElement)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
-  nsresult rv = mFocusController->GetFocusedElement(aElement);
+  nsresult rv = fc->GetFocusedElement(aElement);
   NS_ENSURE_SUCCESS(rv, rv);
 
   // Make sure the caller can access the focused element.
@@ -161,11 +167,11 @@ nsXULCommandDispatcher::GetFocusedElement(nsIDOMElement** aElement)
 NS_IMETHODIMP
 nsXULCommandDispatcher::GetFocusedWindow(nsIDOMWindow** aWindow)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
   nsCOMPtr<nsIDOMWindowInternal> window;
-  nsresult rv = mFocusController->GetFocusedWindow(getter_AddRefs(window));
+  nsresult rv = fc->GetFocusedWindow(getter_AddRefs(window));
   NS_ENSURE_TRUE(NS_SUCCEEDED(rv) && window, rv);
 
   rv = CallQueryInterface(window, aWindow);
@@ -190,48 +196,42 @@ nsXULCommandDispatcher::GetFocusedWindow(nsIDOMWindow** aWindow)
 NS_IMETHODIMP
 nsXULCommandDispatcher::SetFocusedElement(nsIDOMElement* aElement)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
-  return mFocusController->SetFocusedElement(aElement);
+  return fc->SetFocusedElement(aElement);
 }
 
 NS_IMETHODIMP
 nsXULCommandDispatcher::SetFocusedWindow(nsIDOMWindow* aWindow)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
   nsCOMPtr<nsIDOMWindowInternal> window(do_QueryInterface(aWindow));
 
-  return mFocusController->SetFocusedWindow(window);
+  return fc->SetFocusedWindow(window);
 }
 
 NS_IMETHODIMP
 nsXULCommandDispatcher::AdvanceFocus()
 {
-  EnsureFocusController();
-  if (mFocusController)
-    return mFocusController->MoveFocus(PR_TRUE, nsnull);
-  return NS_OK;
+  nsIFocusController* fc = GetFocusController();
+  return fc ? fc->MoveFocus(PR_TRUE, nsnull) : NS_OK;
 }
 
 NS_IMETHODIMP
 nsXULCommandDispatcher::RewindFocus()
 {
-  EnsureFocusController();
-  if (mFocusController)
-    return mFocusController->MoveFocus(PR_FALSE, nsnull);
-  return NS_OK;
+  nsIFocusController* fc = GetFocusController();
+  return fc ? fc->MoveFocus(PR_FALSE, nsnull) : NS_OK;
 }
 
 NS_IMETHODIMP
 nsXULCommandDispatcher::AdvanceFocusIntoSubtree(nsIDOMElement* aElt)
 {
-  EnsureFocusController();
-  if (mFocusController)
-    return mFocusController->MoveFocus(PR_TRUE, aElt);
-  return NS_OK;
+  nsIFocusController* fc = GetFocusController();
+  return fc ? fc->MoveFocus(PR_TRUE, aElt) : NS_OK;
 }
 
 NS_IMETHODIMP
@@ -349,26 +349,18 @@ nsXULCommandDispatcher::RemoveCommandUpdater(nsIDOMElement* aElement)
 NS_IMETHODIMP
 nsXULCommandDispatcher::UpdateCommands(const nsAString& aEventName)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
   nsAutoString id;
   nsCOMPtr<nsIDOMElement> element;
-  mFocusController->GetFocusedElement(getter_AddRefs(element));
+  fc->GetFocusedElement(getter_AddRefs(element));
   if (element) {
     nsresult rv = element->GetAttribute(NS_LITERAL_STRING(""""id""""), id);
     NS_ASSERTION(NS_SUCCEEDED(rv), """"unable to get element's id"""");
     if (NS_FAILED(rv)) return rv;
   }
 
-#if 0
-  {
-    char*   actionString = ToNewCString(aEventName);
-    printf(""""Doing UpdateCommands(\""""%s\"""")\n"""", actionString);
-    free(actionString);    
-  }
-#endif
-  
   for (Updater* updater = mUpdaters; updater != nsnull; updater = updater->mNext) {
     // Skip any nodes that don't match our 'events' or 'targets'
     // filters.
@@ -395,7 +387,7 @@ nsXULCommandDispatcher::UpdateCommands(const nsAString& aEventName)
       CopyUTF16toUTF8(aEventName, aeventnameC);
       PR_LOG(gLog, PR_LOG_NOTICE,
              (""""xulcmd[%p] update %p event=%s"""",
-              this, updater->mElement,
+              this, updater->mElement.get(),
               aeventnameC.get()));
     }
 #endif
@@ -449,36 +441,36 @@ nsXULCommandDispatcher::Matches(const nsString& aList,
 NS_IMETHODIMP
 nsXULCommandDispatcher::GetControllers(nsIControllers** aResult)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
-  return mFocusController->GetControllers(aResult);
+  return fc->GetControllers(aResult);
 }
 
 NS_IMETHODIMP
 nsXULCommandDispatcher::GetControllerForCommand(const char *aCommand, nsIController** _retval)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
-  return mFocusController->GetControllerForCommand(aCommand, _retval);
+  return fc->GetControllerForCommand(aCommand, _retval);
 }
 
 NS_IMETHODIMP
 nsXULCommandDispatcher::GetSuppressFocusScroll(PRBool* aSuppressFocusScroll)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
-  return mFocusController->GetSuppressFocusScroll(aSuppressFocusScroll);
+  return fc->GetSuppressFocusScroll(aSuppressFocusScroll);
 }
 
 NS_IMETHODIMP
 nsXULCommandDispatcher::SetSuppressFocusScroll(PRBool aSuppressFocusScroll)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
-  return mFocusController->SetSuppressFocusScroll(aSuppressFocusScroll);
+  return fc->SetSuppressFocusScroll(aSuppressFocusScroll);
 }
 
diff --git a/content/xul/document/src/nsXULCommandDispatcher.h b/content/xul/document/src/nsXULCommandDispatcher.h
index 8aee342..0cd9f8b 100644
--- a/content/xul/document/src/nsXULCommandDispatcher.h
+++ b/content/xul/document/src/nsXULCommandDispatcher.h
@@ -52,6 +52,7 @@
 #include """"nsWeakReference.h""""
 #include """"nsIDOMNode.h""""
 #include """"nsString.h""""
+#include """"nsCycleCollectionParticipant.h""""
 
 class nsIDOMElement;
 class nsIFocusController;
@@ -59,26 +60,23 @@ class nsIFocusController;
 class nsXULCommandDispatcher : public nsIDOMXULCommandDispatcher,
                                public nsSupportsWeakReference
 {
-protected:
+public:
     nsXULCommandDispatcher(nsIDocument* aDocument);
     virtual ~nsXULCommandDispatcher();
 
-    void EnsureFocusController();
-
-public:
-
-    static NS_IMETHODIMP
-    Create(nsIDocument* aDocument, nsIDOMXULCommandDispatcher** aResult);
-
     // nsISupports
-    NS_DECL_ISUPPORTS
+    NS_DECL_CYCLE_COLLECTING_ISUPPORTS
+    NS_DECL_CYCLE_COLLECTION_CLASS_AMBIGUOUS(nsXULCommandDispatcher,
+                                             nsIDOMXULCommandDispatcher)
 
     // nsIDOMXULCommandDispatcher interface
     NS_DECL_NSIDOMXULCOMMANDDISPATCHER
 
+    void Disconnect();
 protected:
-    nsIFocusController* mFocusController; // Weak. We always die before the focus controller does.
-    nsIDocument* mDocument; // Weak.
+    nsIFocusController* GetFocusController();
+
+    nsCOMPtr<nsIDocument> mDocument;
 
     class Updater {
     public:
@@ -91,10 +89,10 @@ protected:
             mNext(nsnull)
       {}
 
-      nsIDOMElement* mElement; // [WEAK]
-      nsString       mEvents;
-      nsString       mTargets;
-      Updater*       mNext;
+      nsCOMPtr<nsIDOMElement> mElement;
+      nsString                mEvents;
+      nsString                mTargets;
+      Updater*                mNext;
     };
 
     Updater* mUpdaters;
diff --git a/content/xul/document/src/nsXULDocument.cpp b/content/xul/document/src/nsXULDocument.cpp
index 9f4baed..bd77222 100644
--- a/content/xul/document/src/nsXULDocument.cpp
+++ b/content/xul/document/src/nsXULDocument.cpp
@@ -342,6 +342,9 @@ NS_IMPL_CYCLE_COLLECTION_TRAVERSE_BEGIN_INHERITED(nsXULDocument, nsXMLDocument)
                                                      nsIScriptGlobalObjectOwner)
     NS_IMPL_CYCLE_COLLECTION_TRAVERSE_NSCOMPTR_AMBIGUOUS(mMasterPrototype,
                                                      nsIScriptGlobalObjectOwner)
+    NS_IMPL_CYCLE_COLLECTION_TRAVERSE_NSCOMPTR_AMBIGUOUS(mCommandDispatcher,
+                                                     nsIDOMXULCommandDispatcher)
+
     PRUint32 i, count = tmp->mPrototypes.Length();
     for (i = 0; i < count; ++i) {
         cb.NoteXPCOMChild(NS_STATIC_CAST(nsIScriptGlobalObjectOwner*, 
@@ -1928,10 +1931,8 @@ nsXULDocument::Init()
     NS_ENSURE_SUCCESS(rv, rv);
 
     // Create our command dispatcher and hook it up.
-    rv = nsXULCommandDispatcher::Create(this,
-                                        getter_AddRefs(mCommandDispatcher));
-    NS_ASSERTION(NS_SUCCEEDED(rv), """"unable to create a focus tracker"""");
-    if (NS_FAILED(rv)) return rv;
+    mCommandDispatcher = new nsXULCommandDispatcher(this);
+    NS_ENSURE_TRUE(mCommandDispatcher, NS_ERROR_OUT_OF_MEMORY);
 
     // this _could_ fail; e.g., if we've tried to grab the local store
     // before profiles have initialized. If so, no big deal; nothing"""
6d69bf35570550dc70fc9d7261256f308f8f56c1,75393,369150,Olli.Pettay@helsinki.fi,"Bug 369150, r+sr=roc
",1174607875,"""diff --git a/layout/generic/nsFrameSetFrame.cpp b/layout/generic/nsFrameSetFrame.cpp
index 0e73a2a..01ce6f7 100644
--- a/layout/generic/nsFrameSetFrame.cpp
+++ b/layout/generic/nsFrameSetFrame.cpp
@@ -1009,13 +1009,19 @@ nsHTMLFramesetFrame::Reflow(nsPresContext*          aPresContext,
   height -= (mNumRows - 1) * borderWidth;
   if (height < 0) height = 0;
 
+  nsCOMPtr<nsIFrameSetElement> ourContent(do_QueryInterface(mContent));
+  NS_ASSERTION(ourContent, """"Someone gave us a broken frameset element!"""");
+  const nsFramesetSpec* rowSpecs = nsnull;
+  const nsFramesetSpec* colSpecs = nsnull;
+  PRInt32 rows = 0;
+  PRInt32 cols = 0;
+  ourContent->GetRowSpec(&rows, &rowSpecs);
+  ourContent->GetColSpec(&cols, &colSpecs);
+  // If the number of cols or rows has changed, the frame for the frameset
+  // will be re-created.
+  NS_ENSURE_STATE(mNumRows == rows && mNumCols == cols);
+
   if (!mDrag.mActive) {
-    nsCOMPtr<nsIFrameSetElement> ourContent(do_QueryInterface(mContent));
-    NS_ASSERTION(ourContent, """"Someone gave us a broken frameset element!"""");
-    const nsFramesetSpec* rowSpecs = nsnull;
-    const nsFramesetSpec* colSpecs = nsnull;
-    ourContent->GetRowSpec(&mNumRows, &rowSpecs);
-    ourContent->GetColSpec(&mNumCols, &colSpecs);
     CalculateRowCol(aPresContext, width, mNumCols, colSpecs, mColSizes);
     CalculateRowCol(aPresContext, height, mNumRows, rowSpecs, mRowSizes);
   }"""
b8b33c5b22c821bb68fabb4e09001b1a0c8de04f,77640,379959,bent.mozilla%gmail.com,"Bug 379959. Patch by Jonas Sicking <jonas@sicking.cc>. r+sr=bz, a=damons.
",1209426973,"""diff --git a/build/pgo/automation.py.in b/build/pgo/automation.py.in
index 09cc15a..c48564a 100644
--- a/build/pgo/automation.py.in
+++ b/build/pgo/automation.py.in
@@ -240,6 +240,7 @@ user_pref(""""browser.shell.checkDefaultBrowser"""", false);
 user_pref(""""browser.warnOnQuit"""", false);
 user_pref(""""accessibility.typeaheadfind.autostart"""", false);
 user_pref(""""javascript.options.showInConsole"""", true);
+user_pref(""""layout.debug.enable_data_xbl"""", true);
 """"""""""""
   prefs.append(part)
 
diff --git a/content/base/public/nsContentUtils.h b/content/base/public/nsContentUtils.h
index 7d9df7b..b1898a2 100644
--- a/content/base/public/nsContentUtils.h
+++ b/content/base/public/nsContentUtils.h
@@ -546,6 +546,7 @@ public:
   static void UnregisterPrefCallback(const char *aPref,
                                      PrefChangedFunc aCallback,
                                      void * aClosure);
+  static void AddBoolPrefVarCache(const char* aPref, PRBool* aVariable);
   static nsIPrefBranch *GetPrefBranch()
   {
     return sPrefBranch;
diff --git a/content/base/src/nsContentUtils.cpp b/content/base/src/nsContentUtils.cpp
index e81c2ca..c249569 100644
--- a/content/base/src/nsContentUtils.cpp
+++ b/content/base/src/nsContentUtils.cpp
@@ -2500,6 +2500,22 @@ nsContentUtils::UnregisterPrefCallback(const char *aPref,
     sPref->UnregisterCallback(aPref, aCallback, aClosure);
 }
 
+static int PR_CALLBACK
+BoolVarChanged(const char *aPref, void *aClosure)
+{
+  PRBool* cache = static_cast<PRBool*>(aClosure);
+  *cache = nsContentUtils::GetBoolPref(aPref, PR_FALSE);
+  
+  return 0;
+}
+
+void
+nsContentUtils::AddBoolPrefVarCache(const char *aPref,
+                                    PRBool* aCache)
+{
+  *aCache = GetBoolPref(aPref, PR_FALSE);
+  RegisterPrefCallback(aPref, BoolVarChanged, aCache);
+}
 
 static const char *gEventNames[] = {""""event""""};
 static const char *gSVGEventNames[] = {""""evt""""};
@@ -3844,6 +3860,13 @@ nsContentUtils::CheckSecurityBeforeLoad(nsIURI* aURIToLoad,
                                         nsISupports* aExtra)
 {
   NS_PRECONDITION(aLoadingPrincipal, """"Must have a loading principal here"""");
+
+  PRBool isSystemPrin = PR_FALSE;
+  if (NS_SUCCEEDED(sSecurityManager->IsSystemPrincipal(aLoadingPrincipal,
+                                                       &isSystemPrin)) &&
+      isSystemPrin) {
+    return NS_OK;
+  }
   
   // XXXbz do we want to fast-path skin stylesheets loading XBL here somehow?
   // CheckLoadURIWithPrincipal
diff --git a/content/xbl/src/nsXBLService.cpp b/content/xbl/src/nsXBLService.cpp
index 5d8a500..6a86315 100644
--- a/content/xbl/src/nsXBLService.cpp
+++ b/content/xbl/src/nsXBLService.cpp
@@ -427,7 +427,8 @@ nsXBLStreamListener::Load(nsIDOMEvent* aEvent)
 
 // Static member variable initialization
 PRUint32 nsXBLService::gRefCnt = 0;
- 
+PRBool nsXBLService::gAllowDataURIs = PR_FALSE;
+
 nsHashtable* nsXBLService::gClassTable = nsnull;
 
 JSCList  nsXBLService::gClassLRUList = JS_INIT_STATIC_CLIST(&nsXBLService::gClassLRUList);
@@ -446,6 +447,9 @@ nsXBLService::nsXBLService(void)
   if (gRefCnt == 1) {
     gClassTable = new nsHashtable();
   }
+  
+  nsContentUtils::AddBoolPrefVarCache(""""layout.debug.enable_data_xbl"""",
+                                      &gAllowDataURIs);
 }
 
 nsXBLService::~nsXBLService(void)
@@ -958,7 +962,7 @@ nsXBLService::LoadBindingDocumentInfo(nsIContent* aBoundElement,
     rv = nsContentUtils::
       CheckSecurityBeforeLoad(aBindingURI, aOriginPrincipal,
                               nsIScriptSecurityManager::ALLOW_CHROME,
-                              PR_TRUE,
+                              gAllowDataURIs,
                               nsIContentPolicy::TYPE_XBL,
                               aBoundDocument);
     NS_ENSURE_SUCCESS(rv, rv);
diff --git a/content/xbl/src/nsXBLService.h b/content/xbl/src/nsXBLService.h
index d8c506b..b6bb9a2 100644
--- a/content/xbl/src/nsXBLService.h
+++ b/content/xbl/src/nsXBLService.h
@@ -150,6 +150,9 @@ public:
   static JSCList  gClassLRUList;             // LRU list of cached classes.
   static PRUint32 gClassLRUListLength;       // Number of classes on LRU list.
   static PRUint32 gClassLRUListQuota;        // Quota on class LRU list.
+  static PRBool   gAllowDataURIs;            // Whether we should allow data
+                                             // urls in -moz-binding. Needed for
+                                             // testing.
 
   nsFixedSizeAllocator mPool;
 };
diff --git a/content/xbl/test/Makefile.in b/content/xbl/test/Makefile.in
index 9deb767..28037a7 100644
--- a/content/xbl/test/Makefile.in
+++ b/content/xbl/test/Makefile.in
@@ -49,6 +49,7 @@ include $(topsrcdir)/config/rules.mk
 _TEST_FILES =	\
 		test_bug296375.xul \
 		test_bug310107.html \
+		bug310107-resource.xhtml \
 		test_bug366770.html \
 		test_bug371724.xhtml \
 		test_bug372769.xhtml \
@@ -60,7 +61,10 @@ _TEST_FILES =	\
 		test_bug400705.xhtml \
 		test_bug401907.xhtml \
 		test_bug403162.xhtml \
-		bug310107-resource.xhtml \
+		test_bug379959.html \
+		file_bug379959_data.html \
+		file_bug379959_cross.html \
+		file_bug379959_xbl.xml \
 		$(NULL)
 
 libs:: $(_TEST_FILES)
diff --git a/content/xbl/test/file_bug379959_cross.html b/content/xbl/test/file_bug379959_cross.html
new file mode 100644
index 0000000..21e1149
--- /dev/null
+++ b/content/xbl/test/file_bug379959_cross.html
@@ -0,0 +1,25 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+<style>
+#div1 {
+  color: green;
+  -moz-binding: url(file_bug379959_xbl.xml#xbltest);
+}
+#div2 {
+  color: green;
+  -moz-binding: url(http://example.com/tests/content/xbl/test/file_bug379959_xbl.xml#xbltest);
+}
+</style>
+<body>
+<div id=""""div1""""></div>
+<div id=""""div2""""></div>
+<script>
+onload = function() {
+  nodes = document.getAnonymousNodes(document.getElementById('div1'));
+  parent.postMessage(nodes ? nodes.length : 0);
+  nodes = document.getAnonymousNodes(document.getElementById('div2'));
+  parent.postMessage(nodes ? nodes.length : 0);
+}
+</script>
+</html>
diff --git a/content/xbl/test/file_bug379959_data.html b/content/xbl/test/file_bug379959_data.html
new file mode 100644
index 0000000..ae9d943
--- /dev/null
+++ b/content/xbl/test/file_bug379959_data.html
@@ -0,0 +1,18 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+<style>
+#d {
+  color: green;
+  -moz-binding: url(data:text/xml;charset=utf-8,%3C%3Fxml%20version%3D%221.0%22%3F%3E%0A%3Cbindings%20id%3D%22xbltestBindings%22%20xmlns%3D%22http%3A//www.mozilla.org/xbl%22%3E%0A%20%20%3Cbinding%20id%3D%22xbltest%22%3E%3Ccontent%3EPASS%3C/content%3E%3C/binding%3E%0A%3C/bindings%3E%0A);
+}
+</style>
+<body>
+<div id=""""d""""></div>
+<script>
+onload = function() {
+  nodes = document.getAnonymousNodes(document.getElementById('d'));
+  parent.postMessage(nodes ? nodes.length : 0);
+}
+</script>
+</html>
diff --git a/content/xbl/test/file_bug379959_xbl.xml b/content/xbl/test/file_bug379959_xbl.xml
new file mode 100644
index 0000000..c791a2e
--- /dev/null
+++ b/content/xbl/test/file_bug379959_xbl.xml
@@ -0,0 +1,4 @@
+<?xml version=""""1.0""""?>
+<bindings id=""""xbltestBindings"""" xmlns=""""http://www.mozilla.org/xbl"""">
+  <binding id=""""xbltest""""><content>PASS</content></binding>
+</bindings>
diff --git a/content/xbl/test/test_bug379959.html b/content/xbl/test/test_bug379959.html
new file mode 100644
index 0000000..fdda4f2
--- /dev/null
+++ b/content/xbl/test/test_bug379959.html
@@ -0,0 +1,82 @@
+<!DOCTYPE HTML>
+<html>
+<!--
+https://bugzilla.mozilla.org/show_bug.cgi?id=366770
+-->
+<head>
+  <title>Test for Bug 366770</title>
+  <script type=""""text/javascript"""" src=""""/MochiKit/MochiKit.js""""></script>
+  <script type=""""text/javascript"""" src=""""/tests/SimpleTest/SimpleTest.js""""></script>
+  <link rel=""""stylesheet"""" type=""""text/css"""" href=""""/tests/SimpleTest/test.css"""" />
+</head>
+<body onload=""""gen.next();"""">
+  <a target=""""_blank"""" href=""""https://bugzilla.mozilla.org/show_bug.cgi?id=366770"""">Mozilla Bug 366770</a>
+  <p id=""""display"""">
+    Note: In order to re-run this test correctly you need to shift-reload
+    rather than simply reload. If you just reload we will restore the
+    previous url in the iframe which will result in an extra unexpected
+    message.
+  </p>
+  <div id=""""content"""" style=""""display: none""""></div>
+  <iframe id=""""f""""></iframe>
+
+  <pre id=""""test"""">
+    <script class=""""testbody"""" type=""""application/javascript;version=1.7"""">
+SimpleTest.waitForExplicitFinish();
+
+gen = runTest();
+var messages = 0;
+
+document.addEventListener(""""message"""",
+                          function(e) { messages++; gen.send(e.data); },
+                          false);
+
+const prefName = """"layout.debug.enable_data_xbl"""";
+
+function runTest() {
+  iframe = document.getElementById('f');
+
+  // Turn on loads of data-urls
+  netscape.security.PrivilegeManager.enablePrivilege(""""UniversalXPConnect"""");
+  var prefs = Components.classes[""""@mozilla.org/preferences-service;1""""]
+    .getService(Components.interfaces.nsIPrefBranch);
+  var oldPrefVal = undefined;
+  if (prefs.prefHasUserValue(prefName)) {
+    oldPrefVal = prefs.getBoolPref(prefName);
+  }
+
+  // Test with data-urls off
+  prefs.setBoolPref(prefName, false);
+  iframe.src = """"file_bug379959_data.html"""";
+  is((yield), 0, """"data-url load should have failed"""");
+
+  // Test with data-urls on
+  prefs.setBoolPref(prefName, true);
+  iframe.src = """"file_bug379959_data.html"""";
+  is((yield), 1, """"data-url load should have been successful"""");
+
+  // Try a cross-site load
+  iframe.src = """"file_bug379959_cross.html"""";
+  is((yield), 1, """"same site load should have succeeded"""");
+  is((yield), 0, """"cross site load should have failed"""");
+
+  // Check that we got the right number of messages to make sure that
+  // the right message has aligned with the right test
+  is(messages, 4, """"wrong number of messages"""");
+
+  // We're done
+  if (oldPrefVal === undefined) {
+    prefs.clearUserPref(prefName);
+  }
+  else {
+    prefs.setBoolPref(prefName, oldPrefVal);
+  }
+
+  SimpleTest.finish();
+
+  yield;
+}
+    </script>
+  </pre>
+</body>
+</html>
diff --git a/testing/mochitest/runtests.pl.in b/testing/mochitest/runtests.pl.in
index cd20d64..0d956bc 100644
--- a/testing/mochitest/runtests.pl.in
+++ b/testing/mochitest/runtests.pl.in
@@ -438,6 +438,7 @@ user_pref(""""browser.shell.checkDefaultBrowser"""", false);
 user_pref(""""browser.warnOnQuit"""", false);
 user_pref(""""accessibility.typeaheadfind.autostart"""", false);
 user_pref(""""javascript.options.showInConsole"""", true);
+user_pref(""""layout.debug.enable_data_xbl"""", true);
 PREFEND
 
   # Grant God-power to all the servers on which tests can run.
diff --git a/testing/tools/profiles/createTestingProfile.py b/testing/tools/profiles/createTestingProfile.py
index 4c10002..6cdc32ff 100644
--- a/testing/tools/profiles/createTestingProfile.py
+++ b/testing/tools/profiles/createTestingProfile.py
@@ -23,7 +23,8 @@ userPrefs = {
     'dom.disable_window_move_resize': 'false',
     'layout.fire_onload_after_image_background_loads': 'true',
     'javascript.options.showInConsole': 'true',
-    'privacy.popups.firstTime': 'false'
+    'privacy.popups.firstTime': 'false',
+    'layout.debug.enable_data_xbl': 'true'
 }
 
 def usage():"""
d5c362c3d4804a2ef1b0c2c3fa89a8ea5cdf6530,77778,379959,jonas%sicking.cc,"Change reftest and crashtest in preparation for bug 379959 to not use data-urls for -moz-binding. r=dholbert. Test changes only.
",1209012094,"""diff --git a/content/xul/content/crashtests/360078-1.xhtml b/content/xul/content/crashtests/360078-1.xhtml
index 69bed72..a290870 100644
--- a/content/xul/content/crashtests/360078-1.xhtml
+++ b/content/xul/content/crashtests/360078-1.xhtml
@@ -3,7 +3,7 @@
 
 <style>
 <![CDATA[
-#baz { -moz-binding: url('data:text/xml,%3Cbindings%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%3E%3Cbinding%20id%3D%22foo%22%3E%3Ccontent%3E%0D%0A%3Ca%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20href%3D%22http%3A%2F%2Fwww.mozilla.org%2F%22%20id%3D%22mlink%22%3EFoo%3Cchildren%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%2F%3E%3C%2Fa%3E%0D%0A%3C%2Fcontent%3E%3C%2Fbinding%3E%3C%2Fbindings%3E%0D%0A'); }
+#baz { -moz-binding: url(360078-1xbl.xml#foo); }
 ]]>
 </style>
 
diff --git a/content/xul/content/crashtests/360078-1xbl.xml b/content/xul/content/crashtests/360078-1xbl.xml
new file mode 100644
index 0000000..c0f428c
--- /dev/null
+++ b/content/xul/content/crashtests/360078-1xbl.xml
@@ -0,0 +1,3 @@
+<bindings xmlns=""""http://www.mozilla.org/xbl""""><binding id=""""foo""""><content>
+<a xmlns=""""http://www.w3.org/1999/xhtml"""" href=""""http://www.mozilla.org/"""" id=""""mlink"""">Foo<children xmlns=""""http://www.mozilla.org/xbl""""/></a>
+</content></binding></bindings>
diff --git a/layout/reftests/bugs/372323-1.xhtml b/layout/reftests/bugs/372323-1.xhtml
index 3fc02a0..f43d520 100644
--- a/layout/reftests/bugs/372323-1.xhtml
+++ b/layout/reftests/bugs/372323-1.xhtml
@@ -5,20 +5,8 @@
     </style>
   </head>
   <body onload=""""runTest()"""">
-    <!-- The data: URIs are this binding
-<bindings xmlns=""""http://www.mozilla.org/xbl"""">
-  <binding id=""""test"""">
-    <content>
-      <children includes=""""span""""/>
-      <html:div xmlns:html=""""http://www.w3.org/1999/xhtml"""" style=""""color: red"""">
-        <children/>
-      </html:div>
-    </content>
-  </binding>
-</bindings>
-    -->
-    <div id=""""test1"""" style=""""-moz-binding: url(data:text/xml,%3Cbindings%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%3E%0D%0A%20%20%3Cbinding%20id%3D%22test%22%3E%0D%0A%20%20%20%20%3Ccontent%3E%0D%0A%20%20%20%20%20%20%3Cchildren%20includes%3D%22span%22%2F%3E%0D%0A%20%20%20%20%20%20%3Chtml%3Adiv%20xmlns%3Ahtml%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22color%3A%20red%22%3E%0D%0A%20%20%20%20%20%20%20%20%3Cchildren%2F%3E%0D%0A%20%20%20%20%20%20%3C%2Fhtml%3Adiv%3E%0D%0A%20%20%20%20%3C%2Fcontent%3E%0D%0A%20%20%3C%2Fbinding%3E%0D%0A%3C%2Fbindings%3E%0D%0A);""""/>
-    <div id=""""test2"""" style=""""-moz-binding: url(data:text/xml,%3Cbindings%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%3E%0D%0A%20%20%3Cbinding%20id%3D%22test%22%3E%0D%0A%20%20%20%20%3Ccontent%3E%0D%0A%20%20%20%20%20%20%3Cchildren%20includes%3D%22span%22%2F%3E%0D%0A%20%20%20%20%20%20%3Chtml%3Adiv%20xmlns%3Ahtml%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22color%3A%20red%22%3E%0D%0A%20%20%20%20%20%20%20%20%3Cchildren%2F%3E%0D%0A%20%20%20%20%20%20%3C%2Fhtml%3Adiv%3E%0D%0A%20%20%20%20%3C%2Fcontent%3E%0D%0A%20%20%3C%2Fbinding%3E%0D%0A%3C%2Fbindings%3E%0D%0A);"""">
+    <div id=""""test1"""" style=""""-moz-binding: url(372323-1xbl.xml#test);""""/>
+    <div id=""""test2"""" style=""""-moz-binding: url(372323-1xbl.xml#test);"""">
       <!-- Make the script load, so the binding loads first -->
       <script src=""""data:text/javascript,document.body.offsetWidth;""""/>
       <!-- The whitespace here is important... or this comment will do
diff --git a/layout/reftests/bugs/372323-1xbl.xml b/layout/reftests/bugs/372323-1xbl.xml
new file mode 100644
index 0000000..e72d031
--- /dev/null
+++ b/layout/reftests/bugs/372323-1xbl.xml
@@ -0,0 +1,11 @@
+<bindings xmlns=""""http://www.mozilla.org/xbl"""">
+  <binding id=""""test"""">
+    <content>
+      <children includes=""""span""""/>
+      <html:div xmlns:html=""""http://www.w3.org/1999/xhtml"""" style=""""color: red"""">
+        <children/>
+      </html:div>
+    </content>
+  </binding>
+
+</bindings>
diff --git a/layout/reftests/bugs/374193-1.xhtml b/layout/reftests/bugs/374193-1.xhtml
index 3c000fe..b567f97 100644
--- a/layout/reftests/bugs/374193-1.xhtml
+++ b/layout/reftests/bugs/374193-1.xhtml
@@ -2,6 +2,6 @@
   ><mtd xmlns=""""http://www.w3.org/1998/Math/MathML""""
   ><th xmlns=""""http://www.w3.org/1999/xhtml""""
   /><mtable xmlns=""""http://www.w3.org/1998/Math/MathML""""
-  ><th xmlns=""""http://www.w3.org/1999/xhtml"""" style=""""-moz-binding: url(data:text/xml;charset=utf-8,%3Cbindings%20xmlns%3D%22http%3A//www.mozilla.org/xbl%22%3E%0A%3Cbinding%20id%3D%22a%22%3E%0A%3Cimplementation%3E%0A%3Cconstructor%3E%0A%20%20this.style.position%3D%27fixed%27%3B%0A%3C/constructor%3E%0A%3C/implementation%3E%0A%3Ccontent%3E%3Cchildren/%3E%3C/content%3E%0A%3C/binding%3E%0A%3C/bindings%3E);"""" id=""""mw_th20""""></th></mtable></mtd><style>
+  ><th xmlns=""""http://www.w3.org/1999/xhtml"""" style=""""-moz-binding: url(374193-1xbl.xml);"""" id=""""mw_th20""""></th></mtable></mtd><style>
 mtable::after { content:""""anonymous text""""; }
 </style></html>
diff --git a/layout/reftests/bugs/374193-1xbl.xml b/layout/reftests/bugs/374193-1xbl.xml
new file mode 100644
index 0000000..c1d2883
--- /dev/null
+++ b/layout/reftests/bugs/374193-1xbl.xml
@@ -0,0 +1,10 @@
+<bindings xmlns=""""http://www.mozilla.org/xbl"""">
+<binding id=""""a"""">
+<implementation>
+<constructor>
+  this.style.position='fixed';
+</constructor>
+</implementation>
+<content><children/></content>
+</binding>
+</bindings>
diff --git a/layout/reftests/bugs/396286-1.html b/layout/reftests/bugs/396286-1.html
index 2a5a7a1..0af9132 100644
--- a/layout/reftests/bugs/396286-1.html
+++ b/layout/reftests/bugs/396286-1.html
@@ -2,10 +2,10 @@
 <style id=""""script"""">#a::first-line {}</style>
 </head>
 <body>
-<span id=""""a"""" style=""""-moz-binding: url(data:text/xml;charset=utf-8,%3Cbindings%20xmlns%3D%22http%3A//www.mozilla.org/xbl%22%3E%0A%3Cbinding%20id%3D%22a%22%3E%0A%3Cimplementation%3E%0A%3Cconstructor%3E%0A%20%20this.style.position%3D%27fixed%27%3B%0A%3C/constructor%3E%0A%3C/implementation%3E%0A%3Ccontent%3E%0A%3Cchildren/%3E%0A%3C/content%3E%0A%3C/binding%3E%0A%3C/bindings%3E);"""">
+<span id=""""a"""" style=""""-moz-binding: url(396286-1xbl.xml#a);"""">
   <br>
-  <span style=""""-moz-binding: url(data:text/xml;charset=utf-8,%3Cbindings%20xmlns%3D%22http%3A//www.mozilla.org/xbl%22%3E%0A%3Cbinding%20id%3D%22a%22%3E%0A%3Ccontent%3E%0A%3Cchildren/%3E%0A%3C/content%3E%0A%3C/binding%3E%0A%3C/bindings%3E);"""">
-    <span style=""""position: absolute;-moz-binding: url(data:text/xml;charset=utf-8,%3Cbindings%20xmlns%3D%22http%3A//www.mozilla.org/xbl%22%3E%0A%3Cbinding%20id%3D%22a%22%3E%0A%3Cimplementation%3E%0A%3Cconstructor%3E%0A%20%20this.style.position%3D%27fixed%27%3B%0A%3C/constructor%3E%0A%3C/implementation%3E%0A%3Ccontent%3E%0A%3Cchildren/%3E%0A%3C/content%3E%0A%3C/binding%3E%0A%3C/bindings%3E);""""></span>
+  <span style=""""-moz-binding: url(396286-1xbl.xml#b);"""">
+    <span style=""""position: absolute;-moz-binding: url(396286-1xbl.xml#a);""""></span>
   </span>
 </span>
 </body>
diff --git a/layout/reftests/bugs/396286-1xbl.xml b/layout/reftests/bugs/396286-1xbl.xml
new file mode 100644
index 0000000..d1421d2
--- /dev/null
+++ b/layout/reftests/bugs/396286-1xbl.xml
@@ -0,0 +1,20 @@
+<bindings xmlns=""""http://www.mozilla.org/xbl"""">
+
+<binding id=""""a"""">
+<implementation>
+<constructor>
+  this.style.position='fixed';
+</constructor>
+</implementation>
+<content>
+<children/>
+</content>
+</binding>
+
+<binding id=""""b"""">
+<content>
+<children/>
+</content>
+</binding>
+
+</bindings>
diff --git a/layout/reftests/bugs/403962-1.xhtml b/layout/reftests/bugs/403962-1.xhtml
index 16f9bdb..6f135ca 100644
--- a/layout/reftests/bugs/403962-1.xhtml
+++ b/layout/reftests/bugs/403962-1.xhtml
@@ -1,39 +1,10 @@
 <html xmlns=""""http://www.w3.org/1999/xhtml"""" class=""""reftest-wait"""">
   <head>
-    <!--
-      The binding attached to #test1 and #test2 is:
-
-<bindings xmlns=""""http://www.mozilla.org/xbl"""">
-  <binding id=""""test"""">
-    <content>
-      <html:div xmlns:html=""""http://www.w3.org/1999/xhtml""""
-                style=""""color: red; -moz-binding: url(data:text/xml,%3Cbindings%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%3E%0D%0A%20%20%3Cbinding%20id%3D%22test-base%22%3E%0D%0A%20%20%20%20%3Ccontent%3E%0D%0A%20%20%20%20%20%20%3Chtml%3Adiv%20xmlns%3Ahtml%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22color%3A%20green%22%3E%0D%0A%20%20%20%20%20%20%20%20%3Cchildren%20includes%3D%22span%22%2F%3E%0D%0A%20%20%20%20%20%20%3C%2Fhtml%3Adiv%3E%0D%0A%20%20%20%20%20%20%3Chtml%3Adiv%20xmlns%3Ahtml%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22color%3A%20red%22%3E%0D%0A%20%20%20%20%20%20%20%20%3Cchildren%2F%3E%0D%0A%20%20%20%20%20%20%3C%2Fhtml%3Adiv%3E%0D%0A%20%20%20%20%3C%2Fcontent%3E%0D%0A%20%20%3C%2Fbinding%3E%0D%0A%3C%2Fbindings%3E%0D%0A)"""">
-        <children/>
-      </html:div>
-    </content>
-  </binding>
-</bindings>
-
-    where the binding attached to the content div is:
-      
-<bindings xmlns=""""http://www.mozilla.org/xbl"""">
-  <binding id=""""test-base"""">
-    <content>
-      <html:div xmlns:html=""""http://www.w3.org/1999/xhtml"""" style=""""color: green"""">
-        <children includes=""""span""""/>
-      </html:div>
-      <html:div xmlns:html=""""http://www.w3.org/1999/xhtml"""" style=""""color: red"""">
-        <children/>
-      </html:div>
-    </content>
-  </binding>
-</bindings>
--->
     <style>
       div { color: green; }
 
       #test1, #test2 {
-        -moz-binding: url(""""data:text/xml,%3Cbindings%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%3E%0D%0A%20%20%3Cbinding%20id%3D%22test%22%3E%0D%0A%20%20%20%20%3Ccontent%3E%0D%0A%20%20%20%20%20%20%3Chtml%3Adiv%20xmlns%3Ahtml%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20style%3D%22color%3A%20red%3B%20-moz-binding%3A%20url(data%3Atext%2Fxml%2C%253Cbindings%2520xmlns%253D%2522http%253A%252F%252Fwww.mozilla.org%252Fxbl%2522%253E%250D%250A%2520%2520%253Cbinding%2520id%253D%2522test-base%2522%253E%250D%250A%2520%2520%2520%2520%253Ccontent%253E%250D%250A%2520%2520%2520%2520%2520%2520%253Chtml%253Adiv%2520xmlns%253Ahtml%253D%2522http%253A%252F%252Fwww.w3.org%252F1999%252Fxhtml%2522%2520style%253D%2522color%253A%2520green%2522%253E%250D%250A%2520%2520%2520%2520%2520%2520%2520%2520%253Cchildren%2520includes%253D%2522span%2522%252F%253E%250D%250A%2520%2520%2520%2520%2520%2520%253C%252Fhtml%253Adiv%253E%250D%250A%2520%2520%2520%2520%2520%2520%253Chtml%253Adiv%2520xmlns%253Ahtml%253D%2522http%253A%252F%252Fwww.w3.org%252F1999%252Fxhtml%2522%2520style%253D%2522color%253A%2520red%2522%253E%250D%250A%2520%2520%2520%2520%2520%2520%2520%2520%253Cchildren%252F%253E%250D%250A%2520%2520%2520%2520%2520%2520%253C%252Fhtml%253Adiv%253E%250D%250A%2520%2520%2520%2520%253C%252Fcontent%253E%250D%250A%2520%2520%253C%252Fbinding%253E%250D%250A%253C%252Fbindings%253E%250D%250A)%22%3E%0D%0A%20%20%20%20%20%20%20%20%3Cchildren%2F%3E%0D%0A%20%20%20%20%20%20%3C%2Fhtml%3Adiv%3E%0D%0A%20%20%20%20%3C%2Fcontent%3E%0D%0A%20%20%3C%2Fbinding%3E%0D%0A%3C%2Fbindings%3E%0D%0A"""");
+        -moz-binding: url(403962-1xbl.xml#test);
       }
     </style>
   </head>
diff --git a/layout/reftests/bugs/403962-1xbl.xml b/layout/reftests/bugs/403962-1xbl.xml
new file mode 100644
index 0000000..5f26345
--- /dev/null
+++ b/layout/reftests/bugs/403962-1xbl.xml
@@ -0,0 +1,22 @@
+<bindings xmlns=""""http://www.mozilla.org/xbl"""">
+  <binding id=""""test"""">
+    <content>
+      <html:div xmlns:html=""""http://www.w3.org/1999/xhtml""""
+                style=""""color: red; -moz-binding: url(403962-1xbl.xml#test-base)"""">
+        <children/>
+      </html:div>
+    </content>
+  </binding>
+
+  <binding id=""""test-base"""">
+    <content>
+      <html:div xmlns:html=""""http://www.w3.org/1999/xhtml"""" style=""""color: green"""">
+        <children includes=""""span""""/>
+      </html:div>
+      <html:div xmlns:html=""""http://www.w3.org/1999/xhtml"""" style=""""color: red"""">
+        <children/>
+      </html:div>
+
+    </content>
+  </binding>
+</bindings>"""
a9c7f9ed48ae565e90b15a1697c7359b76546644,79616,338001,bclary%bclary.com,"JavaScript Tests - update test for bug 338001 to handle various memory pressure scenarios
",1206731685,"""diff --git a/js/tests/js1_5/Function/regress-338001.js b/js/tests/js1_5/Function/regress-338001.js
index 58f4189..7952b0e 100755
--- a/js/tests/js1_5/Function/regress-338001.js
+++ b/js/tests/js1_5/Function/regress-338001.js
@@ -40,7 +40,7 @@ var gTestfile = 'regress-338001.js';
 var BUGNUMBER = 338001;
 var summary = 'integer overflow in jsfun.c:Function';
 var actual = 'No Crash';
-var expect = 'No Crash';
+var expect = /No Crash|InternalError: allocation size overflow|InternalError: script stack space quota is exhausted/;
 
 printBugNumber(BUGNUMBER);
 printStatus (summary);
@@ -66,10 +66,9 @@ try
 catch(ex)
 {
   // handle changed 1.9 branch behavior. see bug 422348
-  expect = 'InternalError: allocation size overflow';
   actual = ex + '';
 }
  
-print('Done');
+print('Done: ' + actual);
 
-reportCompare(expect, actual, summary);
+reportMatch(expect, actual, summary);"""
d8e18caad3aa909df1243a6cd9a54a19b3c9a52e,79890,360529,mozilla.mano%sent.com,"Bug 360529, r+a=mconnor.
",1206362624,"""diff --git a/browser/components/feeds/src/FeedWriter.js b/browser/components/feeds/src/FeedWriter.js
index cd874b5..087ed45 100755
--- a/browser/components/feeds/src/FeedWriter.js
+++ b/browser/components/feeds/src/FeedWriter.js
@@ -203,10 +203,15 @@ FeedWriter.prototype = {
   },
 
   _setContentText: function FW__setContentText(id, text) {
-    var element = this._document.getElementById(id);
-    while (element.hasChildNodes())
-      element.removeChild(element.firstChild);
-    element.appendChild(this._document.createTextNode(text));
+    this._contentSandbox.element = this._document.getElementById(id);
+    this._contentSandbox.textNode = this._document.createTextNode(text);
+    var codeStr =
+      """"while (element.hasChildNodes()) """" +
+      """"  element.removeChild(element.firstChild);"""" +
+      """"element.appendChild(textNode);"""";
+    Cu.evalInSandbox(codeStr, this._contentSandbox);
+    this._contentSandbox.element = null;
+    this._contentSandbox.textNode = null;
   },
 
   /**
@@ -229,11 +234,28 @@ FeedWriter.prototype = {
       // checkLoadURIStrWithPrincipal will throw if the link URI should not be
       // loaded, either because our feedURI isn't allowed to load it or per
       // the rules specified in |flags|, so we'll never """"linkify"""" the link...
-      element.setAttribute(attribute, uri);
     }
     catch (e) {
       // Not allowed to load this link because secman.checkLoadURIStr threw
+      return;
     }
+
+    this._contentSandbox.element = element;
+    this._contentSandbox.uri = uri;
+    var codeStr = """"element.setAttribute('"""" + attribute + """"', uri);"""";
+    Cu.evalInSandbox(codeStr, this._contentSandbox);
+  },
+
+  /**
+   * Use this sandbox to run any dom manipulation code on nodes which
+   * are already inserted into the content document.
+   */
+  __contentSandbox: null,
+  get _contentSandbox() {
+    if (!this.__contentSandbox)
+      this.__contentSandbox = new Cu.Sandbox(this._window);
+
+    return this.__contentSandbox;
   },
 
   /**
@@ -244,9 +266,9 @@ FeedWriter.prototype = {
    *        the XUL element to call doCommand() on.
    */
   _safeDoCommand: function FW___safeDoCommand(aElement) {
-    var sandbox = new Cu.Sandbox(this._window);
-    sandbox.element = aElement;
-    Cu.evalInSandbox(""""element.doCommand();"""", sandbox);
+    this._contentSandbox.element = aElement;
+    Cu.evalInSandbox(""""element.doCommand();"""", this._contentSandbox);
+    this._contentSandbox.element = null;
   },
 
   __faviconService: null,
@@ -290,47 +312,23 @@ FeedWriter.prototype = {
   },
 
   _setCheckboxCheckedState: function FW__setCheckboxCheckedState(aCheckbox, aValue) {
-    // see checkbox.xml
+    // see checkbox.xml, xbl bindings are not applied within the sandbox!
+    this._contentSandbox.checkbox = aCheckbox;
+    var codeStr;
     var change = (aValue != (aCheckbox.getAttribute('checked') == 'true'));
     if (aValue)
-      aCheckbox.setAttribute('checked', 'true');
+      codeStr = """"checkbox.setAttribute('checked', 'true'); """";
     else
-      aCheckbox.removeAttribute('checked');
+      codeStr = """"checkbox.removeAttribute('checked'); """";
 
     if (change) {
-      var sandbox = new Cu.Sandbox(this._window);
-      sandbox.document = this._document;
-      sandbox.checkbox = aCheckbox;
-      var codeStr = """"var event = document.createEvent('Events'); """" +
-                    """"event.initEvent('CheckboxStateChange', true, true);"""" +
-                    """"checkbox.dispatchEvent(event);""""
-      Cu.evalInSandbox(codeStr, sandbox);
-    }
-  },
-
-  // For setting and getting the file expando property, we need to keep a
-  // reference to explict XPCNativeWrappers around the associated menuitems
-  _selectedApplicationItemWrapped: null,
-  get selectedApplicationItemWrapped() {
-    if (!this._selectedApplicationItemWrapped) {
-      this._selectedApplicationItemWrapped =
-        XPCNativeWrapper(this._document.getElementById(""""selectedAppMenuItem""""));
-    }
-
-    return this._selectedApplicationItemWrapped;
-  },
-
-  _defaultSystemReaderItemWrapped: null,
-  get defaultSystemReaderItemWrapped() {
-    if (!this._defaultSystemReaderItemWrapped) {
-      // Unlike the selected application item, this might not exist at all,
-      // see _initSubscriptionUI
-      var menuItem = this._document.getElementById(""""defaultHandlerMenuItem"""");
-      if (menuItem)
-        this._defaultSystemReaderItemWrapped = XPCNativeWrapper(menuItem);
+      this._contentSandbox.document = this._document;
+      codeStr += """"var event = document.createEvent('Events'); """" +
+                 """"event.initEvent('CheckboxStateChange', true, true);"""" +
+                 """"checkbox.dispatchEvent(event);""""
     }
 
-    return this._defaultSystemReaderItemWrapped;
+    Cu.evalInSandbox(codeStr, this._contentSandbox);
   },
 
    /**
@@ -424,7 +422,13 @@ FeedWriter.prototype = {
 
       var titleText = this._getFormattedString(""""linkTitleTextFormat"""", 
                                                [parts.getPropertyAsAString(""""title"""")]);
-      feedTitleLink.setAttribute(""""title"""", titleText);
+      this._contentSandbox.feedTitleLink = feedTitleLink;
+      this._contentSandbox.titleText = titleText;
+      var codeStr = """"feedTitleLink.setAttribute('title', titleText);"""";
+      Cu.evalInSandbox(codeStr, this._contentSandbox);
+      this._contentSandbox.feedTitleLink = null;
+      this._contentSandbox.titleText = null;
+
       this._safeSetURIAttribute(feedTitleLink, """"href"""", 
                                 parts.getPropertyAsAString(""""link""""));
 
@@ -446,13 +450,17 @@ FeedWriter.prototype = {
    */
   _writeFeedContent: function FW__writeFeedContent(container) {
     // Build the actual feed content
-    var feedContent = this._document.getElementById(""""feedContent"""");
     var feed = container.QueryInterface(Ci.nsIFeed);
-    
+    if (feed.items.length == 0)
+      return;
+
+    this._contentSandbox.feedContent =
+      this._document.getElementById(""""feedContent"""");
+
     for (var i = 0; i < feed.items.length; ++i) {
       var entry = feed.items.queryElementAt(i, Ci.nsIFeedEntry);
       entry.QueryInterface(Ci.nsIFeedContainer);
-      
+
       var entryContainer = this._document.createElementNS(HTML_NS, """"div"""");
       entryContainer.className = """"entry"""";
 
@@ -460,29 +468,29 @@ FeedWriter.prototype = {
       if (entry.title) {
         var a = this._document.createElementNS(HTML_NS, """"a"""");
         a.appendChild(this._document.createTextNode(entry.title.plainText()));
-      
+
         // Entries are not required to have links, so entry.link can be null.
         if (entry.link)
           this._safeSetURIAttribute(a, """"href"""", entry.link.spec);
 
         var title = this._document.createElementNS(HTML_NS, """"h3"""");
         title.appendChild(a);
-        entryContainer.appendChild(title);
 
         var lastUpdated = this._parseDate(entry.updated);
         if (lastUpdated) {
           var dateDiv = this._document.createElementNS(HTML_NS, """"div"""");
-          dateDiv.setAttribute(""""class"""", """"lastUpdated"""");
-          title.appendChild(dateDiv);
+          dateDiv.className = """"lastUpdated"""";
           dateDiv.textContent = lastUpdated;
+          title.appendChild(dateDiv);
         }
+
+        entryContainer.appendChild(title);
       }
 
       var body = this._document.createElementNS(HTML_NS, """"div"""");
       var summary = entry.summary || entry.content;
       var docFragment = null;
       if (summary) {
-
         if (summary.base)
           body.setAttributeNS(XML_NS, """"base"""", summary.base.spec);
         else
@@ -510,11 +518,19 @@ FeedWriter.prototype = {
         entryContainer.appendChild(enclosuresDiv);
       }
 
-      feedContent.appendChild(entryContainer);
-      var clearDiv = this._document.createElementNS(HTML_NS, """"div"""");
-      clearDiv.style.clear = """"both"""";
-      feedContent.appendChild(clearDiv);
+      this._contentSandbox.entryContainer = entryContainer;
+      this._contentSandbox.clearDiv =
+        this._document.createElementNS(HTML_NS, """"div"""");
+      this._contentSandbox.clearDiv.style.clear = """"both"""";
+      
+      var codeStr = """"feedContent.appendChild(entryContainer); """" +
+                     """"feedContent.appendChild(clearDiv);""""
+      Cu.evalInSandbox(codeStr, this._contentSandbox);
     }
+
+    this._contentSandbox.feedContent = null;
+    this._contentSandbox.entryContainer = null;
+    this._contentSandbox.clearDiv = null;
   },
 
   /**
@@ -546,7 +562,7 @@ FeedWriter.prototype = {
    */
   _buildEnclosureDiv: function FW__buildEnclosureDiv(entry) {
     var enclosuresDiv = this._document.createElementNS(HTML_NS, """"div"""");
-    enclosuresDiv.setAttribute(""""class"""", """"enclosures"""");
+    enclosuresDiv.className = """"enclosures"""";
 
     enclosuresDiv.appendChild(this._document.createTextNode(this._getString(""""mediaLabel"""")));
 
@@ -708,9 +724,12 @@ FeedWriter.prototype = {
    *          The menuitem's associated file
    */
   _initMenuItemWithFile: function(aMenuItem, aFile) {
-    aMenuItem.setAttribute(""""label"""", this._getFileDisplayName(aFile));
-    aMenuItem.setAttribute(""""image"""", this._getFileIconURL(aFile));
-    aMenuItem.file = aFile;
+    this._contentSandbox.menuitem = aMenuItem;
+    this._contentSandbox.label = this._getFileDisplayName(aFile);
+    this._contentSandbox.image = this._getFileIconURL(aFile);
+    var codeStr = """"menuitem.setAttribute('label', label); """" +
+                  """"menuitem.setAttribute('image', image);""""
+    Cu.evalInSandbox(codeStr, this._contentSandbox);
   },
 
   /**
@@ -726,8 +745,8 @@ FeedWriter.prototype = {
       fp.appendFilters(Ci.nsIFilePicker.filterApps);
 
       if (fp.show() == Ci.nsIFilePicker.returnOK) {
-        var selectedApp = fp.file;
-        if (selectedApp) {
+        this._selectedApp = fp.file;
+        if (this._selectedApp) {
           // XXXben - we need to compare this with the running instance executable
           //          just don't know how to do that via script...
           // XXXmano TBD: can probably add this to nsIShellService
@@ -740,12 +759,13 @@ FeedWriter.prototype = {
 #expand           if (fp.file.leafName != """"__MOZ_APP_NAME__-bin"""") {
 #endif
 #endif
-            var selectedAppMenuItem = this.selectedApplicationItemWrapped;
-            this._initMenuItemWithFile(selectedAppMenuItem, selectedApp);
+            this._initMenuItemWithFile(this._contentSandbox.selectedAppMenuItem,
+                                       this._selectedApp);
 
             // Show and select the selected application menuitem
-            selectedAppMenuItem.hidden = false;
-            this._safeDoCommand(selectedAppMenuItem);
+            var codeStr = """"selectedAppMenuItem.hidden = false;"""" +
+                          """"selectedAppMenuItem.doCommand();""""
+            Cu.evalInSandbox(codeStr, this._contentSandbox);
             return true;
           }
         }
@@ -772,8 +792,7 @@ FeedWriter.prototype = {
   },
 
   _setSubscribeUsingLabel: function FW__setSubscribeUsingLabel() {
-    var stringLabel = null;
-
+    var stringLabel = """"subscribeFeedUsing"""";
     switch (this._getFeedType()) {
       case Ci.nsIFeed.TYPE_VIDEO:
         stringLabel = """"subscribeVideoPodcastUsing"""";
@@ -782,13 +801,13 @@ FeedWriter.prototype = {
       case Ci.nsIFeed.TYPE_AUDIO:
         stringLabel = """"subscribeAudioPodcastUsing"""";
         break;
-
-      default:
-        stringLabel = """"subscribeFeedUsing"""";
     }
 
-    var subscribeUsing = this._document.getElementById(""""subscribeUsingDescription"""");
-    subscribeUsing.setAttribute(""""value"""", this._getString(stringLabel));
+    this._contentSandbox.subscribeUsing =
+      this._document.getElementById(""""subscribeUsingDescription"""");
+    this._contentSandbox.label = this._getString(stringLabel);
+    var codeStr = """"subscribeUsing.setAttribute('value', label);""""
+    Cu.evalInSandbox(codeStr, this._contentSandbox);
   },
 
   _setAlwaysUseLabel: function FW__setAlwaysUseLabel() {
@@ -798,7 +817,7 @@ FeedWriter.prototype = {
       if (handlersMenuList) {
         var handlerName = this._getSelectedItemFromMenulist(handlersMenuList)
                               .getAttribute(""""label"""");
-        var stringlabel = null;
+        var stringLabel = """"alwaysUseForFeeds"""";
         switch (this._getFeedType()) {
           case Ci.nsIFeed.TYPE_VIDEO:
             stringlabel = """"alwaysUseForVideoPodcasts"""";
@@ -807,12 +826,13 @@ FeedWriter.prototype = {
           case Ci.nsIFeed.TYPE_AUDIO:
             stringlabel = """"alwaysUseForAudioPodcasts"""";
             break;
-
-          default:
-            stringlabel = """"alwaysUseForFeeds"""";
         }
-  
-        checkbox.setAttribute(""""label"""", this._getFormattedString(stringlabel, [handlerName]));
+
+        this._contentSandbox.checkbox = checkbox;
+        this._contentSandbox.label = this._getFormattedString(stringlabel, [handlerName]);
+        
+        var codeStr = """"checkbox.setAttribute('label', label);"""";
+        Cu.evalInSandbox(codeStr, this._contentSandbox);
       }
     }
   },
@@ -883,27 +903,29 @@ FeedWriter.prototype = {
         break;
       }
       case """"client"""": {
-        var selectedAppMenuItem = this.selectedApplicationItemWrapped;
-        if (selectedAppMenuItem) {
-          try {
-            var selectedApp = prefs.getComplexValue(getPrefAppForType(feedType),
-                                                    Ci.nsILocalFile);
-          } catch(ex) { }
-
-          if (selectedApp) {
-            this._initMenuItemWithFile(selectedAppMenuItem, selectedApp);
-            selectedAppMenuItem.hidden = false;
-            this._safeDoCommand(selectedAppMenuItem);
-
-            // Only show the default reader menuitem if the default reader
-            // isn't the selected application
-            var defaultHandlerMenuItem = this.defaultSystemReaderItemWrapped;
-            if (defaultHandlerMenuItem) {
-              defaultHandlerMenuItem.hidden =
-                defaultHandlerMenuItem.file.path == selectedApp.path;
-            }
-            break;
+        try {
+          this._selectedApp =
+            prefs.getComplexValue(getPrefAppForType(feedType), Ci.nsILocalFile);
+        }
+        catch(ex) {
+          this._selectedApp = null;
+        }
+
+        if (this._selectedApp) {
+          this._initMenuItemWithFile(this._contentSandbox.selectedAppMenuItem,
+                                     this._selectedApp);
+          var codeStr = """"selectedAppMenuItem.hidden = false; """" +
+                        """"selectedAppMenuItem.doCommand(); """";
+
+          // Only show the default reader menuitem if the default reader
+          // isn't the selected application
+          if (this._defaultSystemReader) {
+            var shouldHide =
+              this._defaultSystemReader.path == this._selectedApp.path;
+            codeStr += """"defaultHandlerMenuItem.hidden = """" + shouldHide + """";""""
           }
+          Cu.evalInSandbox(codeStr, this._contentSandbox);
+          break;
         }
       }
       case """"bookmarks"""":
@@ -921,79 +943,92 @@ FeedWriter.prototype = {
       return;
  
     var feedType = this._getFeedType();
+    var codeStr;
 
     // change the background
     var header = this._document.getElementById(""""feedHeader"""");
+    this._contentSandbox.header = header;
     switch (feedType) {
       case Ci.nsIFeed.TYPE_VIDEO:
-        header.setAttribute(""""class"""", """"videoPodcastBackground"""");
+        codeStr = """"header.className = 'videoPodcastBackground'; """";
         break;
 
       case Ci.nsIFeed.TYPE_AUDIO:
-        header.setAttribute(""""class"""", """"audioPodcastBackground"""");
+        codeStr = """"header.className = 'audioPodcastBackground'; """";
         break;
 
       default:
-        header.setAttribute(""""class"""", """"feedBackground"""");
+        codeStr = """"header.className = 'feedBackground'; """";
+        header.className = """"feedBackground"""";
     }
 
+
     // Last-selected application
-    var selectedApp;
     var menuItem = this._document.createElementNS(XUL_NS, """"menuitem"""");
     menuItem.id = """"selectedAppMenuItem"""";
     menuItem.className = """"menuitem-iconic"""";
     menuItem.setAttribute(""""handlerType"""", """"client"""");
-    handlersMenuPopup.appendChild(menuItem);
-
-    var selectedApplicationItem = this.selectedApplicationItemWrapped;
     try {
       var prefs = Cc[""""@mozilla.org/preferences-service;1""""].
                   getService(Ci.nsIPrefBranch);
-      selectedApp = prefs.getComplexValue(getPrefAppForType(feedType),
-                                          Ci.nsILocalFile);
+      this._selectedApp = prefs.getComplexValue(getPrefAppForType(feedType),
+                                                Ci.nsILocalFile);
 
-      if (selectedApp.exists())
-        this._initMenuItemWithFile(selectedApplicationItem, selectedApp);
+      if (this._selectedApp.exists())
+        this._initMenuItemWithFile(menuItem, this._selectedApp);
       else {
         // Hide the menuitem if the last selected application doesn't exist
-        selectedApplicationItem.hidden = true;
+        menuItem.setAttribute(""""hidden"""", true);
       }
     }
     catch(ex) {
       // Hide the menuitem until an application is selected
-      selectedApplicationItem.hidden = true;
+      menuItem.setAttribute(""""hidden"""", true);
     }
+    this._contentSandbox.handlersMenuPopup = handlersMenuPopup;
+    this._contentSandbox.selectedAppMenuItem = menuItem;
+    
+    codeStr += """"handlersMenuPopup.appendChild(selectedAppMenuItem); """";
 
     // List the default feed reader
-    var defaultReader = null;
     try {
-      var defaultReader = Cc[""""@mozilla.org/browser/shell-service;1""""].
-                          getService(Ci.nsIShellService).defaultFeedReader;
+      this._defaultSystemReader = Cc[""""@mozilla.org/browser/shell-service;1""""].
+                                  getService(Ci.nsIShellService).
+                                  defaultFeedReader;
       menuItem = this._document.createElementNS(XUL_NS, """"menuitem"""");
       menuItem.id = """"defaultHandlerMenuItem"""";
       menuItem.className = """"menuitem-iconic"""";
       menuItem.setAttribute(""""handlerType"""", """"client"""");
-      handlersMenuPopup.appendChild(menuItem);
 
-      var defaultSystemReaderItem = this.defaultSystemReaderItemWrapped;
-      this._initMenuItemWithFile(defaultSystemReaderItem, defaultReader);
+      this._initMenuItemWithFile(menuItem, this._defaultSystemReader);
 
       // Hide the default reader item if it points to the same application
       // as the last-selected application
-      if (selectedApp && selectedApp.path == defaultReader.path)
-        defaultSystemReaderItem.hidden = true;
+      if (this._selectedApp &&
+          this._selectedApp.path == this._defaultSystemReader.path)
+        menuItem.hidden = true;
+    }
+    catch(ex) { menuItem = null; /* no default reader */ }
+
+    if (menuItem) {
+      this._contentSandbox.defaultHandlerMenuItem = menuItem;
+      codeStr += """"handlersMenuPopup.appendChild(defaultHandlerMenuItem); """";
     }
-    catch(ex) { /* no default reader */ }
 
     // """"Choose Application..."""" menuitem
     menuItem = this._document.createElementNS(XUL_NS, """"menuitem"""");
     menuItem.id = """"chooseApplicationMenuItem"""";
     menuItem.setAttribute(""""label"""", this._getString(""""chooseApplicationMenuItem""""));
-    handlersMenuPopup.appendChild(menuItem);
+
+    this._contentSandbox.chooseAppMenuItem = menuItem;
+    codeStr += """"handlersMenuPopup.appendChild(chooseAppMenuItem); """";
 
     // separator
-    handlersMenuPopup.appendChild(this._document.createElementNS(XUL_NS,
-                                  """"menuseparator""""));
+    this._contentSandbox.chooseAppSep =
+      this._document.createElementNS(XUL_NS, """"menuseparator"""")
+    codeStr += """"handlersMenuPopup.appendChild(chooseAppSep); """";
+
+    Cu.evalInSandbox(codeStr, this._contentSandbox);
 
     var historySvc = Cc[""""@mozilla.org/browser/nav-history-service;1""""].
                      getService(Ci.nsINavHistoryService);
@@ -1010,7 +1045,9 @@ FeedWriter.prototype = {
         menuItem.setAttribute(""""label"""", handlers[i].name);
         menuItem.setAttribute(""""handlerType"""", """"web"""");
         menuItem.setAttribute(""""webhandlerurl"""", handlers[i].uri);
-        handlersMenuPopup.appendChild(menuItem);
+        this._contentSandbox.menuItem = menuItem;
+        codeStr = """"handlersMenuPopup.appendChild(menuItem);"""";
+        Cu.evalInSandbox(codeStr, this._contentSandbox);
 
         // For privacy reasons we cannot set the image attribute directly
         // to the icon url, see Bug 358878
@@ -1022,6 +1059,7 @@ FeedWriter.prototype = {
           }
         }
       }
+      this._contentSandbox.menuItem = null;
     }
 
     this._setSelectedHandler(feedType);
@@ -1049,39 +1087,32 @@ FeedWriter.prototype = {
     }
     catch (ex) { }
     if (showFirstRunUI) {
-      var feedHeader = this._document.getElementById(""""feedHeader"""");
-      if (feedHeader) {
-        var textfeedinfo1 = null;
-        switch (this._getFeedType()) {
-          case Ci.nsIFeed.TYPE_VIDEO:
-            textfeedinfo1 = """"feedSubscriptionVideoPodcast1"""";
-            break;
-          case Ci.nsIFeed.TYPE_AUDIO:
-            textfeedinfo1 = """"feedSubscriptionAudioPodcast1"""";
-            break;
-          default:
-            textfeedinfo1 = """"feedSubscriptionFeed1"""";
-        }
-        var feedinfo1 = this._document.getElementById(""""feedSubscriptionInfo1"""")
-        feedinfo1.setAttribute(""""value"""", this._getString(textfeedinfo1));
-
-        var textfeedinfo2 = null;
-        switch (this._getFeedType()) {
-          case Ci.nsIFeed.TYPE_VIDEO:
-            textfeedinfo2 = """"feedSubscriptionVideoPodcast2"""";
-            break;
-          case Ci.nsIFeed.TYPE_AUDIO:
-            textfeedinfo2 = """"feedSubscriptionAudioPodcast2"""";
-            break;
-          default:
-            textfeedinfo2 = """"feedSubscriptionFeed2"""";
-        }
-        var feedinfo2 = this._document.getElementById(""""feedSubscriptionInfo2"""")
-        feedinfo2.setAttribute(""""value"""", this._getString(textfeedinfo2));
-
-        feedHeader.setAttribute(""""firstrun"""", """"true"""");
+      var textfeedinfo1, textfeedinfo2;
+      switch (feedType) {
+        case Ci.nsIFeed.TYPE_VIDEO:
+          textfeedinfo1 = """"feedSubscriptionVideoPodcast1"""";
+          textfeedinfo2 = """"feedSubscriptionVideoPodcast2"""";
+          break;
+        case Ci.nsIFeed.TYPE_AUDIO:
+          textfeedinfo1 = """"feedSubscriptionAudioPodcast1"""";
+          textfeedinfo2 = """"feedSubscriptionAudioPodcast2"""";
+          break;
+        default:
+          textfeedinfo1 = """"feedSubscriptionFeed1"""";
+          textfeedinfo2 = """"feedSubscriptionFeed2"""";
       }
 
+      this._contentSandbox.feedinfo1 =
+        this._document.getElementById(""""feedSubscriptionInfo1"""");
+      this._contentSandbox.feedinfo1Str = this._getString(textfeedinfo1);
+      this._contentSandbox.feedinfo2 =
+        this._document.getElementById(""""feedSubscriptionInfo2"""");
+      this._contentSandbox.feedinfo2Str = this._getString(textfeedinfo2);
+      this._contentSandbox.header = header;
+      codeStr = """"feedinfo1.value = feedinfo1Str; """" +
+                """"feedinfo2.value = feedinfo2Str; """" +
+                """"header.setAttribute('firstrun', 'true');""""
+      Cu.evalInSandbox(codeStr, this._contentSandbox);
       prefs.setBoolPref(PREF_SHOW_FIRST_RUN_UI, false);
     }
   },
@@ -1198,9 +1229,9 @@ FeedWriter.prototype = {
     this._removeFeedFromCache();
     this.__faviconService = null;
     this.__bundle = null;
-    this._selectedApplicationItemWrapped = null;
-    this._defaultSystemReaderItemWrapped = null;
     this._feedURI = null;
+    this.__contentSandbox = null;
+
     var historySvc = Cc[""""@mozilla.org/browser/nav-history-service;1""""].
                      getService(Ci.nsINavHistoryService);
     historySvc.removeObserver(this);
@@ -1262,12 +1293,12 @@ FeedWriter.prototype = {
         case """"selectedAppMenuItem"""":
           prefs.setCharPref(getPrefReaderForType(feedType), """"client"""");
           prefs.setComplexValue(getPrefAppForType(feedType), Ci.nsILocalFile, 
-                                this.selectedApplicationItemWrapped.file);
+                                this._selectedApp);
           break;
         case """"defaultHandlerMenuItem"""":
           prefs.setCharPref(getPrefReaderForType(feedType), """"client"""");
           prefs.setComplexValue(getPrefAppForType(feedType), Ci.nsILocalFile, 
-                                this.defaultSystemReaderItemWrapped.file);
+                                this._defaultSystemReader);
           break;
         case """"liveBookmarksMenuItem"""":
           defaultHandler = """"bookmarks"""";
@@ -1349,7 +1380,14 @@ FeedWriter.prototype = {
       if (bytes) {
         var dataURI = """"data:"""" + mimeType.value + """";"""" + """"base64,"""" +
                       btoa(String.fromCharCode.apply(null, bytes));
-        aMenuItem.setAttribute(""""image"""", dataURI);
+
+        this._contentSandbox.menuItem = aMenuItem;
+        this._contentSandbox.dataURI = dataURI;
+        var codeStr = """"menuItem.setAttribute('image', dataURI);"""";
+        Cu.evalInSandbox(codeStr, this._contentSandbox);
+        this._contentSandbox.menuItem = null;
+        this._contentSandbox.dataURI = null;
+
         return true;
       }
     }"""
2605c68360641c6409a4e271a009c2e2518fc075,79904,375711,bclary%bclary.com,"JavaScript Tests - update ecma_3/RegExp/regress-375711.js due to change in bug 416933
",1206308764,"""diff --git a/js/tests/ecma_3/RegExp/regress-375711.js b/js/tests/ecma_3/RegExp/regress-375711.js
index 9c2bf77..07051ba 100755
--- a/js/tests/ecma_3/RegExp/regress-375711.js
+++ b/js/tests/ecma_3/RegExp/regress-375711.js
@@ -53,16 +53,66 @@ function test()
   printBugNumber(BUGNUMBER);
   printStatus (summary);
  
+  var s;
+
+  // see bug 416933
+  print('see bug 416933 for changed behavior on Gecko 1.9');
+
+  try
+  {
+    s = '/[Q-b]/.exec("""""""")';
+    expect = 'No Error';
+    print(s + ' expect ' + expect);
+    eval(s);
+    actual = 'No Error';
+  }
+  catch(ex)
+  {
+    actual = ex + '';
+  }
+  reportCompare(expect, actual, summary + ': ' + s);
+
+  try
+  {
+    s ='/[Q-b]/i.exec("""""""")';
+    expect = 'No Error';
+    print(s + ' expect ' + expect);
+    eval(s);
+    actual = 'No Error';
+  }
+  catch(ex)
+  {
+    actual = ex + '';
+  }
+  reportCompare(expect, actual, summary + ': ' + s);
+
   try
   {
+    s = '/[q-b]/.exec("""""""")';
     expect = 'SyntaxError: invalid range in character class';
-    eval('/[Q-b]/i.exec("""""""")');
+    print(s + ' expect ' + expect);
+    eval(s);
+    actual = 'No Error';
+  }
+  catch(ex)
+  {
+    actual = ex + '';
+  }
+  reportCompare(expect, actual, summary + ': ' + s);
+
+  try
+  {
+    s ='/[q-b]/i.exec("""""""")';
+    expect = 'No Error';
+    print(s + ' expect ' + expect);
+    eval(s);
+    actual = 'No Error';
   }
   catch(ex)
   {
     actual = ex + '';
   }
-  reportCompare(expect, actual, summary);
+  reportCompare(expect, actual, summary + ': ' + s);
 
   exitFunc ('test');
 }"""
2b11bde4db96a034b9c0e264b15ebb1d71354faf,80119,329385,Olli.Pettay%helsinki.fi,"Bug 329385, additional patch, r+sr=jst
",1205957922,"""diff --git a/widget/src/beos/nsDragService.cpp b/widget/src/beos/nsDragService.cpp
index 2dfdef0..fc24a6c 100644
--- a/widget/src/beos/nsDragService.cpp
+++ b/widget/src/beos/nsDragService.cpp
@@ -151,8 +151,11 @@ nsDragService::InvokeDragSession (nsIDOMNode *aDOMNode,
                                   PRUint32 aActionType)
 {
     PR_LOG(sDragLm, PR_LOG_DEBUG, (""""nsDragService::InvokeDragSession""""));
-    nsBaseDragService::InvokeDragSession (aDOMNode, aArrayTransferables,
-                                         aRegion, aActionType);
+    nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode,
+                                                       aArrayTransferables,
+                                                       aRegion, aActionType);
+    NS_ENSURE_SUCCESS(rv, rv);
+
     ResetDragInfo();       
     // make sure that we have an array of transferables to use
     if (nsnull == aArrayTransferables)
diff --git a/widget/src/cocoa/nsDragService.mm b/widget/src/cocoa/nsDragService.mm
index f53bb57..b8a3de9 100644
--- a/widget/src/cocoa/nsDragService.mm
+++ b/widget/src/cocoa/nsDragService.mm
@@ -253,7 +253,10 @@ nsDragService::InvokeDragSession(nsIDOMNode* aDOMNode, nsISupportsArray* aTransf
 {
   NS_OBJC_BEGIN_TRY_ABORT_BLOCK_NSRESULT;
 
-  nsBaseDragService::InvokeDragSession(aDOMNode, aTransferableArray, aDragRgn, aActionType);
+  nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode,
+                                                     aTransferableArray,
+                                                     aDragRgn, aActionType);
+  NS_ENSURE_SUCCESS(rv, rv);
 
   mDataItems = aTransferableArray;
 
diff --git a/widget/src/gtk2/nsDragService.cpp b/widget/src/gtk2/nsDragService.cpp
index 01b3c43..2b8ba11 100644
--- a/widget/src/gtk2/nsDragService.cpp
+++ b/widget/src/gtk2/nsDragService.cpp
@@ -155,8 +155,11 @@ nsDragService::InvokeDragSession(nsIDOMNode *aDOMNode,
                                  PRUint32 aActionType)
 {
     PR_LOG(sDragLm, PR_LOG_DEBUG, (""""nsDragService::InvokeDragSession""""));
-    nsBaseDragService::InvokeDragSession(aDOMNode, aArrayTransferables,
-                                         aRegion, aActionType);
+    nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode,
+                                                       aArrayTransferables,
+                                                       aRegion, aActionType);
+    NS_ENSURE_SUCCESS(rv, rv);
+
     // make sure that we have an array of transferables to use
     if (!aArrayTransferables)
         return NS_ERROR_INVALID_ARG;
diff --git a/widget/src/os2/nsDragService.cpp b/widget/src/os2/nsDragService.cpp
index 01074de..ff017e5 100644
--- a/widget/src/os2/nsDragService.cpp
+++ b/widget/src/os2/nsDragService.cpp
@@ -142,8 +142,10 @@ NS_IMETHODIMP nsDragService::InvokeDragSession(nsIDOMNode *aDOMNode,
   if (mDoingDrag)
     return NS_ERROR_UNEXPECTED;
 
-  nsBaseDragService::InvokeDragSession ( aDOMNode, aTransferables,
-                                         aRegion, aActionType );
+  nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode, aTransferables,
+                                                     aRegion, aActionType);
+  NS_ENSURE_SUCCESS(rv, rv);
+
   mSourceDataItems = aTransferables;
   WinSetCapture(HWND_DESKTOP, NULLHANDLE);
 
@@ -166,7 +168,7 @@ NS_IMETHODIMP nsDragService::InvokeDragSession(nsIDOMNode *aDOMNode,
   dragitem.hstrContainerName   = NULLHANDLE;
   dragitem.hstrSourceName      = NULLHANDLE;
 
-  nsresult rv = NS_ERROR_FAILURE;
+  rv = NS_ERROR_FAILURE;
   ULONG idIcon = 0;
 
     // bracket this to reduce our footprint before the drag begins
diff --git a/widget/src/photon/nsDragService.cpp b/widget/src/photon/nsDragService.cpp
index 8726fb7..bbe2bfc 100644
--- a/widget/src/photon/nsDragService.cpp
+++ b/widget/src/photon/nsDragService.cpp
@@ -130,7 +130,10 @@ nsDragService::InvokeDragSession (nsIDOMNode *aDOMNode,
 #ifdef DEBUG
 	printf( """"nsDragService::InvokeDragSession\n"""" );
 #endif
-  nsBaseDragService::InvokeDragSession (aDOMNode, aArrayTransferables, aRegion, aActionType);
+  nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode,
+                                                     aArrayTransferables,
+                                                     aRegion, aActionType);
+  NS_ENSURE_SUCCESS(rv, rv);
 
   if(!aArrayTransferables) return NS_ERROR_INVALID_ARG;
 
@@ -172,7 +175,7 @@ nsDragService::InvokeDragSession (nsIDOMNode *aDOMNode,
 						const char *FlavourStr = ( const char * ) flavorStr;
 						nsCOMPtr<nsISupports> data;
 						PRUint32 tmpDataLen = 0;
-						nsresult rv = currItem->GetTransferData( FlavourStr, getter_AddRefs(data), &tmpDataLen );
+						rv = currItem->GetTransferData( FlavourStr, getter_AddRefs(data), &tmpDataLen );
 						if( NS_SUCCEEDED( rv ) ) {
 							/* insert FlavourStr, data into the PtTransportCtrl_t */
 							int len = sizeof( PRUint32 ) + sizeof( PRUint32 ) + strlen( FlavourStr ) + 1 + tmpDataLen;
diff --git a/widget/src/windows/nsDragService.cpp b/widget/src/windows/nsDragService.cpp
index eea1306..4c589b6 100644
--- a/widget/src/windows/nsDragService.cpp
+++ b/widget/src/windows/nsDragService.cpp
@@ -189,9 +189,11 @@ nsDragService::InvokeDragSession(nsIDOMNode *aDOMNode,
                                  nsIScriptableRegion *aRegion,
                                  PRUint32 aActionType)
 {
-  nsBaseDragService::InvokeDragSession(aDOMNode, anArrayTransferables, aRegion,
-                                       aActionType);
-  nsresult rv;
+  nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode,
+                                                     anArrayTransferables,
+                                                     aRegion,
+                                                     aActionType);
+  NS_ENSURE_SUCCESS(rv, rv);
 
   // Try and get source URI of the items that are being dragged
   nsIURI *uri = nsnull;"""
71e78be21fa5a8dc73699fc0efad0c0b3500bf4f,80152,329385,Olli.Pettay%helsinki.fi,"Bug 329385, r+sr=jst
",1205885182,"""diff --git a/dom/src/base/nsGlobalWindow.cpp b/dom/src/base/nsGlobalWindow.cpp
index ade1aae..a3b27b3 100644
--- a/dom/src/base/nsGlobalWindow.cpp
+++ b/dom/src/base/nsGlobalWindow.cpp
@@ -194,6 +194,7 @@
 #include """"nsIPopupWindowManager.h""""
 
 #include """"nsIPermissionManager.h""""
+#include """"nsIDragService.h""""
 
 #ifdef MOZ_LOGGING
 // so we can get logging even in release builds
@@ -212,6 +213,8 @@ static PRInt32              gRefCnt                    = 0;
 static PRInt32              gOpenPopupSpamCount        = 0;
 static PopupControlState    gPopupControlState         = openAbused;
 static PRInt32              gRunningTimeoutDepth       = 0;
+static PRBool               gMouseDown                 = PR_FALSE;
+static PRBool               gDragServiceDisabled       = PR_FALSE;
 
 #ifdef DEBUG
 static PRUint32             gSerialCounter             = 0;
@@ -2181,6 +2184,20 @@ nsGlobalWindow::PreHandleEvent(nsEventChainPreVisitor& aVisitor)
     }
   } else if (msg == NS_RESIZE_EVENT) {
     mIsHandlingResizeEvent = PR_TRUE;
+  } else if (msg == NS_MOUSE_BUTTON_DOWN &&
+             NS_IS_TRUSTED_EVENT(aVisitor.mEvent)) {
+    gMouseDown = PR_TRUE;
+  } else if (msg == NS_MOUSE_BUTTON_UP &&
+             NS_IS_TRUSTED_EVENT(aVisitor.mEvent)) {
+    gMouseDown = PR_FALSE;
+    if (gDragServiceDisabled) {
+      nsCOMPtr<nsIDragService> ds =
+        do_GetService(""""@mozilla.org/widget/dragservice;1"""");
+      if (ds) {
+        gDragServiceDisabled = PR_FALSE;
+        ds->Unsuppress();
+      }
+    }
   }
 
   aVisitor.mParentTarget = mChromeEventHandler;
@@ -3947,8 +3964,19 @@ nsGlobalWindow::CanMoveResizeWindows()
   PRUint32 testResult;
   rv = pm->TestPermission(uri, """"moveresize"""", &testResult);
   NS_ENSURE_SUCCESS(rv, PR_FALSE);
-  
-  return testResult == nsIPermissionManager::ALLOW_ACTION;
+
+  if (testResult == nsIPermissionManager::ALLOW_ACTION) {
+    if (gMouseDown && !gDragServiceDisabled) {
+      nsCOMPtr<nsIDragService> ds =
+        do_GetService(""""@mozilla.org/widget/dragservice;1"""");
+      if (ds) {
+        gDragServiceDisabled = PR_TRUE;
+        ds->Suppress();
+      }
+    }
+    return PR_TRUE;
+  }
+  return PR_FALSE;
 }
 
 NS_IMETHODIMP
diff --git a/widget/public/nsIDragService.idl b/widget/public/nsIDragService.idl
index 52aaa94..1c5c160 100644
--- a/widget/public/nsIDragService.idl
+++ b/widget/public/nsIDragService.idl
@@ -47,7 +47,7 @@ interface nsIDOMNode;
 interface nsIDOMMouseEvent;
 interface nsISelection;
 
-[scriptable, uuid(E8CD74A6-8BB6-4D27-9C65-4ED1B4398F8C)]
+[scriptable, uuid(034c44a4-604b-44a2-9205-676d5135f359)]
 interface nsIDragService : nsISupports
 {
   const long DRAGDROP_ACTION_NONE = 0;
@@ -134,6 +134,13 @@ interface nsIDragService : nsISupports
    * Fire a drag event at the source of the drag
    */
   void fireDragEventAtSource ( in unsigned long aMsg );
+
+  /**
+   * Increase/decrease dragging suppress level by one.
+   * If level is greater than one, dragging is disabled.
+   */
+  void suppress();
+  void unsuppress();
 };
 
 
diff --git a/widget/src/xpwidgets/nsBaseDragService.cpp b/widget/src/xpwidgets/nsBaseDragService.cpp
index 11dd635..01f250a 100644
--- a/widget/src/xpwidgets/nsBaseDragService.cpp
+++ b/widget/src/xpwidgets/nsBaseDragService.cpp
@@ -79,7 +79,7 @@
 nsBaseDragService::nsBaseDragService()
   : mCanDrop(PR_FALSE), mDoingDrag(PR_FALSE), mHasImage(PR_FALSE),
     mDragAction(DRAGDROP_ACTION_NONE), mTargetSize(0,0),
-    mImageX(0), mImageY(0), mScreenX(-1), mScreenY(-1)
+    mImageX(0), mImageY(0), mScreenX(-1), mScreenY(-1), mSuppressLevel(0)
 {
 }
 
@@ -203,6 +203,7 @@ nsBaseDragService::InvokeDragSession(nsIDOMNode *aDOMNode,
                                      PRUint32 aActionType)
 {
   NS_ENSURE_TRUE(aDOMNode, NS_ERROR_INVALID_ARG);
+  NS_ENSURE_TRUE(mSuppressLevel == 0, NS_ERROR_FAILURE);
 
   // stash the document of the dom node
   aDOMNode->GetOwnerDocument(getter_AddRefs(mSourceDocument));
@@ -241,6 +242,7 @@ nsBaseDragService::InvokeDragSessionWithImage(nsIDOMNode* aDOMNode,
                                               nsIDOMMouseEvent* aDragEvent)
 {
   NS_ENSURE_TRUE(aDragEvent, NS_ERROR_NULL_POINTER);
+  NS_ENSURE_TRUE(mSuppressLevel == 0, NS_ERROR_FAILURE);
 
   mSelection = nsnull;
   mHasImage = PR_TRUE;
@@ -262,6 +264,7 @@ nsBaseDragService::InvokeDragSessionWithSelection(nsISelection* aSelection,
 {
   NS_ENSURE_TRUE(aSelection, NS_ERROR_NULL_POINTER);
   NS_ENSURE_TRUE(aDragEvent, NS_ERROR_NULL_POINTER);
+  NS_ENSURE_TRUE(mSuppressLevel == 0, NS_ERROR_FAILURE);
 
   mSelection = aSelection;
   mHasImage = PR_TRUE;
@@ -288,7 +291,7 @@ nsBaseDragService::GetCurrentSession(nsIDragSession ** aSession)
 
   // """"this"""" also implements a drag session, so say we are one but only
   // if there is currently a drag going on.
-  if (mDoingDrag) {
+  if (!mSuppressLevel && mDoingDrag) {
     *aSession = this;
     NS_ADDREF(*aSession);      // addRef because we're a """"getter""""
   }
@@ -317,7 +320,7 @@ nsBaseDragService::EndDragSession(PRBool aDoneDrag)
     return NS_ERROR_FAILURE;
   }
 
-  if (aDoneDrag)
+  if (aDoneDrag && !mSuppressLevel)
     FireDragEventAtSource(NS_DRAGDROP_END);
 
   mDoingDrag = PR_FALSE;
@@ -339,7 +342,7 @@ nsBaseDragService::EndDragSession(PRBool aDoneDrag)
 NS_IMETHODIMP
 nsBaseDragService::FireDragEventAtSource(PRUint32 aMsg)
 {
-  if (mSourceNode) {
+  if (mSourceNode && !mSuppressLevel) {
     nsCOMPtr<nsIDocument> doc = do_QueryInterface(mSourceDocument);
     if (doc) {
       nsCOMPtr<nsIPresShell> presShell = doc->GetPrimaryShell();
@@ -578,3 +581,17 @@ nsBaseDragService::ConvertToUnscaledDevPixels(nsPresContext* aPresContext,
   *aScreenY = nsPresContext::CSSPixelsToAppUnits(*aScreenY) / adj;
 }
 
+NS_IMETHODIMP
+nsBaseDragService::Suppress()
+{
+  EndDragSession(PR_FALSE);
+  ++mSuppressLevel;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsBaseDragService::Unsuppress()
+{
+  --mSuppressLevel;
+  return NS_OK;
+}
diff --git a/widget/src/xpwidgets/nsBaseDragService.h b/widget/src/xpwidgets/nsBaseDragService.h
index f6ed5f1..3bcf348 100644
--- a/widget/src/xpwidgets/nsBaseDragService.h
+++ b/widget/src/xpwidgets/nsBaseDragService.h
@@ -146,6 +146,8 @@ protected:
   // supplied so the screen position is not known
   PRInt32 mScreenX;
   PRInt32 mScreenY;
+
+  PRUint32 mSuppressLevel;
 };
 
 #endif // nsBaseDragService_h__"""
ac3b1ea4aef8750fdb08d060c8d6ff7fa775e51e,81243,360529,mozilla.mano%sent.com,"Bug 360529, r=sayrer, sr=jst, a=beltzner.
",1204532137,"""diff --git a/browser/components/feeds/src/FeedWriter.js b/browser/components/feeds/src/FeedWriter.js
index 3b86e3d..cd874b5 100755
--- a/browser/components/feeds/src/FeedWriter.js
+++ b/browser/components/feeds/src/FeedWriter.js
@@ -43,8 +43,9 @@
 const Cc = Components.classes;
 const Ci = Components.interfaces;
 const Cr = Components.results;
+const Cu = Components.utils;
 
-Components.utils.import(""""resource://gre/modules/XPCOMUtils.jsm"""");
+Cu.import(""""resource://gre/modules/XPCOMUtils.jsm"""");
 
 function LOG(str) {
   var prefB = Cc[""""@mozilla.org/preferences-service;1""""].
@@ -84,6 +85,7 @@ const TYPE_MAYBE_FEED = """"application/vnd.mozilla.maybe.feed"""";
 const TYPE_MAYBE_AUDIO_FEED = """"application/vnd.mozilla.maybe.audio.feed"""";
 const TYPE_MAYBE_VIDEO_FEED = """"application/vnd.mozilla.maybe.video.feed"""";
 const URI_BUNDLE = """"chrome://browser/locale/feeds/subscribe.properties"""";
+const SUBSCRIBE_PAGE_URI = """"chrome://browser/content/feeds/subscribe.xhtml"""";
 
 const PREF_SELECTED_APP = """"browser.feeds.handlers.application"""";
 const PREF_SELECTED_WEB = """"browser.feeds.handlers.webservice"""";
@@ -234,6 +236,19 @@ FeedWriter.prototype = {
     }
   },
 
+  /**
+   * Calls doCommand for a the given XUL element within the context of the
+   * content document.
+   *
+   * @param aElement
+   *        the XUL element to call doCommand() on.
+   */
+  _safeDoCommand: function FW___safeDoCommand(aElement) {
+    var sandbox = new Cu.Sandbox(this._window);
+    sandbox.element = aElement;
+    Cu.evalInSandbox(""""element.doCommand();"""", sandbox);
+  },
+
   __faviconService: null,
   get _faviconService() {
     if (!this.__faviconService)
@@ -283,9 +298,13 @@ FeedWriter.prototype = {
       aCheckbox.removeAttribute('checked');
 
     if (change) {
-      var event = this._document.createEvent('Events');
-      event.initEvent('CheckboxStateChange', true, true);
-      aCheckbox.dispatchEvent(event);
+      var sandbox = new Cu.Sandbox(this._window);
+      sandbox.document = this._document;
+      sandbox.checkbox = aCheckbox;
+      var codeStr = """"var event = document.createEvent('Events'); """" +
+                    """"event.initEvent('CheckboxStateChange', true, true);"""" +
+                    """"checkbox.dispatchEvent(event);""""
+      Cu.evalInSandbox(codeStr, sandbox);
     }
   },
 
@@ -726,7 +745,7 @@ FeedWriter.prototype = {
 
             // Show and select the selected application menuitem
             selectedAppMenuItem.hidden = false;
-            selectedAppMenuItem.doCommand();
+            this._safeDoCommand(selectedAppMenuItem);
             return true;
           }
         }
@@ -859,7 +878,7 @@ FeedWriter.prototype = {
             return;
           }
 
-          handlers[0].doCommand();
+          this._safeDoCommand(handlers[0]);
         }
         break;
       }
@@ -874,7 +893,7 @@ FeedWriter.prototype = {
           if (selectedApp) {
             this._initMenuItemWithFile(selectedAppMenuItem, selectedApp);
             selectedAppMenuItem.hidden = false;
-            selectedAppMenuItem.doCommand();
+            this._safeDoCommand(selectedAppMenuItem);
 
             // Only show the default reader menuitem if the default reader
             // isn't the selected application
@@ -891,7 +910,7 @@ FeedWriter.prototype = {
       default: {
         var liveBookmarksMenuItem = this._document.getElementById(""""liveBookmarksMenuItem"""");
         if (liveBookmarksMenuItem)
-          liveBookmarksMenuItem.doCommand();
+          this._safeDoCommand(liveBookmarksMenuItem);
       } 
     }
   },
@@ -1078,7 +1097,6 @@ FeedWriter.prototype = {
                getInterface(Ci.nsIWebNavigation).
                QueryInterface(Ci.nsIDocShell).currentDocumentChannel;
 
-    const SUBSCRIBE_PAGE_URI = """"chrome://browser/content/feeds/subscribe.xhtml"""";
     var uri = makeURI(SUBSCRIBE_PAGE_URI);
     var resolvedURI = Cc[""""@mozilla.org/chrome/chrome-registry;1""""].
                       getService(Ci.nsIChromeRegistry).
@@ -1182,7 +1200,7 @@ FeedWriter.prototype = {
     this.__bundle = null;
     this._selectedApplicationItemWrapped = null;
     this._defaultSystemReaderItemWrapped = null;
-    this._FeedURI = null;
+    this._feedURI = null;
     var historySvc = Cc[""""@mozilla.org/browser/nav-history-service;1""""].
                      getService(Ci.nsINavHistoryService);
     historySvc.removeObserver(this);"""
eacef2f11cc37eb4ee805427a0ea125374029ece,82742,367121,bclary%bclary.com,"JavaScript Tests - fix window detection in test for bug 367121
",1202503868,"""diff --git a/js/tests/js1_5/extensions/regress-367121.js b/js/tests/js1_5/extensions/regress-367121.js
index 404796e..f3fcd00 100755
--- a/js/tests/js1_5/extensions/regress-367121.js
+++ b/js/tests/js1_5/extensions/regress-367121.js
@@ -91,4 +91,7 @@ function handleLoad()
   jsTestDriverEnd();
 }
 
-window.onload = handleLoad;
+if (typeof window != 'undefined')
+{
+  window.onload = handleLoad;
+}"""
4f42d745dcfd506ad6fdce2252fad9b87dee71ab,82846,367121,bclary%bclary.com,"JavaScript Tests - regression test for bug 367121, by moz_bug_r_a4
",1202398180,"""diff --git a/js/tests/js1_5/extensions/regress-367121.js b/js/tests/js1_5/extensions/regress-367121.js
new file mode 100755
index 0000000..404796e
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367121.js
@@ -0,0 +1,94 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-367121.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 367121;
+var summary = 'self modifying script detection';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  if (typeof window == 'undefined')
+  {
+    actual = expect = 'Test skipped - Test must be run in the browser.';
+    reportCompare(expect, actual, summary);
+  }
+  else if (typeof Script == 'undefined')
+  {
+    actual = expect = 'Test skipped - Test requires Script object..';
+    reportCompare(expect, actual, summary);
+  }
+  else
+  {
+    gDelayTestDriverEnd = true;
+  }
+
+  exitFunc ('test');
+}
+
+function handleLoad()
+{
+  var iframe = document.body.appendChild(document.createElement('iframe'));
+	var d = iframe.contentDocument;
+
+	d.addEventListener(""""test"""", function(e) {
+      s.compile("""""""");
+      Array(11).join(Array(11).join(Array(101).join(""""aaaaa"""")));
+    }, true);
+
+	var e = d.createEvent(""""Events"""");
+	e.initEvent(""""test"""", true, true);
+	var s = new Script(""""d.dispatchEvent(e);"""");
+	s.exec();
+
+  gDelayTestDriverEnd = false;
+  reportCompare(expect, actual, summary);
+  jsTestDriverEnd();
+}
+
+window.onload = handleLoad;"""
7dad2ce118de0f31ac5aa9e2975bc54e25aae640,84708,394610,dolske%mozilla.com,"Bug 394610 - Add checks for problematic whitespace. r=gavin, a=blocking-ff3+
",1200292089,"""diff --git a/toolkit/components/passwordmgr/src/nsLoginManager.js b/toolkit/components/passwordmgr/src/nsLoginManager.js
index 96a49f4..13a5bba 100644
--- a/toolkit/components/passwordmgr/src/nsLoginManager.js
+++ b/toolkit/components/passwordmgr/src/nsLoginManager.js
@@ -477,6 +477,10 @@ LoginManager.prototype = {
      * Enable or disable storing logins for the specified host.
      */
     setLoginSavingEnabled : function (hostname, enabled) {
+        // Nulls won't round-trip with getAllDisabledHosts().
+        if (hostname.indexOf(""""\0"""") != -1)
+            throw """"Invalid hostname"""";
+
         this.log(""""Saving logins for """" + hostname + """" enabled? """" + enabled);
         return this._storage.setLoginSavingEnabled(hostname, enabled);
     },
diff --git a/toolkit/components/passwordmgr/src/storage-Legacy.js b/toolkit/components/passwordmgr/src/storage-Legacy.js
index eff6022..72d0f80 100644
--- a/toolkit/components/passwordmgr/src/storage-Legacy.js
+++ b/toolkit/components/passwordmgr/src/storage-Legacy.js
@@ -177,6 +177,9 @@ LoginManagerStorage_legacy.prototype = {
      *
      */
     addLogin : function (login) {
+        // Throws if there are bogus values.
+        this._checkLoginValues(login);
+
         // We rely on using login.wrappedJSObject. addLogin is the
         // only entry point where we might get a nsLoginInfo object
         // that wasn't created by us (and so might not be a JS
@@ -272,6 +275,9 @@ LoginManagerStorage_legacy.prototype = {
      *
      */
     modifyLogin : function (oldLogin, newLogin) {
+        // Throws if there are bogus values.
+        this._checkLoginValues(newLogin);
+
         this.removeLogin(oldLogin);
         this.addLogin(newLogin);
     },
@@ -341,6 +347,14 @@ LoginManagerStorage_legacy.prototype = {
      *
      */
     setLoginSavingEnabled : function (hostname, enabled) {
+        // File format prohibits certain values. Also, nulls
+        // won't round-trip with getAllDisabledHosts().
+        if (hostname == """"."""" ||
+            hostname.indexOf(""""\r"""") != -1 ||
+            hostname.indexOf(""""\n"""") != -1 ||
+            hostname.indexOf(""""\0"""") != -1)
+            throw """"Invalid hostname"""";
+
         if (enabled)
             delete this._disabledHosts[hostname];
         else
@@ -457,6 +471,45 @@ LoginManagerStorage_legacy.prototype = {
 
 
     /*
+     * _checkLoginValues
+     *
+     * Due to the way the signons2.txt file is formatted, we need to make
+     * sure certain field values or characters do not cause the file to
+     * be parse incorrectly. Reject logins that we can't store correctly.
+     */
+    _checkLoginValues : function (aLogin) {
+        function badCharacterPresent(l, c) {
+            return ((l.formSubmitURL && l.formSubmitURL.indexOf(c) != -1) ||
+                    (l.httpRealm     && l.httpRealm.indexOf(c)     != -1) ||
+                                        l.hostname.indexOf(c)      != -1  ||
+                                        l.usernameField.indexOf(c) != -1  ||
+                                        l.passwordField.indexOf(c) != -1);
+        }
+
+        // Nulls are invalid, as they don't round-trip well.
+        // Mostly not a formatting problem, although """".\0"""" can be quirky.
+        if (badCharacterPresent(aLogin, """"\0""""))
+            throw """"login values can't contain nulls"""";
+
+        // Newlines are invalid for any field stored as plaintext.
+        if (badCharacterPresent(aLogin, """"\r"""") ||
+            badCharacterPresent(aLogin, """"\n""""))
+            throw """"login values can't contain newlines"""";
+
+        // A line with just a """"."""" can have special meaning.
+        if (aLogin.usernameField == """"."""" ||
+            aLogin.formSubmitURL == """"."""")
+            throw """"login values can't be periods"""";
+
+        // A hostname with """"\ \("""" won't roundtrip.
+        // eg host=""""foo ("""", realm=""""bar"""" --> """"foo ( (bar)""""
+        // vs host=""""foo"""", realm="""" (bar"""" --> """"foo ( (bar)""""
+        if (aLogin.hostname.indexOf("""" ("""") != -1)
+            throw """"bad parens in hostname"""";
+    },
+
+
+    /*
      * _getSignonsFile
      *
      * Determines what file to use based on prefs. Returns it as a
diff --git a/toolkit/components/passwordmgr/test/unit/head_storage_legacy_1.js b/toolkit/components/passwordmgr/test/unit/head_storage_legacy_1.js
index d4e1f43..37310e1 100644
--- a/toolkit/components/passwordmgr/test/unit/head_storage_legacy_1.js
+++ b/toolkit/components/passwordmgr/test/unit/head_storage_legacy_1.js
@@ -45,7 +45,7 @@ const LoginTest = {
    */
   initStorage : function (storage, aInputPathName,  aInputFileName,
                           aOutputPathName, aOutputFileName, aExpectedError) {
-    var e, caughtError = false;
+    var err = null;
 
     var inputFile  = Cc[""""@mozilla.org/file/local;1""""]
                             .createInstance(Ci.nsILocalFile);
@@ -63,24 +63,34 @@ const LoginTest = {
     try {
         storage.initWithFile(inputFile, outputFile);
     } catch (e) {
-        caughtError = true;
-        var err = e;
+        err = e;
     }
 
+    this.checkExpectedError(aExpectedError, err);
+
+    return;
+  },
+
+
+  /*
+   * checkExpectedError
+   *
+   * Checks to see if a thrown error was expected or not, and if it
+   * matches the expected value.
+   */
+  checkExpectedError : function (aExpectedError, aActualError) {
     if (aExpectedError) {
-        if (!caughtError)
+        if (!aActualError)
             throw """"Storage didn't throw as expected ("""" + aExpectedError + """")"""";
 
-        if (!aExpectedError.test(err))
-            throw """"Storage threw ("""" + err + """"), not ("""" + aExpectedError;
+        if (!aExpectedError.test(aActualError))
+            throw """"Storage threw ("""" + aActualError + """"), not ("""" + aExpectedError;
 
         // We got the expected error, so make a note in the test log.
         dump(""""...that error was expected.\n\n"""");
-    } else if (caughtError) {
-        throw """"Component threw unexpected error: """" + err;
+    } else if (aActualError) {
+        throw """"Component threw unexpected error: """" + aActualError;
     }
-
-    return;
   },
 
 
@@ -126,6 +136,31 @@ const LoginTest = {
         do_check_true(found);
     }
 
+  },
+
+  /*
+   * countLinesInFile
+   *
+   * Counts the number of lines in the specified file.
+   */
+  countLinesInFile : function (aPathName,  aFileName) {
+    var inputFile  = Cc[""""@mozilla.org/file/local;1""""].
+                     createInstance(Ci.nsILocalFile);
+    inputFile.initWithPath(aPathName);
+    inputFile.append(aFileName);
+
+    var inputStream = Cc[""""@mozilla.org/network/file-input-stream;1""""].
+                      createInstance(Ci.nsIFileInputStream);
+    // init the stream as RD_ONLY, -1 == default permissions.
+    inputStream.init(inputFile, 0x01, -1, null);
+    var lineStream = inputStream.QueryInterface(Ci.nsILineInputStream);
+
+    var line = { value : null };
+    var lineCount = 0;
+    while (lineStream.readLine(line)) 
+        lineCount++;
+
+    return lineCount;
   }
 
 };
diff --git a/toolkit/components/passwordmgr/test/unit/test_storage_legacy_3.js b/toolkit/components/passwordmgr/test/unit/test_storage_legacy_3.js
index 66f2129..ec05ebd 100644
--- a/toolkit/components/passwordmgr/test/unit/test_storage_legacy_3.js
+++ b/toolkit/components/passwordmgr/test/unit/test_storage_legacy_3.js
@@ -122,7 +122,6 @@ testnum++;
 testdesc = """"testing import of non-ascii username and password.""""
 LoginTest.initStorage(storage, INDIR, """"signons-381262.txt"""",
                                OUTDIR, """"output-381262-1.txt"""");
-var logins = storage.getAllLogins({});
 LoginTest.checkStorageData(storage, [], [dummyuser4]);
 
 testdesc = """"[flush and reload for verification]""""
@@ -142,7 +141,6 @@ LoginTest.checkStorageData(storage, [], [dummyuser4]);
 
 testdesc = """"[flush and reload for verification]""""
 LoginTest.initStorage(storage, OUTDIR, """"output-381262-2.txt"""");
-logins = storage.getAllLogins({});
 LoginTest.checkStorageData(storage, [], [dummyuser4]);
 
 
@@ -178,6 +176,334 @@ testdesc = """"[flush and reload for verification]"""";
 LoginTest.initStorage(storage, OUTDIR, """"output-400751-1.txt"""");
 LoginTest.checkStorageData(storage, [], [dummyuser1, dummyuser2]);
 
+/*
+ * ---------------------- Bug 394610 ----------------------
+ * Ensure input which might mess with the format or structure of
+ * the store file is appropriately filtered.
+ */
+
+/* ========== 10 ========== */
+testnum++;
+
+function tryAddUser(storage, aUser, aExpectedError) {
+    var err = null;
+    try {
+        storage.addLogin(aUser);
+    } catch (e) {
+        err = e;
+    }
+
+    LoginTest.checkExpectedError(aExpectedError, err);
+}
+
+testdesc = """"preparting to try logins with bogus values"""";
+LoginTest.initStorage(storage, INDIR, """"signons-empty.txt"""",
+                               OUTDIR, """"output-394610-1.txt"""");
+LoginTest.checkStorageData(storage, [], []);
+
+
+var failUser = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+               createInstance(Ci.nsILoginInfo);
+// init with legal values, we'll change on-the-fly
+failUser.init(""""http://failure.site.org"""",
+    """"http://failure.site.org"""", null,
+    """"username"""", """"password"""", """"uname"""", """"pword"""");
+
+
+testdesc = """"storing data values with embedded newlines.""""
+
+
+// newline in """"never for this site"""" address.
+var failHost = """"http://new\nline.never.net"""";
+var error = null;
+try {
+    storage.setLoginSavingEnabled(failHost, false);
+} catch (e) {
+    error = e;
+}
+LoginTest.checkExpectedError(/Invalid hostname/, error);
+
+// CR in """"never for this site"""" address.
+failHost = """"http://new\rline.never.net"""";
+error = null;
+try {
+    storage.setLoginSavingEnabled(failHost, false);
+} catch (e) {
+    error = e;
+}
+LoginTest.checkExpectedError(/Invalid hostname/, error);
+
+
+// check hostname
+failUser.hostname = """"http://fail\nure.site.org"""";
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.hostname = """"http://fail\rure.site.org"""";
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.hostname = """"http://failure.site.org"""";
+
+
+// check httpRealm and formSubmitURL
+failUser.httpRealm = """"http://fail\nure.site.org"""";
+failUser.formSubmitURL = null;
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.httpRealm = """"http://fail\rure.site.org"""";
+failUser.formSubmitURL = null;
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.formSubmitURL = """"http://fail\nure.site.org"""";
+failUser.httpRealm = null;
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.formSubmitURL = """"http://fail\rure.site.org"""";
+failUser.httpRealm = null;
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.formSubmitURL = """"http://failure.site.org"""";
+
+
+// check usernameField
+failUser.usernameField = """"u\nname"""";
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.usernameField = """"u\rname"""";
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.usernameField = """"uname"""";
+
+
+// check passwordField
+failUser.passwordField = """"p\nword"""";
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.passwordField = """"p\rword"""";
+tryAddUser(storage, failUser, /login values can't contain newlines/);
+
+failUser.passwordField = """"pword"""";
+
+
+// check username and password, which are OK with embedded newlines.
+failUser.username = """"user\r\nname"""";
+failUser.password = """"pass\r\nword"""";
+tryAddUser(storage, failUser, null);
+
+var numLines = LoginTest.countLinesInFile(OUTDIR, """"output-394610-1.txt"""");
+do_check_eq(numLines, 9);
+
+testdesc = """"[flush and reload for verification]""""
+LoginTest.initStorage(storage, OUTDIR, """"output-394610-1.txt"""");
+LoginTest.checkStorageData(storage, [], [failUser]);
+
+failUser.username = """"username"""";
+failUser.password = """"password"""";
+
+
+/* ========== 11 ========== */
+testnum++;
+
+testdesc = """"storing data values with special period-only value""""
+LoginTest.initStorage(storage, INDIR, """"signons-empty.txt"""",
+                               OUTDIR, """"output-394610-2.txt"""");
+LoginTest.checkStorageData(storage, [], []);
+
+
+failHost = """"."""";
+error = null;
+try {
+    storage.setLoginSavingEnabled(failHost, false);
+} catch (e) {
+    error = e;
+}
+LoginTest.checkExpectedError(/Invalid hostname/, error);
+
+
+
+// check usernameField
+failUser.usernameField = """"."""";
+tryAddUser(storage, failUser, /login values can't be periods/);
+failUser.usernameField = """"uname"""";
+
+// check formSubmitURL
+failUser.usernameField = """"."""";
+tryAddUser(storage, failUser, /login values can't be periods/);
+failUser.formSubmitURL = """"http://failure.site.org"""";
+
+testdesc = """"check added data""""
+LoginTest.checkStorageData(storage, [], []);
+var numLines = LoginTest.countLinesInFile(OUTDIR, """"output-394610-2.txt"""");
+do_check_eq(numLines, 2);
+
+testdesc = """"[flush and reload for verification]""""
+LoginTest.initStorage(storage, OUTDIR, """"output-394610-2.txt"""");
+LoginTest.checkStorageData(storage, [], []);
+
+
+/* ========== 12 ========== */
+testnum++;
+
+testdesc = """"create logins with parens in host/httpRealm""""
+
+LoginTest.initStorage(storage, INDIR, """"signons-empty.txt"""",
+                               OUTDIR, """"output-394610-3.txt"""");
+LoginTest.checkStorageData(storage, [], []);
+
+var parenUser1 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+var parenUser2 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+var parenUser3 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+var parenUser4 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+var parenUser5 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+var parenUser6 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+var parenUser7 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+var parenUser8 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+var parenUser9 = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+                 createInstance(Ci.nsILoginInfo);
+
+// realm as """"(realm"""", """"realm)"""", """"(realm)"""", """")realm(""""
+parenUser1.init(""""http://parens.site.org"""", null, """"(realm"""",
+    """"user1"""", """"pass1"""", """"uname"""", """"pword"""");
+parenUser2.init(""""http://parens.site.org"""", null, """"realm)"""",
+    """"user2"""", """"pass2"""", """"uname"""", """"pword"""");
+parenUser3.init(""""http://parens.site.org"""", null, """"(realm)"""",
+    """"user3"""", """"pass3"""", """"uname"""", """"pword"""");
+parenUser4.init(""""http://parens.site.org"""", null, """")realm("""",
+    """"user4"""", """"pass4"""", """"uname"""", """"pword"""");
+
+// hostname as """"xx(xx"""", """"xx)xx"""", """"xx()xx"""", """"xx)(xx""""
+parenUser5.init(""""http://parens(yay.site.org"""", null, """"realm"""",
+    """"user5"""", """"pass5"""", """"uname"""", """"pword"""");
+parenUser6.init(""""http://parens)yay.site.org"""", null, """"realm"""",
+    """"user6"""", """"pass6"""", """"uname"""", """"pword"""");
+parenUser7.init(""""http://parens(yay).site.org"""", null, """"realm"""",
+    """"user7"""", """"pass7"""", """"uname"""", """"pword"""");
+parenUser8.init(""""http://parens)yay(.site.org"""", null, """"realm"""",
+    """"user8"""", """"pass8"""", """"uname"""", """"pword"""");
+
+// """"xx (xx"""" as a special case
+parenUser9.init(""""http://parens (.site.org"""", null, """"realm"""",
+    """"user9"""", """"pass9"""", """"uname"""", """"pword"""");
+
+testdesc = """"add logins with parens in host/httpRealm""""
+tryAddUser(storage, parenUser1, null);
+tryAddUser(storage, parenUser2, null);
+tryAddUser(storage, parenUser3, null);
+tryAddUser(storage, parenUser4, null);
+tryAddUser(storage, parenUser5, null);
+tryAddUser(storage, parenUser6, null);
+tryAddUser(storage, parenUser7, null);
+tryAddUser(storage, parenUser8, null);
+
+// we expect this one to fail.
+tryAddUser(storage, parenUser9, /bad parens in hostname/);
+
+var parenLogins = [
+    parenUser1, parenUser2, parenUser3, parenUser4,
+    parenUser5, parenUser6, parenUser7, parenUser8
+    ];
+
+testdesc = """"check added data""""
+LoginTest.checkStorageData(storage, [], parenLogins);
+var numLines = LoginTest.countLinesInFile(OUTDIR, """"output-394610-3.txt"""");
+do_check_eq(numLines, 58);
+
+testdesc = """"[flush and reload for verification]""""
+LoginTest.initStorage(storage, OUTDIR, """"output-394610-3.txt"""");
+LoginTest.checkStorageData(storage, [], parenLogins);
+
+
+/* ========== 13 ========== */
+testnum++;
+
+testdesc = """"storing data values with embedded nulls.""""
+
+// sanity check
+do_check_eq( """"foo\0bar"""", """"foo\0bar"""");
+do_check_neq(""""foo\0bar"""", """"foobar"""");
+
+LoginTest.initStorage(storage, INDIR, """"signons-empty.txt"""",
+                               OUTDIR, """"output-394610-4.txt"""");
+LoginTest.checkStorageData(storage, [], []);
+
+var nullUser = Cc[""""@mozilla.org/login-manager/loginInfo;1""""].
+               createInstance(Ci.nsILoginInfo);
+
+nullUser.init(""""http://null.site.org"""",
+    """"http://null.site.org"""", null,
+    """"username"""", """"password"""", """"usernull"""", """"passnull"""");
+
+// null in """"never for this site"""" address.
+var nullHost = """"http://never\0X.sit.org"""";
+error = null;
+try {
+    storage.setLoginSavingEnabled(nullHost, false);
+} catch (e) {
+    error = e;
+}
+LoginTest.checkExpectedError(/Invalid hostname/, error);
+
+
+// check hostname
+nullUser.hostname = """"http://null\0X.site.org"""";
+tryAddUser(storage, nullUser, /login values can't contain nulls/);
+nullUser.hostname = """"http://null.site.org"""";
+
+
+// check httpRealm and formSubmitURL
+nullUser.httpRealm = """"http://null\0X.site.org"""";
+nullUser.formSubmitURL = null;
+tryAddUser(storage, nullUser, /login values can't contain nulls/);
+
+nullUser.formSubmitURL = """"http://null\0X.site.org"""";
+nullUser.httpRealm = null;
+tryAddUser(storage, nullUser, /login values can't contain nulls/);
+
+nullUser.formSubmitURL = """"http://null.site.org"""";
+
+
+// check usernameField
+nullUser.usernameField = """"usernull\0X"""";
+tryAddUser(storage, nullUser, /login values can't contain nulls/);
+nullUser.usernameField = """"usernull"""";
+
+// check usernameField with a special case value
+nullUser.usernameField = """".\0"""";
+tryAddUser(storage, nullUser, /login values can't contain nulls/);
+nullUser.usernameField = """"usernull"""";
+
+// check passwordField
+nullUser.passwordField = """"passnull\0X"""";
+tryAddUser(storage, nullUser, /login values can't contain nulls/);
+nullUser.passwordField = """"passnull"""";
+
+
+// check username and password, which are OK with embedded nulls.
+nullUser.username = """"user\0name"""";
+nullUser.password = """"pass\0word"""";
+tryAddUser(storage, nullUser, null);
+
+LoginTest.checkStorageData(storage, [], [nullUser]);
+var numLines = LoginTest.countLinesInFile(OUTDIR, """"output-394610-4.txt"""");
+do_check_eq(numLines, 9);
+
+testdesc = """"[flush and reload for verification]""""
+LoginTest.initStorage(storage, OUTDIR, """"output-394610-4.txt"""");
+LoginTest.checkStorageData(storage, [], [nullUser]);
+
+nullUser.username = """"username"""";
+nullUser.password = """"password"""";
+
+
+
+/* ========== end ========== */
 } catch (e) {
     throw (""""FAILED in test #"""" + testnum + """" -- """" + testdesc + """": """" + e);
 }"""
2fcb2c6ce1964dce18e6ab4ea10c14e2903b96ce,86287,369413,jruderman%hmc.edu,"Add crashtest for bug 369413.
",1197688744,"""diff --git a/dom/src/base/crashtests/369413-1.html b/dom/src/base/crashtests/369413-1.html
new file mode 100644
index 0000000..4fc3b7d
--- /dev/null
+++ b/dom/src/base/crashtests/369413-1.html
@@ -0,0 +1,12 @@
+<html>
+<head>
+<script>
+try { atob(null); } catch(e) { }
+try { atob(""""""""); } catch(e) { }
+try { atob(""""A=""""); } catch(e) { }
+try { atob(""""AA=""""); } catch(e) { }
+</script>
+</head>
+<body>
+</body>
+</html>
diff --git a/dom/src/base/crashtests/crashtests.list b/dom/src/base/crashtests/crashtests.list
index c8fc2b7..b8cb666 100644
--- a/dom/src/base/crashtests/crashtests.list
+++ b/dom/src/base/crashtests/crashtests.list
@@ -1,2 +1,3 @@
 load 327571-1.html
 load 327695-1.html
+load 369413-1.html"""
6ed2fbb93be2b4c9d107cbe6620274fb6afa1ee2,86680,306940,jruderman%hmc.edu,"Add crashtest for bug 306940.
",1197434969,"""diff --git a/layout/base/crashtests/306940-1.html b/layout/base/crashtests/306940-1.html
new file mode 100644
index 0000000..f6197c3
--- /dev/null
+++ b/layout/base/crashtests/306940-1.html
@@ -0,0 +1,50 @@
+<html>
+<head>
+
+<script>
+
+function init()
+{
+  var c1 = document.getElementById(""""c1""""); 
+  var f1 = document.getElementById(""""f1""""); 
+  var a1 = document.getElementById(""""a1""""); 
+  
+  function first()
+  {
+    f1.style.display = """"-moz-popup"""";
+    c1.style.height = """"2em"""";
+    window.status = """"A"""";
+  }
+  
+  function second()
+  {
+    c1.style.position = """"absolute"""";
+    c1.style.overflow = """"auto"""";
+    a1.style.position = """"absolute"""";
+    window.status = """"B"""";
+  }
+
+  first();
+  document.documentElement.offsetHeight;
+  second();
+}
+
+</script>
+</head>
+
+<body onload=""""init();"""">
+  <div id=""""c1"""">
+    <div id=""""f1"""">
+      <table>
+        <tr>
+          <td>
+
+            <span id=""""a1"""">Foo</span>
+          </td>
+        </tr>
+      </table>
+    </div>
+  </div>
+</body>
+
+</html>
diff --git a/layout/base/crashtests/crashtests.list b/layout/base/crashtests/crashtests.list
new file mode 100644
index 0000000..a2de903
--- /dev/null
+++ b/layout/base/crashtests/crashtests.list
@@ -0,0 +1 @@
+load 306940-1.html
diff --git a/testing/crashtest/crashtests.list b/testing/crashtest/crashtests.list
index 9512b2e..31093b3 100644
--- a/testing/crashtest/crashtests.list
+++ b/testing/crashtest/crashtests.list
@@ -3,4 +3,5 @@
 
 include ../../testing/crashtest/sanity/crashtests.list
 include ../../gfx/src/mac/crashtests/crashtests.list
+include ../../layout/base/crashtests/crashtests.list
 include ../../layout/xul/base/src/grid/crashtests/crashtests.list"""
10a39dd9bafaecf73a54d54d50bc55f015c89e93,86687,306902,jruderman%hmc.edu,"Add crashtest for bug 306902 (the first crashtest!)
",1197426395,"""diff --git a/gfx/src/mac/crashtests/306902-1.xml b/gfx/src/mac/crashtests/306902-1.xml
new file mode 100644
index 0000000..e69de29
diff --git a/gfx/src/mac/crashtests/crashtests.list b/gfx/src/mac/crashtests/crashtests.list
new file mode 100644
index 0000000..e69de29
diff --git a/testing/crashtest/crashtests.list b/testing/crashtest/crashtests.list
index 9ebd279..08373b3 100644
--- a/testing/crashtest/crashtests.list
+++ b/testing/crashtest/crashtests.list
@@ -2,3 +2,4 @@
 # DO NOT ADD CRASHTESTS INDIVIDUALLY HERE!
 
 include ../../testing/crashtest/sanity/crashtests.list
+include ../../gfx/src/mac/crashtests/crashtests.list"""
76a47e94a26d5f3feb3c19c10d032ac9e45637ff,86942,335816,smontagu%smontagu.org,"Regression test for bug 335816
",1196960686,"""diff --git a/intl/uconv/tests/Makefile.in b/intl/uconv/tests/Makefile.in
index 6691f32..b48371b 100644
--- a/intl/uconv/tests/Makefile.in
+++ b/intl/uconv/tests/Makefile.in
@@ -39,6 +39,7 @@ DEPTH		= ../../..
 topsrcdir	= @top_srcdir@
 srcdir		= @srcdir@
 VPATH		= @srcdir@
+relativesrcdir	= intl/uconv/tests
 
 include $(DEPTH)/config/autoconf.mk
 
@@ -65,6 +66,16 @@ endif
 
 SIMPLE_PROGRAMS	= $(CPPSRCS:.cpp=$(BIN_SUFFIX))
 
+ifdef MOZ_MOCHITEST
+
+_TEST_FILES =	\
+		test_bug335816.html \
+		$(NULL)
+libs:: $(_TEST_FILES)
+	$(INSTALL) $(foreach f,$^,""""$f"""") $(DEPTH)/_tests/testing/mochitest/tests/$(relativesrcdir)
+
+endif # MOZ_MOCHITEST
+
 XPCSHELL_TESTS = unit
 
 include $(topsrcdir)/config/rules.mk
diff --git a/intl/uconv/tests/test_bug335816.html b/intl/uconv/tests/test_bug335816.html
new file mode 100644
index 0000000..da9f179
--- /dev/null
+++ b/intl/uconv/tests/test_bug335816.html
@@ -0,0 +1,42 @@
+<!DOCTYPE HTML>
+<html>
+<!--
+https://bugzilla.mozilla.org/show_bug.cgi?id=335816
+-->
+<head>
+  <meta http-equiv=""""Content-type"""" content=""""text/html; charset=UTF-8"""">
+  <title>Test for Bug 335816</title>
+  <script type=""""text/javascript"""" src=""""/MochiKit/MochiKit.js""""></script>
+  <script type=""""text/javascript"""" src=""""/tests/SimpleTest/SimpleTest.js""""></script>
+  <link rel=""""stylesheet"""" type=""""text/css"""" href=""""/tests/SimpleTest/test.css"""" />
+</head>
+<body>
+<pre id=""""test"""">
+<script class=""""testbody"""" type=""""text/javascript"""">
+
+/** Test for Bug 335816 **/
+function test()
+{
+  ok($(""""display"""").innerHTML != """"Keep that breathless charm"""", """"Hidden script not executed"""");
+  SimpleTest.finish();
+}
+
+function WontYouPleaseArrangeIt()
+{
+  $(""""display"""").innerHTML = """"Keep that breathless charm"""";
+}
+
+  setTimeout(test, 100);
+  SimpleTest.waitForExplicitFinish();
+</script>
+</pre>
+<a target=""""_blank"""" href=""""https://bugzilla.mozilla.org/show_bug.cgi?id=335816"""">Mozilla Bug 335816</a>
+<p id=""""display"""">Lovely ... Never, ever change.</p>
+
+<!-- There is a UTF-8 BOM just here - - - 
+                                         |  which should not be stripped 
+                                         v      -->
+<div id=""""content"""" style=""""display: none""""><﻿script>WontYouPleaseArrangeIt();</script></div>
+</body>
+</html>
+"""
88ad619bacdd0b9aae46095370ce011114d432a8,87513,369814,dcamp%mozilla.com,"fix test bustage from bug 369814.
",1196145607,"""diff --git a/content/html/content/test/Makefile.in b/content/html/content/test/Makefile.in
index 377bb3a..f1c3a3f 100644
--- a/content/html/content/test/Makefile.in
+++ b/content/html/content/test/Makefile.in
@@ -100,6 +100,8 @@ _TEST_FILES = 	test_bug589.html \
 		test_bug390975.html \
 		test_bug391994.html \
 		test_bug392567.html \
+		bug392567.jar       \
+		bug392567.jar^headers^ \
 		test_bug394700.html \
 		test_bug401160.xhtml \
 		$(NULL)
diff --git a/content/html/content/test/bug392567.jar b/content/html/content/test/bug392567.jar
new file mode 100644
index 0000000..bca0651
Binary files /dev/null and b/content/html/content/test/bug392567.jar differ
diff --git a/content/html/content/test/bug392567.jar^headers^ b/content/html/content/test/bug392567.jar^headers^
new file mode 100644
index 0000000..28b8aa0
--- /dev/null
+++ b/content/html/content/test/bug392567.jar^headers^
@@ -0,0 +1 @@
+Content-Type: application/java-archive
diff --git a/content/html/content/test/test_bug392567.html b/content/html/content/test/test_bug392567.html
index 4087618..fb3b154 100644
--- a/content/html/content/test/test_bug392567.html
+++ b/content/html/content/test/test_bug392567.html
@@ -22,7 +22,7 @@ https://bugzilla.mozilla.org/show_bug.cgi?id=392567
 
 /** Test for Bug 392567 **/
 
-var dataUrl = """"data:application/octet-stream;base64,UEsDBBQAAgAIAO1yETcAAAAAAgAAAAAAAAAKAAAAaW5kZXguaHRtbAMAUEsBAhQAFAACAAgA7XIRNwAAAAACAAAAAAAAAAoAAAAAAAAAAAAgAAAAAAAAAGluZGV4Lmh0bWxQSwUGAAAAAAEAAQA4AAAAKgAAAAAA"""";
+var dataUrl = """"http://localhost:8888/tests/content/html/content/test/bug392567.jar"""";
 var jarUrl = """"jar:"""" + dataUrl + """"!/index.html"""";
 var httpUrl = location.href.replace(/\.html.*/, """"_404"""");
 """
0674adaa7cb216d1b9b7643d1f40ba357b3b2943,87514,369814,dcamp%mozilla.com,"Bug 369814: don't open jar: content unless served from a safe mime type.  r=bz, sr=dveditz, ui-r=beltzner
",1196141546,"""diff --git a/browser/locales/en-US/chrome/overrides/appstrings.properties b/browser/locales/en-US/chrome/overrides/appstrings.properties
index e70e763..b1b2102 100644
--- a/browser/locales/en-US/chrome/overrides/appstrings.properties
+++ b/browser/locales/en-US/chrome/overrides/appstrings.properties
@@ -53,6 +53,7 @@ deniedPortAccess=This address uses a network port which is normally used for pur
 proxyResolveFailure=Firefox is configured to use a proxy server that can't be found.
 proxyConnectFailure=Firefox is configured to use a proxy server that is refusing connections.
 contentEncodingError=The page you are trying to view cannot be shown because it uses an invalid or unsupported form of compression. Please contact the website owners to inform them of this problem.
+unsafeContentType=The page you are trying to view cannot be shown because it is contained in a file type that may not be safe to open. Please contact the website owners to inform them of this problem.
 externalProtocolTitle=External Protocol Request
 externalProtocolPrompt=An external application must be launched to handle %1$S: links.\n\n\nRequested link:\n\n%2$S\n\nApplication: %3$S\n\n\nIf you were not expecting this request it may be an attempt to exploit a weakness in that other program. Cancel this request unless you are sure it is not malicious.\n
 #LOCALIZATION NOTE (externalProtocolUnknown): The following string is shown if the application name can't be determined
diff --git a/browser/locales/en-US/chrome/overrides/netError.dtd b/browser/locales/en-US/chrome/overrides/netError.dtd
index cc93b97..60d0e47 100644
--- a/browser/locales/en-US/chrome/overrides/netError.dtd
+++ b/browser/locales/en-US/chrome/overrides/netError.dtd
@@ -66,6 +66,13 @@
 </ul>
 """">
 
+<!ENTITY unsafeContentType.title """"Unsafe File Type"""">
+<!ENTITY unsafeContentType.longDesc """"
+<ul>
+  <li>Please contact the website owners to inform them of this problem.</li>
+</ul>
+"""">
+
 <!ENTITY netReset.title """"The connection was reset"""">
 <!ENTITY netReset.longDesc """"&sharedLongDesc;"""">
 
diff --git a/docshell/base/Makefile.in b/docshell/base/Makefile.in
index 2bb7172..7e4e1ac 100644
--- a/docshell/base/Makefile.in
+++ b/docshell/base/Makefile.in
@@ -85,6 +85,7 @@ REQUIRES	= xpcom \
 		  windowwatcher \
 		  imglib2 \
 		  mimetype \
+		  jar \
 		  $(NULL)
 
 SDK_XPIDLSRCS = \
diff --git a/docshell/base/nsDocShell.cpp b/docshell/base/nsDocShell.cpp
index 3233392..56b5006 100644
--- a/docshell/base/nsDocShell.cpp
+++ b/docshell/base/nsDocShell.cpp
@@ -168,6 +168,8 @@
 
 #include """"nsITextToSubURI.h""""
 
+#include """"nsIJARChannel.h""""
+
 #include """"prlog.h""""
 #include """"prmem.h""""
 
@@ -1301,11 +1303,36 @@ nsDocShell::SetDocumentCharsetInfo(nsIDocumentCharsetInfo *
 }
 
 NS_IMETHODIMP
+nsDocShell::GetChannelIsUnsafe(PRBool *aUnsafe)
+{
+    *aUnsafe = PR_FALSE;
+
+    nsCOMPtr<nsIChannel> channel;
+    GetCurrentDocumentChannel(getter_AddRefs(channel));
+    if (!channel) {
+        return NS_OK;
+    }
+
+    nsCOMPtr<nsIJARChannel> jarChannel = do_QueryInterface(channel);
+    if (!jarChannel) {
+        return NS_OK;
+    }
+
+    return jarChannel->GetIsUnsafe(aUnsafe);
+}
+
+NS_IMETHODIMP
 nsDocShell::GetAllowPlugins(PRBool * aAllowPlugins)
 {
     NS_ENSURE_ARG_POINTER(aAllowPlugins);
 
     *aAllowPlugins = mAllowPlugins;
+    if (!mAllowPlugins) {
+        return NS_OK;
+    }
+
+    PRBool unsafe;
+    *aAllowPlugins = NS_SUCCEEDED(GetChannelIsUnsafe(&unsafe)) && !unsafe;
     return NS_OK;
 }
 
@@ -1323,6 +1350,12 @@ nsDocShell::GetAllowJavascript(PRBool * aAllowJavascript)
     NS_ENSURE_ARG_POINTER(aAllowJavascript);
 
     *aAllowJavascript = mAllowJavascript;
+    if (!mAllowJavascript) {
+        return NS_OK;
+    }
+
+    PRBool unsafe;
+    *aAllowJavascript = NS_SUCCEEDED(GetChannelIsUnsafe(&unsafe)) && !unsafe;
     return NS_OK;
 }
 
@@ -1338,6 +1371,12 @@ NS_IMETHODIMP nsDocShell::GetAllowMetaRedirects(PRBool * aReturn)
     NS_ENSURE_ARG_POINTER(aReturn);
 
     *aReturn = mAllowMetaRedirects;
+    if (!mAllowMetaRedirects) {
+        return NS_OK;
+    }
+
+    PRBool unsafe;
+    *aReturn = NS_SUCCEEDED(GetChannelIsUnsafe(&unsafe)) && !unsafe;
     return NS_OK;
 }
 
@@ -3036,6 +3075,10 @@ nsDocShell::DisplayLoadError(nsresult aError, nsIURI *aURI,
             // Bad Content Encoding.
             error.AssignLiteral(""""contentEncodingError"""");
             break;
+        case NS_ERROR_UNSAFE_CONTENT_TYPE:
+            // Channel refused to load from an unrecognized content type.
+            error.AssignLiteral(""""unsafeContentType"""");
+            break;
         }
     }
 
@@ -6553,6 +6596,25 @@ nsDocShell::InternalLoad(nsIURI * aURI,
             (aFlags & INTERNAL_LOAD_FLAGS_INHERIT_OWNER) &&
             NS_SUCCEEDED(URIInheritsSecurityContext(aURI, &inherits)) &&
             inherits) {
+
+            // Don't allow loads that would inherit our security context
+            // if this document came from an unsafe channel.
+            nsCOMPtr<nsIDocShellTreeItem> treeItem = this;
+            do {
+                nsCOMPtr<nsIDocShell> itemDocShell =
+                    do_QueryInterface(treeItem);
+                PRBool isUnsafe;
+                if (itemDocShell &&
+                    NS_SUCCEEDED(itemDocShell->GetChannelIsUnsafe(&isUnsafe)) &&
+                    isUnsafe) {
+                    return NS_ERROR_DOM_SECURITY_ERR;
+                }
+
+                nsCOMPtr<nsIDocShellTreeItem> parent;
+                treeItem->GetSameTypeParent(getter_AddRefs(parent));
+                parent.swap(treeItem);
+            } while (treeItem);
+
             owner = GetInheritedPrincipal(PR_TRUE);
         }
     }
diff --git a/docshell/base/nsIDocShell.idl b/docshell/base/nsIDocShell.idl
index 86a2935..b6d8205 100644
--- a/docshell/base/nsIDocShell.idl
+++ b/docshell/base/nsIDocShell.idl
@@ -68,7 +68,7 @@ interface nsILayoutHistoryState;
 interface nsISecureBrowserUI;
 interface nsIDOMStorage;
 
-[scriptable, uuid(10ed386d-8598-408c-b571-e75ad18edeb0)]
+[scriptable, uuid(4b00222a-8d0a-46d7-a1fe-43bd89d19324)]
 interface nsIDocShell : nsISupports
 {
   /**
@@ -448,5 +448,12 @@ interface nsIDocShell : nsISupports
    * document has been set up)
    */
   readonly attribute boolean isInUnload;
+
+  /**
+   * Find out if the currently loaded document came from a suspicious channel
+   * (such as a JAR channel where the server-returned content type isn't a
+   * known JAR type).
+   */
+  readonly attribute boolean channelIsUnsafe;
 };
 
diff --git a/docshell/base/nsWebShell.cpp b/docshell/base/nsWebShell.cpp
index c146c49..937391e 100644
--- a/docshell/base/nsWebShell.cpp
+++ b/docshell/base/nsWebShell.cpp
@@ -1196,6 +1196,7 @@ nsresult nsWebShell::EndPageLoad(nsIWebProgress *aProgress,
              aStatus == NS_ERROR_NET_RESET ||
              aStatus == NS_ERROR_MALWARE_URI ||
              aStatus == NS_ERROR_PHISHING_URI ||
+             aStatus == NS_ERROR_UNSAFE_CONTENT_TYPE ||
              NS_ERROR_GET_MODULE(aStatus) == NS_ERROR_MODULE_SECURITY) {
       DisplayLoadError(aStatus, url, nsnull, channel);
     }
diff --git a/docshell/resources/content/netError.xhtml b/docshell/resources/content/netError.xhtml
index 3584d59..ccee9cd 100644
--- a/docshell/resources/content/netError.xhtml
+++ b/docshell/resources/content/netError.xhtml
@@ -219,6 +219,7 @@
         <h1 id=""""et_proxyResolveFailure"""">&proxyResolveFailure.title;</h1>
         <h1 id=""""et_proxyConnectFailure"""">&proxyConnectFailure.title;</h1>
         <h1 id=""""et_contentEncodingError"""">&contentEncodingError.title;</h1>
+        <h1 id=""""et_unsafeContentType"""">&unsafeContentType.title;</h1>
         <h1 id=""""et_nssFailure2"""">&nssFailure2.title;</h1>
         <h1 id=""""et_nssBadCert"""">&nssBadCert.title;</h1>
         <h1 id=""""et_malwareBlocked"""">&malwareBlocked.title;</h1>
@@ -240,6 +241,7 @@
         <div id=""""ed_proxyResolveFailure"""">&proxyResolveFailure.longDesc;</div>
         <div id=""""ed_proxyConnectFailure"""">&proxyConnectFailure.longDesc;</div>
         <div id=""""ed_contentEncodingError"""">&contentEncodingError.longDesc;</div>
+        <div id=""""ed_unsafeContentType"""">&unsafeContentType.longDesc;</div>
         <div id=""""ed_nssFailure2"""">&nssFailure2.longDesc;</div>
         <div id=""""ed_nssBadCert"""">&nssBadCert.longDesc2;</div>
         <div id=""""ed_malwareBlocked"""">&malwareBlocked.longDesc;</div>
diff --git a/docshell/test/Makefile.in b/docshell/test/Makefile.in
index e58d2da..745bc73 100644
--- a/docshell/test/Makefile.in
+++ b/docshell/test/Makefile.in
@@ -54,6 +54,8 @@ include $(topsrcdir)/config/rules.mk
 
 _TEST_FILES = \
 		test_bug344861.html \
+		test_bug369814.html \
+		bug369814.zip       \
 		test_bug384014.html \
 		test_bug387979.html \
 		test_bug404548.html \
diff --git a/docshell/test/bug369814.zip b/docshell/test/bug369814.zip
new file mode 100644
index 0000000..86b9c8c
Binary files /dev/null and b/docshell/test/bug369814.zip differ
diff --git a/docshell/test/test_bug369814.html b/docshell/test/test_bug369814.html
new file mode 100644
index 0000000..85a7b3b
--- /dev/null
+++ b/docshell/test/test_bug369814.html
@@ -0,0 +1,204 @@
+<!DOCTYPE HTML>
+<html>
+<!--
+https://bugzilla.mozilla.org/show_bug.cgi?id=369814
+-->
+<head>
+  <title>Test for Bug 369814</title>
+  <script type=""""text/javascript"""" src=""""/MochiKit/MochiKit.js""""></script>
+  <script type=""""text/javascript"""" src=""""/tests/SimpleTest/SimpleTest.js""""></script>
+  <script type=""""text/javascript"""" src=""""/tests/SimpleTest/EventUtils.js""""></script>
+  <link rel=""""stylesheet"""" type=""""text/css"""" href=""""/tests/SimpleTest/test.css"""" />
+</head>
+<body>
+<a target=""""_blank"""" href=""""https://bugzilla.mozilla.org/show_bug.cgi?id=384014"""">Mozilla Bug 369814</a>
+
+<p>
+
+<iframe id=""""testFrame""""></iframe>
+
+<pre id=""""test"""">
+<script class=""""testbody"""" type=""""text/javascript"""">
+
+/** Tests for Bug 369814 **/
+
+SimpleTest.waitForExplicitFinish();
+
+// Because child scripts won't be able to run to tell us they're done,
+// we need to just wait for them.  Wait this amount of time before checking
+// the results.
+const gLoadTimeout = 3000;
+
+var Ci = Components.interfaces;
+
+var gCurrentTest;
+var gTargetWindow;
+var gNumPokes;
+var gPrefValue;
+
+var gTestFrame = document.getElementById('testFrame');
+
+/**
+ * Called by documents loaded from jar files to indicate that they can access
+ * this document.
+ */
+function poke(description) {
+  ok(false, gCurrentTest['name'] + """": got unexpected poke: """" + description);
+  gNumPokes++;
+}
+
+function loadEvent(window, callback)
+{
+  var fn = function() {
+    window.removeEventListener(""""load"""", fn, false);
+    callback();
+  };
+  window.addEventListener(""""load"""", fn, false);
+}
+
+function loadTestTarget(callback)
+{
+  gTargetWindow = window.open(""""http://localhost:8888"""", """"bug369814target"""");
+  loadEvent(gTargetWindow, callback);
+}
+
+function closeTestTarget()
+{
+  gTargetWindow.close();
+  gTargetWindow = null;
+}
+
+function loadErrorTest(test)
+{
+  gTestFrame.src = test['url'];
+
+  // Give the frame a chance to fail at loading
+  setTimeout(function() {
+      // XXX: There doesn't seem to be a reliable check for """"got an error,""""
+      // but reaching in to an error document will throw an exception
+      var errorPage;
+      try {
+        var item = gTestFrame.contentDocument.getElementById(gCurrentTest['data-iframe']);
+        errorPage = false;
+      } catch (e) {
+        errorPage = true;
+      }
+      ok(errorPage, gCurrentTest[""""name""""] + """": should block a suspicious JAR load."""");
+
+      finishTest();
+    }, gLoadTimeout);
+}
+
+function iframeTest(test) {
+  gTestFrame.src = test['url'];
+  loadEvent(gTestFrame, function() {
+      finishTest();
+    });
+}
+
+function refreshTest(test) {
+  gTestFrame.src = test['url'];
+  loadEvent(gTestFrame, function() {
+      // Wait for the frame to try and refresh
+      // XXX: a """"blocked redirect"""" signal would be needed to get rid of
+      // this timeout.
+      setTimeout(function() {
+          finishTest();
+        }, gLoadTimeout);
+    });
+}
+
+function anchorTest(test) {
+  loadTestTarget(function() {
+      gTestFrame.src = test['url'];
+      loadEvent(gTestFrame, function() {
+        sendMouseEvent({type:'click'}, 'target', gTestFrame.contentWindow);
+        sendMouseEvent({type:'click'}, 'notarget', gTestFrame.contentWindow);
+
+        // Give the clicks a chance to load
+        setTimeout(function() {
+            closeTestTarget();
+            finishTest();
+          }, gLoadTimeout);
+        });
+    });
+}
+
+var gTests = [
+  { """"name"""" : """"iframes.html loaded from non-jar type, pref disabled"""",
+    """"url"""" : """"jar:http://localhost:8888/tests/docshell/test/bug369814.zip!/iframes.html"""",
+    """"pref"""" : false,
+    """"pokes"""" : { },
+    """"func"""" : loadErrorTest,
+  },
+  { """"name"""" : """"refresh.html loaded from non-jar type, pref enabled"""",
+    """"url"""" : """"jar:http://localhost:8888/tests/docshell/test/bug369814.zip!/refresh.html"""",
+    """"pref"""" : true,
+    """"pokes"""" : { },
+    """"func"""" : refreshTest,
+  },
+  { """"name"""" : """"iframes.html loaded from non-jar type, pref enabled"""",
+    """"url"""" : """"jar:http://localhost:8888/tests/docshell/test/bug369814.zip!/iframes.html"""",
+    """"pref"""" : true,
+    """"pokes"""" : { },
+    """"func"""" : iframeTest,
+  },
+  { """"name"""" : """"anchors.html loaded from non-jar type, pref enabled"""",
+    """"url"""" : """"jar:http://localhost:8888/tests/docshell/test/bug369814.zip!/anchors.html"""",
+    """"pref"""" : true,
+    """"pokes"""" : { },
+    """"func"""" : anchorTest,
+  },
+];
+
+var gNextTest = 0;
+
+function runNextTest()
+{
+  netscape.security.PrivilegeManager.enablePrivilege(""""UniversalXPConnect"""");
+  var prefs = Components.classes[""""@mozilla.org/preferences-service;1""""].
+    getService(Components.interfaces.nsIPrefBranch);
+
+  if (gNextTest < gTests.length) {
+    gCurrentTest = gTests[gNextTest++];
+    gNumPokes = 0;
+
+    prefs.setBoolPref(""""network.jar.open-unsafe-types"""", gCurrentTest['pref']);
+
+    gCurrentTest['func'](gCurrentTest);
+  } else {
+    // Put back the pref value we had at test start
+    prefs.setBoolPref(""""network.jar.open-unsafe-types"""", gPrefValue);
+    SimpleTest.finish();
+  }
+}
+
+function finishTest()
+{
+    netscape.security.PrivilegeManager.enablePrivilege(""""UniversalXPConnect"""");
+    var prefs = Components.classes[""""@mozilla.org/preferences-service;1""""].
+      getService(Components.interfaces.nsIPrefBranch);
+    prefs.setBoolPref(""""network.jar.open-unsafe-types"""", false);
+
+  if (gNumPokes == 0) {
+    ok(true, gCurrentTest[""""name""""] + """": no unexpected pokes"""");
+  }
+
+  runNextTest();
+}
+
+function startTests()
+{
+  netscape.security.PrivilegeManager.enablePrivilege(""""UniversalXPConnect"""");
+  var prefs = Components.classes[""""@mozilla.org/preferences-service;1""""].
+    getService(Components.interfaces.nsIPrefBranch);
+  gPrefValue = prefs.getBoolPref(""""network.jar.open-unsafe-types"""");
+}
+
+addLoadEvent(runNextTest);
+
+</script>
+</pre>
+</body>
+</html>
+
diff --git a/dom/locales/en-US/chrome/appstrings.properties b/dom/locales/en-US/chrome/appstrings.properties
index 2efa1b8..21b2f05 100644
--- a/dom/locales/en-US/chrome/appstrings.properties
+++ b/dom/locales/en-US/chrome/appstrings.properties
@@ -53,6 +53,7 @@ deniedPortAccess=Access to the port number given has been disabled for security
 proxyResolveFailure=The proxy server you have configured could not be found. Please check your proxy settings and try again.
 proxyConnectFailure=The connection was refused when attempting to contact the proxy server you have configured. Please check your proxy settings and try again.
 contentEncodingError=The page you are trying to view cannot be shown because it uses an invalid or unsupported form of compression. Please contact the website owners to inform them of this problem.
+unsafeContentType=The page you are trying to view cannot be shown because it is contained in a file type that may not be safe to open. Please contact the website owners to inform them of this problem.
 externalProtocolTitle=External Protocol Request
 externalProtocolPrompt=An external application must be launched to handle %1$S: links.\n\n\nRequested link:\n\n%2$S\n\nApplication: %3$S\n\n\nIf you were not expecting this request it may be an attempt to exploit a weakness in that other program. Cancel this request unless you are sure it is not malicious.\n
 #LOCALIZATION NOTE (externalProtocolUnknown): The following string is shown if the application name can't be determined
diff --git a/dom/locales/en-US/chrome/netError.dtd b/dom/locales/en-US/chrome/netError.dtd
index 43e27ea..716be04 100644
--- a/dom/locales/en-US/chrome/netError.dtd
+++ b/dom/locales/en-US/chrome/netError.dtd
@@ -30,6 +30,13 @@
 <!ENTITY contentEncodingError.title """"Content Encoding Error"""">
 <!ENTITY contentEncodingError.longDesc """"<p>The page you are trying to view cannot be shown because it uses an invalid or unsupported form of compression.</p><ul><li>Please contact the website owners to inform them of this problem.</li></ul>"""">
 
+<!ENTITY unsafeContentType.title """"Unsafe File Type"""">
+<!ENTITY unsafeContentType.longDesc """"
+<ul>
+  <li>Please contact the website owners to inform them of this problem.</li>
+</ul>
+"""">
+
 <!ENTITY netReset.title """"Connection Interrupted"""">
 <!ENTITY netReset.longDesc """"<p>The network link was interrupted while negotiating a connection. Please try again.</p>"""">
 
diff --git a/modules/libjar/nsIJARChannel.idl b/modules/libjar/nsIJARChannel.idl
index a234dab..ee4063b 100644
--- a/modules/libjar/nsIJARChannel.idl
+++ b/modules/libjar/nsIJARChannel.idl
@@ -37,7 +37,14 @@
 
 #include """"nsIChannel.idl""""
 
-[scriptable, uuid(c7e410d1-85f2-11d3-9f63-006008a6efe9)]
+[scriptable, uuid(6e6cc56d-51eb-4299-a795-dcfd1229ab3d)]
 interface nsIJARChannel : nsIChannel 
 {
+    /**
+     * Returns TRUE if the JAR file is not safe (if the content type reported
+     * by the server for a remote JAR is not of an expected type).  Scripting,
+     * redirects, and plugins should be disabled when loading from this
+     * channel.
+     */
+    readonly attribute boolean isUnsafe;
 };
diff --git a/modules/libjar/nsJARChannel.cpp b/modules/libjar/nsJARChannel.cpp
index a4e1460..d90fb12 100644
--- a/modules/libjar/nsJARChannel.cpp
+++ b/modules/libjar/nsJARChannel.cpp
@@ -44,6 +44,8 @@
 #include """"nsNetUtil.h""""
 #include """"nsInt64.h""""
 #include """"nsEscape.h""""
+#include """"nsIPrefService.h""""
+#include """"nsIPrefBranch.h""""
 
 #include """"nsIScriptSecurityManager.h""""
 #include """"nsIPrincipal.h""""
@@ -222,6 +224,7 @@ nsJARChannel::nsJARChannel()
     , mLoadFlags(LOAD_NORMAL)
     , mStatus(NS_OK)
     , mIsPending(PR_FALSE)
+    , mIsUnsafe(PR_TRUE)
     , mJarInput(nsnull)
 {
 #if defined(PR_LOGGING)
@@ -323,6 +326,8 @@ nsJARChannel::EnsureJarInput(PRBool blocking)
     }
 
     if (mJarFile) {
+        mIsUnsafe = PR_FALSE;
+
         // NOTE: we do not need to deal with mSecurityInfo here,
         // because we're loading from a local file
         rv = CreateJarInput(gJarHandler->JarCache());
@@ -337,7 +342,7 @@ nsJARChannel::EnsureJarInput(PRBool blocking)
         if (NS_SUCCEEDED(rv))
             rv = NS_OpenURI(mDownloader, nsnull, mJarBaseURI, nsnull,
                             mLoadGroup, mCallbacks,
-                            mLoadFlags & ~LOAD_DOCUMENT_URI);
+                            mLoadFlags & ~(LOAD_DOCUMENT_URI | LOAD_CALL_CONTENT_SNIFFERS));
     }
     return rv;
 
@@ -644,6 +649,9 @@ nsJARChannel::Open(nsIInputStream **stream)
     NS_ENSURE_TRUE(!mJarInput, NS_ERROR_IN_PROGRESS);
     NS_ENSURE_TRUE(!mIsPending, NS_ERROR_IN_PROGRESS);
 
+    mJarFile = nsnull;
+    mIsUnsafe = PR_TRUE;
+
     nsresult rv = EnsureJarInput(PR_TRUE);
     if (NS_FAILED(rv)) return rv;
 
@@ -666,6 +674,9 @@ nsJARChannel::AsyncOpen(nsIStreamListener *listener, nsISupports *ctx)
     NS_ENSURE_ARG_POINTER(listener);
     NS_ENSURE_TRUE(!mIsPending, NS_ERROR_IN_PROGRESS);
 
+    mJarFile = nsnull;
+    mIsUnsafe = PR_TRUE;
+
     // Initialize mProgressSink
     NS_QueryNotificationCallbacks(mCallbacks, mLoadGroup, mProgressSink);
 
@@ -691,6 +702,16 @@ nsJARChannel::AsyncOpen(nsIStreamListener *listener, nsISupports *ctx)
 }
 
 //-----------------------------------------------------------------------------
+// nsIJARChannel
+//-----------------------------------------------------------------------------
+NS_IMETHODIMP
+nsJARChannel::GetIsUnsafe(PRBool *isUnsafe)
+{
+    *isUnsafe = mIsUnsafe;
+    return NS_OK;
+}
+
+//-----------------------------------------------------------------------------
 // nsIDownloadObserver
 //-----------------------------------------------------------------------------
 
@@ -729,6 +750,47 @@ nsJARChannel::OnDownloadComplete(nsIDownloader *downloader,
             }
             status = rv;
         }
+
+        nsCOMPtr<nsIHttpChannel> httpChannel(do_QueryInterface(channel));
+        if (httpChannel) {
+            // We only want to run scripts if the server really intended to
+            // send us a JAR file.  Check the server-supplied content type for
+            // a JAR type.
+            nsCAutoString header;
+            httpChannel->GetResponseHeader(NS_LITERAL_CSTRING(""""Content-Type""""),
+                                           header);
+
+            nsCAutoString contentType;
+            nsCAutoString charset;
+            NS_ParseContentType(header, contentType, charset);
+
+            mIsUnsafe = !contentType.EqualsLiteral(""""application/java-archive"""") &&
+                        !contentType.EqualsLiteral(""""application/x-jar"""");
+        } else {
+            nsCOMPtr<nsIJARChannel> innerJARChannel(do_QueryInterface(channel));
+            if (innerJARChannel) {
+                PRBool unsafe;
+                innerJARChannel->GetIsUnsafe(&unsafe);
+                mIsUnsafe = unsafe;
+            }
+        }
+
+        // XXX: THIS IS TEMPORARY
+        //mIsUnsafe = PR_FALSE;
+    }
+
+    if (mIsUnsafe) {
+        PRBool allowUnpack = PR_FALSE;
+
+        nsCOMPtr<nsIPrefBranch> prefs =
+            do_GetService(NS_PREFSERVICE_CONTRACTID);
+        if (prefs) {
+            prefs->GetBoolPref(""""network.jar.open-unsafe-types"""", &allowUnpack);
+        }
+
+        if (!allowUnpack) {
+            status = NS_ERROR_UNSAFE_CONTENT_TYPE;
+        }
     }
 
     if (NS_SUCCEEDED(status)) {
@@ -745,6 +807,7 @@ nsJARChannel::OnDownloadComplete(nsIDownloader *downloader,
     }
 
     if (NS_FAILED(status)) {
+        mStatus = status;
         OnStartRequest(nsnull, nsnull);
         OnStopRequest(nsnull, nsnull, status);
     }
diff --git a/modules/libjar/nsJARChannel.h b/modules/libjar/nsJARChannel.h
index a015c5d..719b298 100644
--- a/modules/libjar/nsJARChannel.h
+++ b/modules/libjar/nsJARChannel.h
@@ -97,7 +97,8 @@ private:
     PRInt32                         mContentLength;
     PRUint32                        mLoadFlags;
     nsresult                        mStatus;
-    PRBool                          mIsPending;
+    PRPackedBool                    mIsPending;
+    PRPackedBool                    mIsUnsafe;
 
     nsJARInputThunk                *mJarInput;
     nsCOMPtr<nsIStreamListener>     mDownloader;
diff --git a/modules/libpref/src/init/all.js b/modules/libpref/src/init/all.js
index 1f4751b..9c51c53 100644
--- a/modules/libpref/src/init/all.js
+++ b/modules/libpref/src/init/all.js
@@ -613,6 +613,11 @@ pref(""""network.http.pipelining.maxrequests"""" , 4);
 
 // </http>
 
+// If false, remote JAR files that are served with a content type other than
+// application/java-archive or application/x-jar will not be opened
+// by the jar channel.
+pref(""""network.jar.open-unsafe-types"""", false);
+
 // This preference controls whether or not internationalized domain names (IDN)
 // are handled.  IDN requires a nsIIDNService implementation.
 pref(""""network.enableIDN"""", true);
diff --git a/netwerk/base/public/nsNetError.h b/netwerk/base/public/nsNetError.h
index 65b1534..f3f8bda 100644
--- a/netwerk/base/public/nsNetError.h
+++ b/netwerk/base/public/nsNetError.h
@@ -232,6 +232,13 @@
 #define NS_ERROR_REDIRECT_LOOP \
     NS_ERROR_GENERATE_FAILURE(NS_ERROR_MODULE_NETWORK, 31)
 
+/**
+ * The request failed because the content type returned by the server was
+ * not a type expected by the channel (for nested channels such as the JAR
+ * channel).
+ */
+#define NS_ERROR_UNSAFE_CONTENT_TYPE \
+    NS_ERROR_GENERATE_FAILURE(NS_ERROR_MODULE_NETWORK, 74)
 
 /******************************************************************************
  * FTP specific error codes:
diff --git a/testing/mochitest/tests/SimpleTest/EventUtils.js b/testing/mochitest/tests/SimpleTest/EventUtils.js
index 9852551..2a13d8d 100644
--- a/testing/mochitest/tests/SimpleTest/EventUtils.js
+++ b/testing/mochitest/tests/SimpleTest/EventUtils.js
@@ -15,20 +15,24 @@
  *
  * sendMouseEvent({type:'click'}, 'node');
  */
-function sendMouseEvent(aEvent, aTarget) {
+function sendMouseEvent(aEvent, aTarget, aWindow) {
   if (['click', 'mousedown', 'mouseup', 'mouseover', 'mouseout'].indexOf(aEvent.type) == -1) {
     throw new Error(""""sendMouseEvent doesn't know about event type '""""+aEvent.type+""""'"""");
   }
 
+  if (!aWindow) {
+    aWindow = window;
+  }
+
   // For events to trigger the UA's default actions they need to be """"trusted""""
   netscape.security.PrivilegeManager.enablePrivilege('UniversalBrowserWrite');
 
-  var event = document.createEvent('MouseEvent');
+  var event = aWindow.document.createEvent('MouseEvent');
 
   var typeArg          = aEvent.type;
   var canBubbleArg     = true;
   var cancelableArg    = true;
-  var viewArg          = window;
+  var viewArg          = aWindow;
   var detailArg        = aEvent.detail        || (aEvent.type == 'click'     ||
                                                   aEvent.type == 'mousedown' ||
                                                   aEvent.type == 'mouseup' ? 1 : 0);
@@ -48,7 +52,7 @@ function sendMouseEvent(aEvent, aTarget) {
                        ctrlKeyArg, altKeyArg, shiftKeyArg, metaKeyArg,
                        buttonArg, relatedTargetArg);
 
-  document.getElementById(aTarget).dispatchEvent(event);
+  aWindow.document.getElementById(aTarget).dispatchEvent(event);
 }
 
 /**"""
393e539ce7cf44d7b0a672f4e7019514cb8e91f1,88448,395623,bzbarsky%mit.edu,"Implement hixie's first-line proposal: only inherit properties that inherit by
default from ::first-line.  Inherit the reset properties from its style parent
(which is the node that we'd inherit from if the ::first-line were not there).
Bug 395623, r+sr=dbaron, a=beltzner
",1194455581,"""diff --git a/layout/base/nsFrameManager.cpp b/layout/base/nsFrameManager.cpp
index a6147b9..b6d1c63 100644
--- a/layout/base/nsFrameManager.cpp
+++ b/layout/base/nsFrameManager.cpp
@@ -853,7 +853,7 @@ VerifyStyleTree(nsPresContext* aPresContext, nsIFrame* aFrame,
     while (child) {
       if (!(child->GetStateBits() & NS_FRAME_OUT_OF_FLOW)
           || (child->GetStateBits() & NS_FRAME_IS_OVERFLOW_CONTAINER)) {
-        // only do frames that are in flow
+        // only do frames that don't have placeholders
         if (nsGkAtoms::placeholderFrame == child->GetType()) { 
           // placeholder: first recurse and verify the out of flow frame,
           // then verify the placeholder's context
@@ -905,6 +905,15 @@ nsFrameManager::DebugVerifyStyleTree(nsIFrame* aFrame)
 nsresult
 nsFrameManager::ReParentStyleContext(nsIFrame* aFrame)
 {
+  if (nsGkAtoms::placeholderFrame == aFrame->GetType()) {
+    // Also reparent the out-of-flow
+    nsIFrame* outOfFlow =
+      nsPlaceholderFrame::GetRealFrameForPlaceholder(aFrame);
+    NS_ASSERTION(outOfFlow, """"no out-of-flow frame"""");
+
+    ReParentStyleContext(outOfFlow);
+  }
+
   // DO NOT verify the style tree before reparenting.  The frame
   // tree has already been changed, so this check would just fail.
   nsStyleContext* oldContext = aFrame->GetStyleContext();
@@ -938,6 +947,16 @@ nsFrameManager::ReParentStyleContext(nsIFrame* aFrame)
                                                  newParentContext);
     if (newContext) {
       if (newContext != oldContext) {
+        // Make sure to call CalcStyleDifference so that the new context ends
+        // up resolving all the structs the old context resolved.
+        nsChangeHint styleChange = oldContext->CalcStyleDifference(newContext);
+        // The style change is always 0 because we have the same rulenode and
+        // CalcStyleDifference optimizes us away.  That's OK, though:
+        // reparenting should never trigger a frame reconstruct, and whenever
+        // it's happening we already plan to reflow and repaint the frames.
+        NS_ASSERTION(!(styleChange & nsChangeHint_ReconstructFrame),
+                     """"Our frame tree is likely to be bogus!"""");
+        
         PRInt32 listIndex = 0;
         nsIAtom* childList = nsnull;
         nsIFrame* child;
@@ -947,27 +966,22 @@ nsFrameManager::ReParentStyleContext(nsIFrame* aFrame)
         do {
           child = aFrame->GetFirstChild(childList);
           while (child) {
-            // only do frames that are in flow
-            if (!(child->GetStateBits() & NS_FRAME_OUT_OF_FLOW)
-                 || (child->GetStateBits() & NS_FRAME_IS_OVERFLOW_CONTAINER)) {
+            // only do frames that don't have placeholders
+            if ((!(child->GetStateBits() & NS_FRAME_OUT_OF_FLOW) ||
+                 (child->GetStateBits() & NS_FRAME_IS_OVERFLOW_CONTAINER)) &&
+                child != providerChild) {
+#ifdef DEBUG
               if (nsGkAtoms::placeholderFrame == child->GetType()) {
-                // get out of flow frame and recurse there
                 nsIFrame* outOfFlowFrame =
                   nsPlaceholderFrame::GetRealFrameForPlaceholder(child);
                 NS_ASSERTION(outOfFlowFrame, """"no out-of-flow frame"""");
 
                 NS_ASSERTION(outOfFlowFrame != providerChild,
                              """"Out of flow provider?"""");
-
-                ReParentStyleContext(outOfFlowFrame);
-
-                // reparent placeholder too
-                ReParentStyleContext(child);
-              }
-              else if (child != providerChild) {
-                // regular frame, not reparented yet
-                ReParentStyleContext(child);
               }
+#endif
+
+              ReParentStyleContext(child);
             }
 
             child = child->GetNextSibling();
@@ -1001,6 +1015,21 @@ nsFrameManager::ReParentStyleContext(nsIFrame* aFrame)
                                                               oldExtraContext,
                                                               newContext);
             if (newExtraContext) {
+              if (newExtraContext != oldExtraContext) {
+                // Make sure to call CalcStyleDifference so that the new
+                // context ends up resolving all the structs the old context
+                // resolved.
+                styleChange =
+                  oldExtraContext->CalcStyleDifference(newExtraContext);
+                // The style change is always 0 because we have the same
+                // rulenode and CalcStyleDifference optimizes us away.  That's
+                // OK, though: reparenting should never trigger a frame
+                // reconstruct, and whenever it's happening we already plan to
+                // reflow and repaint the frames.
+                NS_ASSERTION(!(styleChange & nsChangeHint_ReconstructFrame),
+                             """"Our frame tree is likely to be bogus!"""");
+              }
+              
               aFrame->SetAdditionalStyleContext(contextIndex, newExtraContext);
             }
           }
diff --git a/layout/reftests/first-line/basic-1.html b/layout/reftests/first-line/basic-1.html
new file mode 100644
index 0000000..e59148a
--- /dev/null
+++ b/layout/reftests/first-line/basic-1.html
@@ -0,0 +1,12 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <style>
+      body { color: red }
+      body::first-line { color: green; }
+    </style>
+  </head>
+  <body>
+    This should be green
+  </body>
+</html>
diff --git a/layout/reftests/first-line/basic-ref.html b/layout/reftests/first-line/basic-ref.html
new file mode 100644
index 0000000..fb93056
--- /dev/null
+++ b/layout/reftests/first-line/basic-ref.html
@@ -0,0 +1,11 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <style>
+      body { color: green }
+    </style>
+  </head>
+  <body>
+    This should be green
+  </body>
+</html>
diff --git a/layout/reftests/first-line/out-of-flow-1-ref.html b/layout/reftests/first-line/out-of-flow-1-ref.html
new file mode 100644
index 0000000..077268d
--- /dev/null
+++ b/layout/reftests/first-line/out-of-flow-1-ref.html
@@ -0,0 +1,12 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <style>
+      div { color: green }
+    </style>
+  </head>
+  <body>
+    <div><span style=""""float: left"""">This should be green</span></div>
+  </body>
+</html>
+
diff --git a/layout/reftests/first-line/out-of-flow-1a.html b/layout/reftests/first-line/out-of-flow-1a.html
new file mode 100644
index 0000000..ba6dc25
--- /dev/null
+++ b/layout/reftests/first-line/out-of-flow-1a.html
@@ -0,0 +1,13 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <style>
+      div { color: green }
+      div::first-line { color: red }
+    </style>
+  </head>
+  <body>
+    <div><span style=""""float: left"""">This should be green</span></div>
+  </body>
+</html>
+
diff --git a/layout/reftests/first-line/out-of-flow-1b.html b/layout/reftests/first-line/out-of-flow-1b.html
new file mode 100644
index 0000000..02b1a84
--- /dev/null
+++ b/layout/reftests/first-line/out-of-flow-1b.html
@@ -0,0 +1,12 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <style>
+      div { color: red }
+      div::first-line { color: green }
+    </style>
+  </head>
+  <body>
+    <div><span><span style=""""float: left"""">This should be green</span></span></div>
+  </body>
+</html>
diff --git a/layout/reftests/first-line/out-of-flow-1c.html b/layout/reftests/first-line/out-of-flow-1c.html
new file mode 100644
index 0000000..a49156e
--- /dev/null
+++ b/layout/reftests/first-line/out-of-flow-1c.html
@@ -0,0 +1,16 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <style>
+      div { color: green }
+      div::first-line { color: red }
+    </style>
+  </head>
+  <body onload=""""document.getElementById('test').className = ''"""">
+    <div>
+      <span class=""""some value"""" style=""""float: left"""">
+        This should be green
+      </span>
+    </div>
+  </body>
+</html>
diff --git a/layout/reftests/first-line/out-of-flow-1d.html b/layout/reftests/first-line/out-of-flow-1d.html
new file mode 100644
index 0000000..61228fdb2
--- /dev/null
+++ b/layout/reftests/first-line/out-of-flow-1d.html
@@ -0,0 +1,22 @@
+<!DOCTYPE html>
+<html>
+  <head>
+    <style>
+      div { color: green }
+      div::first-line { color: red }
+    </style>
+    <script>
+      function runTest() {
+        var s = document.createElement(""""span"""");
+        s.setAttribute(""""style"""", """"float: left"""");
+        s.appendChild(document.createTextNode(""""This should be green""""));
+        var i = document.getElementById(""""i"""");
+        i.parentNode.insertBefore(s, i);
+      }
+    </script>
+  </head>
+  <body onload=""""runTest()"""">
+    <div><span id=""""i""""></span></div>
+  </body>
+</html>
+
diff --git a/layout/reftests/first-line/reftest.list b/layout/reftests/first-line/reftest.list
new file mode 100644
index 0000000..c983eb3
--- /dev/null
+++ b/layout/reftests/first-line/reftest.list
@@ -0,0 +1,21 @@
+# basic functionality
+== basic-1.html basic-ref.html
+
+# handling of out-of-flows when ::first-line happens
+== out-of-flow-1a.html out-of-flow-1-ref.html
+== out-of-flow-1b.html out-of-flow-1-ref.html
+== out-of-flow-1c.html out-of-flow-1-ref.html
+fails == out-of-flow-1d.html out-of-flow-1-ref.html # bug 396645
+
+# stress-tests
+== stress-1.html about:blank # assertion test
+== stress-2.html stress-2-ref.html # assertion + rendering test
+== stress-3.html about:blank # assertion test
+== stress-4.html about:blank # assertion/crash test
+== stress-5.html about:blank # assertion/crash test
+== stress-6.html about:blank # assertion/crash test
+== stress-7.html about:blank # assertion/crash test
+== stress-8.html stress-8-ref.html # assertion/crash test
+== stress-9.html stress-9-ref.html # assertion/crash test
+== stress-10.html about:blank # crash test
+== stress-11.xhtml stress-11-ref.xhtml # crash test
diff --git a/layout/reftests/first-line/stress-1.html b/layout/reftests/first-line/stress-1.html
new file mode 100644
index 0000000..1add82e
--- /dev/null
+++ b/layout/reftests/first-line/stress-1.html
@@ -0,0 +1,41 @@
+<!DOCTYPE html>
+<html class=""""reftest-wait"""">
+<head>
+
+<style>
+  .fl:first-line { }
+  .inh { position: inherit; }
+  .abs { position: absolute; }
+  body { visibility: hidden; }
+</style>
+ 
+<script>
+
+function boom()
+{
+  x = document.getElementById(""""x"""");
+  y = document.getElementById(""""y"""");
+
+  x.setAttribute('class', """"fl abs"""");
+  y.setAttribute('class', """"inh"""");
+  setTimeout(boom2, 5);
+}
+
+function boom2()
+{
+  y.setAttribute('class', """"abs"""");
+  document.body.offsetWidth;
+  document.documentElement.className = """""""";
+}
+
+</script>
+
+</head>
+
+<body onload=""""setTimeout(boom, 5);"""">
+<div id=""""x"""">
+  <p id=""""y"""">foo</p>
+</div>
+</body>
+
+</html>
diff --git a/layout/reftests/first-line/stress-10.html b/layout/reftests/first-line/stress-10.html
new file mode 100644
index 0000000..656f8f8
--- /dev/null
+++ b/layout/reftests/first-line/stress-10.html
@@ -0,0 +1,5 @@
+<style>
+*::first-line { }
+*::before { content:""""before text"""";}
+</style>
+<object style=""""position: fixed;-moz-column-count: 100;""""><ol style=""""float: right;"""">
diff --git a/layout/reftests/first-line/stress-11-ref.xhtml b/layout/reftests/first-line/stress-11-ref.xhtml
new file mode 100644
index 0000000..6249792
--- /dev/null
+++ b/layout/reftests/first-line/stress-11-ref.xhtml
@@ -0,0 +1,9 @@
+<html xmlns=""""http://www.w3.org/1999/xhtml"""">
+<style>
+*::before { content:""""--""""; }
+</style>
+
+<caption></caption>
+<span></span>
+This should not crash Mozilla
+</html>
diff --git a/layout/reftests/first-line/stress-11.xhtml b/layout/reftests/first-line/stress-11.xhtml
new file mode 100644
index 0000000..261250a
--- /dev/null
+++ b/layout/reftests/first-line/stress-11.xhtml
@@ -0,0 +1,18 @@
+<html xmlns=""""http://www.w3.org/1999/xhtml"""">
+<style>
+*::first-line { }
+*::before { content:""""--""""; }
+</style>
+<script>
+function doe() {
+document.getElementsByTagName('caption')[0].removeAttribute('style');
+document.documentElement.offsetHeight;
+document.getElementsByTagName('span')[0].removeAttribute('style');
+}
+window.onload=doe;
+</script>
+
+<caption style=""""float: left;""""></caption>
+<span style=""""float: right;""""></span>
+This should not crash Mozilla
+</html>
diff --git a/layout/reftests/first-line/stress-2-ref.html b/layout/reftests/first-line/stress-2-ref.html
new file mode 100644
index 0000000..586010e
--- /dev/null
+++ b/layout/reftests/first-line/stress-2-ref.html
@@ -0,0 +1,10 @@
+<!DOCTYPE html>
+<html>
+<body>
+
+<div>
+  <b><span>Foo</span></b>
+</div>
+
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-2.html b/layout/reftests/first-line/stress-2.html
new file mode 100644
index 0000000..5002007
--- /dev/null
+++ b/layout/reftests/first-line/stress-2.html
@@ -0,0 +1,26 @@
+<!DOCTYPE html>
+<html class=""""reftest-wait"""">
+<head>
+
+<style>
+#fl:first-line { }
+</style>
+
+<script>
+function boom()
+{
+  document.getElementById(""""s"""").style.overflow = """"auto"""";
+  document.body.offsetWidth;
+  document.documentElement.className = """""""";  
+}
+</script>
+
+</head>
+<body onload=""""setTimeout(boom, 300);"""">
+
+<div id=""""fl"""">
+  <b><span id=""""s"""">Foo</span></b>
+</div>
+
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-3.html b/layout/reftests/first-line/stress-3.html
new file mode 100644
index 0000000..8e43ca68
--- /dev/null
+++ b/layout/reftests/first-line/stress-3.html
@@ -0,0 +1,35 @@
+<!DOCTYPE html>
+<html class=""""reftest-wait"""" id=""""fl"""" style=""""position: absolute"""">
+<head>
+
+<style>
+
+.flcounter:first-line { content: counter(egg); }
+
+#fl:first-line { }
+
+</style>
+
+<script>
+
+function boom()
+{
+  document.documentElement.appendChild(document.createTextNode(""""\n""""));
+  document.getElementById(""""div"""").style.counterReset = """""""";
+  setTimeout(boom2, 20);
+}
+
+function boom2()
+{
+  document.body.removeAttribute(""""class"""");
+  document.body.offsetWidth;
+  document.documentElement.className = """""""";  
+}
+
+</script>
+</head>
+
+<body style=""""position: inherit; float: left;"""" class=""""flcounter"""" onload=""""boom();"""">
+<div id=""""div"""" style=""""counter-reset: chicken;""""></div>
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-4.html b/layout/reftests/first-line/stress-4.html
new file mode 100644
index 0000000..9deabde
--- /dev/null
+++ b/layout/reftests/first-line/stress-4.html
@@ -0,0 +1,28 @@
+<!DOCTYPE html>
+<html class=""""reftest-wait"""">
+<head>
+<style>
+#a:first-child::first-line { }
+body { visibility: hidden; }
+</style>
+<script>
+  function runTest() {
+    document.getElementById(""""test"""").removeAttribute('style');
+    document.body.offsetWidth;
+    document.documentElement.className = """""""";  
+  }
+</script>
+</head><body>
+
+<div style=""""position:absolute;"""">
+  <span id=""""a"""" style=""""position:fixed;"""">
+    <span>
+      <span style=""""display:table;position:absolute;"""">
+      </span>
+    </span>
+    Loading this should not crash Mozilla
+  </span>
+</div>
+
+
+</body></html>
diff --git a/layout/reftests/first-line/stress-5.html b/layout/reftests/first-line/stress-5.html
new file mode 100644
index 0000000..2b6b285
--- /dev/null
+++ b/layout/reftests/first-line/stress-5.html
@@ -0,0 +1,25 @@
+<!DOCTYPE html>
+<html>
+<head>
+<style>
+#b::first-letter { }
+#c::first-line { }
+</style>
+</head>
+<body style=""""visibility: hidden"""">
+This page should not crash Mozilla
+<div id=""""c"""">
+  <table>
+    <div id=""""b"""" style=""""display:table-header-group;"""">
+      <q>
+        text
+        <div style=""""position:fixed;"""">
+          <q>y</q>
+        </div>
+      </q>  
+    </div>
+    <span style=""""display: table;""""></span>
+</div>
+
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-6.html b/layout/reftests/first-line/stress-6.html
new file mode 100644
index 0000000..50db02d
--- /dev/null
+++ b/layout/reftests/first-line/stress-6.html
@@ -0,0 +1,47 @@
+<!DOCTYPE html>
+<html class=""""reftest-wait""""><head>
+<style>
+#b td::first-line { font-size:110%;}
+nobr::first-line { font-size:110%;}
+
+#b td::after { content:""""anonymous text""""; }
+nobr::after{ content:""""anonymous text""""; }
+
+#b::before { content:""""before text"""";}
+#b td::before { content:""""before text"""";}
+
+body { visibility: hidden; }
+</style>
+</head>
+<body>
+<table style=""""display: table-row;""""></table><nobr style=""""display: list-item; -moz-column-count: 2;"""">
+<table id=""""b"""" style=""""display: inline;""""></table>
+</nobr>
+<br>
+This page should not crash Mozilla
+<script>
+function doe(){
+   var td = document.createElement('td');;
+   td.setAttribute('height', '50%');
+   var tr = document.createElement('tr');;
+   tr.setAttribute('height', '50%');
+   tr.appendChild(td);
+   document.getElementsByTagName('table')[1].appendChild(tr);
+   document.body.offsetHeight;
+
+   var td = document.createElement('td');;
+   td.setAttribute('height', '50%');
+   document.getElementsByTagName('tr')[0].appendChild(td); 
+   document.body.offsetHeight;
+
+   var td = document.createElement('td');;
+   td.setAttribute('height', '50%');
+   document.getElementsByTagName('tr')[0].appendChild(td);
+
+   document.body.offsetWidth;
+   document.documentElement.className = """""""";  
+} 
+setTimeout(doe, 60);
+</script>
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-7.html b/layout/reftests/first-line/stress-7.html
new file mode 100644
index 0000000..81ef983
--- /dev/null
+++ b/layout/reftests/first-line/stress-7.html
@@ -0,0 +1,17 @@
+<!DOCTYPE html>
+<html><head>
+<style>
+body > span::first-line { }
+span::before { content:""""before text""""; border:3px solid black;}
+</style>
+</head>
+<body>
+
+<span style="""" float: left; -moz-column-count: 2;"""">
+  <span style=""""float: right;"""">
+    <span style="""" float: right;-moz-column-count: 2;""""></span>
+  </span>
+</span>
+
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-8-ref.html b/layout/reftests/first-line/stress-8-ref.html
new file mode 100644
index 0000000..30e9caa
--- /dev/null
+++ b/layout/reftests/first-line/stress-8-ref.html
@@ -0,0 +1,15 @@
+<!DOCTYPE html>
+<html>
+<body>
+<div>
+a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a
+b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b
+a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a
+b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b
+a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a
+b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b
+a b a b a b a b a b
+
+</div>
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-8.html b/layout/reftests/first-line/stress-8.html
new file mode 100644
index 0000000..120f2d0
--- /dev/null
+++ b/layout/reftests/first-line/stress-8.html
@@ -0,0 +1,18 @@
+<!DOCTYPE html>
+<html>
+<head><style>
+ div:first-line {}
+</style></head>
+<body>
+<div>
+a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a
+b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b
+a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a
+b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b
+a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a
+b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b
+a b a b a b a b a b
+
+</div>
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-9-ref.html b/layout/reftests/first-line/stress-9-ref.html
new file mode 100644
index 0000000..2096313
--- /dev/null
+++ b/layout/reftests/first-line/stress-9-ref.html
@@ -0,0 +1,14 @@
+<!DOCTYPE html>
+<html><head>
+<style>
+*::after { content:""""anonymous text""""; }
+*::before { content:""""before text""""; }
+</style>
+</head>
+<body>
+
+<ol style=""""overflow: hidden;  float: right; -moz-column-count: 3;"""">
+<span style=""""overflow: auto;  float: left;""""></span>
+</ol>
+</body>
+</html>
diff --git a/layout/reftests/first-line/stress-9.html b/layout/reftests/first-line/stress-9.html
new file mode 100644
index 0000000..138593b
--- /dev/null
+++ b/layout/reftests/first-line/stress-9.html
@@ -0,0 +1,15 @@
+<!DOCTYPE html>
+<html><head>
+<style>
+*::first-line { }
+*::after { content:""""anonymous text""""; }
+*::before { content:""""before text""""; }
+</style>
+</head>
+<body>
+
+<ol style=""""overflow: hidden;  float: right; -moz-column-count: 3;"""">
+<span style=""""overflow: auto;  float: left;""""></span>
+</ol>
+</body>
+</html>
diff --git a/layout/reftests/reftest.list b/layout/reftests/reftest.list
index 8b4e596..41caba0 100644
--- a/layout/reftests/reftest.list
+++ b/layout/reftests/reftest.list
@@ -39,6 +39,9 @@ include counters/reftest.list
 # first-letter/
 include first-letter/reftest.list
 
+# first-line/
+include first-line/reftest.list
+
 # svg/
 include svg/reftest.list
 
diff --git a/layout/style/nsRuleNode.cpp b/layout/style/nsRuleNode.cpp
index 9cf4f783..75de635 100644
--- a/layout/style/nsRuleNode.cpp
+++ b/layout/style/nsRuleNode.cpp
@@ -1797,6 +1797,11 @@ nsRuleNode::AdjustLogicalBoxProp(nsStyleContext* aContext,
                """"should not have bothered calling Compute*Data"""");              \
                                                                               \
   nsStyleContext* parentContext = aContext->GetParent();                      \
+  if (parentContext &&                                                        \
+      parentContext->GetPseudoType() == nsCSSPseudoElements::firstLine) {     \
+    /* Reset structs don't inherit from first-line */                         \
+    parentContext = parentContext->GetParent();                               \
+  }                                                                           \
                                                                               \
   const nsRuleData##rdtype_& rdata_ =                                         \
     static_cast<const nsRuleData##rdtype_&>(aData);                           \"""
9d59749108884d17ad919ad479df1fdc52ec099f,89243,397427,bzbarsky%mit.edu,"Landing files that somehow got missed.  Bug 397427.
",1193177468,"""diff --git a/layout/style/test/redirect-1.css b/layout/style/test/redirect-1.css
new file mode 100644
index 0000000..e69de29
diff --git a/layout/style/test/redirect-2.css b/layout/style/test/redirect-2.css
new file mode 100644
index 0000000..e69de29
diff --git a/layout/style/test/redirect-3.css b/layout/style/test/redirect-3.css
new file mode 100644
index 0000000..e69de29"""
71b276e4b99668e07db20d2ac1938fef313209f1,89244,397427,bzbarsky%mit.edu,"Make the ""href"" property of stylesheets reflect the original URI that was
reflected to load the sheet.  Bug 397427, r=dbaron,biesi, sr=dbaron, a=dsicore
",1193176603,"""diff --git a/caps/src/nsScriptSecurityManager.cpp b/caps/src/nsScriptSecurityManager.cpp
index 7714173..11effe6 100644
--- a/caps/src/nsScriptSecurityManager.cpp
+++ b/caps/src/nsScriptSecurityManager.cpp
@@ -446,13 +446,8 @@ nsScriptSecurityManager::GetChannelPrincipal(nsIChannel* aChannel,
     // OK, get the principal from the URI.  Make sure this does the same thing
     // as nsDocument::Reset and nsXULDocument::StartDocumentLoad.
     nsCOMPtr<nsIURI> uri;
-    nsLoadFlags loadFlags = 0;
-    nsresult rv = aChannel->GetLoadFlags(&loadFlags);
-    if (NS_SUCCEEDED(rv) && (loadFlags & nsIChannel::LOAD_REPLACE)) {
-      aChannel->GetURI(getter_AddRefs(uri));
-    } else {
-      aChannel->GetOriginalURI(getter_AddRefs(uri));
-    }
+    nsresult rv = NS_GetFinalChannelURI(aChannel, getter_AddRefs(uri));
+    NS_ENSURE_SUCCESS(rv, rv);
 
     return GetCodebasePrincipal(uri, aPrincipal);
 }
diff --git a/content/base/src/nsDocument.cpp b/content/base/src/nsDocument.cpp
index 300f44f..4567ccb 100644
--- a/content/base/src/nsDocument.cpp
+++ b/content/base/src/nsDocument.cpp
@@ -1161,13 +1161,7 @@ nsDocument::Reset(nsIChannel* aChannel, nsILoadGroup* aLoadGroup)
     // Note: this code is duplicated in nsXULDocument::StartDocumentLoad and
     // nsScriptSecurityManager::GetChannelPrincipal.    
     // Note: this should match nsDocShell::OnLoadingSite
-    nsLoadFlags loadFlags = 0;
-    nsresult rv = aChannel->GetLoadFlags(&loadFlags);
-    if (NS_SUCCEEDED(rv) && (loadFlags & nsIChannel::LOAD_REPLACE)) {
-      aChannel->GetURI(getter_AddRefs(uri));
-    } else {
-      aChannel->GetOriginalURI(getter_AddRefs(uri));
-    }
+    NS_GetFinalChannelURI(aChannel, getter_AddRefs(uri));
 
     nsIScriptSecurityManager *securityManager =
       nsContentUtils::GetSecurityManager();
diff --git a/content/xul/document/src/nsXULDocument.cpp b/content/xul/document/src/nsXULDocument.cpp
index 06eed00..c8c0548 100644
--- a/content/xul/document/src/nsXULDocument.cpp
+++ b/content/xul/document/src/nsXULDocument.cpp
@@ -424,18 +424,8 @@ nsXULDocument::StartDocumentLoad(const char* aCommand, nsIChannel* aChannel,
     mChannel = aChannel;
 
     // Get the URI.  Note that this should match nsDocShell::OnLoadingSite
-    // XXXbz this code is repeated from nsDocument::Reset and
-    // nsScriptSecurityManager::GetChannelPrincipal; we really need to refactor
-    // this part better.
-    nsLoadFlags loadFlags = 0;
-    nsresult rv = aChannel->GetLoadFlags(&loadFlags);
-    if (NS_SUCCEEDED(rv)) {
-        if (loadFlags & nsIChannel::LOAD_REPLACE) {
-            rv = aChannel->GetURI(getter_AddRefs(mDocumentURI));
-        } else {
-            rv = aChannel->GetOriginalURI(getter_AddRefs(mDocumentURI));
-        }
-    }
+    nsresult rv =
+        NS_GetFinalChannelURI(aChannel, getter_AddRefs(mDocumentURI));
     NS_ENSURE_SUCCESS(rv, rv);
     
     rv = ResetStylesheetsToURI(mDocumentURI);
diff --git a/docshell/base/nsDocShell.cpp b/docshell/base/nsDocShell.cpp
index 8c07f26..9e0c5e4 100644
--- a/docshell/base/nsDocShell.cpp
+++ b/docshell/base/nsDocShell.cpp
@@ -7760,12 +7760,7 @@ nsDocShell::OnLoadingSite(nsIChannel * aChannel, PRBool aFireOnLocationChange,
     // else use the original url
     //
     // Note that this should match what documents do (see nsDocument::Reset).
-    nsLoadFlags loadFlags = 0;
-    aChannel->GetLoadFlags(&loadFlags);
-    if (loadFlags & nsIChannel::LOAD_REPLACE)
-        aChannel->GetURI(getter_AddRefs(uri));
-    else
-        aChannel->GetOriginalURI(getter_AddRefs(uri));
+    NS_GetFinalChannelURI(aChannel, getter_AddRefs(uri));
     NS_ENSURE_TRUE(uri, PR_FALSE);
 
     return OnNewURI(uri, aChannel, mLoadType, aFireOnLocationChange,
diff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp
index e4e5c67..7f2470f 100644
--- a/layout/base/nsPresShell.cpp
+++ b/layout/base/nsPresShell.cpp
@@ -1849,7 +1849,7 @@ nsresult PresShell::CreatePreferenceStyleSheet(void)
     result = NS_NewURI(getter_AddRefs(uri), """"about:PreferenceStyleSheet"""", nsnull);
     if (NS_SUCCEEDED(result)) {
       NS_ASSERTION(uri, """"null but no error"""");
-      result = mPrefStyleSheet->SetURIs(uri, uri);
+      result = mPrefStyleSheet->SetURIs(uri, nsnull, uri);
       if (NS_SUCCEEDED(result)) {
         mPrefStyleSheet->SetComplete();
         nsCOMPtr<nsIDOMCSSStyleSheet> sheet(do_QueryInterface(mPrefStyleSheet));
diff --git a/layout/mathml/base/src/nsMathMLFrame.cpp b/layout/mathml/base/src/nsMathMLFrame.cpp
index 9611a96..6c6516c 100644
--- a/layout/mathml/base/src/nsMathMLFrame.cpp
+++ b/layout/mathml/base/src/nsMathMLFrame.cpp
@@ -594,7 +594,7 @@ GetMathMLAttributeStyleSheet(nsPresContext* aPresContext,
   nsCOMPtr<nsICSSStyleSheet> cssSheet(do_CreateInstance(kCSSStyleSheetCID));
   if (!cssSheet)
     return;
-  cssSheet->SetURIs(uri, uri);
+  cssSheet->SetURIs(uri, nsnull, uri);
   cssSheet->SetTitle(NS_ConvertASCIItoUTF16(kTitle));
   // all done, no further activity from the net involved, so we better do this
   cssSheet->SetComplete();
diff --git a/layout/style/nsCSSLoader.cpp b/layout/style/nsCSSLoader.cpp
index 55d0af6..fb549ba 100644
--- a/layout/style/nsCSSLoader.cpp
+++ b/layout/style/nsCSSLoader.cpp
@@ -777,19 +777,18 @@ SheetLoadData::OnStreamComplete(nsIUnicharStreamLoader* aLoader,
     return NS_OK;
   }
   
-  nsCOMPtr<nsIURI> channelURI;
+  nsCOMPtr<nsIURI> originalURI;
+  channel->GetOriginalURI(getter_AddRefs(originalURI));
+
   // If the channel's original URI is """"chrome:"""", we want that, since
   // the observer code in nsXULPrototypeCache depends on chrome stylesheets
   // having a chrome URI.  (Whether or not chrome stylesheets come through
   // this codepath seems nondeterministic.)
   // Otherwise we want the potentially-HTTP-redirected URI.
-  channel->GetOriginalURI(getter_AddRefs(channelURI));
-  PRBool isChrome;
-  if (NS_FAILED(channelURI->SchemeIs(""""chrome"""", &isChrome)) || !isChrome) {
-    channel->GetURI(getter_AddRefs(channelURI));
-  }
+  nsCOMPtr<nsIURI> channelURI;
+  NS_GetFinalChannelURI(channel, getter_AddRefs(channelURI));
 
-  if (!channelURI) {
+  if (!channelURI || !originalURI) {
     NS_ERROR(""""Someone just violated the nsIRequest contract"""");
     LOG_WARN((""""  Channel without a URI.  Bad!""""));
     mLoader->SheetComplete(this, NS_ERROR_UNEXPECTED);
@@ -875,9 +874,9 @@ SheetLoadData::OnStreamComplete(nsIUnicharStreamLoader* aLoader,
     return NS_OK;
   }    
 
-  // Enough to set the URI on mSheet, since any sibling datas we have share
+  // Enough to set the URIs on mSheet, since any sibling datas we have share
   // the same mInner as mSheet and will thus get the same URI.
-  mSheet->SetURIs(channelURI, channelURI);
+  mSheet->SetURIs(channelURI, originalURI, channelURI);
   
   PRBool completed;
   return mLoader->ParseSheet(aDataStream, this, completed);
@@ -1082,19 +1081,25 @@ CSSLoaderImpl::CreateSheet(nsIURI* aURI,
 
   if (!*aSheet) {
     aSheetState = eSheetNeedsParser;
-    nsIURI *sheetURI = aURI;
-    nsCOMPtr<nsIURI> baseURI = aURI;
+    nsIURI *sheetURI;
+    nsCOMPtr<nsIURI> baseURI;
+    nsIURI* originalURI;
     if (!aURI) {
       // Inline style.  Use the document's base URL so that @import in
       // the inline sheet picks up the right base.
       NS_ASSERTION(aLinkingContent, """"Inline stylesheet without linking content?"""");
       baseURI = aLinkingContent->GetBaseURI();
       sheetURI = aLinkingContent->GetDocument()->GetDocumentURI();
+      originalURI = nsnull;
+    } else {
+      baseURI = aURI;
+      sheetURI = aURI;
+      originalURI = aURI;
     }
 
     rv = NS_NewCSSStyleSheet(aSheet);
     NS_ENSURE_SUCCESS(rv, rv);
-    (*aSheet)->SetURIs(sheetURI, baseURI);
+    (*aSheet)->SetURIs(sheetURI, originalURI, baseURI);
   }
 
   NS_ASSERTION(*aSheet, """"We should have a sheet by now!"""");
diff --git a/layout/style/nsCSSParser.cpp b/layout/style/nsCSSParser.cpp
index 6afc9eb..a844d74 100644
--- a/layout/style/nsCSSParser.cpp
+++ b/layout/style/nsCSSParser.cpp
@@ -707,7 +707,7 @@ CSSParserImpl::Parse(nsIUnicharInputStream* aInput,
     NS_NewCSSStyleSheet(getter_AddRefs(mSheet));
     NS_ENSURE_TRUE(mSheet, NS_ERROR_OUT_OF_MEMORY);
 
-    mSheet->SetURIs(aSheetURI, aBaseURI);
+    mSheet->SetURIs(aSheetURI, aSheetURI, aBaseURI);
     mSheet->SetPrincipal(aSheetPrincipal);
     mNameSpaceMap = nsnull;
   }
diff --git a/layout/style/nsCSSStyleSheet.cpp b/layout/style/nsCSSStyleSheet.cpp
index a2f458f..2dc36f8 100644
--- a/layout/style/nsCSSStyleSheet.cpp
+++ b/layout/style/nsCSSStyleSheet.cpp
@@ -771,7 +771,8 @@ nsCSSStyleSheet::DropRuleProcessor(nsCSSRuleProcessor* aProcessor)
 
 
 NS_IMETHODIMP
-nsCSSStyleSheet::SetURIs(nsIURI* aSheetURI, nsIURI* aBaseURI)
+nsCSSStyleSheet::SetURIs(nsIURI* aSheetURI, nsIURI* aOriginalSheetURI,
+                         nsIURI* aBaseURI)
 {
   NS_PRECONDITION(aSheetURI && aBaseURI, """"null ptr"""");
 
@@ -779,6 +780,7 @@ nsCSSStyleSheet::SetURIs(nsIURI* aSheetURI, nsIURI* aBaseURI)
                """"Can't call SetURL on sheets that are complete or have rules"""");
 
   mInner->mSheetURI = aSheetURI;
+  mInner->mOriginalSheetURI = aOriginalSheetURI;
   mInner->mBaseURI = aBaseURI;
   return NS_OK;
 }
@@ -1416,15 +1418,14 @@ nsCSSStyleSheet::GetParentStyleSheet(nsIDOMStyleSheet** aParentStyleSheet)
 NS_IMETHODIMP
 nsCSSStyleSheet::GetHref(nsAString& aHref)
 {
-  nsCAutoString str;
-
-  // XXXldb The DOM spec says that this should be null for inline style sheets.
-  if (mInner->mSheetURI) {
-    mInner->mSheetURI->GetSpec(str);
+  if (mInner->mOriginalSheetURI) {
+    nsCAutoString str;
+    mInner->mOriginalSheetURI->GetSpec(str);
+    CopyUTF8toUTF16(str, aHref);
+  } else {
+    SetDOMStringToNull(aHref);
   }
 
-  CopyUTF8toUTF16(str, aHref);
-
   return NS_OK;
 }
 
diff --git a/layout/style/nsCSSStyleSheet.h b/layout/style/nsCSSStyleSheet.h
index 9179cee..9b72f99 100644
--- a/layout/style/nsCSSStyleSheet.h
+++ b/layout/style/nsCSSStyleSheet.h
@@ -74,6 +74,7 @@ public:
 
   nsAutoVoidArray        mSheets;
   nsCOMPtr<nsIURI>       mSheetURI; // for error reports, etc.
+  nsCOMPtr<nsIURI>       mOriginalSheetURI;  // for GetHref.  Can be null.
   nsCOMPtr<nsIURI>       mBaseURI; // for resolving relative URIs
   nsCOMPtr<nsIPrincipal> mPrincipal;
   nsCOMArray<nsICSSRule> mOrderedRules;
@@ -136,7 +137,8 @@ public:
   NS_IMETHOD ReplaceRuleInGroup(nsICSSGroupRule* aGroup, nsICSSRule* aOld, nsICSSRule* aNew);
   NS_IMETHOD StyleSheetCount(PRInt32& aCount) const;
   NS_IMETHOD GetStyleSheetAt(PRInt32 aIndex, nsICSSStyleSheet*& aSheet) const;
-  NS_IMETHOD SetURIs(nsIURI* aSheetURI, nsIURI* aBaseURI);
+  NS_IMETHOD SetURIs(nsIURI* aSheetURI, nsIURI* aOriginalSheetURI,
+                     nsIURI* aBaseURI);
   virtual NS_HIDDEN_(void) SetPrincipal(nsIPrincipal* aPrincipal);
   virtual NS_HIDDEN_(nsIPrincipal*) Principal() const;
   NS_IMETHOD SetTitle(const nsAString& aTitle);
diff --git a/layout/style/nsICSSStyleSheet.h b/layout/style/nsICSSStyleSheet.h
index 77df3fa..c38b836 100644
--- a/layout/style/nsICSSStyleSheet.h
+++ b/layout/style/nsICSSStyleSheet.h
@@ -53,10 +53,10 @@ class nsICSSImportRule;
 class nsIPrincipal;
 
 // IID for the nsICSSStyleSheet interface
-// 36541c18-e735-48ef-8622-3a481275b757
+// 74fa10f3-fab7-425a-a7dd-e2afd1ba7a07
 #define NS_ICSS_STYLE_SHEET_IID     \
-{ 0x36541c18, 0xe735, 0x48ef, \
- { 0x86, 0x22, 0x3a, 0x48, 0x12, 0x75, 0xb7, 0x57 } }
+{ 0x74fa10f3, 0xfab7, 0x425a, \
+ { 0xa7, 0xdd, 0xe2, 0xaf, 0xd1, 0xba, 0x7a, 0x07 } }
 
 class nsICSSStyleSheet : public nsIStyleSheet {
 public:
@@ -87,7 +87,8 @@ public:
    * SetURIs may only be called while the sheet is 1) incomplete and 2)
    * has no rules in it
    */
-  NS_IMETHOD  SetURIs(nsIURI* aSheetURI, nsIURI* aBaseURI) = 0;
+  NS_IMETHOD  SetURIs(nsIURI* aSheetURI, nsIURI* aOriginalSheetURI,
+                      nsIURI* aBaseURI) = 0;
 
   /**
    * SetPrincipal should be called on all sheets before parsing into them.
diff --git a/layout/style/test/Makefile.in b/layout/style/test/Makefile.in
index 1ba18df..69cb05e 100644
--- a/layout/style/test/Makefile.in
+++ b/layout/style/test/Makefile.in
@@ -83,6 +83,7 @@ _TEST_FILES =	test_bug74880.html \
 		test_bug389464.html \
 		test_bug391034.html \
 		test_bug391221.html \
+		test_bug397427.html \
 		test_compute_data_with_start_struct.html \
 		test_dont_use_document_colors.html \
 		test_inherit_storage.html \
@@ -101,6 +102,15 @@ _TEST_FILES =	test_bug74880.html \
 		unstyled.css \
 		unstyled-frame.xml \
 		unstyled-frame.css \
+		redirect-1.css \
+		post-redirect-1.css \
+		redirect-1.css^headers^ \
+		redirect-2.css \
+		post-redirect-2.css \
+		redirect-2.css^headers^ \
+		redirect-3.css \
+		redirect-3.css^headers^ \
+		post-redirect-3.css \
 		$(NULL)
 
 
diff --git a/layout/style/test/post-redirect-1.css b/layout/style/test/post-redirect-1.css
new file mode 100644
index 0000000..c2ae5d6
--- /dev/null
+++ b/layout/style/test/post-redirect-1.css
@@ -0,0 +1 @@
+#one { color: green; background: url(""""#""""); }
diff --git a/layout/style/test/post-redirect-2.css b/layout/style/test/post-redirect-2.css
new file mode 100644
index 0000000..0a75299
--- /dev/null
+++ b/layout/style/test/post-redirect-2.css
@@ -0,0 +1 @@
+#two { color: green; background: url(""""#""""); }
diff --git a/layout/style/test/post-redirect-3.css b/layout/style/test/post-redirect-3.css
new file mode 100644
index 0000000..b33887a
--- /dev/null
+++ b/layout/style/test/post-redirect-3.css
@@ -0,0 +1 @@
+#three { color: green; background: url(""""#""""); }
diff --git a/layout/style/test/redirect-1.css^headers^ b/layout/style/test/redirect-1.css^headers^
new file mode 100644
index 0000000..582de3f
--- /dev/null
+++ b/layout/style/test/redirect-1.css^headers^
@@ -0,0 +1,2 @@
+HTTP 302 Found
+Location: http://example.org/tests/layout/style/test/post-redirect-1.css
diff --git a/layout/style/test/redirect-2.css^headers^ b/layout/style/test/redirect-2.css^headers^
new file mode 100644
index 0000000..09280cc
--- /dev/null
+++ b/layout/style/test/redirect-2.css^headers^
@@ -0,0 +1,2 @@
+HTTP 302 Found
+Location: http://example.org/tests/layout/style/test/post-redirect-2.css
diff --git a/layout/style/test/redirect-3.css^headers^ b/layout/style/test/redirect-3.css^headers^
new file mode 100644
index 0000000..4241923
--- /dev/null
+++ b/layout/style/test/redirect-3.css^headers^
@@ -0,0 +1,2 @@
+HTTP 302 Found
+Location: http://example.org/tests/layout/style/test/post-redirect-3.css
diff --git a/layout/style/test/test_bug397427.html b/layout/style/test/test_bug397427.html
new file mode 100644
index 0000000..ae45721
--- /dev/null
+++ b/layout/style/test/test_bug397427.html
@@ -0,0 +1,92 @@
+<!DOCTYPE HTML>
+<html>
+<!--
+https://bugzilla.mozilla.org/show_bug.cgi?id=397427
+-->
+<head>
+  <title>Test for Bug 397427</title>
+  <script type=""""text/javascript"""" src=""""/MochiKit/MochiKit.js""""></script>
+  <script type=""""text/javascript"""" src=""""/tests/SimpleTest/SimpleTest.js""""></script>
+  <link rel=""""stylesheet"""" type=""""text/css"""" href=""""/tests/SimpleTest/test.css"""" />
+  <style id=""""a"""">
+    @import url(""""redirect-1.css"""");
+    @import url(""""redirect-2.css"""");
+    .test { color: red }
+  </style>
+  <link id=""""b"""" rel=""""stylesheet"""" href=""""http://example.com"""">
+  <link id=""""c"""" rel=""""stylesheet"""" href=""""redirect-2.css"""">
+  <link id=""""d"""" rel=""""stylesheet"""" href=""""redirect-3.css"""">
+</head>
+<body>
+<a target=""""_blank"""" href=""""https://bugzilla.mozilla.org/show_bug.cgi?id=397427"""">Mozilla Bug 397427</a>
+<p id=""""display"""">
+<span id=""""one"""" class=""""test""""></span>
+<span id=""""two"""" class=""""test""""></span>
+<span id=""""three"""" class=""""test""""></span>
+</p>
+<div id=""""content"""" style=""""display: none"""">
+  
+</div>
+<pre id=""""test"""">
+<script class=""""testbody"""" type=""""text/javascript"""">
+
+/** Test for Bug 397427 **/
+SimpleTest.waitForExplicitFinish();
+
+addLoadEvent(function() {
+  is($(""""a"""").sheet.href, null, """"href should be null"""");
+  is(typeof($(""""a"""").sheet.href), """"object"""", """"should be actual null"""");
+
+  // Make sure the redirected sheets are loaded and have the right base URI
+  is(document.defaultView.getComputedStyle($(""""one""""), """""""").color,
+     """"rgb(0, 128, 0)"""", """"Redirect 1 did not work"""");
+  is(document.defaultView.getComputedStyle($(""""one""""), """""""").backgroundImage,
+     """"url(http://example.org/tests/layout/style/test/post-redirect-1.css#)"""",
+      """"Redirect 1 did not get right base URI"""");
+  is(document.defaultView.getComputedStyle($(""""two""""), """""""").color,
+     """"rgb(0, 128, 0)"""", """"Redirect 2 did not work"""");
+  is(document.defaultView.getComputedStyle($(""""two""""), """""""").backgroundImage,
+     """"url(http://example.org/tests/layout/style/test/post-redirect-2.css#)"""",
+      """"Redirect 2 did not get right base URI"""");
+  is(document.defaultView.getComputedStyle($(""""three""""), """""""").color,
+     """"rgb(0, 128, 0)"""", """"Redirect 3 did not work"""");
+  is(document.defaultView.getComputedStyle($(""""three""""), """""""").backgroundImage,
+     """"url(http://example.org/tests/layout/style/test/post-redirect-3.css#)"""",
+      """"Redirect 3 did not get right base URI"""");
+
+  var ruleList = $(""""a"""").sheet.cssRules;
+  
+  is(ruleList[0].styleSheet.href,
+     window.location.href.replace(/test_bug397427.html$/, """"redirect-1.css""""),
+     """"Unexpected href for imported sheet"""");
+  todo(ruleList[0].href == window.location.href.replace(/test_bug397427.html$/, """"redirect-1.css""""),
+       """"Rule href should be absolute"""");
+  is(ruleList[1].styleSheet.href,
+     window.location.href.replace(/test_bug397427.html$/, """"redirect-2.css""""),
+     """"Unexpected href for imported sheet"""");
+  todo(ruleList[1].href == window.location.href.replace(/test_bug397427.html$/, """"redirect-2.css""""),
+       """"Rule href should be absolute"""");
+
+  is($(""""b"""").href, """"http://example.com/"""", """"Unexpected href one"""");
+  is($(""""b"""").href, $(""""b"""").sheet.href,
+     """"Should have the same href when not redirecing"""");
+
+  is($(""""c"""").href,
+     window.location.href.replace(/test_bug397427.html$/, """"redirect-2.css""""),
+     """"Unexpected href two"""");
+  is($(""""c"""").href, $(""""c"""").sheet.href,
+     """"Should have the same href when redirecting"""");
+     
+  is($(""""d"""").href,
+     window.location.href.replace(/test_bug397427.html$/, """"redirect-3.css""""),
+     """"Unexpected href three"""");
+  is($(""""d"""").href, $(""""d"""").sheet.href,
+     """"Should have the same href when redirecting again"""");
+})
+
+addLoadEvent(SimpleTest.finish);
+</script>
+</pre>
+</body>
+</html>
+
diff --git a/netwerk/base/public/nsNetUtil.h b/netwerk/base/public/nsNetUtil.h
index ce786fe..5a159b5 100644
--- a/netwerk/base/public/nsNetUtil.h
+++ b/netwerk/base/public/nsNetUtil.h
@@ -1304,4 +1304,26 @@ NS_GetInnermostURI(nsIURI *uri)
     return uri;
 }
 
+/**
+ * Get the """"final"""" URI for a channel.  This is either the same as GetURI or
+ * GetOriginalURI, depending on whether this channel has
+ * nsIChanel::LOAD_REPLACE set.  For channels without that flag set, the final
+ * URI is the original URI, while for ones with the flag the final URI is the
+ * channel URI.
+ */
+inline nsresult
+NS_GetFinalChannelURI(nsIChannel* channel, nsIURI** uri)
+{
+    *uri = nsnull;
+    nsLoadFlags loadFlags = 0;
+    nsresult rv = channel->GetLoadFlags(&loadFlags);
+    NS_ENSURE_SUCCESS(rv, rv);
+    
+    if (loadFlags & nsIChannel::LOAD_REPLACE) {
+        return channel->GetURI(uri);
+    }
+    
+    return channel->GetOriginalURI(uri);
+}
+
 #endif // !nsNetUtil_h__"""
6159c3d106c11665dd72e7a5713df951f10922a8,89272,394974,reed%reedloden.com,"Bustage fix for bug 394974.
",1193106842,"""diff --git a/docshell/build/Makefile.in b/docshell/build/Makefile.in
index a018bc2..d2019f9 100644
--- a/docshell/build/Makefile.in
+++ b/docshell/build/Makefile.in
@@ -135,7 +135,7 @@ EXTRA_DSO_LDOPTS += \
 endif
 
 ifeq ($(OS_ARCH),WINNT)
-OS_LIBS		+= $(call EXPAND_LIBNAME, shell32)
+OS_LIBS		+= $(call EXPAND_LIBNAME, shell32 ole32)
 endif
 
 ifeq ($(MOZ_WIDGET_TOOLKIT),gtk2)"""
e210cf79d741294fe81e600c3d9f13bac342dc01,89277,394974,reed%reedloden.com,"Bug 394974 - ""URIs with invalid % encodings launch wrong handler on WinXP+IE7"" (use Windows's own rules to vet URIs before handing them off to the shell) [p=jimm r=biesi a=blocking1.9+ for M9]
",1193094194,"""diff --git a/uriloader/exthandler/win/nsMIMEInfoWin.cpp b/uriloader/exthandler/win/nsMIMEInfoWin.cpp
index 42a8415..9c8a150 100755
--- a/uriloader/exthandler/win/nsMIMEInfoWin.cpp
+++ b/uriloader/exthandler/win/nsMIMEInfoWin.cpp
@@ -227,6 +227,13 @@ nsMIMEInfoWin::GetProperty(const nsAString& aName, nsIVariant* *_retval)
   return NS_OK;
 }
 
+typedef HRESULT (STDMETHODCALLTYPE *MySHParseDisplayName)
+                 (PCWSTR pszName,
+                  IBindCtx *pbc,
+                  LPITEMIDLIST *ppidl,
+                  SFGAOF sfgaoIn,
+                  SFGAOF *psfgaoOut);
+
 // this implementation was pretty much copied verbatime from 
 // Tony Robinson's code in nsExternalProtocolWin.cpp
 nsresult
@@ -254,10 +261,46 @@ nsMIMEInfoWin::LoadUriInternal(nsIURI * aURL)
     if (urlSpec.Length() > maxSafeURL)
       return NS_ERROR_FAILURE;
 
-    LONG r = (LONG) ::ShellExecute(NULL, """"open"""", urlSpec.get(), NULL, NULL, 
-                                   SW_SHOWNORMAL);
-    if (r < 32) 
-      rv = NS_ERROR_FAILURE;
+    LPITEMIDLIST pidl;
+    SFGAOF sfgao;
+    
+    // Bug 394974
+    HMODULE hDll = ::LoadLibrary(""""shell32.dll"""");
+    MySHParseDisplayName pMySHParseDisplayName = NULL;
+    // Version 6.0 and higher
+    if (pMySHParseDisplayName = 
+          (MySHParseDisplayName)::GetProcAddress(hDll,
+                                                 """"SHParseDisplayName"""")) {
+      if (SUCCEEDED(pMySHParseDisplayName(NS_ConvertUTF8toUTF16(urlSpec).get(),
+                                          NULL, &pidl, 0, &sfgao))) {
+        static const char cmdVerb[] = """"open"""";
+        SHELLEXECUTEINFO sinfo;
+        memset(&sinfo, 0, sizeof(SHELLEXECUTEINFO));
+        sinfo.cbSize   = sizeof(SHELLEXECUTEINFO);
+        sinfo.fMask    = SEE_MASK_FLAG_DDEWAIT |
+                         SEE_MASK_FLAG_NO_UI |
+                         SEE_MASK_INVOKEIDLIST;
+        sinfo.hwnd     = NULL;
+        sinfo.lpVerb   = (LPCSTR)&cmdVerb;
+        sinfo.nShow    = SW_SHOWNORMAL;
+        sinfo.lpIDList = pidl;
+        
+        BOOL result = ShellExecuteEx(&sinfo);
+
+        CoTaskMemFree(pidl);
+
+        if (!result || ((int)sinfo.hInstApp) < 32)
+          rv = NS_ERROR_FAILURE;
+      }
+    } else {
+      // Version of shell32.dll < 6.0
+      LONG r = (LONG) ::ShellExecute(NULL, """"open"""", urlSpec.get(), NULL, NULL, 
+                                     SW_SHOWNORMAL);
+      if (r < 32) 
+        rv = NS_ERROR_FAILURE;
+    }
+    if (hDll) 
+      ::FreeLibrary(hDll);
   }
 
   return rv;"""
28352b686bacbaa0848bbf753d77000fb5426a22,89516,387258,bzbarsky%mit.edu,"Fix bug 387258 by hacking in a force-override for the ""txt"" extension-to-type
mapping.  r+sr=biesi, a=sayrer
",1192386186,"""diff --git a/uriloader/exthandler/nsExternalHelperAppService.cpp b/uriloader/exthandler/nsExternalHelperAppService.cpp
index fa8c945..6c5f821 100644
--- a/uriloader/exthandler/nsExternalHelperAppService.cpp
+++ b/uriloader/exthandler/nsExternalHelperAppService.cpp
@@ -406,7 +406,8 @@ static nsDefaultMimeTypeEntry defaultMimeEntries [] =
   { TEXT_HTML, """"htm"""" },
   { APPLICATION_XPINSTALL, """"xpi"""" },
   { """"application/xhtml+xml"""", """"xhtml"""" },
-  { """"application/xhtml+xml"""", """"xht"""" }
+  { """"application/xhtml+xml"""", """"xht"""" },
+  { TEXT_PLAIN, """"txt"""" }
 };
 
 /**"""
17feb968fe7d990b01618aa696a98f230c35b79f,90615,380933,bclary%bclary.com,"JavaScript Test - regression test for bug 380933, by Jesse Ruderman, not part of the build
",1190386545,"""diff --git a/js/tests/js1_7/extensions/regress-380933.js b/js/tests/js1_7/extensions/regress-380933.js
new file mode 100755
index 0000000..69b9265
--- /dev/null
+++ b/js/tests/js1_7/extensions/regress-380933.js
@@ -0,0 +1,75 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-380933.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 380933;
+var summary = 'Do not assert with uneval object with setter with modified proto';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var f = (function(){}); 
+  var y = ({p getter: f}); 
+  f.__proto__ = []; 
+
+  expect = /TypeError: Array.prototype.toSource called on incompatible Function/;
+  try
+  {
+    uneval(y);
+    actual = 'No Error';
+  }
+  catch(ex)
+  {
+    actual = ex + '';
+  }
+
+  reportMatch(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
ec9633c684b5ea6c65eb71bd895f25a6170a8c1e,90617,381374,bclary%bclary.com,"JavaScript Test - regression test for bug 381374, by Jesse Ruderman, not part of the build
",1190386135,"""diff --git a/js/tests/js1_7/GC/regress-381374.js b/js/tests/js1_7/GC/regress-381374.js
new file mode 100755
index 0000000..61852b9
--- /dev/null
+++ b/js/tests/js1_7/GC/regress-381374.js
@@ -0,0 +1,86 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-381374.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 381374;
+var summary = 'js_AddScopeProperty - overwrite property with watchpoint';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  function huh()
+  {
+    var f;
+
+    Iterator; // ???
+
+    if (0 && 0) {
+      eval(""""""""); // ???
+    }
+
+    f = new Function(""""x = 1"""");
+
+    try {
+      f();
+    } catch(e) {}
+  }
+
+  this.watch('x', function(){});
+  this.__defineGetter__('x', new Function());
+  huh();
+  if (typeof gczeal == 'function')
+  {
+    gczeal(2); 
+  }
+  for (y in [0,1]) { this.__defineSetter__('x', function(){}); }
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
a0d0759501b1f5b805ffec677a6699830d30e8f2,90619,358594,bclary%bclary.com,"JavaScript Tests - regression tests for bug 358594, by Jesse Ruderman, not part of the build
",1190385549,"""diff --git a/js/tests/js1_5/extensions/regress-358594-01.js b/js/tests/js1_5/extensions/regress-358594-01.js
new file mode 100755
index 0000000..52ba5fd
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-358594-01.js
@@ -0,0 +1,65 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-358594-01.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 358594;
+var summary = 'Do not crash on uneval(this).';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+
+  // don't crash|assert
+  function f() { } 
+  f.__proto__ = this; 
+  this.m setter = f; 
+  uneval(this);
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-358594-02.js b/js/tests/js1_5/extensions/regress-358594-02.js
new file mode 100755
index 0000000..ba1ac4d
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-358594-02.js
@@ -0,0 +1,54 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-358594-02.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 358594;
+var summary = 'Do not crash on uneval(this).';
+var actual = '';
+var expect = '';
+
+printBugNumber(BUGNUMBER);
+printStatus (summary);
+
+// don't crash|assert
+function f() { } 
+f.__proto__ = this; 
+this.m setter = f; 
+uneval(this);
+reportCompare(expect, actual, summary);
diff --git a/js/tests/js1_5/extensions/regress-358594-03.js b/js/tests/js1_5/extensions/regress-358594-03.js
new file mode 100755
index 0000000..8068b90
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-358594-03.js
@@ -0,0 +1,64 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-358594-03.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 358594;
+var summary = 'Do not crash on uneval(this).';
+var actual = '';
+var expect = '';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+
+  // don't crash|assert
+  f = function () { };
+  f.__proto__ = this; 
+  this.m setter = f; 
+  uneval(this);
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-358594-04.js b/js/tests/js1_5/extensions/regress-358594-04.js
new file mode 100755
index 0000000..652e143
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-358594-04.js
@@ -0,0 +1,54 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-358594-04.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 358594;
+var summary = 'Do not crash on uneval(this).';
+var actual = '';
+var expect = '';
+
+printBugNumber(BUGNUMBER);
+printStatus (summary);
+
+// don't crash|assert
+f = function () { };
+f.__proto__ = this; 
+this.m setter = f; 
+uneval(this);
+reportCompare(expect, actual, summary);
diff --git a/js/tests/js1_5/extensions/regress-358594-05.js b/js/tests/js1_5/extensions/regress-358594-05.js
new file mode 100755
index 0000000..7ca4e72
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-358594-05.js
@@ -0,0 +1,65 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-358594-05.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 358594;
+var summary = 'Do not crash on uneval(this).';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+
+  // don't crash|assert
+  f = function () { };
+  f.hhhhhhhhh = this; 
+  this.m setter = f; 
+  uneval(this);
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-358594-06.js b/js/tests/js1_5/extensions/regress-358594-06.js
new file mode 100755
index 0000000..ae88383
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-358594-06.js
@@ -0,0 +1,54 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-358594-06.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 358594;
+var summary = 'Do not crash on uneval(this).';
+var actual = '';
+var expect = '';
+
+printBugNumber(BUGNUMBER);
+printStatus (summary);
+
+// don't crash|assert
+f = function () { };
+f.hhhhhhhhh = this; 
+this.m setter = f; 
+uneval(this);
+reportCompare(expect, actual, summary);"""
1848db780a8a9485abf7f2c550dc7136424d3773,90621,379245,bclary%bclary.com,"JavaScript Test - regression test for bug 379245, by Igor Bukanov, not part of the build
",1190385209,"""diff --git a/js/tests/js1_5/Regress/regress-379245.js b/js/tests/js1_5/Regress/regress-379245.js
new file mode 100755
index 0000000..7b4147f
--- /dev/null
+++ b/js/tests/js1_5/Regress/regress-379245.js
@@ -0,0 +1,72 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-379245.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 379245;
+var summary = 'inline calls';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var fThis;
+
+  function f()
+  {
+    fThis = this;
+    return ({x: f}).x;
+  }
+
+  f()();
+
+  if (this !== fThis)
+    throw """"bad this"""";
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
14236b75fb8d3e8465f5aa270d433b1a458e5668,90622,382503,bclary%bclary.com,"JavaScript Test - regression test for bug 382503, by Jesse Ruderman, not part of the build
",1190385019,"""diff --git a/js/tests/js1_5/Object/regress-382503.js b/js/tests/js1_5/Object/regress-382503.js
new file mode 100755
index 0000000..be8650d
--- /dev/null
+++ b/js/tests/js1_5/Object/regress-382503.js
@@ -0,0 +1,62 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-383503.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 382503;
+var summary = 'Do not assert: with prototype=regexp';
+var actual = '';
+var expect = '';
+
+printBugNumber(BUGNUMBER);
+printStatus (summary);
+ 
+function f(x)
+{
+  prototype = /a/;
+
+  if (x) {
+    return /b/;
+    return /c/;
+  } else {
+    return /d/;
+  }
+}
+
+void f(false);
+
+reportCompare(expect, actual, summary);"""
18ecd3ec1ba42f9da8752f0128a189f10e9fca40,90623,375976,bclary%bclary.com,"JavaScript Test - regression test for bug 375976, by Jesse Ruderman, not part of the build
",1190384795,"""diff --git a/js/tests/js1_5/GetSet/regress-375976.js b/js/tests/js1_5/GetSet/regress-375976.js
new file mode 100755
index 0000000..eb50b8a
--- /dev/null
+++ b/js/tests/js1_5/GetSet/regress-375976.js
@@ -0,0 +1,64 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-375976.js';
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 375976;
+var summary = 'Do not crash with postincrement custom property';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  this.__defineSetter__('x', gc);
+  this.__defineGetter__('x', Math.sin);
+  x = x++;
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
d9f67a69c9ae1e480b891a6742cc85fa0aaeb561,90872,395942,dveditz%cruzio.com,"bug 395942 mitigations for QuickTime media-link flaw, r=gavin,neil, b=beltzner
",1190076843,"""diff --git a/browser/components/nsBrowserContentHandler.js b/browser/components/nsBrowserContentHandler.js
index 21f6ba8..00f3c14 100644
--- a/browser/components/nsBrowserContentHandler.js
+++ b/browser/components/nsBrowserContentHandler.js
@@ -51,6 +51,7 @@ const nsIFactory             = Components.interfaces.nsIFactory;
 const nsIFileURL             = Components.interfaces.nsIFileURL;
 const nsIHttpProtocolHandler = Components.interfaces.nsIHttpProtocolHandler;
 const nsIInterfaceRequestor  = Components.interfaces.nsIInterfaceRequestor;
+const nsINetUtil             = Components.interfaces.nsINetUtil;
 const nsIPrefBranch          = Components.interfaces.nsIPrefBranch;
 const nsIPrefLocalizedString = Components.interfaces.nsIPrefLocalizedString;
 const nsISupportsString      = Components.interfaces.nsISupportsString;
@@ -67,6 +68,9 @@ const NS_BINDING_ABORTED = 0x804b0002;
 const NS_ERROR_WONT_HANDLE_CONTENT = 0x805d0001;
 const NS_ERROR_ABORT = Components.results.NS_ERROR_ABORT;
 
+const URI_INHERITS_SECURITY_CONTEXT = nsIHttpProtocolHandler
+                                        .URI_INHERITS_SECURITY_CONTEXT;
+
 function shouldLoadURI(aURI) {
   if (aURI && !aURI.schemeIs(""""chrome""""))
     return true;
@@ -430,12 +434,21 @@ var nsBrowserContentHandler = {
       // Handle the old preference dialog URL separately (bug 285416)
       if (chromeParam == """"chrome://browser/content/pref/pref.xul"""") {
         openPreferences();
-      } else {
+        cmdLine.preventDefault = true;
+      } else try {
+        // only load URIs which do not inherit chrome privs
         var features = """"chrome,dialog=no,all"""" + this.getFeatures(cmdLine);
-        openWindow(null, chromeParam, """"_blank"""", features, """""""");
+        var uri = resolveURIInternal(cmdLine, chromeParam);
+        var netutil = Components.classes[""""@mozilla.org/network/util;1""""]
+                                .getService(nsINetUtil);
+        if (!netutil.URIChainHasFlags(uri, URI_INHERITS_SECURITY_CONTEXT)) {
+          openWindow(null, uri.spec, """"_blank"""", features, """""""");
+          cmdLine.preventDefault = true;
+        }
+      }
+      catch (e) {
+        Components.utils.reportError(e);
       }
-
-      cmdLine.preventDefault = true;
     }
     if (cmdLine.handleFlag(""""preferences"""", false)) {
       openPreferences();
diff --git a/mail/components/nsMailDefaultHandler.js b/mail/components/nsMailDefaultHandler.js
index bc45e4a..c8f988e 100644
--- a/mail/components/nsMailDefaultHandler.js
+++ b/mail/components/nsMailDefaultHandler.js
@@ -43,6 +43,7 @@ const nsICommandLineHandler    = Components.interfaces.nsICommandLineHandler;
 const nsICommandLineValidator  = Components.interfaces.nsICommandLineValidator;
 const nsIDOMWindowInternal     = Components.interfaces.nsIDOMWindowInternal;
 const nsIFactory               = Components.interfaces.nsIFactory;
+const nsINetUtil               = Components.interfaces.nsINetUtil;
 const nsISupportsString        = Components.interfaces.nsISupportsString;
 const nsIURILoader             = Components.interfaces.nsIURILoader;
 const nsIWindowMediator        = Components.interfaces.nsIWindowMediator;
@@ -50,6 +51,9 @@ const nsIWindowWatcher         = Components.interfaces.nsIWindowWatcher;
 
 const NS_ERROR_ABORT = Components.results.NS_ERROR_ABORT;
 
+const URI_INHERITS_SECURITY_CONTEXT = Components.interfaces.nsIProtocolHandler
+                                        .URI_INHERITS_SECURITY_CONTEXT;
+
 function mayOpenURI(uri)
 {
   var ext = Components.classes[""""@mozilla.org/uriloader/external-protocol-service;1""""]
@@ -219,16 +223,27 @@ var nsMailDefaultHandler = {
 
     var chromeParam = cmdLine.handleFlagWithParam(""""chrome"""", false);
     if (chromeParam) {
-      var features = """"chrome,dialog=no,all"""";
-      var wwatch = Components.classes[""""@mozilla.org/embedcomp/window-watcher;1""""]
-                             .getService(nsIWindowWatcher);
-      var argstring = Components.classes[""""@mozilla.org/supports-string;1""""]
-                                .createInstance(nsISupportsString);
-      wwatch.openWindow(null, chromeParam, """"_blank"""",
-                        """"chrome,dialog=no,all"""", argstring);
-      cmdLine.preventDefault = true;
+      try {
+        var features = """"chrome,dialog=no,all"""";
+        var wwatch = Components.classes[""""@mozilla.org/embedcomp/window-watcher;1""""]
+                               .getService(nsIWindowWatcher);
+        var argstring = Components.classes[""""@mozilla.org/supports-string;1""""]
+                                  .createInstance(nsISupportsString);
+        var uri = resolveURIInternal(cmdLine, chromeParam);
+        var netutil = Components.classes[""""@mozilla.org/network/util;1""""]
+                                .getService(nsINetUtil);
+        // only load URIs which do not inherit chrome privs
+        if (!netutil.URIChainHasFlags(uri, URI_INHERITS_SECURITY_CONTEXT)) {
+          wwatch.openWindow(null, uri.spec, """"_blank"""",
+                            """"chrome,dialog=no,all"""", argstring);
+          cmdLine.preventDefault = true;
+        }
+      }
+      catch (e) {
+        dump(e);
+      }
     }
-    
+
     var count = cmdLine.length;
     if (count) {
       var i = 0;
diff --git a/suite/browser/nsBrowserContentHandler.js b/suite/browser/nsBrowserContentHandler.js
index 87b461a..dcf6e5b 100644
--- a/suite/browser/nsBrowserContentHandler.js
+++ b/suite/browser/nsBrowserContentHandler.js
@@ -49,6 +49,7 @@ const nsIDOMWindow           = Components.interfaces.nsIDOMWindow;
 const nsIFactory             = Components.interfaces.nsIFactory;
 const nsIFileURL             = Components.interfaces.nsIFileURL;
 const nsIHttpProtocolHandler = Components.interfaces.nsIHttpProtocolHandler;
+const nsINetUtil             = Components.interfaces.nsINetUtil;
 const nsIPrefService         = Components.interfaces.nsIPrefService;
 const nsIPrefBranch          = Components.interfaces.nsIPrefBranch;
 const nsIPrefLocalizedString = Components.interfaces.nsIPrefLocalizedString;
@@ -61,6 +62,9 @@ const nsIWebNavigationInfo   = Components.interfaces.nsIWebNavigationInfo;
 const NS_BINDING_ABORTED = 0x804b0002;
 const NS_ERROR_WONT_HANDLE_CONTENT = 0x805d0001;
 
+const URI_INHERITS_SECURITY_CONTEXT = nsIHttpProtocolHandler
+                                        .URI_INHERITS_SECURITY_CONTEXT;
+
 const NS_GENERAL_STARTUP_PREFIX = """"@mozilla.org/commandlinehandler/general-startup;1?type="""";
 
 function shouldLoadURI(aURI)
@@ -339,8 +343,14 @@ var nsBrowserContentHandler = {
     try {
       var chromeParam = cmdLine.handleFlagWithParam(""""chrome"""", false);
       if (chromeParam) {
-        openWindow(null, chromeParam, features);
-        cmdLine.preventDefault = true;
+        // only load URIs which do not inherit chrome privs
+        var uri = resolveURIInternal(cmdLine, chromeParam);
+        var netutil = Components.classes[""""@mozilla.org/network/util;1""""]
+                                .getService(nsINetUtil);
+        if (!netutil.URIChainHasFlags(uri, URI_INHERITS_SECURITY_CONTEXT)) {
+          openWindow(null, uri.spec, features);
+          cmdLine.preventDefault = true;
+        }
       }
     } catch (e) {
     }
diff --git a/toolkit/mozapps/extensions/src/nsExtensionManager.js.in b/toolkit/mozapps/extensions/src/nsExtensionManager.js.in
index 20bcd69..5a70a6f 100644
--- a/toolkit/mozapps/extensions/src/nsExtensionManager.js.in
+++ b/toolkit/mozapps/extensions/src/nsExtensionManager.js.in
@@ -2616,6 +2616,12 @@ ExtensionManager.prototype = {
   _installGlobalItem: function(file) {
     if (!file || !file.exists())
       throw new Error(""""Unable to find the file specified on the command line!"""");
+#ifdef XP_WIN
+    // make sure the file is local on Windows
+    file.normalize();
+    if (file.path[1] != ':')
+      throw new Error(""""Can't install global chrome from non-local file """"+file.path);
+#endif
     var installManifestFile = extractRDFFileToTempDir(file, FILE_INSTALL_MANIFEST, true);
     if (!installManifestFile.exists())
       throw new Error(""""The package is missing an install manifest!"""");"""
9ec80e031af25afc441ed34c2b983f9e68eda209,94461,391043,martijn.martijn%gmail.com,"Let only top level documents call this code, bug 391043, r=jst, sr=bzbarsky, a=dbaron
",1187678683,"""diff --git a/content/xul/content/src/nsXULElement.cpp b/content/xul/content/src/nsXULElement.cpp
index 6d5e263..7ff8297 100644
--- a/content/xul/content/src/nsXULElement.cpp
+++ b/content/xul/content/src/nsXULElement.cpp
@@ -2234,6 +2234,10 @@ nsXULElement::HideWindowChrome(PRBool aShouldHide)
     if (!doc || doc->GetRootContent() != this)
       return NS_ERROR_UNEXPECTED;
 
+    // only top level chrome documents can hide the window chrome
+    if (doc->GetParentDocument())
+      return NS_OK;
+
     nsIPresShell *shell = doc->GetPrimaryShell();
 
     if (shell) {
@@ -2242,7 +2246,7 @@ nsXULElement::HideWindowChrome(PRBool aShouldHide)
 
         nsPresContext *presContext = shell->GetPresContext();
 
-        if (frame && presContext) {
+        if (frame && presContext && presContext->IsChrome()) {
             nsIView* view = frame->GetClosestView();
 
             if (view) {"""
fbe280749c2a26fd55c7b84613646a4445aeebb2,95162,367501,bclary%bclary.com,"JavaScript Tests - regression tests for bug 367501, by moz_bug_r_a4, not part of the build
",1186585508,"""diff --git a/js/tests/js1_5/extensions/regress-367501-01.js b/js/tests/js1_5/extensions/regress-367501-01.js
new file mode 100755
index 0000000..87b216c
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367501-01.js
@@ -0,0 +1,68 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-367501-01.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 367501;
+var summary = 'getter/setter issues';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+
+  try
+  { 
+    expect = 'undefined';
+    var a = { set x() {} };
+    actual = a.x + '';
+  }
+  catch(ex)
+  {
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-367501-02.js b/js/tests/js1_5/extensions/regress-367501-02.js
new file mode 100755
index 0000000..dedb4e9
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367501-02.js
@@ -0,0 +1,70 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-367501-02.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 367501;
+var summary = 'getter/setter crashes';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+
+  try
+  {
+    expect = 'undefined';
+    var a = { set x() {} };
+    for (var i = 0; i < 92169 - 3; ++i) a[i] = 1;
+    actual = a.x + '';
+    actual = a.x + '';
+  }
+  catch(ex)
+  {
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-367501-03.js b/js/tests/js1_5/extensions/regress-367501-03.js
new file mode 100755
index 0000000..3b56eb5
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367501-03.js
@@ -0,0 +1,71 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-367501-03.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 367501;
+var summary = 'getter/setter crashes';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  try
+  {
+    expect = actual = 'No Crash';
+    var a = { set x() {} };
+    for (var i = 0; i < 0x4bf20 - 3; ++i) a[i] = 1;
+    a.x;
+    a.x.x;
+  }
+  catch(ex)
+  {
+  }
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-367501-04.js b/js/tests/js1_5/extensions/regress-367501-04.js
new file mode 100755
index 0000000..c916a23
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367501-04.js
@@ -0,0 +1,71 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-367501-04.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 367501;
+var summary = 'getter/setter crashes';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+
+  try
+  {
+    expect = actual = 'No Crash'; 
+    var a = { set x() {} };
+    for (var i = 0; i < 0x10050c - 3; ++i) a[i] = 1;
+    a.x;
+    typeof a.x;
+  }
+  catch(ex)
+  {
+  }
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
2ad12ccd30626061c2605a5d9ce1efd8573c7e35,95163,366601,bclary%bclary.com,"JavaScript Tests - regression test for bug 366601, by Igor Bukanov
",1186584774,"""diff --git a/js/tests/js1_5/Regress/regress-366601.js b/js/tests/js1_5/Regress/regress-366601.js
new file mode 100755
index 0000000..8e09459
--- /dev/null
+++ b/js/tests/js1_5/Regress/regress-366601.js
@@ -0,0 +1,71 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-366601.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 366601;
+var summary = 'Switch with more than 64k atoms';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var N = 100*1000;
+  var src = 'var x = [""""';
+  var array = Array(N);
+  for (var i = 0; i != N; ++i)
+    array[i] = i;
+  src += array.join('"""",""""')+'""""];\n';
+  src += 'switch (a) { case """"a"""": case """"b"""": case """"c"""": return null; }  return x;';
+  var f = Function('a', src);
+  var r = f(""""a"""");
+  if (r !== null)
+    throw """"Unexpected result: bad switch label"""";
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
76613ebf29bb1f22d5610a030d1325fed6883a4a,95164,365692,bclary%bclary.com,"JavaScript Tests - regression test for bug 365692, by Igor Bukanov
",1186584537,"""diff --git a/js/tests/js1_5/extensions/regress-365692.js b/js/tests/js1_5/extensions/regress-365692.js
new file mode 100755
index 0000000..bdb50ed
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-365692.js
@@ -0,0 +1,73 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-365692.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 365692;
+var summary = 'getter/setter bytecodes should support atoms over 64k';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+printBugNumber(BUGNUMBER);
+printStatus (summary);
+ 
+function g()
+{
+  return 10;
+}
+
+try
+{
+  var N = 100*1000;
+  var src = 'var x = [""""';
+  var array = Array(N);
+  for (var i = 0; i != N; ++i)
+    array[i] = i;
+  src += array.join('"""",""""')+'""""]; x.a getter = g; return x.a;';
+  var f = Function(src);
+  if (f() != 10)
+    throw """"Unexpected result"""";
+}
+catch(ex)
+{
+  if (ex == """"Unexpected result"""")
+  {
+    actual = ex;
+  }
+}
+reportCompare(expect, actual, summary);"""
ea8b73d81768c54c5d6034a7789cc7b274340791,95178,364023,bclary%bclary.com,"JavaScript Tests - regression test for bug 364023, by shutdown, not part of the build
",1186569008,"""diff --git a/js/tests/js1_5/Function/regress-364023.js b/js/tests/js1_5/Function/regress-364023.js
new file mode 100755
index 0000000..7c16938
--- /dev/null
+++ b/js/tests/js1_5/Function/regress-364023.js
@@ -0,0 +1,73 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): shutdown
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-364023.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 364023;
+var summary = 'Do not crash in JS_GetPrivate';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  function exploit() {
+    var code = """""""";
+    for(var i = 0; i < 0x10000; i++) {
+      if(i == 125) {
+        code += """"void 0x10000050505050;\n"""";
+      } else {
+        code += """"void """" + (0x10000000000000 + i) + """";\n"""";
+      }
+    }
+    code += """"function foo() {}\n"""";
+    eval(code);
+  }
+  exploit();
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
7615ef581c8c64e4e1d26bfe0572bbe658acd3f0,95179,362872,bclary%bclary.com,"JavaScript Tests - regression tests for bug 362872, by shutdown, Blake Kaplan, not part of the build
",1186568805,"""diff --git a/js/tests/js1_5/Object/regress-362872-01.js b/js/tests/js1_5/Object/regress-362872-01.js
new file mode 100755
index 0000000..661794d
--- /dev/null
+++ b/js/tests/js1_5/Object/regress-362872-01.js
@@ -0,0 +1,74 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): shutdown
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-362872-01.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 362872;
+var summary = 'script should not drop watchpoint that is in use';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  function exploit() {
+    var rooter = {}, object = {}, filler1 = """""""", filler2 = """"\u5555"""";
+    for(var i = 0; i < 32/2-2; i++) { filler1 += """"\u5050""""; }
+    object.watch(""""foo"""", function(){
+		   object.unwatch(""""foo"""");
+		   object.unwatch(""""foo"""");
+		   for(var i = 0; i < 8 * 1024; i++) {
+		     rooter[i] = filler1 + filler2;
+		   }
+		 });
+    object.foo = """"bar"""";
+  }
+  exploit();
+
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/Object/regress-362872-02.js b/js/tests/js1_5/Object/regress-362872-02.js
new file mode 100755
index 0000000..6333b34
--- /dev/null
+++ b/js/tests/js1_5/Object/regress-362872-02.js
@@ -0,0 +1,55 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Blake Kaplan
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-362872-02.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 362872;
+var summary = 'script should not drop watchpoint that is in use';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber(BUGNUMBER);
+printStatus (summary);
+ 
+this.watch('x', function f() {
+             print(""""before"""");
+             x = 3;
+             print(""""after"""");
+           });
+x = 3;
+
+reportCompare(expect, actual, summary);"""
3c8dc87bafb464a803ab7a60f0c790cbc2f03602,95736,389580,cbiesinger%gmx.at,"389580 don't allow escaped null bytes in URLs for external protocol handlers
r=bzbarsky sr=dveditz
",1185422661,"""diff --git a/uriloader/exthandler/nsExternalHelperAppService.cpp b/uriloader/exthandler/nsExternalHelperAppService.cpp
index d1bd09d..e25a5b8 100644
--- a/uriloader/exthandler/nsExternalHelperAppService.cpp
+++ b/uriloader/exthandler/nsExternalHelperAppService.cpp
@@ -1214,6 +1214,9 @@ NS_IMETHODIMP nsExternalHelperAppService::LoadURI(nsIURI * aURL, nsIPrompt * aPr
   nsCAutoString spec;
   aURL->GetSpec(spec);
 
+  if (spec.Find(""""%00"""") != -1)
+    return NS_ERROR_MALFORMED_URI;
+
   spec.ReplaceSubstring(""""\"""""""", """"%22"""");
   spec.ReplaceSubstring(""""`"""", """"%60"""");
 """
465f7fe30443c358abdbd6322eed93f820b76f63,95766,389580,cbiesinger%gmx.at,"389580 don't allow escaped null bytes in URLs for external protocol handlers
r=bzbarsky sr=dveditz
",1185403680,"""diff --git a/uriloader/exthandler/nsExternalHelperAppService.cpp b/uriloader/exthandler/nsExternalHelperAppService.cpp
index 199494b..d1cbe56 100644
--- a/uriloader/exthandler/nsExternalHelperAppService.cpp
+++ b/uriloader/exthandler/nsExternalHelperAppService.cpp
@@ -1215,6 +1215,9 @@ NS_IMETHODIMP nsExternalHelperAppService::LoadURI(nsIURI * aURL, nsIPrompt * aPr
   nsCAutoString spec;
   aURL->GetSpec(spec);
 
+  if (spec.Find(""""%00"""") != -1)
+    return NS_ERROR_MALFORMED_URI;
+
   spec.ReplaceSubstring(""""\"""""""", """"%22"""");
   spec.ReplaceSubstring(""""`"""", """"%60"""");
 """
abb2083158e364c400567d1a5d1c88ce9f35e6c1,96004,389106,cbiesinger%gmx.at,"clobber the tbox for bug 389106
",1185240117,""""""
f6225db60438f6c3e95ae72842972bbc16239131,96014,389106,cbiesinger%gmx.at,"bug 389106 escape spaces even for the OnlyNonASCII flag
r=bzbarsky sr=dveditz
",1185236922,"""diff --git a/xpcom/io/nsEscape.cpp b/xpcom/io/nsEscape.cpp
index a838c08..ab626f5 100644
--- a/xpcom/io/nsEscape.cpp
+++ b/xpcom/io/nsEscape.cpp
@@ -410,7 +410,7 @@ NS_COM PRBool NS_EscapeURL(const char *part,
       // non-ASCII character as it may be part of a multi-byte character.
       if ((NO_NEED_ESC(c) || (c == HEX_ESCAPE && !forced)
                           || (c > 0x7f && ignoreNonAscii)
-                          || (c > 0x1f && c < 0x7f && ignoreAscii))
+                          || (c > 0x20 && c < 0x7f && ignoreAscii))
           && !(c == ':' && colon)
           && !(previousIsNonASCII && c == '|' && !ignoreNonAscii))
       {"""
a207f219087faf41e4df55cbc2444dd601cf4c5f,96018,389106,cbiesinger%gmx.at,"bug 389106 didn't mean to check in this line
",1185235978,"""diff --git a/uriloader/exthandler/nsExternalHelperAppService.cpp b/uriloader/exthandler/nsExternalHelperAppService.cpp
index 69dcbb9..7d8f740 100644
--- a/uriloader/exthandler/nsExternalHelperAppService.cpp
+++ b/uriloader/exthandler/nsExternalHelperAppService.cpp
@@ -1216,7 +1216,6 @@ NS_IMETHODIMP nsExternalHelperAppService::LoadURI(nsIURI * aURL, nsIPrompt * aPr
   aURL->GetSpec(spec);
 
   spec.ReplaceSubstring(""""\"""""""", """"%22"""");
-  spec.ReplaceSubstring(""""'"""", """"%27"""");
   spec.ReplaceSubstring(""""`"""", """"%60"""");
 
   nsCOMPtr<nsIIOService> ios(do_GetIOService());"""
e04cdc0024d9bc0308d356fe9c86faaa37dbfe4c,96045,384384,rob_strong%exchangecode.com,"addendum to bug 384384. r=sspitzer
",1185218824,"""diff --git a/browser/installer/windows/nsis/shared.nsh b/browser/installer/windows/nsis/shared.nsh
index cea1edd..04621bb 100755
--- a/browser/installer/windows/nsis/shared.nsh
+++ b/browser/installer/windows/nsis/shared.nsh
@@ -426,5 +426,8 @@
   ${Unless} ${Errors}
     DeleteRegKey SHCTX """"$0\gopher""""
   ${EndUnless}
+
+  ; Remove protocol handler registry keys added by the MS shim
+  DeleteRegKey HKLM """"Software\Classes\Firefox.URL""""
 !macroend
 !define FixClassKeys """"!insertmacro FixClassKeys"""""""
f1f40049ae9b72ae918d63b087a4a0f2f4a157f2,96073,389106,cbiesinger%gmx.at,"bug 389106 escape quotes
r=bz sr=dveditz
",1185167446,"""diff --git a/uriloader/exthandler/nsExternalHelperAppService.cpp b/uriloader/exthandler/nsExternalHelperAppService.cpp
index 2c891b9..6b22c24 100644
--- a/uriloader/exthandler/nsExternalHelperAppService.cpp
+++ b/uriloader/exthandler/nsExternalHelperAppService.cpp
@@ -1214,7 +1214,19 @@ class nsExternalLoadRequest : public nsRunnable {
 
 NS_IMETHODIMP nsExternalHelperAppService::LoadURI(nsIURI * aURL, nsIPrompt * aPrompt)
 {
-  nsCOMPtr<nsIRunnable> event = new nsExternalLoadRequest(aURL, aPrompt);
+  nsCAutoString spec;
+  aURL->GetSpec(spec);
+
+  spec.ReplaceSubstring(""""\"""""""", """"%22"""");
+  spec.ReplaceSubstring(""""'"""", """"%27"""");
+  spec.ReplaceSubstring(""""`"""", """"%60"""");
+
+  nsCOMPtr<nsIIOService> ios(do_GetIOService());
+  nsCOMPtr<nsIURI> uri;
+  nsresult rv = ios->NewURI(spec, nsnull, nsnull, getter_AddRefs(uri));
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  nsCOMPtr<nsIRunnable> event = new nsExternalLoadRequest(uri, aPrompt);
   return NS_DispatchToCurrentThread(event);
 }
 """
bdae7839e5b73b5c4a365c721f4161f7ee854e29,96324,388121,bzbarsky%mit.edu,"More consistent handling of principals for loads across docshell type
boundaries.  Bug 388121, r+sr=jst
",1184723227,"""diff --git a/content/base/src/nsFrameLoader.cpp b/content/base/src/nsFrameLoader.cpp
index 08fcb04..e64cab4 100644
--- a/content/base/src/nsFrameLoader.cpp
+++ b/content/base/src/nsFrameLoader.cpp
@@ -187,23 +187,8 @@ nsFrameLoader::LoadURI(nsIURI* aURI)
   
   // We'll use our principal, not that of the document loaded inside us.  This
   // is very important; needed to prevent XSS attacks on documents loaded in
-  // subframes!  But only use our principal if our docshell's type is the same
-  // as the type of our ownerDocument's docshell.  Note that we could try
-  // checking GetSameTypeParent() on mDocShell, but that might break if we ever
-  // support docshells loaded inside disconnected nodes...
-  nsCOMPtr<nsISupports> container = doc->GetContainer();
-  nsCOMPtr<nsIDocShellTreeItem> parentItem = do_QueryInterface(container);
-  nsCOMPtr<nsIDocShellTreeItem> ourItem = do_QueryInterface(mDocShell);
-  NS_ASSERTION(ourItem, """"Must have item"""");
-  if (parentItem) {
-    PRInt32 parentType;
-    rv = parentItem->GetItemType(&parentType);
-    PRInt32 ourType;
-    nsresult rv2 = ourItem->GetItemType(&ourType);
-    if (NS_SUCCEEDED(rv) && NS_SUCCEEDED(rv2) && ourType == parentType) {
-      loadInfo->SetOwner(principal);
-    }
-  }
+  // subframes!
+  loadInfo->SetOwner(principal);
 
   nsCOMPtr<nsIURI> referrer;
   rv = principal->GetURI(getter_AddRefs(referrer));
diff --git a/docshell/base/nsDocShell.cpp b/docshell/base/nsDocShell.cpp
index dfe0600..b3172fd 100644
--- a/docshell/base/nsDocShell.cpp
+++ b/docshell/base/nsDocShell.cpp
@@ -819,30 +819,44 @@ nsDocShell::LoadURI(nsIURI * aURI,
     }
     // Perform the load...
     else {
-        // We need an owner (a referring principal). 3 possibilities:
-        // (1) If a principal was passed in, that's what we'll use.
-        // (2) If the caller has allowed inheriting from the current document,
+        // We need an owner (a referring principal). 4 possibilities:
+        // (1) If the system principal was passed in and we're a typeContent
+        //     docshell, inherit the principal from the current document
+        //     instead.
+        // (2) In all other cases when the principal passed in is not null,
+        //     use that principal.
+        // (3) If the caller has allowed inheriting from the current document,
         //     or if we're being called from system code (eg chrome JS or pure
         //     C++) then inheritOwner should be true and InternalLoad will get
         //     an owner from the current document. If none of these things are
         //     true, then
-        // (3) we pass a null owner into the channel, and an owner will be
-        //     created later from the URL.
+        // (4) we pass a null owner into the channel, and an owner will be
+        //     created later from the channel's internal data.
         //
-        // NOTE: This all only works because the only thing the owner is used
-        //       for in InternalLoad is data: and javascript: URIs.  For other
-        //       URIs this would all be dead wrong!
+        // NOTE: This all only works because the only thing the owner is used  
+        //       for in InternalLoad is data:, javascript:, and about:blank
+        //       URIs.  For other URIs this would all be dead wrong!
+        nsCOMPtr<nsIScriptSecurityManager> secMan =
+            do_GetService(NS_SCRIPTSECURITYMANAGER_CONTRACTID, &rv);
+        NS_ENSURE_SUCCESS(rv, rv);
+
+        if (owner && mItemType != typeChrome) {
+            nsCOMPtr<nsIPrincipal> ownerPrincipal = do_QueryInterface(owner);
+            PRBool isSystem;
+            rv = secMan->IsSystemPrincipal(ownerPrincipal, &isSystem);
+            NS_ENSURE_SUCCESS(rv, rv);
+            
+            if (isSystem) {
+                owner = nsnull;
+                inheritOwner = PR_TRUE;
+            }
+        }
         if (!owner && !inheritOwner) {
             // See if there's system or chrome JS code running
-            nsCOMPtr<nsIScriptSecurityManager> secMan;
-
-            secMan = do_GetService(NS_SCRIPTSECURITYMANAGER_CONTRACTID, &rv);
-            if (NS_SUCCEEDED(rv)) {
-                rv = secMan->SubjectPrincipalIsSystem(&inheritOwner);
-                if (NS_FAILED(rv)) {
-                    // Set it back to false
-                    inheritOwner = PR_FALSE;
-                }
+            rv = secMan->SubjectPrincipalIsSystem(&inheritOwner);
+            if (NS_FAILED(rv)) {
+                // Set it back to false
+                inheritOwner = PR_FALSE;
             }
         }
 
diff --git a/embedding/components/windowwatcher/src/nsWindowWatcher.cpp b/embedding/components/windowwatcher/src/nsWindowWatcher.cpp
index c78bb8d..e9e6105 100644
--- a/embedding/components/windowwatcher/src/nsWindowWatcher.cpp
+++ b/embedding/components/windowwatcher/src/nsWindowWatcher.cpp
@@ -656,10 +656,7 @@ nsWindowWatcher::OpenWindowJSInternal(nsIDOMWindow *aParent,
 
         // chrome is always allowed, so clear the flag if the opener is chrome
         if (popupConditions) {
-          PRBool isChrome = PR_FALSE;
-          if (sm)
-            sm->SubjectPrincipalIsSystem(&isChrome);
-          popupConditions = !isChrome;
+          popupConditions = !isCallerChrome;
         }
 
         if (popupConditions)
@@ -823,6 +820,17 @@ nsWindowWatcher::OpenWindowJSInternal(nsIDOMWindow *aParent,
       }
     }
 
+    PRBool isSystem;
+    rv = sm->IsSystemPrincipal(newWindowPrincipal, &isSystem);
+    if (NS_FAILED(rv) || isSystem) {
+      // Don't pass this principal along to content windows
+      PRInt32 itemType;
+      rv = newDocShellItem->GetItemType(&itemType);
+      if (NS_FAILED(rv) || itemType != nsIDocShellTreeItem::typeChrome) {
+        newWindowPrincipal = nsnull;        
+      }
+    }
+
     nsCOMPtr<nsPIDOMWindow> newWindow = do_QueryInterface(*_retval);
 #ifdef DEBUG
     nsCOMPtr<nsPIDOMWindow> newDebugWindow = do_GetInterface(newDocShell);"""
5fd947d903e3d7359b8ca44ad00e060279980446,96587,374810,dveditz%cruzio.com,"bug 374810 pick up crash fix from libpng 1.2.17, patch=glennrp, r=tor, sr=dveditz
",1184285184,"""diff --git a/configure b/configure
index 8435405..94f26b3 100755
--- a/configure
+++ b/configure
@@ -1056,7 +1056,7 @@ _SUBDIR_HOST_LDFLAGS=""""$HOST_LDFLAGS""""
 _SUBDIR_CONFIG_ARGS=""""$ac_configure_args""""
 
 MOZJPEG=62
-MOZPNG=10207
+MOZPNG=10217
 MOZZLIB=0x1230
 NSPR_VERSION=4
 NSS_VERSION=3
diff --git a/configure.in b/configure.in
index d7b482c..6783928 100644
--- a/configure.in
+++ b/configure.in
@@ -103,7 +103,7 @@ _SUBDIR_CONFIG_ARGS=""""$ac_configure_args""""
 dnl Set the version number of the libs included with mozilla
 dnl ========================================================
 MOZJPEG=62
-MOZPNG=10207
+MOZPNG=10217
 MOZZLIB=0x1230
 NSPR_VERSION=4
 NSS_VERSION=3
diff --git a/modules/libimg/png/MOZCHANGES b/modules/libimg/png/MOZCHANGES
index 78e592f..919667e 100644
--- a/modules/libimg/png/MOZCHANGES
+++ b/modules/libimg/png/MOZCHANGES
@@ -1,6 +1,10 @@
 
 Changes made to pristine png source by mozilla.org developers.
 
+2007/05/05  -- Zero png_ptr->num_trans on CRC error (bug 374810)
+
+2007/04/19  -- Synced with libpng-1.2.16 tree
+
 2007/03/20  -- Added support for APNG
 
 2006/06/27  -- Synced with libpng-1.2.12 tree
diff --git a/modules/libimg/png/pngrutil.c b/modules/libimg/png/pngrutil.c
index c547e0d..67623ee 100644
--- a/modules/libimg/png/pngrutil.c
+++ b/modules/libimg/png/pngrutil.c
@@ -1319,7 +1319,10 @@ png_handle_tRNS(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)
    }
 
    if (png_crc_finish(png_ptr, 0))
+   {
+      png_ptr->num_trans = 0;
       return;
+   }
 
    png_set_tRNS(png_ptr, info_ptr, readbuf, png_ptr->num_trans,
       &(png_ptr->trans_values));"""
5a9496d7e5568e012a100ca37ae9216a7b58c61e,96595,383478,dveditz%cruzio.com,"bug 383478 deal with %00 in file urls, r=bz,darin
",1184281464,"""diff --git a/netwerk/base/src/nsURLHelperOS2.cpp b/netwerk/base/src/nsURLHelperOS2.cpp
index c61736f..e90310c 100644
--- a/netwerk/base/src/nsURLHelperOS2.cpp
+++ b/netwerk/base/src/nsURLHelperOS2.cpp
@@ -130,6 +130,8 @@ net_GetFileFromURLSpec(const nsACString &aURL, nsIFile **result)
     }
     
     NS_UnescapeURL(path);
+    if (path.Length() != strlen(path.get()))
+        return NS_ERROR_FILE_INVALID_PATH;
 
     // remove leading '\'
     if (path.CharAt(0) == '\\')
diff --git a/netwerk/base/src/nsURLHelperOSX.cpp b/netwerk/base/src/nsURLHelperOSX.cpp
index 906f93d..b5a36ad 100644
--- a/netwerk/base/src/nsURLHelperOSX.cpp
+++ b/netwerk/base/src/nsURLHelperOSX.cpp
@@ -231,6 +231,8 @@ net_GetFileFromURLSpec(const nsACString &aURL, nsIFile **result)
   }
 
   NS_UnescapeURL(path);
+  if (path.Length() != strlen(path.get()))
+    return NS_ERROR_FILE_INVALID_PATH;
 
   if (bHFSPath)
     convertHFSPathtoPOSIX(path, path);
diff --git a/netwerk/base/src/nsURLHelperUnix.cpp b/netwerk/base/src/nsURLHelperUnix.cpp
index 51b5746..dd01714 100644
--- a/netwerk/base/src/nsURLHelperUnix.cpp
+++ b/netwerk/base/src/nsURLHelperUnix.cpp
@@ -114,6 +114,8 @@ net_GetFileFromURLSpec(const nsACString &aURL, nsIFile **result)
     }
     
     NS_UnescapeURL(path);
+    if (path.Length() != strlen(path.get()))
+        return NS_ERROR_FILE_INVALID_PATH;
 
     if (IsUTF8(path)) {
         // speed up the start-up where UTF-8 is the native charset
diff --git a/netwerk/base/src/nsURLHelperWin.cpp b/netwerk/base/src/nsURLHelperWin.cpp
index ef8d576..8613d75 100644
--- a/netwerk/base/src/nsURLHelperWin.cpp
+++ b/netwerk/base/src/nsURLHelperWin.cpp
@@ -130,6 +130,8 @@ net_GetFileFromURLSpec(const nsACString &aURL, nsIFile **result)
     }
     
     NS_UnescapeURL(path);
+    if (path.Length() != strlen(path.get()))
+        return NS_ERROR_FILE_INVALID_PATH;
 
     // remove leading '\'
     if (path.CharAt(0) == '\\')"""
9dabe73591390fe2dc36b93db9e647917615c115,96735,384384,rob_strong%exchangecode.com,"Bug 384384. r=bsmedberg, r=mscott for Thunderbird
",1184133597,"""diff --git a/browser/components/nsBrowserContentHandler.js b/browser/components/nsBrowserContentHandler.js
index bc0fdf6..24f8d9b 100644
--- a/browser/components/nsBrowserContentHandler.js
+++ b/browser/components/nsBrowserContentHandler.js
@@ -61,6 +61,7 @@ const nsIWindowWatcher       = Components.interfaces.nsIWindowWatcher;
 const nsICategoryManager     = Components.interfaces.nsICategoryManager;
 const nsIWebNavigationInfo   = Components.interfaces.nsIWebNavigationInfo;
 const nsIBrowserSearchService = Components.interfaces.nsIBrowserSearchService;
+const nsICommandLineValidator = Components.interfaces.nsICommandLineValidator;
 
 const NS_BINDING_ABORTED = 0x804b0002;
 const NS_ERROR_WONT_HANDLE_CONTENT = 0x805d0001;
@@ -301,6 +302,7 @@ var nsBrowserContentHandler = {
         !iid.equals(nsICommandLineHandler) &&
         !iid.equals(nsIBrowserHandler) &&
         !iid.equals(nsIContentHandler) &&
+        !iid.equals(nsICommandLineValidator) &&
         !iid.equals(nsIFactory))
       throw Components.results.NS_ERROR_NO_INTERFACE;
 
@@ -604,6 +606,21 @@ var nsBrowserContentHandler = {
     request.cancel(NS_BINDING_ABORTED);
   },
 
+  /* nsICommandLineValidator */
+  validate : function bch_validate(cmdLine) {
+    // Other handlers may use osint so only handle the osint flag if the url
+    // flag is also present and the command line is valid.
+    var osintFlagIdx = cmdLine.findFlag(""""osint"""", false);
+    var urlFlagIdx = cmdLine.findFlag(""""url"""", false);
+    if (urlFlagIdx > -1 && (osintFlagIdx > -1 ||
+        cmdLine.state == nsICommandLine.STATE_REMOTE_EXPLICIT)) {
+      var urlParam = cmdLine.getArgument(urlFlagIdx + 1);
+      if (cmdLine.length != urlFlagIdx + 2 || /firefoxurl:/.test(urlParam))
+        throw NS_ERROR_ABORT;
+      cmdLine.handleFlag(""""osint"""", false)
+    }
+  },
+
   /* nsIFactory */
   createInstance: function bch_CI(outer, iid) {
     if (outer != null)
@@ -866,6 +883,9 @@ var Module = {
     catMan.addCategoryEntry(""""command-line-handler"""",
                             """"x-default"""",
                             dch_contractID, true, true);
+    catMan.addCategoryEntry(""""command-line-validator"""",
+                            """"b-browser"""",
+                            bch_contractID, true, true);
   },
     
   unregisterSelf : function mod_unregself(compMgr, location, type) {
@@ -880,6 +900,8 @@ var Module = {
                                """"m-browser"""", true);
     catMan.deleteCategoryEntry(""""command-line-handler"""",
                                """"x-default"""", true);
+    catMan.deleteCategoryEntry(""""command-line-validator"""",
+                               """"b-browser"""", true);
   },
 
   canUnload: function(compMgr) {
diff --git a/browser/components/shell/src/nsWindowsShellService.cpp b/browser/components/shell/src/nsWindowsShellService.cpp
index cd76ec0..edc7179 100644
--- a/browser/components/shell/src/nsWindowsShellService.cpp
+++ b/browser/components/shell/src/nsWindowsShellService.cpp
@@ -151,7 +151,7 @@ OpenKeyForWriting(HKEY aStartKey, const char* aKeyName, HKEY* aKey,
 //
 //   HKCU\SOFTWARE\Classes\FirefoxHTML\
 //     DefaultIcon                      (default)         REG_SZ     <apppath>,1
-//     shell\open\command               (default)         REG_SZ     <apppath> -url """"%1"""" -requestPending
+//     shell\open\command               (default)         REG_SZ     <apppath> -requestPending -osint -url """"%1""""
 //     shell\open\ddeexec               (default)         REG_SZ     """"%1"""",,0,0,,,,
 //     shell\open\ddeexec               NoActivateHandler REG_SZ
 //                       \Application   (default)         REG_SZ     Firefox
@@ -163,7 +163,7 @@ OpenKeyForWriting(HKEY aStartKey, const char* aKeyName, HKEY* aKey,
 //                                      EditFlags         REG_DWORD  2
 //                                      FriendlyTypeName  REG_SZ     <appname> URL
 //     DefaultIcon                      (default)         REG_SZ     <apppath>,1
-//     shell\open\command               (default)         REG_SZ     <apppath> -url """"%1"""" -requestPending
+//     shell\open\command               (default)         REG_SZ     <apppath> -requestPending -osint -url """"%1""""
 //     shell\open\ddeexec               (default)         REG_SZ     """"%1"""",,0,0,,,,
 //     shell\open\ddeexec               NoActivateHandler REG_SZ
 //                       \Application   (default)         REG_SZ     Firefox
@@ -177,7 +177,7 @@ OpenKeyForWriting(HKEY aStartKey, const char* aKeyName, HKEY* aKey,
 //
 //   HKCU\SOFTWARE\Classes\<protocol>\
 //     DefaultIcon                      (default)         REG_SZ     <apppath>,1
-//     shell\open\command               (default)         REG_SZ     <apppath> -url """"%1"""" -requestPending
+//     shell\open\command               (default)         REG_SZ     <apppath> -requestPending -osint -url """"%1""""
 //     shell\open\ddeexec               (default)         REG_SZ     """"%1"""",,0,0,,,,
 //     shell\open\ddeexec               NoActivateHandler REG_SZ
 //                       \Application   (default)         REG_SZ     Firefox
@@ -232,7 +232,7 @@ typedef struct {
 #define CLS_HTML """"FirefoxHTML""""
 #define CLS_URL """"FirefoxURL""""
 #define VAL_FILE_ICON """"%APPPATH%,1""""
-#define VAL_OPEN """"\""""%APPPATH%\"""" -url \""""%1\"""" -requestPending""""
+#define VAL_OPEN """"\""""%APPPATH%\"""" -requestPending -osint -url \""""%1\""""""""
 
 #define MAKE_KEY_NAME1(PREFIX, MID) \
   PREFIX MID
diff --git a/browser/installer/windows/nsis/shared.nsh b/browser/installer/windows/nsis/shared.nsh
index 7516564..862cee9 100755
--- a/browser/installer/windows/nsis/shared.nsh
+++ b/browser/installer/windows/nsis/shared.nsh
@@ -136,7 +136,7 @@
   GetFullPathName $8 """"$INSTDIR\${FileMainEXE}""""
 
   StrCpy $0 """"SOFTWARE\Classes""""
-  StrCpy $2 """"$\""""$8$\"""" -url $\""""%1$\"""" -requestPending""""
+  StrCpy $2 """"$\""""$8$\"""" -requestPending -osint -url $\""""%1$\""""""""
 
   ; Associate the file handlers with FirefoxHTML
   WriteRegStr SHCTX """"$0\.htm""""   """""""" """"FirefoxHTML""""
@@ -364,7 +364,7 @@
 
   ; Store the command to open the app with an url in a register for easy access.
   GetFullPathName $8 """"$INSTDIR\${FileMainEXE}""""
-  StrCpy $1 """"$\""""$8$\"""" -url $\""""%1$\"""" -requestPending""""
+  StrCpy $1 """"$\""""$8$\"""" -requestPending -osint -url $\""""%1$\""""""""
 
   ; Always set the file and protocol handlers since they may specify a
   ; different path and the path is used by Vista when setting associations.
diff --git a/mail/components/nsMailDefaultHandler.js b/mail/components/nsMailDefaultHandler.js
index 9f94d07..bc45e4a 100644
--- a/mail/components/nsMailDefaultHandler.js
+++ b/mail/components/nsMailDefaultHandler.js
@@ -40,6 +40,7 @@ const nsISupports              = Components.interfaces.nsISupports;
 
 const nsICommandLine           = Components.interfaces.nsICommandLine;
 const nsICommandLineHandler    = Components.interfaces.nsICommandLineHandler;
+const nsICommandLineValidator  = Components.interfaces.nsICommandLineValidator;
 const nsIDOMWindowInternal     = Components.interfaces.nsIDOMWindowInternal;
 const nsIFactory               = Components.interfaces.nsIFactory;
 const nsISupportsString        = Components.interfaces.nsISupportsString;
@@ -123,6 +124,7 @@ var nsMailDefaultHandler = {
 
   QueryInterface : function mdh_QI(iid) {
     if (iid.equals(nsICommandLineHandler) ||
+        iid.equals(nsICommandLineValidator) ||
         iid.equals(nsIFactory) ||
         iid.equals(nsISupports))
       return this;
@@ -294,6 +296,30 @@ var nsMailDefaultHandler = {
     }
   },
 
+  /* nsICommandLineValidator */
+  validate : function mdh_validate(cmdLine) {
+    // Other handlers may use osint so only handle the osint flag if the mail
+    // or compose flag is also present and the command line is valid.
+    var osintFlagIdx = cmdLine.findFlag(""""osint"""", false);
+    var mailFlagIdx = cmdLine.findFlag(""""mail"""", false);
+    var composeFlagIdx = cmdLine.findFlag(""""compose"""", false);
+
+    // If both flags are present use the first flag found so the command line
+    // length test will fail.
+    if (mailFlagIdx > -1 && composeFlagIdx > -1)
+      var actionFlagIdx = mailFlagIdx > composeFlagIdx ? composeFlagIdx : mailFlagIdx;
+    else
+      actionFlagIdx = mailFlagIdx > -1 ? mailFlagIdx : composeFlagIdx;
+
+    if (actionFlagIdx && (osintFlagIdx > -1)) {
+      var param = cmdLine.getArgument(actionFlagIdx + 1);
+      if (cmdLine.length != actionFlagIdx + 2 ||
+          /thunderbird.url.(mailto|news):/.test(param))
+        throw NS_ERROR_ABORT;
+      cmdLine.handleFlag(""""osint"""", false)
+    }
+  },
+
   helpInfo : """""""",
 
   /* nsIFactory */
@@ -349,6 +375,9 @@ var Module = {
     catMan.addCategoryEntry(""""command-line-handler"""",
                             """"x-default"""",
                             mdh_contractID, true, true);
+    catMan.addCategoryEntry(""""command-line-validator"""",
+                            """"b-default"""",
+                            mdh_contractID, true, true);
   },
     
   unregisterSelf : function mod_unregself(compMgr, location, type) {
@@ -359,7 +388,9 @@ var Module = {
                            .getService(Components.interfaces.nsICategoryManager);
 
     catMan.deleteCategoryEntry(""""command-line-handler"""",
-                               """"y-default"""", true);
+                               """"x-default"""", true);
+    catMan.deleteCategoryEntry(""""command-line-validator"""",
+                               """"b-default"""", true);
   },
 
   canUnload: function(compMgr) {
diff --git a/mail/components/shell/nsMailWinIntegration.cpp b/mail/components/shell/nsMailWinIntegration.cpp
index 5b8b8c8..2580eaa 100644
--- a/mail/components/shell/nsMailWinIntegration.cpp
+++ b/mail/components/shell/nsMailWinIntegration.cpp
@@ -174,11 +174,11 @@ static SETTING gMailSettings[] = {
 
   // Protocol Handler Class - for Vista and above
   { MAKE_KEY_NAME2(CLS, CLS_MAILTOURL, DI),  """""""", VAL_ICON, APP_PATH_SUBSTITUTION },
-  { MAKE_KEY_NAME2(CLS, CLS_MAILTOURL, SOP), """""""", """"\""""%APPPATH%\"""" -compose \""""%1\"""""""", APP_PATH_SUBSTITUTION },
+  { MAKE_KEY_NAME2(CLS, CLS_MAILTOURL, SOP), """""""", """"\""""%APPPATH%\"""" -osint -compose \""""%1\"""""""", APP_PATH_SUBSTITUTION },
 
   // Protocol Handlers
   { MAKE_KEY_NAME2(CLS, """"mailto"""", DI),  """""""", VAL_ICON, APP_PATH_SUBSTITUTION},
-  { MAKE_KEY_NAME2(CLS, """"mailto"""", SOP), """""""", """"\""""%APPPATH%\"""" -compose \""""%1\"""""""", APP_PATH_SUBSTITUTION | USE_FOR_DEFAULT_TEST},
+  { MAKE_KEY_NAME2(CLS, """"mailto"""", SOP), """""""", """"\""""%APPPATH%\"""" -osint -compose \""""%1\"""""""", APP_PATH_SUBSTITUTION | USE_FOR_DEFAULT_TEST},
 
   // Mail Client Keys
   { MAKE_KEY_NAME1(MAILCLIENTS, """"%APPNAME%""""),
@@ -214,15 +214,15 @@ static SETTING gMailSettings[] = {
 static SETTING gNewsSettings[] = {
    // Protocol Handler Class - for Vista and above
   { MAKE_KEY_NAME2(CLS, CLS_NEWSURL, DI),  """""""", VAL_ICON, APP_PATH_SUBSTITUTION },
-  { MAKE_KEY_NAME2(CLS, CLS_NEWSURL, SOP), """""""", """"\""""%APPPATH%\"""" -mail \""""%1\"""""""", APP_PATH_SUBSTITUTION },
+  { MAKE_KEY_NAME2(CLS, CLS_NEWSURL, SOP), """""""", """"\""""%APPPATH%\"""" -osint -mail \""""%1\"""""""", APP_PATH_SUBSTITUTION },
 
   // Protocol Handlers
   { MAKE_KEY_NAME2(CLS, """"news"""", DI),  """""""", VAL_ICON, APP_PATH_SUBSTITUTION},
-  { MAKE_KEY_NAME2(CLS, """"news"""", SOP), """""""", """"\""""%APPPATH%\"""" -mail \""""%1\"""""""", APP_PATH_SUBSTITUTION | USE_FOR_DEFAULT_TEST},
+  { MAKE_KEY_NAME2(CLS, """"news"""", SOP), """""""", """"\""""%APPPATH%\"""" -osint -mail \""""%1\"""""""", APP_PATH_SUBSTITUTION | USE_FOR_DEFAULT_TEST},
   { MAKE_KEY_NAME2(CLS, """"nntp"""", DI),  """""""", VAL_ICON, APP_PATH_SUBSTITUTION},
-  { MAKE_KEY_NAME2(CLS, """"nntp"""", SOP), """""""", """"\""""%APPPATH%\"""" -mail \""""%1\"""""""", APP_PATH_SUBSTITUTION | USE_FOR_DEFAULT_TEST},
+  { MAKE_KEY_NAME2(CLS, """"nntp"""", SOP), """""""", """"\""""%APPPATH%\"""" -osint -mail \""""%1\"""""""", APP_PATH_SUBSTITUTION | USE_FOR_DEFAULT_TEST},
   { MAKE_KEY_NAME2(CLS, """"snews"""", DI),  """""""", VAL_ICON, APP_PATH_SUBSTITUTION},
-  { MAKE_KEY_NAME2(CLS, """"snews"""", SOP), """""""", """"\""""%APPPATH%\"""" -mail \""""%1\"""""""", APP_PATH_SUBSTITUTION},
+  { MAKE_KEY_NAME2(CLS, """"snews"""", SOP), """""""", """"\""""%APPPATH%\"""" -osint -mail \""""%1\"""""""", APP_PATH_SUBSTITUTION},
 
   // News Client Keys
   { MAKE_KEY_NAME1(NEWSCLIENTS, """"%APPNAME%""""),
@@ -246,7 +246,7 @@ static SETTING gFeedSettings[] = {
 
   // Protocol Handlers
   { MAKE_KEY_NAME2(CLS, """"feed"""", DI),  """""""", VAL_ICON, APP_PATH_SUBSTITUTION},
-  { MAKE_KEY_NAME2(CLS, """"feed"""", SOP), """""""", """"\""""%APPPATH%\"""" -mail \""""%1\"""""""", APP_PATH_SUBSTITUTION | USE_FOR_DEFAULT_TEST},
+  { MAKE_KEY_NAME2(CLS, """"feed"""", SOP), """""""", """"\""""%APPPATH%\"""" -osint -mail \""""%1\"""""""", APP_PATH_SUBSTITUTION | USE_FOR_DEFAULT_TEST},
 };
 
 nsresult nsWindowsShellService::Init()
diff --git a/mail/installer/windows/nsis/shared.nsh b/mail/installer/windows/nsis/shared.nsh
index 52d2c6b7..77dd5e0 100755
--- a/mail/installer/windows/nsis/shared.nsh
+++ b/mail/installer/windows/nsis/shared.nsh
@@ -135,8 +135,8 @@
   GetFullPathName $8 """"$INSTDIR\${FileMainEXE}""""
 
   StrCpy $0 """"SOFTWARE\Classes""""
-  StrCpy $2 """"$\""""$8$\"""" -mail $\""""%1$\""""""""
-  StrCpy $3 """"$\""""$8$\"""" -compose $\""""%1$\""""""""
+  StrCpy $2 """"$\""""$8$\"""" -osint -mail $\""""%1$\""""""""
+  StrCpy $3 """"$\""""$8$\"""" -osint -compose $\""""%1$\""""""""
 
   ; Associate the file handlers with ThunderbirdEML
   WriteRegStr SHCTX """"$0\.eml""""   """""""" """"ThunderbirdEML""""
@@ -218,7 +218,7 @@
   WriteRegStr HKLM """"$0\shell\safemode\command"""" """""""" """"$\""""$8$\"""" -safe-mode""""
 
   ; Protocols
-  StrCpy $1 """"$\""""$8$\"""" -compose $\""""%1$\""""""""
+  StrCpy $1 """"$\""""$8$\"""" -osint -compose $\""""%1$\""""""""
   ${AddHandlerValues} """"$0\Protocols\mailto"""" """"$1"""" """"$8,0"""" """"${AppRegNameMail} URL"""" """"true"""" """"""""
  
   ; Vista Capabilities registry keys
@@ -253,7 +253,7 @@
   WriteRegStr HKLM """"$0\Capabilities\URLAssociations"""" """"snews"""" """"Thunderbird.Url.news""""
 
   ; Protocols
-  StrCpy $1 """"$\""""$8$\"""" -mail $\""""%1$\""""""""
+  StrCpy $1 """"$\""""$8$\"""" -osint -mail $\""""%1$\""""""""
   ${AddHandlerValues} """"$0\Protocols\nntp"""" """"$1"""" """"$8,0"""" """"${AppRegNameNews} URL"""" """"true"""" """"""""
   ${AddHandlerValues} """"$0\Protocols\news"""" """"$1"""" """"$8,0"""" """"${AppRegNameNews} URL"""" """"true"""" """"""""
   ${AddHandlerValues} """"$0\Protocols\snews"""" """"$1"""" """"$8,0"""" """"${AppRegNameNews} URL"""" """"true"""" """"""""
@@ -361,7 +361,7 @@
   StrCpy $0 """"SOFTWARE\Classes""""
   GetFullPathName $8 """"$INSTDIR\${FileMainEXE}""""
 
-  StrCpy $1 """"$\""""$8$\"""" -compose $\""""%1$\""""""""
+  StrCpy $1 """"$\""""$8$\"""" -osint -compose $\""""%1$\""""""""
   ${AddHandlerValues} """"$0\Thunderbird.Url.mailto"""" """"$1"""" """"$8,0"""" """"${AppRegNameMail} URL"""" """"true"""" """"""""
 
   ReadRegStr $2 SHCTX """"$0\mailto\shell\open\command"""" """"""""
@@ -376,7 +376,7 @@
   StrCpy $1 """"$\""""$8$\"""" $\""""%1$\""""""""
   ${AddHandlerValues} """"$0\ThunderbirdEML"""" """"$1"""" """"$8,0"""" """"${AppRegNameMail} Document"""" """""""" """"""""
 
-  StrCpy $1 """"$\""""$8$\"""" -mail $\""""%1$\""""""""
+  StrCpy $1 """"$\""""$8$\"""" -osint -mail $\""""%1$\""""""""
   ${AddHandlerValues} """"$0\Thunderbird.Url.news"""" """"$1"""" """"$8,0"""" """"${AppRegNameNews} URL"""" """"true"""" """"""""
 
   ReadRegStr $2 SHCTX """"$0\news\shell\open\command"""" """"""""
diff --git a/toolkit/components/commandlines/public/Makefile.in b/toolkit/components/commandlines/public/Makefile.in
index 64890e0..0342007 100644
--- a/toolkit/components/commandlines/public/Makefile.in
+++ b/toolkit/components/commandlines/public/Makefile.in
@@ -49,6 +49,7 @@ XPIDLSRCS = \
 	nsICommandLine.idl \
 	nsICommandLineRunner.idl \
 	nsICommandLineHandler.idl \
+	nsICommandLineValidator.idl \
 	$(NULL)
 
 include $(topsrcdir)/config/rules.mk
diff --git a/toolkit/components/commandlines/public/nsICommandLineValidator.idl b/toolkit/components/commandlines/public/nsICommandLineValidator.idl
new file mode 100644
index 0000000..327070d
--- /dev/null
+++ b/toolkit/components/commandlines/public/nsICommandLineValidator.idl
@@ -0,0 +1,70 @@
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is the Mozilla toolkit.
+ *
+ * The Initial Developer of the Original Code is
+ * Robert Strong <robert.bugzilla@gmail.com>
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s):
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+#include """"nsISupports.idl""""
+
+interface nsICommandLine;
+
+/**
+ * Validates arguments on the command line of an XUL application.
+ *
+ * Each validator is registered in the category """"command-line-validator"""".
+ * The entries in this category are read in alphabetical order, and each
+ * category value is treated as a service contractid implementing this
+ * interface.
+ *
+ * By convention, validator with ordinary priority should begin with """"m"""".
+ *
+ * Example:
+ * Category               Entry          Value
+ * command-line-validator b-browser      @mozilla.org/browser/clh;1
+ * command-line-validator m-edit         @mozilla.org/composer/clh;1
+ * command-line-validator m-irc          @mozilla.org/chatzilla/clh;1
+ *
+ */
+
+[scriptable, uuid(5ecaa593-7660-4a3a-957a-92d5770671c7)]
+interface nsICommandLineValidator : nsISupports
+{
+  /**
+   * Process the command-line validators in the proper order, calling
+   * """"validate()"""" on each.
+   *
+   * @throws NS_ERROR_ABORT if any validator throws NS_ERROR_ABORT. All other
+   *         errors thrown by validators will be silently ignored.
+   */
+  void validate(in nsICommandLine aCommandLine);
+};
diff --git a/toolkit/components/commandlines/src/nsCommandLine.cpp b/toolkit/components/commandlines/src/nsCommandLine.cpp
index 9f360de..706a109 100644
--- a/toolkit/components/commandlines/src/nsCommandLine.cpp
+++ b/toolkit/components/commandlines/src/nsCommandLine.cpp
@@ -39,6 +39,7 @@
 
 #include """"nsICategoryManager.h""""
 #include """"nsICommandLineHandler.h""""
+#include """"nsICommandLineValidator.h""""
 #include """"nsIClassInfoImpl.h""""
 #include """"nsIDOMWindow.h""""
 #include """"nsIFile.h""""
@@ -86,12 +87,16 @@ public:
 protected:
   ~nsCommandLine() { }
 
-  typedef nsresult (*EnumerateCallback)(nsICommandLineHandler* aHandler,
+  typedef nsresult (*EnumerateHandlersCallback)(nsICommandLineHandler* aHandler,
+					nsICommandLine* aThis,
+					void *aClosure);
+  typedef nsresult (*EnumerateValidatorsCallback)(nsICommandLineValidator* aValidator,
 					nsICommandLine* aThis,
 					void *aClosure);
 
   void appendArg(const char* arg);
-  nsresult EnumerateHandlers(EnumerateCallback aCallback, void *aClosure);
+  nsresult EnumerateHandlers(EnumerateHandlersCallback aCallback, void *aClosure);
+  nsresult EnumerateValidators(EnumerateValidatorsCallback aCallback, void *aClosure);
 
   nsStringArray     mArgs;
   PRUint32          mState;
@@ -537,7 +542,7 @@ nsCommandLine::Init(PRInt32 argc, char** argv, nsIFile* aWorkingDir,
 }
 
 nsresult
-nsCommandLine::EnumerateHandlers(EnumerateCallback aCallback, void *aClosure)
+nsCommandLine::EnumerateHandlers(EnumerateHandlersCallback aCallback, void *aClosure)
 {
   nsresult rv;
 
@@ -579,6 +584,55 @@ nsCommandLine::EnumerateHandlers(EnumerateCallback aCallback, void *aClosure)
   return rv;
 }
 
+nsresult
+nsCommandLine::EnumerateValidators(EnumerateValidatorsCallback aCallback, void *aClosure)
+{
+  nsresult rv;
+
+  nsCOMPtr<nsICategoryManager> catman
+    (do_GetService(NS_CATEGORYMANAGER_CONTRACTID));
+  NS_ENSURE_TRUE(catman, NS_ERROR_UNEXPECTED);
+
+  nsCOMPtr<nsISimpleEnumerator> entenum;
+  rv = catman->EnumerateCategory(""""command-line-validator"""",
+                                 getter_AddRefs(entenum));
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  nsCOMPtr<nsIUTF8StringEnumerator> strenum (do_QueryInterface(entenum));
+  NS_ENSURE_TRUE(strenum, NS_ERROR_UNEXPECTED);
+
+  nsCAutoString entry;
+  PRBool hasMore;
+  while (NS_SUCCEEDED(strenum->HasMore(&hasMore)) && hasMore) {
+    strenum->GetNext(entry);
+
+    nsXPIDLCString contractID;
+    rv = catman->GetCategoryEntry(""""command-line-validator"""",
+				  entry.get(),
+				  getter_Copies(contractID));
+    if (!contractID)
+      continue;
+
+    nsCOMPtr<nsICommandLineValidator> clv(do_GetService(contractID.get()));
+    if (!clv)
+      continue;
+
+    rv = (aCallback)(clv, this, aClosure);
+    if (rv == NS_ERROR_ABORT)
+      break;
+
+    rv = NS_OK;
+  }
+
+  return rv;
+}
+
+static nsresult
+EnumValidate(nsICommandLineValidator* aValidator, nsICommandLine* aThis, void*)
+{
+  return aValidator->Validate(aThis);
+}  
+
 static nsresult
 EnumRun(nsICommandLineHandler* aHandler, nsICommandLine* aThis, void*)
 {
@@ -590,6 +644,10 @@ nsCommandLine::Run()
 {
   nsresult rv;
 
+  rv = EnumerateValidators(EnumValidate, nsnull);
+  if (rv == NS_ERROR_ABORT)
+    return rv;
+
   rv = EnumerateHandlers(EnumRun, nsnull);
   if (rv == NS_ERROR_ABORT)
     return rv;
diff --git a/toolkit/xre/nsAppRunner.cpp b/toolkit/xre/nsAppRunner.cpp
index 5475b7c..dd1b729 100644
--- a/toolkit/xre/nsAppRunner.cpp
+++ b/toolkit/xre/nsAppRunner.cpp
@@ -386,13 +386,16 @@ static void RemoveArg(char **argv)
  * --arg (or /arg on win32/OS2).
  *
  * @param aArg the parameter to check. Must be lowercase.
+ * @param aCheckOSInt if true returns ARG_BAD if the osint argument is present
+ *        when aArg is also present.
  * @param if non-null, the -arg <data> will be stored in this pointer. This is *not*
  *        allocated, but rather a pointer to the argv data.
  */
 static ArgResult
-CheckArg(const char* aArg, const char **aParam = nsnull)
+CheckArg(const char* aArg, PRBool aCheckOSInt = PR_FALSE, const char **aParam = nsnull)
 {
   char **curarg = gArgv + 1; // skip argv[0]
+  ArgResult ar = ARG_NONE;
 
   while (*curarg) {
     char *arg = curarg[0];
@@ -409,7 +412,8 @@ CheckArg(const char* aArg, const char **aParam = nsnull)
       if (strimatch(aArg, arg)) {
         RemoveArg(curarg);
         if (!aParam) {
-          return ARG_FOUND;
+          ar = ARG_FOUND;
+          break;
         }
 
         if (*curarg) {
@@ -422,7 +426,8 @@ CheckArg(const char* aArg, const char **aParam = nsnull)
 
           *aParam = *curarg;
           RemoveArg(curarg);
-          return ARG_FOUND;
+          ar = ARG_FOUND;
+          break;
         }
         return ARG_BAD;
       }
@@ -431,7 +436,15 @@ CheckArg(const char* aArg, const char **aParam = nsnull)
     ++curarg;
   }
 
-  return ARG_NONE;
+  if (aCheckOSInt && ar == ARG_FOUND) {
+    ArgResult arOSInt = CheckArg(""""osint"""");
+    if (arOSInt == ARG_FOUND) {
+      ar = ARG_BAD;
+      PR_fprintf(PR_STDERR, """"Error: argument -osint is invalid\n"""");
+    }
+  }
+
+  return ar;
 }
 
 #if defined(XP_WIN)
@@ -1163,14 +1176,14 @@ HandleRemoteArgument(const char* remote, const char* aDesktopStartupID)
   ToLowerCase(program);
   const char *username = getenv(""""LOGNAME"""");
 
-  ar = CheckArg(""""p"""", &profile);
+  ar = CheckArg(""""p"""", PR_FALSE, &profile);
   if (ar == ARG_BAD) {
     PR_fprintf(PR_STDERR, """"Error: argument -p requires a profile name\n"""");
     return 1;
   }
 
   const char *temp = nsnull;
-  ar = CheckArg(""""a"""", &temp);
+  ar = CheckArg(""""a"""", PR_FALSE, &temp);
   if (ar == ARG_BAD) {
     PR_fprintf(PR_STDERR, """"Error: argument -a requires an application name\n"""");
     return 1;
@@ -1178,7 +1191,7 @@ HandleRemoteArgument(const char* remote, const char* aDesktopStartupID)
     program.Assign(temp);
   }
 
-  ar = CheckArg(""""u"""", &username);
+  ar = CheckArg(""""u"""", PR_FALSE, &username);
   if (ar == ARG_BAD) {
     PR_fprintf(PR_STDERR, """"Error: argument -u requires a username\n"""");
     return 1;
@@ -1221,7 +1234,7 @@ RemoteCommandLine(const char* aDesktopStartupID)
   const char *username = getenv(""""LOGNAME"""");
 
   const char *temp = nsnull;
-  ar = CheckArg(""""a"""", &temp);
+  ar = CheckArg(""""a"""", PR_TRUE, &temp);
   if (ar == ARG_BAD) {
     PR_fprintf(PR_STDERR, """"Error: argument -a requires an application name\n"""");
     return PR_FALSE;
@@ -1229,7 +1242,7 @@ RemoteCommandLine(const char* aDesktopStartupID)
     program.Assign(temp);
   }
 
-  ar = CheckArg(""""u"""", &username);
+  ar = CheckArg(""""u"""", PR_TRUE, &username);
   if (ar == ARG_BAD) {
     PR_fprintf(PR_STDERR, """"Error: argument -u requires a username\n"""");
     return PR_FALSE;
@@ -1697,10 +1710,17 @@ SelectProfile(nsIProfileLock* *aResult, nsINativeAppSupport* aNative,
   *aResult = nsnull;
   *aStartOffline = PR_FALSE;
 
+  ar = CheckArg(""""offline"""", PR_TRUE);
+  if (ar == ARG_BAD) {
+    PR_fprintf(PR_STDERR, """"Error: argument -offline is invalid when argument -osint is specified\n"""");
+    return NS_ERROR_FAILURE;
+  }
+
   arg = PR_GetEnv(""""XRE_START_OFFLINE"""");
-  if ((arg && *arg) || CheckArg(""""offline""""))
+  if ((arg && *arg) || ar)
     *aStartOffline = PR_TRUE;
 
+
   arg = PR_GetEnv(""""XRE_PROFILE_PATH"""");
   if (arg && *arg) {
     nsCOMPtr<nsILocalFile> lf;
@@ -1725,17 +1745,22 @@ SelectProfile(nsIProfileLock* *aResult, nsINativeAppSupport* aNative,
 
     // Clear out flags that we handled (or should have handled!) last startup.
     const char *dummy;
-    CheckArg(""""p"""", &dummy);
-    CheckArg(""""profile"""", &dummy);
+    CheckArg(""""p"""", PR_FALSE, &dummy);
+    CheckArg(""""profile"""", PR_FALSE, &dummy);
     CheckArg(""""profilemanager"""");
 
     return NS_LockProfilePath(lf, localDir, nsnull, aResult);
   }
 
-  if (CheckArg(""""migration""""))
+  ar = CheckArg(""""migration"""", PR_TRUE);
+  if (ar == ARG_BAD) {
+    PR_fprintf(PR_STDERR, """"Error: argument -migration is invalid when argument -osint is specified\n"""");
+    return NS_ERROR_FAILURE;
+  } else if (ar == ARG_FOUND) {
     gDoMigration = PR_TRUE;
+  }
 
-  ar = CheckArg(""""profile"""", &arg);
+  ar = CheckArg(""""profile"""", PR_TRUE, &arg);
   if (ar == ARG_BAD) {
     PR_fprintf(PR_STDERR, """"Error: argument -profile requires a path\n"""");
     return NS_ERROR_FAILURE;
@@ -1760,7 +1785,7 @@ SelectProfile(nsIProfileLock* *aResult, nsINativeAppSupport* aNative,
   rv = NS_NewToolkitProfileService(getter_AddRefs(profileSvc));
   NS_ENSURE_SUCCESS(rv, rv);
 
-  ar = CheckArg(""""createprofile"""", &arg);
+  ar = CheckArg(""""createprofile"""", PR_TRUE, &arg);
   if (ar == ARG_BAD) {
     PR_fprintf(PR_STDERR, """"Error: argument -createprofile requires a profile name\n"""");
     return NS_ERROR_FAILURE;
@@ -1822,11 +1847,21 @@ SelectProfile(nsIProfileLock* *aResult, nsINativeAppSupport* aNative,
     }
   }
 
-  ar = CheckArg(""""p"""", &arg);
+  ar = CheckArg(""""p"""", PR_FALSE, &arg);
   if (ar == ARG_BAD) {
+    ar = CheckArg(""""osint"""");
+    if (ar == ARG_FOUND) {
+      PR_fprintf(PR_STDERR, """"Error: argument -p is invalid when argument -osint is specified\n"""");
+      return NS_ERROR_FAILURE;
+    }
     return ShowProfileManager(profileSvc, aNative);
   }
   if (ar) {
+    ar = CheckArg(""""osint"""");
+    if (ar == ARG_FOUND) {
+      PR_fprintf(PR_STDERR, """"Error: argument -p is invalid when argument -osint is specified\n"""");
+      return NS_ERROR_FAILURE;
+    }
     nsCOMPtr<nsIToolkitProfile> profile;
     rv = profileSvc->GetProfileByName(nsDependentCString(arg),
                                       getter_AddRefs(profile));
@@ -1854,7 +1889,11 @@ SelectProfile(nsIProfileLock* *aResult, nsINativeAppSupport* aNative,
     return ShowProfileManager(profileSvc, aNative);
   }
 
-  if (CheckArg(""""profilemanager"""")) {
+  ar = CheckArg(""""profilemanager"""", PR_TRUE);
+  if (ar == ARG_BAD) {
+    PR_fprintf(PR_STDERR, """"Error: argument -profilemanager is invalid when argument -osint is specified\n"""");
+    return NS_ERROR_FAILURE;
+  } else if (ar == ARG_FOUND) {
     return ShowProfileManager(profileSvc, aNative);
   }
 
@@ -2219,6 +2258,7 @@ int
 XRE_main(int argc, char* argv[], const nsXREAppData* aAppData)
 {
   nsresult rv;
+  ArgResult ar;
   NS_TIMELINE_MARK(""""enter main"""");
 
 #ifdef DEBUG
@@ -2448,17 +2488,28 @@ XRE_main(int argc, char* argv[], const nsXREAppData* aAppData)
   ScopedFPHandler handler;
 #endif /* XP_OS2 */
 
+  ar = CheckArg(""""safe-mode"""", PR_TRUE);
+  if (ar == ARG_BAD) {
+    PR_fprintf(PR_STDERR, """"Error: argument -safe-mode is invalid when argument -osint is specified\n"""");
+    return 1;
+  } else if (ar == ARG_FOUND) {
+    gSafeMode = PR_TRUE;
+  }
+
 #ifdef XP_MACOSX
-  if (CheckArg(""""safe-mode"""") || GetCurrentKeyModifiers() & optionKey)
-#else
-  if (CheckArg(""""safe-mode""""))
-#endif
+  if (GetCurrentKeyModifiers() & optionKey)
     gSafeMode = PR_TRUE;
+#endif
 
   // Handle -no-remote command line argument. Setup the environment to
   // better accommodate other components and various restart scenarios.
-  if (CheckArg(""""no-remote""""))
+  ar = CheckArg(""""no-remote"""", PR_TRUE);
+  if (ar == ARG_BAD) {
+    PR_fprintf(PR_STDERR, """"Error: argument -a requires an application name\n"""");
+    return 1;
+  } else if (ar == ARG_FOUND) {
     PR_SetEnv(""""MOZ_NO_REMOTE=1"""");
+  }
 
   // Handle -help and -version command line arguments.
   // They should return quickly, so we deal with them here.
@@ -2483,7 +2534,11 @@ XRE_main(int argc, char* argv[], const nsXREAppData* aAppData)
       return 1;
 
     // Check for -register, which registers chrome and then exits immediately.
-    if (CheckArg(""""register"""")) {
+    ar = CheckArg(""""register"""", PR_TRUE);
+    if (ar == ARG_BAD) {
+      PR_fprintf(PR_STDERR, """"Error: argument -register is invalid when argument -osint is specified\n"""");
+      return 1;
+    } else if (ar == ARG_FOUND) {
       ScopedXPCOMStartup xpcom;
       rv = xpcom.Initialize();
       NS_ENSURE_SUCCESS(rv, 1);
@@ -2584,7 +2639,7 @@ XRE_main(int argc, char* argv[], const nsXREAppData* aAppData)
     // handle -remote now that xpcom is fired up
 
     const char* xremotearg;
-    ArgResult ar = CheckArg(""""remote"""", &xremotearg);
+    ar = CheckArg(""""remote"""", PR_TRUE, &xremotearg);
     if (ar == ARG_BAD) {
       PR_fprintf(PR_STDERR, """"Error: -remote requires an argument\n"""");
       return 1;
@@ -2804,7 +2859,21 @@ XRE_main(int argc, char* argv[], const nsXREAppData* aAppData)
           nsCOMPtr<nsIExtensionManager> em(do_GetService(""""@mozilla.org/extensions/manager;1""""));
           NS_ENSURE_TRUE(em, 1);
 
-          if (CheckArg(""""install-global-extension"""") || CheckArg(""""install-global-theme"""")) {
+          ar = CheckArg(""""install-global-extension"""", PR_TRUE);
+          if (ar == ARG_BAD) {
+            PR_fprintf(PR_STDERR, """"Error: argument -install-global-extension is invalid when argument -osint is specified\n"""");
+            return 1;
+          } else if (ar == ARG_FOUND) {
+            // Do the required processing and then shut down.
+            em->HandleCommandLineArgs(cmdLine);
+            return 0;
+          }
+
+          ar = CheckArg(""""install-global-theme"""", PR_TRUE);
+          if (ar == ARG_BAD) {
+            PR_fprintf(PR_STDERR, """"Error: argument -install-global-theme is invalid when argument -osint is specified\n"""");
+            return 1;
+          } else if (ar == ARG_FOUND) {
             // Do the required processing and then shut down.
             em->HandleCommandLineArgs(cmdLine);
             return 0;"""
4e8e800dcef20e11f3180960192447cea98825b3,97079,382778,peterv%propagandism.org,"Part 2 of the fix for bug 382778. r=smaug, sr=sicking.
",1183467612,"""diff --git a/editor/libeditor/html/nsHTMLEditRules.cpp b/editor/libeditor/html/nsHTMLEditRules.cpp
index 3fc1a0f..c0fc5538 100644
--- a/editor/libeditor/html/nsHTMLEditRules.cpp
+++ b/editor/libeditor/html/nsHTMLEditRules.cpp
@@ -5609,6 +5609,21 @@ nsHTMLEditRules::PromoteRange(nsIDOMRange *inRange,
   return res;
 } 
 
+class nsUniqueFunctor : public nsBoolDomIterFunctor
+{
+public:
+  nsUniqueFunctor(nsCOMArray<nsIDOMNode> &aArray) : mArray(aArray)
+  {
+  }
+  virtual PRBool operator()(nsIDOMNode* aNode)  // used to build list of all nodes iterator covers
+  {
+    return mArray.IndexOf(aNode) < 0;
+  }
+
+private:
+  nsCOMArray<nsIDOMNode> &mArray;
+};
+
 ///////////////////////////////////////////////////////////////////////////
 // GetNodesForOperation: run through the ranges in the array and construct 
 //                       a new array of nodes to be acted on.
@@ -5673,12 +5688,25 @@ nsHTMLEditRules::GetNodesForOperation(nsCOMArray<nsIDOMRange>& inArrayOfRanges,
   {
     opRange = inArrayOfRanges[i];
     
-    nsTrivialFunctor functor;
     nsDOMSubtreeIterator iter;
     res = iter.Init(opRange);
     if (NS_FAILED(res)) return res;
-    res = iter.AppendList(functor, outArrayOfNodes);
-    if (NS_FAILED(res)) return res;    
+    if (outArrayOfNodes.Count() == 0) {
+      nsTrivialFunctor functor;
+      res = iter.AppendList(functor, outArrayOfNodes);
+      if (NS_FAILED(res)) return res;    
+    }
+    else {
+      // We don't want duplicates in outArrayOfNodes, so we use an
+      // iterator/functor that only return nodes that are not already in
+      // outArrayOfNodes.
+      nsCOMArray<nsIDOMNode> nodes;
+      nsUniqueFunctor functor(outArrayOfNodes);
+      res = iter.AppendList(functor, nodes);
+      if (NS_FAILED(res)) return res;
+      if (!outArrayOfNodes.AppendObjects(nodes))
+        return NS_ERROR_OUT_OF_MEMORY;
+    }
   }    
 
   // certain operations should not act on li's and td's, but rather inside """
21a81ed5d9fd3bc55d99c09118eb1a29add42f4f,97157,382778,peterv%propagandism.org,"Fix for bug 382778. r=smaug, sr=sicking.
",1183384887,"""diff --git a/editor/libeditor/base/PlaceholderTxn.cpp b/editor/libeditor/base/PlaceholderTxn.cpp
index 818385f..d06ba1d 100644
--- a/editor/libeditor/base/PlaceholderTxn.cpp
+++ b/editor/libeditor/base/PlaceholderTxn.cpp
@@ -133,8 +133,8 @@ NS_IMETHODIMP PlaceholderTxn::Merge(nsITransaction *aTransaction, PRBool *aDidMe
   // we are absorbing all txn's if mAbsorb is lit.
   if (mAbsorb)
   { 
-    IMETextTxn*  otherTxn = nsnull;
-    if (NS_SUCCEEDED(aTransaction->QueryInterface(IMETextTxn::GetCID(),(void**)&otherTxn)) && otherTxn)
+    nsRefPtr<IMETextTxn> otherTxn;
+    if (NS_SUCCEEDED(aTransaction->QueryInterface(IMETextTxn::GetCID(), getter_AddRefs(otherTxn))) && otherTxn)
     {
       // special handling for IMETextTxn's: they need to merge with any previous
       // IMETextTxn in this placeholder, if possible.
@@ -157,7 +157,6 @@ NS_IMETHODIMP PlaceholderTxn::Merge(nsITransaction *aTransaction, PRBool *aDidMe
           AppendChild(editTxn);
         }
       }
-      NS_IF_RELEASE(otherTxn);
     }
     else if (!plcTxn)  // see bug 171243: just drop incoming placeholders on the floor.
     {                  // their children will be swallowed by this preexisting one.
diff --git a/editor/libeditor/base/nsEditor.cpp b/editor/libeditor/base/nsEditor.cpp
index adbd4dc..682613b 100644
--- a/editor/libeditor/base/nsEditor.cpp
+++ b/editor/libeditor/base/nsEditor.cpp
@@ -645,8 +645,9 @@ nsEditor::DoTransaction(nsITransaction *aTxn)
     // this transaction goes through here.  I bet this is a record.
     
     // We start off with an EditTxn since that's what the factory returns.
-    EditTxn *editTxn;
-    result = TransactionFactory::GetNewTransaction(PlaceholderTxn::GetCID(), &editTxn);
+    nsRefPtr<EditTxn> editTxn;
+    result = TransactionFactory::GetNewTransaction(PlaceholderTxn::GetCID(),
+                                                   getter_AddRefs(editTxn));
     if (NS_FAILED(result)) { return result; }
     if (!editTxn) { return NS_ERROR_NULL_POINTER; }
 
@@ -683,9 +684,6 @@ nsEditor::DoTransaction(nsITransaction *aTxn)
         }
       }
     }
-    
-    // txn mgr will now own this if it's around, and if it isn't we don't care
-    NS_IF_RELEASE(editTxn);    
   }
 
   if (aTxn)
@@ -1269,13 +1267,12 @@ nsEditor::InsertFromDrop(nsIDOMEvent *aEvent)
 NS_IMETHODIMP 
 nsEditor::SetAttribute(nsIDOMElement *aElement, const nsAString & aAttribute, const nsAString & aValue)
 {
-  ChangeAttributeTxn *txn;
-  nsresult result = CreateTxnForSetAttribute(aElement, aAttribute, aValue, &txn);
+  nsRefPtr<ChangeAttributeTxn> txn;
+  nsresult result = CreateTxnForSetAttribute(aElement, aAttribute, aValue,
+                                             getter_AddRefs(txn));
   if (NS_SUCCEEDED(result))  {
     result = DoTransaction(txn);  
   }
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
   return result;
 }
 
@@ -1305,13 +1302,12 @@ nsEditor::GetAttributeValue(nsIDOMElement *aElement,
 NS_IMETHODIMP 
 nsEditor::RemoveAttribute(nsIDOMElement *aElement, const nsAString& aAttribute)
 {
-  ChangeAttributeTxn *txn;
-  nsresult result = CreateTxnForRemoveAttribute(aElement, aAttribute, &txn);
+  nsRefPtr<ChangeAttributeTxn> txn;
+  nsresult result = CreateTxnForRemoveAttribute(aElement, aAttribute,
+                                                getter_AddRefs(txn));
   if (NS_SUCCEEDED(result))  {
     result = DoTransaction(txn);  
   }
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
   return result;
 }
 
@@ -1393,8 +1389,9 @@ NS_IMETHODIMP nsEditor::CreateNode(const nsAString& aTag,
   for (i = 0; i < mActionListeners.Count(); i++)
     mActionListeners[i]->WillCreateNode(aTag, aParent, aPosition);
 
-  CreateElementTxn *txn;
-  nsresult result = CreateTxnForCreateElement(aTag, aParent, aPosition, &txn);
+  nsRefPtr<CreateElementTxn> txn;
+  nsresult result = CreateTxnForCreateElement(aTag, aParent, aPosition,
+                                              getter_AddRefs(txn));
   if (NS_SUCCEEDED(result)) 
   {
     result = DoTransaction(txn);  
@@ -1404,8 +1401,6 @@ NS_IMETHODIMP nsEditor::CreateNode(const nsAString& aTag,
       NS_ASSERTION((NS_SUCCEEDED(result)), """"GetNewNode can't fail if txn::DoTransaction succeeded."""");
     }
   }
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
   
   mRangeUpdater.SelAdjCreateNode(aParent, aPosition);
   
@@ -1426,13 +1421,12 @@ NS_IMETHODIMP nsEditor::InsertNode(nsIDOMNode * aNode,
   for (i = 0; i < mActionListeners.Count(); i++)
     mActionListeners[i]->WillInsertNode(aNode, aParent, aPosition);
 
-  InsertElementTxn *txn;
-  nsresult result = CreateTxnForInsertElement(aNode, aParent, aPosition, &txn);
+  nsRefPtr<InsertElementTxn> txn;
+  nsresult result = CreateTxnForInsertElement(aNode, aParent, aPosition,
+                                              getter_AddRefs(txn));
   if (NS_SUCCEEDED(result))  {
     result = DoTransaction(txn);  
   }
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
 
   mRangeUpdater.SelAdjInsertNode(aParent, aPosition);
 
@@ -1454,8 +1448,8 @@ nsEditor::SplitNode(nsIDOMNode * aNode,
   for (i = 0; i < mActionListeners.Count(); i++)
     mActionListeners[i]->WillSplitNode(aNode, aOffset);
 
-  SplitElementTxn *txn;
-  nsresult result = CreateTxnForSplitNode(aNode, aOffset, &txn);
+  nsRefPtr<SplitElementTxn> txn;
+  nsresult result = CreateTxnForSplitNode(aNode, aOffset, getter_AddRefs(txn));
   if (NS_SUCCEEDED(result))  
   {
     result = DoTransaction(txn);
@@ -1465,8 +1459,6 @@ nsEditor::SplitNode(nsIDOMNode * aNode,
       NS_ASSERTION((NS_SUCCEEDED(result)), """"result must succeeded for GetNewNode"""");
     }
   }
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
 
   mRangeUpdater.SelAdjSplitNode(aNode, aOffset, *aNewLeftNode);
 
@@ -1501,15 +1493,12 @@ nsEditor::JoinNodes(nsIDOMNode * aLeftNode,
   for (i = 0; i < mActionListeners.Count(); i++)
     mActionListeners[i]->WillJoinNodes(aLeftNode, aRightNode, aParent);
 
-  JoinElementTxn *txn;
-  result = CreateTxnForJoinNode(aLeftNode, aRightNode, &txn);
+  nsRefPtr<JoinElementTxn> txn;
+  result = CreateTxnForJoinNode(aLeftNode, aRightNode, getter_AddRefs(txn));
   if (NS_SUCCEEDED(result))  {
     result = DoTransaction(txn);  
   }
 
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
-
   mRangeUpdater.SelAdjJoinNodes(aLeftNode, aRightNode, aParent, offset, (PRInt32)oldLeftNodeLen);
   
   for (i = 0; i < mActionListeners.Count(); i++)
@@ -1532,15 +1521,12 @@ NS_IMETHODIMP nsEditor::DeleteNode(nsIDOMNode * aElement)
   for (i = 0; i < mActionListeners.Count(); i++)
     mActionListeners[i]->WillDeleteNode(aElement);
 
-  DeleteElementTxn *txn;
-  result = CreateTxnForDeleteElement(aElement, &txn);
+  nsRefPtr<DeleteElementTxn> txn;
+  result = CreateTxnForDeleteElement(aElement, getter_AddRefs(txn));
   if (NS_SUCCEEDED(result))  {
     result = DoTransaction(txn);  
   }
 
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
-
   for (i = 0; i < mActionListeners.Count(); i++)
     mActionListeners[i]->DidDeleteNode(aElement, result);
 
@@ -2586,7 +2572,7 @@ NS_IMETHODIMP nsEditor::InsertTextIntoTextNodeImpl(const nsAString& aStringToIns
                                                      nsIDOMCharacterData *aTextNode, 
                                                      PRInt32 aOffset, PRBool suppressIME)
 {
-  EditTxn *txn;
+  nsRefPtr<EditTxn> txn;
   nsresult result;
   // suppressIME s used when editor must insert text, yet this text is not
   // part of current ime operation.  example: adjusting whitespace around an ime insertion.
@@ -2635,13 +2621,18 @@ NS_IMETHODIMP nsEditor::InsertTextIntoTextNodeImpl(const nsAString& aStringToIns
       } // for
     } // if
 
-    result = CreateTxnForIMEText(aStringToInsert, (IMETextTxn**)&txn);
+    nsRefPtr<IMETextTxn> imeTxn;
+    result = CreateTxnForIMEText(aStringToInsert, getter_AddRefs(imeTxn));
+    txn = imeTxn;
   }
   else
   {
-    result = CreateTxnForInsertText(aStringToInsert, aTextNode, aOffset, (InsertTextTxn**)&txn);
+    nsRefPtr<InsertTextTxn> insertTxn;
+    result = CreateTxnForInsertText(aStringToInsert, aTextNode, aOffset,
+                                    getter_AddRefs(insertTxn));
+    txn = insertTxn;
   }
-  if (NS_FAILED(result)) return result;  // we potentially leak txn here?
+  if (NS_FAILED(result)) return result;
 
   // let listeners know what's up
   PRInt32 i;
@@ -2677,13 +2668,10 @@ NS_IMETHODIMP nsEditor::InsertTextIntoTextNodeImpl(const nsAString& aStringToIns
     {
       DeleteNode(mIMETextNode);
       mIMETextNode = nsnull;
-      ((IMETextTxn*)txn)->MarkFixed();  // mark the ime txn """"fixed""""
+      NS_STATIC_CAST(IMETextTxn*, txn.get())->MarkFixed();  // mark the ime txn """"fixed""""
     }
   }
   
-  // The transaction system (if any) has taken ownership of txns.
-  // aggTxn released at end of routine.
-  NS_IF_RELEASE(txn);
   return result;
 }
 
@@ -2820,8 +2808,9 @@ NS_IMETHODIMP nsEditor::DeleteText(nsIDOMCharacterData *aElement,
                               PRUint32             aOffset,
                               PRUint32             aLength)
 {
-  DeleteTextTxn *txn;
-  nsresult result = CreateTxnForDeleteText(aElement, aOffset, aLength, &txn);
+  nsRefPtr<DeleteTextTxn> txn;
+  nsresult result = CreateTxnForDeleteText(aElement, aOffset, aLength,
+                                           getter_AddRefs(txn));
   nsAutoRules beginRulesSniffing(this, kOpDeleteText, nsIEditor::ePrevious);
   if (NS_SUCCEEDED(result))  
   {
@@ -2836,8 +2825,6 @@ NS_IMETHODIMP nsEditor::DeleteText(nsIDOMCharacterData *aElement,
     for (i = 0; i < mActionListeners.Count(); i++)
       mActionListeners[i]->DidDeleteText(aElement, aOffset, aLength, result);
   }
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
   return result;
 }
 
@@ -4406,10 +4393,12 @@ nsEditor::DeleteSelectionImpl(nsIEditor::EDirection aAction)
   nsCOMPtr<nsISelection>selection;
   nsresult res = GetSelection(getter_AddRefs(selection));
   if (NS_FAILED(res)) return res;
-  EditAggregateTxn *txn;
+  nsRefPtr<EditAggregateTxn> txn;
   nsCOMPtr<nsIDOMNode> deleteNode;
   PRInt32 deleteCharOffset = 0, deleteCharLength = 0;
-  res = CreateTxnForDeleteSelection(aAction, &txn, getter_AddRefs(deleteNode), &deleteCharOffset, &deleteCharLength);
+  res = CreateTxnForDeleteSelection(aAction, getter_AddRefs(txn),
+                                    getter_AddRefs(deleteNode),
+                                    &deleteCharOffset, &deleteCharLength);
   nsCOMPtr<nsIDOMCharacterData> deleteCharData(do_QueryInterface(deleteNode));
 
   if (NS_SUCCEEDED(res))  
@@ -4442,9 +4431,6 @@ nsEditor::DeleteSelectionImpl(nsIEditor::EDirection aAction)
         mActionListeners[i]->DidDeleteNode(deleteNode, res);
   }
 
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
-
   return res;
 }
 
diff --git a/editor/libeditor/html/nsHTMLCSSUtils.cpp b/editor/libeditor/html/nsHTMLCSSUtils.cpp
index 874c1f3..f115c0a 100644
--- a/editor/libeditor/html/nsHTMLCSSUtils.cpp
+++ b/editor/libeditor/html/nsHTMLCSSUtils.cpp
@@ -57,6 +57,7 @@
 #include """"nsHTMLCSSUtils.h""""
 #include """"nsColor.h""""
 #include """"nsAttrName.h""""
+#include """"nsAutoPtr.h""""
 
 static
 void ProcessBValue(const nsAString * aInputString, nsAString & aOutputString,
@@ -465,8 +466,9 @@ nsresult
 nsHTMLCSSUtils::SetCSSProperty(nsIDOMElement *aElement, nsIAtom * aProperty, const nsAString & aValue,
                                PRBool aSuppressTransaction)
 {
-  ChangeCSSInlineStyleTxn *txn;
-  nsresult result = CreateCSSPropertyTxn(aElement, aProperty, aValue, &txn, PR_FALSE);
+  nsRefPtr<ChangeCSSInlineStyleTxn> txn;
+  nsresult result = CreateCSSPropertyTxn(aElement, aProperty, aValue,
+                                         getter_AddRefs(txn), PR_FALSE);
   if (NS_SUCCEEDED(result))  {
     if (aSuppressTransaction) {
       result = txn->DoTransaction();
@@ -475,8 +477,6 @@ nsHTMLCSSUtils::SetCSSProperty(nsIDOMElement *aElement, nsIAtom * aProperty, con
       result = mHTMLEditor->DoTransaction(txn);
     }
   }
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
   return result;
 }
 
@@ -499,8 +499,9 @@ nsresult
 nsHTMLCSSUtils::RemoveCSSProperty(nsIDOMElement *aElement, nsIAtom * aProperty, const nsAString & aValue,
                                   PRBool aSuppressTransaction)
 {
-  ChangeCSSInlineStyleTxn *txn;
-  nsresult result = CreateCSSPropertyTxn(aElement, aProperty, aValue, &txn, PR_TRUE);
+  nsRefPtr<ChangeCSSInlineStyleTxn> txn;
+  nsresult result = CreateCSSPropertyTxn(aElement, aProperty, aValue,
+                                         getter_AddRefs(txn), PR_TRUE);
   if (NS_SUCCEEDED(result))  {
     if (aSuppressTransaction) {
       result = txn->DoTransaction();
@@ -509,8 +510,6 @@ nsHTMLCSSUtils::RemoveCSSProperty(nsIDOMElement *aElement, nsIAtom * aProperty,
       result = mHTMLEditor->DoTransaction(txn);
     }
   }
-  // The transaction system (if any) has taken ownership of txn
-  NS_IF_RELEASE(txn);
   return result;
 }
 
diff --git a/editor/libeditor/html/nsHTMLEditor.cpp b/editor/libeditor/html/nsHTMLEditor.cpp
index 111851b..e97058f 100644
--- a/editor/libeditor/html/nsHTMLEditor.cpp
+++ b/editor/libeditor/html/nsHTMLEditor.cpp
@@ -708,11 +708,11 @@ nsHTMLEditor::IsBlockNode(nsIDOMNode *aNode)
 NS_IMETHODIMP 
 nsHTMLEditor::SetDocumentTitle(const nsAString &aTitle)
 {
-  SetDocTitleTxn *txn;
-  nsresult result = TransactionFactory::GetNewTransaction(SetDocTitleTxn::GetCID(), (EditTxn **)&txn);
+  nsRefPtr<EditTxn> txn;
+  nsresult result = TransactionFactory::GetNewTransaction(SetDocTitleTxn::GetCID(), getter_AddRefs(txn));
   if (NS_SUCCEEDED(result))  
   {
-    result = txn->Init(this, &aTitle);
+    result = NS_STATIC_CAST(SetDocTitleTxn*, txn.get())->Init(this, &aTitle);
 
     if (NS_SUCCEEDED(result)) 
     {
@@ -721,8 +721,6 @@ nsHTMLEditor::SetDocumentTitle(const nsAString &aTitle)
 
       result = nsEditor::DoTransaction(txn);  
     }
-    // The transaction system (if any) has taken ownership of txn
-    NS_IF_RELEASE(txn);
   }
   return result;
 }
@@ -3569,8 +3567,8 @@ nsHTMLEditor::RemoveStyleSheet(const nsAString &aURL)
   if (!sheet)
     return NS_ERROR_UNEXPECTED;
 
-  RemoveStyleSheetTxn* txn;
-  rv = CreateTxnForRemoveStyleSheet(sheet, &txn);
+  nsRefPtr<RemoveStyleSheetTxn> txn;
+  rv = CreateTxnForRemoveStyleSheet(sheet, getter_AddRefs(txn));
   if (!txn) rv = NS_ERROR_NULL_POINTER;
   if (NS_SUCCEEDED(rv))
   {
@@ -3581,8 +3579,6 @@ nsHTMLEditor::RemoveStyleSheet(const nsAString &aURL)
     // Remove it from our internal list
     rv = RemoveStyleSheetFromList(aURL);
   }
-  // The transaction system (if any) has taken ownership of txns
-  NS_IF_RELEASE(txn);
   
   return rv;
 }
@@ -4100,8 +4096,8 @@ nsHTMLEditor::StyleSheetLoaded(nsICSSStyleSheet* aSheet, PRBool aWasAlternate,
   if (!mLastStyleSheetURL.IsEmpty())
     RemoveStyleSheet(mLastStyleSheetURL);
 
-  AddStyleSheetTxn* txn;
-  rv = CreateTxnForAddStyleSheet(aSheet, &txn);
+  nsRefPtr<AddStyleSheetTxn> txn;
+  rv = CreateTxnForAddStyleSheet(aSheet, getter_AddRefs(txn));
   if (!txn) rv = NS_ERROR_NULL_POINTER;
   if (NS_SUCCEEDED(rv))
   {
@@ -4129,8 +4125,6 @@ nsHTMLEditor::StyleSheetLoaded(nsICSSStyleSheet* aSheet, PRBool aWasAlternate,
       }
     }
   }
-  // The transaction system (if any) has taken ownership of txns
-  NS_IF_RELEASE(txn);
 
   return NS_OK;
 }
diff --git a/editor/libeditor/text/nsTextEditRules.cpp b/editor/libeditor/text/nsTextEditRules.cpp
index 81f0c5f..f78e18d 100644
--- a/editor/libeditor/text/nsTextEditRules.cpp
+++ b/editor/libeditor/text/nsTextEditRules.cpp
@@ -62,6 +62,7 @@
 #include """"nsUnicharUtils.h""""
 #include """"nsILookAndFeel.h""""
 #include """"nsWidgetsCID.h""""
+#include """"DeleteTextTxn.h""""
 
 // for IBMBIDI
 #include """"nsIPresShell.h""""
@@ -1225,17 +1226,16 @@ nsTextEditRules::ReplaceNewlines(nsIDOMRange *aRange)
       if (offset == -1) break; // done with this node
       
       // delete the newline
-      EditTxn *txn;
+      nsRefPtr<DeleteTextTxn> txn;
       // note 1: we are not telling edit listeners about these because they don't care
       // note 2: we are not wrapping these in a placeholder because we know they already are,
       //         or, failing that, undo is disabled
-      res = mEditor->CreateTxnForDeleteText(textNode, offset, 1, (DeleteTextTxn**)&txn);
+      res = mEditor->CreateTxnForDeleteText(textNode, offset, 1,
+                                            getter_AddRefs(txn));
       if (NS_FAILED(res))  return res; 
       if (!txn)  return NS_ERROR_OUT_OF_MEMORY;
       res = mEditor->DoTransaction(txn); 
       if (NS_FAILED(res))  return res; 
-      // The transaction system (if any) has taken ownership of txn
-      NS_IF_RELEASE(txn);
       
       // insert a break
       res = mEditor->CreateBR(textNode, offset, address_of(brNode));"""
258638ac91135e54d15b16f40ad7afc16bb44068,97917,384663,Olli.Pettay%helsinki.fi,"Bug 384663, r+sr=bz
",1182181421,"""diff --git a/content/base/src/nsGenericElement.cpp b/content/base/src/nsGenericElement.cpp
index d4c43fc..53a2f24 100644
--- a/content/base/src/nsGenericElement.cpp
+++ b/content/base/src/nsGenericElement.cpp
@@ -3572,7 +3572,8 @@ nsGenericElement::SetAttrAndNotify(PRInt32 aNamespaceID,
   NS_ENSURE_SUCCESS(rv, rv);
 
   if (document) {
-    nsXBLBinding *binding = document->BindingManager()->GetBinding(this);
+    nsRefPtr<nsXBLBinding> binding =
+      document->BindingManager()->GetBinding(this);
     if (binding) {
       binding->AttributeChanged(aName, aNamespaceID, PR_FALSE, aNotify);
     }
diff --git a/content/xbl/src/nsXBLPrototypeBinding.cpp b/content/xbl/src/nsXBLPrototypeBinding.cpp
index dd384ca..705e400 100644
--- a/content/xbl/src/nsXBLPrototypeBinding.cpp
+++ b/content/xbl/src/nsXBLPrototypeBinding.cpp
@@ -547,12 +547,13 @@ nsXBLPrototypeBinding::AttributeChanged(nsIAtom* aAttribute,
     return;
 
   // Iterate over the elements in the array.
-  nsIContent* content = GetImmediateChild(nsGkAtoms::content);
+  nsCOMPtr<nsIContent> content = GetImmediateChild(nsGkAtoms::content);
   while (xblAttr) {
     nsIContent* element = xblAttr->GetElement();
 
-    nsIContent *realElement = LocateInstance(aChangedElement, content,
-                                             aAnonymousContent, element);
+    nsCOMPtr<nsIContent> realElement = LocateInstance(aChangedElement, content,
+                                                      aAnonymousContent,
+                                                      element);
 
     if (realElement) {
       nsIAtom* dstAttr = xblAttr->GetDstAttribute();"""
2631a0c112723d0d142c01376a6eef31778fb01e,98010,369211,mrbkap%gmail.com,"Use a better filename when eval is used across scopes. bug 369211, r=brendan
",1181941226,"""diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index abf3720..3472bcc 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -1345,9 +1345,14 @@ obj_eval(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 
     str = JSVAL_TO_STRING(argv[0]);
     if (caller) {
-        file = caller->script->filename;
-        line = js_PCToLineNumber(cx, caller->script, caller->pc);
         principals = JS_EvalFramePrincipals(cx, fp, caller);
+        if (principals == caller->script->principals) {
+            file = caller->script->filename;
+            line = js_PCToLineNumber(cx, caller->script, caller->pc);
+        } else {
+            file = principals->codebase;
+            line = 0;
+        }
     } else {
         file = NULL;
         line = 0;"""
59ff04c95a228c063ea221e399c95cd7553b7f03,98050,369666,bclary%bclary.com,"JavaScript Test - regression test for bug 369666, by Brendan Eich
",1181860989,"""diff --git a/js/tests/js1_7/regress/regress-369666-01.js b/js/tests/js1_7/regress/regress-369666-01.js
new file mode 100755
index 0000000..8257ae6
--- /dev/null
+++ b/js/tests/js1_7/regress/regress-369666-01.js
@@ -0,0 +1,92 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Brendan Eich
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-369666-01.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 369666;
+var summary = 'inner function declaration in let-induced outer ' +
+  'function body gets wrong scope.';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+
+  function foo() {
+    let x = 42
+
+      function bar() {
+      return x;
+    }
+
+    return bar;
+  }
+
+  print(foo()());
+
+  baz = false;
+
+  function foo2() {
+    let x = 42
+
+      function bar() {
+      return x;
+    }
+
+    try {
+      if (baz)
+        return bar;
+    } finally {
+      print('finally', x);
+    }
+    return bar;
+  }
+
+  print(foo2()());
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_7/regress/regress-369666-02.js b/js/tests/js1_7/regress/regress-369666-02.js
new file mode 100755
index 0000000..e5be2a9
--- /dev/null
+++ b/js/tests/js1_7/regress/regress-369666-02.js
@@ -0,0 +1,96 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Brendan Eich
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-369666-02.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 369666;
+var summary = 'inner function declaration in let-induced outer ' +
+  'function body gets wrong scope.';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+
+  function foo() {
+    let x = 42
+
+      function bar() {
+      return x;
+    }
+
+    return bar;
+  }
+
+  print(foo()());
+
+  baz = false;
+
+  function foo2() {
+    let x = 42
+
+      function bar() {
+      return x;
+    }
+
+    function bletch() {
+      return x * x;
+    }
+
+    try {
+      if (baz)
+        return bar;
+    } finally {
+      print('finally', x);
+    }
+    return bletch;
+  }
+
+  print(foo2()());
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
e6b34fd7c1e02565f1067e1be2895293e4b85aa9,98051,351102,bclary%bclary.com,"JavaScript Tests - regression tests for bug 351102, by Jesse Ruderman, Igor Bukanov
",1181860743,"""diff --git a/js/tests/js1_7/extensions/regress-351102-03.js b/js/tests/js1_7/extensions/regress-351102-03.js
new file mode 100755
index 0000000..6b1a9a4
--- /dev/null
+++ b/js/tests/js1_7/extensions/regress-351102-03.js
@@ -0,0 +1,77 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-351102-03.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 351102;
+var summary = 'try/catch-guard/finally GC issues';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var f;
+  f = function()
+    {
+      try
+      {
+        d.d.d;
+      }
+      catch([] if gc())
+      {
+      }
+      catch(y)
+      {
+        print(y);
+      }
+    };
+
+  f();
+  f();
+
+  reportCompare(expect, actual, summary + ': 3');
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_7/extensions/regress-351102-04.js b/js/tests/js1_7/extensions/regress-351102-04.js
new file mode 100755
index 0000000..03c622a
--- /dev/null
+++ b/js/tests/js1_7/extensions/regress-351102-04.js
@@ -0,0 +1,67 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-351102-04.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 351102;
+var summary = 'try/catch-guard/finally GC issues';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var f;
+  try
+  {
+    try { @foo } catch([] if gc()) { }
+  }
+  catch(ex)
+  {
+  }
+  reportCompare(expect, actual, summary + ': 4');
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_7/extensions/regress-351102-05.js b/js/tests/js1_7/extensions/regress-351102-05.js
new file mode 100755
index 0000000..cc306c7
--- /dev/null
+++ b/js/tests/js1_7/extensions/regress-351102-05.js
@@ -0,0 +1,67 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-351102-05.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 351102;
+var summary = 'try/catch-guard/finally GC issues';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var f;
+  try
+  {
+    try { d.d.d } catch([] if gc()) { }
+  }
+  catch(ex)
+  {
+  }
+  reportCompare(expect, actual, summary + ': 5');
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_7/extensions/regress-351102-07.js b/js/tests/js1_7/extensions/regress-351102-07.js
new file mode 100755
index 0000000..fdef17f
--- /dev/null
+++ b/js/tests/js1_7/extensions/regress-351102-07.js
@@ -0,0 +1,76 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-351102-07.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 351102;
+var summary = 'try/catch-guard/finally GC issues';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var f;
+  var obj = { get a() {
+      try {
+        throw 1;
+      } catch (e) {
+      }
+      return false;
+    }};
+
+  try {
+    throw obj;
+  } catch ({a: a} if a) {
+    throw """"Unreachable"""";
+  } catch (e) {
+    if (e !== obj)
+      throw """"Unexpected exception: """"+uneval(e);
+  }
+  reportCompare(expect, actual, summary + ': 7');
+
+  exitFunc ('test');
+}"""
ac87924a6e877de67971b80ce9d50316f75e7f8c,98052,375183,bclary%bclary.com,"JavaScript Tests - regression test for bug 375183, by Igor Bukanov
",1181860449,"""diff --git a/js/tests/js1_5/extensions/regress-375183.js b/js/tests/js1_5/extensions/regress-375183.js
new file mode 100755
index 0000000..0ac98b1
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-375183.js
@@ -0,0 +1,95 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-375183.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 375184;
+var summary = '__noSuchMethod__ should not allocate beyond fp->script->depth';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var obj = { get __noSuchMethod__() {
+      print(""""Executed"""");
+      return new Object();
+    }};
+
+  try
+  {
+    obj.x();
+  }
+  catch(ex)
+  {
+  }
+
+  reportCompare(expect, actual, summary + ':1');
+
+  obj = { __noSuchMethod__: {} };
+  try
+  {
+    obj.x();
+  }
+  catch(ex)
+  {
+  }
+
+  reportCompare(expect, actual, summary + ':2');
+
+  obj = { }
+  obj.__noSuchMethod__ = {};
+  try
+  {
+    obj.x();
+  }
+  catch(ex)
+  {
+  }
+
+  reportCompare(expect, actual, summary + ':3');
+
+  exitFunc ('test');
+}"""
841e2bb3b2abfa182bc4b1aee826ac9a37ff5f70,98053,367630,bclary%bclary.com,"JavaScript Tests - regression test for bug 367630, by Jesse Ruderman
",1181860277,"""diff --git a/js/tests/js1_5/extensions/regress-367630.js b/js/tests/js1_5/extensions/regress-367630.js
new file mode 100755
index 0000000..4fdd3c6
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367630.js
@@ -0,0 +1,77 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-367630.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 367630;
+var summary = 'Do not crash in js_PCToLineNumber with invalid sharp expression';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  try
+  {
+    uneval(#1={a:#1#}); (function() { return #1# })();
+  }
+  catch(ex)
+  {
+    print(ex);
+  }
+  reportCompare(expect, actual, summary);
+
+  try
+  {
+    w = {a:#1=function(){return #1#}}; w.a();
+  }
+  catch(ex)
+  {
+    print(ex);
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
d7ec65f1d6b517ae7ef102443d969bfc3fdd03b6,98055,351102,bclary%bclary.com,"JavaScript Test - regression tests for bug 351102, by Brendan Eich, Igor Bukanov
",1181859818,"""diff --git a/js/tests/js1_5/extensions/regress-351102-01.js b/js/tests/js1_5/extensions/regress-351102-01.js
new file mode 100755
index 0000000..4fb313b
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-351102-01.js
@@ -0,0 +1,72 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Brendan Eich
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-351102-01.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 351102;
+var summary = 'try/catch-guard/finally GC issues';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var f;
+
+  f = function () {
+    try {
+      throw new Error('bad');
+    } catch (e if (e = null, gc(), false)) {
+    } catch (e) {
+      // e is dangling now
+    }
+  };
+
+  f();
+
+  reportCompare(expect, actual, summary + ': 1');
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-351102-02.js b/js/tests/js1_5/extensions/regress-351102-02.js
new file mode 100755
index 0000000..edfd8f0
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-351102-02.js
@@ -0,0 +1,78 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-351102-02.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 351102;
+var summary = 'try/catch-guard/finally GC issues';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var f;
+  f = function ()
+    {
+      var a = null;
+      try {  
+        a();
+      } catch (e) {
+      }
+      return false;
+    };
+
+  try {  
+    throw 1;
+  } catch (e if f()) {
+  } catch (e if e == 1) {
+    print(""""GOOD"""");
+  } catch (e) {
+    print(""""BAD: """"+e);
+  }
+
+  reportCompare(expect, actual, summary + ': 2');
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-351102-06.js b/js/tests/js1_5/extensions/regress-351102-06.js
new file mode 100755
index 0000000..7218ced
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-351102-06.js
@@ -0,0 +1,67 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-351102-06.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 351102;
+var summary = 'try/catch-guard/finally GC issues';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var f;
+  try
+  {
+    try { null.a } catch(e if (e = null, gc())) { }
+  }
+  catch(ex)
+  {
+  }
+  reportCompare(expect, actual, summary + ': 6');
+
+  exitFunc ('test');
+}"""
8dbb54f9f12d47337832c3f719ef9ec9ce955e37,98056,367561,bclary%bclary.com,"JavaScript Tests - regression test for bug 367561, by Igor Bukanov
",1181859591,"""diff --git a/js/tests/js1_5/Regress/regress-367561-01.js b/js/tests/js1_5/Regress/regress-367561-01.js
new file mode 100755
index 0000000..4f66f18
--- /dev/null
+++ b/js/tests/js1_5/Regress/regress-367561-01.js
@@ -0,0 +1,70 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-367561-01.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 367561;
+var summary = 'JSOP_(GET|SET)METHOD and JSOP_SETCONST with > 64K atoms';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var N = 1 << 16;
+  var src = 'var x = /';
+  var array = Array();
+  for (var i = 0; i != N/2; ++i)
+    array[i] = i;
+  src += array.join('/;x=/')+'/; x=""""';
+  src += array.join('"""";x=""""')+'"""";';
+  src += 'y.some_function();';
+  var f = Function(src);
+  var src2 = f.toString();
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/Regress/regress-367561-03.js b/js/tests/js1_5/Regress/regress-367561-03.js
new file mode 100755
index 0000000..955d560
--- /dev/null
+++ b/js/tests/js1_5/Regress/regress-367561-03.js
@@ -0,0 +1,69 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-367561-03.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 367561;
+var summary = 'JSOP_(GET|SET)METHOD and JSOP_SETCONST with > 64K atoms';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  var N = 1 << 16;
+  var src = 'var x = /';
+  var array = Array();
+  for (var i = 0; i != N/2; ++i)
+    array[i] = i;
+  src += array.join('/;x=/')+'/; x=""""';
+  src += array.join('"""";x=""""')+'"""";';
+  src += 'const some_const = 10';
+  eval(src);
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
20bb270906bd2ac8c5197b0246c3435a596408e8,98057,366122,bclary%bclary.com,"JavaScript Test - regression test for bug 366122, by Igor Bukanov
",1181859349,"""diff --git a/js/tests/js1_5/Regress/regress-366122.js b/js/tests/js1_5/Regress/regress-366122.js
new file mode 100755
index 0000000..de67e2a
--- /dev/null
+++ b/js/tests/js1_5/Regress/regress-366122.js
@@ -0,0 +1,79 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-366122.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 366122;
+var summary = 'Compile large script';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  function exploit() {
+    var code = """""""", obj = {};
+    for(var i = 0; i < 0x10000; i++) {
+      if(i == 10242) {
+        code += """"void 0x10000050505050;\n"""";
+      } else {
+        code += """"void 'x"""" + i + """"';\n"""";
+      }
+    }
+    code += """"export undefined;\n"""";
+    code += """"void 125;\n"""";
+    eval(code);
+  }
+  try
+  {
+    exploit();
+  }
+  catch(ex)
+  {
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
964a7aa2329c6acc5cda47beb26cc8afec77ca34,98059,375711,bclary%bclary.com,"JavaScript Test - regression test for bug 375711, by Jesse Ruderman
",1181858658,"""diff --git a/js/tests/ecma_3/RegExp/regress-375711.js b/js/tests/ecma_3/RegExp/regress-375711.js
new file mode 100755
index 0000000..9c2bf77
--- /dev/null
+++ b/js/tests/ecma_3/RegExp/regress-375711.js
@@ -0,0 +1,68 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var gTestfile = 'regress-375711.js';
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 375711;
+var summary = 'Do not assert with /[Q-b]/i.exec("""""""")';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber(BUGNUMBER);
+  printStatus (summary);
+ 
+  try
+  {
+    expect = 'SyntaxError: invalid range in character class';
+    eval('/[Q-b]/i.exec("""""""")');
+  }
+  catch(ex)
+  {
+    actual = ex + '';
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
b0020da849e4e0f2af58c35f11a738da6b5d619d,98076,371360,bzbarsky%mit.edu,"Don't allow loads to start in a docshell that's firing the unload event.  Also
don't allow document.open of the document in that docshell.  Bug 371360,
r=biesi, sr=jst
",1181845086,"""diff --git a/content/html/document/src/nsHTMLDocument.cpp b/content/html/document/src/nsHTMLDocument.cpp
index 3b24aed..08f25b3 100644
--- a/content/html/document/src/nsHTMLDocument.cpp
+++ b/content/html/document/src/nsHTMLDocument.cpp
@@ -2040,6 +2040,16 @@ nsHTMLDocument::OpenCommon(const nsACString& aContentType, PRBool aReplace)
     return NS_ERROR_DOM_NOT_SUPPORTED_ERR;
   }
 
+  // check whether we're in the middle of unload.  If so, ignore this call.
+  nsCOMPtr<nsIDocShell> shell = do_QueryReferent(mDocumentContainer);
+  if (shell) {
+    PRBool inUnload;
+    shell->GetIsInUnload(&inUnload);
+    if (inUnload) {
+      return NS_OK;
+    }
+  }
+
   // Note: We want to use GetDocumentFromContext here because this document
   // should inherit the security information of the document that's opening us,
   // (since if it's secure, then it's presumeably trusted).
diff --git a/docshell/base/nsDocShell.cpp b/docshell/base/nsDocShell.cpp
index 1ff8df7..2bbbc31 100644
--- a/docshell/base/nsDocShell.cpp
+++ b/docshell/base/nsDocShell.cpp
@@ -671,6 +671,9 @@ nsDocShell::LoadURI(nsIURI * aURI,
                     PRUint32 aLoadFlags,
                     PRBool aFirstParty)
 {
+    if (mFiredUnloadEvent) {
+      return NS_OK; // JS may not handle returning of an error code
+    }
     nsresult rv;
     nsCOMPtr<nsIURI> referrer;
     nsCOMPtr<nsIInputStream> postStream;
@@ -973,6 +976,7 @@ nsDocShell::FirePageHideNotification(PRBool aIsUnload)
             }
         }
     }
+
     return NS_OK;
 }
 
@@ -2198,6 +2202,13 @@ nsDocShell::SetChildOffset(PRUint32 aChildOffset)
     return NS_OK;
 }
 
+NS_IMETHODIMP
+nsDocShell::GetIsInUnload(PRBool* aIsInUnload)
+{
+    *aIsInUnload = mFiredUnloadEvent;
+    return NS_OK;
+}
+
 //*****************************************************************************
 // nsDocShell::nsIDocShellTreeNode
 //*****************************************************************************   
@@ -2630,6 +2641,12 @@ nsDocShell::IsPrintingOrPP(PRBool aDisplayErrorDialog)
   return mIsPrintingOrPP;
 }
 
+PRBool
+nsDocShell::IsNavigationAllowed(PRBool aDisplayPrintErrorDialog)
+{
+    return !IsPrintingOrPP(aDisplayPrintErrorDialog) && !mFiredUnloadEvent;
+}
+
 //*****************************************************************************
 // nsDocShell::nsIWebNavigation
 //*****************************************************************************   
@@ -2637,7 +2654,7 @@ nsDocShell::IsPrintingOrPP(PRBool aDisplayErrorDialog)
 NS_IMETHODIMP
 nsDocShell::GetCanGoBack(PRBool * aCanGoBack)
 {
-    if (IsPrintingOrPP(PR_FALSE)) {
+    if (!IsNavigationAllowed(PR_FALSE)) {
       *aCanGoBack = PR_FALSE;
       return NS_OK; // JS may not handle returning of an error code
     }
@@ -2654,7 +2671,7 @@ nsDocShell::GetCanGoBack(PRBool * aCanGoBack)
 NS_IMETHODIMP
 nsDocShell::GetCanGoForward(PRBool * aCanGoForward)
 {
-    if (IsPrintingOrPP(PR_FALSE)) {
+    if (!IsNavigationAllowed(PR_FALSE)) {
       *aCanGoForward = PR_FALSE;
       return NS_OK; // JS may not handle returning of an error code
     }
@@ -2671,7 +2688,7 @@ nsDocShell::GetCanGoForward(PRBool * aCanGoForward)
 NS_IMETHODIMP
 nsDocShell::GoBack()
 {
-    if (IsPrintingOrPP()) {
+    if (!IsNavigationAllowed()) {
       return NS_OK; // JS may not handle returning of an error code
     }
     nsresult rv;
@@ -2687,7 +2704,7 @@ nsDocShell::GoBack()
 NS_IMETHODIMP
 nsDocShell::GoForward()
 {
-    if (IsPrintingOrPP()) {
+    if (!IsNavigationAllowed()) {
       return NS_OK; // JS may not handle returning of an error code
     }
     nsresult rv;
@@ -2702,7 +2719,7 @@ nsDocShell::GoForward()
 
 NS_IMETHODIMP nsDocShell::GotoIndex(PRInt32 aIndex)
 {
-    if (IsPrintingOrPP()) {
+    if (!IsNavigationAllowed()) {
       return NS_OK; // JS may not handle returning of an error code
     }
     nsresult rv;
@@ -2723,7 +2740,7 @@ nsDocShell::LoadURI(const PRUnichar * aURI,
                     nsIInputStream * aPostStream,
                     nsIInputStream * aHeaderStream)
 {
-    if (IsPrintingOrPP()) {
+    if (!IsNavigationAllowed()) {
       return NS_OK; // JS may not handle returning of an error code
     }
     nsCOMPtr<nsIURI> uri;
@@ -3107,7 +3124,7 @@ nsDocShell::LoadErrorPage(nsIURI *aURI, const PRUnichar *aURL,
 NS_IMETHODIMP
 nsDocShell::Reload(PRUint32 aReloadFlags)
 {
-    if (IsPrintingOrPP()) {
+    if (!IsNavigationAllowed()) {
       return NS_OK; // JS may not handle returning of an error code
     }
     nsresult rv;
diff --git a/docshell/base/nsDocShell.h b/docshell/base/nsDocShell.h
index 74a75c5..7128622 100644
--- a/docshell/base/nsDocShell.h
+++ b/docshell/base/nsDocShell.h
@@ -380,6 +380,7 @@ protected:
                              const PRUnichar *aPage,
                              const PRUnichar *aDescription,
                              nsIChannel* aFailedChannel);
+    PRBool IsNavigationAllowed(PRBool aDisplayPrintErrorDialog = PR_TRUE);
     PRBool IsPrintingOrPP(PRBool aDisplayErrorDialog = PR_TRUE);
 
     nsresult SetBaseUrlForWyciwyg(nsIContentViewer * aContentViewer);
diff --git a/docshell/base/nsIDocShell.idl b/docshell/base/nsIDocShell.idl
index 81fa00b..86a2935 100644
--- a/docshell/base/nsIDocShell.idl
+++ b/docshell/base/nsIDocShell.idl
@@ -68,7 +68,7 @@ interface nsILayoutHistoryState;
 interface nsISecureBrowserUI;
 interface nsIDOMStorage;
 
-[scriptable, uuid(db67b973-ba1a-49fa-b5b4-7670d203fa0e)]
+[scriptable, uuid(10ed386d-8598-408c-b571-e75ad18edeb0)]
 interface nsIDocShell : nsISupports
 {
   /**
@@ -184,6 +184,9 @@ interface nsIDocShell : nsISupports
    * Notify the associated content viewer and all child docshells that they are
    * about to be hidden.  If |isUnload| is true, then the document is being
    * unloaded as well.
+   *
+   * @param isUnload if true, fire the unload event in addition to the pagehide
+   *                 event.
    */
   [noscript] void firePageHideNotification(in boolean isUnload);
 
@@ -438,5 +441,12 @@ interface nsIDocShell : nsISupports
    * Set the offset of this child in its container.
    */
   [noscript] void setChildOffset(in unsigned long offset);
+
+  /**
+   * Find out whether the docshell is currently in the middle of a page
+   * transition (after the onunload event has fired, but before the new
+   * document has been set up)
+   */
+  readonly attribute boolean isInUnload;
 };
 
diff --git a/docshell/base/nsWebShell.cpp b/docshell/base/nsWebShell.cpp
index 9812201..ad27f54 100644
--- a/docshell/base/nsWebShell.cpp
+++ b/docshell/base/nsWebShell.cpp
@@ -768,6 +768,11 @@ nsWebShell::OnLinkClick(nsIContent* aContent,
                         nsIInputStream* aHeadersDataStream)
 {
   NS_ASSERTION(NS_IsMainThread(), """"wrong thread"""");
+
+  if (mFiredUnloadEvent) {
+    return NS_OK;
+  }
+  
   nsCOMPtr<nsIRunnable> ev =
       new OnLinkClickEvent(this, aContent, aURI, aTargetSpec,
                            aPostDataStream, aHeadersDataStream);
@@ -791,6 +796,10 @@ nsWebShell::OnLinkClickSync(nsIContent *aContent,
     *aRequest = nsnull;
   }
 
+  if (mFiredUnloadEvent) {
+    return NS_OK;
+  }
+
   {
     // defer to an external protocol handler if necessary...
     nsCOMPtr<nsIExternalProtocolService> extProtService = do_GetService(NS_EXTERNALPROTOCOLSERVICE_CONTRACTID);"""
f584958454bb3f4a14202a715133abbc359bd7a4,98098,382444,Olli.Pettay%helsinki.fi,"Bug 382444, r+sr=roc
",1181810242,"""diff --git a/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp b/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
index 7950c7d..d8051226 100644
--- a/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
+++ b/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
@@ -317,6 +317,7 @@ nsTreeBodyFrame::CalcMaxRowWidth()
 void
 nsTreeBodyFrame::Destroy()
 {
+  mScrollEvent.Revoke();
   // Make sure we cancel any posted callbacks. 
   if (mReflowCallbackPosted) {
     PresContext()->PresShell()->CancelReflowCallback(this);
@@ -470,9 +471,9 @@ nsTreeBodyFrame::ReflowFinished()
         EnsureRowIsVisibleInternal(parts, currentIndex);
     }
 
-    InvalidateScrollbars(parts);
-    UpdateScrollbars(parts);
-    CheckOverflow(parts);
+    if (!FullScrollbarsUpdate(PR_FALSE)) {
+      return PR_FALSE;
+    }
   }
 
   mReflowCallbackPosted = PR_FALSE;
@@ -533,14 +534,8 @@ NS_IMETHODIMP nsTreeBodyFrame::SetView(nsITreeView * aView)
     PRBool isInReflow;
     PresContext()->PresShell()->IsReflowLocked(&isInReflow);
     if (!isInReflow) {
-      ScrollParts parts = GetScrollParts();
       // The scrollbar will need to be updated.
-      InvalidateScrollbars(parts);
-
-      // Reset scrollbar position.
-      UpdateScrollbars(parts);
-
-      CheckOverflow(parts);
+      FullScrollbarsUpdate(PR_FALSE);
     } else if (!mReflowCallbackPosted) {
       mReflowCallbackPosted = PR_TRUE;
       PresContext()->PresShell()->PostReflowCallback(this);
@@ -858,6 +853,7 @@ void
 nsTreeBodyFrame::CheckOverflow(const ScrollParts& aParts)
 {
   PRBool verticalOverflowChanged = PR_FALSE;
+  PRBool horizontalOverflowChanged = PR_FALSE;
 
   if (!mVerticalOverflow && mRowCount > mPageLength) {
     mVerticalOverflow = PR_TRUE;
@@ -868,47 +864,39 @@ nsTreeBodyFrame::CheckOverflow(const ScrollParts& aParts)
     verticalOverflowChanged = PR_TRUE;
   }
 
-  nsPresContext* presContext = PresContext();
+  if (aParts.mColumnsScrollableView) {
+    nsRect bounds = aParts.mColumnsScrollableView->View()->GetBounds();
+    if (bounds.width != 0) {
+      /* Ignore overflows that are less than half a pixel. Yes these happen
+         all over the place when flex boxes are compressed real small. 
+         Probably a result of a rounding errors somewhere in the layout code. */
+      bounds.width += nsPresContext::CSSPixelsToAppUnits(0.5f);
+      if (!mHorizontalOverflow && bounds.width < mHorzWidth) {
+        mHorizontalOverflow = PR_TRUE;
+        horizontalOverflowChanged = PR_TRUE;
+      } else if (mHorizontalOverflow && bounds.width >= mHorzWidth) {
+        mHorizontalOverflow = PR_FALSE;
+        horizontalOverflowChanged = PR_TRUE;
+      }
+    }
+  }
+ 
+  nsRefPtr<nsPresContext> presContext = PresContext();
+  nsCOMPtr<nsIContent> content = mContent;
 
   if (verticalOverflowChanged) {
     nsScrollPortEvent event(PR_TRUE, mVerticalOverflow ? NS_SCROLLPORT_OVERFLOW
                             : NS_SCROLLPORT_UNDERFLOW, nsnull);
     event.orient = nsScrollPortEvent::vertical;
-
-    nsEventStatus status = nsEventStatus_eIgnore;
-    nsEventDispatcher::Dispatch(mContent, presContext, &event, nsnull, &status);
-  }
-
-  if (!aParts.mColumnsScrollableView)
-    return;
-
-  nsRect bounds = aParts.mColumnsScrollableView->View()->GetBounds();
-  if (bounds.width == 0)
-    return;
-
-  /* Ignore overflows that are less than half a pixel. Yes these happen
-     all over the place when flex boxes are compressed real small. 
-     Probably a result of a rounding errors somewhere in the layout code. */
-  bounds.width += nsPresContext::CSSPixelsToAppUnits(0.5f);
-  
-  PRBool horizontalOverflowChanged = PR_FALSE;
-  if (!mHorizontalOverflow && bounds.width < mHorzWidth) {
-    mHorizontalOverflow = PR_TRUE;
-    horizontalOverflowChanged = PR_TRUE;
-  } else if (mHorizontalOverflow && bounds.width >= mHorzWidth) {
-    mHorizontalOverflow = PR_FALSE;
-    horizontalOverflowChanged = PR_TRUE;
+    nsEventDispatcher::Dispatch(content, presContext, &event);
   }
 
   if (horizontalOverflowChanged) {
     nsScrollPortEvent event(PR_TRUE,
                             mHorizontalOverflow ? NS_SCROLLPORT_OVERFLOW
-                                                : NS_SCROLLPORT_UNDERFLOW,
-                            nsnull);
+                            : NS_SCROLLPORT_UNDERFLOW, nsnull);
     event.orient = nsScrollPortEvent::horizontal;
-
-    nsEventStatus status = nsEventStatus_eIgnore;
-    nsEventDispatcher::Dispatch(mContent, presContext, &event, nsnull, &status);
+    nsEventDispatcher::Dispatch(content, presContext, &event);
   }
 }
 
@@ -1822,18 +1810,18 @@ NS_IMETHODIMP nsTreeBodyFrame::RowCountChanged(PRInt32 aIndex, PRInt32 aCount)
 
   if (mTopRowIndex == 0) {    
     // Just update the scrollbar and return.
-    InvalidateScrollbars(parts);
-    CheckOverflow(parts);
-    MarkDirtyIfSelect();
+    if (FullScrollbarsUpdate(PR_FALSE)) {
+      MarkDirtyIfSelect();
+    }
     return NS_OK;
   }
 
+  PRBool needsInvalidation = PR_FALSE;
   // Adjust our top row index.
   if (aCount > 0) {
     if (mTopRowIndex > aIndex) {
       // Rows came in above us.  Augment the top row index.
       mTopRowIndex += aCount;
-      UpdateScrollbars(parts);
     }
   }
   else if (aCount < 0) {
@@ -1841,22 +1829,19 @@ NS_IMETHODIMP nsTreeBodyFrame::RowCountChanged(PRInt32 aIndex, PRInt32 aCount)
       // No need to invalidate. The remove happened
       // completely above us (offscreen).
       mTopRowIndex -= count;
-      UpdateScrollbars(parts);
     }
     else if (mTopRowIndex >= aIndex) {
       // This is a full-blown invalidate.
       if (mTopRowIndex + mPageLength > mRowCount - 1) {
         mTopRowIndex = PR_MAX(0, mRowCount - 1 - mPageLength);
-        UpdateScrollbars(parts);
       }
-      Invalidate();
+      needsInvalidation = PR_TRUE;
     }
   }
 
-  InvalidateScrollbars(parts);
-  CheckOverflow(parts);
-  MarkDirtyIfSelect();
-
+  if (FullScrollbarsUpdate(needsInvalidation)) {
+    MarkDirtyIfSelect();
+  }
   return NS_OK;
 }
 
@@ -1877,14 +1862,10 @@ NS_IMETHODIMP nsTreeBodyFrame::EndUpdateBatch()
       PRInt32 countBeforeUpdate = mRowCount;
       mView->GetRowCount(&mRowCount);
       if (countBeforeUpdate != mRowCount) {
-        ScrollParts parts = GetScrollParts();
-        
         if (mTopRowIndex + mPageLength > mRowCount - 1) {
           mTopRowIndex = PR_MAX(0, mRowCount - 1 - mPageLength);
-          UpdateScrollbars(parts);
         }
-        InvalidateScrollbars(parts);
-        CheckOverflow(parts);
+        FullScrollbarsUpdate(PR_FALSE);
       }
     }
   }
@@ -3736,7 +3717,11 @@ nsTreeBodyFrame::PaintBackgroundLayer(nsStyleContext*      aStyleContext,
 // Scrolling
 NS_IMETHODIMP nsTreeBodyFrame::EnsureRowIsVisible(PRInt32 aRow)
 {
-  return EnsureRowIsVisibleInternal(GetScrollParts(), aRow);
+  ScrollParts parts = GetScrollParts();
+  nsresult rv = EnsureRowIsVisibleInternal(parts, aRow);
+  NS_ENSURE_SUCCESS(rv, rv);
+  UpdateScrollbars(parts);
+  return rv;
 }
 
 nsresult nsTreeBodyFrame::EnsureRowIsVisibleInternal(const ScrollParts& aParts, PRInt32 aRow)
@@ -3791,21 +3776,32 @@ NS_IMETHODIMP nsTreeBodyFrame::EnsureCellIsVisible(PRInt32 aRow, nsITreeColumn*
     if(NS_FAILED(rv)) return rv;
   }
 
-  return EnsureRowIsVisibleInternal(parts, aRow);
+  rv = EnsureRowIsVisibleInternal(parts, aRow);
+  NS_ENSURE_SUCCESS(rv, rv);
+  UpdateScrollbars(parts);
+  return rv;
 }
 
 NS_IMETHODIMP nsTreeBodyFrame::ScrollToCell(PRInt32 aRow, nsITreeColumn* aCol)
 {
   ScrollParts parts = GetScrollParts();
   nsresult rv = ScrollToRowInternal(parts, aRow);
-  if(NS_FAILED(rv)) return rv;
+  NS_ENSURE_SUCCESS(rv, rv);
 
-  return ScrollToColumnInternal(parts, aCol);
+  rv = ScrollToColumnInternal(parts, aCol);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  UpdateScrollbars(parts);
+  return rv;
 }
 
 NS_IMETHODIMP nsTreeBodyFrame::ScrollToColumn(nsITreeColumn* aCol)
 {
-  return ScrollToColumnInternal(GetScrollParts(), aCol);
+  ScrollParts parts = GetScrollParts();
+  nsresult rv = ScrollToColumnInternal(parts, aCol);
+  NS_ENSURE_SUCCESS(rv, rv);
+  UpdateScrollbars(parts);
+  return rv;
 }
 
 nsresult nsTreeBodyFrame::ScrollToColumnInternal(const ScrollParts& aParts,
@@ -3825,20 +3821,26 @@ nsresult nsTreeBodyFrame::ScrollToColumnInternal(const ScrollParts& aParts,
 
 NS_IMETHODIMP nsTreeBodyFrame::ScrollToHorizontalPosition(PRInt32 aHorizontalPosition)
 {
-  ScrollHorzInternal(GetScrollParts(),
-                     nsPresContext::CSSPixelsToAppUnits(aHorizontalPosition));
-  return NS_OK;
+  ScrollParts parts = GetScrollParts();
+  PRInt32 position = nsPresContext::CSSPixelsToAppUnits(aHorizontalPosition);
+  nsresult rv = ScrollHorzInternal(parts, position);
+  NS_ENSURE_SUCCESS(rv, rv);
+  UpdateScrollbars(parts);
+  return rv;
 }
 
 NS_IMETHODIMP nsTreeBodyFrame::ScrollToRow(PRInt32 aRow)
 {
-  return ScrollToRowInternal(GetScrollParts(), aRow);
+  ScrollParts parts = GetScrollParts();
+  nsresult rv = ScrollToRowInternal(parts, aRow);
+  NS_ENSURE_SUCCESS(rv, rv);
+  UpdateScrollbars(parts);
+  return rv;
 }
 
 nsresult nsTreeBodyFrame::ScrollToRowInternal(const ScrollParts& aParts, PRInt32 aRow)
 {
   ScrollInternal(aParts, aRow);
-  UpdateScrollbars(aParts);
 
 #if defined(XP_MAC) || defined(XP_MACOSX)
   // mac can't process the event loop during a drag, so if we're dragging,
@@ -3911,8 +3913,6 @@ nsTreeBodyFrame::ScrollInternal(const ScrollParts& aParts, PRInt32 aRow)
 
   mTopRowIndex += delta;
 
-  nsPresContext* presContext = PresContext();
-
   // See if we have a transparent background or a background image.  
   // If we do, then we cannot blit.
   const nsStyleBackground* background = GetStyleBackground();
@@ -3922,19 +3922,13 @@ nsTreeBodyFrame::ScrollInternal(const ScrollParts& aParts, PRInt32 aRow)
   } else {
     nsIWidget* widget = nsLeafBoxFrame::GetView()->GetWidget();
     if (widget) {
-      nscoord rowHeightAsPixels = presContext->AppUnitsToDevPixels(mRowHeight);
+      nscoord rowHeightAsPixels =
+        PresContext()->AppUnitsToDevPixels(mRowHeight);
       widget->Scroll(0, -delta*rowHeightAsPixels, nsnull);
     }
   }
 
-  nsScrollbarEvent event(PR_TRUE, NS_SCROLL_EVENT, nsnull);
-  // scroll events fired at elements don't bubble (although scroll events
-  // fired at documents do, to the window)
-  event.flags |= NS_EVENT_FLAG_CANT_BUBBLE;
-
-  nsEventStatus status = nsEventStatus_eIgnore;
-  nsEventDispatcher::Dispatch(mContent, presContext, &event, nsnull, &status);
-
+  PostScrollEvent();
   return NS_OK;
 }
 
@@ -3969,26 +3963,11 @@ nsTreeBodyFrame::ScrollHorzInternal(const ScrollParts& aParts, PRInt32 aPosition
     }
   }
 
-  // Reflect the change in the scrollbar 
-  nsAutoString curPos;
-  curPos.AppendInt(aPosition);
-  nsWeakFrame weakFrame(this);
-  aParts.mHScrollbarContent->SetAttr(kNameSpaceID_None,
-                                     nsGkAtoms::curpos, curPos, PR_TRUE);
-  NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
   // Update the column scroll view
   aParts.mColumnsScrollableView->ScrollTo(mHorzPosition, 0, 0);
 
   // And fire off an event about it all
-  nsScrollbarEvent event(PR_TRUE, NS_SCROLL_EVENT, nsnull);
-  // scroll events fired at elements don't bubble (although scroll events
-  // fired at documents do, to the window)
-  event.flags |= NS_EVENT_FLAG_CANT_BUBBLE;
-
-  nsEventStatus status = nsEventStatus_eIgnore;
-  nsEventDispatcher::Dispatch(mContent, PresContext(), &event, nsnull,
-                              &status);
-
+  PostScrollEvent();
   return NS_OK;
 }
 
@@ -4002,7 +3981,6 @@ nsTreeBodyFrame::ScrollbarButtonPressed(nsISupports* aScrollbar, PRInt32 aOldInd
 
   ScrollParts parts = GetScrollParts();
 
-  nsWeakFrame weakFrame(this);
   if (sf == parts.mVScrollbar) {
     if (aNewIndex > aOldIndex)
       ScrollToRowInternal(parts, mTopRowIndex+1);
@@ -4012,7 +3990,6 @@ nsTreeBodyFrame::ScrollbarButtonPressed(nsISupports* aScrollbar, PRInt32 aOldInd
     ScrollHorzInternal(parts, aNewIndex);
   }
 
-  NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
   UpdateScrollbars(parts);
 
   return NS_OK;
@@ -4036,22 +4013,13 @@ nsTreeBodyFrame::PositionChanged(nsISupports* aScrollbar, PRInt32 aOldIndex, PRI
     nscoord rh = nsPresContext::AppUnitsToIntCSSPixels(mRowHeight);
 
     nscoord newrow = aNewIndex/rh;
-    nsWeakFrame weakFrame(this);
     ScrollInternal(parts, newrow);
-    NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
-
-    // Go exactly where we're supposed to
-    // Update the scrollbar.
-    nsAutoString curPos;
-    curPos.AppendInt(aNewIndex);
-    parts.mVScrollbarContent->SetAttr(kNameSpaceID_None,
-                                      nsGkAtoms::curpos, curPos, PR_TRUE);
-
   // Horizontal Scrollbar
   } else if (parts.mHScrollbar == sf) {
     ScrollHorzInternal(parts, aNewIndex);
   }
 
+  UpdateScrollbars(parts);
   return NS_OK;
 }
 
@@ -4274,11 +4242,12 @@ nsTreeBodyFrame::LazyScrollCallback(nsITimer *aTimer, void *aClosure)
     self->mSlots->mTimer = nsnull;
 
     if (self->mView) {
-      self->ScrollByLines(self->mSlots->mScrollLines);
       // Set a new timer to scroll the tree repeatedly.
       self->CreateTimer(nsILookAndFeel::eMetric_TreeScrollDelay,
                         ScrollCallback, nsITimer::TYPE_REPEATING_SLACK,
                         getter_AddRefs(self->mSlots->mTimer));
+      self->ScrollByLines(self->mSlots->mScrollLines);
+      // ScrollByLines may have deleted |self|.
     }
   }
 }
@@ -4298,3 +4267,53 @@ nsTreeBodyFrame::ScrollCallback(nsITimer *aTimer, void *aClosure)
     }
   }
 }
+
+NS_IMETHODIMP
+nsTreeBodyFrame::ScrollEvent::Run()
+{
+  if (mInner) {
+    mInner->FireScrollEvent();
+  }
+  return NS_OK;
+}
+
+
+void
+nsTreeBodyFrame::FireScrollEvent()
+{
+  mScrollEvent.Forget();
+  nsScrollbarEvent event(PR_TRUE, NS_SCROLL_EVENT, nsnull);
+  // scroll events fired at elements don't bubble
+  event.flags |= NS_EVENT_FLAG_CANT_BUBBLE;
+  nsEventDispatcher::Dispatch(GetContent(), PresContext(), &event);
+}
+
+void
+nsTreeBodyFrame::PostScrollEvent()
+{
+  if (mScrollEvent.IsPending())
+    return;
+
+  nsRefPtr<ScrollEvent> ev = new ScrollEvent(this);
+  if (NS_FAILED(NS_DispatchToCurrentThread(ev))) {
+    NS_WARNING(""""failed to dispatch ScrollEvent"""");
+  } else {
+    mScrollEvent = ev;
+  }
+}
+
+PRBool
+nsTreeBodyFrame::FullScrollbarsUpdate(PRBool aNeedsFullInvalidation)
+{
+  ScrollParts parts = GetScrollParts();
+  nsWeakFrame weakFrame(this);
+  UpdateScrollbars(parts);
+  NS_ENSURE_TRUE(weakFrame.IsAlive(), PR_FALSE);
+  if (aNeedsFullInvalidation) {
+    Invalidate();
+  }
+  InvalidateScrollbars(parts);
+  NS_ENSURE_TRUE(weakFrame.IsAlive(), PR_FALSE);
+  CheckOverflow(parts);
+  return weakFrame.IsAlive();
+}
diff --git a/layout/xul/base/src/tree/src/nsTreeBodyFrame.h b/layout/xul/base/src/tree/src/nsTreeBodyFrame.h
index 4c15d72..82c3472 100644
--- a/layout/xul/base/src/tree/src/nsTreeBodyFrame.h
+++ b/layout/xul/base/src/tree/src/nsTreeBodyFrame.h
@@ -58,6 +58,7 @@
 #include """"imgIRequest.h""""
 #include """"imgIDecoderObserver.h""""
 #include """"nsIScrollbarFrame.h""""
+#include """"nsThreadUtils.h""""
 
 // An entry in the tree's image cache
 struct nsTreeImageCacheEntry
@@ -309,6 +310,11 @@ protected:
   // Check overflow and generate events.
   void CheckOverflow(const ScrollParts& aParts);
 
+  // Calls UpdateScrollbars, Invalidate aNeedsFullInvalidation if PR_TRUE,
+  // InvalidateScrollbars and finally CheckOverflow.
+  // returns PR_TRUE if the frame is still alive after the method call.
+  PRBool FullScrollbarsUpdate(PRBool aNeedsFullInvalidation);
+
   // Use to auto-fill some of the common properties without the view having to do it.
   // Examples include container, open, selected, and focus.
   void PrefillPropertyArray(PRInt32 aRowIndex, nsTreeColumn* aCol);
@@ -390,6 +396,18 @@ protected:
 
   static void ScrollCallback(nsITimer *aTimer, void *aClosure);
 
+  class ScrollEvent : public nsRunnable {
+  public:
+    NS_DECL_NSIRUNNABLE
+    ScrollEvent(nsTreeBodyFrame *aInner) : mInner(aInner) {}
+    void Revoke() { mInner = nsnull; }
+  private:
+    nsTreeBodyFrame* mInner;
+  };
+
+  void PostScrollEvent();
+  void FireScrollEvent();
+
 protected: // Data Members
   // The cached box object parent.
   nsCOMPtr<nsITreeBoxObject> mTreeBoxObject;
@@ -489,4 +507,6 @@ protected: // Data Members
   };
 
   Slots* mSlots;
+
+  nsRevocableEventPtr<ScrollEvent> mScrollEvent;
 }; // class nsTreeBodyFrame"""
771628ec84195b3ec23ae477b9c4dd89aa57b998,98173,366128,roc+%cs.cmu.edu,"Bug 366128. Restrict disabling of floats in XUL to cases where the container is not a float containing block. r+sr=bzbarsky
",1181726005,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index f34d8e5..f7b280c 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -5792,6 +5792,8 @@ nsCSSFrameConstructor::ConstructXULFrame(nsFrameConstructorState& aState,
                aTag == nsGkAtoms::description) {
         if ((aTag == nsGkAtoms::label || aTag == nsGkAtoms::description) && 
             (! aContent->HasAttr(kNameSpaceID_None, nsGkAtoms::value))) {
+          // XXX we should probably be calling ConstructBlock here to handle
+          // things like columns etc
           newFrame = NS_NewAreaFrame(mPresShell, aStyleContext,
                                      NS_BLOCK_SPACE_MGR | NS_BLOCK_MARGIN_ROOT);
         }
@@ -6114,12 +6116,14 @@ nsCSSFrameConstructor::ConstructXULFrame(nsFrameConstructorState& aState,
     }
 #endif
 
-    // Push a null float containing block to disable floating within xul
+    // If the new frame isn't a float containing block, then push a null
+    // float containing block to disable floats. This is needed to disable
+    // floats within XUL frames.
     nsFrameConstructorSaveState floatSaveState;
-    if (newFrame->IsBoxFrame()) {
-      aState.PushFloatContainingBlock(nsnull, floatSaveState, PR_FALSE,
-                                      PR_FALSE);
-    }
+    PRBool isFloatContainingBlock =
+      newFrame->GetContentInsertionFrame()->IsFloatContainingBlock();
+    aState.PushFloatContainingBlock(isFloatContainingBlock ? newFrame : nsnull,
+                                    floatSaveState, PR_FALSE, PR_FALSE);
 
     // Process the child content if requested
     nsFrameItems childItems;"""
bca50ddb8edd9cf8770f445994a3517abc75b75c,98210,379959,jonas%sicking.cc,"Bug 379959: Add checks to loadBindingDocument. r/sr=jst
",1181685367,"""diff --git a/content/base/public/nsContentUtils.h b/content/base/public/nsContentUtils.h
index 2b9f4ce..2d4304e 100644
--- a/content/base/public/nsContentUtils.h
+++ b/content/base/public/nsContentUtils.h
@@ -1015,6 +1015,39 @@ public:
    * FALSE.
    */
   static void NotifyInstalledMenuKeyboardListener(PRBool aInstalling);
+
+  /**
+   * Do security checks before loading a resource. Does the following checks:
+   *   nsIScriptSecurityManager::CheckLoadURIWithPrincipal
+   *   NS_CheckContentLoadPolicy
+   *   nsIScriptSecurityManager::CheckSameOriginURI
+   *
+   * You will still need to do at least SameOrigin checks before on redirects.
+   *
+   * @param aURIToLoad         URI that is getting loaded.
+   * @param aLoadingPrincipal  Principal of the resource that is initiating
+   *                           the load
+   * @param aCheckLoadFlags    Flags to be passed to
+   *                           nsIScriptSecurityManager::CheckLoadURIWithPrincipal
+   *                           NOTE: If this contains ALLOW_CHROME the
+   *                                 CheckSameOriginURI check will be skipped if
+   *                                 aURIToLoad is a chrome uri.
+   * @param aAllowData         Set to true to skip CheckSameOriginURI check when
+                               aURIToLoad is a data uri.
+   * @param aContentPolicyType Type     \
+   * @param aContext           Context   |- to be passed to
+   * @param aMimeGuess         Mimetype  |      NS_CheckContentLoadPolicy
+   * @param aExtra             Extra    /
+   */
+  static nsresult CheckSecurityBeforeLoad(nsIURI* aURIToLoad,
+                                          nsIPrincipal* aLoadingPrincipal,
+                                          PRUint32 aCheckLoadFlags,
+                                          PRBool aAllowData,
+                                          PRUint32 aContentPolicyType,
+                                          nsISupports* aContext,
+                                          const nsACString& aMimeGuess = EmptyCString(),
+                                          nsISupports* aExtra = nsnull);
+
 private:
 
   static PRBool InitializeEventTable();
diff --git a/content/base/src/nsContentUtils.cpp b/content/base/src/nsContentUtils.cpp
index 65f2a31..db892db 100644
--- a/content/base/src/nsContentUtils.cpp
+++ b/content/base/src/nsContentUtils.cpp
@@ -137,6 +137,7 @@ static NS_DEFINE_CID(kXTFServiceCID, NS_XTFSERVICE_CID);
 #include """"nsMutationEvent.h""""
 #include """"nsIKBStateControl.h""""
 #include """"nsIMEStateManager.h""""
+#include """"nsContentErrors.h""""
 
 #ifdef IBMBIDI
 #include """"nsIBidiKeyboard.h""""
@@ -3552,3 +3553,56 @@ nsContentUtils::NotifyInstalledMenuKeyboardListener(PRBool aInstalling)
 {
   nsIMEStateManager::OnInstalledMenuKeyboardListener(aInstalling);
 }
+
+static PRBool SchemeIs(nsIURI* aURI, const char* aScheme)
+{
+  nsCOMPtr<nsIURI> baseURI = NS_GetInnermostURI(aURI);
+  NS_ENSURE_TRUE(baseURI, PR_FALSE);
+
+  PRBool isScheme = PR_FALSE;
+  return NS_SUCCEEDED(baseURI->SchemeIs(aScheme, &isScheme)) && isScheme;
+}
+
+/* static */
+nsresult
+nsContentUtils::CheckSecurityBeforeLoad(nsIURI* aURIToLoad,
+                                        nsIPrincipal* aLoadingPrincipal,
+                                        PRUint32 aCheckLoadFlags,
+                                        PRBool aAllowData,
+                                        PRUint32 aContentPolicyType,
+                                        nsISupports* aContext,
+                                        const nsACString& aMimeGuess,
+                                        nsISupports* aExtra)
+{
+  nsCOMPtr<nsIURI> loadingURI;
+  nsresult rv = aLoadingPrincipal->GetURI(getter_AddRefs(loadingURI));
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  // CheckLoadURIWithPrincipal
+  rv = sSecurityManager->
+    CheckLoadURIWithPrincipal(aLoadingPrincipal, aURIToLoad, aCheckLoadFlags);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  // Content Policy
+  PRInt16 shouldLoad = nsIContentPolicy::ACCEPT;
+  rv = NS_CheckContentLoadPolicy(aContentPolicyType,
+                                 aURIToLoad,
+                                 loadingURI,
+                                 aContext,
+                                 aMimeGuess,
+                                 aExtra,
+                                 &shouldLoad,
+                                 GetContentPolicy());
+  NS_ENSURE_SUCCESS(rv, rv);
+  if (NS_CP_REJECTED(shouldLoad)) {
+    return NS_ERROR_CONTENT_BLOCKED;
+  }
+
+  // Same Origin
+  if ((aAllowData && SchemeIs(aURIToLoad, """"data"""")) ||
+      ((aCheckLoadFlags & nsIScriptSecurityManager::ALLOW_CHROME) &&
+       SchemeIs(aURIToLoad, """"chrome""""))) {
+    return NS_OK;
+  }
+  return sSecurityManager->CheckSameOriginURI(loadingURI, aURIToLoad);
+}
diff --git a/content/base/src/nsDocument.cpp b/content/base/src/nsDocument.cpp
index 2cb1ea3..61e40db 100644
--- a/content/base/src/nsDocument.cpp
+++ b/content/base/src/nsDocument.cpp
@@ -154,6 +154,7 @@ static NS_DEFINE_CID(kDOMEventGroupCID, NS_DOMEVENTGROUP_CID);
 #include """"nsIXPConnect.h""""
 #include """"nsCycleCollector.h""""
 #include """"nsCCUncollectableMarker.h""""
+#include """"nsIContentPolicy.h""""
 
 #ifdef MOZ_LOGGING
 // so we can get logging even in release builds
@@ -3430,23 +3431,16 @@ nsDocument::RemoveBinding(nsIDOMElement* aContent, const nsAString& aURI)
 }
 
 NS_IMETHODIMP
-nsDocument::LoadBindingDocument(const nsAString& aURI,
-                                nsIDOMDocument** aResult)
+nsDocument::LoadBindingDocument(const nsAString& aURI)
 {
   nsCOMPtr<nsIURI> uri;
   nsresult rv = NS_NewURI(getter_AddRefs(uri), aURI,
                           mCharacterSet.get(),
                           NS_STATIC_CAST(nsIDocument *, this)->GetBaseURI());
-
   NS_ENSURE_SUCCESS(rv, rv);
-  
-  nsCOMPtr<nsIDocument> doc;
-  mBindingManager->LoadBindingDocument(this, uri, getter_AddRefs(doc));
 
-  if (doc) {
-    CallQueryInterface(doc, aResult);
-  }
-  
+  mBindingManager->LoadBindingDocument(this, uri);
+
   return NS_OK;
 }
 
diff --git a/content/xbl/src/nsBindingManager.cpp b/content/xbl/src/nsBindingManager.cpp
index c5a9541..5ebf6e2 100644
--- a/content/xbl/src/nsBindingManager.cpp
+++ b/content/xbl/src/nsBindingManager.cpp
@@ -766,19 +766,11 @@ nsBindingManager::RemoveLayeredBinding(nsIContent* aContent, nsIURI* aURL)
 
 nsresult
 nsBindingManager::LoadBindingDocument(nsIDocument* aBoundDoc,
-                                      nsIURI* aURL,
-                                      nsIDocument** aResult)
+                                      nsIURI* aURL)
 {
   NS_PRECONDITION(aURL, """"Must have a URI to load!"""");
   
-  nsCAutoString otherScheme;
-  aURL->GetScheme(otherScheme);
-  
-  nsCAutoString scheme;
-  aBoundDoc->GetDocumentURI()->GetScheme(scheme);
-
   // First we need to load our binding.
-  *aResult = nsnull;
   nsresult rv;
   nsCOMPtr<nsIXBLService> xblService = 
            do_GetService(""""@mozilla.org/xbl;1"""", &rv);
@@ -792,11 +784,6 @@ nsBindingManager::LoadBindingDocument(nsIDocument* aBoundDoc,
   if (!info)
     return NS_ERROR_FAILURE;
 
-  // XXXbz Why is this based on a scheme comparison?  Shouldn't this
-  // be a real security check???
-    if (!strcmp(scheme.get(), otherScheme.get()))
-    info->GetDocument(aResult); // Addref happens here.
-    
   return NS_OK;
 }
 
diff --git a/content/xbl/src/nsBindingManager.h b/content/xbl/src/nsBindingManager.h
index 79c5918..d3e6a76 100755
--- a/content/xbl/src/nsBindingManager.h
+++ b/content/xbl/src/nsBindingManager.h
@@ -156,8 +156,7 @@ public:
 
   nsresult AddLayeredBinding(nsIContent* aContent, nsIURI* aURL);
   nsresult RemoveLayeredBinding(nsIContent* aContent, nsIURI* aURL);
-  nsresult LoadBindingDocument(nsIDocument* aBoundDoc, nsIURI* aURL,
-                               nsIDocument** aResult);
+  nsresult LoadBindingDocument(nsIDocument* aBoundDoc, nsIURI* aURL);
 
   nsresult AddToAttachedQueue(nsXBLBinding* aBinding);
   void ProcessAttachedQueue();
diff --git a/content/xbl/src/nsXBLService.cpp b/content/xbl/src/nsXBLService.cpp
index 38baa9b..917ce17 100644
--- a/content/xbl/src/nsXBLService.cpp
+++ b/content/xbl/src/nsXBLService.cpp
@@ -522,42 +522,21 @@ nsXBLService::LoadBindings(nsIContent* aContent, nsIURI* aURL, PRBool aAugmentFl
     }
   }
 
-  // Security check - remote pages can't load local bindings, except from chrome
-  nsIURI *docURI = document->GetDocumentURI();
-  PRBool isChrome = PR_FALSE;
-  rv = docURI->SchemeIs(""""chrome"""", &isChrome);
-
-  // Not everything with a chrome URI has a system principal.  See bug 160042.
-  if (NS_FAILED(rv) || !isChrome) {
-    rv = nsContentUtils::GetSecurityManager()->
-      CheckLoadURIWithPrincipal(document->NodePrincipal(), aURL,
-                                nsIScriptSecurityManager::ALLOW_CHROME);
-    if (NS_FAILED(rv))
-      return rv;
-  }
-
-  // Content policy check.  We have to be careful to not pass aContent as the
-  // context here.  Otherwise, if there is a JS-implemented content policy, we
-  // will attempt to wrap the content node, which will try to load XBL bindings
-  // for it, if any.  Since we're not done loading this binding yet, that will
-  // reenter this method and we'll end up creating a binding and then
-  // immediately clobbering it in our table.  That makes things very confused,
-  // leading to misbehavior and crashes.
-  PRInt16 decision = nsIContentPolicy::ACCEPT;
-  rv = NS_CheckContentLoadPolicy(nsIContentPolicy::TYPE_OTHER,
-                                 aURL,
-                                 docURI,
-                                 document,        // context
-                                 EmptyCString(),  // mime guess
-                                 nsnull,          // extra
-                                 &decision,
-                                 nsContentUtils::GetContentPolicy());
-
-  if (NS_SUCCEEDED(rv) && !NS_CP_ACCEPTED(decision))
-    rv = NS_ERROR_NOT_AVAILABLE;
-
-  if (NS_FAILED(rv))
-    return rv;
+  // Security check - Enforce same-origin policy, except to chrome.
+  // We have to be careful to not pass aContent as the context here. 
+  // Otherwise, if there is a JS-implemented content policy, we will attempt
+  // to wrap the content node, which will try to load XBL bindings for it, if
+  // any. Since we're not done loading this binding yet, that will reenter
+  // this method and we'll end up creating a binding and then immediately
+  // clobbering it in our table.  That makes things very confused, leading to
+  // misbehavior and crashes.
+  rv = nsContentUtils::CheckSecurityBeforeLoad(aURL,
+                                               document->NodePrincipal(),
+                                               nsIScriptSecurityManager::ALLOW_CHROME,
+                                               PR_TRUE,
+                                               nsIContentPolicy::TYPE_OTHER,
+                                               document);
+  NS_ENSURE_SUCCESS(rv, rv);
 
   PRBool ready;
   nsRefPtr<nsXBLBinding> newBinding;
@@ -986,7 +965,16 @@ nsXBLService::LoadBindingDocumentInfo(nsIContent* aBoundElement,
 {
   NS_PRECONDITION(aBindingURI, """"Must have a binding URI"""");
   
-  nsresult rv = NS_OK;
+  nsresult rv;
+  if (aBoundDocument) {
+    rv = nsContentUtils::
+      CheckSecurityBeforeLoad(aBindingURI, aBoundDocument->NodePrincipal(),
+                              nsIScriptSecurityManager::ALLOW_CHROME,
+                              PR_TRUE,
+                              nsIContentPolicy::TYPE_OTHER,
+                              aBoundDocument);
+    NS_ENSURE_SUCCESS(rv, rv);
+  }
 
   *aResult = nsnull;
   nsCOMPtr<nsIXBLDocumentInfo> info;
@@ -1097,6 +1085,43 @@ nsXBLService::LoadBindingDocumentInfo(nsIContent* aBoundElement,
   return NS_OK;
 }
 
+class nsSameOriginChecker : public nsIChannelEventSink,
+                            public nsIInterfaceRequestor
+{
+  NS_DECL_ISUPPORTS
+  NS_DECL_NSICHANNELEVENTSINK
+  NS_DECL_NSIINTERFACEREQUESTOR
+};
+
+NS_IMPL_ISUPPORTS2(nsSameOriginChecker,
+                   nsIChannelEventSink,
+                   nsIInterfaceRequestor)
+
+NS_IMETHODIMP
+nsSameOriginChecker::OnChannelRedirect(nsIChannel *aOldChannel,
+                                       nsIChannel *aNewChannel,
+                                       PRUint32    aFlags)
+{
+    NS_PRECONDITION(aNewChannel, """"Redirecting to null channel?"""");
+
+    nsCOMPtr<nsIURI> oldURI;
+    nsresult rv = aOldChannel->GetURI(getter_AddRefs(oldURI)); // The original URI
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    nsCOMPtr<nsIURI> newURI;
+    rv = aNewChannel->GetURI(getter_AddRefs(newURI)); // The new URI
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    return nsContentUtils::GetSecurityManager()->
+      CheckSameOriginURI(oldURI, newURI);
+}
+
+NS_IMETHODIMP
+nsSameOriginChecker::GetInterface(const nsIID & aIID, void **aResult)
+{
+    return QueryInterface(aIID, aResult);
+}
+
 nsresult
 nsXBLService::FetchBindingDocument(nsIContent* aBoundElement, nsIDocument* aBoundDocument,
                                    nsIURI* aDocumentURI, nsIURI* aBindingURI, 
@@ -1131,6 +1156,11 @@ nsXBLService::FetchBindingDocument(nsIContent* aBoundElement, nsIDocument* aBoun
   rv = NS_NewChannel(getter_AddRefs(channel), aDocumentURI, nsnull, loadGroup);
   NS_ENSURE_SUCCESS(rv, rv);
 
+  nsCOMPtr<nsIInterfaceRequestor> sameOriginChecker = new nsSameOriginChecker;
+  NS_ENSURE_TRUE(sameOriginChecker, NS_ERROR_OUT_OF_MEMORY);
+
+  channel->SetNotificationCallbacks(sameOriginChecker);
+
   nsCOMPtr<nsIStreamListener> listener;
   rv = doc->StartDocumentLoad(""""loadAsInteractiveData"""",
                               channel,
diff --git a/content/xml/document/src/nsXMLPrettyPrinter.cpp b/content/xml/document/src/nsXMLPrettyPrinter.cpp
index 708733d..6051519 100644
--- a/content/xml/document/src/nsXMLPrettyPrinter.cpp
+++ b/content/xml/document/src/nsXMLPrettyPrinter.cpp
@@ -155,9 +155,7 @@ nsXMLPrettyPrinter::PrettyPrint(nsIDocument* aDocument,
     NS_ASSERTION(xblDoc, """"xml document doesn't implement nsIDOMDocumentXBL"""");
     NS_ENSURE_TRUE(xblDoc, NS_ERROR_FAILURE);
 
-    nsCOMPtr<nsIDOMDocument> dummy;
-    xblDoc->LoadBindingDocument(NS_LITERAL_STRING(""""chrome://global/content/xml/XMLPrettyPrint.xml""""),
-                                getter_AddRefs(dummy));
+    xblDoc->LoadBindingDocument(NS_LITERAL_STRING(""""chrome://global/content/xml/XMLPrettyPrint.xml""""));
 
     nsCOMPtr<nsIDOMElement> rootElem;
     sourceDocument->GetDocumentElement(getter_AddRefs(rootElem));
diff --git a/dom/public/idl/xbl/nsIDOMDocumentXBL.idl b/dom/public/idl/xbl/nsIDOMDocumentXBL.idl
index 21c83b9..6a7a9fb 100644
--- a/dom/public/idl/xbl/nsIDOMDocumentXBL.idl
+++ b/dom/public/idl/xbl/nsIDOMDocumentXBL.idl
@@ -39,7 +39,7 @@
 
 #include """"domstubs.idl""""
 
-[scriptable, uuid(c7c0ae9b-a0ba-4f4e-9f2c-c18deb62ee8b)]
+[scriptable, uuid(1a38762b-4da5-4f61-80fb-9317e198cb92)]
 interface nsIDOMDocumentXBL : nsISupports
 {
   nsIDOMNodeList        getAnonymousNodes(in nsIDOMElement elt);
@@ -53,5 +53,5 @@ interface nsIDOMDocumentXBL : nsISupports
                                       in DOMString bindingURL);
 
   nsIDOMElement         getBindingParent(in nsIDOMNode node);
-  nsIDOMDocument        loadBindingDocument(in DOMString documentURL);
+  void                  loadBindingDocument(in DOMString documentURL);
 };"""
4688440db4d066f19a0a9363cd2250b86945712d,98216,383424,jst%mozilla.org,"Fixing bug 383424. Make the context pusher use the owner document. r=mrbkap@gmail.com, sr=bzbarsky@mit.edu
",1181683018,"""diff --git a/content/base/src/nsContentUtils.cpp b/content/base/src/nsContentUtils.cpp
index 97b9ee7..65f2a31 100644
--- a/content/base/src/nsContentUtils.cpp
+++ b/content/base/src/nsContentUtils.cpp
@@ -2404,7 +2404,7 @@ nsCxPusher::Push(nsISupports *aCurrentTarget)
   nsCOMPtr<nsIDocument> document;
 
   if (content) {
-    document = content->GetDocument();
+    document = content->GetOwnerDoc();
   }
 
   if (!document) {"""
c788478abe1fa44260fc627c50a20b2bc2c37530,98586,370127,mrbkap%gmail.com,"Create XPCNativeWrapper function wrappers with the right parent. bug 370127, r=bzbarsky sr=brendan
",1180993437,"""diff --git a/js/src/xpconnect/src/XPCNativeWrapper.cpp b/js/src/xpconnect/src/XPCNativeWrapper.cpp
index 127eccd..9a242af 100644
--- a/js/src/xpconnect/src/XPCNativeWrapper.cpp
+++ b/js/src/xpconnect/src/XPCNativeWrapper.cpp
@@ -1,5 +1,5 @@
 /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* vim: set ts=2 sw=2 et tw=80: */
+/* vim: set ts=2 sw=2 et tw=78: */
 /* ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
  *
@@ -226,18 +226,31 @@ WrapFunction(JSContext* cx, JSObject* funobj, jsval *rval)
     *rval = OBJECT_TO_JSVAL(funobj);
     return JS_TRUE;
   }
+
+  // Ensure that we've been called from JS. Native code should extract
+  // the wrapped native and deal with that directly.
+  // XXX Can we simply trust |cx| here?
+  JSStackFrame *iterator = nsnull;
+  if (!::JS_FrameIterator(cx, &iterator)) {
+    ::JS_ReportError(cx, """"XPCNativeWrappers must be used from script"""");
+    return JS_FALSE;
+  }
   
   // Create a new function that'll call our given function.  This new
   // function's parent will be the original function and that's how we
   // get the right thing to call when this function is called.
+  // Note that we pass nsnull as the nominal parent so that we'll inherit
+  // our caller's Function.prototype.
   JSFunction *funWrapper =
-    ::JS_NewFunction(cx, XPC_NW_FunctionWrapper, 0, 0, funobj,
+    ::JS_NewFunction(cx, XPC_NW_FunctionWrapper, 0, 0, nsnull,
                      """"XPCNativeWrapper function wrapper"""");
   if (!funWrapper) {
     return JS_FALSE;
   }
 
-  *rval = OBJECT_TO_JSVAL(::JS_GetFunctionObject(funWrapper));
+  JSObject* funWrapperObj = ::JS_GetFunctionObject(funWrapper);
+  ::JS_SetParent(cx, funWrapperObj, funobj);
+  *rval = OBJECT_TO_JSVAL(funWrapperObj);
   return JS_TRUE;
 }
 """
2e49ed74635eed4421bc883467693f3212f91c1f,98600,351973,nboyd%atg.com,"Fix failure indicated by test js1_5/extensions/regress-351973.js.
",1180972395,"""diff --git a/js/rhino/src/org/mozilla/javascript/ScriptRuntime.java b/js/rhino/src/org/mozilla/javascript/ScriptRuntime.java
index 7cdd21d..71ce92a 100644
--- a/js/rhino/src/org/mozilla/javascript/ScriptRuntime.java
+++ b/js/rhino/src/org/mozilla/javascript/ScriptRuntime.java
@@ -820,18 +820,24 @@ public class ScriptRuntime {
             if (!iterating) {
                 cx.iterating.intern(thisObj); // stop recursion.
                 Object[] ids = thisObj.getIds();
-                for(int i=0; i < ids.length; i++) {
-                    if (i > 0)
-                        result.append("""", """");
+                for (int i=0; i < ids.length; i++) {
                     Object id = ids[i];
                     Object value;
                     if (id instanceof Integer) {
                         int intId = ((Integer)id).intValue();
                         value = thisObj.get(intId, thisObj);
+                        if (value == Scriptable.NOT_FOUND)
+                            continue;   // a property has been removed
+                        if (i > 0)
+                            result.append("""", """");
                         result.append(intId);
                     } else {
                         String strId = (String)id;
                         value = thisObj.get(strId, thisObj);
+                        if (value == Scriptable.NOT_FOUND)
+                            continue;   // a property has been removed
+                        if (i > 0)
+                            result.append("""", """");
                         if (ScriptRuntime.isValidIdentifierName(strId)) {
                             result.append(strId);
                         } else {"""
d81bcf9d977b9fd2d89e894fdbd6925decc37414,98661,382253,igor%mir2.org,"Bug 382253: consistent termination of inline functions. r=brendan
",1180755999,"""diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index 8285867..bd79871 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -3950,7 +3950,7 @@ interrupt:
                 if (!JSVAL_IS_OBJECT(vp[1])) {
                     PRIMITIVE_TO_OBJECT(cx, vp[1], obj2);
                     if (!obj2)
-                        goto out;
+                        goto bad_inline_call;
                     vp[1] = OBJECT_TO_JSVAL(obj2);
                 }
                 newifp->frame.thisp =
@@ -3959,10 +3959,8 @@ interrupt:
                                    ? parent
                                    : JSVAL_TO_OBJECT(vp[1]),
                                    newifp->frame.argv);
-                if (!newifp->frame.thisp) {
-                    js_FreeRawStack(cx, newmark);
+                if (!newifp->frame.thisp)
                     goto bad_inline_call;
-                }
 #ifdef DUMP_CALL_TABLE
                 LogCall(cx, *vp, argc, vp + 2);
 #endif
@@ -3989,8 +3987,7 @@ interrupt:
                 /* Scope with a call object parented by the callee's parent. */
                 if (JSFUN_HEAVYWEIGHT_TEST(fun->flags) &&
                     !js_GetCallObject(cx, &newifp->frame, parent)) {
-                    ok = JS_FALSE;
-                    goto out;
+                    goto bad_inline_call;
                 }
 
                 /* Switch to new version if currentVersion wasn't overridden. */
@@ -4015,9 +4012,12 @@ interrupt:
                 DO_OP();
 
               bad_inline_call:
+                RESTORE_SP(fp);
+                JS_ASSERT(fp->pc == pc);
                 script = fp->script;
                 depth = (jsint) script->depth;
                 atoms = script->atomMap.vector;
+                js_FreeRawStack(cx, newmark);
                 ok = JS_FALSE;
                 goto out;
             }"""
5c55271c81daf507e0491831af536fb9c7091cef,98823,353214,bclary%bclary.com,"JavaScript Test - tweak decompilation result, bug 353214
",1180476311,"""diff --git a/js/tests/js1_5/extensions/regress-353214.js b/js/tests/js1_5/extensions/regress-353214.js
index 4fcde7d..5c32f79 100755
--- a/js/tests/js1_5/extensions/regress-353214.js
+++ b/js/tests/js1_5/extensions/regress-353214.js
@@ -54,7 +54,7 @@ function test()
   printStatus (summary);
  
   var f = function() { (function ([x]) { })(); eval('return 3;') }
-  expect = 'function() { (function ([x]) { })(); eval(""""return 3;""""); }';
+  expect = 'function() { (function ([x]) { }()); eval(""""return 3;""""); }';
   actual = f + '';
   compareSource(expect, actual, summary);
 """
a39acdf8d3d07cb3f2248275a6860bcf6fb16db7,98914,351236,Olli.Pettay%helsinki.fi,"Bug 351236, r+sr=neil
",1180299433,"""diff --git a/editor/composer/src/nsComposerCommandsUpdater.cpp b/editor/composer/src/nsComposerCommandsUpdater.cpp
index 7c08154..0106479 100644
--- a/editor/composer/src/nsComposerCommandsUpdater.cpp
+++ b/editor/composer/src/nsComposerCommandsUpdater.cpp
@@ -49,14 +49,12 @@
 #include """"nsString.h""""
 
 #include """"nsICommandManager.h""""
-#include """"nsPICommandUpdater.h""""
 
 #include """"nsIDocShell.h""""
 #include """"nsITransactionManager.h""""
 
 nsComposerCommandsUpdater::nsComposerCommandsUpdater()
 :  mDOMWindow(nsnull)
-,  mDocShell(nsnull)
 ,  mDirtyState(eStateUninitialized)
 ,  mSelectionCollapsed(eStateUninitialized)
 ,  mFirstDoOfFirstUndo(PR_TRUE)
@@ -248,7 +246,7 @@ nsComposerCommandsUpdater::Init(nsIDOMWindow* aDOMWindow)
   nsCOMPtr<nsPIDOMWindow> window(do_QueryInterface(aDOMWindow));
   if (window)
   {
-    mDocShell = window->GetDocShell();
+    mDocShell = do_GetWeakReference(window->GetDocShell());
   }
   return NS_OK;
 }
@@ -301,10 +299,7 @@ nsComposerCommandsUpdater::UpdateDirtyState(PRBool aNowDirty)
 nsresult
 nsComposerCommandsUpdater::UpdateCommandGroup(const nsAString& aCommandGroup)
 {
-  if (!mDocShell) return NS_ERROR_FAILURE;
-
-  nsCOMPtr<nsICommandManager> commandManager = do_GetInterface(mDocShell);
-  nsCOMPtr<nsPICommandUpdater> commandUpdater = do_QueryInterface(commandManager);
+  nsCOMPtr<nsPICommandUpdater> commandUpdater = GetCommandUpdater();
   if (!commandUpdater) return NS_ERROR_FAILURE;
 
   
@@ -358,10 +353,7 @@ nsComposerCommandsUpdater::UpdateCommandGroup(const nsAString& aCommandGroup)
 nsresult
 nsComposerCommandsUpdater::UpdateOneCommand(const char *aCommand)
 {
-  if (!mDocShell) return NS_ERROR_FAILURE;
-  
-  nsCOMPtr<nsICommandManager>  	commandManager = do_GetInterface(mDocShell);
-  nsCOMPtr<nsPICommandUpdater>	commandUpdater = do_QueryInterface(commandManager);
+  nsCOMPtr<nsPICommandUpdater> commandUpdater = GetCommandUpdater();
   if (!commandUpdater) return NS_ERROR_FAILURE;
 
   commandUpdater->CommandStatusChanged(aCommand);
@@ -387,6 +379,18 @@ nsComposerCommandsUpdater::SelectionIsCollapsed()
   return PR_FALSE;
 }
 
+already_AddRefed<nsPICommandUpdater>
+nsComposerCommandsUpdater::GetCommandUpdater()
+{
+  nsCOMPtr<nsIDocShell> docShell = do_QueryReferent(mDocShell);
+  NS_ENSURE_TRUE(docShell, nsnull);
+  nsCOMPtr<nsICommandManager> manager = do_GetInterface(docShell);
+  nsCOMPtr<nsPICommandUpdater> updater = do_QueryInterface(manager);
+  nsPICommandUpdater* retVal = nsnull;
+  updater.swap(retVal);
+  return retVal;
+}
+
 #if 0
 #pragma mark -
 #endif
diff --git a/editor/composer/src/nsComposerCommandsUpdater.h b/editor/composer/src/nsComposerCommandsUpdater.h
index 75c9b32..a660e35 100644
--- a/editor/composer/src/nsComposerCommandsUpdater.h
+++ b/editor/composer/src/nsComposerCommandsUpdater.h
@@ -47,6 +47,8 @@
 
 #include """"nsCOMPtr.h""""
 #include """"nsITimer.h""""
+#include """"nsWeakPtr.h""""
+#include """"nsPICommandUpdater.h""""
 
 #include """"nsISelectionListener.h""""
 #include """"nsIDocumentStateListener.h""""
@@ -110,13 +112,15 @@ protected:
   nsresult      UpdateDirtyState(PRBool aNowDirty);  
   nsresult      UpdateOneCommand(const char* aCommand);
   nsresult      UpdateCommandGroup(const nsAString& aCommandGroup);
+
+  already_AddRefed<nsPICommandUpdater> GetCommandUpdater();
   
   nsresult      PrimeUpdateTimer();
   void          TimerCallback();
   nsCOMPtr<nsITimer>  mUpdateTimer;
 
   nsIDOMWindow* mDOMWindow;  // Weak reference
-  nsIDocShell*  mDocShell;   // Weak reference
+  nsWeakPtr     mDocShell;
   PRInt8        mDirtyState;  
   PRInt8        mSelectionCollapsed;  
   PRPackedBool  mFirstDoOfFirstUndo;"""
f3ce0b14cc4e437020d557192a1175c75207dd90,99057,370127,mrbkap%gmail.com,"Use the currently executing function as the nominal parent for our function so that we pull the correct prototype for our function. bug 370127, r+sr=jst
",1179965880,"""diff --git a/js/src/xpconnect/src/XPCNativeWrapper.cpp b/js/src/xpconnect/src/XPCNativeWrapper.cpp
index 127eccd..e05a225 100644
--- a/js/src/xpconnect/src/XPCNativeWrapper.cpp
+++ b/js/src/xpconnect/src/XPCNativeWrapper.cpp
@@ -231,13 +231,15 @@ WrapFunction(JSContext* cx, JSObject* funobj, jsval *rval)
   // function's parent will be the original function and that's how we
   // get the right thing to call when this function is called.
   JSFunction *funWrapper =
-    ::JS_NewFunction(cx, XPC_NW_FunctionWrapper, 0, 0, funobj,
+    ::JS_NewFunction(cx, XPC_NW_FunctionWrapper, 0, 0, nsnull,
                      """"XPCNativeWrapper function wrapper"""");
   if (!funWrapper) {
     return JS_FALSE;
   }
 
-  *rval = OBJECT_TO_JSVAL(::JS_GetFunctionObject(funWrapper));
+  JSObject* funWrapperObj = ::JS_GetFunctionObject(funWrapper);
+  ::JS_SetParent(cx, funWrapperObj, funobj);
+  *rval = OBJECT_TO_JSVAL(funWrapperObj);
   return JS_TRUE;
 }
 """
1e734eac451fb23074eade733e555d8f2554955a,99201,381374,mrbkap%gmail.com,"Mark the overwritten scope property in the space between where we remove it and re-add it in its changed form. bug 381374, r=igor
",1179795304,"""diff --git a/js/src/jsscope.c b/js/src/jsscope.c
index 9448858..dcfe6d6 100644
--- a/js/src/jsscope.c
+++ b/js/src/jsscope.c
@@ -978,6 +978,7 @@ js_AddScopeProperty(JSContext *cx, JSScope *scope, jsid id,
     JSScopeProperty **spp, *sprop, *overwriting, **spvec, **spp2, child;
     uint32 size, splen, i;
     int change;
+    JSTempValueRooter tvr;
 
     JS_ASSERT(JS_IS_SCOPE_LOCKED(cx, scope));
     CHECK_ANCESTOR_LINE(scope, JS_TRUE);
@@ -1249,7 +1250,9 @@ js_AddScopeProperty(JSContext *cx, JSScope *scope, jsid id,
          */
         if (!JS_CLIST_IS_EMPTY(&cx->runtime->watchPointList) &&
             js_FindWatchPoint(cx->runtime, scope, id)) {
+            JS_PUSH_TEMP_ROOT_SPROP(cx, overwriting, &tvr);
             setter = js_WrapWatchedSetter(cx, id, attrs, setter);
+            JS_POP_TEMP_ROOT(cx, &tvr);
             if (!setter)
                 goto fail_overwrite;
         }"""
099172f12b9e24fca66d7ad2bdb844a79ce33175,99211,375976,mrbkap%gmail.com,"Protect the number from GC, even if it was originally a number. bug 375976, r=crowder
",1179791142,"""diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index a2df5fc..8e6d67b 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -3588,8 +3588,8 @@ interrupt:
                 ok = js_NewNumberValue(cx, d, &rtmp);                         \
                 if (!ok)                                                      \
                     goto out;                                                 \
-                *vp = rtmp;                                                   \
             }                                                                 \
+            *vp = rtmp;                                                       \
             (cs->format & JOF_INC) ? d++ : d--;                               \
             ok = js_NewNumberValue(cx, d, &rval);                             \
         } else {                                                              \"""
18fb5d91d78768ec6fa4b849640585df233d5251,99232,380933,mrbkap%gmail.com,"Handle Function.prototype.toString not returning what we expect it to return (a function expression). bug 380933, r=crowder
",1179770468,"""diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index f6c132b..202eae60 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -963,8 +963,12 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 if (vchars[0] == '(')
                     vchars++;
                 vchars = js_strchr_limit(vchars, '(', vchars + vlength);
-                JS_ASSERT(vchars && *vchars);
-                vlength -= vchars - start + 1;
+                if (vchars) {
+                    vlength -= vchars - start + 1;
+                } else {
+                    gsop[j] = NULL;
+                    vchars = start;
+                }
             }
 #else
             needOldStyleGetterSetter = JS_TRUE;"""
9517237554d31177008d7ceadfa25bbfbfe3ed4e,99268,381167,Olli.Pettay%helsinki.fi,"Bug 381167, r+sr=roc
",1179732467,"""diff --git a/layout/xul/base/src/tree/src/nsTreeBoxObject.cpp b/layout/xul/base/src/tree/src/nsTreeBoxObject.cpp
index b678c88..843bdfe 100644
--- a/layout/xul/base/src/tree/src/nsTreeBoxObject.cpp
+++ b/layout/xul/base/src/tree/src/nsTreeBoxObject.cpp
@@ -120,9 +120,12 @@ static void FindBodyElement(nsIContent* aParent, nsIContent** aResult)
       *aResult = content;
       NS_ADDREF(*aResult);
       break;
-    }
-    else if (content->IsNodeOfType(nsINode::eELEMENT) &&
-             !ni->Equals(nsGkAtoms::_template, kNameSpaceID_XUL)) {
+    } else if (ni->Equals(nsGkAtoms::tree, kNameSpaceID_XUL)) {
+      // There are nesting tree elements. Only the innermost should
+      // find the treechilren.
+      break;
+    } else if (content->IsNodeOfType(nsINode::eELEMENT) &&
+               !ni->Equals(nsGkAtoms::_template, kNameSpaceID_XUL)) {
       FindBodyElement(content, aResult);
       if (*aResult)
         break;"""
bdcf02c83c95caf8449ec3d1fc439990857e55b5,99468,358594,crowder%fiverocks.com,"Bug 358594: sharp variables should deserialize using old getter/setter syntax.
",1179268884,"""diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index b8dad1f..816eb62 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -719,6 +719,7 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     uintN attrs;
 #endif
     jsval *val;
+    JSString *gsopold[2];
     JSString *gsop[2];
     JSAtom *atom;
     JSString *idstr, *valstr, *str;
@@ -877,31 +878,23 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 (attrs & (JSPROP_GETTER | JSPROP_SETTER))) {
                 if (attrs & JSPROP_GETTER) {
                     val[valcnt] = (jsval) ((JSScopeProperty *)prop)->getter;
-#ifdef OLD_GETTER_SETTER
-                    gsop[valcnt] =
+                    gsopold[valcnt] =
                         ATOM_TO_STRING(cx->runtime->atomState.getterAtom);
-#else
-                    gsop[valcnt] = needOldStyleGetterSetter
-                        ? ATOM_TO_STRING(cx->runtime->atomState.getterAtom)
-                        : ATOM_TO_STRING(cx->runtime->atomState.getAtom);
-#endif
-                    valcnt++;
+                    gsop[valcnt] =
+                        ATOM_TO_STRING(cx->runtime->atomState.getAtom);
                 }
                 if (attrs & JSPROP_SETTER) {
                     val[valcnt] = (jsval) ((JSScopeProperty *)prop)->setter;
-#ifdef OLD_GETTER_SETTER
-                    gsop[valcnt] =
+                    gsopold[valcnt] =
                         ATOM_TO_STRING(cx->runtime->atomState.setterAtom);
-#else
-                    gsop[valcnt] = needOldStyleGetterSetter
-                        ? ATOM_TO_STRING(cx->runtime->atomState.setterAtom)
-                        : ATOM_TO_STRING(cx->runtime->atomState.setAtom);
-#endif
-                    valcnt++;
+                    gsop[valcnt] =
+                        ATOM_TO_STRING(cx->runtime->atomState.setAtom);
                 }
+                valcnt++;
             } else {
                 valcnt = 1;
                 gsop[0] = NULL;
+                gsopold[0] = NULL;
                 ok = OBJ_GET_PROPERTY(cx, obj, id, &val[0]);
             }
             OBJ_DROP_PROPERTY(cx, obj2, prop);
@@ -917,6 +910,7 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
          */
         valcnt = 1;
         gsop[0] = NULL;
+        gsopold[0] = NULL;
         ok = OBJ_GET_PROPERTY(cx, obj, id, &val[0]);
 
 #endif /* !JS_HAS_GETTER_SETTER */
@@ -952,6 +946,12 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
             vchars = JSSTRING_CHARS(valstr);
             vlength = JSSTRING_LENGTH(valstr);
 
+            if (vchars[0] == '#')
+                needOldStyleGetterSetter = JS_TRUE;
+
+            if (needOldStyleGetterSetter)
+                gsop[j] = gsopold[j];
+
 #ifndef OLD_GETTER_SETTER
             /*
              * Remove '(function ' from the beginning of valstr and ')' from the
@@ -964,6 +964,9 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 vchars += n;
                 vlength -= n + 1;
             }
+#else
+            needOldStyleGetterSetter = JS_TRUE;
+            gsop[j] = gsopold[j];
 #endif
 
             /* If val[j] is a non-sharp object, consider sharpening it. */
@@ -980,10 +983,14 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 if (IS_SHARP(he)) {
                     vchars = vsharp;
                     vlength = js_strlen(vchars);
+                    needOldStyleGetterSetter = JS_TRUE;
+                    gsop[j] = gsopold[j];
                 } else {
                     if (vsharp) {
                         vsharplength = js_strlen(vsharp);
                         MAKE_SHARP(he);
+                        needOldStyleGetterSetter = JS_TRUE;
+                        gsop[j] = gsopold[j];
                     }
                     js_LeaveSharpObject(cx, NULL);
                 }
@@ -1029,17 +1036,6 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
             }
             comma = """", """";
 
-#ifdef OLD_GETTER_SETTER
-            js_strncpy(&chars[nchars], idstrchars, idstrlength);
-            nchars += idstrlength;
-            if (gsop[j]) {
-                chars[nchars++] = ' ';
-                gsoplength = JSSTRING_LENGTH(gsop[j]);
-                js_strncpy(&chars[nchars], JSSTRING_CHARS(gsop[j]), gsoplength);
-                nchars += gsoplength;
-            }
-            chars[nchars++] = ':';
-#else
             if (needOldStyleGetterSetter) {
                 js_strncpy(&chars[nchars], idstrchars, idstrlength);
                 nchars += idstrlength;
@@ -1064,7 +1060,7 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 /* Extraneous space after id here will be extracted later */
                 chars[nchars++] = gsop[j] ? ' ' : ':';
             }
-#endif
+
             if (vsharplength) {
                 js_strncpy(&chars[nchars], vsharp, vsharplength);
                 nchars += vsharplength;"""
f747c72b3090816793218620dfa3790216d8574c,99864,367120,bclary%bclary.com,"JavaScript Test - regression test for bug 367120, by moz_bu_r_a4
",1178440904,"""diff --git a/js/tests/js1_5/extensions/regress-367120-01.js b/js/tests/js1_5/extensions/regress-367120-01.js
new file mode 100755
index 0000000..4a44c47
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367120-01.js
@@ -0,0 +1,72 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 367120;
+var summary = 'memory corruption in script_toSource';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  if (typeof Script == 'undefined' || !('toSource' in {}))
+  {
+    print('Test skipped. Script or toSource not defined');
+  }
+  else
+  {
+    var s = new Script("""""""");
+    var o = {
+      valueOf : function() {
+        s.compile("""""""");
+        Array(11).join(Array(11).join(Array(101).join(""""aaaaa"""")));
+        return;
+      }
+    };
+    s.toSource(o);
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-367120-02.js b/js/tests/js1_5/extensions/regress-367120-02.js
new file mode 100755
index 0000000..09e008d
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367120-02.js
@@ -0,0 +1,72 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 367120;
+var summary = 'memory corruption in script_toString';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  if (typeof Script == 'undefined')
+  {
+    print('Test skipped. Script not defined.');
+  }
+  else
+  {
+    var s = new Script("""""""");
+    var o = {
+      valueOf : function() {
+        s.compile("""""""");
+        Array(11).join(Array(11).join(Array(101).join(""""aaaaa"""")));
+        return;
+      }
+    };
+    s.toString(o);
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
077e2948044a2d92721d3bd4626423bdb3e3b0ab,99865,367119,bclary%bclary.com,"JavaScript Test - regression test for bug 367119, by moz_bu_r_a4
",1178440786,"""diff --git a/js/tests/js1_5/extensions/regress-367119-01.js b/js/tests/js1_5/extensions/regress-367119-01.js
new file mode 100755
index 0000000..01b1ca2
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367119-01.js
@@ -0,0 +1,72 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 367119;
+var summary = 'memory corruption in script_exec';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  if (typeof Script == 'undefined')
+  {
+    print('Test skipped. Script or toSource not defined');
+  }
+  else
+  {
+    var s = new Script("""""""");
+    var o = {
+      valueOf : function() {
+        s.compile("""""""");
+        Array(11).join(Array(11).join(Array(101).join(""""aaaaa"""")));
+        return {};
+      }
+    };
+    s.exec(o);
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-367119-02.js b/js/tests/js1_5/extensions/regress-367119-02.js
new file mode 100755
index 0000000..c0bb8ae
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367119-02.js
@@ -0,0 +1,72 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 367119;
+var summary = 'memory corruption in script_exec';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  if (typeof Script == 'undefined')
+  {
+    print('Test skipped. Script or toSource not defined');
+  }
+  else
+  {
+    var s = new Script("""""""");
+    var o = {
+      valueOf : function() {
+        s.compile("""""""");
+        print(1);
+        return {};
+      }
+    };
+    s.exec(o);
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
80ececaaccd485ba25ed47c5114371650aaa1ada,99866,367118,bclary%bclary.com,"JavaScript Test - regression test for bug 367118, by moz_bu_r_a4
",1178440634,"""diff --git a/js/tests/js1_5/extensions/regress-367118-01.js b/js/tests/js1_5/extensions/regress-367118-01.js
new file mode 100755
index 0000000..f0921a7
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367118-01.js
@@ -0,0 +1,72 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 367118;
+var summary = 'memory corruption in script_compile';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  if (typeof Script == 'undefined')
+  {
+    print('Test skipped. Script or toSource not defined');
+  }
+  else
+  {
+    var s = new Script("""""""");
+    var o = {
+      toString : function() {
+        s.compile("""""""");
+        Array(11).join(Array(11).join(Array(101).join(""""aaaaa"""")));
+        return """"a"""";
+      }
+    };
+    s.compile(o);
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-367118-02.js b/js/tests/js1_5/extensions/regress-367118-02.js
new file mode 100755
index 0000000..56d87bd
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-367118-02.js
@@ -0,0 +1,72 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2007
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 367118;
+var summary = 'memory corruption in script_compile';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  if (typeof Script == 'undefined')
+  {
+    print('Test skipped. Script or toSource not defined');
+  }
+  else
+  {
+    var s = new Script("""""""");
+    var o = {
+      toString : function() {
+        s.compile("""""""");
+        print(1);
+        return """"a"""";
+      }
+    };
+    s.compile(o);
+  }
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
974d064f9527a1c389dcfbeb8268939ed7bb0643,99867,366123,bclary%bclary.com,"JavaScript Test - regression test for bug 366123, by shutdown
",1178440465,"""diff --git a/js/tests/e4x/Expressions/regress-366123.js b/js/tests/e4x/Expressions/regress-366123.js
new file mode 100755
index 0000000..2270fcf
--- /dev/null
+++ b/js/tests/e4x/Expressions/regress-366123.js
@@ -0,0 +1,65 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): shutdown
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 366123;
+var summary = 'Compiling long XML filtering predicate';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+function exploit() {
+  var code = """"foo = <x/>.("""", obj = {};
+  for(var i = 0; i < 0x10000; i++) {
+    code += """"0, """";
+  }
+  code += """"0);"""";
+  Function(code);
+}
+try
+{
+    exploit();
+}
+catch(ex)
+{
+}
+
+TEST(1, expect, actual);
+
+END();"""
b05ec1f0138c3053ea84d700b48bd68539f91704,99868,365527,bclary%bclary.com,"JavaScript Test - regression test for bug 365527, by Igor Bukanov
",1178440259,"""diff --git a/js/tests/js1_5/extensions/regress-365527.js b/js/tests/js1_5/extensions/regress-365527.js
new file mode 100755
index 0000000..b6fc196
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-365527.js
@@ -0,0 +1,97 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 365527;
+var summary = 'JSOP_ARGUMENTS should set obj register';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+
+  counter = 500*1000;
+
+  var obj;
+
+  function getter()
+    {
+      obj = { get x() { 
+        return getter(); 
+      }, counter: counter};
+      return obj;
+    }
+
+
+  var x;
+
+  function g()
+    {
+      x += this.counter;
+      if (--counter == 0)
+        throw """"Done"""";
+    }
+
+
+  function f()
+    {
+      arguments=g;
+      try {
+        for (;;) {
+          arguments();
+          obj.x;
+        }
+      } catch (e) {
+        print(e);
+      }
+    }
+
+
+  getter();
+  f();
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
bd2cf336f6aa387a09aea2eee1b2c9bfaf22e536,99912,375399,bzbarsky%mit.edu,"Make sure that the style context doesn't live too long.  Bug 375399, r=smaug,
sr=jst
",1178343924,"""diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index c2c5b92..889a56e 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -6845,26 +6845,31 @@ nsElementSH::PostCreate(nsIXPConnectWrappedNative *wrapper, JSContext *cx,
   nsPresContext *pctx = shell->GetPresContext();
   NS_ENSURE_TRUE(pctx, NS_ERROR_UNEXPECTED);
 
-  nsRefPtr<nsStyleContext> sc = pctx->StyleSet()->ResolveStyleFor(content,
-                                                                  nsnull);
-  NS_ENSURE_TRUE(sc, NS_ERROR_FAILURE);
-
-  nsIURI *bindingURL = sc->GetStyleDisplay()->mBinding;
-  if (!bindingURL) {
-    // No binding, nothing left to do here.
-    return NS_OK;
-  }
-
-  // We have a binding that must be installed.
-  PRBool dummy;
+  // Make sure the style context goes away _before_ we execute the binding
+  // constructor, since the constructor can destroy the relevant presshell.
+  nsRefPtr<nsXBLBinding> binding;
+  {
+    // Scope for the nsRefPtr
+    nsRefPtr<nsStyleContext> sc = pctx->StyleSet()->ResolveStyleFor(content,
+                                                                    nsnull);
+    NS_ENSURE_TRUE(sc, NS_ERROR_FAILURE);
+
+    nsIURI *bindingURL = sc->GetStyleDisplay()->mBinding;
+    if (!bindingURL) {
+      // No binding, nothing left to do here.
+      return NS_OK;
+    }
 
-  nsCOMPtr<nsIXBLService> xblService(do_GetService(""""@mozilla.org/xbl;1""""));
-  NS_ENSURE_TRUE(xblService, NS_ERROR_NOT_AVAILABLE);
+    // We have a binding that must be installed.
+    PRBool dummy;
 
-  nsRefPtr<nsXBLBinding> binding;
-  xblService->LoadBindings(content, bindingURL, PR_FALSE,
-                           getter_AddRefs(binding), &dummy);
+    nsCOMPtr<nsIXBLService> xblService(do_GetService(""""@mozilla.org/xbl;1""""));
+    NS_ENSURE_TRUE(xblService, NS_ERROR_NOT_AVAILABLE);
 
+    xblService->LoadBindings(content, bindingURL, PR_FALSE,
+                             getter_AddRefs(binding), &dummy);
+  }
+  
   if (binding) {
     binding->ExecuteAttachedHandler();
   }"""
51658793753520a8f4558e0f7b22be0bf43900c0,100292,378787,sayrer%gmail.com,"Bug 378787. Digest Authentication Request Splitting. r=biesi, sr=brendan
",1178249490,"""diff --git a/netwerk/protocol/http/src/nsHttpDigestAuth.cpp b/netwerk/protocol/http/src/nsHttpDigestAuth.cpp
index c4d95b8..b5f00fe 100644
--- a/netwerk/protocol/http/src/nsHttpDigestAuth.cpp
+++ b/netwerk/protocol/http/src/nsHttpDigestAuth.cpp
@@ -338,14 +338,31 @@ nsHttpDigestAuth::GenerateCredentials(nsIHttpChannel *httpChannel,
                          cnonce, response_digest);
   if (NS_FAILED(rv)) return rv;
 
+  //
+  // Values that need to match the quoted-string production from RFC 2616:
+  //
+  //    username
+  //    realm
+  //    nonce
+  //    opaque
+  //    cnonce
+  //
+
   nsCAutoString authString;
-  authString.AssignLiteral(""""Digest username=\"""""""");
-  authString += cUser;
-  authString.AppendLiteral(""""\"""", realm=\"""""""");
-  authString += realm;
-  authString.AppendLiteral(""""\"""", nonce=\"""""""");
-  authString += nonce;
-  authString.AppendLiteral(""""\"""", uri=\"""""""");
+
+  authString.AssignLiteral(""""Digest username="""");
+  rv = AppendQuotedString(cUser, authString);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  authString.AppendLiteral("""", realm="""");
+  rv = AppendQuotedString(realm, authString);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  authString.AppendLiteral("""", nonce="""");
+  rv = AppendQuotedString(nonce, authString);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  authString.AppendLiteral("""", uri=\"""""""");
   authString += path;
   if (algorithm & ALGO_SPECIFIED) {
     authString.AppendLiteral(""""\"""", algorithm="""");
@@ -358,14 +375,16 @@ nsHttpDigestAuth::GenerateCredentials(nsIHttpChannel *httpChannel,
   }
   authString.AppendLiteral("""", response=\"""""""");
   authString += response_digest;
+  authString += '\""""';
 
   if (!opaque.IsEmpty()) {
-    authString.AppendLiteral(""""\"""", opaque=\"""""""");
-    authString += opaque;
+    authString.AppendLiteral("""", opaque="""");
+    rv = AppendQuotedString(opaque, authString);
+    NS_ENSURE_SUCCESS(rv, rv);
   }
 
   if (qop) {
-    authString.AppendLiteral(""""\"""", qop="""");
+    authString.AppendLiteral("""", qop="""");
     if (requireExtraQuotes)
       authString += '\""""';
     authString.AppendLiteral(""""auth"""");
@@ -375,10 +394,12 @@ nsHttpDigestAuth::GenerateCredentials(nsIHttpChannel *httpChannel,
       authString += '\""""';
     authString.AppendLiteral("""", nc="""");
     authString += nonce_count;
-    authString.AppendLiteral("""", cnonce=\"""""""");
-    authString += cnonce;
+
+    authString.AppendLiteral("""", cnonce="""");
+    rv = AppendQuotedString(cnonce, authString);
+    NS_ENSURE_SUCCESS(rv, rv);
   }
-  authString += '\""""';
+
 
   *creds = ToNewCString(authString);
   return NS_OK;
@@ -669,4 +690,39 @@ nsHttpDigestAuth::ParseChallenge(const char * challenge,
   return NS_OK;
 }
 
+nsresult
+nsHttpDigestAuth::AppendQuotedString(const nsACString & value,
+                                     nsACString & aHeaderLine)
+{
+  nsCAutoString quoted;
+  nsACString::const_iterator s, e;
+  value.BeginReading(s);
+  value.EndReading(e);
+
+  //
+  // Encode string according to RFC 2616 quoted-string production
+  //
+  quoted.Append('""""');
+  for ( ; s != e; ++s) {
+    //
+    // CTL = <any US-ASCII control character (octets 0 - 31) and DEL (127)>
+    //
+    if (*s <= 31 || *s == 127) {
+      return NS_ERROR_FAILURE;
+    }
+
+    // Escape two syntactically significant characters
+    if (*s == '""""' || *s == '\\') {
+      quoted.Append('\\');
+    }
+
+    quoted.Append(*s);
+  }
+  // FIXME: bug 41489
+  // We should RFC2047-encode non-Latin-1 values according to spec
+  quoted.Append('""""');
+  aHeaderLine.Append(quoted);
+  return NS_OK;
+}
+
 // vim: ts=2 sw=2
diff --git a/netwerk/protocol/http/src/nsHttpDigestAuth.h b/netwerk/protocol/http/src/nsHttpDigestAuth.h
index cb1e022..044236a 100644
--- a/netwerk/protocol/http/src/nsHttpDigestAuth.h
+++ b/netwerk/protocol/http/src/nsHttpDigestAuth.h
@@ -109,6 +109,10 @@ class nsHttpDigestAuth : public nsIHttpAuthenticator
 
     nsresult GetMethodAndPath(nsIHttpChannel *, PRBool, nsCString &, nsCString &);
 
+    // append the quoted version of value to aHeaderLine
+    nsresult AppendQuotedString(const nsACString & value,
+                                nsACString & aHeaderLine);
+
   protected:
     nsCOMPtr<nsICryptoHash>        mVerifier;
     char                           mHashBuf[DIGEST_LENGTH];
diff --git a/netwerk/test/unit/test_authentication.js b/netwerk/test/unit/test_authentication.js
index 0cf0768..8bde8f0 100644
--- a/netwerk/test/unit/test_authentication.js
+++ b/netwerk/test/unit/test_authentication.js
@@ -85,13 +85,14 @@ AuthPrompt2.prototype = {
     function ap2_promptAuth(channel, level, authInfo)
   {
     var isNTLM = channel.URI.path.indexOf(""""ntlm"""") != -1;
+    var isDigest = channel.URI.path.indexOf(""""digest"""") != -1;
 
     if (isNTLM)
       this.expectedRealm = """"""""; // NTLM knows no realms
 
     do_check_eq(this.expectedRealm, authInfo.realm);
 
-    var expectedLevel = isNTLM ?
+    var expectedLevel = (isNTLM || isDigest) ?
                         nsIAuthPrompt2.LEVEL_PW_ENCRYPTED :
                         nsIAuthPrompt2.LEVEL_NONE;
     do_check_eq(expectedLevel, level);
@@ -103,7 +104,7 @@ AuthPrompt2.prototype = {
 
     do_check_eq(expectedFlags, authInfo.flags);
 
-    var expectedScheme = isNTLM ? """"ntlm"""" : """"basic"""";
+    var expectedScheme = isNTLM ? """"ntlm"""" : isDigest ? """"digest"""" : """"basic"""";
     do_check_eq(expectedScheme, authInfo.authenticationScheme);
 
     // No passwords in the URL -> nothing should be prefilled
@@ -130,9 +131,10 @@ AuthPrompt2.prototype = {
   }
 };
 
-function Requestor(flags, versions) {
+function Requestor(flags, versions, username) {
   this.flags = flags;
   this.versions = versions;
+  this.username = username;
 }
 
 Requestor.prototype = {
@@ -155,7 +157,9 @@ Requestor.prototype = {
         iid.equals(Components.interfaces.nsIAuthPrompt2)) {
       // Allow the prompt to store state by caching it here
       if (!this.prompt2)
-        this.prompt2 = new AuthPrompt2(this.flags); 
+        this.prompt2 = new AuthPrompt2(this.flags);
+      if (this.username)
+        this.prompt2.user = this.username;
       return this.prompt2;
     }
 
@@ -251,7 +255,8 @@ function makeChan(url) {
 
 var tests = [test_noauth, test_returnfalse1, test_wrongpw1, test_prompt1,
              test_returnfalse2, test_wrongpw2, test_prompt2, test_ntlm,
-             test_auth];
+             test_auth, test_digest_noauth, test_digest,
+             test_digest_bogus_user];
 var current_test = 0;
 
 var httpserv = null;
@@ -262,6 +267,7 @@ function run_test() {
   httpserv.registerPathHandler(""""/auth"""", authHandler);
   httpserv.registerPathHandler(""""/auth/ntlm/simple"""", authNtlmSimple);
   httpserv.registerPathHandler(""""/auth/realm"""", authRealm);
+  httpserv.registerPathHandler(""""/auth/digest"""", authDigest);
 
   httpserv.start(4444);
 
@@ -357,6 +363,35 @@ function test_auth() {
   do_test_pending();
 }
 
+function test_digest_noauth() {
+  var chan = makeChan(""""http://localhost:4444/auth/digest"""");
+
+  //chan.notificationCallbacks = new Requestor(FLAG_RETURN_FALSE, 2);
+  listener.expectedCode = 401; // Unauthorized
+  chan.asyncOpen(listener, null);
+
+  do_test_pending();
+}
+
+function test_digest() {
+  var chan = makeChan(""""http://localhost:4444/auth/digest"""");
+
+  chan.notificationCallbacks = new Requestor(0, 2);
+  listener.expectedCode = 200; // OK
+  chan.asyncOpen(listener, null);
+
+  do_test_pending();
+}
+
+function test_digest_bogus_user() {
+  var chan = makeChan(""""http://localhost:4444/auth/digest"""");
+  chan.notificationCallbacks =  new Requestor(0, 2, """"foo\nbar"""");
+  listener.expectedCode = 401; // unauthorized
+  chan.asyncOpen(listener, null);
+
+  do_test_pending();
+}
+
 // PATH HANDLERS
 
 // /auth
@@ -406,3 +441,82 @@ function authRealm(metadata, response) {
 
   response.bodyOutputStream.write(body, body.length);
 }
+
+//
+// Digest functions
+// 
+function bytesFromString(str) {
+ var converter =
+   Components.classes[""""@mozilla.org/intl/scriptableunicodeconverter""""]
+     .createInstance(Components.interfaces.nsIScriptableUnicodeConverter);
+ converter.charset = """"UTF-8"""";
+ var result = {};
+ var data = converter.convertToByteArray(str, result);
+ return data;
+}
+
+// return the two-digit hexadecimal code for a byte
+function toHexString(charCode) {
+ return (""""0"""" + charCode.toString(16)).slice(-2);
+}
+
+function H(str) {
+ var data = bytesFromString(str);
+ var ch = Components.classes[""""@mozilla.org/security/hash;1""""]
+            .createInstance(Components.interfaces.nsICryptoHash);
+ ch.init(Components.interfaces.nsICryptoHash.MD5);
+ ch.update(data, data.length);
+ var hash = ch.finish(false);
+ return [toHexString(hash.charCodeAt(i)) for (i in hash)].join("""""""");
+}
+
+//
+// Digest handler
+//
+// /auth/digest
+function authDigest(metadata, response) {
+ var nonce = """"6f93719059cf8d568005727f3250e798"""";
+ var opaque = """"1234opaque1234"""";
+ var cnonceRE = /cnonce=""""(\w+)""""/;
+ var responseRE = /response=""""(\w+)""""/;
+ var usernameRE = /username=""""(\w+)""""/;
+ var authenticate = 'Digest realm=""""secret"""", domain=""""/"""",  qop=auth,' +
+                    'algorithm=MD5, nonce=""""' + nonce+ '"""" opaque=""""' + 
+                     opaque + '""""';
+ var body;
+ // check creds if we have them
+ if (metadata.hasHeader(""""Authorization"""")) {
+   var auth = metadata.getHeader(""""Authorization"""");
+   var cnonce = (auth.match(cnonceRE))[1];
+   var clientDigest = (auth.match(responseRE))[1];
+   var username = (auth.match(usernameRE))[1];
+   var nc = """"00000001"""";
+   
+   if (username != """"guest"""") {
+     response.setStatusLine(metadata.httpVersion, 400, """"bad request"""");
+     body = """"should never get here"""";
+   } else {
+     // see RFC2617 for the description of this calculation
+     var A1 = """"guest:secret:guest"""";
+     var A2 = """"GET:/auth/digest"""";
+     var noncebits = [nonce, nc, cnonce, """"auth"""", H(A2)].join("""":"""");
+     var digest = H([H(A1), noncebits].join("""":""""));
+
+     if (clientDigest == digest) {
+       response.setStatusLine(metadata.httpVersion, 200, """"OK, authorized"""");
+       body = """"success"""";
+     } else {
+       response.setStatusLine(metadata.httpVersion, 401, """"Unauthorized"""");
+       response.setHeader(""""WWW-Authenticate"""", authenticate, false);
+       body = """"auth failed"""";
+     }
+   }
+ } else {
+   // no header, send one
+   response.setStatusLine(metadata.httpVersion, 401, """"Unauthorized"""");
+   response.setHeader(""""WWW-Authenticate"""", authenticate, false);
+   body = """"failed, no header"""";
+ }
+ 
+ response.bodyOutputStream.write(body, body.length);
+}"""
b6b75464a5bd64738bbee08e982dda19b4fcb8e7,100519,378273,mats.palmgren%bredband.net,"Make nsWindow methods assume the caller holds a strong ref on 'this'. b=378273 r+sr=roc
",1177894007,"""diff --git a/content/events/src/nsIMEStateManager.cpp b/content/events/src/nsIMEStateManager.cpp
index 0b39f6c..f3db6f8 100755
--- a/content/events/src/nsIMEStateManager.cpp
+++ b/content/events/src/nsIMEStateManager.cpp
@@ -85,7 +85,7 @@ nsIMEStateManager::OnRemoveContent(nsPresContext* aPresContext,
     return NS_OK;
 
   // Current IME transaction should commit
-  nsIKBStateControl* kb = GetKBStateControl(sPresContext);
+  nsCOMPtr<nsIKBStateControl> kb = GetKBStateControl(sPresContext);
   if (kb) {
     nsresult rv = kb->CancelIMEComposition();
     if (NS_FAILED(rv))
@@ -109,7 +109,7 @@ nsIMEStateManager::OnChangeFocus(nsPresContext* aPresContext,
     return NS_OK;
   }
 
-  nsIKBStateControl* kb = GetKBStateControl(aPresContext);
+  nsCOMPtr<nsIKBStateControl> kb = GetKBStateControl(aPresContext);
   if (!kb) {
     // This platform doesn't support IME controlling
     return NS_OK;
@@ -138,7 +138,7 @@ nsIMEStateManager::OnChangeFocus(nsPresContext* aPresContext,
 
   // Current IME transaction should commit
   if (sPresContext) {
-    nsIKBStateControl* oldKB;
+    nsCOMPtr<nsIKBStateControl> oldKB;
     if (sPresContext == aPresContext)
       oldKB = kb;
     else
@@ -183,7 +183,7 @@ nsIMEStateManager::OnDeactivate(nsPresContext* aPresContext)
   // may be changed on other applications.
   sContent = nsnull;
   // We should enable the IME state for other applications.
-  nsIKBStateControl* kb = GetKBStateControl(aPresContext);
+  nsCOMPtr<nsIKBStateControl> kb = GetKBStateControl(aPresContext);
   if (kb)
     SetIMEState(aPresContext, nsIContent::IME_STATUS_ENABLE, kb);
 #endif // NS_KBSC_USE_SHARED_CONTEXT
diff --git a/widget/src/gtk2/nsWindow.cpp b/widget/src/gtk2/nsWindow.cpp
index ca01f7f..4eabde4 100644
--- a/widget/src/gtk2/nsWindow.cpp
+++ b/widget/src/gtk2/nsWindow.cpp
@@ -804,7 +804,7 @@ nsWindow::SetFocus(PRBool aRaise)
         }
     }
 
-    nsWindow  *owningWindow = get_window_for_gtk_widget(owningWidget);
+    nsRefPtr<nsWindow> owningWindow = get_window_for_gtk_widget(owningWidget);
     if (!owningWindow)
         return NS_ERROR_FAILURE;
 
@@ -841,6 +841,7 @@ nsWindow::SetFocus(PRBool aRaise)
     // If there is already a focused child window, dispatch a LOSTFOCUS
     // event from that widget and unset its got focus flag.
     if (gFocusWindow) {
+        nsRefPtr<nsWindow> kungFuDeathGrip = gFocusWindow;
 #ifdef USE_XIM
         // If the focus window and this window share the same input
         // context we don't have to change the focus of the IME
@@ -1741,56 +1742,62 @@ nsWindow::OnExposeEvent(GtkWidget *aWidget, GdkEventExpose *aEvent)
     nsEventStatus status;
     DispatchEvent(&event, status);
 
+    // DispatchEvent can Destroy us (bug 378273), avoid doing any paint
+    // operations below if that happened - it will lead to XError and exit().
+    if (NS_LIKELY(!mIsDestroyed)) {
+
 #ifdef MOZ_CAIRO_GFX
-    if (status != nsEventStatus_eIgnore) {
-        if (translucent) {
-            nsRefPtr<gfxPattern> pattern = ctx->PopGroup();
-            ctx->SetOperator(gfxContext::OPERATOR_SOURCE);
-            ctx->SetPattern(pattern);
-            ctx->Paint();
-
-            nsRefPtr<gfxImageSurface> img =
-                new gfxImageSurface(gfxIntSize(boundsRect.width, boundsRect.height),
-                                    gfxImageSurface::ImageFormatA8);
-            img->SetDeviceOffset(gfxPoint(-boundsRect.x, -boundsRect.y));
+        if (status != nsEventStatus_eIgnore) {
+            if (translucent) {
+                nsRefPtr<gfxPattern> pattern = ctx->PopGroup();
+                ctx->SetOperator(gfxContext::OPERATOR_SOURCE);
+                ctx->SetPattern(pattern);
+                ctx->Paint();
+
+                nsRefPtr<gfxImageSurface> img =
+                    new gfxImageSurface(gfxIntSize(boundsRect.width, boundsRect.height),
+                                        gfxImageSurface::ImageFormatA8);
+                img->SetDeviceOffset(gfxPoint(-boundsRect.x, -boundsRect.y));
             
-            nsRefPtr<gfxContext> imgCtx = new gfxContext(img);
-            imgCtx->SetPattern(pattern);
-            imgCtx->SetOperator(gfxContext::OPERATOR_SOURCE);
-            imgCtx->Paint();
+                nsRefPtr<gfxContext> imgCtx = new gfxContext(img);
+                imgCtx->SetPattern(pattern);
+                imgCtx->SetOperator(gfxContext::OPERATOR_SOURCE);
+                imgCtx->Paint();
         
-            UpdateTranslucentWindowAlphaInternal(nsRect(boundsRect.x, boundsRect.y,
-                                                        boundsRect.width, boundsRect.height),
-                                                 img->Data(), img->Stride());
-        } else {
+                UpdateTranslucentWindowAlphaInternal(nsRect(boundsRect.x, boundsRect.y,
+                                                            boundsRect.width, boundsRect.height),
+                                                     img->Data(), img->Stride());
+            } else {
 #ifdef MOZ_ENABLE_GLITZ
-            ctx->PopGroupToSource();
-            ctx->Paint();
-#else // MOZ_ENABLE_GLITZ
-            if (bufferPixmapSurface) {
-                ctx->SetSource(bufferPixmapSurface);
+                ctx->PopGroupToSource();
                 ctx->Paint();
-            }
+#else // MOZ_ENABLE_GLITZ
+                if (bufferPixmapSurface) {
+                    ctx->SetSource(bufferPixmapSurface);
+                    ctx->Paint();
+                }
 #endif // MOZ_ENABLE_GLITZ
-        }
-    } else {
-        // ignore
-        if (translucent) {
-            ctx->PopGroup();
+            }
         } else {
+            // ignore
+            if (translucent) {
+                ctx->PopGroup();
+            } else {
 #ifdef MOZ_ENABLE_GLITZ
-            ctx->PopGroup();
+                ctx->PopGroup();
 #endif // MOZ_ENABLE_GLITZ
+            }
         }
-    }
 
-    if (bufferPixmap) {
-        g_object_unref(G_OBJECT(bufferPixmap));
-    }
+        if (bufferPixmap) {
+            g_object_unref(G_OBJECT(bufferPixmap));
+        }
 
-    ctx->Restore();
+        ctx->Restore();
 #endif // MOZ_CAIRO_GFX
 
+    }
+
     g_free(rects);
 
     // check the return value!
@@ -1933,6 +1940,7 @@ nsWindow::OnMotionNotifyEvent(GtkWidget *aWidget, GdkEventMotion *aEvent)
 
     // if plugins still keeps the focus, get it back
     if (gPluginFocusWindow && gPluginFocusWindow != this) {
+        nsRefPtr<nsWindow> kungFuDeathGrip = gPluginFocusWindow;
         gPluginFocusWindow->LoseNonXEmbedPluginFocus();
     }
 
@@ -2017,8 +2025,6 @@ nsWindow::OnButtonPressEvent(GtkWidget *aWidget, GdkEventButton *aEvent)
         break;
     }
 
-    nsCOMPtr<nsIWidget> kungFuDeathGrip = this;
-
     nsMouseEvent event(PR_TRUE, NS_MOUSE_BUTTON_DOWN, this, nsMouseEvent::eReal);
     event.button = domButton;
     InitButtonEvent(event, aEvent);
@@ -2026,7 +2032,8 @@ nsWindow::OnButtonPressEvent(GtkWidget *aWidget, GdkEventButton *aEvent)
     DispatchEvent(&event, status);
 
     // right menu click on linux should also pop up a context menu
-    if (domButton == nsMouseEvent::eRightButton) {
+    if (domButton == nsMouseEvent::eRightButton &&
+        NS_LIKELY(!mIsDestroyed)) {
         nsMouseEvent contextMenuEvent(PR_TRUE, NS_CONTEXTMENU, this,
                                       nsMouseEvent::eReal);
         InitButtonEvent(contextMenuEvent, aEvent);
@@ -2108,6 +2115,7 @@ nsWindow::OnContainerFocusOutEvent(GtkWidget *aWidget, GdkEventFocus *aEvent)
 
     // plugin lose focus
     if (gPluginFocusWindow) {
+        nsRefPtr<nsWindow> kungFuDeathGrip = gPluginFocusWindow;
         gPluginFocusWindow->LoseNonXEmbedPluginFocus();
     }
 
@@ -2139,6 +2147,7 @@ nsWindow::OnContainerFocusOutEvent(GtkWidget *aWidget, GdkEventFocus *aEvent)
 
  foundit:
 
+    nsRefPtr<nsWindow> kungFuDeathGrip = gFocusWindow;
 #ifdef USE_XIM
     gFocusWindow->IMELoseFocus();
 #endif
@@ -2147,7 +2156,7 @@ nsWindow::OnContainerFocusOutEvent(GtkWidget *aWidget, GdkEventFocus *aEvent)
 
     // We only dispatch a deactivate event if we are a toplevel
     // window, otherwise the embedding code takes care of it.
-    if (mIsTopLevel)
+    if (mIsTopLevel && NS_LIKELY(!gFocusWindow->mIsDestroyed))
         gFocusWindow->DispatchDeactivateEvent();
 
     gFocusWindow = nsnull;
@@ -2199,6 +2208,8 @@ nsWindow::OnKeyPressEvent(GtkWidget *aWidget, GdkEventKey *aEvent)
         nsKeyEvent downEvent(PR_TRUE, NS_KEY_DOWN, this);
         InitKeyEvent(downEvent, aEvent);
         DispatchEvent(&downEvent, status);
+        if (NS_UNLIKELY(mIsDestroyed))
+            return PR_TRUE;
         isKeyDownCancelled = (status == nsEventStatus_eConsumeNoDefault);
     }
 
@@ -2292,8 +2303,6 @@ nsWindow::OnKeyReleaseEvent(GtkWidget *aWidget, GdkEventKey *aEvent)
         return TRUE;
 #endif
 
-    nsEventStatus status;
-
     // send the key event as a key up event
     nsKeyEvent event(PR_TRUE, NS_KEY_UP, this);
     InitKeyEvent(event, aEvent);
@@ -2301,6 +2310,7 @@ nsWindow::OnKeyReleaseEvent(GtkWidget *aWidget, GdkEventKey *aEvent)
     // unset the key down flag
     ClearKeyDownFlag(event.keyCode);
 
+    nsEventStatus status;
     DispatchEvent(&event, status);
 
     // If the event was consumed, return.
@@ -2387,7 +2397,7 @@ nsWindow::ThemeChanged()
     nsEventStatus status = nsEventStatus_eIgnore;
     DispatchEvent(&event, status);
 
-    if (!mDrawingarea)
+    if (!mDrawingarea || NS_UNLIKELY(mIsDestroyed))
         return;
 
     // Dispatch NS_THEMECHANGED to all child windows
@@ -2399,8 +2409,10 @@ nsWindow::ThemeChanged()
         nsWindow *win = (nsWindow*) g_object_get_data(G_OBJECT(gdkWin),
                                                       """"nsWindow"""");
 
-        if (win && win != this)   // guard against infinite recursion
+        if (win && win != this) { // guard against infinite recursion
+            nsRefPtr<nsWindow> kungFuDeathGrip = win;
             win->ThemeChanged();
+        }
 
         children = children->next;
     }
@@ -2447,12 +2459,9 @@ nsWindow::OnDragMotionEvent(GtkWidget *aWidget,
     nscoord retx = 0;
     nscoord rety = 0;
 
-    GdkWindow *thisWindow = aWidget->window;
-    GdkWindow *returnWindow = NULL;
-    returnWindow = get_inner_gdk_window(thisWindow, aX, aY,
-                                        &retx, &rety);
-    nsWindow *innerMostWidget = NULL;
-    innerMostWidget = get_window_for_gdk_window(returnWindow);
+    GdkWindow *innerWindow = get_inner_gdk_window(aWidget->window, aX, aY,
+                                                  &retx, &rety);
+    nsRefPtr<nsWindow> innerMostWidget = get_window_for_gdk_window(innerWindow);
 
     if (!innerMostWidget)
         innerMostWidget = this;
@@ -2462,6 +2471,7 @@ nsWindow::OnDragMotionEvent(GtkWidget *aWidget,
         // if it wasn't this
         if (mLastDragMotionWindow != innerMostWidget) {
             // send a drag event to the last window that got a motion event
+            nsRefPtr<nsWindow> kungFuDeathGrip = mLastDragMotionWindow;
             mLastDragMotionWindow->OnDragLeave();
             // and enter on the new one
             innerMostWidget->OnDragEnter(retx, rety);
@@ -2497,13 +2507,9 @@ nsWindow::OnDragMotionEvent(GtkWidget *aWidget,
     event.refPoint.y = rety;
     event.time = aTime;
 
-    innerMostWidget->AddRef();
-
     nsEventStatus status;
     innerMostWidget->DispatchEvent(&event, status);
 
-    innerMostWidget->Release();
-
     // we're done with the drag motion event.  notify the drag service.
     dragSessionGTK->TargetEndDragMotion(aWidget, aDragContext, aTime);
 
@@ -2557,12 +2563,9 @@ nsWindow::OnDragDropEvent(GtkWidget *aWidget,
     nscoord retx = 0;
     nscoord rety = 0;
 
-    GdkWindow *thisWindow = aWidget->window;
-    GdkWindow *returnWindow = NULL;
-    returnWindow = get_inner_gdk_window(thisWindow, aX, aY, &retx, &rety);
-
-    nsWindow *innerMostWidget = NULL;
-    innerMostWidget = get_window_for_gdk_window(returnWindow);
+    GdkWindow *innerWindow = get_inner_gdk_window(aWidget->window, aX, aY,
+                                                  &retx, &rety);
+    nsRefPtr<nsWindow> innerMostWidget = get_window_for_gdk_window(innerWindow);
 
     // set this now before any of the drag enter or leave events happen
     dragSessionGTK->TargetSetLastContext(aWidget, aDragContext, aTime);
@@ -2575,6 +2578,7 @@ nsWindow::OnDragDropEvent(GtkWidget *aWidget,
         // if it wasn't this
         if (mLastDragMotionWindow != innerMostWidget) {
             // send a drag event to the last window that got a motion event
+            nsRefPtr<nsWindow> kungFuDeathGrip = mLastDragMotionWindow;
             mLastDragMotionWindow->OnDragLeave();
             // and enter on the new one
             innerMostWidget->OnDragEnter(retx, rety);
@@ -2600,8 +2604,6 @@ nsWindow::OnDragDropEvent(GtkWidget *aWidget,
     // re-validate the drag target and then we do the drop.  The events
     // look the same except for the type.
 
-    innerMostWidget->AddRef();
-
     nsMouseEvent event(PR_TRUE, NS_DRAGDROP_OVER, innerMostWidget,
                        nsMouseEvent::eReal);
 
@@ -2617,14 +2619,17 @@ nsWindow::OnDragDropEvent(GtkWidget *aWidget,
     nsEventStatus status;
     innerMostWidget->DispatchEvent(&event, status);
 
-    event.message = NS_DRAGDROP_DROP;
-    event.widget = innerMostWidget;
-    event.refPoint.x = retx;
-    event.refPoint.y = rety;
-
-    innerMostWidget->DispatchEvent(&event, status);
+    // We need to check innerMostWidget->mIsDestroyed here because the nsRefPtr
+    // only protects innerMostWidget from being deleted, it does NOT protect
+    // against nsView::~nsView() calling Destroy() on it, bug 378670.
+    if (!innerMostWidget->mIsDestroyed) {
+        event.message = NS_DRAGDROP_DROP;
+        event.widget = innerMostWidget;
+        event.refPoint.x = retx;
+        event.refPoint.y = rety;
 
-    innerMostWidget->Release();
+        innerMostWidget->DispatchEvent(&event, status);
+    }
 
     // before we unset the context we need to do a drop_finish
 
@@ -2675,8 +2680,6 @@ nsWindow::OnDragLeave(void)
 
     nsMouseEvent event(PR_TRUE, NS_DRAGDROP_EXIT, this, nsMouseEvent::eReal);
 
-    AddRef();
-
     nsEventStatus status;
     DispatchEvent(&event, status);
 
@@ -2699,8 +2702,6 @@ nsWindow::OnDragLeave(void)
             }
         }
     }
-
-    Release();
 }
 
 void
@@ -2710,8 +2711,6 @@ nsWindow::OnDragEnter(nscoord aX, nscoord aY)
 
     LOG((""""nsWindow::OnDragEnter(%p)\n"""", this));
 
-    nsRefPtr<nsWindow> kungFuDeathGrip(this);
-
     nsCOMPtr<nsIDragService> dragService = do_GetService(kCDragServiceCID);
 
     if (dragService) {
@@ -3782,6 +3781,7 @@ nsWindow::SetNonXEmbedPluginFocus()
     }
 
     if (gPluginFocusWindow) {
+        nsRefPtr<nsWindow> kungFuDeathGrip = gPluginFocusWindow;
         gPluginFocusWindow->LoseNonXEmbedPluginFocus();
     }
 
@@ -4272,7 +4272,7 @@ get_gtk_cursor(nsCursor aCursor)
 gboolean
 expose_event_cb(GtkWidget *widget, GdkEventExpose *event)
 {
-    nsWindow *window = get_window_for_gdk_window(event->window);
+    nsRefPtr<nsWindow> window = get_window_for_gdk_window(event->window);
     if (!window)
         return FALSE;
 
@@ -4293,7 +4293,7 @@ gboolean
 configure_event_cb(GtkWidget *widget,
                    GdkEventConfigure *event)
 {
-    nsWindow *window = get_window_for_gtk_widget(widget);
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(widget);
     if (!window)
         return FALSE;
 
@@ -4304,7 +4304,7 @@ configure_event_cb(GtkWidget *widget,
 void
 size_allocate_cb (GtkWidget *widget, GtkAllocation *allocation)
 {
-    nsWindow *window = get_window_for_gtk_widget(widget);
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(widget);
     if (!window)
         return;
 
@@ -4315,7 +4315,7 @@ size_allocate_cb (GtkWidget *widget, GtkAllocation *allocation)
 gboolean
 delete_event_cb(GtkWidget *widget, GdkEventAny *event)
 {
-    nsWindow *window = get_window_for_gtk_widget(widget);
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(widget);
     if (!window)
         return FALSE;
 
@@ -4326,14 +4326,14 @@ delete_event_cb(GtkWidget *widget, GdkEventAny *event)
 
 /* static */
 gboolean
-enter_notify_event_cb (GtkWidget *widget,
-                       GdkEventCrossing *event)
+enter_notify_event_cb(GtkWidget *widget,
+                      GdkEventCrossing *event)
 {
     if (is_parent_ungrab_enter(event)) {
         return TRUE;
     }
 
-    nsWindow *window = get_window_for_gdk_window(event->window);
+    nsRefPtr<nsWindow> window = get_window_for_gdk_window(event->window);
     if (!window)
         return TRUE;
 
@@ -4344,14 +4344,14 @@ enter_notify_event_cb (GtkWidget *widget,
 
 /* static */
 gboolean
-leave_notify_event_cb (GtkWidget *widget,
-                       GdkEventCrossing *event)
+leave_notify_event_cb(GtkWidget *widget,
+                      GdkEventCrossing *event)
 {
     if (is_parent_grab_leave(event)) {
         return TRUE;
     }
 
-    nsWindow *window = get_window_for_gdk_window(event->window);
+    nsRefPtr<nsWindow> window = get_window_for_gdk_window(event->window);
     if (!window)
         return TRUE;
 
@@ -4362,9 +4362,9 @@ leave_notify_event_cb (GtkWidget *widget,
 
 /* static */
 gboolean
-motion_notify_event_cb (GtkWidget *widget, GdkEventMotion *event)
+motion_notify_event_cb(GtkWidget *widget, GdkEventMotion *event)
 {
-    nsWindow *window = get_window_for_gdk_window(event->window);
+    nsRefPtr<nsWindow> window = get_window_for_gdk_window(event->window);
     if (!window)
         return TRUE;
 
@@ -4375,7 +4375,7 @@ motion_notify_event_cb (GtkWidget *widget, GdkEventMotion *event)
 
 /* static */
 gboolean
-button_press_event_cb   (GtkWidget *widget, GdkEventButton *event)
+button_press_event_cb(GtkWidget *widget, GdkEventButton *event)
 {
     LOG((""""button_press_event_cb\n""""));
     nsWindow *window = get_window_for_gdk_window(event->window);
@@ -4389,9 +4389,9 @@ button_press_event_cb   (GtkWidget *widget, GdkEventButton *event)
 
 /* static */
 gboolean
-button_release_event_cb (GtkWidget *widget, GdkEventButton *event)
+button_release_event_cb(GtkWidget *widget, GdkEventButton *event)
 {
-    nsWindow *window = get_window_for_gdk_window(event->window);
+    nsRefPtr<nsWindow> window = get_window_for_gdk_window(event->window);
     if (!window)
         return TRUE;
 
@@ -4402,9 +4402,9 @@ button_release_event_cb (GtkWidget *widget, GdkEventButton *event)
 
 /* static */
 gboolean
-focus_in_event_cb (GtkWidget *widget, GdkEventFocus *event)
+focus_in_event_cb(GtkWidget *widget, GdkEventFocus *event)
 {
-    nsWindow *window = get_window_for_gtk_widget(widget);
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(widget);
     if (!window)
         return FALSE;
 
@@ -4415,9 +4415,9 @@ focus_in_event_cb (GtkWidget *widget, GdkEventFocus *event)
 
 /* static */
 gboolean
-focus_out_event_cb (GtkWidget *widget, GdkEventFocus *event)
+focus_out_event_cb(GtkWidget *widget, GdkEventFocus *event)
 {
-    nsWindow *window = get_window_for_gtk_widget(widget);
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(widget);
     if (!window)
         return FALSE;
 
@@ -4428,14 +4428,14 @@ focus_out_event_cb (GtkWidget *widget, GdkEventFocus *event)
 
 /* static */
 GdkFilterReturn
-plugin_window_filter_func (GdkXEvent *gdk_xevent, GdkEvent *event, gpointer data)
+plugin_window_filter_func(GdkXEvent *gdk_xevent, GdkEvent *event, gpointer data)
 {
     GtkWidget *widget;
     GdkWindow *plugin_window;
     gpointer  user_data;
     XEvent    *xevent;
 
-    nsWindow  *nswindow = (nsWindow*)data;
+    nsRefPtr<nsWindow> nswindow = (nsWindow*)data;
     GdkFilterReturn return_val;
 
     xevent = (XEvent *)gdk_xevent;
@@ -4490,9 +4490,9 @@ plugin_window_filter_func (GdkXEvent *gdk_xevent, GdkEvent *event, gpointer data
 
 /* static */
 GdkFilterReturn
-plugin_client_message_filter (GdkXEvent *gdk_xevent,
-                              GdkEvent *event,
-                              gpointer data)
+plugin_client_message_filter(GdkXEvent *gdk_xevent,
+                             GdkEvent *event,
+                             gpointer data)
 {
     XEvent    *xevent;
     xevent = (XEvent *)gdk_xevent;
@@ -4527,7 +4527,7 @@ plugin_client_message_filter (GdkXEvent *gdk_xevent,
 
 /* static */
 gboolean
-key_press_event_cb (GtkWidget *widget, GdkEventKey *event)
+key_press_event_cb(GtkWidget *widget, GdkEventKey *event)
 {
     LOG((""""key_press_event_cb\n""""));
     // find the window with focus and dispatch this event to that widget
@@ -4535,13 +4535,13 @@ key_press_event_cb (GtkWidget *widget, GdkEventKey *event)
     if (!window)
         return FALSE;
 
-    nsWindow *focusWindow = gFocusWindow ? gFocusWindow : window;
+    nsRefPtr<nsWindow> focusWindow = gFocusWindow ? gFocusWindow : window;
 
     return focusWindow->OnKeyPressEvent(widget, event);
 }
 
 gboolean
-key_release_event_cb (GtkWidget *widget, GdkEventKey *event)
+key_release_event_cb(GtkWidget *widget, GdkEventKey *event)
 {
     LOG((""""key_release_event_cb\n""""));
     // find the window with focus and dispatch this event to that widget
@@ -4549,16 +4549,16 @@ key_release_event_cb (GtkWidget *widget, GdkEventKey *event)
     if (!window)
         return FALSE;
 
-    nsWindow *focusWindow = gFocusWindow ? gFocusWindow : window;
+    nsRefPtr<nsWindow> focusWindow = gFocusWindow ? gFocusWindow : window;
 
     return focusWindow->OnKeyReleaseEvent(widget, event);
 }
 
 /* static */
 gboolean
-scroll_event_cb (GtkWidget *widget, GdkEventScroll *event)
+scroll_event_cb(GtkWidget *widget, GdkEventScroll *event)
 {
-    nsWindow *window = get_window_for_gdk_window(event->window);
+    nsRefPtr<nsWindow> window = get_window_for_gdk_window(event->window);
     if (!window)
         return FALSE;
 
@@ -4571,7 +4571,7 @@ scroll_event_cb (GtkWidget *widget, GdkEventScroll *event)
 gboolean
 visibility_notify_event_cb (GtkWidget *widget, GdkEventVisibility *event)
 {
-    nsWindow *window = get_window_for_gdk_window(event->window);
+    nsRefPtr<nsWindow> window = get_window_for_gdk_window(event->window);
     if (!window)
         return FALSE;
 
@@ -4584,7 +4584,7 @@ visibility_notify_event_cb (GtkWidget *widget, GdkEventVisibility *event)
 gboolean
 window_state_event_cb (GtkWidget *widget, GdkEventWindowState *event)
 {
-    nsWindow *window = get_window_for_gtk_widget(widget);
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(widget);
     if (!window)
         return FALSE;
 
@@ -4597,7 +4597,8 @@ window_state_event_cb (GtkWidget *widget, GdkEventWindowState *event)
 void
 theme_changed_cb (GtkSettings *settings, GParamSpec *pspec, nsWindow *data)
 {
-    data->ThemeChanged();
+    nsRefPtr<nsWindow> window = data;
+    window->ThemeChanged();
 }
 
 //////////////////////////////////////////////////////////////////////
@@ -4662,7 +4663,7 @@ drag_motion_event_cb(GtkWidget *aWidget,
                      guint aTime,
                      gpointer aData)
 {
-    nsWindow *window = get_window_for_gtk_widget(aWidget);
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(aWidget);
     if (!window)
         return FALSE;
 
@@ -4677,7 +4678,7 @@ drag_leave_event_cb(GtkWidget *aWidget,
                     guint aTime,
                     gpointer aData)
 {
-    nsWindow *window = get_window_for_gtk_widget(aWidget);
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(aWidget);
     if (!window)
         return;
 
@@ -4694,29 +4695,27 @@ drag_drop_event_cb(GtkWidget *aWidget,
                    guint aTime,
                    gpointer *aData)
 {
-    nsWindow *window = get_window_for_gtk_widget(aWidget);
-
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(aWidget);
     if (!window)
         return FALSE;
 
     return window->OnDragDropEvent(aWidget,
                                    aDragContext,
                                    aX, aY, aTime, aData);
-
 }
 
 /* static */
 void
-drag_data_received_event_cb (GtkWidget *aWidget,
-                             GdkDragContext *aDragContext,
-                             gint aX,
-                             gint aY,
-                             GtkSelectionData  *aSelectionData,
-                             guint aInfo,
-                             guint aTime,
-                             gpointer aData)
-{
-    nsWindow *window = get_window_for_gtk_widget(aWidget);
+drag_data_received_event_cb(GtkWidget *aWidget,
+                            GdkDragContext *aDragContext,
+                            gint aX,
+                            gint aY,
+                            GtkSelectionData  *aSelectionData,
+                            guint aInfo,
+                            guint aTime,
+                            gpointer aData)
+{
+    nsRefPtr<nsWindow> window = get_window_for_gtk_widget(aWidget);
     if (!window)
         return;
 
@@ -4807,6 +4806,7 @@ nsWindow::FireDragLeaveTimer(void)
 
     // clean up any pending drag motion window info
     if (mLastDragMotionWindow) {
+        nsRefPtr<nsWindow> kungFuDeathGrip = mLastDragMotionWindow;
         // send our leave signal
         mLastDragMotionWindow->OnDragLeave();
         mLastDragMotionWindow = 0;
@@ -4817,7 +4817,7 @@ nsWindow::FireDragLeaveTimer(void)
 guint
 nsWindow::DragMotionTimerCallback(gpointer aClosure)
 {
-    nsWindow *window = NS_STATIC_CAST(nsWindow *, aClosure);
+    nsRefPtr<nsWindow> window = NS_STATIC_CAST(nsWindow *, aClosure);
     window->FireDragMotionTimer();
     return FALSE;
 }
@@ -4826,7 +4826,7 @@ nsWindow::DragMotionTimerCallback(gpointer aClosure)
 void
 nsWindow::DragLeaveTimerCallback(nsITimer *aTimer, void *aClosure)
 {
-    nsWindow *window = NS_STATIC_CAST(nsWindow *, aClosure);
+    nsRefPtr<nsWindow> window = NS_STATIC_CAST(nsWindow *, aClosure);
     window->FireDragLeaveTimer();
 }
 
@@ -5147,6 +5147,9 @@ nsWindow::IMEComposeStart(void)
     nsEventStatus status;
     DispatchEvent(&compEvent, status);
 
+    if (NS_UNLIKELY(mIsDestroyed))
+        return;
+
     gint x1, y1, x2, y2;
     GtkWidget *widget =
         get_gtk_widget_for_gdk_window(this->mDrawingarea->inner_window);
@@ -5164,11 +5167,11 @@ nsWindow::IMEComposeStart(void)
 }
 
 void
-nsWindow::IMEComposeText (const PRUnichar *aText,
-                          const PRInt32 aLen,
-                          const gchar *aPreeditString,
-                          const gint aCursorPos,
-                          const PangoAttrList *aFeedback)
+nsWindow::IMEComposeText(const PRUnichar *aText,
+                         const PRInt32 aLen,
+                         const gchar *aPreeditString,
+                         const gint aCursorPos,
+                         const PangoAttrList *aFeedback)
 {
     if (!mIMEData) {
         NS_ERROR(""""This widget doesn't support IM"""");
@@ -5176,8 +5179,12 @@ nsWindow::IMEComposeText (const PRUnichar *aText,
     }
 
     // Send our start composition event if we need to
-    if (!IMEComposingWindow())
+    if (!IMEComposingWindow()) {
         IMEComposeStart();
+        if (NS_UNLIKELY(mIsDestroyed))
+            return;
+    }
+
 
     LOGIM((""""IMEComposeText\n""""));
     nsTextEvent textEvent(PR_TRUE, NS_TEXT_TEXT, this);
@@ -5199,6 +5206,9 @@ nsWindow::IMEComposeText (const PRUnichar *aText,
         delete[] textEvent.rangeArray;
     }
 
+    if (NS_UNLIKELY(mIsDestroyed))
+        return;
+
     gint x1, y1, x2, y2;
     GtkWidget *widget =
         get_gtk_widget_for_gdk_window(this->mDrawingarea->inner_window);
@@ -5332,7 +5342,7 @@ nsWindow::ResetInputState()
 {
     IMEInitData();
 
-    nsWindow *win = IMEComposingWindow();
+    nsRefPtr<nsWindow> win = IMEComposingWindow();
     if (win) {
         GtkIMContext *im = IMEGetContext();
         if (!im)
@@ -5384,7 +5394,7 @@ nsWindow::SetIMEEnabled(PRUint32 aState)
 
     GtkIMContext *focusedIm = nsnull;
     // XXX Don't we need to check gFocusWindow?
-    nsWindow *focusedWin = gIMEFocusWindow;
+    nsRefPtr<nsWindow> focusedWin = gIMEFocusWindow;
     if (focusedWin && focusedWin->mIMEData)
         focusedIm = focusedWin->mIMEData->mContext;
 
@@ -5436,7 +5446,7 @@ nsWindow::CancelIMEComposition()
     gtk_im_context_reset(im);
     gIMESuppressCommit = PR_FALSE;
 
-    nsWindow *win = IMEComposingWindow();
+    nsRefPtr<nsWindow> win = IMEComposingWindow();
     if (win) {
         win->IMEComposeText(nsnull, 0, nsnull, 0, nsnull);
         win->IMEComposeEnd();
@@ -5455,7 +5465,7 @@ IM_preedit_changed_cb(GtkIMContext *aContext,
     PangoAttrList *feedback_list;
 
     // if gFocusWindow is null, use the last focused gIMEFocusWindow
-    nsWindow *window = gFocusWindow ? gFocusWindow : gIMEFocusWindow;
+    nsRefPtr<nsWindow> window = gFocusWindow ? gFocusWindow : gIMEFocusWindow;
     if (!window)
         return;
 
@@ -5505,9 +5515,9 @@ IM_preedit_changed_cb(GtkIMContext *aContext,
 
 /* static */
 void
-IM_commit_cb (GtkIMContext *aContext,
-              const gchar  *aUtf8_str,
-              nsWindow     *aWindow)
+IM_commit_cb(GtkIMContext *aContext,
+             const gchar  *aUtf8_str,
+             nsWindow     *aWindow)
 {
     if (gIMESuppressCommit)
         return;
@@ -5517,7 +5527,7 @@ IM_commit_cb (GtkIMContext *aContext,
     gKeyEventCommitted = PR_TRUE;
 
     // if gFocusWindow is null, use the last focused gIMEFocusWindow
-    nsWindow *window = gFocusWindow ? gFocusWindow : gIMEFocusWindow;
+    nsRefPtr<nsWindow> window = gFocusWindow ? gFocusWindow : gIMEFocusWindow;
 
     if (!window)
         return;
@@ -5547,8 +5557,8 @@ IM_commit_cb (GtkIMContext *aContext,
 
 /* static */
 void
-IM_commit_cb_internal (const gchar  *aUtf8_str,
-                       nsWindow     *aWindow)
+IM_commit_cb_internal(const gchar  *aUtf8_str,
+                      nsWindow     *aWindow)
 {
     gunichar2 *uniStr = nsnull;
     glong uniStrLen = 0;"""
ab6e84a3529add94ec9b4ca6885d9dc129fca8f2,100520,378273,mats.palmgren%bredband.net,"Lookup the view again since WillPaint() might lead to its destruction. b=378273 r+sr=roc
",1177893987,"""diff --git a/view/src/nsViewManager.cpp b/view/src/nsViewManager.cpp
index 7abdf06..c1dc342 100644
--- a/view/src/nsViewManager.cpp
+++ b/view/src/nsViewManager.cpp
@@ -1215,6 +1215,10 @@ NS_IMETHODIMP nsViewManager::DispatchEvent(nsGUIEvent *aEvent, nsEventStatus *aS
                 BeginUpdateViewBatch();
                 observer->WillPaint();
                 EndUpdateViewBatch(NS_VMREFRESH_NO_SYNC);
+
+                // Get the view pointer again since the code above might have
+                // destroyed it (bug 378273).
+                view = nsView::GetViewFor(aEvent->widget);
               }
             }
             // Make sure to sync up any widget geometry changes we
@@ -1222,8 +1226,11 @@ NS_IMETHODIMP nsViewManager::DispatchEvent(nsGUIEvent *aEvent, nsEventStatus *aS
             if (rootVM->mHasPendingUpdates) {
               rootVM->ProcessPendingUpdates(mRootView, PR_FALSE);
             }
-            Refresh(view, event->renderingContext, region,
-                    NS_VMREFRESH_DOUBLE_BUFFER);
+            
+            if (view) {
+              Refresh(view, event->renderingContext, region,
+                      NS_VMREFRESH_DOUBLE_BUFFER);
+            }
           }
         } else {
           // since we got an NS_PAINT event, we need to"""
b6e84671e9035472b6943620529c81779f8a8e87,100544,353165,bclary%bclary.com,"JavaScript Test - regression test for bug 353165, only test for crash
",1177799912,"""diff --git a/js/tests/e4x/extensions/regress-353165.js b/js/tests/e4x/extensions/regress-353165.js
index 1f77590..eb53debc 100755
--- a/js/tests/e4x/extensions/regress-353165.js
+++ b/js/tests/e4x/extensions/regress-353165.js
@@ -104,12 +104,10 @@ function crash2() {
             return undefined;
         }
 
-        var actual = set.unrooter();
-        print('actual:   ' + actual);
-        print('expected: ' + expected);
+        set.unrooter();
     }
     catch(ex) {
         print('2: ' + ex);
     }
-    TEST(2, true, actual === expected);
+    TEST(2, expect, actual);
 }"""
e3d23f4e6bbaf26949c717cb3ef8e7b9038fc2a4,100548,364112,dveditz%cruzio.com,"bug 364112 truncate large form history data. r=mano
",1177738013,"""diff --git a/toolkit/components/satchel/src/nsFormHistory.cpp b/toolkit/components/satchel/src/nsFormHistory.cpp
index 9849884..4d0c8a3 100644
--- a/toolkit/components/satchel/src/nsFormHistory.cpp
+++ b/toolkit/components/satchel/src/nsFormHistory.cpp
@@ -72,6 +72,10 @@ static void SwapBytes(PRUnichar* aDest, const PRUnichar* aSrc, PRUint32 aLen)
 #define PREF_FORMFILL_BRANCH """"browser.formfill.""""
 #define PREF_FORMFILL_ENABLE """"enable""""
 
+// upper bounds on saved form data, more isn't useful.
+#define FORMFILL_NAME_MAX_LEN  1000
+#define FORMFILL_VALUE_MAX_LEN 4000
+
 static const char *kFormHistoryFileName = """"formhistory.dat"""";
 
 NS_INTERFACE_MAP_BEGIN(nsFormHistory)
@@ -613,7 +617,11 @@ nsFormHistory::AppendRow(const nsAString &aName, const nsAString &aValue, nsIMdb
   if (!mTable)
     return NS_ERROR_NOT_INITIALIZED;
 
-  PRBool exists;
+  if (aName.Length() > FORMFILL_NAME_MAX_LEN ||
+      aValue.Length() > FORMFILL_VALUE_MAX_LEN)
+    return NS_ERROR_INVALID_ARG;
+
+  PRBool exists = PR_TRUE;
   EntryExists(aName, aValue, &exists);
   if (exists)
     return NS_OK;
diff --git a/toolkit/components/satchel/src/nsStorageFormHistory.cpp b/toolkit/components/satchel/src/nsStorageFormHistory.cpp
index f90342b..572cb4b 100644
--- a/toolkit/components/satchel/src/nsStorageFormHistory.cpp
+++ b/toolkit/components/satchel/src/nsStorageFormHistory.cpp
@@ -227,7 +227,7 @@ nsFormHistory::AddEntry(const nsAString &aName, const nsAString &aValue)
 
   mozStorageTransaction transaction(mDBConn, PR_FALSE);
 
-  PRBool exists;
+  PRBool exists = PR_TRUE;
   EntryExists(aName, aValue, &exists);
   if (!exists) {
     mozStorageStatementScoper scope(mDBInsertNameValue);"""
efeb152ef837169c8d2a29788346de4afd77d39c,100598,378682,mats.palmgren%bredband.net,"Crash [@ nsPresContext::GetContainerInternal]. b=378682 r+sr=bzbarsky
",1177671982,"""diff --git a/layout/base/nsDocumentViewer.cpp b/layout/base/nsDocumentViewer.cpp
index 168da38..03aa83a 100644
--- a/layout/base/nsDocumentViewer.cpp
+++ b/layout/base/nsDocumentViewer.cpp
@@ -1082,6 +1082,7 @@ DocumentViewerImpl::LoadComplete(nsresult aStatus)
   // Now that the document has loaded, we can tell the presshell
   // to unsuppress painting.
   if (mPresShell && !mStopped) {
+    nsCOMPtr<nsIPresShell> shellDeathGrip(mPresShell); // bug 378682
     mPresShell->UnsuppressPainting();
   }
 
@@ -1261,8 +1262,10 @@ DocumentViewerImpl::PageHide(PRBool aIsUnload)
 
   // look for open menupopups and close them after the unload event, in case
   // the unload event listeners open any new popups
-  if (mPresShell)
+  if (mPresShell) {
+    nsCOMPtr<nsIPresShell> kungFuDeathGrip = mPresShell;
     mPresShell->HidePopups();
+  }
 
   return NS_OK;
 }
@@ -1634,6 +1637,7 @@ DocumentViewerImpl::Stop(void)
 
   if (!mLoaded && mPresShell) {
     // Well, we might as well paint what we have so far.
+    nsCOMPtr<nsIPresShell> shellDeathGrip(mPresShell); // bug 378682
     mPresShell->UnsuppressPainting();
   }
 
@@ -1982,6 +1986,7 @@ DocumentViewerImpl::Show(void)
     // window is shown because some JS on the page caused it to be
     // shown...
 
+    nsCOMPtr<nsIPresShell> shellDeathGrip(mPresShell); // bug 378682
     mPresShell->UnsuppressPainting();
   }
 """
e639894a48e5657bc41cba07e404ad637888524d,100800,378325,Olli.Pettay%helsinki.fi,"Bug 378325, r+sr=roc
",1177307607,"""diff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp
index b8a440e..0ba4072 100644
--- a/layout/base/nsPresShell.cpp
+++ b/layout/base/nsPresShell.cpp
@@ -4589,15 +4589,16 @@ PresShell::FlushPendingNotifications(mozFlushType aType)
 
   NS_ASSERTION(!isSafeToFlush || mViewManager, """"Must have view manager"""");
   if (isSafeToFlush && mViewManager) {
+    // Processing pending notifications can kill us, and some callers only
+    // hold weak refs when calling FlushPendingNotifications().  :(
+    nsCOMPtr<nsIPresShell> kungFuDeathGrip(this);
+
     // Style reresolves not in conjunction with reflows can't cause
     // painting or geometry changes, so don't bother with view update
     // batching if we only have style reresolve
     mViewManager->BeginUpdateViewBatch();
 
     if (aType & Flush_StyleReresolves) {
-      // Processing pending restyles can kill us, and some callers only
-      // hold weak refs when calling FlushPendingNotifications().  :(
-      nsCOMPtr<nsIPresShell> kungFuDeathGrip(this);
       mFrameConstructor->ProcessPendingRestyles();
       if (mIsDestroying) {
         // We no longer have a view manager and all that.
@@ -4610,6 +4611,12 @@ PresShell::FlushPendingNotifications(mozFlushType aType)
     if (aType & Flush_OnlyReflow) {
       mFrameConstructor->RecalcQuotesAndCounters();
       ProcessReflowCommands(PR_FALSE);
+      if (mIsDestroying) {
+        // We no longer have a view manager and all that.
+        // XXX FIXME: Except we're in the middle of a view update batch...  We
+        // need to address that somehow.  See bug 369165.
+        return NS_OK;
+      }
     }
 
     PRUint32 updateFlags = NS_VMREFRESH_NO_SYNC;"""
b054e36f437cb3b530933b5220aa7b70438ebe99,100824,306902,stuart.morgan%alumni.case.edu,"Bug 306902. r=josh sr=smfr a=dveditz
",1177211451,"""diff --git a/gfx/src/mac/nsUnicodeRenderingToolkit.cpp b/gfx/src/mac/nsUnicodeRenderingToolkit.cpp
index 2117a77..e69de29 100644
--- a/gfx/src/mac/nsUnicodeRenderingToolkit.cpp
+++ b/gfx/src/mac/nsUnicodeRenderingToolkit.cpp
@@ -1,1925 +0,0 @@
-/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* ***** BEGIN LICENSE BLOCK *****
- * Version: MPL 1.1/GPL 2.0/LGPL 2.1
- *
- * The contents of this file are subject to the Mozilla Public License Version
- * 1.1 (the """"License""""); you may not use this file except in compliance with
- * the License. You may obtain a copy of the License at
- * http://www.mozilla.org/MPL/
- *
- * Software distributed under the License is distributed on an """"AS IS"""" basis,
- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
- * for the specific language governing rights and limitations under the
- * License.
- *
- * The Original Code is mozilla.org code.
- *
- * The Initial Developer of the Original Code is
- * Netscape Communications Corporation.
- * Portions created by the Initial Developer are Copyright (C) 1999
- * the Initial Developer. All Rights Reserved.
- *
- * Contributor(s):
- *
- * Alternatively, the contents of this file may be used under the terms of
- * either of the GNU General Public License Version 2 or later (the """"GPL""""),
- * or the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
- * in which case the provisions of the GPL or the LGPL are applicable instead
- * of those above. If you wish to allow use of your version of this file only
- * under the terms of either the GPL or the LGPL, and not to allow others to
- * use your version of this file under the terms of the MPL, indicate your
- * decision by deleting the provisions above and replace them with the notice
- * and other provisions required by the GPL or the LGPL. If you do not delete
- * the provisions above, a recipient may use your version of this file under
- * the terms of any one of the MPL, the GPL or the LGPL.
- *
- * ***** END LICENSE BLOCK ***** */
-
-#include """"nsUnicodeRenderingToolkit.h""""
-#include """"nsUnicodeFontMappingMac.h""""
-#include """"nsUnicodeFallbackCache.h""""
-#include """"nsDrawingSurfaceMac.h""""
-#include """"nsTransform2D.h""""
-#include """"nsFontMetricsMac.h""""
-#include """"nsGraphicState.h""""
-#include """"prprf.h""""
-#include """"nsCarbonHelpers.h""""
-#include """"nsISaveAsCharset.h""""
-#include """"nsIComponentManager.h""""
-#include """"nsUnicharUtils.h""""
-
-
-#include """"nsMacUnicodeFontInfo.h""""
-#include """"nsICharRepresentable.h""""
-
-#include <FixMath.h>
-
-#define STACK_TRESHOLD 1000
-
-//#define DISABLE_TEC_FALLBACK
-//#define DISABLE_PRECOMPOSEHANGUL_FALLBACK
-//#define DISABLE_LATINL_FALLBACK
-//#define DISABLE_ATSUI_FALLBACK
-//#define DISABLE_TRANSLITERATE_FALLBACK
-//#define DISABLE_UPLUS_FALLBACK
-
-#define IS_FORMAT_CONTROL_CHARS(c) 	((0x2000==((c)&0xFFF0))||(0x2028==((c)&0xFFF8)))
-#define IS_CONTEXTUAL_CHARS(c) 		  ((0x0600<=(c))&&((c)<0x1000))
-#define IS_COMBINING_CHARS(c) 		  ((0x0300<=(c))&&((c)<0x0370))
-
-#define QUESTION_FALLBACKSIZE 9
-#define UPLUS_FALLBACKSIZE 9
-#define IN_RANGE(c, l, h) (((l) <= (c)) && ((c) <= (h)))
-#define IN_STANDARD_MAC_ROMAN_FONT(c) ( \
-  (((c) < 0x180) && (! (\
-   (0x0110 == (c)) || \
-   (0x012c == (c)) || \
-   (0x012d == (c)) || \
-   (0x0138 == (c)) || \
-   (0x014a == (c)) || \
-   (0x014b == (c)) || \
-   (0x017f == (c))    \
-   )))) 
-#define IN_SYMBOL_FONT(c) ( \
-  IN_RANGE(c, 0x0391, 0x03a1) || \
-  IN_RANGE(c, 0x03a3, 0x03a9) || \
-  IN_RANGE(c, 0x03b1, 0x03c1) || \
-  IN_RANGE(c, 0x03c3, 0x03c9) || \
-  (0x2111 == (c))   || \
-  (0x2118 == (c))   || \
-  (0x211c == (c))   || \
-  (0x2135 == (c))   || \
-  IN_RANGE(c, 0x2190, 0x2193) || \
-  IN_RANGE(c, 0x21d0, 0x21d3) || \
-  IN_RANGE(c, 0x21ed, 0x21ee) || \
-  (0x2200 == (c))   || \
-  (0x2203 == (c))   || \
-  (0x2205 == (c))   || \
-  (0x2208 == (c))   || \
-  (0x2209 == (c))   || \
-  (0x2212 == (c))   || \
-  (0x2217 == (c))   || \
-  (0x221d == (c))   || \
-  (0x2220 == (c))   || \
-  IN_RANGE(c, 0x2227, 0x222b) || \
-  (0x2234 == (c))   || \
-  (0x223c == (c))   || \
-  (0x2261 == (c))   || \
-  (0x2282 == (c))   || \
-  (0x2283 == (c))   || \
-  (0x2286 == (c))   || \
-  (0x2287 == (c))   || \
-  (0x2295 == (c))   || \
-  (0x2297 == (c))   || \
-  (0x22a5 == (c))   || \
-  (0x2320 == (c))   || \
-  (0x2321 == (c))   || \
-  (0x240d == (c))   || \
-  (0x2660 == (c))   || \
-  (0x2663 == (c))   || \
-  (0x2665 == (c))   || \
-  (0x2666 == (c))      \
-  )
-#define SPECIAL_IN_SYMBOL_FONT(c) ( \
-  IN_RANGE(c, 0x2308, 0x230b) || \
-  (0x2329 == (c))   || \
-  (0x232a == (c))    \
-  )
-#define BAD_TEXT_ENCODING 0xFFFFFFFF
-
-// all the character should not be drawn if there are no glyph
-#define IS_ZERO_WIDTH_CHAR(c) ( \
-  IN_RANGE(c, 0x200b, 0x200f) || \
-  IN_RANGE(c, 0x202a, 0x202e) \
-  )
-  
-
-#define IN_ARABIC_PRESENTATION_A(a) ((0xfb50 <= (a)) && ((a) <= 0xfdff))
-#define IN_ARABIC_PRESENTATION_B(a) ((0xfe70 <= (a)) && ((a) <= 0xfeff))
-#define IN_ARABIC_PRESENTATION_A_OR_B(a) (IN_ARABIC_PRESENTATION_A(a) || IN_ARABIC_PRESENTATION_B(a))
-
-// We should not use TEC fallback for characters in Latin, Greek and Cyrillic scripts
-// because Japanese, Chinese and Korean fonts have these characters. If we let them 
-// render in the TEC fallback process, then we would use a Japanese/Korean/Chinese font
-// to render it even if the current font has a glyph in it.
-// if we skip the TEC fallback, then the ATSUI fallback will try to use the glyph 
-// in the font first (TEC or TEC fallback are using QuickDraw, which can only use 
-// the glyphs that are in the font script's encoding. But a lot of TrueType fonts
-// have hundreds more glyphs in addition to the font scripts.
-#define IS_LATIN(c)  ( IN_RANGE(c, 0x0000, 0x024F) || IN_RANGE(c, 0x1e00, 0x1eff) )
-#define IS_GREEK(c)  ( IN_RANGE(c, 0x0370, 0x03FF) || IN_RANGE(c, 0x1f00, 0x1fff) )
-#define IS_CYRILLIC(c)  IN_RANGE(c, 0x0400, 0x04ff)
-#define IS_SKIP_TEC_FALLBACK(c) (IS_LATIN(c) || IS_GREEK(c) || IS_CYRILLIC(c))
-
-//------------------------------------------------------------------------
-#pragma mark -
-//------------------------------------------------------------------------
-
-nsUnicodeFallbackCache* nsUnicodeRenderingToolkit :: GetTECFallbackCache()
-{
-	static nsUnicodeFallbackCache* gTECFallbackCache = nsnull;
-	
-	if( ! gTECFallbackCache)
-		gTECFallbackCache = new nsUnicodeFallbackCache();
-	return gTECFallbackCache;
-}
-//------------------------------------------------------------------------
-
-PRBool 
-nsUnicodeRenderingToolkit::TECFallbackGetDimensions(
-  const PRUnichar *aCharPt, 
-  nsTextDimensions& oDim, 
-  short origFontNum, 
-  nsUnicodeFontMappingMac& fontMapping)
-{
-  char buf[20];
-  ByteCount processBytes = 0;
-  ByteCount outLen = 0;
-  ScriptCode fallbackScript;
-  nsUnicodeFallbackCache* cache = GetTECFallbackCache();
-  short aWidth;
-  FontInfo finfo;
-  const short *scriptFallbackFonts = fontMapping.GetScriptFallbackFonts();
-  
-  if ((0xf780 <= *aCharPt) && (*aCharPt <= 0xf7ff))
-  {
-    // If we are encountering our PUA characters for User-Defined characters, we better
-    // just drop the high-byte and return the width for the low-byte.
-    *buf = (*aCharPt & 0x00FF);
-    ::GetFontInfo(&finfo);
-    oDim.ascent = finfo.ascent;
-    oDim.descent = finfo.descent;
-    
-    GetScriptTextWidth (buf,1,aWidth);
-    oDim.width = aWidth;
-
-    return PR_TRUE;
-  }
-  else if (cache->Get(*aCharPt, fallbackScript))
-  {
-    if (BAD_SCRIPT == fallbackScript)
-      return PR_FALSE;
-    
-    if(fontMapping.ConvertUnicodeToGlyphs(scriptFallbackFonts[fallbackScript], aCharPt, 1,
-        buf, STACK_TRESHOLD, outLen, processBytes, kUnicodeLooseMappingsMask))
-    {  
-        ::TextFont(scriptFallbackFonts[fallbackScript]);
-        GetScriptTextWidth(buf, outLen, aWidth);
-        ::GetFontInfo(&finfo);
-        oDim.ascent = finfo.ascent;
-        oDim.descent = finfo.descent;
-        oDim.width = aWidth;
-        ::TextFont(origFontNum);
-    }
-    return PR_TRUE;
-  }
-  
-  for(fallbackScript = 0 ; fallbackScript < 32; fallbackScript++)
-  {
-    if (BAD_FONT_NUM != scriptFallbackFonts[fallbackScript])
-    {
-        if(fontMapping.ConvertUnicodeToGlyphs(scriptFallbackFonts[fallbackScript], aCharPt, 1,
-            buf, STACK_TRESHOLD, outLen, processBytes, kUnicodeLooseMappingsMask))
-        {
-            NS_PRECONDITION(0 == (processBytes % 2), """"strange conversion result"""");
-            ::TextFont(scriptFallbackFonts[fallbackScript]);
-            GetScriptTextWidth(buf, outLen, aWidth);
-            ::GetFontInfo(&finfo);
-            oDim.ascent = finfo.ascent;
-            oDim.descent = finfo.descent;
-            oDim.width = aWidth;
-            ::TextFont(origFontNum);        
-            break;
-        }          
-    }
-  }
-  
-  if (0 == outLen)
-    fallbackScript = BAD_SCRIPT;
-    
-  // put into cache
-  cache->Set(*aCharPt, fallbackScript);
-  
-  return (BAD_SCRIPT != fallbackScript);
-}
-//------------------------------------------------------------------------
-
-#if MOZ_MATHML
-PRBool nsUnicodeRenderingToolkit::TECFallbackGetBoundingMetrics(
-    const PRUnichar *aCharPt,
-    nsBoundingMetrics& oBoundingMetrics,
-    short fontNum,
-    nsUnicodeFontMappingMac& fontMapping)
-{
-    char buf[STACK_TRESHOLD];
-    ByteCount processBytes = 0;
-    ByteCount outLen = 0;
-    ScriptCode fallbackScript;
-    nsUnicodeFallbackCache* cache = GetTECFallbackCache();
-    const short *scriptFallbackFonts = fontMapping.GetScriptFallbackFonts();
-    
-    if((0xf780 <= *aCharPt) && (*aCharPt <= 0xf7ff))
-    {
-        // If we are encountering our PUA characters for User-Defined characters, we better
-        // just drop the high-byte and return the width for the low-byte.
-        *buf = (*aCharPt & 0x00FF);
-        GetScriptTextBoundingMetrics(buf, 1, ::FontToScript(fontNum), oBoundingMetrics);
-        return PR_TRUE;
-    }
-    else if(cache->Get(*aCharPt, fallbackScript))
-    {
-        if(BAD_SCRIPT == fallbackScript)
-            return PR_FALSE;
-        
-        if(fontMapping.ConvertUnicodeToGlyphs(scriptFallbackFonts[fallbackScript], aCharPt, 1,
-            buf, STACK_TRESHOLD, outLen, processBytes, kUnicodeLooseMappingsMask))
-        {  
-            ::TextFont(scriptFallbackFonts[fallbackScript]);
-            GetScriptTextBoundingMetrics(buf, outLen, fallbackScript, oBoundingMetrics);
-            ::TextFont(fontNum);
-            return PR_TRUE;
-        }
-        return PR_FALSE;
-    }
-    
-    for(fallbackScript = 0; fallbackScript < 32; fallbackScript++)
-    {
-        if(BAD_FONT_NUM != scriptFallbackFonts[fallbackScript])
-        {
-            if(fontMapping.ConvertUnicodeToGlyphs(scriptFallbackFonts[fallbackScript], aCharPt, 1,
-                buf, STACK_TRESHOLD, outLen, processBytes, kUnicodeLooseMappingsMask))
-            {
-                NS_PRECONDITION(0 == (processBytes % 2), """"strange conversion result"""");
-                ::TextFont(scriptFallbackFonts[fallbackScript]);
-                GetScriptTextBoundingMetrics(buf, outLen, fallbackScript, oBoundingMetrics);           
-                ::TextFont(fontNum);
-                break;
-            }   
-        }
-    }
-    
-    if(0 == outLen)
-        fallbackScript = BAD_SCRIPT;
-        
-    // put into cache
-    cache->Set(*aCharPt, fallbackScript);
-    
-    return (BAD_SCRIPT != fallbackScript);
-}
-#endif // MOZ_MATHML
-//------------------------------------------------------------------------
-
-PRBool nsUnicodeRenderingToolkit :: TECFallbackDrawChar(
-  const PRUnichar *aCharPt, 
-  PRInt32 x, 
-  PRInt32 y, 
-  short& oWidth, 
-  short origFontNum, 
-  nsUnicodeFontMappingMac& fontMapping)
-{
-  char buf[20];
-  ByteCount processBytes = 0;
-  ByteCount outLen = 0;
-  ScriptCode fallbackScript;
-  nsUnicodeFallbackCache* cache = GetTECFallbackCache();
-  const short *scriptFallbackFonts = fontMapping.GetScriptFallbackFonts();
-  
-  // since we always call TECFallbackGetWidth before TECFallbackDrawChar
-  // we could assume that we can always get the script code from cache.
-  if ((0xf780 <= *aCharPt) && (*aCharPt <= 0xf7ff))
-  {
-    // If we are encountering our PUA characters for User-Defined characters, we better
-    // just drop the high-byte and draw the text for the low-byte.
-    *buf = (*aCharPt & 0x00FF);
-    DrawScriptText (buf,1,x,y,oWidth);
-
-    return PR_TRUE;
-  }
-  else if (cache->Get(*aCharPt, fallbackScript))
-  {
-    if (BAD_SCRIPT == fallbackScript)
-      return PR_FALSE;
-    
-    if(fontMapping.ConvertUnicodeToGlyphs(scriptFallbackFonts[fallbackScript], aCharPt, 1,
-        buf, STACK_TRESHOLD, outLen, processBytes, kUnicodeLooseMappingsMask))
-    {
-        ::TextFont(scriptFallbackFonts[fallbackScript]);
-        DrawScriptText(buf, outLen, x, y, oWidth);
-        ::TextFont(origFontNum);
-        return PR_TRUE;
-    }
-  }
-  return PR_FALSE;
-}
-//------------------------------------------------------------------------
-static PRUnichar gSymbolReplacement[]={0xf8ee,0xf8f9,0xf8f0,0xf8fb,0x3008,0x3009};
-
-//------------------------------------------------------------------------
-
-static nsresult FormAorBIsolated(PRUnichar aChar, nsMacUnicodeFontInfo& aInfo, PRUnichar* aOutChar)
-{
-  static const PRUnichar arabicisolated[]=
-  {
-    // start of form a
-    0xFB50, 0x0671,  0xFB52, 0x067B,  0xFB56, 0x067E,  0xFB5A, 0x0680,  0xFB5E, 0x067A,
-    0xFB62, 0x067F,  0xFB66, 0x0679,  0xFB6A, 0x06A4,  0xFB6E, 0x06A6,  0xFB72, 0x0684,
-    0xFB76, 0x0683,  0xFB7A, 0x0686,  0xFB7E, 0x0687,  0xFB82, 0x068D,  0xFB84, 0x068C,
-    0xFB86, 0x068E,  0xFB88, 0x0688,  0xFB8A, 0x0698,  0xFB8C, 0x0691,  0xFB8E, 0x06A9,
-    0xFB92, 0x06AF,  0xFB96, 0x06B3,  0xFB9A, 0x06B1,  0xFB9E, 0x06BA,  0xFBA0, 0x06BB,
-    0xFBA4, 0x06C0,  0xFBA6, 0x06C1,  0xFBAA, 0x06BE,  0xFBAE, 0x06D2,  0xFBB0, 0x06D3,
-    0xFBD3, 0x06AD,  0xFBD7, 0x06C7,  0xFBD9, 0x06C6,  0xFBDB, 0x06C8,  0xFBDD, 0x0677,
-    0xFBDE, 0x06CB,  0xFBE0, 0x06C5,  0xFBE2, 0x06C9,  0xFBE4, 0x06D0,  0xFBFC, 0x06CC,
-
-    // start of form b
-    0xFE70, 0x064B,  0xFE72, 0x064C,  0xFE74, 0x064D,  0xFE76, 0x064E,  0xFE78, 0x064F,
-    0xFE7A, 0x0650,  0xFE7C, 0x0651,  0xFE7E, 0x0652,  0xFE80, 0x0621,  0xFE81, 0x0622,
-    0xFE83, 0x0623,  0xFE85, 0x0624,  0xFE87, 0x0625,  0xFE89, 0x0626,  0xFE8D, 0x0627,
-    0xFE8F, 0x0628,  0xFE93, 0x0629,  0xFE95, 0x062A,  0xFE99, 0x062B,  0xFE9D, 0x062C,
-    0xFEA1, 0x062D,  0xFEA5, 0x062E,  0xFEA9, 0x062F,  0xFEAB, 0x0630,  0xFEAD, 0x0631,
-    0xFEAF, 0x0632,  0xFEB1, 0x0633,  0xFEB5, 0x0634,  0xFEB9, 0x0635,  0xFEBD, 0x0636,
-    0xFEC1, 0x0637,  0xFEC5, 0x0638,  0xFEC9, 0x0639,  0xFECD, 0x063A,  0xFED1, 0x0641,
-    0xFED5, 0x0642,  0xFED9, 0x0643,  0xFEDD, 0x0644,  0xFEE1, 0x0645,  0xFEE5, 0x0646,
-    0xFEE9, 0x0647,  0xFEED, 0x0648,  0xFEEF, 0x0649,  0xFEF1, 0x064A,
-    0x0000
-  };
-  const PRUnichar* p;
-  for ( p= arabicisolated; *p; p += 2) {
-    if (aChar == *p) {
-      if (aInfo.HasGlyphFor(*(p+1))) {
-        *aOutChar = *(p+1);
-        return NS_OK;
-      }
-    }
-  }
-  return NS_ERROR_FAILURE;
-}
-//------------------------------------------------------------------------
-
-PRBool 
-nsUnicodeRenderingToolkit::ATSUIFallbackGetDimensions(
-  const PRUnichar *aCharPt, 
-  nsTextDimensions& oDim, 
-  short origFontNum,
-  short aSize, PRBool aBold, PRBool aItalic, nscolor aColor) 
-{
-  
-  nsMacUnicodeFontInfo info;
-  if (nsATSUIUtils::IsAvailable()  
-      && (IN_STANDARD_MAC_ROMAN_FONT(*aCharPt) 
-         ||IN_SYMBOL_FONT(*aCharPt)
-         ||SPECIAL_IN_SYMBOL_FONT(*aCharPt)
-         ||info.HasGlyphFor(*aCharPt)))
-  {
-    mATSUIToolkit.PrepareToDraw(mPort, mContext );
-    nsresult res;
-    if (SPECIAL_IN_SYMBOL_FONT(*aCharPt))
-    {
-      short rep = 0;
-      if ((*aCharPt) > 0x230b)
-         rep = (*aCharPt) - 0x2325;
-      else 
-         rep = (*aCharPt) - 0x2308;
-      res = mATSUIToolkit.GetTextDimensions(gSymbolReplacement+rep, 1, oDim, aSize, 
-                                            origFontNum, 
-                                            aBold, aItalic, aColor);
-    } 
-    else 
-    {
-      res = mATSUIToolkit.GetTextDimensions(aCharPt, 1, oDim, aSize, 
-                                            origFontNum, 
-                                            aBold, aItalic, aColor);
-    }
-    if (NS_SUCCEEDED(res)) 
-      return PR_TRUE;
-  }
-
-  if (IN_ARABIC_PRESENTATION_A_OR_B(*aCharPt))
-  {      
-    PRUnichar isolated;
-    if (NS_SUCCEEDED( FormAorBIsolated(*aCharPt, info, &isolated))) 
-    {
-      if (ATSUIFallbackGetDimensions(&isolated, oDim, origFontNum, 
-                                     aSize, aBold, aItalic, aColor))
-         return PR_TRUE;
-    }                                                 
-  }
-
-  // we know some ATSUI font do not have bold, turn it off and try again
-  if (aBold) 
-  {
-	  if (ATSUIFallbackGetDimensions(aCharPt, oDim, origFontNum, 
-	                                 aSize, PR_FALSE, aItalic, aColor))
-	     return PR_TRUE;
-  }
-
-  // we know some ATSUI font do not have italic, turn it off and try again
-  if (aItalic) 
-  {
-	  if (ATSUIFallbackGetDimensions(aCharPt, oDim, origFontNum, 
-	                                 aSize, PR_FALSE, PR_FALSE, aColor))
-	     return PR_TRUE;
-  }
-
-  return PR_FALSE;
-}
-
-//------------------------------------------------------------------------
-
-#ifdef MOZ_MATHML
-PRBool
-nsUnicodeRenderingToolkit::ATSUIFallbackGetBoundingMetrics(
-  const PRUnichar *aCharPt,
-  nsBoundingMetrics& oBoundingMetrics,
-  short origFontNum,
-  short aSize, PRBool aBold, PRBool aItalic, nscolor aColor)
-{
-
-  nsMacUnicodeFontInfo info;
-  if (nsATSUIUtils::IsAvailable()  
-      && (IN_STANDARD_MAC_ROMAN_FONT(*aCharPt) 
-         ||IN_SYMBOL_FONT(*aCharPt)
-         ||SPECIAL_IN_SYMBOL_FONT(*aCharPt)
-         ||info.HasGlyphFor(*aCharPt)))
-  {
-    mATSUIToolkit.PrepareToDraw(mPort, mContext );
-    nsresult res;
-    if (SPECIAL_IN_SYMBOL_FONT(*aCharPt))
-    {
-      short rep = 0;
-      if ((*aCharPt) > 0x230b)
-         rep = (*aCharPt) - 0x2325;
-      else
-         rep = (*aCharPt) - 0x2308;
-      res = mATSUIToolkit.GetBoundingMetrics(gSymbolReplacement+rep, 1, oBoundingMetrics, aSize, 
-                                             origFontNum, 
-                                             aBold, aItalic, aColor);
-    }
-    else
-    {
-      res = mATSUIToolkit.GetBoundingMetrics(aCharPt, 1, oBoundingMetrics, aSize, 
-                                             origFontNum, 
-                                             aBold, aItalic, aColor);
-    }
-    if (NS_SUCCEEDED(res))
-      return PR_TRUE;
-  }
-
-  if (IN_ARABIC_PRESENTATION_A_OR_B(*aCharPt))
-  {  
-    PRUnichar isolated;
-    if (NS_SUCCEEDED(FormAorBIsolated(*aCharPt, info, &isolated)))
-    {
-      if (ATSUIFallbackGetBoundingMetrics(&isolated, oBoundingMetrics, origFontNum, 
-                                          aSize, aBold, aItalic, aColor))
-        return PR_TRUE;
-    }                                                 
-  }
-
-  // we know some ATSUI font do not have bold, turn it off and try again
-  if (aBold)
-  {
-    if (ATSUIFallbackGetBoundingMetrics(aCharPt, oBoundingMetrics, origFontNum, 
-                                        aSize, PR_FALSE, aItalic, aColor))
-      return PR_TRUE;
-  }
-
-  // we know some ATSUI font do not have italic, turn it off and try again
-  if (aItalic) 
-  {
-    if (ATSUIFallbackGetBoundingMetrics(aCharPt, oBoundingMetrics, origFontNum, 
-                                        aSize, PR_FALSE, PR_FALSE, aColor))
-      return PR_TRUE;
-  }
-
-  return PR_FALSE;
-}
-#endif // MOZ_MATHML
-
-//------------------------------------------------------------------------
-
-PRBool nsUnicodeRenderingToolkit :: ATSUIFallbackDrawChar(
-  const PRUnichar *aCharPt, 
-  PRInt32 x,   PRInt32 y, 
-  short& oWidth, 
-  short origFontNum,
-  short aSize, PRBool aBold, PRBool aItalic, nscolor aColor) 
-{
-  nsMacUnicodeFontInfo info;
-  if (nsATSUIUtils::IsAvailable()  
-      && (IN_STANDARD_MAC_ROMAN_FONT(*aCharPt) 
-         ||IN_SYMBOL_FONT(*aCharPt)
-         ||SPECIAL_IN_SYMBOL_FONT(*aCharPt)
-         ||info.HasGlyphFor(*aCharPt)))
-  {
-    mATSUIToolkit.PrepareToDraw(mPort, mContext );
-    nsresult res;
-    if(SPECIAL_IN_SYMBOL_FONT(*aCharPt)) 
-    {
-      short rep = 0;
-      if ((*aCharPt) > 0x230b)
-        rep = (*aCharPt) - 0x2325;
-      else 
-        rep = (*aCharPt) - 0x2308;
-      res = mATSUIToolkit.DrawString(gSymbolReplacement+rep, 1, x, y, oWidth, aSize, 
-                                     origFontNum, 
-                                     aBold, aItalic, aColor);
-    } else {
-      res = mATSUIToolkit.DrawString(aCharPt, 1, x, y, oWidth, aSize, 
-                                     origFontNum, 
-                                     aBold, aItalic, aColor);
-    }
-    if (NS_SUCCEEDED(res))
-      return PR_TRUE;
-  }
-
-  if (IN_ARABIC_PRESENTATION_A_OR_B(*aCharPt))
-  {      
-    PRUnichar isolated;
-    if (NS_SUCCEEDED(FormAorBIsolated(*aCharPt, info, &isolated))) {
-      if (ATSUIFallbackDrawChar(&isolated, x, y, oWidth, origFontNum, 
-                                aSize, aBold, aItalic, aColor))
-         return PR_TRUE;
-    }                                                 
-  }
-
-  // we know some ATSUI font do not have bold, turn it off and try again
-  if (aBold)
-  {
-    if (ATSUIFallbackDrawChar(aCharPt, x, y, oWidth, origFontNum, 
-                              aSize, PR_FALSE, aItalic, aColor))
-       return PR_TRUE;
-  }
-
-  // we know some ATSUI font do not have italic, turn it off and try again
-  if (aItalic)
-  {
-    if (ATSUIFallbackDrawChar(aCharPt, x, y, oWidth, origFontNum, 
-                              aSize, PR_FALSE, PR_FALSE, aColor))
-       return PR_TRUE;
-  }
-
-  return PR_FALSE;
-}
-
-PRBool  nsUnicodeRenderingToolkit :: SurrogateGetDimensions(
-  const PRUnichar *aSurrogatePt, nsTextDimensions& oDim, short origFontNum,  
-  short aSize, PRBool aBold, PRBool aItalic, nscolor aColor)
-{
-  nsresult res;
-  mATSUIToolkit.PrepareToDraw(mPort, mContext );
-  res = mATSUIToolkit.GetTextDimensions(aSurrogatePt, 2, oDim, aSize, 
-                                        origFontNum, 
-                                        aBold, aItalic, aColor);
-  return NS_SUCCEEDED(res);
-}
-
-PRBool  nsUnicodeRenderingToolkit :: SurrogateDrawChar(
-  const PRUnichar *aSurrogatePt, PRInt32 x, PRInt32 y, short& oWidth, short origFontNum, 
-  short aSize, PRBool aBold, PRBool aItalic, nscolor aColor)
-{
-  nsresult res;
-  mATSUIToolkit.PrepareToDraw(mPort, mContext );
-  res = mATSUIToolkit.DrawString(aSurrogatePt, 2, x, y, oWidth, aSize, 
-                                 origFontNum, 
-                                 aBold, aItalic, aColor);
-  return NS_SUCCEEDED(res);
-}
-
-#ifdef MOZ_MATHML
-PRBool  nsUnicodeRenderingToolkit :: SurrogateGetBoundingMetrics(
-  const PRUnichar *aSurrogatePt, nsBoundingMetrics& oBoundingMetrics, short origFontNum,
-  short aSize, PRBool aBold, PRBool aItalic, nscolor aColor)
-{
-  nsresult res;
-  mATSUIToolkit.PrepareToDraw(mPort, mContext );
-  res = mATSUIToolkit.GetBoundingMetrics(aSurrogatePt, 2, oBoundingMetrics, aSize, 
-                                             origFontNum, 
-                                             aBold, aItalic, aColor);
-
-  return NS_SUCCEEDED(res);
-}
-#endif
-
-static const char question[] = """"<?>"""";
-
-//------------------------------------------------------------------------
-
-PRBool nsUnicodeRenderingToolkit :: QuestionMarkFallbackGetWidth(
-	const PRUnichar *aCharPt, 
-	short& oWidth)
-{
-  CGrafPtr thePort;
-  ::GetPort((GrafPtr*)&thePort);
-  short saveSize = ::GetPortTextSize(thePort);		
-  ::TextSize(QUESTION_FALLBACKSIZE);
-  GetScriptTextWidth(question, 3,oWidth);
-  ::TextSize(saveSize);
-  return PR_TRUE;
-}
-//------------------------------------------------------------------------
-
-PRBool nsUnicodeRenderingToolkit :: QuestionMarkFallbackDrawChar(
-	const PRUnichar *aCharPt, 
-	PRInt32 x, 
-	PRInt32 y, 
-	short& oWidth)
-{
-  CGrafPtr thePort;
-  ::GetPort((GrafPtr*)&thePort);
-  short saveSize = ::GetPortTextSize(thePort);		
-  ::TextSize(QUESTION_FALLBACKSIZE);
-  DrawScriptText(question, 3, x, y, oWidth);
-  ::TextSize(saveSize);
-  return PR_TRUE;
-}
-//------------------------------------------------------------------------
-PRBool nsUnicodeRenderingToolkit :: LoadTransliterator()
-{
-	if(mTrans) 
-		return PR_TRUE;
-		
-	nsresult res;
-    mTrans = do_CreateInstance(NS_SAVEASCHARSET_CONTRACTID, &res);
-    if ( NS_SUCCEEDED(res) )
-    {
-       res = mTrans->Init(""""x-mac-roman"""",
-               nsISaveAsCharset::attr_FallbackQuestionMark +
-               nsISaveAsCharset::attr_EntityBeforeCharsetConv +
-               nsISaveAsCharset::attr_IgnoreIgnorables,
-               nsIEntityConverter::transliterate);
-      NS_ASSERTION(NS_SUCCEEDED(res), """"cannot init the converter"""");
-      if (NS_FAILED(res)) 
-      {
-        mTrans = nsnull;
-        return PR_FALSE;
-      }
-    }
-    return PR_TRUE;
-}
-//------------------------------------------------------------------------
-PRBool nsUnicodeRenderingToolkit :: TransliterateFallbackGetWidth(
-	const PRUnichar *aCharPt, 
-	short& oWidth)
-{
-  if(LoadTransliterator()) {
-    nsAutoString tmp(aCharPt, 1);
-    char* conv = nsnull;
-    if(NS_SUCCEEDED(mTrans->Convert(tmp.get(), &conv)) && conv) {
-      CGrafPtr thePort;
-      ::GetPort((GrafPtr*)&thePort);
-	    short aSize = ::GetPortTextSize(thePort);		 		
-  		PRInt32 l=strlen(conv);
-    	if((l>3) && ('^' == conv[0]) && ('(' == conv[1]) && (')' == conv[l-1])) // sup
-    	{
-    		short small = aSize * 2 / 3;
-    		::TextSize(small);
-  			GetScriptTextWidth(conv+2, l-3,oWidth);   
-    		::TextSize(aSize);
-    	} 
-    	else if((l>3) && ('v' == conv[0]) && ('(' == conv[1]) && (')' == conv[l-1])) // sub
-    	{
-    		short small = aSize * 2 / 3;
-    		::TextSize(small);
-  			GetScriptTextWidth(conv+2, l-3,oWidth);   
-     		::TextSize(aSize);
-   		} 
-   		else if((l>1) && ('0' <= conv[0]) && ( conv[0] <= '9') && ('/' == conv[1])) // fract
-    	{
-    		short small = aSize * 2 / 3;
-    		short tmpw=0;
-    		
-    		::TextSize(small);
-   			GetScriptTextWidth(conv, 1 ,tmpw);   
-   			oWidth = tmpw;
-    		
-     		::TextSize(aSize);
-  			GetScriptTextWidth(conv+1, 1,tmpw);   
-    		oWidth += tmpw;
-     		
-    		if(l>2) {
-    			::TextSize(small);
-  				GetScriptTextWidth(conv+2, l-2,tmpw);   
-    			oWidth += tmpw;
- 	    		::TextSize(aSize);
-    		}
-    	} else {
-  			GetScriptTextWidth(conv, l,oWidth);   
-  		}
-  		
-  		 
-    	nsMemory::Free(conv);
-    	return PR_TRUE;
-    }
-  }
-  return PR_FALSE;
-}
-//------------------------------------------------------------------------
-
-PRBool nsUnicodeRenderingToolkit :: TransliterateFallbackDrawChar(
-	const PRUnichar *aCharPt, 
-	PRInt32 x, 
-	PRInt32 y, 
-	short& oWidth)
-{
-  if(LoadTransliterator()) {
-    nsAutoString tmp(aCharPt, 1);
-    char* conv = nsnull;
-    if(NS_SUCCEEDED(mTrans->Convert(tmp.get(), &conv)) && conv) {
-	    CGrafPtr thePort;
-	    ::GetPort((GrafPtr*)&thePort);
-	    short aSize = ::GetPortTextSize(thePort);		
-    	PRInt32 l=strlen(conv);
-    	if((l>3) && ('^' == conv[0]) && ('(' == conv[1]) && (')' == conv[l-1])) // sup
-    	{
-    		short small = aSize * 2 / 3;
-    		::TextSize(small);
-    		DrawScriptText(conv+2, l-3, x, y-small/2, oWidth);
-    		::TextSize(aSize);
-    	} 
-    	else if((l>3) && ('v' == conv[0]) && ('(' == conv[1]) && (')' == conv[l-1])) // sub
-    	{
-    		short small = aSize * 2 / 3;
-    		::TextSize(small);
-    		DrawScriptText(conv+2, l-3, x, y+small/2, oWidth);
-     		::TextSize(aSize);
-   		} 
-   		else if((l>1) && ('0' <= conv[0]) && ( conv[0] <= '9') && ('/' == conv[1])) // fract
-    	{
-    		short small = aSize * 2 / 3;
-    		short tmpw=0;
-    		
-    		::TextSize(small);
-    		DrawScriptText(conv, 1, x, y-small/2, tmpw);
-    		oWidth = tmpw;
-    		
-     		::TextSize(aSize);
-    		DrawScriptText(conv+1, 1, x+oWidth, y, tmpw);
-    		oWidth += tmpw;
-     		
-    		if(l>2) {
-    			::TextSize(small);
-    			DrawScriptText(conv+2, l-2, x+oWidth, y+small/2, tmpw);
-    			oWidth += tmpw;
- 	    		::TextSize(aSize);
-    		}
-    	} else {
-  			DrawScriptText(conv, l, x, y, oWidth);
-  		}
-    	nsMemory::Free(conv);
-    	return PR_TRUE;
-    }
-  }
-  return PR_FALSE;
-}
-//------------------------------------------------------------------------
-#define CAN_DO_PRECOMPOSE_HANGUL(u, f) ((0xAC00<=(u)) && ((u)<=0xD7FF) && ((f) != BAD_FONT_NUM))
-#define SBase 0xAC00
-#define LCount 19
-#define VCount 21
-#define TCount 28
-#define NCount (VCount * TCount)
-static void UnicodePrecomposedHangulTo4EUCKR(PRUnichar in, char *out)
-{
-        static const PRUint8 lMap[LCount] = {
-          0xa1, 0xa2, 0xa4, 0xa7, 0xa8, 0xa9, 0xb1, 0xb2, 0xb3, 0xb5,
-          0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe
-        };
-
-        static const PRUint8 tMap[TCount] = {
-          0xd4, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa9, 0xaa, 
-          0xab, 0xac, 0xad, 0xae, 0xaf, 0xb0, 0xb1, 0xb2, 0xb4, 0xb5, 
-          0xb6, 0xb7, 0xb8, 0xba, 0xbb, 0xbc, 0xbd, 0xbe
-        };
-        PRUint16 SIndex, LIndex, VIndex, TIndex;
-        /* the following line are copy from Unicode 2.0 page 3-13 */
-        /* item 1 of Hangul Syllabel Decomposition */
-        SIndex =  in - SBase;
-
-        /* the following lines are copy from Unicode 2.0 page 3-14 */
-        /* item 2 of Hangul Syllabel Decomposition w/ modification */
-        LIndex = SIndex / NCount;
-        VIndex = (SIndex % NCount) / TCount;
-        TIndex = SIndex % TCount;
-		// somehow Apple's Korean font show glaph on A4D4 :( so we use '[' + L + V + T + ']' intead of 
-		// Filler + L + V + T to display
-		// output '['
-		*out++ = '['; 
-		// output L
-		*out++ = 0xA4;
-		*out++ = lMap[LIndex] ;
-		// output V
-		*out++ = 0xA4;
-		*out++  = (VIndex + 0xbf);
-		// output T
-		*out++ = 0xA4;
-		*out++ = tMap[TIndex] ;
-		// output ']'
-		*out++ = ']'; 
-}
-    
-//------------------------------------------------------------------------
-PRBool nsUnicodeRenderingToolkit :: PrecomposeHangulFallbackGetWidth(
-	const PRUnichar *aCharPt, 
-	short& oWidth,
-	short koreanFont,
-	short origFont)
-{
-  if(CAN_DO_PRECOMPOSE_HANGUL(*aCharPt, koreanFont)) {
-	  char euckr[8];
-	  if(koreanFont != origFont)
-	  	::TextFont(koreanFont);		  
-	  UnicodePrecomposedHangulTo4EUCKR(*aCharPt, euckr);
-	  GetScriptTextWidth(euckr, 8, oWidth); 
-	  if(koreanFont != origFont)
-	  	::TextFont(origFont);		  
-	  return PR_TRUE;
-  } else {
-	  return PR_FALSE;
-  }
-}
-//------------------------------------------------------------------------
-
-PRBool nsUnicodeRenderingToolkit :: PrecomposeHangulFallbackDrawChar(
-	const PRUnichar *aCharPt, 
-	PRInt32 x, 
-	PRInt32 y, 
-	short& oWidth,
-	short koreanFont,
-	short origFont)
-{
-  if(CAN_DO_PRECOMPOSE_HANGUL(*aCharPt, koreanFont)) {
-	  char euckr[8];
-	  if(koreanFont != origFont)
-	  	::TextFont(koreanFont);		  
-	  UnicodePrecomposedHangulTo4EUCKR(*aCharPt, euckr);
-	  DrawScriptText(euckr, 8, x, y, oWidth); 
-	  if(koreanFont != origFont)
-	  	::TextFont(origFont);		  
-	  return PR_TRUE;
-  } else {
-	  return PR_FALSE;
-  }
-}
-//------------------------------------------------------------------------
-
-PRBool nsUnicodeRenderingToolkit :: UPlusFallbackGetWidth(
-	const PRUnichar *aCharPt, 
-	short& oWidth)
-{
-  CGrafPtr thePort;
-  ::GetPort((GrafPtr*)&thePort);
-  short saveSize = ::GetPortTextSize(thePort);		
-  char buf[16];
-  PRUint32 len = PR_snprintf(buf, 16 , """"<U+%04X>"""", *aCharPt);
-  ::TextSize(UPLUS_FALLBACKSIZE);
-  if(len != -1) 
-    GetScriptTextWidth(buf, len, oWidth);
-  ::TextSize(saveSize);
-  return (-1 != len);
-}
-//------------------------------------------------------------------------
-
-PRBool nsUnicodeRenderingToolkit :: UPlusFallbackDrawChar(
-	const PRUnichar *aCharPt, 
-	PRInt32 x, 
-	PRInt32 y, 
-	short& oWidth)
-{
-  CGrafPtr thePort;
-  ::GetPort((GrafPtr*)&thePort);
-  short saveSize = ::GetPortTextSize(thePort);		
-  char buf[16];
-  PRUint32 len = PR_snprintf(buf, 16 , """"<U+%04X>"""", *aCharPt);
-  ::TextSize(UPLUS_FALLBACKSIZE);
-  if(len != -1) 
-    DrawScriptText(buf, len, x, y, oWidth);
-  ::TextSize(saveSize);
-  return (-1 != len);
-}
-//------------------------------------------------------------------------
-/*
-# capital mean above
-# small mean below
-# r - ring below
-# R - Ring Above
-# d - dot below
-# D - Dot Above
-# l - line below
-# L - Line Above
-# c - cedilla
-# A - Acute
-# x - circumflex below
-# X - Circumflex Above
-# G - Grave above
-# T - Tilde above
-# t - tilde below
-# B - Breve Above
-# b - breve below
-# U - Diaeresis Above
-# u - diaeresis below
-# H - Hook Above 
-# N - Horn Above
-*/
-static const char * const g1E00Dec = 
-//0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   U+1E00 - U+1E0F
- """"Ar ar BD bD Bd bd Bl bl CcAccADD dD Dd dd Dl dl """"
-//0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   U+1E10 - U+1E1F
- """"Dc dc Dx dx ELGeLGELAeLAEx ex Et et EcBecBFD fD """"
-//0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   U+1E20 - U+1E2F
- """"GL gL HD hD Hd hd HU hU Hc hc Hb hb It it IUAiUA""""
-//0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   U+1E30 - U+1E3F
- """"KA kA Kd kd Kl kl Ld ld LdLldLLl ll Lx lx MA mA """"
-//0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   U+1E40 - U+1E4F
- """"MD mD Md md ND nD Nd nd Nl nl Nx nx OTAoTAOTUoTU""""
-//0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   U+1E50 - U+1E5F
- """"OLGoLGOLAoLAPA pA PD pD RD rD Rd rd RdLrdLRl rl """"
-//0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   U+1E60 - U+1E6F
- """"SD sD Sd sd SADsADSBDsBDSdDsdDTD tD Td td Tl tl """"
-//0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   U+1E70 - U+1E7F
- """"Tx tx Uu uu Ut ut Ux ux UTAuTAULUuLUVT vT Vd vd """"
-//0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   U+1E80 - U+1E8F
- """"WG wG WA wA WU wU WD wD Wd wd XD xD XU xU YD Yd """"
-//0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   U+1E90 - U+1E9F
- """"ZX zX Zd zd Zl zl Hl tU wR yR aH                """"
-//0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   U+1EA0 - U+1EAF
- """"Ad ad AH aH AXAaXAAXGaXGAXHaXHAXTaXTAdXadXABAaBA""""
-//0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   U+1EB0 - U+1EBF
- """"ABGaBGABHaBHABTaBTAdBadBEd ed EH eH ET eT EXAeXA""""
-//0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   U+1EC0 - U+1ECF
- """"EXGeXGEXHeXHEXTeXTEdXedXIH iH Id id Od od OH oH """"
-//0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   U+1ED0 - U+1EDF
- """"OXAoXAOXGoXGOXHoXHOXToXTOdXodXOAnoAnOGnoGnOHnoHn""""
-//0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   U+1EE0 - U+1EEF
- """"OHToHTOdTodTUd ud UH uh UAnuAnUGnuGnUHnuHnUTnuTn""""
-//0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F   U+1EF0 - U+1EFF
- """"UdnudnYG yG Yd yd YH yH YT yT                   """"
-;
-//------------------------------------------------------------------------
-static void CCodeToMacRoman(char aIn, char& aOut,short aWidth, short aHeight, short& oXadj, short& oYadj)
-{
-	aOut = ' ';
-	oXadj = oYadj = 0;
-	switch(aIn)
-	{
-		case 'r' : aOut = '\xfb'; oYadj = aHeight * 5 / 6; break ;// # r - ring below
-		case 'R' : aOut = '\xfb';                          break ;// # R - Ring Above
-		case 'd' : aOut = '\xfa'; oYadj = aHeight * 5 / 6; break ;// # d - dot below
-		case 'D' : aOut = '\xfa';                          break ;// # D - Dot Above
-		case 'l' : aOut = '_';                             break ;// # l - line below
-		case 'L' : aOut = '\xf8';                          break ;// # L - Line Above
-		case 'c' : aOut = '\xfc';                          break ;// # c - cedilla
-		case 'A' : aOut = '\xab';                          break ;// # A - Acute
-		case 'x' : aOut = '\xf6'; oYadj= aHeight * 5 / 6;  break ;// # x - circumflex below
-		case 'X' : aOut = '\xf6';                          break ;// # X - Circumflex Above
-		case 'G' : aOut = '`';                             break ;// # G - Grave above
-		case 'T' : aOut = '\xf7';                          break ;// # T - Tilde above
-		case 't' : aOut = '\xf7'; oYadj= aHeight * 5 / 6;  break ;// # t - tilde below
-		case 'B' : aOut = '\xf9';                          break ;// # B - Breve Above
-		case 'b' : aOut = '\xf9'; oYadj= aHeight * 5 / 6;  break ;// # b - breve below
-		case 'U' : aOut = '\xac';                          break ;// # U - Diaeresis Above
-		case 'u' : aOut = '\xac'; oYadj= aHeight * 5 / 6;  break ;// # u - diaeresis below
-		case 'H' : aOut = ',';    oYadj= - aHeight * 5 / 6;  break ;// # H - Hook Above 
-		case 'n' : aOut = ',';    oYadj= - aHeight * 5 / 6;  oXadj = aWidth /4; break ;// # N - Horn Above
-		default: NS_ASSERTION(0, """"unknown ccode"""");
-		        break;	
-	}
-}
-
-PRBool nsUnicodeRenderingToolkit :: LatinFallbackGetWidth(
-	const PRUnichar *aCharPt, 
-	short& oWidth)
-{
-  if(0x1E00 == (0xFF00 & *aCharPt)) 
-  {
-  	PRInt32 idx = 3 * ( *aCharPt & 0x00FF);
-  	if(' ' != g1E00Dec[idx])
-  	{
-   		GetScriptTextWidth(g1E00Dec+idx, 1, oWidth);
-  		return PR_TRUE;
-  	}
-  }
-  return PR_FALSE;
-}
-//------------------------------------------------------------------------
-
-PRBool nsUnicodeRenderingToolkit :: LatinFallbackDrawChar(
-	const PRUnichar *aCharPt, 
-	PRInt32 x, 
-	PRInt32 y, 
-	short& oWidth)
-{
-  if(0x1E00 == (0xFF00 & *aCharPt)) 
-  {
-  	PRInt32 idx = 3 * ( *aCharPt & 0x00FF);
-  	if(' ' != g1E00Dec[idx])
-  	{
-      CGrafPtr thePort;
-      ::GetPort((GrafPtr*)&thePort);
-	    short aSize = ::GetPortTextSize(thePort);	
-	    short dummy;
-	    short realwidth;
-  		char comb[2];
-  		short xadj;
-  		short yadj;
-  		short yadjB=0;
-  		
-  		PRBool baseTooBig = 	('A'<= g1E00Dec[idx]  ) && (g1E00Dec[idx] <= 'Z'  ) 
-  		                     || ('f' == g1E00Dec[idx])|| ('l' == g1E00Dec[idx])|| ('k' == g1E00Dec[idx]);
-  		PRBool firstIsAbove    = ('A'<= g1E00Dec[idx+1]) && (g1E00Dec[idx+1] <= 'Z') ;
-  		PRBool secondIsAbove   = ('A'<= g1E00Dec[idx+2]) && (g1E00Dec[idx+2] <= 'Z') ;
-  		
-  		GetScriptTextWidth(g1E00Dec+idx, 1, oWidth);
-  		if(baseTooBig && (firstIsAbove ||secondIsAbove ))
-    		::TextSize(aSize *3/4);		
-
-  		DrawScriptText(g1E00Dec+idx, 1, x, y, realwidth);
-
-  		if(baseTooBig && (firstIsAbove ||secondIsAbove ))
-  			::TextSize(aSize);  			
-  		if(' ' != g1E00Dec[idx+1]) {
-  			CCodeToMacRoman(g1E00Dec[idx+1],comb[0], realwidth, aSize, xadj, yadj);
-  			
-  			GetScriptTextWidth(comb, 1, dummy);
-  			
-  			DrawScriptText( comb, 1, x + xadj + ( realwidth - dummy ) / 2, y + yadj + yadjB, dummy);
-  		}
-  		if(' ' != g1E00Dec[idx+2]) {
-  			if( firstIsAbove && secondIsAbove)
-   				yadjB = yadjB - aSize / 6; 		
-  		
-  			CCodeToMacRoman(g1E00Dec[idx+2],comb[0], realwidth, aSize, xadj, yadj);
-  			GetScriptTextWidth(comb, 1, dummy);
-  			DrawScriptText( comb, 1, x + xadj+ ( realwidth - dummy ) / 2, y+ yadj + yadjB, dummy);
-  		}
-  		return PR_TRUE;
-  	}
-  }
-  return PR_FALSE;
-}
-
-//------------------------------------------------------------------------
-void nsUnicodeRenderingToolkit :: GetScriptTextWidth(
-	const char* buf, 
-	ByteCount aLen, 
-	short& oWidth)
-{
- 	oWidth = ::TextWidth(buf, 0, aLen);
-}
-
-#if MOZ_MATHML
-//------------------------------------------------------------------------
-void nsUnicodeRenderingToolkit::GetScriptTextBoundingMetrics(
-    const char* buf,
-    ByteCount aLen,
-    ScriptCode aScript,
-    nsBoundingMetrics& oBoundingMetrics)
-{
-    Point scale = { 1, 1 };
-    Fixed stackWidths[STACK_TRESHOLD], *widths;
-    Fixed stackLefts[STACK_TRESHOLD], *lefts;
-    Rect stackRects[STACK_TRESHOLD], *rects;
-    OSStatus err;
-
-    NS_PRECONDITION(aLen > 0, """"length must be greater than 0"""");
-
-    if(aLen > STACK_TRESHOLD)
-    {
-        widths = (Fixed*) nsMemory::Alloc(aLen * sizeof(Fixed));
-        lefts = (Fixed*) nsMemory::Alloc(aLen * sizeof(Fixed));
-        rects = (Rect*) nsMemory::Alloc(aLen * sizeof(Fixed));
-        
-        // if any of the allocations failed the 'else' case below will be executed
-    }
-    else
-    {
-        widths = stackWidths;
-        lefts = stackLefts;
-        rects = stackRects;
-    }
-
-    if(!GetOutlinePreferred())
-        SetOutlinePreferred(PR_TRUE);
-
-    if(widths && lefts && rects &&
-        (err = ::OutlineMetrics(aLen, buf, scale, scale, NULL, NULL, widths, lefts, rects)) == noErr)
-    {
-        ByteCount byteIndex = 0, glyphIndex = 0;
-
-        while(byteIndex < aLen)
-        {
-            nsBoundingMetrics bounds;
-            bounds.leftBearing = rects[glyphIndex].left + FixRound(lefts[glyphIndex]);
-            bounds.rightBearing = rects[glyphIndex].right + FixRound(lefts[glyphIndex]);
-            bounds.ascent = rects[glyphIndex].bottom;
-            bounds.descent = -rects[glyphIndex].top;
-            bounds.width = FixRound(widths[glyphIndex]);
-
-            if(glyphIndex == 0)
-                oBoundingMetrics = bounds;
-            else
-                oBoundingMetrics += bounds;
-
-            // for two byte characters byteIndex will increase by 2
-            //   while glyph index will only increase by 1
-            if(CharacterByteType((Ptr) buf, byteIndex, aScript) == smFirstByte)
-                byteIndex += 2;
-            else
-                byteIndex++;
-            glyphIndex++;
-        }
-    }
-    else
-    {
-        NS_WARNING(""""OulineMetrics failed"""");
-
-        FontInfo fInfo;
-        ::GetFontInfo(&fInfo);
-
-        oBoundingMetrics.leftBearing = 0;
-        oBoundingMetrics.rightBearing = ::TextWidth(buf, 0, aLen);
-        oBoundingMetrics.ascent = fInfo.ascent;
-        oBoundingMetrics.descent = fInfo.descent;
-        oBoundingMetrics.width = oBoundingMetrics.rightBearing;
-    }
-
-    if(aLen > STACK_TRESHOLD)
-    {
-        if(widths)
-            nsMemory::Free(widths);
-        if(lefts)
-            nsMemory::Free(lefts);
-        if(rects)
-            nsMemory::Free(rects);
-    }
-}
-#endif // MOZ_MATHML
-
-//------------------------------------------------------------------------
-void nsUnicodeRenderingToolkit :: DrawScriptText(
-	const char* buf, 
-	ByteCount aLen, 
-	PRInt32 x, 
-	PRInt32 y, 
-	short& oWidth)
-{
-	::MoveTo(x, y);
-	::DrawText(buf,0,aLen);
-	
-	Point   penLoc;
-	::GetPen(&penLoc);
-	oWidth = penLoc.h - x;
-}
-//------------------------------------------------------------------------
-
-nsresult 
-nsUnicodeRenderingToolkit::GetTextSegmentWidth(
-			const PRUnichar *aString, PRUint32 aLength, 
-			short fontNum, nsUnicodeFontMappingMac& fontMapping, 
-			PRUint32& oWidth)
-{
-  nsTextDimensions dim;
-  nsresult res = GetTextSegmentDimensions(aString, aLength, fontNum, fontMapping, dim);
-  oWidth = dim.width;
-  return res;
-}
-//------------------------------------------------------------------------
-
-
-nsresult 
-nsUnicodeRenderingToolkit::GetTextSegmentDimensions(
-      const PRUnichar *aString, PRUint32 aLength, 
-      short fontNum, nsUnicodeFontMappingMac& fontMapping, 
-      nsTextDimensions& oDim)
-{
-  oDim.Clear();
-  if(aLength == 0 || fontNum == IGNORABLE_FONT_NUM) 
-    return NS_OK;
-  NS_PRECONDITION(BAD_FONT_NUM != fontNum, """"illegal font num"""");
-  PRUint32 processLen = 0;
-  char *heapBuf = nsnull;
-  PRUint32 heapBufSize = 0;
-  short thisWidth = 0;
-  char stackBuf[STACK_TRESHOLD];
-  char *buf ;
-  ByteCount processBytes;
-  ByteCount outLen;
-  const short *scriptFallbackFonts = fontMapping.GetScriptFallbackFonts();
-  
-  ::TextFont(fontNum);
-  
-  FontInfo fInfo;
-  ::GetFontInfo(&fInfo);
-  nsTextDimensions segDim;
-  segDim.ascent = fInfo.ascent;
-  segDim.descent = fInfo.descent;
-  oDim.Combine(segDim);
-  
-  // find buf from stack or heap. We only need to do this once in this function.
-  // put this out of the loop for performance...
-  ByteCount bufLen = aLength * 2 + 10;
-  if (bufLen > STACK_TRESHOLD)
-  {
-    if (bufLen > heapBufSize)
-    {
-      if (heapBuf)
-        nsMemory::Free(heapBuf);
-      heapBuf = (char*) nsMemory::Alloc(bufLen);
-      heapBufSize = bufLen;
-      if (nsnull == heapBuf) 
-        return NS_ERROR_OUT_OF_MEMORY;
-    } 
-    buf = heapBuf;
-  } 
-  else 
-  {
-    bufLen = STACK_TRESHOLD;
-    buf = stackBuf;
-  }
-  do {
-    outLen = 0;
-    processBytes = 0;
-
-    if(fontMapping.ConvertUnicodeToGlyphs(fontNum, aString, aLength - processLen,
-            buf, bufLen, outLen, processBytes, 0))
-    {
-        GetScriptTextWidth(buf, outLen, thisWidth);
-      
-        segDim.Clear();
-        segDim.width = thisWidth;
-        oDim.Combine(segDim);
-    
-        NS_PRECONDITION(0 == (processBytes % 2), """"strange conversion result"""");
-    
-        PRInt32 processUnicode = processBytes / 2;
-        processLen += processUnicode;
-        aString += processUnicode;
-    }
-         
-    // Cannot precess by TEC, process one char a time by fallback mechanism
-    if (processLen < aLength)
-    {
-      PRBool fallbackDone = PR_FALSE;
-      segDim.Clear();
-      
-      if (NS_IS_HIGH_SURROGATE(*aString) && 
-          ((processLen+1) < aLength) &&
-          NS_IS_LOW_SURROGATE(*(aString+1)))
-      {
-         const nsFont *font = &mGS->mFontMetrics->Font();
-         fallbackDone = SurrogateGetDimensions(aString, segDim, fontNum, 
-                                               font->size, 
-                                               (font->weight > NS_FONT_WEIGHT_NORMAL), 
-                                               ((NS_FONT_STYLE_ITALIC ==  font->style) || 
-                                               (NS_FONT_STYLE_OBLIQUE ==  font->style)),
-                                               mGS->mColor );     
-         if (fallbackDone)
-         {   
-           oDim.Combine(segDim);    
-           // for fallback measure/drawing, we always do one char a time.
-           aString += 2;
-           processLen += 2;
-           continue;
-         }
-      }
-#ifndef DISABLE_TEC_FALLBACK
-      // Fallback by try different Script code
-      if (! IS_SKIP_TEC_FALLBACK(*aString))
-        fallbackDone = TECFallbackGetDimensions(aString, segDim, fontNum, fontMapping);
-#endif
-
-      //
-      // We really don't care too much of performance after this
-      // This will only be called when we cannot display this character in ANY mac script avaliable
-      // 
-#ifndef DISABLE_ATSUI_FALLBACK  
-      // Fallback by using ATSUI
-      if (!fallbackDone)  
-      {
-        const nsFont *font = &mGS->mFontMetrics->Font();
-        fallbackDone = ATSUIFallbackGetDimensions(aString, segDim, fontNum, 
-                                                  font->size, 
-                                                  (font->weight > NS_FONT_WEIGHT_NORMAL), 
-                                                  ((NS_FONT_STYLE_ITALIC ==  font->style) || 
-                                                   (NS_FONT_STYLE_OBLIQUE ==  font->style)),
-                                                  mGS->mColor );
-      }
-
-#endif
-		  if(! fallbackDone) {
-		     if(IS_ZERO_WIDTH_CHAR(*aString))
-		     {
-		        fallbackDone = PR_TRUE;
-		     }
-		  }
-#ifndef DISABLE_LATIN_FALLBACK
-      if (!fallbackDone) 
-      {
-        fallbackDone = LatinFallbackGetWidth(aString, thisWidth);
-        if (fallbackDone)
-          segDim.width = thisWidth;
-      }
-#endif
-#ifndef DISABLE_PRECOMPOSEHANGUL_FALLBACK
-      if (!fallbackDone)
-      {
-        fallbackDone = PrecomposeHangulFallbackGetWidth(aString, thisWidth,
-                                                        scriptFallbackFonts[smKorean], fontNum);
-        if (fallbackDone)
-          segDim.width = thisWidth;
-      }
-#endif
-#ifndef DISABLE_TRANSLITERATE_FALLBACK  
-      // Fallback to Transliteration
-      if (!fallbackDone) 
-      {
-        fallbackDone = TransliterateFallbackGetWidth(aString, thisWidth);
-        if (fallbackDone)
-          segDim.width = thisWidth;
-      }
-#endif
-#ifndef DISABLE_UPLUS_FALLBACK  
-      // Fallback to UPlus
-      if (!fallbackDone)
-      {
-        fallbackDone = UPlusFallbackGetWidth(aString, thisWidth);
-        if (fallbackDone)
-          segDim.width = thisWidth;
-      }
-#endif
-        
-      // Fallback to question mark
-      if (!fallbackDone) 
-      {
-        QuestionMarkFallbackGetWidth(aString, thisWidth);
-        if (fallbackDone)
-          segDim.width = thisWidth;
-      }
-      
-      oDim.Combine(segDim);    
-      // for fallback measure/drawing, we always do one char a time.
-      aString++;
-      processLen++;
-    }
-  } while (processLen < aLength);
-    
-    // release buffer if it is from heap
-  if (heapBuf)
-    nsMemory::Free(heapBuf);
-      
-  return NS_OK;
-}
-//------------------------------------------------------------------------
-
-#ifdef MOZ_MATHML
-nsresult
-nsUnicodeRenderingToolkit::GetTextSegmentBoundingMetrics(
-      const PRUnichar *aString, PRUint32 aLength,
-      short fontNum, nsUnicodeFontMappingMac& fontMapping,
-      nsBoundingMetrics& oBoundingMetrics)
-{
-  oBoundingMetrics.Clear();
-  if(aLength == 0 || fontNum == IGNORABLE_FONT_NUM) 
-    return NS_OK;
-  NS_PRECONDITION(BAD_FONT_NUM != fontNum, """"illegal font num"""");
-  PRBool firstTime = PR_TRUE;
-  PRUint32 processLen = 0;
-  nsBoundingMetrics segBoundingMetrics;
-  char *heapBuf = nsnull;
-  PRUint32 heapBufSize = 0;
-  char stackBuf[STACK_TRESHOLD];
-  char *buf;
-  ByteCount processBytes;
-  ByteCount outLen;
-  
-  ::TextFont(fontNum);
-  ScriptCode script = ::FontToScript(fontNum);
-  
-  // find buf from stack or heap. We only need to do this once in this function.
-  // put this out of the loop for performance...
-  ByteCount bufLen = aLength * 2 + 10;
-  if (bufLen > STACK_TRESHOLD)
-  {
-    if (bufLen > heapBufSize)
-    {
-      if (heapBuf)
-        nsMemory::Free(heapBuf);
-      heapBuf = (char*) nsMemory::Alloc(bufLen);
-      heapBufSize = bufLen;
-      if (nsnull == heapBuf) 
-        return NS_ERROR_OUT_OF_MEMORY;
-    } 
-    buf = heapBuf;
-  } 
-  else 
-  {
-    bufLen = STACK_TRESHOLD;
-    buf = stackBuf;
-  }
-
-  do {
-    outLen = 0;
-    processBytes = 0;
-        
-    if(fontMapping.ConvertUnicodeToGlyphs(fontNum, aString, aLength - processLen,
-        buf, bufLen, outLen, processBytes, 0))
-    {
-        segBoundingMetrics.Clear();
-        GetScriptTextBoundingMetrics(buf, outLen, script, segBoundingMetrics);
-        
-        if(firstTime) {
-            firstTime = PR_FALSE;
-            oBoundingMetrics = segBoundingMetrics;
-        }
-        else
-            oBoundingMetrics += segBoundingMetrics;
-        
-        NS_PRECONDITION(0 == (processBytes % 2), """"strange conversion result"""");
-        
-        PRInt32 processUnicode = processBytes / 2;
-        processLen += processUnicode;
-        aString += processUnicode;
-    }
-    
-    // Cannot process by TEC, process one char a time by fallback mechanism
-    if (processLen < aLength)
-    {
-      PRBool fallbackDone = PR_FALSE;
-      segBoundingMetrics.Clear();
-
-      if (NS_IS_HIGH_SURROGATE(*aString) && 
-          ((processLen+1) < aLength) &&
-          NS_IS_LOW_SURROGATE(*(aString+1)) )
-      {
-         const nsFont *font = &mGS->mFontMetrics->Font();
-         fallbackDone = SurrogateGetBoundingMetrics(aString, segBoundingMetrics, fontNum, 
-                                                    font->size, 
-                                                    (font->weight > NS_FONT_WEIGHT_NORMAL), 
-                                                    ((NS_FONT_STYLE_ITALIC ==  font->style) || 
-                                                     (NS_FONT_STYLE_OBLIQUE ==  font->style)),
-                                                     mGS->mColor );
-         if (fallbackDone)
-         {      
-           if (firstTime) {
-             firstTime = PR_FALSE;
-             oBoundingMetrics = segBoundingMetrics;
-           }
-           else
-             oBoundingMetrics += segBoundingMetrics;
-           aString += 2;
-           processLen += 2;
-           continue;
-         }
-      }
-#ifndef DISABLE_TEC_FALLBACK
-      if (! IS_SKIP_TEC_FALLBACK(*aString))
-        fallbackDone = TECFallbackGetBoundingMetrics(aString, segBoundingMetrics, fontNum, fontMapping);
-#endif
-
-#ifndef DISABLE_ATSUI_FALLBACK  
-      // Fallback by using ATSUI
-      if (!fallbackDone)  
-      {
-        const nsFont *font = &mGS->mFontMetrics->Font();
-        fallbackDone = ATSUIFallbackGetBoundingMetrics(aString, segBoundingMetrics, fontNum, 
-                                                  font->size, 
-                                                  (font->weight > NS_FONT_WEIGHT_NORMAL), 
-                                                  ((NS_FONT_STYLE_ITALIC ==  font->style) || 
-                                                   (NS_FONT_STYLE_OBLIQUE ==  font->style)),
-                                                  mGS->mColor );
-      }
-
-#endif
-      if(! fallbackDone) {
-         if(IS_ZERO_WIDTH_CHAR(*aString))
-         {
-           fallbackDone = PR_TRUE;
-         }
-      }
-
-      if (firstTime) {
-        firstTime = PR_FALSE;
-        oBoundingMetrics = segBoundingMetrics;
-      }
-      else
-        oBoundingMetrics += segBoundingMetrics;
-      // for fallback measure/drawing, we always do one char a time.
-      aString++;
-      processLen++;
-    }
-  } while (processLen < aLength);
-  
-  // release buffer if it is from heap
-  if (heapBuf)
-    nsMemory::Free(heapBuf);
-  
-  return NS_OK;
-}
-#endif // MOZ_MATHML
-//------------------------------------------------------------------------
-
-
-nsresult nsUnicodeRenderingToolkit :: DrawTextSegment(
-			const PRUnichar *aString, PRUint32 aLength, 
-			short fontNum, nsUnicodeFontMappingMac& fontMapping, 
-			PRInt32 x, PRInt32 y, PRUint32& oWidth)
-{
-	if(aLength == 0 || fontNum == IGNORABLE_FONT_NUM) {
-		oWidth = 0;
-		return NS_OK;
-	}	
- 	NS_PRECONDITION(BAD_FONT_NUM != fontNum, """"illegal font num"""");
-    short textWidth = 0;
-    PRUint32 processLen = 0;
-    char *heapBuf = nsnull;
-    PRUint32 heapBufSize = 0;
-    short thisWidth = 0;
-    char stackBuf[STACK_TRESHOLD];
-    char *buf ;
-    ByteCount processBytes;
-    ByteCount outLen;
-  	const short *scriptFallbackFonts = fontMapping.GetScriptFallbackFonts();
-
-    ::TextFont(fontNum);
-  	
-  	// find buf from stack or heap. We only need to do this once in this function.
-  	// put this out of the loop for performance...
-  	ByteCount bufLen = aLength * 2 + 10;
-  	if( bufLen > STACK_TRESHOLD)
-  	{
-  	 	if(bufLen > heapBufSize )
-  	 	{
-  	 		if(heapBuf)
-  	 			delete[] heapBuf;
-  	 		heapBuf = new char [bufLen];
-  	 		heapBufSize = bufLen;
-  	 		if(nsnull == heapBuf) {
-  	 			return NS_ERROR_OUT_OF_MEMORY;
-  	 		}  	  	 		
-  	 	} 
-  	 	buf = heapBuf;
-  	 } else {
-  	 	bufLen = STACK_TRESHOLD;
-  	 	buf = stackBuf;
-  	}
-
-    do {
-      outLen = 0;
-      processBytes = 0;
-        
-      if(fontMapping.ConvertUnicodeToGlyphs(fontNum, aString, aLength - processLen,
-                buf, bufLen, outLen, processBytes, 0))
-      {
-        DrawScriptText(buf, outLen, x, y, thisWidth);
-        
-        textWidth += thisWidth;
-        x += thisWidth;			
-        
-        NS_PRECONDITION(0 == (processBytes % 2), """"strange conversion result"""");
-        
-        PRInt32 processUnicode = processBytes / 2;
-        processLen += processUnicode;
-        aString += processUnicode;
-      }
-  	  	 
-  	  // Cannot precess by TEC, process one char a time by fallback mechanism
-  	  if( processLen < aLength)
-  	  {
-		  PRBool fallbackDone = PR_FALSE;
-
-      if (NS_IS_HIGH_SURROGATE(*aString) && 
-          ((processLen+1) < aLength) &&
-          NS_IS_LOW_SURROGATE(*(aString+1)) )
-      {
-         const nsFont *font = &mGS->mFontMetrics->Font();
-         fallbackDone = SurrogateDrawChar(aString, x, y, thisWidth, fontNum, 
-                                          font->size, 
-                                          (font->weight > NS_FONT_WEIGHT_NORMAL), 
-                                          ((NS_FONT_STYLE_ITALIC ==  font->style) || (NS_FONT_STYLE_OBLIQUE ==  font->style)),
-                                          mGS->mColor ); 
-         if (fallbackDone)
-         {      
-           textWidth += thisWidth;
-           x += thisWidth;         
-           aString += 2;
-           processLen += 2;
-           continue;
-         }
-      }
-#ifndef DISABLE_TEC_FALLBACK
-		  // Fallback by try different Script code
-		  if (! IS_SKIP_TEC_FALLBACK(*aString))
-  		  fallbackDone = TECFallbackDrawChar(aString, x, y, thisWidth, fontNum, fontMapping);
-#endif
-		  //
-		  // We really don't care too much of performance after this
-		  // This will only be called when we cannot display this character in ANY mac script avaliable
-		  // 
-
-#ifndef DISABLE_ATSUI_FALLBACK  
-		  // Fallback by using ATSUI
-		  if(! fallbackDone)  {
-		  	const nsFont *font = &mGS->mFontMetrics->Font();
-		  	fallbackDone = ATSUIFallbackDrawChar(aString, x, y, thisWidth, fontNum, 
-									  		font->size, 
-									  		(font->weight > NS_FONT_WEIGHT_NORMAL), 
-									  		((NS_FONT_STYLE_ITALIC ==  font->style) || (NS_FONT_STYLE_OBLIQUE ==  font->style)),
-									  		mGS->mColor );
-		  }
-#endif
-		  if(! fallbackDone) {
-		     if(IS_ZERO_WIDTH_CHAR(*aString))
-		     {
-		        thisWidth = 0;
-		        fallbackDone = PR_TRUE;
-		     }
-		  }
-      
-#ifndef DISABLE_LATIN_FALLBACK
-		  if(! fallbackDone)
-		  	fallbackDone = LatinFallbackDrawChar(aString, x, y, thisWidth);
-#endif
-#ifndef DISABLE_PRECOMPOSEHANGUL_FALLBACK
-		  if(! fallbackDone)
-		  	fallbackDone = PrecomposeHangulFallbackDrawChar(aString, x, y, thisWidth,scriptFallbackFonts[smKorean], fontNum);
-#endif
-#ifndef DISABLE_TRANSLITERATE_FALLBACK  
-		  // Fallback to Transliteration
-		  if(! fallbackDone) {
-		  	fallbackDone = TransliterateFallbackDrawChar(aString, x, y, thisWidth);
-		  }
-#endif
-#ifndef DISABLE_UPLUS_FALLBACK  
-		  // Fallback to U+xxxx
-		  if(! fallbackDone)
-		  	fallbackDone = UPlusFallbackDrawChar(aString, x, y, thisWidth);
-#endif
-		  	
-		  // Fallback to question mark
-		  if(! fallbackDone)
-		  	QuestionMarkFallbackDrawChar(aString, x, y, thisWidth);
-		  	
-		  textWidth += thisWidth;
-   	  	  x += thisWidth;
-		  
-		  // for fallback measure/drawing, we always do one char a time.
-	  	  aString++;
-	  	  processLen++;
-	  }
-    } while (processLen < aLength);
-    
-    // release buffer if it is from heap
-    if(heapBuf)
-    	delete[] heapBuf;
-    	
-    oWidth = textWidth;
-    return NS_OK;
-}
-//------------------------------------------------------------------------
-
-nsresult 
-nsUnicodeRenderingToolkit::GetWidth(const PRUnichar *aString, PRUint32 aLength, 
-                                    nscoord &aWidth, PRInt32 *aFontID)
-{
-  nsTextDimensions dim;
-
-  nsresult res = GetTextDimensions(aString, aLength, dim, aFontID);
-  aWidth = dim.width;
-  return res;
-}
-
-nsresult 
-nsUnicodeRenderingToolkit::GetTextDimensions(const PRUnichar *aString, PRUint32 aLength, 
-                                              nsTextDimensions &aDim, PRInt32 *aFontID)
-{
-  nsresult res = NS_OK;
-  nsFontMetricsMac *metrics = (nsFontMetricsMac*) mGS->mFontMetrics;
-  nsUnicodeFontMappingMac* fontmap = metrics->GetUnicodeFontMapping();
-
-  PRUint32 i;
-  short fontNum[2];
-  fontNum[0] = fontNum[1] = BAD_FONT_NUM;
-  PRUint32 start;
-    
-  nsTextDimensions textDim;
-  nsTextDimensions thisDim;
-  
-  for(i =0, start = 0; i < aLength; i++)
-  {
-    fontNum[ i % 2] = fontmap->GetFontID(aString[i]);
-    if ((fontNum[0] != fontNum[1]) && (0 != i))
-    {  // start new font run...
-      thisDim.Clear();
-      res =  GetTextSegmentDimensions(aString+start, i - start, fontNum[(i + 1) % 2], *fontmap, thisDim);
-      if (NS_FAILED (res)) 
-        return res;    
-      textDim.Combine(thisDim);
-      start = i;
-    }
-  }
-  res = GetTextSegmentDimensions(aString+start, aLength - start, fontNum[(i + 1) % 2], *fontmap, thisDim);
-  if (NS_FAILED (res)) 
-    return res;    
-  textDim.Combine(thisDim);
-
-  aDim.width = NSToCoordRound(float(textDim.width) * mP2T);
-  aDim.ascent = NSToCoordRound(float(textDim.ascent) * mP2T);
-  aDim.descent = NSToCoordRound(float(textDim.descent) * mP2T);
-  return res;  
-}
-//------------------------------------------------------------------------
-
-#ifdef MOZ_MATHML
-nsresult
-nsUnicodeRenderingToolkit::GetTextBoundingMetrics(const PRUnichar *aString, PRUint32 aLength,
-                                                  nsBoundingMetrics &aBoundingMetrics, PRInt32 *aFontID)
-{
-  nsresult res = NS_OK;
-  nsFontMetricsMac *metrics = (nsFontMetricsMac*) mGS->mFontMetrics;
-  nsUnicodeFontMappingMac* fontmap = metrics->GetUnicodeFontMapping();
-
-  PRUint32 i;
-  short fontNum[2];
-  fontNum[0] = fontNum[1] = BAD_FONT_NUM;
-  PRUint32 start;
-  PRBool firstTime = PR_TRUE;
-  nsBoundingMetrics thisBoundingMetrics;
-
-  for(i =0, start = 0; i < aLength; i++)
-  {
-    fontNum[ i % 2] = fontmap->GetFontID(aString[i]);
-    if ((fontNum[0] != fontNum[1]) && (0 != i))
-    {  // start new font run...
-      res = GetTextSegmentBoundingMetrics(aString+start, i - start, fontNum[(i + 1) % 2], *fontmap, thisBoundingMetrics);
-      if (NS_FAILED (res))
-        return res;
-      if (firstTime) {
-        firstTime = PR_FALSE;
-        aBoundingMetrics = thisBoundingMetrics;
-      }
-      else
-        aBoundingMetrics += thisBoundingMetrics;
-      start = i;
-    }
-  }
-  res = GetTextSegmentBoundingMetrics(aString+start, aLength - start, fontNum[(i + 1) % 2], *fontmap, thisBoundingMetrics);
-  if (NS_FAILED (res))
-    return res;
-  if (firstTime)
-    aBoundingMetrics = thisBoundingMetrics;
-  else
-    aBoundingMetrics += thisBoundingMetrics;
-
-  aBoundingMetrics.leftBearing = NSToCoordRound(float(aBoundingMetrics.leftBearing) * mP2T);
-  aBoundingMetrics.rightBearing = NSToCoordRound(float(aBoundingMetrics.rightBearing) * mP2T);
-  aBoundingMetrics.ascent = NSToCoordRound(float(aBoundingMetrics.ascent) * mP2T);
-  aBoundingMetrics.descent = NSToCoordRound(float(aBoundingMetrics.descent) * mP2T);
-  aBoundingMetrics.width = NSToCoordRound(float(aBoundingMetrics.width) * mP2T);
-
-  return res;
-}
-#endif // MOZ_MATHML
-
-//------------------------------------------------------------------------
-
-nsresult
-nsUnicodeRenderingToolkit::DrawString(const PRUnichar *aString, PRUint32 aLength,
-                                         nscoord aX, nscoord aY, PRInt32 aFontID,
-                                         const nscoord* aSpacing)
-{
-  nsresult res = NS_OK;
-  nsFontMetricsMac *metrics = (nsFontMetricsMac*) mGS->mFontMetrics;
-  nsUnicodeFontMappingMac* fontmap = metrics->GetUnicodeFontMapping();
-
-  PRInt32 x = aX;
-  PRInt32 transformedY = aY;
-  mGS->mTMatrix.TransformCoord(&x, &transformedY);
-
-  PRUint32 i;
-  PRInt32 currentX = aX;
-  PRUint32 thisWidth = 0;
-	
-  if (aSpacing)
-  {
-    // fix me ftang -  handle (mRightToLeftText) here
-    for (i = 0; i < aLength; )
-    {
-      PRUint32 drawLen;
-      short curFontNum = fontmap->GetFontID(aString[i]);
-
-      for (drawLen = 1; (i + drawLen) < aLength; drawLen++)
-      {
-        PRUnichar uc = aString[i+drawLen];
-      	if(! (IS_CONTEXTUAL_CHARS(uc) || 
-      		    IS_FORMAT_CONTROL_CHARS(uc) ||
-      	      IS_COMBINING_CHARS(uc)) ) {
-      	  break;
-      	}
-      }
-
-      PRInt32 transformedX = currentX, ignoreY = 0;
-      mGS->mTMatrix.TransformCoord(&transformedX, &ignoreY);
-      res = DrawTextSegment(aString+i, drawLen, curFontNum, *fontmap, transformedX, transformedY, thisWidth);
-	    if (NS_FAILED(res))
-	 		  return res;
-      
-      for (PRUint32 j = 0; j < drawLen; j++)
-	   	  currentX += aSpacing[i + j];
-	   	  
-	   	i += drawLen;
-    }
-  }
-  else    // no spacing array
-  {
-    short thisFont, nextFont;
-    
-    PRUint32 start;
-
-      // normal left to right
-        thisFont = fontmap->GetFontID(aString[0]);
-	    for (i = 1, start = 0; i < aLength; i++)
-	    {
-	    	PRUnichar uch = aString[i];
-	    	if(! IS_FORMAT_CONTROL_CHARS(uch))
-	    	{
-	    		nextFont = fontmap->GetFontID(uch);
-	    		if (thisFont != nextFont) 
-	        {
-	          // start new font run...
-	          PRInt32 transformedX = currentX, ignoreY = 0;
-	          mGS->mTMatrix.TransformCoord(&transformedX, &ignoreY);
-	          
-            res = DrawTextSegment(aString + start, i - start, thisFont, *fontmap, transformedX, transformedY, thisWidth);
-	    	  	if (NS_FAILED(res))
-	    	 		  return res;
-	    	 		
-	    		  currentX += NSToCoordRound(float(thisWidth) * mP2T);
-	    		  start = i;
-	    		  thisFont = nextFont;
-	    		}
-	    	}
-	    }
-
-	    PRInt32 transformedX = currentX, ignoreY = 0;
-	    mGS->mTMatrix.TransformCoord(&transformedX, &ignoreY);
-      res = DrawTextSegment(aString+start, aLength-start, thisFont, *fontmap, transformedX, transformedY, thisWidth);
-    if (NS_FAILED(res))
-      return res;
-  }
-  
-	return NS_OK;
-}
-
-
-//------------------------------------------------------------------------
-nsresult
-nsUnicodeRenderingToolkit::PrepareToDraw(float aP2T, nsIDeviceContext* aContext,
-                                         nsGraphicState* aGS, 
-                                         CGrafPtr aPort, PRBool aRightToLeftText )
-{
-	mP2T = aP2T;
-	mContext = aContext;
-	mGS = aGS;
-	mPort = aPort;
-	mRightToLeftText = aRightToLeftText;
-	return NS_OK;
-}"""
91567bbb8f2d979c8757bee3dd33897890309fe0,100848,368863,roc+%cs.cmu.edu,"Bug 368863. Reparent floats properly when placeholders move between inline continuations. r+sr=dbaron
",1177116178,"""diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
index ca28355..0be338c 100644
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -1605,10 +1605,11 @@ static PRBool LineHasClear(nsLineBox* aLine) {
  */
 void
 nsBlockFrame::ReparentFloats(nsIFrame* aFirstFrame,
-                             nsBlockFrame* aOldParent, PRBool aFromOverflow) {
+                             nsBlockFrame* aOldParent, PRBool aFromOverflow,
+                             PRBool aReparentSiblings) {
   nsFrameList list;
   nsIFrame* tail = nsnull;
-  aOldParent->CollectFloats(aFirstFrame, list, &tail, aFromOverflow);
+  aOldParent->CollectFloats(aFirstFrame, list, &tail, aFromOverflow, aReparentSiblings);
   if (list.NotEmpty()) {
     for (nsIFrame* f = list.FirstChild(); f; f = f->GetNextSibling()) {
       ReparentFrame(f, aOldParent, this);
@@ -1983,7 +1984,7 @@ nsBlockFrame::ReflowDirtyLines(nsBlockReflowState& aState)
       lastFrame->SetNextSibling(nsnull);
 
       // Reparent floats whose placeholders are in the line.
-      ReparentFloats(toMove->mFirstChild, nextInFlow, collectOverflowFloats);
+      ReparentFloats(toMove->mFirstChild, nextInFlow, collectOverflowFloats, PR_TRUE);
 
       // Add line to our line list
       if (aState.mPrevChild) {
@@ -2344,7 +2345,7 @@ nsBlockFrame::PullFrameFrom(nsBlockReflowState& aState,
 
       // The frame might have (or contain) floats that need to be
       // brought over too.
-      ReparentFloats(frame, aFromContainer, aFromOverflowLine);
+      ReparentFloats(frame, aFromContainer, aFromOverflowLine, PR_TRUE);
     }
 
     // Stop pulling because we found a frame to pull
@@ -3983,7 +3984,7 @@ nsBlockFrame::PushLines(nsBlockReflowState&  aState,
     // Remove floats in the lines from mFloats
     nsFrameList floats;
     nsIFrame* tail = nsnull;
-    CollectFloats(overBegin->mFirstChild, floats, &tail, PR_FALSE);
+    CollectFloats(overBegin->mFirstChild, floats, &tail, PR_FALSE, PR_TRUE);
 
     if (floats.NotEmpty()) {
       // Push the floats onto the front of the overflow out-of-flows list
@@ -6199,7 +6200,7 @@ nsBlockFrame::ReflowBullet(nsBlockReflowState& aState,
 // floats from whatever list they might be in. We don't search descendants
 // that are float containing blocks. The floats must be children of 'this'.
 void nsBlockFrame::CollectFloats(nsIFrame* aFrame, nsFrameList& aList, nsIFrame** aTail,
-                                 PRBool aFromOverflow) {
+                                 PRBool aFromOverflow, PRBool aCollectSiblings) {
   while (aFrame) {
     // Don't descend into float containing blocks.
     if (!aFrame->IsFloatContainingBlock()) {
@@ -6221,9 +6222,11 @@ void nsBlockFrame::CollectFloats(nsIFrame* aFrame, nsFrameList& aList, nsIFrame*
         *aTail = outOfFlowFrame;
       }
 
-      CollectFloats(aFrame->GetFirstChild(nsnull), aList, aTail, aFromOverflow);
+      CollectFloats(aFrame->GetFirstChild(nsnull), aList, aTail, aFromOverflow,
+                    PR_TRUE);
     }
-    
+    if (!aCollectSiblings)
+      break;
     aFrame = aFrame->GetNextSibling();
   }
 }
diff --git a/layout/generic/nsBlockFrame.h b/layout/generic/nsBlockFrame.h
index 31295ec..74b16a7 100644
--- a/layout/generic/nsBlockFrame.h
+++ b/layout/generic/nsBlockFrame.h
@@ -379,6 +379,11 @@ public:
     */
   nsresult DoRemoveFrame(nsIFrame* aDeletedFrame, PRBool aDestroyFrames = PR_TRUE, 
                          PRBool aRemoveOnlyFluidContinuations = PR_TRUE);
+
+  void ReparentFloats(nsIFrame* aFirstFrame,
+                      nsBlockFrame* aOldParent, PRBool aFromOverflow,
+                      PRBool aReparentSiblings);
+
 protected:
 
   /** grab overflow lines from this block's prevInFlow, and make them
@@ -394,7 +399,7 @@ protected:
   line_iterator RemoveFloat(nsIFrame* aFloat);
 
   void CollectFloats(nsIFrame* aFrame, nsFrameList& aList, nsIFrame** aTail,
-                     PRBool aFromOverflow);
+                     PRBool aFromOverflow, PRBool aCollectFromSiblings);
   // Remove a float, abs, rel positioned frame from the appropriate block's list
   static void DoRemoveOutOfFlowFrame(nsIFrame* aFrame);
 
@@ -508,10 +513,6 @@ protected:
   void PushLines(nsBlockReflowState& aState,
                  nsLineList::iterator aLineBefore);
 
-
-  void ReparentFloats(nsIFrame* aFirstFrame,
-                      nsBlockFrame* aOldParent, PRBool aFromOverflow);
-
   void PropagateFloatDamage(nsBlockReflowState& aState,
                             nsLineBox* aLine,
                             nscoord aDeltaY);
diff --git a/layout/generic/nsColumnSetFrame.cpp b/layout/generic/nsColumnSetFrame.cpp
index 6df6f7e..61c66db 100644
--- a/layout/generic/nsColumnSetFrame.cpp
+++ b/layout/generic/nsColumnSetFrame.cpp
@@ -270,7 +270,8 @@ nsColumnSetFrame::ChooseColumnStrategy(const nsHTMLReflowState& aReflowState)
     }
 
     // Compute extra space and divide it among the columns
-    nscoord extraSpace = availContentWidth - (colWidth*numColumns + colGap*(numColumns - 1));
+    nscoord extraSpace =
+      PR_MAX(0, availContentWidth - (colWidth*numColumns + colGap*(numColumns - 1)));
     nscoord extraToColumns = extraSpace/numColumns;
     colWidth += extraToColumns;
     expectedWidthLeftOver = extraSpace - (extraToColumns*numColumns);
diff --git a/layout/generic/nsFrameList.cpp b/layout/generic/nsFrameList.cpp
index 41c7909..77c252d 100644
--- a/layout/generic/nsFrameList.cpp
+++ b/layout/generic/nsFrameList.cpp
@@ -248,37 +248,6 @@ nsFrameList::Split(nsIFrame* aAfterFrame, nsIFrame** aNextFrameResult)
 }
 
 nsIFrame*
-nsFrameList::PullFrame(nsIFrame* aParent,
-                       nsIFrame* aLastChild,
-                       nsFrameList& aFromList)
-{
-  NS_PRECONDITION(nsnull != aParent, """"null ptr"""");
-
-  nsIFrame* pulledFrame = nsnull;
-  if (nsnull != aParent) {
-    pulledFrame = aFromList.FirstChild();
-    if (nsnull != pulledFrame) {
-      // Take frame off old list
-      aFromList.RemoveFirstChild();
-
-      // Put it on the end of this list
-      if (nsnull == aLastChild) {
-        NS_ASSERTION(nsnull == mFirstChild, """"bad aLastChild"""");
-        mFirstChild = pulledFrame;
-      }
-      else {
-        aLastChild->SetNextSibling(pulledFrame);
-      }
-      pulledFrame->SetParent(aParent);
-    }
-  }
-#ifdef DEBUG
-  CheckForLoops();
-#endif
-  return pulledFrame;
-}
-
-nsIFrame*
 nsFrameList::LastChild() const
 {
   nsIFrame* frame = mFirstChild;
diff --git a/layout/generic/nsFrameList.h b/layout/generic/nsFrameList.h
index 4cf4a52..5ca0fbb 100644
--- a/layout/generic/nsFrameList.h
+++ b/layout/generic/nsFrameList.h
@@ -121,10 +121,6 @@ public:
    */
   void SortByContentOrder();
 
-  nsIFrame* PullFrame(nsIFrame* aParent,
-                      nsIFrame* aLastChild,
-                      nsFrameList& aFromList);
-
   nsIFrame* FirstChild() const {
     return mFirstChild;
   }
diff --git a/layout/generic/nsInlineFrame.cpp b/layout/generic/nsInlineFrame.cpp
index 71afcc0..ef6b943 100644
--- a/layout/generic/nsInlineFrame.cpp
+++ b/layout/generic/nsInlineFrame.cpp
@@ -247,6 +247,58 @@ nsInlineFrame::ComputeSize(nsIRenderingContext *aRenderingContext,
   return nsSize(NS_UNCONSTRAINEDSIZE, NS_UNCONSTRAINEDSIZE);
 }
 
+void
+nsInlineFrame::ReparentFloatsForInlineChild(nsIFrame* aOurLineContainer,
+                                            nsIFrame* aFrame,
+                                            PRBool aReparentSiblings)
+{
+  NS_ASSERTION(aOurLineContainer->GetNextContinuation() ||
+               aOurLineContainer->GetPrevContinuation(),
+               """"Don't call this when we have no continuation, it's a waste"""");
+
+  nsIFrame* ancestor = aFrame;
+  nsIFrame* ancestorBlockChild;
+  do {
+    ancestorBlockChild = ancestor;
+    ancestor = ancestor->GetParent();
+    if (!ancestor)
+      return;
+  } while (!ancestor->IsFloatContainingBlock());
+
+  if (ancestor == aOurLineContainer)
+    return;
+
+  nsBlockFrame* ourBlock;
+  nsresult rv = aOurLineContainer->QueryInterface(kBlockFrameCID, (void**)&ourBlock);
+  NS_ASSERTION(NS_SUCCEEDED(rv), """"Not a block, but broke vertically?"""");
+  nsBlockFrame* frameBlock;
+  rv = ancestor->QueryInterface(kBlockFrameCID, (void**)&frameBlock);
+  NS_ASSERTION(NS_SUCCEEDED(rv), """"ancestor not a block"""");
+
+  nsFrameList blockChildren(ancestor->GetFirstChild(nsnull));
+  PRBool isOverflow = !blockChildren.ContainsFrame(ancestorBlockChild);
+
+  while (PR_TRUE) {
+    ourBlock->ReparentFloats(aFrame, frameBlock, isOverflow, PR_FALSE);
+
+    if (!aReparentSiblings)
+      return;
+    nsIFrame* next = aFrame->GetNextSibling();
+    if (!next)
+      return;
+    if (next->GetParent() == aFrame->GetParent()) {
+      aFrame = next;
+      continue;
+    }
+    // This is paranoid and will hardly ever get hit ... but we can't actually
+    // trust that the frames in the sibling chain all have the same parent,
+    // because lazy reparenting may be going on. If we find a different
+    // parent we need to redo our analysis.
+    ReparentFloatsForInlineChild(aOurLineContainer, next, aReparentSiblings);
+    return;
+  }
+}
+
 NS_IMETHODIMP
 nsInlineFrame::Reflow(nsPresContext*          aPresContext,
                       nsHTMLReflowMetrics&     aMetrics,
@@ -261,7 +313,9 @@ nsInlineFrame::Reflow(nsPresContext*          aPresContext,
 
   PRBool  lazilySetParentPointer = PR_FALSE;
 
-  // Check for an overflow list with our prev-in-flow
+  nsIFrame* lineContainer = aReflowState.mLineLayout->GetLineContainerFrame();
+
+   // Check for an overflow list with our prev-in-flow
   nsInlineFrame* prevInFlow = (nsInlineFrame*)GetPrevInFlow();
   if (nsnull != prevInFlow) {
     nsIFrame* prevOverflowFrames = prevInFlow->GetOverflowFrames(aPresContext, PR_TRUE);
@@ -282,8 +336,11 @@ nsInlineFrame::Reflow(nsPresContext*          aPresContext,
         NS_ASSERTION(mFrames.IsEmpty(), """"child list is not empty for initial reflow"""");
         mFrames.SetFrames(prevOverflowFrames);
         lazilySetParentPointer = PR_TRUE;
-
       } else {
+        // Assign all floats to our block if necessary
+        if (lineContainer && lineContainer->GetPrevContinuation()) {
+          ReparentFloatsForInlineChild(lineContainer, prevOverflowFrames, PR_TRUE);
+        }
         // Insert the new frames at the beginning of the child list
         // and set their parent pointer
         mFrames.InsertFrames(this, nsnull, prevOverflowFrames);
@@ -331,6 +388,7 @@ nsInlineFrame::Reflow(nsPresContext*          aPresContext,
   // aReflowState)
   InlineReflowState irs;
   irs.mPrevFrame = nsnull;
+  irs.mLineContainer = lineContainer;
   irs.mNextInFlow = (nsInlineFrame*) GetNextInFlow();
   irs.mSetParentPointer = lazilySetParentPointer;
 
@@ -393,8 +451,22 @@ nsInlineFrame::ReflowFrames(nsPresContext* aPresContext,
 
     // Check if we should lazily set the child frame's parent pointer
     if (irs.mSetParentPointer) {
+      PRBool havePrevBlock =
+        irs.mLineContainer && irs.mLineContainer->GetPrevContinuation();
+      // If our block is the first in flow, then any floats under the pulled
+      // frame must already belong to our block.
+      if (havePrevBlock) {
+        // This has to happen before we update frame's parent; we need to
+        // know frame's ancestry under its old block.
+        // The blockChildren.ContainsFrame check performed by
+        // ReparentFloatsForInlineChild here may be slow, but we can't
+        // easily avoid it because we don't know where 'frame' originally
+        // came from. If we really really have to optimize this we could
+        // cache whether frame->GetParent() is under its containing blocks
+        // overflowList or not.
+        ReparentFloatsForInlineChild(irs.mLineContainer, frame, PR_FALSE);
+      }
       frame->SetParent(this);
-
       // We also need to check if frame has a next-in-flow. If it does, then set
       // its parent frame pointer, too. Otherwise, if we reflow frame and it's
       // complete we'll fail when deleting its next-in-flow which is no longer
@@ -406,6 +478,9 @@ nsInlineFrame::ReflowFrames(nsPresContext* aPresContext,
         // the continuing child frame must be in our child list as well. If
         // not, then something is wrong
         NS_ASSERTION(mFrames.ContainsFrame(nextInFlow), """"unexpected flow"""");
+        if (havePrevBlock) {
+          ReparentFloatsForInlineChild(irs.mLineContainer, nextInFlow, PR_FALSE);
+        }
         nextInFlow->SetParent(this);
         nextInFlow = nextInFlow->GetNextInFlow();
       }
@@ -567,6 +642,10 @@ nsInlineFrame::ReflowInlineFrame(nsPresContext* aPresContext,
         // remaining child frames in our child list with the wrong parent
         // frame pointer...
         if (irs.mSetParentPointer) {
+          if (irs.mLineContainer && irs.mLineContainer->GetPrevContinuation()) {
+            ReparentFloatsForInlineChild(irs.mLineContainer, aFrame->GetNextSibling(),
+                                         PR_TRUE);
+          }
           for (nsIFrame* f = aFrame->GetNextSibling(); f; f = f->GetNextSibling()) {
             f->SetParent(this);
           }
@@ -635,8 +714,19 @@ nsInlineFrame::PullOneFrame(nsPresContext* aPresContext,
   nsIFrame* frame = nsnull;
   nsInlineFrame* nextInFlow = irs.mNextInFlow;
   while (nsnull != nextInFlow) {
-    frame = mFrames.PullFrame(this, irs.mPrevFrame, nextInFlow->mFrames);
+    frame = nextInFlow->mFrames.FirstChild();
     if (nsnull != frame) {
+      // If our block has no next continuation, then any floats belonging to
+      // the pulled frame must belong to our block already. This check ensures
+      // we do no extra work in the common non-vertical-breaking case.
+      if (irs.mLineContainer && irs.mLineContainer->GetNextContinuation()) {
+        // The blockChildren.ContainsFrame check performed by
+        // ReparentFloatsForInlineChild will be fast because frame's ancestor
+        // will be the first child of its containing block.
+        ReparentFloatsForInlineChild(irs.mLineContainer, frame, PR_FALSE);
+      }
+      nextInFlow->mFrames.RemoveFirstChild();
+      mFrames.InsertFrame(this, irs.mPrevFrame, frame);
       isComplete = PR_FALSE;
       nsHTMLContainerFrame::ReparentFrameView(aPresContext, frame, nextInFlow, this);
       break;
@@ -782,7 +872,8 @@ nsFirstLineFrame::StealFramesFrom(nsIFrame* aFrame)
 }
 
 nsIFrame*
-nsFirstLineFrame::PullOneFrame(nsPresContext* aPresContext, InlineReflowState& irs, PRBool* aIsComplete)
+nsFirstLineFrame::PullOneFrame(nsPresContext* aPresContext, InlineReflowState& irs,
+                               PRBool* aIsComplete)
 {
   nsIFrame* frame = nsInlineFrame::PullOneFrame(aPresContext, irs, aIsComplete);
   if (frame && !GetPrevInFlow()) {
@@ -804,6 +895,8 @@ nsFirstLineFrame::Reflow(nsPresContext* aPresContext,
     return NS_ERROR_INVALID_ARG;
   }
 
+  nsIFrame* lineContainer = aReflowState.mLineLayout->GetLineContainerFrame();
+
   // Check for an overflow list with our prev-in-flow
   nsFirstLineFrame* prevInFlow = (nsFirstLineFrame*)GetPrevInFlow();
   if (nsnull != prevInFlow) {
@@ -811,6 +904,10 @@ nsFirstLineFrame::Reflow(nsPresContext* aPresContext,
     if (prevOverflowFrames) {
       nsFrameList frames(prevOverflowFrames);
       
+      // Assign all floats to our block if necessary
+      if (lineContainer && lineContainer->GetPrevContinuation()) {
+        ReparentFloatsForInlineChild(lineContainer, prevOverflowFrames, PR_TRUE);
+      }
       mFrames.InsertFrames(this, nsnull, prevOverflowFrames);
       ReParentChildListStyle(aPresContext, frames, this);
     }
@@ -830,6 +927,7 @@ nsFirstLineFrame::Reflow(nsPresContext* aPresContext,
   // aReflowState)
   InlineReflowState irs;
   irs.mPrevFrame = nsnull;
+  irs.mLineContainer = lineContainer;
   irs.mNextInFlow = (nsInlineFrame*) GetNextInFlow();
 
   nsresult rv;
diff --git a/layout/generic/nsInlineFrame.h b/layout/generic/nsInlineFrame.h
index e49301d..a2c92ef 100644
--- a/layout/generic/nsInlineFrame.h
+++ b/layout/generic/nsInlineFrame.h
@@ -160,12 +160,14 @@ protected:
   struct InlineReflowState {
     nsIFrame* mPrevFrame;
     nsInlineFrame* mNextInFlow;
+    nsIFrame*      mLineContainer;
     PRPackedBool mSetParentPointer;  // when reflowing child frame first set its
                                      // parent frame pointer
 
     InlineReflowState()  {
       mPrevFrame = nsnull;
       mNextInFlow = nsnull;
+      mLineContainer = nsnull;
       mSetParentPointer = PR_FALSE;
     };
   };
@@ -186,6 +188,15 @@ protected:
                              nsIFrame* aFrame,
                              nsReflowStatus& aStatus);
 
+  /**
+   * Reparent floats whose placeholders are inline descendants of aFrame from
+   * whatever block they're currently parented by to aOurBlock.
+   * @param aReparentSiblings if this is true, we follow aFrame's
+   * GetNextSibling chain reparenting them all
+   */
+  void ReparentFloatsForInlineChild(nsIFrame* aOurBlock, nsIFrame* aFrame,
+                                    PRBool aReparentSiblings);
+
   virtual nsIFrame* PullOneFrame(nsPresContext* aPresContext,
                                  InlineReflowState& rs,
                                  PRBool* aIsComplete);"""
940b2b49c68a396b583db8d8012e5bdb0a3cbfd2,100860,374570,enndeakin%sympatico.ca,"Bug 374570, constrain popups to frame, r+sr=roc
",1177093204,"""diff --git a/dom/src/base/nsGlobalWindow.cpp b/dom/src/base/nsGlobalWindow.cpp
index 2340d85..429c02c 100644
--- a/dom/src/base/nsGlobalWindow.cpp
+++ b/dom/src/base/nsGlobalWindow.cpp
@@ -3027,6 +3027,14 @@ nsGlobalWindow::SetScreenY(PRInt32 aScreenY)
 nsresult
 nsGlobalWindow::CheckSecurityWidthAndHeight(PRInt32* aWidth, PRInt32* aHeight)
 {
+  if (!nsContentUtils::IsCallerTrustedForWrite()) {
+    // if attempting to resize the window, hide any open popups
+    nsCOMPtr<nsIPresShell> presShell;
+    mDocShell->GetPresShell(getter_AddRefs(presShell));
+    if (presShell)
+      presShell->HidePopups();
+  }
+
   // This one is easy. Just ensure the variable is greater than 100;
   if ((aWidth && *aWidth < 100) || (aHeight && *aHeight < 100)) {
     // Check security state for use in determing window dimensions
@@ -3053,6 +3061,12 @@ nsGlobalWindow::CheckSecurityLeftAndTop(PRInt32* aLeft, PRInt32* aTop)
   // Check security state for use in determing window dimensions
 
   if (!nsContentUtils::IsCallerTrustedForWrite()) {
+    // if attempting to move the window, hide any open popups
+    nsCOMPtr<nsIPresShell> presShell;
+    mDocShell->GetPresShell(getter_AddRefs(presShell));
+    if (presShell)
+      presShell->HidePopups();
+
     PRInt32 screenLeft, screenTop, screenWidth, screenHeight;
     PRInt32 winLeft, winTop, winWidth, winHeight;
 
diff --git a/layout/base/nsDocumentViewer.cpp b/layout/base/nsDocumentViewer.cpp
index 353ec43..2f941bb 100644
--- a/layout/base/nsDocumentViewer.cpp
+++ b/layout/base/nsDocumentViewer.cpp
@@ -365,8 +365,6 @@ private:
   nsresult GetPopupLinkNode(nsIDOMNode** aNode);
   nsresult GetPopupImageNode(nsIImageLoadingContent** aNode);
 
-  void HideViewIfPopup(nsIView* aView);
-
   void DumpContentToPPM(const char* aFileName);
 
   void PrepareToStartLoad(void);
@@ -1261,40 +1259,10 @@ DocumentViewerImpl::PageHide(PRBool aIsUnload)
     nsEventDispatcher::Dispatch(window, mPresContext, &event, nsnull, &status);
   }
 
-  if (mPresShell) {
-    // look for open menupopups and close them after the unload event, in case
-    // the unload event listeners open any new popups
-    nsIViewManager *vm = mPresShell->GetViewManager();
-    if (vm) {
-      nsIView *rootView = nsnull;
-      vm->GetRootView(rootView);
-      if (rootView)
-        HideViewIfPopup(rootView);
-    }
-  }
-
-  return NS_OK;
-}
-
-void
-DocumentViewerImpl::HideViewIfPopup(nsIView* aView)
-{
-  nsIFrame* frame = NS_STATIC_CAST(nsIFrame*, aView->GetClientData());
-  if (frame) {
-    nsIMenuParent* parent;
-    CallQueryInterface(frame, &parent);
-    if (parent) {
-      parent->HideChain();
-      // really make sure the view is hidden
-      mViewManager->SetViewVisibility(aView, nsViewVisibility_kHide);
-    }
-  }
-
-  nsIView* child = aView->GetFirstChild();
-  while (child) {
-    HideViewIfPopup(child);
-    child = child->GetNextSibling();
-  }
+  // look for open menupopups and close them after the unload event, in case
+  // the unload event listeners open any new popups
+  if (mPresShell)
+    mPresShell->HidePopups();
 }
 
 static void
diff --git a/layout/base/nsIPresShell.h b/layout/base/nsIPresShell.h
index 6fa6d9c..473a1f9 100644
--- a/layout/base/nsIPresShell.h
+++ b/layout/base/nsIPresShell.h
@@ -100,10 +100,10 @@ class gfxASurface;
 
 typedef short SelectionType;
 
-// A68CFCE1-2A15-47F0-B61B-F2C34079A909
+// DC543B71-6F1A-4B9F-B4CF-693AEC4BA24A
 #define NS_IPRESSHELL_IID \
-{ 0xa78cfce1, 0x2a15, 0x47f0, \
-  { 0xb6, 0x1b, 0xf2, 0xc3, 0x40, 0x79, 0xa9, 0x09 } }
+{ 0xdc543b71, 0x6f1a, 0x4b9f, \
+  { 0xb4, 0xcf, 0x69, 0x3a, 0xec, 0x4b, 0xa2, 0x4a } }
 
 // Constants for ScrollContentIntoView() function
 #define NS_PRESSHELL_SCROLL_TOP      0
@@ -715,6 +715,8 @@ public:
                                                         nsPoint& aPoint,
                                                         nsRect* aScreenRect) = 0;
 
+  virtual void HidePopups() = 0;
+
   void AddWeakFrame(nsWeakFrame* aWeakFrame);
   void RemoveWeakFrame(nsWeakFrame* aWeakFrame);
 
diff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp
index 822d099..b8a440e 100644
--- a/layout/base/nsPresShell.cpp
+++ b/layout/base/nsPresShell.cpp
@@ -194,6 +194,7 @@
 #include """"nsIMenuFrame.h""""
 #include """"nsITreeBoxObject.h""""
 #endif
+#include """"nsIMenuParent.h""""
 #include """"nsPlaceholderFrame.h""""
 
 // Content viewer interfaces
@@ -933,6 +934,8 @@ public:
                                                         nsPoint& aPoint,
                                                         nsRect* aScreenRect);
 
+  virtual void HidePopups();
+
   //nsIViewObserver interface
 
   NS_IMETHOD Paint(nsIView *aView,
@@ -1150,6 +1153,9 @@ protected:
   void AddAgentSheet(nsISupports* aSheet);
   void RemoveSheet(nsStyleSet::sheetType aType, nsISupports* aSheet);
 
+  // Hide a view if it is a popup
+  void HideViewIfPopup(nsIView* aView);
+
   nsICSSStyleSheet*         mPrefStyleSheet; // mStyleSet owns it but we maintain a ref, may be null
 #ifdef DEBUG
   PRUint32                  mUpdateCount;
@@ -6121,6 +6127,18 @@ PresShell::Thaw()
   UnsuppressPainting();
 }
 
+void
+PresShell::HidePopups()
+{
+  nsIViewManager *vm = GetViewManager();
+  if (vm) {
+    nsIView *rootView = nsnull;
+    vm->GetRootView(rootView);
+    if (rootView)
+      HideViewIfPopup(rootView);
+  }
+}
+
 //--------------------------------------------------------
 // Start of protected and private methods on the PresShell
 //--------------------------------------------------------
@@ -6589,6 +6607,27 @@ PresShell::EnumeratePlugins(nsIDOMDocument *aDocument,
   }
 }
 
+void
+PresShell::HideViewIfPopup(nsIView* aView)
+{
+  nsIFrame* frame = NS_STATIC_CAST(nsIFrame*, aView->GetClientData());
+  if (frame) {
+    nsIMenuParent* parent;
+    CallQueryInterface(frame, &parent);
+    if (parent) {
+      parent->HideChain();
+      // really make sure the view is hidden
+      mViewManager->SetViewVisibility(aView, nsViewVisibility_kHide);
+    }
+  }
+
+  nsIView* child = aView->GetFirstChild();
+  while (child) {
+    HideViewIfPopup(child);
+    child = child->GetNextSibling();
+  }
+}
+
 //------------------------------------------------------
 // End of protected and private methods on the PresShell
 //------------------------------------------------------
diff --git a/layout/xul/base/src/nsMenuPopupFrame.cpp b/layout/xul/base/src/nsMenuPopupFrame.cpp
index e694c7b..71a0fd0 100644
--- a/layout/xul/base/src/nsMenuPopupFrame.cpp
+++ b/layout/xul/base/src/nsMenuPopupFrame.cpp
@@ -142,7 +142,8 @@ nsMenuPopupFrame::nsMenuPopupFrame(nsIPresShell* aShell, nsStyleContext* aContex
   mMenuCanOverlapOSBar(PR_FALSE),
   mShouldAutoPosition(PR_TRUE),
   mShouldRollup(PR_TRUE),
-  mConsumeRollupEvent(nsIPopupBoxObject::ROLLUP_DEFAULT)
+  mConsumeRollupEvent(nsIPopupBoxObject::ROLLUP_DEFAULT),
+  mInContentShell(PR_TRUE)
 {
   SetIsContextMenu(PR_FALSE);   // we're not a context menu by default
 } // ctor
@@ -191,6 +192,13 @@ nsMenuPopupFrame::Init(nsIContent*      aContent,
   // about that constraint.
   viewManager->SetViewFloating(ourView, PR_TRUE);
 
+  nsCOMPtr<nsISupports> cont = PresContext()->GetContainer();
+  nsCOMPtr<nsIDocShellTreeItem> dsti = do_QueryInterface(cont);
+  PRInt32 type = -1;
+  if (dsti && NS_SUCCEEDED(dsti->GetItemType(&type)) &&
+      type == nsIDocShellTreeItem::typeChrome)
+    mInContentShell = PR_FALSE;
+
   // XXX make sure we are hidden (shouldn't this be done automatically?)
   viewManager->SetViewVisibility(ourView, nsViewVisibility_kHide);
   if (!ourView->HasWidget()) {
@@ -217,15 +225,7 @@ nsMenuPopupFrame::CreateWidgetForView(nsIView* aView)
     nsCSSRendering::FindBackground(PresContext(), this, &bg, &isCanvas);
   PRBool viewHasTransparentContent = hasBG &&
     (bg->mBackgroundFlags & NS_STYLE_BG_COLOR_TRANSPARENT) &&
-    !GetStyleDisplay()->mAppearance;
-  if (viewHasTransparentContent) {
-    nsCOMPtr<nsISupports> cont = PresContext()->GetContainer();
-    nsCOMPtr<nsIDocShellTreeItem> dsti = do_QueryInterface(cont);
-    PRInt32 type = -1;
-    if (!dsti || NS_FAILED(dsti->GetItemType(&type)) ||
-        type != nsIDocShellTreeItem::typeChrome)
-      viewHasTransparentContent = PR_FALSE;
-  }
+    !GetStyleDisplay()->mAppearance && !mInContentShell;
 
   nsIContent* parentContent = GetContent()->GetParent();
   nsIAtom *tag = nsnull;
@@ -657,7 +657,7 @@ nsMenuPopupFrame::SyncViewWithFrame(nsPresContext* aPresContext,
   NS_ENSURE_ARG(aPresContext);
   NS_ENSURE_ARG(aFrame);
 
-  if (!mShouldAutoPosition) 
+  if (!mShouldAutoPosition && !mInContentShell) 
     return NS_OK;
 
   // |containingView|
@@ -756,6 +756,13 @@ nsMenuPopupFrame::SyncViewWithFrame(nsPresContext* aPresContext,
   rect.width  -= nsPresContext::CSSPixelsToAppUnits(3);
   rect.height -= nsPresContext::CSSPixelsToAppUnits(3);
 
+  // for content shells, clip to the client area rather than the screen area
+  if (mInContentShell) {
+    nsRect rootScreenRect = presShell->GetRootFrame()->GetScreenRect();
+    rootScreenRect.ScaleRoundIn(aPresContext->AppUnitsPerDevPixel());
+    rect.IntersectRect(rect, rootScreenRect);
+  }
+
   PRInt32 screenLeftTwips   = rect.x;
   PRInt32 screenTopTwips    = rect.y;
   PRInt32 screenWidthTwips  = rect.width;
@@ -2028,6 +2035,10 @@ nsMenuPopupFrame::MoveTo(PRInt32 aLeft, PRInt32 aTop)
 void
 nsMenuPopupFrame::MoveToInternal(PRInt32 aLeft, PRInt32 aTop)
 {
+  // just don't support moving popups for content shells
+  if (mInContentShell)
+    return;
+
   nsIView* view = GetView();
   NS_ASSERTION(view->GetParent(), """"Must have parent!"""");
   
diff --git a/layout/xul/base/src/nsMenuPopupFrame.h b/layout/xul/base/src/nsMenuPopupFrame.h
index 8f4a8a4..860d539 100644
--- a/layout/xul/base/src/nsMenuPopupFrame.h
+++ b/layout/xul/base/src/nsMenuPopupFrame.h
@@ -257,6 +257,7 @@ protected:
   PRPackedBool mShouldAutoPosition; // Should SyncViewWithFrame be allowed to auto position popup?
   PRPackedBool mShouldRollup; // Should this menupopup be allowed to dismiss automatically?
   PRPackedBool mConsumeRollupEvent; // Should the rollup event be consumed?
+  PRPackedBool mInContentShell; // True if the popup is in a content shell
 
   nsString     mIncrementalString;  // for incremental typing navigation
 """
23be2cc158eaba4fb96f9dd6004d84d9b46beef5,101036,377356,jst%mozilla.org,"Fixing bug 377356. Move code around to ensure security checks are always done against the right object. r+sr=bzbarsky@mit.edu
",1176765075,"""diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index 53eadf3..c7d41ea 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -6543,6 +6543,19 @@ nsEventReceiverSH::AddEventListenerHelper(JSContext *cx, JSObject *obj,
     return JS_FALSE;
   }
 
+  nsCOMPtr<nsIXPConnectWrappedNative> wrapper;
+  nsresult rv =
+    sXPConnect->GetWrappedNativeOfJSObject(cx, obj, getter_AddRefs(wrapper));
+  if (NS_FAILED(rv)) {
+    nsDOMClassInfo::ThrowJSException(cx, rv);
+
+    return JS_FALSE;
+  }
+
+  // Set obj to be the object on which we'll actually register the
+  // event listener.
+  wrapper->GetJSObject(&obj);
+
   // Check that the caller has permission to call obj's addEventListener.
   if (NS_FAILED(sSecMan->CheckPropertyAccess(cx, obj,
                                              JS_GET_CLASS(cx, obj)->name,
@@ -6559,15 +6572,6 @@ nsEventReceiverSH::AddEventListenerHelper(JSContext *cx, JSObject *obj,
     return JS_FALSE;
   }
 
-  nsCOMPtr<nsIXPConnectWrappedNative> wrapper;
-  nsresult rv =
-    sXPConnect->GetWrappedNativeOfJSObject(cx, obj, getter_AddRefs(wrapper));
-  if (NS_FAILED(rv)) {
-    nsDOMClassInfo::ThrowJSException(cx, rv);
-
-    return JS_FALSE;
-  }
-
   if (JSVAL_IS_PRIMITIVE(argv[1])) {
     // The second argument must be a function, or a
     // nsIDOMEventListener. Throw an error."""
98789d64668c239de91cebd9a6d7a699fbb69786,101060,377216,bzbarsky%mit.edu,"Recalc quotes and counters before reflow.  Bug 377216, r+sr=dbaron
",1176682294,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index 3aeee46..6b3bd06 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -10180,18 +10180,7 @@ nsCSSFrameConstructor::EndUpdate()
     // This is the end of our last update.  Before we decrement
     // mUpdateCount, recalc quotes and counters as needed.
 
-    if (mQuotesDirty) {
-      mQuotesDirty = PR_FALSE;
-      mQuoteList.RecalcAll();
-    }
-
-    if (mCountersDirty) {
-      mCountersDirty = PR_FALSE;
-      mCounterManager.RecalcAll();
-    }
-
-    NS_ASSERTION(!mQuotesDirty, """"Quotes updates will be lost"""");
-    NS_ASSERTION(!mCountersDirty, """"Counter updates will be lost"""");
+    RecalcQuotesAndCounters();
     NS_ASSERTION(mUpdateCount == 1, """"Odd update count"""");
   }
 
@@ -10199,6 +10188,23 @@ nsCSSFrameConstructor::EndUpdate()
 }
 
 void
+nsCSSFrameConstructor::RecalcQuotesAndCounters()
+{
+  if (mQuotesDirty) {
+    mQuotesDirty = PR_FALSE;
+    mQuoteList.RecalcAll();
+  }
+
+  if (mCountersDirty) {
+    mCountersDirty = PR_FALSE;
+    mCounterManager.RecalcAll();
+  }
+
+  NS_ASSERTION(!mQuotesDirty, """"Quotes updates will be lost"""");
+  NS_ASSERTION(!mCountersDirty, """"Counter updates will be lost"""");  
+}
+
+void
 nsCSSFrameConstructor::WillDestroyFrameTree()
 {
 #if defined(DEBUG_dbaron_off)
diff --git a/layout/base/nsCSSFrameConstructor.h b/layout/base/nsCSSFrameConstructor.h
index 92f547f..c750fa5 100644
--- a/layout/base/nsCSSFrameConstructor.h
+++ b/layout/base/nsCSSFrameConstructor.h
@@ -133,6 +133,7 @@ public:
 
   void BeginUpdate() { ++mUpdateCount; }
   void EndUpdate();
+  void RecalcQuotesAndCounters();
 
   void WillDestroyFrameTree();
 
diff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp
index 30fa71b..822d099 100644
--- a/layout/base/nsPresShell.cpp
+++ b/layout/base/nsPresShell.cpp
@@ -4602,6 +4602,7 @@ PresShell::FlushPendingNotifications(mozFlushType aType)
     }
 
     if (aType & Flush_OnlyReflow) {
+      mFrameConstructor->RecalcQuotesAndCounters();
       ProcessReflowCommands(PR_FALSE);
     }
 """
236d56818898a828b2bbf5d6bb6854e02e174b9e,101113,376223,roc+%cs.cmu.edu,"Bug 376223. Make frame construction for XUL listbox content grab pseudo frames if necessary. r+sr=bzbarsky
",1176483057,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index 67add71..0320720 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -12219,7 +12219,10 @@ nsCSSFrameConstructor::CreateListBoxContent(nsPresContext* aPresContext,
                                 aParentFrame, aChild->Tag(),
                                 aChild->GetNameSpaceID(),
                                 styleContext, frameItems, PR_FALSE);
-    
+    if (!state.mPseudoFrames.IsEmpty()) {
+      ProcessPseudoFrames(state, frameItems); 
+    }
+
     nsIFrame* newFrame = frameItems.childList;
     *aNewFrame = newFrame;
 """
cc1f215e79c5c84e0d97b4f2d444c7fc6a97ab18,101154,376924,aaronleventhal%moonset.net,"Bug 376924. Traversing the accessible tree after changes to CSS display property can crash Firefox. r=mats.palmgren
",1176390264,"""diff --git a/accessible/src/html/nsHTMLLinkAccessible.cpp b/accessible/src/html/nsHTMLLinkAccessible.cpp
index 950e919..5139bad 100644
--- a/accessible/src/html/nsHTMLLinkAccessible.cpp
+++ b/accessible/src/html/nsHTMLLinkAccessible.cpp
@@ -44,7 +44,7 @@
 NS_IMPL_ISUPPORTS_INHERITED0(nsHTMLLinkAccessible, nsLinkableAccessible)
 
 nsHTMLLinkAccessible::nsHTMLLinkAccessible(nsIDOMNode* aDomNode, nsIWeakReference* aShell, nsIFrame *aFrame):
-nsLinkableAccessible(aDomNode, aShell), mFrame(aFrame)
+nsLinkableAccessible(aDomNode, aShell)
 { 
 }
 
@@ -84,24 +84,3 @@ nsHTMLLinkAccessible::GetState(PRUint32 *aState, PRUint32 *aExtraState)
 
   return NS_OK;
 }
-
-nsIFrame* nsHTMLLinkAccessible::GetFrame()
-{
-  if (mWeakShell) {
-    if (!mFrame) {
-      mFrame = nsLinkableAccessible::GetFrame();
-    }
-    return mFrame;
-  }
-  return nsnull;
-}
-
-NS_IMETHODIMP nsHTMLLinkAccessible::FireToolkitEvent(PRUint32 aEvent,
-                                                     nsIAccessible *aTarget,
-                                                     void *aData)
-{
-  if (aEvent == nsIAccessibleEvent::EVENT_HIDE) {
-    mFrame = nsnull;  // Invalidate cached frame
-  }
-  return nsLinkableAccessible::FireToolkitEvent(aEvent, aTarget, aData);
-}
diff --git a/accessible/src/html/nsHTMLLinkAccessible.h b/accessible/src/html/nsHTMLLinkAccessible.h
index d5ed09f..fe9a766 100644
--- a/accessible/src/html/nsHTMLLinkAccessible.h
+++ b/accessible/src/html/nsHTMLLinkAccessible.h
@@ -52,17 +52,6 @@ public:
   NS_IMETHOD GetName(nsAString& _retval); 
   NS_IMETHOD GetRole(PRUint32 *_retval); 
   NS_IMETHOD GetState(PRUint32 *aState, PRUint32 *aExtraState);
-  NS_IMETHOD Shutdown() { mFrame = nsnull; return nsLinkableAccessible::Shutdown(); }
-  
-  // nsPIAccessNode
-  NS_IMETHOD_(nsIFrame *) GetFrame(void);
-
-  // nsPIAccessible
-  NS_IMETHOD FireToolkitEvent(PRUint32 aEvent, nsIAccessible *aTarget,
-                              void *aData);
-
-private:
-  nsIFrame *mFrame;  // XXX What's special about links that we cache frames for them?
 };
 
 #endif  
diff --git a/accessible/src/html/nsHTMLTextAccessible.cpp b/accessible/src/html/nsHTMLTextAccessible.cpp
index f336c5a..6635b2b 100644
--- a/accessible/src/html/nsHTMLTextAccessible.cpp
+++ b/accessible/src/html/nsHTMLTextAccessible.cpp
@@ -50,7 +50,7 @@
 #include """"nsComponentManagerUtils.h""""
 
 nsHTMLTextAccessible::nsHTMLTextAccessible(nsIDOMNode* aDomNode, nsIWeakReference* aShell, nsIFrame *aFrame):
-nsTextAccessibleWrap(aDomNode, aShell), mFrame(aFrame)
+nsTextAccessibleWrap(aDomNode, aShell)
 { 
 }
 
@@ -77,27 +77,6 @@ NS_IMETHODIMP nsHTMLTextAccessible::GetName(nsAString& aName)
   return rv;
 }
 
-nsIFrame* nsHTMLTextAccessible::GetFrame()
-{
-  if (!mWeakShell) {
-    return nsnull;
-  }
-  if (!mFrame) {
-    mFrame = nsTextAccessible::GetFrame();
-  }
-  return mFrame;
-}
-
-NS_IMETHODIMP nsHTMLTextAccessible::FireToolkitEvent(PRUint32 aEvent,
-                                                     nsIAccessible *aTarget,
-                                                     void *aData)
-{
-  if (aEvent == nsIAccessibleEvent::EVENT_HIDE) {
-    mFrame = nsnull;  // Invalidate cached frame
-  }
-  return nsTextAccessibleWrap::FireToolkitEvent(aEvent, aTarget, aData);
-}
-
 NS_IMETHODIMP nsHTMLTextAccessible::GetRole(PRUint32 *aRole)
 {
   nsIFrame *frame = GetFrame();
@@ -315,7 +294,7 @@ void nsHTMLLIAccessible::CacheChildren()
 nsHTMLListBulletAccessible::
   nsHTMLListBulletAccessible(nsIDOMNode* aDomNode, nsIWeakReference* aShell,
                              nsIFrame *aFrame, const nsAString& aBulletText) :
-    nsLeafAccessible(aDomNode, aShell), mFrame(aFrame), mWeakParent(nsnull),
+    nsLeafAccessible(aDomNode, aShell), mWeakParent(nsnull),
     mBulletText(aBulletText)
 {
   mBulletText += ' '; // Otherwise bullets are jammed up against list text
@@ -334,22 +313,10 @@ nsHTMLListBulletAccessible::Shutdown()
 {
   mBulletText.Truncate();
   mWeakParent = nsnull;
-  mFrame = nsnull;
 
   return nsLeafAccessible::Shutdown();
 }
 
-nsIFrame*
-nsHTMLListBulletAccessible::GetFrame()
-{
-  if (!mWeakShell)
-    return nsnull;
-
-  if (!mFrame)
-    mFrame = nsLeafAccessible::GetFrame();
-  return mFrame;
-}
-
 NS_IMETHODIMP
 nsHTMLListBulletAccessible::GetName(nsAString &aName)
 {
@@ -391,23 +358,12 @@ nsHTMLListBulletAccessible::GetParent(nsIAccessible **aParentAccessible)
 }
 
 NS_IMETHODIMP
-nsHTMLListBulletAccessible::FireToolkitEvent(PRUint32 aEvent,
-                                             nsIAccessible *aTarget,
-                                             void *aData)
-{
-  if (aEvent == nsIAccessibleEvent::EVENT_HIDE)
-    mFrame = nsnull;  // Invalidate cached frame
-  return nsLeafAccessible::FireToolkitEvent(aEvent, aTarget, aData);
-}
-
-NS_IMETHODIMP
 nsHTMLListBulletAccessible::GetContentText(nsAString& aText)
 {
   aText = mBulletText;
   return NS_OK;
 }
 
-
 // nsHTMLListAccessible
 
 NS_IMETHODIMP
diff --git a/accessible/src/html/nsHTMLTextAccessible.h b/accessible/src/html/nsHTMLTextAccessible.h
index 9110e54..fb352e4 100644
--- a/accessible/src/html/nsHTMLTextAccessible.h
+++ b/accessible/src/html/nsHTMLTextAccessible.h
@@ -55,20 +55,6 @@ public:
   NS_IMETHOD GetState(PRUint32 *aState, PRUint32 *aExtraState);
   NS_IMETHOD GetRole(PRUint32 *aRole);
   virtual nsresult GetAttributesInternal(nsIPersistentProperties *aAttributes);
-  NS_IMETHOD Shutdown() { mFrame = nsnull; return nsTextAccessibleWrap::Shutdown(); }
-  
-  // nsPIAccessNode
-  NS_IMETHOD_(nsIFrame *) GetFrame(void);
-
-  // nsPIAccessible
-  NS_IMETHOD FireToolkitEvent(PRUint32 aEvent, nsIAccessible *aTarget,
-                              void *aData);
-
-private:
-  // We cache frames for text accessibles so that the primary frame map isn't
-  // increased in size just due to accessibility. Normally the primary frame map,
-  // which is used by nsIPresShell::GetPrimaryFrameFor(), does not include text frames
-  nsIFrame *mFrame; // Only valid if node is not shut down (mWeakShell != null)
 };
 
 class nsHTMLHRAccessible : public nsLeafAccessible
@@ -111,7 +97,6 @@ public:
 
   // nsPIAccessNode
   NS_IMETHOD Shutdown();
-  NS_IMETHOD_(nsIFrame *) GetFrame(void);
 
   // nsIAccessible
   NS_IMETHOD GetName(nsAString& aName);
@@ -125,8 +110,6 @@ public:
   NS_IMETHOD GetParent(nsIAccessible **aParentAccessible);
 
   // nsPIAccessible
-  NS_IMETHOD FireToolkitEvent(PRUint32 aEvent, nsIAccessible *aTarget,
-                              void *aData);
   NS_IMETHOD GetContentText(nsAString& aText);
 
 protected:
@@ -137,7 +120,6 @@ protected:
   // here should not be a problem if we invalidate the right parts of
   // the accessibility cache when mutation events occur.
   nsIAccessible *mWeakParent;
-  nsIFrame *mFrame;
   nsString mBulletText;
 };
 """
14b3b6c9030f22bcbd9bb3bb2f8b53a1e8e8be66,101204,376987,jst%mozilla.org,"Fixing bug 376987. Add missing code to event listener registration helper code. r=mrbkap@gmail.com, sr=bzbarsky@mit.edu
",1176249568,"""diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index 281ae5c..53eadf3 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -6543,6 +6543,22 @@ nsEventReceiverSH::AddEventListenerHelper(JSContext *cx, JSObject *obj,
     return JS_FALSE;
   }
 
+  // Check that the caller has permission to call obj's addEventListener.
+  if (NS_FAILED(sSecMan->CheckPropertyAccess(cx, obj,
+                                             JS_GET_CLASS(cx, obj)->name,
+                                             sAddEventListener_id,
+                                             nsIXPCSecurityManager::ACCESS_GET_PROPERTY)) ||
+      NS_FAILED(sSecMan->CheckPropertyAccess(cx, obj,
+                                             JS_GET_CLASS(cx, obj)->name,
+                                             sAddEventListener_id,
+                                             nsIXPCSecurityManager::ACCESS_CALL_METHOD))) {
+    // The caller doesn't have access to get or call the callee
+    // object's addEventListener method. The security manager already
+    // threw an exception for us, so simply return false.
+
+    return JS_FALSE;
+  }
+
   nsCOMPtr<nsIXPConnectWrappedNative> wrapper;
   nsresult rv =
     sXPConnect->GetWrappedNativeOfJSObject(cx, obj, getter_AddRefs(wrapper));"""
dc7cb3a199f6a9eda8699f1d293d046108d7e614,101212,369150,Olli.Pettay%helsinki.fi,"Additional patch for bug 369150, r+sr=bz
",1176232101,"""diff --git a/layout/generic/nsFrameSetFrame.cpp b/layout/generic/nsFrameSetFrame.cpp
index df59a25..de292cf 100644
--- a/layout/generic/nsFrameSetFrame.cpp
+++ b/layout/generic/nsFrameSetFrame.cpp
@@ -1019,7 +1019,12 @@ nsHTMLFramesetFrame::Reflow(nsPresContext*          aPresContext,
   ourContent->GetColSpec(&cols, &colSpecs);
   // If the number of cols or rows has changed, the frame for the frameset
   // will be re-created.
-  NS_ENSURE_STATE(mNumRows == rows && mNumCols == cols);
+  if (mNumRows != rows || mNumCols != cols) {
+    aStatus = NS_FRAME_COMPLETE;
+    mDrag.UnSet();
+    NS_FRAME_SET_TRUNCATION(aStatus, aReflowState, aDesiredSize);
+    return NS_OK;
+  }
 
   if (!mDrag.mActive) {
     CalculateRowCol(aPresContext, width, mNumCols, colSpecs, mColSizes);"""
be03838f82721015a57cfc8662f88b5e31ba32b5,101360,375183,igor%mir2.org,"Bug 375183: simpler noSuchMethod implementation, r=brendan.
",1175725137,"""diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index 3574c6f..78e2c5a 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -581,15 +581,14 @@ js_ComputeThis(JSContext *cx, JSObject *thisp, jsval *argv)
 
 static JSBool
 NoSuchMethod(JSContext *cx, JSStackFrame *fp, jsval *vp, uint32 flags,
-             uintN *argcp)
+             uintN argc)
 {
-    jsval v, *sp, *newsp;
     JSObject *thisp, *argsobj;
+    jsval *sp, roots[3];
+    JSTempValueRooter tvr;
     jsid id;
+    JSBool ok;
     jsbytecode *pc;
-    JSAtom *atom;
-    uintN argc;
-    JSArena *a;
 
     /*
      * We must call js_ComputeThis here to censor Call objects.  A performance
@@ -618,6 +617,11 @@ NoSuchMethod(JSContext *cx, JSStackFrame *fp, jsval *vp, uint32 flags,
     thisp = js_ComputeThis(cx, thisp, vp + 2);
     if (!thisp)
         return JS_FALSE;
+    vp[1] = OBJECT_TO_JSVAL(thisp);
+
+    /* From here on, control must flow through label out: to return. */
+    memset(roots, 0, sizeof roots);
+    JS_PUSH_TEMP_ROOT(cx, JS_ARRAY_LENGTH(roots), roots, &tvr);
 
     id = ATOM_TO_JSID(cx->runtime->atomState.noSuchMethodAtom);
 #if JS_HAS_XML_SUPPORT
@@ -625,18 +629,21 @@ NoSuchMethod(JSContext *cx, JSStackFrame *fp, jsval *vp, uint32 flags,
         JSXMLObjectOps *ops;
 
         ops = (JSXMLObjectOps *) thisp->map->ops;
-        thisp = ops->getMethod(cx, thisp, id, &v);
-        if (!thisp)
-            return JS_FALSE;
+        thisp = ops->getMethod(cx, thisp, id, &roots[2]);
+        if (!thisp) {
+            ok = JS_FALSE;
+            goto out;
+        }
         vp[1] = OBJECT_TO_JSVAL(thisp);
     } else
 #endif
     {
-        if (!OBJ_GET_PROPERTY(cx, thisp, id, &v))
-            return JS_FALSE;
+        ok = OBJ_GET_PROPERTY(cx, thisp, id, &roots[2]);
+        if (!ok)
+            goto out;
     }
-    if (JSVAL_IS_PRIMITIVE(v))
-        goto bad;
+    if (JSVAL_IS_PRIMITIVE(roots[2]))
+        goto not_function;
 
     pc = (jsbytecode *) vp[-(intN)fp->script->depth];
     switch ((JSOp) *pc) {
@@ -645,55 +652,29 @@ NoSuchMethod(JSContext *cx, JSStackFrame *fp, jsval *vp, uint32 flags,
 #if JS_HAS_XML_SUPPORT
       case JSOP_CALLPROP:
 #endif
-        atom = js_GetAtomFromBytecode(fp->script, pc, 0);
-        argc = *argcp;
+        roots[0] = ATOM_KEY(js_GetAtomFromBytecode(fp->script, pc, 0));
         argsobj = js_NewArrayObject(cx, argc, vp + 2);
-        if (!argsobj)
-            return JS_FALSE;
-
-        sp = vp + 4;
-        if (argc < 2) {
-            a = cx->stackPool.current;
-            if ((jsuword)sp > a->limit) {
-                /*
-                 * Arguments must be contiguous, and must include argv[-1]
-                 * and argv[-2], so allocate more stack, advance sp, and
-                 * set newsp[1] to thisp (vp[1]).  The other argv elements
-                 * will be set below, using negative indexing from sp.
-                 */
-                newsp = js_AllocRawStack(cx, 4, NULL);
-                if (!newsp)
-                    return JS_FALSE;
-                newsp[1] = OBJECT_TO_JSVAL(thisp);
-                sp = newsp + 4;
-            } else if ((jsuword)sp > a->avail) {
-                /*
-                 * Inline, optimized version of JS_ARENA_ALLOCATE to claim
-                 * the small number of words not already allocated as part
-                 * of the caller's operand stack.
-                 */
-                JS_ArenaCountAllocation(&cx->stackPool,
-                                        (jsuword)sp - a->avail);
-                a->avail = (jsuword)sp;
-            }
+        if (!argsobj) {
+            ok = JS_FALSE;
+            goto out;
         }
-
-        sp[-4] = v;
-        JS_ASSERT(sp[-3] == OBJECT_TO_JSVAL(thisp));
-        sp[-2] = ATOM_KEY(atom);
-        sp[-1] = OBJECT_TO_JSVAL(argsobj);
-        SAVE_SP(fp);
-        *argcp = 2;
+        roots[1] = OBJECT_TO_JSVAL(argsobj);
+        ok = js_InternalInvoke(cx, thisp, roots[2], flags | JSINVOKE_INTERNAL,
+                               2, roots, &vp[0]);
         break;
 
       default:
-        goto bad;
+        goto not_function;
     }
-    return JS_TRUE;
 
-bad:
+  out:
+    JS_POP_TEMP_ROOT(cx, &tvr);
+    return ok;
+
+  not_function:
     js_ReportIsNotFunction(cx, vp, flags & JSINVOKE_FUNFLAGS);
-    return JS_FALSE;
+    ok = JS_FALSE;
+    goto out;
 }
 
 #endif /* JS_HAS_NO_SUCH_METHOD */
@@ -1097,16 +1078,14 @@ js_Invoke(JSContext *cx, uintN argc, uintN flags)
      */
     if (JSVAL_IS_PRIMITIVE(v)) {
 #if JS_HAS_NO_SUCH_METHOD
-        if (!fp->script || (flags & JSINVOKE_INTERNAL))
-            goto bad;
-        ok = NoSuchMethod(cx, fp, vp, flags, &argc);
-        if (!ok)
+        if (fp->script && !(flags & JSINVOKE_INTERNAL)) {
+            ok = NoSuchMethod(cx, fp, vp, flags, argc);
+            if (ok)
+                frame.rval = *vp;
             goto out2;
-        RESTORE_SP(fp);
-        v = *vp;
-#else
-        goto bad;
+        }
 #endif
+        goto bad;
     }
 
     /* Load thisv after potentially calling NoSuchMethod, which may set it. */
@@ -3847,16 +3826,6 @@ interrupt:
             vp = sp - (argc + 2);
             lval = *vp;
             SAVE_SP_AND_PC(fp);
-#if JS_HAS_NO_SUCH_METHOD
-            if (JSVAL_IS_PRIMITIVE(lval)) {
-                ok = NoSuchMethod(cx, fp, vp, 0, &argc);
-                if (!ok)
-                    goto out;
-                RESTORE_SP(fp);
-                lval = *vp;
-            }
-#endif
-
             if (VALUE_IS_FUNCTION(cx, lval) &&
                 (obj = JSVAL_TO_OBJECT(lval),
                  fun = (JSFunction *) JS_GetPrivate(cx, obj),"""
a9969354fe007622471c25197d40e18d5e4401bb,102881,375711,mrbkap%gmail.com,"Deal with the /i option before calculating the start (and localMax) for ranges. bug 375711, r=crowder
",1175192355,"""diff --git a/js/src/jsregexp.c b/js/src/jsregexp.c
index 1934771..ab8c60e 100644
--- a/js/src/jsregexp.c
+++ b/js/src/jsregexp.c
@@ -1024,6 +1024,11 @@ lexHex:
             localMax = *src++;
             break;
         }
+        if (state->flags & JSREG_FOLD) {
+            c = JS_MAX(upcase((jschar) localMax), downcase((jschar) localMax));
+            if (c > localMax)
+                localMax = c;
+        }
         if (inRange) {
             if (rangeStart > localMax) {
                 JS_ReportErrorNumber(state->context,
@@ -1042,11 +1047,6 @@ lexHex:
                 }
             }
         }
-        if (state->flags & JSREG_FOLD) {
-            c = JS_MAX(upcase((jschar)localMax), downcase((jschar)localMax));
-            if (c > localMax)
-                localMax = c;
-        }
         if (localMax > max)
             max = localMax;
     }"""
caa7e9b8e754955b408e66a13022716c2d09c1b3,103047,375196,Olli.Pettay%helsinki.fi,"375196, r+sr=roc
",1174887502,"""diff --git a/content/base/src/nsGenericElement.cpp b/content/base/src/nsGenericElement.cpp
index 57467e1..d23abda 100644
--- a/content/base/src/nsGenericElement.cpp
+++ b/content/base/src/nsGenericElement.cpp
@@ -2440,7 +2440,7 @@ nsGenericElement::DispatchEvent(nsPresContext* aPresContext,
     return NS_OK;
   }
 
-  nsIPresShell *shell = aPresContext->GetPresShell();
+  nsCOMPtr<nsIPresShell> shell = aPresContext->GetPresShell();
   if (!shell) {
     return NS_OK;
   }
@@ -3882,7 +3882,7 @@ nsGenericElement::PostHandleEventForLinks(nsEventChainPostVisitor& aVisitor)
       }
 
       // The default action is simply to dispatch DOMActivate
-      nsIPresShell *shell = aVisitor.mPresContext->GetPresShell();
+      nsCOMPtr<nsIPresShell> shell = aVisitor.mPresContext->GetPresShell();
       if (shell) {
         // single-click
         nsEventStatus status = nsEventStatus_eIgnore;
diff --git a/content/html/content/src/nsHTMLButtonElement.cpp b/content/html/content/src/nsHTMLButtonElement.cpp
index 8ee3bee..a8f4523 100644
--- a/content/html/content/src/nsHTMLButtonElement.cpp
+++ b/content/html/content/src/nsHTMLButtonElement.cpp
@@ -379,7 +379,8 @@ nsHTMLButtonElement::PostHandleEvent(nsEventChainPostVisitor& aVisitor)
       case NS_MOUSE_CLICK:
         {
           if (NS_IS_MOUSE_LEFT_CLICK(aVisitor.mEvent)) {
-            nsIPresShell *presShell = aVisitor.mPresContext->GetPresShell();
+            nsCOMPtr<nsIPresShell> presShell =
+              aVisitor.mPresContext->GetPresShell();
             if (presShell) {
               // single-click
               nsUIEvent event(NS_IS_TRUSTED_EVENT(aVisitor.mEvent),
@@ -403,7 +404,8 @@ nsHTMLButtonElement::PostHandleEvent(nsEventChainPostVisitor& aVisitor)
             event.originator      = this;
             nsEventStatus status  = nsEventStatus_eIgnore;
 
-            nsIPresShell *presShell = aVisitor.mPresContext->GetPresShell();
+            nsCOMPtr<nsIPresShell> presShell =
+              aVisitor.mPresContext->GetPresShell();
             // If |nsIPresShell::Destroy| has been called due to
             // handling the event, the pres context will return
             // a null pres shell.  See bug 125624.
diff --git a/content/html/content/src/nsHTMLInputElement.cpp b/content/html/content/src/nsHTMLInputElement.cpp
index d56034a..050944c 100644
--- a/content/html/content/src/nsHTMLInputElement.cpp
+++ b/content/html/content/src/nsHTMLInputElement.cpp
@@ -1045,7 +1045,7 @@ nsHTMLInputElement::MaybeSubmitForm(nsPresContext* aPresContext)
     return NS_OK;
   }
   
-  nsIPresShell* shell = aPresContext->GetPresShell();
+  nsCOMPtr<nsIPresShell> shell = aPresContext->GetPresShell();
   if (!shell) {
     return NS_OK;
   }
@@ -1502,7 +1502,7 @@ nsHTMLInputElement::PostHandleEvent(nsEventChainPostVisitor& aVisitor)
       NS_IS_MOUSE_LEFT_CLICK(aVisitor.mEvent)) {
     nsUIEvent actEvent(NS_IS_TRUSTED_EVENT(aVisitor.mEvent), NS_UI_ACTIVATE, 1);
 
-    nsIPresShell *shell = aVisitor.mPresContext->GetPresShell();
+    nsCOMPtr<nsIPresShell> shell = aVisitor.mPresContext->GetPresShell();
     if (shell) {
       nsEventStatus status = nsEventStatus_eIgnore;
       SET_BOOLBIT(mBitField, BF_IN_INTERNAL_ACTIVATE, PR_TRUE);
@@ -1770,7 +1770,8 @@ nsHTMLInputElement::PostHandleEvent(nsEventChainPostVisitor& aVisitor)
             event.originator      = this;
             nsEventStatus status  = nsEventStatus_eIgnore;
 
-            nsIPresShell *presShell = aVisitor.mPresContext->GetPresShell();
+            nsCOMPtr<nsIPresShell> presShell =
+              aVisitor.mPresContext->GetPresShell();
 
             // If |nsIPresShell::Destroy| has been called due to
             // handling the event the pres context will return a null
diff --git a/content/svg/content/src/nsSVGSVGElement.cpp b/content/svg/content/src/nsSVGSVGElement.cpp
index 0f37554..e78ba01 100644
--- a/content/svg/content/src/nsSVGSVGElement.cpp
+++ b/content/svg/content/src/nsSVGSVGElement.cpp
@@ -1011,7 +1011,7 @@ nsSVGSVGElement::SetCurrentScaleTranslate(float s, float x, float y)
   // now dispatch an SVGZoom event if we are the root element
   nsIDocument* doc = GetCurrentDoc();
   if (doc) {
-    nsIPresShell* presShell = doc->GetShellAt(0);
+    nsCOMPtr<nsIPresShell> presShell = doc->GetShellAt(0);
     NS_ASSERTION(presShell, """"no presShell"""");
     if (presShell &&
         doc->GetRootContent() == NS_STATIC_CAST(nsIContent*, this)) {
@@ -1036,7 +1036,7 @@ nsSVGSVGElement::SetCurrentTranslate(float x, float y)
   // now dispatch an SVGScroll event if we are the root element
   nsIDocument* doc = GetCurrentDoc();
   if (doc) {
-    nsIPresShell* presShell = doc->GetShellAt(0);
+    nsCOMPtr<nsIPresShell> presShell = doc->GetShellAt(0);
     NS_ASSERTION(presShell, """"no presShell"""");
     if (presShell &&
         doc->GetRootContent() == NS_STATIC_CAST(nsIContent*, this)) {
diff --git a/content/xml/document/src/nsXMLContentSink.cpp b/content/xml/document/src/nsXMLContentSink.cpp
index 5a1d2dc..3d1ae45 100644
--- a/content/xml/document/src/nsXMLContentSink.cpp
+++ b/content/xml/document/src/nsXMLContentSink.cpp
@@ -1114,7 +1114,7 @@ nsXMLContentSink::HandleEndElement(const PRUnichar *aName)
     nsEventStatus status = nsEventStatus_eIgnore;
     nsEvent event(PR_TRUE, NS_SVG_LOAD);
     event.eventStructType = NS_SVG_EVENT;
-    nsIPresShell *presShell = mDocument->GetShellAt(0);
+    nsCOMPtr<nsIPresShell> presShell = mDocument->GetShellAt(0);
     if (presShell) {
       FlushTags();
       presShell->HandleDOMEventWithTarget(content, &event, &status);
diff --git a/layout/base/nsIPresShell.h b/layout/base/nsIPresShell.h
index 07c281c..6fa6d9c 100644
--- a/layout/base/nsIPresShell.h
+++ b/layout/base/nsIPresShell.h
@@ -514,6 +514,7 @@ public:
 
   /**
     * Interface to dispatch events via the presshell
+    * @note The caller must have a strong reference to the PresShell.
     */
   NS_IMETHOD HandleEventWithTarget(nsEvent* aEvent,
                                    nsIFrame* aFrame,
@@ -522,6 +523,7 @@ public:
 
   /**
    * Dispatch event to content only (NOT full processing)
+   * @note The caller must have a strong reference to the PresShell.
    */
   NS_IMETHOD HandleDOMEventWithTarget(nsIContent* aTargetContent,
                                       nsEvent* aEvent,
diff --git a/layout/forms/nsComboboxControlFrame.cpp b/layout/forms/nsComboboxControlFrame.cpp
index e40aac5..219101d 100644
--- a/layout/forms/nsComboboxControlFrame.cpp
+++ b/layout/forms/nsComboboxControlFrame.cpp
@@ -394,7 +394,7 @@ nsComboboxControlFrame::ShowPopup(PRBool aShowPopup)
                      NS_XUL_POPUP_SHOWING : NS_XUL_POPUP_HIDING, nsnull,
                      nsMouseEvent::eReal);
 
-  nsIPresShell *shell = GetPresContext()->GetPresShell();
+  nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
   if (shell) 
     shell->HandleDOMEventWithTarget(mContent, &event, &status);
 }
diff --git a/layout/forms/nsListControlFrame.cpp b/layout/forms/nsListControlFrame.cpp
index e3ff0ff..378294b 100644
--- a/layout/forms/nsListControlFrame.cpp
+++ b/layout/forms/nsListControlFrame.cpp
@@ -1658,7 +1658,7 @@ nsListControlFrame::FireOnChange()
   nsEventStatus status = nsEventStatus_eIgnore;
   nsEvent event(PR_TRUE, NS_FORM_CHANGE);
 
-  nsIPresShell *presShell = GetPresContext()->GetPresShell();
+  nsCOMPtr<nsIPresShell> presShell = GetPresContext()->GetPresShell();
   if (presShell) {
     presShell->HandleEventWithTarget(&event, this, nsnull, &status);
   }
diff --git a/layout/forms/nsTextControlFrame.cpp b/layout/forms/nsTextControlFrame.cpp
index 683244c..d9fc605 100644
--- a/layout/forms/nsTextControlFrame.cpp
+++ b/layout/forms/nsTextControlFrame.cpp
@@ -305,7 +305,7 @@ nsTextInputListener::NotifySelectionChanged(nsIDOMDocument* aDoc, nsISelection*
       nsCOMPtr<nsIDocument> doc = content->GetDocument();
       if (doc) 
       {
-        nsIPresShell *presShell = doc->GetShellAt(0);
+        nsCOMPtr<nsIPresShell> presShell = doc->GetShellAt(0);
         if (presShell) 
         {
           nsEventStatus status = nsEventStatus_eIgnore;
@@ -2467,8 +2467,8 @@ nsTextControlFrame::FireOnInput()
 
   // Have the content handle the event, propagating it according to normal
   // DOM rules.
-  GetPresContext()->PresShell()->HandleEventWithTarget(&event, nsnull, mContent,
-                                                       &status); 
+  nsCOMPtr<nsIPresShell> shell = GetPresContext()->PresShell();
+  shell->HandleEventWithTarget(&event, nsnull, mContent, &status);
 }
 
 nsresult
@@ -2488,9 +2488,8 @@ nsTextControlFrame::CheckFireOnChange()
     // Dispatch the change event
     nsEventStatus status = nsEventStatus_eIgnore;
     nsInputEvent event(PR_TRUE, NS_FORM_CHANGE, nsnull);
-
-    GetPresContext()->PresShell()->HandleEventWithTarget(&event, nsnull,
-                                                         mContent, &status);
+    nsCOMPtr<nsIPresShell> shell = GetPresContext()->PresShell();
+    shell->HandleEventWithTarget(&event, nsnull, mContent, &status);
   }
   return NS_OK;
 }
diff --git a/layout/xul/base/src/nsButtonBoxFrame.cpp b/layout/xul/base/src/nsButtonBoxFrame.cpp
index be3dab1..831d4e8 100644
--- a/layout/xul/base/src/nsButtonBoxFrame.cpp
+++ b/layout/xul/base/src/nsButtonBoxFrame.cpp
@@ -155,9 +155,8 @@ nsButtonBoxFrame::DoMouseClick(nsGUIEvent* aEvent, PRBool aTrustEvent)
   }
 
   // Have the content handle the event, propagating it according to normal DOM rules.
-  nsIPresShell *shell = GetPresContext()->GetPresShell();
+  nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
   if (shell) {
     shell->HandleDOMEventWithTarget(mContent, &event, &status);
-    // shell may no longer be alive, don't use it here unless you keep a ref
   }
 }
diff --git a/layout/xul/base/src/nsMenuFrame.cpp b/layout/xul/base/src/nsMenuFrame.cpp
index 476263c..eb8f4f5 100644
--- a/layout/xul/base/src/nsMenuFrame.cpp
+++ b/layout/xul/base/src/nsMenuFrame.cpp
@@ -1726,7 +1726,7 @@ nsMenuFrame::OnCreate()
   
   nsresult rv = NS_OK;
 
-  nsIPresShell *shell = GetPresContext()->GetPresShell();
+  nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
   if (shell) {
     if (child) {
       rv = shell->HandleDOMEventWithTarget(child, &event, &status);
@@ -1734,7 +1734,6 @@ nsMenuFrame::OnCreate()
     else {
       rv = shell->HandleDOMEventWithTarget(mContent, &event, &status);
     }
-    // shell may no longer be alive, don't use it here unless you keep a ref
   }
 
   if ( NS_FAILED(rv) || status == nsEventStatus_eConsumeNoDefault )
@@ -1800,7 +1799,7 @@ nsMenuFrame::OnCreated()
   GetMenuChildrenElement(getter_AddRefs(child));
   
   nsresult rv = NS_OK;
-  nsIPresShell *shell = GetPresContext()->GetPresShell();
+  nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
   if (shell) {
     if (child) {
       rv = shell->HandleDOMEventWithTarget(child, &event, &status);
@@ -1808,7 +1807,6 @@ nsMenuFrame::OnCreated()
     else {
       rv = shell->HandleDOMEventWithTarget(mContent, &event, &status);
     }
-    // shell may no longer be alive, don't use it here unless you keep a ref
   }
 
   if ( NS_FAILED(rv) || status == nsEventStatus_eConsumeNoDefault )
@@ -1827,7 +1825,7 @@ nsMenuFrame::OnDestroy()
   GetMenuChildrenElement(getter_AddRefs(child));
   
   nsresult rv = NS_OK;
-  nsIPresShell *shell = GetPresContext()->GetPresShell();
+  nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
   if (shell) {
     if (child) {
       rv = shell->HandleDOMEventWithTarget(child, &event, &status);
@@ -1835,7 +1833,6 @@ nsMenuFrame::OnDestroy()
     else {
       rv = shell->HandleDOMEventWithTarget(mContent, &event, &status);
     }
-    // shell may no longer be alive, don't use it here unless you keep a ref
   }
 
   if ( NS_FAILED(rv) || status == nsEventStatus_eConsumeNoDefault )
@@ -1854,7 +1851,7 @@ nsMenuFrame::OnDestroyed()
   GetMenuChildrenElement(getter_AddRefs(child));
   
   nsresult rv = NS_OK;
-  nsIPresShell *shell = GetPresContext()->GetPresShell();
+  nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
   if (shell) {
     if (child) {
       rv = shell->HandleDOMEventWithTarget(child, &event, &status);
@@ -1862,7 +1859,6 @@ nsMenuFrame::OnDestroyed()
     else {
       rv = shell->HandleDOMEventWithTarget(mContent, &event, &status);
     }
-    // shell may no longer be alive, don't use it here unless you keep a ref
   }
 
   if ( NS_FAILED(rv) || status == nsEventStatus_eConsumeNoDefault )
diff --git a/layout/xul/base/src/nsPopupSetFrame.cpp b/layout/xul/base/src/nsPopupSetFrame.cpp
index 5ba229a..b128e6e 100644
--- a/layout/xul/base/src/nsPopupSetFrame.cpp
+++ b/layout/xul/base/src/nsPopupSetFrame.cpp
@@ -645,11 +645,10 @@ nsPopupSetFrame::OnCreate(PRInt32 aX, PRInt32 aY, nsIContent* aPopupContent)
 
   if (aPopupContent) {
     nsCOMPtr<nsIContent> kungFuDeathGrip(aPopupContent);
-    nsIPresShell *shell = GetPresContext()->GetPresShell();
+    nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
     if (shell) {
       nsresult rv = shell->HandleDOMEventWithTarget(aPopupContent, &event,
                                                     &status);
-      // shell may no longer be alive, don't use it here unless you keep a ref
       if ( NS_FAILED(rv) || status == nsEventStatus_eConsumeNoDefault )
         return PR_FALSE;
     }
@@ -714,11 +713,10 @@ nsPopupSetFrame::OnCreated(PRInt32 aX, PRInt32 aY, nsIContent* aPopupContent)
   //event.point.y = aY;
 
   if (aPopupContent) {
-    nsIPresShell *shell = GetPresContext()->GetPresShell();
+    nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
     if (shell) {
       nsresult rv = shell->HandleDOMEventWithTarget(aPopupContent, &event,
                                                     &status);
-      // shell may no longer be alive, don't use it here unless you keep a ref
       if ( NS_FAILED(rv) || status == nsEventStatus_eConsumeNoDefault )
         return PR_FALSE;
     }"""
e312120569601284e2c0ade31b35327d55613912,103105,374584,Olli.Pettay%helsinki.fi,"Bug 374584, r=peterv, sr=jst
",1174733587,"""diff --git a/content/xul/document/src/nsXULCommandDispatcher.cpp b/content/xul/document/src/nsXULCommandDispatcher.cpp
index 9f9680a..0bbca2e 100644
--- a/content/xul/document/src/nsXULCommandDispatcher.cpp
+++ b/content/xul/document/src/nsXULCommandDispatcher.cpp
@@ -77,7 +77,7 @@ static PRLogModuleInfo* gLog;
 ////////////////////////////////////////////////////////////////////////
 
 nsXULCommandDispatcher::nsXULCommandDispatcher(nsIDocument* aDocument)
-    : mFocusController(nsnull), mDocument(aDocument), mUpdaters(nsnull)
+    : mDocument(aDocument), mUpdaters(nsnull)
 {
 
 #ifdef PR_LOGGING
@@ -88,50 +88,56 @@ nsXULCommandDispatcher::nsXULCommandDispatcher(nsIDocument* aDocument)
 
 nsXULCommandDispatcher::~nsXULCommandDispatcher()
 {
-  while (mUpdaters) {
-    Updater* doomed = mUpdaters;
-    mUpdaters = mUpdaters->mNext;
-    delete doomed;
-  }
+  Disconnect();
 }
 
+NS_IMPL_CYCLE_COLLECTION_CLASS(nsXULCommandDispatcher)
+
 // QueryInterface implementation for nsXULCommandDispatcher
 NS_INTERFACE_MAP_BEGIN(nsXULCommandDispatcher)
     NS_INTERFACE_MAP_ENTRY(nsIDOMXULCommandDispatcher)
     NS_INTERFACE_MAP_ENTRY(nsISupportsWeakReference)
     NS_INTERFACE_MAP_ENTRY_AMBIGUOUS(nsISupports, nsIDOMXULCommandDispatcher)
     NS_INTERFACE_MAP_ENTRY_CONTENT_CLASSINFO(XULCommandDispatcher)
+    NS_INTERFACE_MAP_ENTRIES_CYCLE_COLLECTION(nsXULCommandDispatcher)
 NS_INTERFACE_MAP_END
 
+NS_IMPL_CYCLE_COLLECTING_ADDREF(nsXULCommandDispatcher)
+NS_IMPL_CYCLE_COLLECTING_RELEASE(nsXULCommandDispatcher)
 
-NS_IMPL_ADDREF(nsXULCommandDispatcher)
-NS_IMPL_RELEASE(nsXULCommandDispatcher)
+NS_IMPL_CYCLE_COLLECTION_UNLINK_BEGIN(nsXULCommandDispatcher)
+  tmp->Disconnect();
+NS_IMPL_CYCLE_COLLECTION_UNLINK_END
 
+NS_IMPL_CYCLE_COLLECTION_TRAVERSE_BEGIN(nsXULCommandDispatcher)
+  NS_IMPL_CYCLE_COLLECTION_TRAVERSE_NSCOMPTR(mDocument)
+  Updater* updater = tmp->mUpdaters;
+  while (updater) {
+    cb.NoteXPCOMChild(updater->mElement);
+    updater = updater->mNext;
+  }
+NS_IMPL_CYCLE_COLLECTION_TRAVERSE_END
 
-NS_IMETHODIMP
-nsXULCommandDispatcher::Create(nsIDocument* aDoc, nsIDOMXULCommandDispatcher** aResult)
+void
+nsXULCommandDispatcher::Disconnect()
 {
-  nsXULCommandDispatcher* dispatcher = new nsXULCommandDispatcher(aDoc);
-  if (!dispatcher)
-    return NS_ERROR_OUT_OF_MEMORY;
-
-  *aResult = dispatcher;
-  NS_ADDREF(*aResult);
-  return NS_OK;
+  while (mUpdaters) {
+    Updater* doomed = mUpdaters;
+    mUpdaters = mUpdaters->mNext;
+    delete doomed;
+  }
+  mDocument = nsnull;
 }
 
-void
-nsXULCommandDispatcher::EnsureFocusController()
+nsIFocusController*
+nsXULCommandDispatcher::GetFocusController()
 {
-  if (!mFocusController) {
-    nsCOMPtr<nsPIDOMWindow> win(do_QueryInterface(mDocument->GetScriptGlobalObject()));
-  
-    // An inelegant way to retrieve this to be sure, but we are
-    // guaranteed that the focus controller outlives us, so it
-    // is safe to hold on to it (since we can't die until it has
-    // died).
-    mFocusController = win->GetRootFocusController(); // Store as a weak ptr.
+  if (!mDocument) {
+    return nsnull;
   }
+
+  nsCOMPtr<nsPIDOMWindow> win(do_QueryInterface(mDocument->GetScriptGlobalObject()));
+  return win ? win->GetRootFocusController() : nsnull;
 }
 
 ////////////////////////////////////////////////////////////////
@@ -140,10 +146,10 @@ nsXULCommandDispatcher::EnsureFocusController()
 NS_IMETHODIMP
 nsXULCommandDispatcher::GetFocusedElement(nsIDOMElement** aElement)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
-  nsresult rv = mFocusController->GetFocusedElement(aElement);
+  nsresult rv = fc->GetFocusedElement(aElement);
   NS_ENSURE_SUCCESS(rv, rv);
 
   // Make sure the caller can access the focused element.
@@ -161,11 +167,11 @@ nsXULCommandDispatcher::GetFocusedElement(nsIDOMElement** aElement)
 NS_IMETHODIMP
 nsXULCommandDispatcher::GetFocusedWindow(nsIDOMWindow** aWindow)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
   nsCOMPtr<nsIDOMWindowInternal> window;
-  nsresult rv = mFocusController->GetFocusedWindow(getter_AddRefs(window));
+  nsresult rv = fc->GetFocusedWindow(getter_AddRefs(window));
   NS_ENSURE_TRUE(NS_SUCCEEDED(rv) && window, rv);
 
   rv = CallQueryInterface(window, aWindow);
@@ -190,48 +196,42 @@ nsXULCommandDispatcher::GetFocusedWindow(nsIDOMWindow** aWindow)
 NS_IMETHODIMP
 nsXULCommandDispatcher::SetFocusedElement(nsIDOMElement* aElement)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
-  return mFocusController->SetFocusedElement(aElement);
+  return fc->SetFocusedElement(aElement);
 }
 
 NS_IMETHODIMP
 nsXULCommandDispatcher::SetFocusedWindow(nsIDOMWindow* aWindow)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
   nsCOMPtr<nsIDOMWindowInternal> window(do_QueryInterface(aWindow));
 
-  return mFocusController->SetFocusedWindow(window);
+  return fc->SetFocusedWindow(window);
 }
 
 NS_IMETHODIMP
 nsXULCommandDispatcher::AdvanceFocus()
 {
-  EnsureFocusController();
-  if (mFocusController)
-    return mFocusController->MoveFocus(PR_TRUE, nsnull);
-  return NS_OK;
+  nsIFocusController* fc = GetFocusController();
+  return fc ? fc->MoveFocus(PR_TRUE, nsnull) : NS_OK;
 }
 
 NS_IMETHODIMP
 nsXULCommandDispatcher::RewindFocus()
 {
-  EnsureFocusController();
-  if (mFocusController)
-    return mFocusController->MoveFocus(PR_FALSE, nsnull);
-  return NS_OK;
+  nsIFocusController* fc = GetFocusController();
+  return fc ? fc->MoveFocus(PR_FALSE, nsnull) : NS_OK;
 }
 
 NS_IMETHODIMP
 nsXULCommandDispatcher::AdvanceFocusIntoSubtree(nsIDOMElement* aElt)
 {
-  EnsureFocusController();
-  if (mFocusController)
-    return mFocusController->MoveFocus(PR_TRUE, aElt);
-  return NS_OK;
+  nsIFocusController* fc = GetFocusController();
+  return fc ? fc->MoveFocus(PR_TRUE, aElt) : NS_OK;
 }
 
 NS_IMETHODIMP
@@ -349,26 +349,18 @@ nsXULCommandDispatcher::RemoveCommandUpdater(nsIDOMElement* aElement)
 NS_IMETHODIMP
 nsXULCommandDispatcher::UpdateCommands(const nsAString& aEventName)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
   nsAutoString id;
   nsCOMPtr<nsIDOMElement> element;
-  mFocusController->GetFocusedElement(getter_AddRefs(element));
+  fc->GetFocusedElement(getter_AddRefs(element));
   if (element) {
     nsresult rv = element->GetAttribute(NS_LITERAL_STRING(""""id""""), id);
     NS_ASSERTION(NS_SUCCEEDED(rv), """"unable to get element's id"""");
     if (NS_FAILED(rv)) return rv;
   }
 
-#if 0
-  {
-    char*   actionString = ToNewCString(aEventName);
-    printf(""""Doing UpdateCommands(\""""%s\"""")\n"""", actionString);
-    free(actionString);    
-  }
-#endif
-  
   for (Updater* updater = mUpdaters; updater != nsnull; updater = updater->mNext) {
     // Skip any nodes that don't match our 'events' or 'targets'
     // filters.
@@ -395,7 +387,7 @@ nsXULCommandDispatcher::UpdateCommands(const nsAString& aEventName)
       CopyUTF16toUTF8(aEventName, aeventnameC);
       PR_LOG(gLog, PR_LOG_NOTICE,
              (""""xulcmd[%p] update %p event=%s"""",
-              this, updater->mElement,
+              this, updater->mElement.get(),
               aeventnameC.get()));
     }
 #endif
@@ -449,36 +441,36 @@ nsXULCommandDispatcher::Matches(const nsString& aList,
 NS_IMETHODIMP
 nsXULCommandDispatcher::GetControllers(nsIControllers** aResult)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
-  return mFocusController->GetControllers(aResult);
+  return fc->GetControllers(aResult);
 }
 
 NS_IMETHODIMP
 nsXULCommandDispatcher::GetControllerForCommand(const char *aCommand, nsIController** _retval)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
-  return mFocusController->GetControllerForCommand(aCommand, _retval);
+  return fc->GetControllerForCommand(aCommand, _retval);
 }
 
 NS_IMETHODIMP
 nsXULCommandDispatcher::GetSuppressFocusScroll(PRBool* aSuppressFocusScroll)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
-  return mFocusController->GetSuppressFocusScroll(aSuppressFocusScroll);
+  return fc->GetSuppressFocusScroll(aSuppressFocusScroll);
 }
 
 NS_IMETHODIMP
 nsXULCommandDispatcher::SetSuppressFocusScroll(PRBool aSuppressFocusScroll)
 {
-  EnsureFocusController();
-  NS_ENSURE_TRUE(mFocusController, NS_ERROR_FAILURE);
+  nsIFocusController* fc = GetFocusController();
+  NS_ENSURE_TRUE(fc, NS_ERROR_FAILURE);
 
-  return mFocusController->SetSuppressFocusScroll(aSuppressFocusScroll);
+  return fc->SetSuppressFocusScroll(aSuppressFocusScroll);
 }
 
diff --git a/content/xul/document/src/nsXULCommandDispatcher.h b/content/xul/document/src/nsXULCommandDispatcher.h
index 8aee342..0cd9f8b 100644
--- a/content/xul/document/src/nsXULCommandDispatcher.h
+++ b/content/xul/document/src/nsXULCommandDispatcher.h
@@ -52,6 +52,7 @@
 #include """"nsWeakReference.h""""
 #include """"nsIDOMNode.h""""
 #include """"nsString.h""""
+#include """"nsCycleCollectionParticipant.h""""
 
 class nsIDOMElement;
 class nsIFocusController;
@@ -59,26 +60,23 @@ class nsIFocusController;
 class nsXULCommandDispatcher : public nsIDOMXULCommandDispatcher,
                                public nsSupportsWeakReference
 {
-protected:
+public:
     nsXULCommandDispatcher(nsIDocument* aDocument);
     virtual ~nsXULCommandDispatcher();
 
-    void EnsureFocusController();
-
-public:
-
-    static NS_IMETHODIMP
-    Create(nsIDocument* aDocument, nsIDOMXULCommandDispatcher** aResult);
-
     // nsISupports
-    NS_DECL_ISUPPORTS
+    NS_DECL_CYCLE_COLLECTING_ISUPPORTS
+    NS_DECL_CYCLE_COLLECTION_CLASS_AMBIGUOUS(nsXULCommandDispatcher,
+                                             nsIDOMXULCommandDispatcher)
 
     // nsIDOMXULCommandDispatcher interface
     NS_DECL_NSIDOMXULCOMMANDDISPATCHER
 
+    void Disconnect();
 protected:
-    nsIFocusController* mFocusController; // Weak. We always die before the focus controller does.
-    nsIDocument* mDocument; // Weak.
+    nsIFocusController* GetFocusController();
+
+    nsCOMPtr<nsIDocument> mDocument;
 
     class Updater {
     public:
@@ -91,10 +89,10 @@ protected:
             mNext(nsnull)
       {}
 
-      nsIDOMElement* mElement; // [WEAK]
-      nsString       mEvents;
-      nsString       mTargets;
-      Updater*       mNext;
+      nsCOMPtr<nsIDOMElement> mElement;
+      nsString                mEvents;
+      nsString                mTargets;
+      Updater*                mNext;
     };
 
     Updater* mUpdaters;
diff --git a/content/xul/document/src/nsXULDocument.cpp b/content/xul/document/src/nsXULDocument.cpp
index 9f4baed..bd77222 100644
--- a/content/xul/document/src/nsXULDocument.cpp
+++ b/content/xul/document/src/nsXULDocument.cpp
@@ -342,6 +342,9 @@ NS_IMPL_CYCLE_COLLECTION_TRAVERSE_BEGIN_INHERITED(nsXULDocument, nsXMLDocument)
                                                      nsIScriptGlobalObjectOwner)
     NS_IMPL_CYCLE_COLLECTION_TRAVERSE_NSCOMPTR_AMBIGUOUS(mMasterPrototype,
                                                      nsIScriptGlobalObjectOwner)
+    NS_IMPL_CYCLE_COLLECTION_TRAVERSE_NSCOMPTR_AMBIGUOUS(mCommandDispatcher,
+                                                     nsIDOMXULCommandDispatcher)
+
     PRUint32 i, count = tmp->mPrototypes.Length();
     for (i = 0; i < count; ++i) {
         cb.NoteXPCOMChild(NS_STATIC_CAST(nsIScriptGlobalObjectOwner*, 
@@ -1928,10 +1931,8 @@ nsXULDocument::Init()
     NS_ENSURE_SUCCESS(rv, rv);
 
     // Create our command dispatcher and hook it up.
-    rv = nsXULCommandDispatcher::Create(this,
-                                        getter_AddRefs(mCommandDispatcher));
-    NS_ASSERTION(NS_SUCCEEDED(rv), """"unable to create a focus tracker"""");
-    if (NS_FAILED(rv)) return rv;
+    mCommandDispatcher = new nsXULCommandDispatcher(this);
+    NS_ENSURE_TRUE(mCommandDispatcher, NS_ERROR_OUT_OF_MEMORY);
 
     // this _could_ fail; e.g., if we've tried to grab the local store
     // before profiles have initialized. If so, no big deal; nothing"""
6735b8fabbd8a7f2b76804072e8067a73a7b6d9c,103168,369150,Olli.Pettay%helsinki.fi,"Bug 369150, r+sr=roc
",1174607875,"""diff --git a/layout/generic/nsFrameSetFrame.cpp b/layout/generic/nsFrameSetFrame.cpp
index 0e73a2a..01ce6f7 100644
--- a/layout/generic/nsFrameSetFrame.cpp
+++ b/layout/generic/nsFrameSetFrame.cpp
@@ -1009,13 +1009,19 @@ nsHTMLFramesetFrame::Reflow(nsPresContext*          aPresContext,
   height -= (mNumRows - 1) * borderWidth;
   if (height < 0) height = 0;
 
+  nsCOMPtr<nsIFrameSetElement> ourContent(do_QueryInterface(mContent));
+  NS_ASSERTION(ourContent, """"Someone gave us a broken frameset element!"""");
+  const nsFramesetSpec* rowSpecs = nsnull;
+  const nsFramesetSpec* colSpecs = nsnull;
+  PRInt32 rows = 0;
+  PRInt32 cols = 0;
+  ourContent->GetRowSpec(&rows, &rowSpecs);
+  ourContent->GetColSpec(&cols, &colSpecs);
+  // If the number of cols or rows has changed, the frame for the frameset
+  // will be re-created.
+  NS_ENSURE_STATE(mNumRows == rows && mNumCols == cols);
+
   if (!mDrag.mActive) {
-    nsCOMPtr<nsIFrameSetElement> ourContent(do_QueryInterface(mContent));
-    NS_ASSERTION(ourContent, """"Someone gave us a broken frameset element!"""");
-    const nsFramesetSpec* rowSpecs = nsnull;
-    const nsFramesetSpec* colSpecs = nsnull;
-    ourContent->GetRowSpec(&mNumRows, &rowSpecs);
-    ourContent->GetColSpec(&mNumCols, &colSpecs);
     CalculateRowCol(aPresContext, width, mNumCols, colSpecs, mColSizes);
     CalculateRowCol(aPresContext, height, mNumRows, rowSpecs, mRowSizes);
   }"""
b9e0ad447042db3b06709657344e1056d4c8846e,103271,351102,igor.bukanov%gmail.com,"Bug 351102: Simpler exception handling implementation, r=brendan
",1174375862,"""diff --git a/js/src/jsemit.c b/js/src/jsemit.c
index c7bf79f..e076bd2 100644
--- a/js/src/jsemit.c
+++ b/js/src/jsemit.c
@@ -4836,12 +4836,15 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
             /*
              * The emitted code for a catch block looks like:
              *
-             * [ leaveblock ]                      only if 2nd+ catch block
+             * [throwing]                          only if 2nd+ catch block
+             * [leaveblock]                        only if 2nd+ catch block
              * enterblock                          with SRC_CATCH
              * exception
+             * [dup]                               only if catchguard
              * setlocalpop <slot>                  or destructuring code
              * [< catchguard code >]               if there's a catchguard
              * [ifeq <offset to next catch block>]         """" """"
+             * [pop]                               only if catchguard
              * < catch block contents >
              * leaveblock
              * goto <end of catch blocks>          non-local; finally applies
@@ -4861,12 +4864,20 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
                     EMIT_UINT16_IMM_OP(JSOP_SETSP, (jsatomid)depth);
                     cg->stackDepth = depth;
                 } else {
-                    JS_ASSERT(cg->stackDepth == depth);
-
                     /* Fix up and clean up previous catch block. */
                     CHECK_AND_SET_JUMP_OFFSET_AT(cx, cg, guardJump);
 
-                    /* Set cx->throwing to protect cx->exception from the GC. */
+                    /*
+                     * Account for the pushed exception object that we still
+                     * have after the jumping from the previous guard.
+                     */
+                    JS_ASSERT(cg->stackDepth == depth);
+                    cg->stackDepth = depth + 1;
+
+                    /*
+                     * Move exception back to cx->exception to prepare for
+                     * the next catch.
+                     */
                     if (!js_Emit1(cx, cg, JSOP_THROWING) < 0)
                         return JS_FALSE;
 
@@ -4930,69 +4941,53 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
         }
 
         /*
-         * We emit a [setsp][gosub] sequence for running finally code while
-         * letting an uncaught exception pass thrown from within the try in a
-         * try-finally.  The [gosub] and [retsub] opcodes will take care of
-         * stacking and rethrowing any exception pending across the finally.
-         *
-         * For rethrowing after a try-catch(guard)-finally, we have a problem:
-         * all the guards have mismatched, leaving cx->exception still set but
-         * cx->throwing clear, so that no exception appears to be pending for
-         * [gosub] to stack and [retsub] to rethrow.  We must emit a special
-         * [throwing] opcode in front of the [setsp][gosub] finally sequence.
-         * This opcode will restore cx->throwing to true before running the
-         * finally.
-         *
-         * For rethrowing after a try-catch(guard) without a finally, we emit
-         * [throwing] before the [setsp][exception][throw] rethrow sequence.
+         * Last catch guard jumps to the rethrow code sequence if none of the
+         * guards match. Target guardJump at the beginning of the rethrow
+         * sequence, just in case a guard expression throws and leaves the
+         * stack unbalanced.
          */
-        if (pn->pn_kid3 || (lastCatch && lastCatch->pn_kid2)) {
+        if (lastCatch && lastCatch->pn_kid2) {
+            CHECK_AND_SET_JUMP_OFFSET_AT(cx, cg, GUARDJUMP(stmtInfo));
+
+            /* Sync the stack to take into account pushed exception. */
+            JS_ASSERT(cg->stackDepth == depth);
+            cg->stackDepth = depth + 1;
+
             /*
-             * Last catch guard jumps to the rethrow code sequence if none
-             * of the guards match.  Target guardJump at the beginning of the
-             * rethrow sequence, just in case a guard expression throws and
-             * leaves the stack unbalanced.
+             * Rethrow the exception, delegating executing of finally if any
+             * to the exception handler.
              */
-            if (lastCatch && lastCatch->pn_kid2) {
-                CHECK_AND_SET_JUMP_OFFSET_AT(cx, cg, GUARDJUMP(stmtInfo));
-                if (pn->pn_kid3 && !js_Emit1(cx, cg, JSOP_THROWING) < 0)
-                    return JS_FALSE;
+            if (js_NewSrcNote(cx, cg, SRC_HIDDEN) < 0 ||
+                js_Emit1(cx, cg, JSOP_THROW) < 0) {
+                return JS_FALSE;
             }
+        }
+
+        JS_ASSERT(cg->stackDepth == depth);
 
+        /* Emit finally handler if any. */
+        if (pn->pn_kid3) {
             /*
-             * Emit another stack fixup, because the catch could itself
-             * throw an exception in an unbalanced state, and the finally
-             * may need to call functions.  If there is no finally, only
-             * guarded catches, the rethrow code below nevertheless needs
-             * stack fixup.
+             * We emit [setsp][gosub] to call try-finally when an exception is
+             * thrown from try or try-catch blocks. The [gosub] and [retsub]
+             * opcodes will take care of stacking and rethrowing any exception
+             * pending across the finally.
              */
             finallyCatch = CG_OFFSET(cg);
             EMIT_UINT16_IMM_OP(JSOP_SETSP, (jsatomid)depth);
-            cg->stackDepth = depth;
 
-            if (pn->pn_kid3) {
-                jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH,
-                                      &GOSUBS(stmtInfo));
-                if (jmp < 0)
-                    return JS_FALSE;
+            jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH,
+                                  &GOSUBS(stmtInfo));
+            if (jmp < 0)
+                return JS_FALSE;
 
-                JS_ASSERT(cg->stackDepth == depth);
-                JS_ASSERT((uintN)depth <= cg->maxStackDepth);
-            } else {
-                if (js_NewSrcNote(cx, cg, SRC_HIDDEN) < 0 ||
-                    js_Emit1(cx, cg, JSOP_EXCEPTION) < 0 ||
-                    js_NewSrcNote(cx, cg, SRC_HIDDEN) < 0 ||
-                    js_Emit1(cx, cg, JSOP_THROW) < 0) {
-                    return JS_FALSE;
-                }
-            }
-        }
+            JS_ASSERT(cg->stackDepth == depth);
+            JS_ASSERT((uintN)depth <= cg->maxStackDepth);
 
-        /*
-         * If we have a finally, it belongs here, and we have to fix up the
-         * gosubs that might have been emitted before non-local jumps.
-         */
-        if (pn->pn_kid3) {
+            /*
+             * Fix up the gosubs that might have been emitted before non-local
+             * jumps to the finally code.
+             */
             if (!BackPatch(cx, cg, GOSUBS(stmtInfo), CG_NEXT(cg), JSOP_GOSUB))
                 return JS_FALSE;
 
@@ -5077,6 +5072,18 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
         /* Pick up the pending exception and bind it to the catch variable. */
         if (js_Emit1(cx, cg, JSOP_EXCEPTION) < 0)
             return JS_FALSE;
+
+        /*
+         * Dup the exception object if there is a guard for rethrowing to use
+         * it later when rethrowing or in other catches.
+         */
+        if (pn->pn_kid2) {
+            if (js_NewSrcNote(cx, cg, SRC_HIDDEN) < 0 ||
+                js_Emit1(cx, cg, JSOP_DUP) < 0) {
+                return JS_FALSE;
+            }
+        }
+
         pn2 = pn->pn_kid1;
         switch (pn2->pn_type) {
 #if JS_HAS_DESTRUCTURING
@@ -5112,6 +5119,12 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
             if (guardJump < 0)
                 return JS_FALSE;
             GUARDJUMP(*stmt) = guardJump;
+
+            /* Pop duplicated exception object as we no longer need it. */
+            if (js_NewSrcNote(cx, cg, SRC_HIDDEN) < 0 ||
+                js_Emit1(cx, cg, JSOP_POP) < 0) {
+                return JS_FALSE;
+            }
         }
 
         /* Emit the catch body. */
@@ -5134,20 +5147,6 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
         break;
 
       case TOK_RETURN:
-        /*
-         * If we're in a finally clause, then returning must clear any pending
-         * exception state.  Failure to do so could cause a subsequent
-         * non-throwing API failure or native use of JS_IsPendingException to
-         * mislead.
-         */
-        if (js_InStatement(&cg->treeContext, STMT_SUBROUTINE) &&
-            (js_NewSrcNote(cx, cg, SRC_HIDDEN) < 0 ||
-             js_Emit1(cx, cg, JSOP_EXCEPTION) < 0 ||
-             js_NewSrcNote(cx, cg, SRC_HIDDEN) < 0 ||
-             js_Emit1(cx, cg, JSOP_POP) < 0)) {
-            return JS_FALSE;
-        }
-
         /* Push a return value */
         pn2 = pn->pn_kid;
         if (pn2) {
diff --git a/js/src/jsgc.c b/js/src/jsgc.c
index 39fe946..67272da 100644
--- a/js/src/jsgc.c
+++ b/js/src/jsgc.c
@@ -2964,8 +2964,13 @@ restart:
         /* Mark other roots-by-definition in acx. */
         GC_MARK(cx, acx->globalObject, """"global object"""");
         MarkWeakRoots(cx, &acx->weakRoots);
-        if (acx->throwing && JSVAL_IS_GCTHING(acx->exception))
-            GC_MARK(cx, JSVAL_TO_GCTHING(acx->exception), """"exception"""");
+        if (acx->throwing) {
+            if (JSVAL_IS_GCTHING(acx->exception))
+                GC_MARK(cx, JSVAL_TO_GCTHING(acx->exception), """"exception"""");
+        } else {
+            /* Avoid keeping GC-ed junk stored in JSContext.exception. */
+            acx->exception = JSVAL_NULL;
+        }
 #if JS_HAS_LVALUE_RETURN
         if (acx->rval2set && JSVAL_IS_GCTHING(acx->rval2))
             GC_MARK(cx, JSVAL_TO_GCTHING(acx->rval2), """"rval2"""");
diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index 0228eb2..ed27a06 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -5364,7 +5364,12 @@ interrupt:
 
           BEGIN_CASE(JSOP_GOSUBX)
             JS_ASSERT(cx->exception != JSVAL_HOLE);
-            lval = cx->throwing ? cx->exception : JSVAL_HOLE;
+            if (!cx->throwing) {
+                lval = JSVAL_HOLE;
+            } else {
+                lval = cx->exception;
+                cx->throwing = JS_FALSE;
+            }
             PUSH(lval);
             i = PTRDIFF(pc, script->main, jsbytecode) + JSOP_GOSUBX_LENGTH;
             len = GET_JUMPX_OFFSET(pc);
@@ -5392,6 +5397,7 @@ interrupt:
           END_VARLEN_CASE
 
           BEGIN_CASE(JSOP_EXCEPTION)
+            JS_ASSERT(cx->throwing);
             PUSH(cx->exception);
             cx->throwing = JS_FALSE;
           END_CASE(JSOP_EXCEPTION)
@@ -5399,9 +5405,11 @@ interrupt:
           BEGIN_CASE(JSOP_THROWING)
             JS_ASSERT(!cx->throwing);
             cx->throwing = JS_TRUE;
+            cx->exception = POP_OPND();
           END_CASE(JSOP_THROWING)
 
           BEGIN_CASE(JSOP_THROW)
+            JS_ASSERT(!cx->throwing);
             cx->throwing = JS_TRUE;
             cx->exception = POP_OPND();
             ok = JS_FALSE;
diff --git a/js/src/jsopcode.c b/js/src/jsopcode.c
index 4a56c97..1baf867 100644
--- a/js/src/jsopcode.c
+++ b/js/src/jsopcode.c
@@ -2163,15 +2163,8 @@ Decompile(SprintStack *ss, jsbytecode *pc, intN nb)
               }
 
               case JSOP_EXCEPTION:
-                /*
-                 * The only other JSOP_EXCEPTION cases occur as part of a code
-                 * sequence that follows a SRC_CATCH-annotated JSOP_ENTERBLOCK
-                 * or that precedes a SRC_HIDDEN-annotated JSOP_POP emitted
-                 * when returning from within a finally clause.
-                 */
-                sn = js_GetSrcNote(jp->script, pc);
-                LOCAL_ASSERT(sn && SN_TYPE(sn) == SRC_HIDDEN);
-                todo = -2;
+                /* The catch decompiler handles this op itself. */
+                LOCAL_ASSERT(JS_FALSE);
                 break;
 
               case JSOP_POP:
@@ -2385,7 +2378,17 @@ Decompile(SprintStack *ss, jsbytecode *pc, intN nb)
                     pc += oplen;
                     LOCAL_ASSERT(*pc == JSOP_EXCEPTION);
                     pc += JSOP_EXCEPTION_LENGTH;
-
+                    if (*pc == JSOP_DUP) {
+                        sn2 = js_GetSrcNote(jp->script, pc);
+                        if (sn2) {
+                            /*
+                             * A dup that pushes the exception object to use
+                             * after if the exception guard is false.
+                             */
+                            LOCAL_ASSERT(SN_TYPE(sn2) == SRC_HIDDEN);
+                            pc += JSOP_DUP_LENGTH;
+                        }
+                    }
 #if JS_HAS_DESTRUCTURING
                     if (*pc == JSOP_DUP) {
                         pc = DecompileDestructuring(ss, pc, endpc);
diff --git a/js/src/jsopcode.tbl b/js/src/jsopcode.tbl
index d383866..0fd66be 100644
--- a/js/src/jsopcode.tbl
+++ b/js/src/jsopcode.tbl
@@ -359,8 +359,8 @@ OPDEF(JSOP_LOOKUPSWITCHX, 148,""""lookupswitchx"""",NULL,  -1,  1,  0,  0,  JOF_LOOKUP
 OPDEF(JSOP_BACKPATCH,     149,""""backpatch"""",NULL,       3,  0,  0,  0,  JOF_JUMP|JOF_BACKPATCH)
 OPDEF(JSOP_BACKPATCH_POP, 150,""""backpatch_pop"""",NULL,   3,  1,  0,  0,  JOF_JUMP|JOF_BACKPATCH)
 
-/* Set cx->throwing where cx->exception was already set, to trigger rethrow. */
-OPDEF(JSOP_THROWING,      151,""""throwing"""", NULL,       1,  0,  0,  0,  JOF_BYTE)
+/* Set pending exception from the stack, to trigger rethrow. */
+OPDEF(JSOP_THROWING,      151,""""throwing"""", NULL,       1,  1,  0,  0,  JOF_BYTE)
 
 /* Set and get return value pseudo-register in stack frame. */
 OPDEF(JSOP_SETRVAL,       152,""""setrval"""",  NULL,       1,  1,  0,  0,  JOF_BYTE)
diff --git a/js/src/jsxdrapi.h b/js/src/jsxdrapi.h
index 084e9a2..eba2de1 100644
--- a/js/src/jsxdrapi.h
+++ b/js/src/jsxdrapi.h
@@ -200,7 +200,7 @@ JS_XDRFindClassById(JSXDRState *xdr, uint32 id);
  * before deserialization of bytecode.  If the saved version does not match
  * the current version, abort deserialization and invalidate the file.
  */
-#define JSXDR_BYTECODE_VERSION      (0xb973c0de - 8)
+#define JSXDR_BYTECODE_VERSION      (0xb973c0de - 9)
 
 /*
  * Library-private functions."""
929416e975c923c895d945eff476f53525940b9b,103299,366123,igor.bukanov%gmail.com,"Bug 366123: Patch brendan@mozilla.org, r=myself
",1174340805,"""diff --git a/js/src/jsemit.c b/js/src/jsemit.c
index be953a3..c7bf79f 100644
--- a/js/src/jsemit.c
+++ b/js/src/jsemit.c
@@ -805,7 +805,9 @@ OptimizeSpanDeps(JSContext *cx, JSCodeGenerator *cg)
                       case JSOP_DEFAULT:      op = JSOP_DEFAULTX; break;
                       case JSOP_TABLESWITCH:  op = JSOP_TABLESWITCHX; break;
                       case JSOP_LOOKUPSWITCH: op = JSOP_LOOKUPSWITCHX; break;
-                      default:                JS_ASSERT(0);
+                      default:
+                        ReportStatementTooLarge(cx, cg);
+                        return JS_FALSE;
                     }
                     *pc = (jsbytecode) op;
 """
88925d7c58ac2960113fff4619d99b5b72955c33,103534,372237,roc+%cs.cmu.edu,"Bug 372237. Never set TRUNCATED reflow status if the available height is unconstrained, even if the height happens to exceed the constant we use to indicate unconstrained height. r+sr=dbaron
",1173645255,"""diff --git a/layout/generic/nsHTMLReflowState.cpp b/layout/generic/nsHTMLReflowState.cpp
index 5ff8d4c..ab38764 100644
--- a/layout/generic/nsHTMLReflowState.cpp
+++ b/layout/generic/nsHTMLReflowState.cpp
@@ -2106,3 +2106,16 @@ nsHTMLReflowState::ComputeMinMaxValues(nscoord aContainingBlockWidth,
     mComputedMaxHeight = mComputedMinHeight;
   }
 }
+
+void
+nsHTMLReflowState::SetTruncated(const nsHTMLReflowMetrics& aMetrics,
+                                nsReflowStatus* aStatus) const
+{
+  if (availableHeight != NS_UNCONSTRAINEDSIZE &&
+      availableHeight < aMetrics.height &&
+      !mFlags.mIsTopOfPage) {
+    *aStatus |= NS_FRAME_TRUNCATED;
+  } else {
+    *aStatus &= ~NS_FRAME_TRUNCATED;
+  }
+}
diff --git a/layout/generic/nsHTMLReflowState.h b/layout/generic/nsHTMLReflowState.h
index 89a2e17..4f2d7c5 100644
--- a/layout/generic/nsHTMLReflowState.h
+++ b/layout/generic/nsHTMLReflowState.h
@@ -419,6 +419,8 @@ public:
   nscoord ComputedWidth() const { return mComputedWidth; }
   void SetComputedWidth(nscoord aComputedWidth);
 
+  void SetTruncated(const nsHTMLReflowMetrics& aMetrics, nsReflowStatus* aStatus) const;
+
 protected:
 
   void InitCBReflowState();
diff --git a/layout/generic/nsIFrame.h b/layout/generic/nsIFrame.h
index 7e5a83c..37d7924 100644
--- a/layout/generic/nsIFrame.h
+++ b/layout/generic/nsIFrame.h
@@ -367,11 +367,7 @@ typedef PRUint32 nsReflowStatus;
 #define NS_FRAME_IS_TRUNCATED(status) \
   (0 != ((status) & NS_FRAME_TRUNCATED))
 #define NS_FRAME_SET_TRUNCATION(status, aReflowState, aMetrics) \
-  if (!aReflowState.mFlags.mIsTopOfPage &&                      \
-      aReflowState.availableHeight < aMetrics.height)           \
-    status |= NS_FRAME_TRUNCATED;                               \
-  else                                                          \
-    status &= ~NS_FRAME_TRUNCATED;
+  aReflowState.SetTruncated(aMetrics, &status);
 
 //----------------------------------------------------------------------
 """
163db1765b2daa654f35ac79c34039d347e6020c,103535,372237,roc+%cs.cmu.edu,"Bug 372237. Make DoDeletingFrameSubtree skip overflowOutOfFlow child lists since they contain out-of-flow frames. r+sr=dbaron
",1173644960,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index 0905565..40422d59 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -9317,6 +9317,7 @@ DoDeletingFrameSubtree(nsFrameManager* aFrameManager,
       childListName = aFrame->GetAdditionalChildListName(childListIndex++);
     } while (childListName == nsGkAtoms::floatList    ||
              childListName == nsGkAtoms::absoluteList ||
+             childListName == nsGkAtoms::overflowOutOfFlowList ||
              childListName == nsGkAtoms::fixedList);
   } while (childListName);
 """
caff266fdf406eb1da5cee407fbf83e2f9c39e95,103800,370559,cbiesinger%web.de,"bug 370559 r+sr=darin
ignore the address part of the PASV reply
",1173228860,"""diff --git a/netwerk/protocol/ftp/src/nsFtpConnectionThread.cpp b/netwerk/protocol/ftp/src/nsFtpConnectionThread.cpp
index 3c2718e..246aa0b 100644
--- a/netwerk/protocol/ftp/src/nsFtpConnectionThread.cpp
+++ b/netwerk/protocol/ftp/src/nsFtpConnectionThread.cpp
@@ -1292,7 +1292,12 @@ nsFtpState::R_pasv() {
 
     char *ptr = response;
 
+    // Make sure to ignore the address in the PASV response (bug 370559)
     nsCAutoString host;
+    rv = mChannel->URI()->GetAsciiHost(host);
+    if (NS_FAILED(rv))
+        return FTP_ERROR;
+
     if (mIPv6ServerAddress) {
         // The returned string is of the form
         // text (|||ppp|)
@@ -1351,13 +1356,6 @@ nsFtpState::R_pasv() {
             return FTP_ERROR;
 
         port = ((PRInt32) (p0<<8)) + p1;
-        host.AppendInt(h0);
-        host.Append('.');
-        host.AppendInt(h1);
-        host.Append('.');
-        host.AppendInt(h2);
-        host.Append('.');
-        host.AppendInt(h3);
     }
 
     const char* hostStr ="""
f0f0c3e7d22e653c4501e70306da297e2dca395b,103917,360493,gavin%gavinsharp.com,"Bug 360493: add filters to password manager to also match on actionURL, patch by mconnor@mozilla.com, r=mano, sr=dveditz
",1173041062,"""diff --git a/browser/app/profile/firefox.js b/browser/app/profile/firefox.js
index 252d9f3..adfcacf 100644
--- a/browser/app/profile/firefox.js
+++ b/browser/app/profile/firefox.js
@@ -381,6 +381,7 @@ pref(""""browser.xul.error_pages.enabled"""", true);
 pref(""""signon.rememberSignons"""",              true);
 pref(""""signon.expireMasterPassword"""",         false);
 pref(""""signon.SignonFileName"""",               """"signons.txt"""");
+pref(""""signon.SignonFileName2"""",              """"signons2.txt"""");
 pref(""""signon.autofillForms"""",                true);
 
 // We want to make sure mail URLs are handled externally...
diff --git a/mail/app/profile/all-thunderbird.js b/mail/app/profile/all-thunderbird.js
index c5bf9fa..263d583 100644
--- a/mail/app/profile/all-thunderbird.js
+++ b/mail/app/profile/all-thunderbird.js
@@ -226,6 +226,7 @@ pref(""""intl.menuitems.insertseparatorbeforeaccesskeys"""",""""chrome://global/locale/in
 pref(""""signon.rememberSignons"""",              true);
 pref(""""signon.expireMasterPassword"""",         false);
 pref(""""signon.SignonFileName"""",               """"signons.txt"""");
+pref(""""signon.SignonFileName2"""",              """"signons2.txt"""");
 
 pref(""""browser.hiddenWindowChromeURL"""", """"chrome://messenger/content/hiddenWindow.xul"""");
 pref(""""network.search.url"""",""""http://cgi.netscape.com/cgi-bin/url_search.cgi?search="""");
diff --git a/minimo/customization/all.js b/minimo/customization/all.js
index 522e2f0..ebd5b50 100755
--- a/minimo/customization/all.js
+++ b/minimo/customization/all.js
@@ -672,6 +672,7 @@ pref(""""browser.cache.disk.parent_directory"""",""""\\Storage Card"""");
 pref(""""browser.cache.disk.enable"""",false);
 
 pref(""""signon.rememberSignons"""", true);
-pref(""""signon.SignonFileName"""", """"signons.txt"""");
+pref(""""signon.SignonFileName"""",  """"signons.txt"""");
+pref(""""signon.SignonFileName2"""", """"signons2.txt"""");
 
 
diff --git a/toolkit/components/passwordmgr/base/nsPasswordManager.cpp b/toolkit/components/passwordmgr/base/nsPasswordManager.cpp
index 688aa4b..798c216 100644
--- a/toolkit/components/passwordmgr/base/nsPasswordManager.cpp
+++ b/toolkit/components/passwordmgr/base/nsPasswordManager.cpp
@@ -92,6 +92,7 @@ public:
   nsString userValue;
   nsString passField;
   nsString passValue;
+  nsCString actionOrigin;
   SignonDataEntry* next;
 
   SignonDataEntry() : next(nsnull) { }
@@ -128,6 +129,7 @@ protected:
   nsString  mUserField;
   nsString  mPassword;
   nsString  mPasswordField;
+  nsCString mActionOrigin;
   PRBool    mDecrypted[2];
 };
 
@@ -145,6 +147,7 @@ nsPasswordManager::PasswordEntry::PasswordEntry(const nsACString& aKey,
     mUserField.Assign(aData->userField);
     mPassword.Assign(aData->passValue);
     mPasswordField.Assign(aData->passField);
+    mActionOrigin.Assign(aData->actionOrigin);
   }
 }
 
@@ -659,17 +662,26 @@ nsPasswordManager::ReadPasswords(nsIFile* aPasswordFile)
   if (NS_FAILED(rv))
     return NS_OK;
 
-  if (!utf8Buffer.Equals(""""#2c"""")) {
+  PRBool updateEntries = PR_FALSE;
+  PRBool writeOnFinish = PR_FALSE;
+
+  if (utf8Buffer.Equals(""""#2c"""")) {
+    // we've hit an older version of the file, but we can import it
+    updateEntries = PR_TRUE;
+
+    // make sure we write the new file out so we only do this once
+    writeOnFinish = PR_TRUE;
+  } else if (!utf8Buffer.Equals(""""#2d"""")) {
     NS_ERROR(""""Unexpected version header in signon file"""");
     return NS_OK;
   }
 
-  enum { STATE_REJECT, STATE_REALM, STATE_USERFIELD, STATE_USERVALUE,
-         STATE_PASSFIELD, STATE_PASSVALUE } state = STATE_REJECT;
+  enum { STATE_REJECT, STATE_REALM, STATE_USERFIELD,
+         STATE_USERVALUE, STATE_PASSFIELD, STATE_PASSVALUE,
+         STATE_ACTION_ORIGIN } state = STATE_REJECT;
 
   nsCAutoString realm;
   SignonDataEntry* entry = nsnull;
-  PRBool writeOnFinish = PR_FALSE;
 
   do {
     rv = lineStream->ReadLine(utf8Buffer, &moreData);
@@ -739,7 +751,20 @@ nsPasswordManager::ReadPasswords(nsIFile* aPasswordFile)
 
       CopyUTF8toUTF16(utf8Buffer, entry->passValue);
 
+      // if we're updating entries from an older file skip the action url
+      if (updateEntries)
+        state = STATE_USERFIELD;
+      else
+        state = STATE_ACTION_ORIGIN;
+      break;
+
+    case STATE_ACTION_ORIGIN:
+      NS_ASSERTION(entry, """"bad state"""");
+
+      entry->actionOrigin.Assign(utf8Buffer);
+
       state = STATE_USERFIELD;
+
       break;
     }
   } while (moreData);
@@ -956,7 +981,7 @@ nsPasswordManager::Notify(nsIContent* aFormNode,
       // Note that we don't prompt the user if only the password doesn't match;
       // we instead just silently change the stored password.
 
-      nsAutoString userValue, passValue, userFieldName, passFieldName;
+      nsAutoString userValue, passValue, userFieldName, passFieldName, actionOrigin;
 
       if (userField) {
         userField->GetValue(userValue);
@@ -971,6 +996,7 @@ nsPasswordManager::Notify(nsIContent* aFormNode,
         return NS_OK;
 
       SignonHashEntry* hashEnt;
+      nsCAutoString formActionOrigin;
 
       if (mSignonTable.Get(realm, &hashEnt)) {
 
@@ -989,13 +1015,26 @@ nsPasswordManager::Notify(nsIContent* aFormNode,
               if (NS_FAILED(DecryptData(entry->passValue, buffer)))
                 return NS_OK;
 
+              PRBool writePasswords = PR_FALSE;
+              
               if (!buffer.Equals(passValue)) {
                 if (NS_FAILED(EncryptDataUCS2(passValue, entry->passValue)))
                   return NS_OK;
 
-                WritePasswords(mSignonFile);
+                writePasswords = PR_TRUE;
+              }
+
+              if (NS_SUCCEEDED(GetActionRealm(formElement, formActionOrigin)) &&
+                  !entry->actionOrigin.Equals(formActionOrigin)) {
+                // update the action URL
+                entry->actionOrigin.Assign(formActionOrigin);
+
+                writePasswords = PR_TRUE;
               }
 
+              if (writePasswords)
+                WritePasswords(mSignonFile);
+
               return NS_OK;
             }
           }
@@ -1026,9 +1065,9 @@ nsPasswordManager::Notify(nsIContent* aFormNode,
                    notNowButtonText;
       GetLocalizedString(NS_LITERAL_STRING(""""savePasswordTitle""""), dialogTitle);
 
-      GetLocalizedString(NS_LITERAL_STRING(""""neverForSiteButtonText""""), 
+      GetLocalizedString(NS_LITERAL_STRING(""""neverForSiteButtonText""""),
                          neverButtonText);
-      GetLocalizedString(NS_LITERAL_STRING(""""rememberButtonText""""), 
+      GetLocalizedString(NS_LITERAL_STRING(""""rememberButtonText""""),
                          rememberButtonText);
       GetLocalizedString(NS_LITERAL_STRING(""""notNowButtonText""""),
                          notNowButtonText);
@@ -1050,6 +1089,15 @@ nsPasswordManager::Notify(nsIContent* aFormNode,
         SignonDataEntry* entry = new SignonDataEntry();
         entry->userField.Assign(userFieldName);
         entry->passField.Assign(passFieldName);
+
+        // save the hostname of the action URL
+        if (NS_FAILED(GetActionRealm(formElement, formActionOrigin))) {
+          delete entry;
+          return NS_OK;
+        }
+
+        entry->actionOrigin.Assign(formActionOrigin);
+
         if (NS_FAILED(EncryptDataUCS2(userValue, entry->userValue)) ||
             NS_FAILED(EncryptDataUCS2(passValue, entry->passValue))) {
           delete entry;
@@ -1275,7 +1323,7 @@ public:
   PRInt32     mDefaultIndex;
   PRUint16    mResult;
 };
-  
+
 UserAutoComplete::UserAutoComplete(const nsACString& aHost,
                                    const nsAString& aSearchString)
   : mHost(aHost),
@@ -1427,12 +1475,28 @@ nsPasswordManager::AutoCompleteSearch(const nsAString& aSearchString,
 
       mAutoCompletingField = aElement;
 
+      nsCOMPtr<nsIDOMHTMLFormElement> formEl;
+      aElement->GetForm(getter_AddRefs(formEl));
+      if (!formEl)
+        return NS_OK;
+ 
+      nsCOMPtr<nsIForm> form = do_QueryInterface(formEl);
+      nsCAutoString formActionOrigin;
+ 
+      if (NS_FAILED(GetActionRealm(form, formActionOrigin)))
+        return NS_OK;
+
       for (SignonDataEntry* e = hashEnt->head; e; e = e->next) {
 
         nsAutoString userValue;
         if (NS_FAILED(DecryptData(e->userValue, userValue)))
           return NS_ERROR_FAILURE;
 
+        // if we don't match actionOrigin, don't count this as a match
+        if (!e->actionOrigin.IsEmpty() &&
+            !e->actionOrigin.Equals(formActionOrigin))
+          continue;
+
         if (aSearchString.Length() <= userValue.Length() &&
             StringBeginsWith(userValue, aSearchString, nsCaseInsensitiveStringComparator())) {
           PRUnichar* data = ToNewUnicode(userValue);
@@ -1545,6 +1609,10 @@ nsPasswordManager::WriteSignonEntryEnumerator(const nsACString& aKey,
     buffer.Assign(NS_ConvertUTF16toUTF8(e->passValue));
     buffer.Append(NS_LINEBREAK);
     stream->Write(buffer.get(), buffer.Length(), &bytesWritten);
+
+    buffer.Assign(e->actionOrigin);
+    buffer.Append(NS_LINEBREAK);
+    stream->Write(buffer.get(), buffer.Length(), &bytesWritten);
   }
 
   buffer.Assign(""""."""" NS_LINEBREAK);
@@ -1561,8 +1629,10 @@ nsPasswordManager::LoadPasswords()
     return;
 
   nsXPIDLCString signonFile;
-  mPrefBranch->GetCharPref(""""SignonFileName"""", getter_Copies(signonFile));
-  NS_ASSERTION(!signonFile.IsEmpty(), """"Fallback for signon filename not present"""");
+  nsresult rv;
+  rv = mPrefBranch->GetCharPref(""""SignonFileName2"""", getter_Copies(signonFile));
+  if (NS_FAILED(rv))
+    signonFile.Assign(NS_LITERAL_CSTRING(""""signons2.txt""""));
 
   NS_GetSpecialDirectory(NS_APP_USER_PROFILE_50_DIR, getter_AddRefs(mSignonFile));
   if (!mSignonFile)
@@ -1573,8 +1643,26 @@ nsPasswordManager::LoadPasswords()
   nsCAutoString path;
   mSignonFile->GetNativePath(path);
 
-  if (NS_SUCCEEDED(ReadPasswords(mSignonFile)))
-    sPasswordsLoaded = PR_TRUE;
+  PRBool signonExists = PR_FALSE;
+  mSignonFile->Exists(&signonExists);
+  if (signonExists) {
+    if (NS_SUCCEEDED(ReadPasswords(mSignonFile)))
+      sPasswordsLoaded = PR_TRUE;
+  } else {
+    // no current signons file, look for an older version
+    rv = mPrefBranch->GetCharPref(""""SignonFileName"""", getter_Copies(signonFile));
+    if (NS_FAILED(rv))
+      signonFile.Assign(NS_LITERAL_CSTRING(""""signons.txt""""));
+
+    nsCOMPtr<nsIFile> oldSignonFile;
+    mSignonFile->GetParent(getter_AddRefs(oldSignonFile));
+    oldSignonFile->AppendNative(signonFile);
+
+    if (NS_SUCCEEDED(ReadPasswords(oldSignonFile))) {
+      sPasswordsLoaded = PR_TRUE;
+      oldSignonFile->Remove(PR_FALSE);
+    }
+  }
 }
 
 void
@@ -1590,7 +1678,7 @@ nsPasswordManager::WritePasswords(nsIFile* aPasswordFile)
   PRUint32 bytesWritten;
 
   // File header
-  nsCAutoString buffer(""""#2c"""" NS_LINEBREAK);
+  nsCAutoString buffer(""""#2d"""" NS_LINEBREAK);
   fileStream->Write(buffer.get(), buffer.Length(), &bytesWritten);
 
   // Write out the reject list.
@@ -1796,6 +1884,8 @@ nsPasswordManager::FillDocument(nsIDOMDocument* aDomDoc)
   PRBool prefillForm = PR_TRUE;
   mPrefBranch->GetBoolPref(""""autofillForms"""", &prefillForm);
 
+  nsCAutoString formActionOrigin;
+
   // We can auto-prefill the username and password if there is only
   // one stored login that matches the username and password field names
   // on the form in question.  Note that we only need to worry about a
@@ -1813,8 +1903,12 @@ nsPasswordManager::FillDocument(nsIDOMDocument* aDomDoc)
     nsCOMPtr<nsIDOMHTMLInputElement> temp;
     nsAutoString fieldType;
 
+    // before we start iterating, make sure we have the action host
+    if (NS_FAILED(GetActionRealm(form, formActionOrigin)))
+      return NS_OK;
+
     for (SignonDataEntry* e = hashEnt->head; e; e = e->next) {
-      
+
       nsCOMPtr<nsISupports> foundNode;
       if (!(e->userField).IsEmpty()) {
         form->ResolveName(e->userField, getter_AddRefs(foundNode));
@@ -1923,6 +2017,11 @@ nsPasswordManager::FillDocument(nsIDOMDocument* aDomDoc)
         continue;
       }
 
+      // if we don't match actionOrigin, don't count this as a match
+      if (!e->actionOrigin.IsEmpty() &&
+          !e->actionOrigin.Equals(formActionOrigin))
+        continue;
+
       if (!oldUserValue.IsEmpty() && prefillForm) {
         // The page has prefilled a username.
         // If it matches any of our saved usernames, prefill the password
@@ -1962,9 +2061,6 @@ nsPasswordManager::FillDocument(nsIDOMDocument* aDomDoc)
     // and fill in the username and password  only if the HTML didn't prefill
     // the username.
     if (firstMatch && !attachedToInput) {
-      if (userField)
-        AttachToInput(userField);
-
       if (!prefilledUser && prefillForm) {
         nsAutoString buffer;
 
@@ -1980,6 +2076,9 @@ nsPasswordManager::FillDocument(nsIDOMDocument* aDomDoc)
 
         passField->SetValue(buffer);
       }
+
+      if (userField)
+        AttachToInput(userField);
     }
   }
 
@@ -2035,6 +2134,12 @@ nsPasswordManager::FillPassword(nsIDOMEvent* aEvent)
     return NS_OK;
 
   nsCOMPtr<nsIForm> form = do_QueryInterface(formEl);
+  nsCAutoString formActionOrigin;
+  GetActionRealm(form, formActionOrigin);
+  if (NS_FAILED(GetActionRealm(form, formActionOrigin)) ||
+      !foundEntry->actionOrigin.Equals(formActionOrigin))
+    return NS_OK;
+  
   nsCOMPtr<nsISupports> foundNode;
   form->ResolveName(foundEntry->passField, getter_AddRefs(foundNode));
   nsCOMPtr<nsIDOMHTMLInputElement> passField = do_QueryInterface(foundNode);
@@ -2113,3 +2218,20 @@ nsPasswordManager::GetLocalizedString(const nsAString& key,
                                  getter_Copies(str));
   aResult.Assign(str);
 }
+
+/* static */ nsresult
+nsPasswordManager::GetActionRealm(nsIForm* aForm, nsCString& aURL)
+{
+  nsCOMPtr<nsIURI> actionURI;
+  nsCAutoString formActionOrigin;
+
+  if (NS_FAILED(aForm->GetActionURL(getter_AddRefs(actionURI))) ||
+      !actionURI)
+    return NS_ERROR_FAILURE;
+
+  if (!GetPasswordRealm(actionURI, formActionOrigin))
+    return NS_ERROR_FAILURE;
+
+  aURL.Assign(formActionOrigin);
+  return NS_OK;
+}
diff --git a/toolkit/components/passwordmgr/base/nsPasswordManager.h b/toolkit/components/passwordmgr/base/nsPasswordManager.h
index 7161116..f56a542 100644
--- a/toolkit/components/passwordmgr/base/nsPasswordManager.h
+++ b/toolkit/components/passwordmgr/base/nsPasswordManager.h
@@ -58,6 +58,7 @@ class nsIStringBundle;
 class nsIComponentManager;
 class nsIContent;
 class nsIDOMWindowInternal;
+class nsIForm;
 class nsIURI;
 class nsIDOMHTMLInputElement;
 class nsIAutoCompleteResult;
@@ -151,7 +152,9 @@ protected:
   nsresult FillDocument(nsIDOMDocument* aDomDoc);
   nsresult FillPassword(nsIDOMEvent* aEvent);
   void AttachToInput(nsIDOMHTMLInputElement* aElement);
-  PRBool GetPasswordRealm(nsIURI* aURI, nsACString& aRealm);
+  static PRBool GetPasswordRealm(nsIURI* aURI, nsACString& aRealm);
+  
+  static nsresult GetActionRealm(nsIForm* aForm, nsCString& aURL);
 
   static PLDHashOperator PR_CALLBACK FindEntryEnumerator(const nsACString& aKey,
                                                          SignonHashEntry* aEntry,"""
5da0bac0ae73069618eee7b5c6ab7ae0f754096f,103967,336744,Olli.Pettay%helsinki.fi,"Bug 336744, r+sr=roc
",1172820085,"""diff --git a/layout/xul/base/src/nsPopupSetFrame.cpp b/layout/xul/base/src/nsPopupSetFrame.cpp
index b45231c..1921b70 100644
--- a/layout/xul/base/src/nsPopupSetFrame.cpp
+++ b/layout/xul/base/src/nsPopupSetFrame.cpp
@@ -538,6 +538,7 @@ nsPopupSetFrame::OpenPopup(nsPopupFrameList* aEntry, PRBool aActivateFlag)
   nsWeakFrame weakFrame(this);
   nsIFrame* activeChild = aEntry->mPopupFrame;
   nsWeakFrame weakPopupFrame(activeChild);
+  nsRefPtr<nsPresContext> presContext = GetPresContext();
   nsCOMPtr<nsIContent> popupContent = aEntry->mPopupContent;
   PRBool createHandlerSucceeded = aEntry->mCreateHandlerSucceeded;
   nsAutoString popupType = aEntry->mPopupType;
@@ -564,7 +565,7 @@ nsPopupSetFrame::OpenPopup(nsPopupFrameList* aEntry, PRBool aActivateFlag)
     }
   }
   else {
-    if (createHandlerSucceeded && !OnDestroy(aEntry->mPopupContent))
+    if (createHandlerSucceeded && !OnDestroy(popupContent))
       return;
 
     // Unregister, but not if we're a tooltip
@@ -579,11 +580,10 @@ nsPopupSetFrame::OpenPopup(nsPopupFrameList* aEntry, PRBool aActivateFlag)
     if (childPopup)
       childPopup->RemoveKeyboardNavigator();
 
-    nsRefPtr<nsPresContext> presContext = GetPresContext();
-    nsCOMPtr<nsIContent> content = aEntry->mPopupContent;
-    ActivatePopup(aEntry, PR_FALSE);
+    if (weakPopupFrame.IsAlive())
+      ActivatePopup(aEntry, PR_FALSE);
 
-    OnDestroyed(presContext, content);
+    OnDestroyed(presContext, popupContent);
   }
 
   if (weakFrame.IsAlive()) {
@@ -742,11 +742,10 @@ nsPopupSetFrame::OnDestroy(nsIContent* aPopupContent)
                      nsMouseEvent::eReal);
 
   if (aPopupContent) {
-    nsIPresShell *shell = GetPresContext()->GetPresShell();
+    nsCOMPtr<nsIPresShell> shell = GetPresContext()->GetPresShell();
     if (shell) {
       nsresult rv = shell->HandleDOMEventWithTarget(aPopupContent, &event,
                                                     &status);
-      // shell may no longer be alive, don't use it here unless you keep a ref
       if ( NS_FAILED(rv) || status == nsEventStatus_eConsumeNoDefault )
         return PR_FALSE;
     }
@@ -763,11 +762,10 @@ nsPopupSetFrame::OnDestroyed(nsPresContext* aPresContext,
                      nsMouseEvent::eReal);
 
   if (aPopupContent && aPresContext) {
-    nsIPresShell *shell = aPresContext->GetPresShell();
+    nsCOMPtr<nsIPresShell> shell = aPresContext->GetPresShell();
     if (shell) {
       nsresult rv = shell->HandleDOMEventWithTarget(aPopupContent, &event,
                                                     &status);
-      // shell may no longer be alive, don't use it here unless you keep a ref
       if ( NS_FAILED(rv) || status == nsEventStatus_eConsumeNoDefault )
         return PR_FALSE;
     }"""
233116830a7c3211050bba5de9e17fa5bf8371df,104144,367121,crowder%fiverocks.com,"Bug 367121: thread-safety and ordering issues in Script object, r=brendan
",1172550935,"""diff --git a/js/src/js.msg b/js/src/js.msg
index 5f9290e..23ca679 100644
--- a/js/src/js.msg
+++ b/js/src/js.msg
@@ -116,7 +116,7 @@ MSG_DEF(JSMSG_BAD_RADIX,               33, 1, JSEXN_ERR, """"illegal radix {0}"""")
 MSG_DEF(JSMSG_PAREN_BEFORE_LET,        34, 0, JSEXN_SYNTAXERR, """"missing ( before let head"""")
 MSG_DEF(JSMSG_CANT_CONVERT,            35, 1, JSEXN_ERR, """"can't convert {0} to an integer"""")
 MSG_DEF(JSMSG_CYCLIC_VALUE,            36, 1, JSEXN_ERR, """"cyclic {0} value"""")
-MSG_DEF(JSMSG_SELF_MODIFYING_SCRIPT,   37, 0, JSEXN_TYPEERR, """"self-modifying script detected"""")
+MSG_DEF(JSMSG_COMPILE_EXECED_SCRIPT,   37, 0, JSEXN_TYPEERR, """"cannot compile over a script that is currently executing"""")
 MSG_DEF(JSMSG_CANT_CONVERT_TO,         38, 2, JSEXN_TYPEERR, """"can't convert {0} to {1}"""")
 MSG_DEF(JSMSG_NO_PROPERTIES,           39, 1, JSEXN_TYPEERR, """"{0} has no properties"""")
 MSG_DEF(JSMSG_CANT_FIND_CLASS,         40, 1, JSEXN_TYPEERR, """"can't find class id {0}"""")
diff --git a/js/src/jsscript.c b/js/src/jsscript.c
index 6b66356..aa99dc0 100644
--- a/js/src/jsscript.c
+++ b/js/src/jsscript.c
@@ -67,6 +67,31 @@
 static const char js_script_exec[] = """"Script.prototype.exec"""";
 static const char js_script_compile[] = """"Script.prototype.compile"""";
 
+/*
+ * This routine requires that obj has been locked previously.
+ */
+static jsint
+GetScriptExecDepth(JSContext *cx, JSObject *obj)
+{
+    jsval v;
+
+    JS_ASSERT(JS_IS_OBJ_LOCKED(cx, obj));
+    v = LOCKED_OBJ_GET_SLOT(obj, JSSLOT_START(&js_ScriptClass));
+    return JSVAL_TO_INT(v);
+}
+
+static void
+AdjustScriptExecDepth(JSContext *cx, JSObject *obj, jsint delta)
+{
+    jsint execDepth;
+
+    JS_LOCK_OBJ(cx, obj);
+    execDepth = GetScriptExecDepth(cx, obj);
+    LOCKED_OBJ_SET_SLOT(obj, JSSLOT_START(&js_ScriptClass),
+                        INT_TO_JSVAL(execDepth + delta));
+    JS_UNLOCK_OBJ(cx, obj);
+}
+
 #if JS_HAS_TOSOURCE
 static JSBool
 script_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
@@ -165,11 +190,13 @@ script_compile(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
 {
     JSString *str;
     JSObject *scopeobj;
-    JSScript *oldscript, *script;
+    jsval v;
+    JSScript *script, *oldscript;
     JSStackFrame *fp, *caller;
     const char *file;
     uintN line;
     JSPrincipals *principals;
+    jsint execDepth;
 
     /* Make sure obj is a Script object. */
     if (!JS_InstanceOf(cx, obj, &js_ScriptClass, argv))
@@ -192,18 +219,6 @@ script_compile(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
         argv[1] = OBJECT_TO_JSVAL(scopeobj);
     }
 
-    /* XXX thread safety was completely neglected in this function... */
-    oldscript = (JSScript *) JS_GetPrivate(cx, obj);
-    if (oldscript) {
-        for (fp = cx->fp; fp; fp = fp->down) {
-            if (fp->script == oldscript) {
-                JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,
-                                     JSMSG_SELF_MODIFYING_SCRIPT);
-                return JS_FALSE;
-            }
-        }
-    }
-
     /* Compile using the caller's scope chain, which js_Invoke passes to fp. */
     fp = cx->fp;
     caller = JS_GetScriptedCaller(cx, fp);
@@ -247,15 +262,32 @@ script_compile(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     if (!script)
         return JS_FALSE;
 
-    /* Swap script for obj's old script, if any. */
-    if (!JS_SetPrivate(cx, obj, script)) {
-        js_DestroyScript(cx, script);
+    JS_LOCK_OBJ(cx, obj);
+    execDepth = GetScriptExecDepth(cx, obj);
+
+    /*
+     * execDepth must be 0 to allow compilation here, otherwise the JSScript
+     * struct can be released while running.
+     */
+    if (execDepth > 0) {
+        JS_UNLOCK_OBJ(cx, obj);
+        JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,
+                             JSMSG_COMPILE_EXECED_SCRIPT);
         return JS_FALSE;
     }
+
+    /* Swap script for obj's old script, if any. */
+    v = LOCKED_OBJ_GET_SLOT(obj, JSSLOT_PRIVATE);
+    oldscript = (JSScript *) JSVAL_TO_PRIVATE(v);
+    LOCKED_OBJ_SET_SLOT(obj, JSSLOT_PRIVATE, PRIVATE_TO_JSVAL(script));
+    JS_UNLOCK_OBJ(cx, obj);
+
     if (oldscript)
         js_DestroyScript(cx, oldscript);
 
     script->object = obj;
+    js_CallNewScriptHook(cx, script, NULL);
+
 out:
     /* Return the object. */
     *rval = OBJECT_TO_JSVAL(obj);
@@ -269,6 +301,7 @@ script_exec(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     JSStackFrame *fp, *caller;
     JSPrincipals *principals;
     JSScript *script;
+    JSBool ok;
 
     if (!JS_InstanceOf(cx, obj, &js_ScriptClass, argv))
         return JS_FALSE;
@@ -331,18 +364,28 @@ script_exec(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     if (!scopeobj)
         return JS_FALSE;
 
+    /* Keep track of nesting depth for the script. */
+    AdjustScriptExecDepth(cx, obj, 1);
+
+    /* Must get to out label after this */
     script = (JSScript *) JS_GetPrivate(cx, obj);
-    if (!script)
-        return JS_TRUE;
+    if (!script) {
+        ok = JS_FALSE;
+        goto out;
+    }
 
     /* Belt-and-braces: check that this script object has access to scopeobj. */
     principals = script->principals;
-    if (!js_CheckPrincipalsAccess(cx, scopeobj, principals,
-                                  CLASS_ATOM(cx, Script))) {
-        return JS_FALSE;
-    }
+    ok = js_CheckPrincipalsAccess(cx, scopeobj, principals,
+                                  CLASS_ATOM(cx, Script));
+    if (!ok)
+        goto out;
 
-    return js_Execute(cx, scopeobj, script, caller, JSFRAME_EVAL, rval);
+    ok = js_Execute(cx, scopeobj, script, caller, JSFRAME_EVAL, rval);
+   
+out:
+    AdjustScriptExecDepth(cx, obj, -1); 
+    return ok;
 }
 
 #endif /* JS_HAS_SCRIPT_OBJECT */
@@ -750,6 +793,7 @@ script_thaw(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     JSString *str;
     void *buf;
     uint32 len;
+    jsval v;
     JSScript *script, *oldscript;
     JSBool ok, hasMagic;
 
@@ -799,13 +843,26 @@ script_thaw(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
         goto out;
     }
 
-    /* Swap script for obj's old script, if any. */
-    oldscript = (JSScript *) JS_GetPrivate(cx, obj);
-    ok = JS_SetPrivate(cx, obj, script);
-    if (!ok) {
-        JS_free(cx, script);
+    JS_LOCK_OBJ(cx, obj);
+    execDepth = GetScriptExecDepth(cx, obj);
+
+    /*
+     * execDepth must be 0 to allow compilation here, otherwise the JSScript
+     * struct can be released while running.
+     */
+    if (execDepth > 0) {
+        JS_UNLOCK_OBJ(cx, obj);
+        JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,
+                             JSMSG_COMPILE_EXECED_SCRIPT);
         goto out;
     }
+
+    /* Swap script for obj's old script, if any. */
+    v = LOCKED_OBJ_GET_SLOT(cx, obj, JSSLOT_PRIVATE);
+    oldscript = (JSScript *) JSVAL_TO_PRIVATE(v);
+    LOCKED_OBJ_SET_SLOT(cx, obj, JSSLOT_PRIVATE, PRIVATE_TO_JSVAL(script));
+    JS_UNLOCK_OBJ(cx, obj);
+
     if (oldscript)
         js_DestroyScript(cx, oldscript);
 
@@ -886,7 +943,8 @@ script_mark(JSContext *cx, JSObject *obj, void *arg)
 
 JS_FRIEND_DATA(JSClass) js_ScriptClass = {
     js_Script_str,
-    JSCLASS_HAS_PRIVATE | JSCLASS_HAS_CACHED_PROTO(JSProto_Script),
+    JSCLASS_HAS_PRIVATE | JSCLASS_HAS_CACHED_PROTO(JSProto_Script) |
+    JSCLASS_HAS_RESERVED_SLOTS(1),
     JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,
     JS_EnumerateStub, JS_ResolveStub,   JS_ConvertStub,   script_finalize,
     NULL,             NULL,             script_call,      NULL,/*XXXbe xdr*/
@@ -910,6 +968,10 @@ Script(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
          */
         *rval = OBJECT_TO_JSVAL(obj);
     }
+
+    if (!JS_SetReservedSlot(cx, obj, 0, INT_TO_JSVAL(0)))
+        return JS_FALSE;
+
     return script_compile(cx, obj, argc, argv, rval);
 }
 """
e0569da19a1a93271f14aac58505a8ddebd49e3d,104221,371321,jst%mozilla.org,"Fixing bug 371321. Restore code to call the finalize hook on window objects. r=mrbkap@gmail.com, sr=dbaron@mozilla.com
",1172300240,"""diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index 865b582..32f0e7d 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -444,6 +444,7 @@ static const char kDOMStringBundleURL[] =
   nsIXPCScriptable::WANT_ADDPROPERTY |                                        \
   nsIXPCScriptable::WANT_DELPROPERTY |                                        \
   nsIXPCScriptable::WANT_NEWENUMERATE |                                       \
+  nsIXPCScriptable::WANT_FINALIZE |                                           \
   nsIXPCScriptable::WANT_EQUALITY |                                           \
   nsIXPCScriptable::WANT_OUTER_OBJECT |                                       \
   nsIXPCScriptable::WANT_INNER_OBJECT |                                       \
@@ -6060,7 +6061,7 @@ nsWindowSH::Finalize(nsIXPConnectWrappedNative *wrapper, JSContext *cx,
 
   sgo->OnFinalize(nsIProgrammingLanguage::JAVASCRIPT, obj);
 
-  return nsEventReceiverSH::Finalize(wrapper, cx, obj);
+  return NS_OK;
 }
 
 NS_IMETHODIMP"""
deed8e9b440df94fa74f0300d4132c92747ef4c7,104275,371124,mats.palmgren%bredband.net,"Fix a few crashes caused by a null prototype. b=371124 r+sr=jst
",1172197102,"""diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index df71dfe..865b582 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -8018,8 +8018,13 @@ nsHTMLDocumentSH::DocumentAllTagsNewResolve(JSContext *cx, JSObject *obj,
 
     JSString *str = JSVAL_TO_STRING(id);
 
+    JSObject *proto = ::JS_GetPrototype(cx, obj);
+    if (NS_UNLIKELY(!proto)) {
+      return JS_TRUE;
+    }
+
     JSBool found;
-    if (!::JS_HasUCProperty(cx, ::JS_GetPrototype(cx, obj),
+    if (!::JS_HasUCProperty(cx, proto,
                             ::JS_GetStringChars(str),
                             ::JS_GetStringLength(str), &found)) {
       return JS_FALSE;
@@ -8834,6 +8839,9 @@ nsHTMLExternalObjSH::GetProperty(nsIXPConnectWrappedNative *wrapper,
   JSAutoRequest ar(cx);
 
   JSObject *pi_obj = ::JS_GetPrototype(cx, obj);
+  if (NS_UNLIKELY(!pi_obj)) {
+    return NS_OK;
+  }
 
   const jschar *id_chars = nsnull;
   size_t id_length = 0;
@@ -8878,6 +8886,9 @@ nsHTMLExternalObjSH::SetProperty(nsIXPConnectWrappedNative *wrapper,
   JSAutoRequest ar(cx);
 
   JSObject *pi_obj = ::JS_GetPrototype(cx, obj);
+  if (NS_UNLIKELY(!pi_obj)) {
+    return NS_OK;
+  }
 
   const jschar *id_chars = nsnull;
   size_t id_length = 0;"""
6ef72173a762ddba7c354b8a76c28577cb4dcf9a,104288,369249,Olli.Pettay%helsinki.fi,"Bug 369249, r+sr=tor
",1172186873,"""diff --git a/content/svg/content/src/nsSVGLengthList.cpp b/content/svg/content/src/nsSVGLengthList.cpp
index 94e8cec..e5f1128 100644
--- a/content/svg/content/src/nsSVGLengthList.cpp
+++ b/content/svg/content/src/nsSVGLengthList.cpp
@@ -224,7 +224,7 @@ NS_IMETHODIMP nsSVGLengthList::Initialize(nsIDOMSVGLength *newItem,
 /* nsIDOMSVGLength getItem (in unsigned long index); */
 NS_IMETHODIMP nsSVGLengthList::GetItem(PRUint32 index, nsIDOMSVGLength **_retval)
 {
-  if ((PRInt32)index >= mLengths.Count()) {
+  if (index >= NS_STATIC_CAST(PRUint32, mLengths.Count())) {
     *_retval = nsnull;
     return NS_ERROR_DOM_INDEX_SIZE_ERR;
   }
@@ -265,7 +265,7 @@ nsSVGLengthList::ReplaceItem(nsIDOMSVGLength *newItem,
 /* nsIDOMSVGLengthList removeItem (in unsigned long index); */
 NS_IMETHODIMP nsSVGLengthList::RemoveItem(PRUint32 index, nsIDOMSVGLength **_retval)
 {
-  if ((PRInt32)index >= mLengths.Count()) {
+  if (index >= NS_STATIC_CAST(PRUint32, mLengths.Count())) {
     *_retval = nsnull;
     return NS_ERROR_DOM_INDEX_SIZE_ERR;
   }
diff --git a/content/svg/content/src/nsSVGNumberList.cpp b/content/svg/content/src/nsSVGNumberList.cpp
index c2e7ec5..5cdfd6e 100644
--- a/content/svg/content/src/nsSVGNumberList.cpp
+++ b/content/svg/content/src/nsSVGNumberList.cpp
@@ -222,7 +222,7 @@ NS_IMETHODIMP nsSVGNumberList::Initialize(nsIDOMSVGNumber *newItem,
 /* nsIDOMSVGNumber getItem (in unsigned long index); */
 NS_IMETHODIMP nsSVGNumberList::GetItem(PRUint32 index, nsIDOMSVGNumber **_retval)
 {
-  if ((PRInt32)index >= mNumbers.Count()) {
+  if (index >= NS_STATIC_CAST(PRUint32, mNumbers.Count())) {
     *_retval = nsnull;
     return NS_ERROR_DOM_INDEX_SIZE_ERR;
   }
@@ -277,7 +277,7 @@ nsSVGNumberList::ReplaceItem(nsIDOMSVGNumber *newItem,
 /* nsIDOMSVGNumberList removeItem (in unsigned long index); */
 NS_IMETHODIMP nsSVGNumberList::RemoveItem(PRUint32 index, nsIDOMSVGNumber **_retval)
 {
-  if ((PRInt32)index >= mNumbers.Count()) {
+  if (index >= NS_STATIC_CAST(PRUint32, mNumbers.Count())) {
     *_retval = nsnull;
     return NS_ERROR_DOM_INDEX_SIZE_ERR;
   }
diff --git a/content/svg/content/src/nsSVGPathSegList.cpp b/content/svg/content/src/nsSVGPathSegList.cpp
index 16471f2..ca1b472 100644
--- a/content/svg/content/src/nsSVGPathSegList.cpp
+++ b/content/svg/content/src/nsSVGPathSegList.cpp
@@ -212,7 +212,7 @@ NS_IMETHODIMP nsSVGPathSegList::Initialize(nsIDOMSVGPathSeg *newItem,
 /* nsIDOMSVGPathSeg getItem (in unsigned long index); */
 NS_IMETHODIMP nsSVGPathSegList::GetItem(PRUint32 index, nsIDOMSVGPathSeg **_retval)
 {
-  if ((PRInt32)index >= mSegments.Count()) {
+  if (index >= NS_STATIC_CAST(PRUint32, mSegments.Count())) {
     *_retval = nsnull;
     return NS_ERROR_DOM_INDEX_SIZE_ERR;
   }
@@ -231,7 +231,7 @@ NS_IMETHODIMP nsSVGPathSegList::InsertItemBefore(nsIDOMSVGPathSeg *newItem,
   if (!newItem)
     return NS_ERROR_DOM_SVG_WRONG_TYPE_ERR;
 
-  if ((PRInt32)index >= mSegments.Count()) {
+  if (index >= NS_STATIC_CAST(PRUint32, mSegments.Count())) {
     *_retval = nsnull;
     return NS_ERROR_DOM_INDEX_SIZE_ERR;
   }
@@ -251,7 +251,7 @@ NS_IMETHODIMP nsSVGPathSegList::ReplaceItem(nsIDOMSVGPathSeg *newItem,
   if (!newItem)
     return NS_ERROR_DOM_SVG_WRONG_TYPE_ERR;
 
-  if ((PRInt32)index >= mSegments.Count()) {
+  if (index >= NS_STATIC_CAST(PRUint32, mSegments.Count())) {
     *_retval = nsnull;
     return NS_ERROR_DOM_INDEX_SIZE_ERR;
   }
@@ -266,7 +266,7 @@ NS_IMETHODIMP nsSVGPathSegList::ReplaceItem(nsIDOMSVGPathSeg *newItem,
 /* nsIDOMSVGPathSeg removeItem (in unsigned long index); */
 NS_IMETHODIMP nsSVGPathSegList::RemoveItem(PRUint32 index, nsIDOMSVGPathSeg **_retval)
 {
-  if ((PRInt32)index >= mSegments.Count()) {
+  if (index >= NS_STATIC_CAST(PRUint32, mSegments.Count())) {
     *_retval = nsnull;
     return NS_ERROR_DOM_INDEX_SIZE_ERR;
   }
diff --git a/content/svg/content/src/nsSVGPointList.cpp b/content/svg/content/src/nsSVGPointList.cpp
index a1fdebe..9cea54b 100644
--- a/content/svg/content/src/nsSVGPointList.cpp
+++ b/content/svg/content/src/nsSVGPointList.cpp
@@ -277,7 +277,7 @@ NS_IMETHODIMP nsSVGPointList::Initialize(nsIDOMSVGPoint *newItem,
 /* nsIDOMSVGPoint getItem (in unsigned long index); */
 NS_IMETHODIMP nsSVGPointList::GetItem(PRUint32 index, nsIDOMSVGPoint **_retval)
 {
-  if ((PRInt32)index >= mPoints.Count()) {
+  if (index >= NS_STATIC_CAST(PRUint32, mPoints.Count())) {
     *_retval = nsnull;
     return NS_ERROR_DOM_INDEX_SIZE_ERR;
   }
@@ -316,7 +316,7 @@ NS_IMETHODIMP nsSVGPointList::ReplaceItem(nsIDOMSVGPoint *newItem,
 /* nsIDOMSVGPoint removeItem (in unsigned long index); */
 NS_IMETHODIMP nsSVGPointList::RemoveItem(PRUint32 index, nsIDOMSVGPoint **_retval)
 {
-  if ((PRInt32)index >= mPoints.Count()) {
+  if (index >= NS_STATIC_CAST(PRUint32, mPoints.Count())) {
     *_retval = nsnull;
     return NS_ERROR_DOM_INDEX_SIZE_ERR;
   }
diff --git a/content/svg/content/src/nsSVGTransformList.cpp b/content/svg/content/src/nsSVGTransformList.cpp
index 53b9adf..b459fc4 100644
--- a/content/svg/content/src/nsSVGTransformList.cpp
+++ b/content/svg/content/src/nsSVGTransformList.cpp
@@ -263,7 +263,7 @@ NS_IMETHODIMP nsSVGTransformList::Initialize(nsIDOMSVGTransform *newItem,
 /* nsIDOMSVGTransform getItem (in unsigned long index); */
 NS_IMETHODIMP nsSVGTransformList::GetItem(PRUint32 index, nsIDOMSVGTransform **_retval)
 {
-  if ((PRInt32)index >= mTransforms.Count()) {
+  if (index >= NS_STATIC_CAST(PRUint32, mTransforms.Count())) {
     *_retval = nsnull;
     return NS_ERROR_DOM_INDEX_SIZE_ERR;
   }
@@ -341,7 +341,7 @@ NS_IMETHODIMP nsSVGTransformList::RemoveItem(PRUint32 index, nsIDOMSVGTransform
 {
   nsSVGValueAutoNotifier autonotifier(this);
 
-  if ((PRInt32)index >= mTransforms.Count()) {
+  if (index >= NS_STATIC_CAST(PRUint32, mTransforms.Count())) {
     *_retval = nsnull;
     return NS_ERROR_DOM_INDEX_SIZE_ERR;
   }"""
c43609b37a6ac7bc32913096f766a2ed555da67d,104302,336994,Olli.Pettay%helsinki.fi,"Bug 336994, r+sr=tor
",1172175192,"""diff --git a/content/svg/content/src/nsSVGSVGElement.cpp b/content/svg/content/src/nsSVGSVGElement.cpp
index ce3b0af..3fdd113 100644
--- a/content/svg/content/src/nsSVGSVGElement.cpp
+++ b/content/svg/content/src/nsSVGSVGElement.cpp
@@ -1171,7 +1171,7 @@ nsSVGSVGElement::DidModifySVGObservable (nsISVGValue* observable,
 {
   nsIDocument* doc = GetCurrentDoc();
   if (!doc) return NS_ERROR_FAILURE;
-  nsIPresShell* presShell = doc->GetShellAt(0);
+  nsCOMPtr<nsIPresShell> presShell = doc->GetShellAt(0);
   NS_ASSERTION(presShell, """"no presShell"""");
   if (!presShell) return NS_ERROR_FAILURE;
 """
d32867be733210ad6fc97da6b8f60be29cfbae0c,104367,370360,bmlk%gmx.de,"limit array access when a rowspan points to a already pushed row, bug 370360 r/sr=bzbarsky
",1172086941,"""diff --git a/layout/tables/nsTableRowFrame.cpp b/layout/tables/nsTableRowFrame.cpp
index fe24d8a..48487d0 100644
--- a/layout/tables/nsTableRowFrame.cpp
+++ b/layout/tables/nsTableRowFrame.cpp
@@ -1056,6 +1056,7 @@ nsTableRowFrame::Reflow(nsPresContext*          aPresContext,
 nscoord 
 nsTableRowFrame::ReflowCellFrame(nsPresContext*          aPresContext,
                                  const nsHTMLReflowState& aReflowState,
+                                 PRBool                   aIsTopOfPage,
                                  nsTableCellFrame*        aCellFrame,
                                  nscoord                  aAvailableHeight,
                                  nsReflowStatus&          aStatus)
@@ -1072,6 +1073,7 @@ nsTableRowFrame::ReflowCellFrame(nsPresContext*          aPresContext,
   nsTableCellReflowState cellReflowState(aPresContext, aReflowState,
                                          aCellFrame, availSize, PR_FALSE);
   InitChildReflowState(*aPresContext, availSize, borderCollapse, cellReflowState);
+  cellReflowState.mFlags.mIsTopOfPage = aIsTopOfPage;
 
   nsHTMLReflowMetrics desiredSize;
 
diff --git a/layout/tables/nsTableRowFrame.h b/layout/tables/nsTableRowFrame.h
index 6bc2436b..888d253 100644
--- a/layout/tables/nsTableRowFrame.h
+++ b/layout/tables/nsTableRowFrame.h
@@ -158,6 +158,7 @@ public:
   /** used by row group frame code */
   nscoord ReflowCellFrame(nsPresContext*          aPresContext,
                           const nsHTMLReflowState& aReflowState,
+                          PRBool                   aIsTopOfPage,
                           nsTableCellFrame*        aCellFrame,
                           nscoord                  aAvailableHeight,
                           nsReflowStatus&          aStatus);
diff --git a/layout/tables/nsTableRowGroupFrame.cpp b/layout/tables/nsTableRowGroupFrame.cpp
index cce9b41..96697bf 100644
--- a/layout/tables/nsTableRowGroupFrame.cpp
+++ b/layout/tables/nsTableRowGroupFrame.cpp
@@ -576,13 +576,13 @@ nsTableRowGroupFrame::CalculateRowHeights(nsPresContext*          aPresContext,
 
   PRInt32 numRows = GetRowCount() - (startRowFrame->GetRowIndex() - GetStartRowIndex());
   // collect the current height of each row.  nscoord* rowHeights = nsnull;
-  RowInfo* rowInfo;
-  if (numRows > 0) {
-    rowInfo = new RowInfo[numRows];
-    if (!rowInfo) return;
-    memset (rowInfo, 0, numRows*sizeof(RowInfo));
-  } 
-  else return;
+  if (numRows <= 0)
+    return;
+
+  nsTArray<RowInfo> rowInfo;
+  if (!rowInfo.AppendElements(numRows)) {
+    return;
+  }
 
   PRBool  hasRowSpanningCell = PR_FALSE;
   nscoord heightOfRows = 0;
@@ -643,6 +643,10 @@ nsTableRowGroupFrame::CalculateRowHeights(nsPresContext*          aPresContext,
         // iteratate the row's cell frames 
         while (cellFrame) {
           PRInt32 rowSpan = tableFrame->GetEffectiveRowSpan(rowIndex + startRowIndex, *cellFrame);
+          if ((rowIndex + rowSpan) > numRows) {
+            // there might be rows pushed already to the nextInFlow
+            rowSpan = numRows - rowIndex;
+          }
           if (rowSpan > 1) { // a cell with rowspan > 1, determine the height of the rows it spans
             nscoord heightOfRowsSpanned = 0;
             nscoord heightOfUnStyledRowsSpanned = 0;
@@ -818,7 +822,6 @@ nsTableRowGroupFrame::CalculateRowHeights(nsPresContext*          aPresContext,
   DidResizeRows(aDesiredSize);
 
   aDesiredSize.height = rowGroupHeight; // Adjust our desired size
-  delete [] rowInfo; // cleanup
 }
 
 nscoord
@@ -949,7 +952,9 @@ nsTableRowGroupFrame::SplitSpanningCells(nsPresContext&          aPresContext,
         // Ask the row to reflow the cell to the height of all the rows it spans up through aLastRow
         // aAvailHeight is the space between the row group start and the end of the page
         nscoord cellAvailHeight = aAvailHeight - rowPos.y;
-        nscoord cellHeight = row->ReflowCellFrame(&aPresContext, aReflowState, cell, 
+        PRBool isTopOfPage = (row == &aFirstRow) && aFirstRowIsTopOfPage;
+        nscoord cellHeight = row->ReflowCellFrame(&aPresContext, aReflowState,
+                                                  isTopOfPage, cell,
                                                   cellAvailHeight, status);
         aDesiredHeight = PR_MAX(aDesiredHeight, rowPos.y + cellHeight);
         if (NS_FRAME_IS_COMPLETE(status)) {"""
1cffa825320e90acf5b1ae2fbc99a97854adf0c0,104388,367630,mrbkap%gmail.com,"Ensure fp is up-to-date. bug 367630, r=brendan
",1172031000,"""diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index 45bce8f..bc2fddd 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -5329,6 +5329,8 @@ interrupt:
             if (!JSVAL_IS_OBJECT(rval)) {
                 char numBuf[12];
                 JS_snprintf(numBuf, sizeof numBuf, """"%u"""", (unsigned) i);
+
+                SAVE_SP_AND_PC(fp);
                 JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,
                                      JSMSG_BAD_SHARP_USE, numBuf);
                 ok = JS_FALSE;"""
a86af11b7f983008764d5490414ec9ee77e7d741,104615,370445,dveditz%cruzio.com,"bug 370445 prevent embedded nulls when setting location.hostname. r=bz, sr=dbaron, a=jay
",1171588239,"""diff --git a/netwerk/base/src/nsSimpleURI.cpp b/netwerk/base/src/nsSimpleURI.cpp
index 02a8d87..6a2bf8d 100644
--- a/netwerk/base/src/nsSimpleURI.cpp
+++ b/netwerk/base/src/nsSimpleURI.cpp
@@ -165,7 +165,7 @@ nsSimpleURI::SetSpec(const nsACString &aSpec)
     NS_EscapeURL(specPtr, specLen, esc_OnlyNonASCII|esc_AlwaysCopy, spec);
 
     PRInt32 pos = spec.FindChar(':');
-    if (pos == -1)
+    if (pos == -1 || !net_IsValidScheme(spec.get(), pos))
         return NS_ERROR_MALFORMED_URI;
 
     mScheme.Truncate();
@@ -193,7 +193,13 @@ NS_IMETHODIMP
 nsSimpleURI::SetScheme(const nsACString &scheme)
 {
     NS_ENSURE_STATE(mMutable);
-    
+
+    const nsPromiseFlatCString &flat = PromiseFlatCString(scheme);
+    if (!net_IsValidScheme(flat)) {
+        NS_ERROR(""""the given url scheme contains invalid characters"""");
+        return NS_ERROR_MALFORMED_URI;
+    }
+
     mScheme = scheme;
     ToLowerCase(mScheme);
     return NS_OK;
diff --git a/netwerk/base/src/nsStandardURL.cpp b/netwerk/base/src/nsStandardURL.cpp
index b1bdd8b..6a89743 100644
--- a/netwerk/base/src/nsStandardURL.cpp
+++ b/netwerk/base/src/nsStandardURL.cpp
@@ -516,6 +516,8 @@ nsStandardURL::BuildNormalizedSpec(const char *spec)
     if (mHost.mLen > 0) {
         const nsCSubstring& tempHost =
             Substring(spec + mHost.mPos, spec + mHost.mPos + mHost.mLen);
+        if (tempHost.FindChar('\0') != kNotFound)
+            return NS_ERROR_MALFORMED_URI;  // null embedded in hostname
         if ((useEncHost = NormalizeIDN(tempHost, encHost)))
             approxLen += encHost.Length();
         else
@@ -1427,6 +1429,9 @@ nsStandardURL::SetHost(const nsACString &input)
         return NS_ERROR_UNEXPECTED;
     }
 
+    if (host && strlen(host) < flat.Length())
+        return NS_ERROR_MALFORMED_URI; // found embedded null
+
     // For consistency with SetSpec/nsURLParsers, don't allow spaces
     // in the hostname.
     if (strchr(host, ' '))
diff --git a/netwerk/base/src/nsURLHelper.cpp b/netwerk/base/src/nsURLHelper.cpp
index 37d7aa1..eeadc01 100644
--- a/netwerk/base/src/nsURLHelper.cpp
+++ b/netwerk/base/src/nsURLHelper.cpp
@@ -507,11 +507,12 @@ net_ExtractURLScheme(const nsACString &inURI,
 PRBool
 net_IsValidScheme(const char *scheme, PRUint32 schemeLen)
 {
-    // first char much be alpha
+    // first char must be alpha
     if (!nsCRT::IsAsciiAlpha(*scheme))
         return PR_FALSE;
-    
-    for (; schemeLen && *scheme; ++scheme, --schemeLen) {
+
+    // nsCStrings may have embedded nulls -- reject those too
+    for (; schemeLen; ++scheme, --schemeLen) {
         if (!(nsCRT::IsAsciiAlpha(*scheme) ||
               nsCRT::IsAsciiDigit(*scheme) ||
               *scheme == '+' ||"""
fe4ab877635087d89c0128ec264e51b12e0808ba,104654,350312,bclary%bclary.com,"JavaScript Test - move SpiderMonkey extension js1_7/geniter/regress-350312.js to js1_7/extensions/regress-350312.js, bug 368585, r+sr=brendan
",1171545990,"""diff --git a/js/tests/js1_7/extensions/regress-350312.js b/js/tests/js1_7/extensions/regress-350312.js
new file mode 100755
index 0000000..9383140
--- /dev/null
+++ b/js/tests/js1_7/extensions/regress-350312.js
@@ -0,0 +1,111 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 350312;
+var summary = 'Accessing wrong stack slot with nested catch/finally';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+
+  var iter;
+  function gen()
+    { 
+      try {
+        yield iter;
+      } catch (e if e == null) {
+        actual += 'CATCH,';
+        print(""""CATCH"""");
+      } finally {
+        actual += 'FINALLY';
+        print(""""FINALLY"""");
+      }
+    }
+
+  expect = 'FINALLY';
+  actual = '';
+  (iter = gen()).next().close();
+  reportCompare(expect, actual, summary);
+
+  expect = 'FINALLY';
+  actual = '';
+  try
+  {
+    (iter = gen()).next().throw(1);
+  }
+  catch(ex)
+  {
+  }
+  reportCompare(expect, actual, summary);
+
+  expect = 'CATCH,FINALLY';
+  actual = '';
+  try
+  {
+    (iter = gen()).next().throw(null);
+  }
+  catch(ex)
+  {
+  }
+  reportCompare(expect, actual, summary);
+
+  expect = 'FINALLY';
+  actual = '';
+  var expectexcp = '[object StopIteration]';
+  var actualexcp = '';
+  try
+  {
+    (iter = gen()).next().next();      
+  }
+  catch(ex)
+  {
+    actualexcp = ex + '';
+  }
+  reportCompare(expect, actual, summary);
+  reportCompare(expectexcp, actualexcp, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_7/geniter/regress-350312.js b/js/tests/js1_7/geniter/regress-350312.js
deleted file mode 100755
index e69de29..0000000"""
256292b662625332f29c2bb75a93f06ba07daae4,104682,350312,bclary%bclary.com,"JavaScript Test - move SpiderMonkey extension js1_5/Regress/regress-350312-03.js to js1_5/extensions/regress-350312-03.js, bug 368585, r+sr=brendan
",1171543498,"""diff --git a/js/tests/js1_5/Regress/regress-350312-03.js b/js/tests/js1_5/Regress/regress-350312-03.js
deleted file mode 100755
index e69de29..0000000
diff --git a/js/tests/js1_5/extensions/regress-350312-03.js b/js/tests/js1_5/extensions/regress-350312-03.js
new file mode 100755
index 0000000..1e486de
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-350312-03.js
@@ -0,0 +1,147 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Brendan Eich
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 350312;
+var summary = 'Accessing wrong stack slot with nested catch/finally';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+
+  var pfx  = """"(function (x) {try {if (x > 41) throw x}"""",
+    cg1a = """" catch (e if e === 42) {var v = 'catch guard 1 ' + e; actual += v + ',';print(v);}""""
+    cg1b = """" catch (e if e === 42) {var v = 'catch guard 1 + throw ' + e; actual += v + ',';print(v); throw e;}""""
+    cg2  = """" catch (e if e === 43) {var v = 'catch guard 2 ' + e; actual += v + ',';print(v)}""""
+    cat  = """" catch (e) {var v = 'catch all ' + e; print(v); if (e == 44) throw e}""""
+    fin  = """" finally{var v = 'fin'; actual += v + ',';print(v)}"""",
+    end  = """"})"""";
+
+  var exphash  = {
+    pfx: """"(function (y) { var result = ''; y = y + ',';"""",
+    cg1a: """" result += (y === '42,') ? ('catch guard 1 ' + y):'';"""",
+    cg1b: """" result += (y === '42,') ? ('catch guard 1 + throw ' + y):'';"""",
+    cg2:  """" result += (y === '43,') ? ('catch guard 2 ' + y):'';"""",
+    cat:  """" result += (y > 41) ? ('catch all ' + y):'';"""",
+    fin:  """" result += 'fin,';"""",
+    end:  """"return result;})""""
+  };
+
+  var src = [
+    pfx + fin + end,
+    pfx + cat + end,
+    pfx + cat + fin + end,
+    pfx + cg1a + end,
+    pfx + cg1a + fin + end,
+    pfx + cg1a + cat + end,
+    pfx + cg1a + cat + fin + end,
+    pfx + cg1a + cg2 + end,
+    pfx + cg1a + cg2 + fin + end,
+    pfx + cg1a + cg2 + cat + end,
+    pfx + cg1a + cg2 + cat + fin + end,
+    pfx + cg1b + end,
+    pfx + cg1b + fin + end,
+    pfx + cg1b + cat + end,
+    pfx + cg1b + cat + fin + end,
+    pfx + cg1b + cg2 + end,
+    pfx + cg1b + cg2 + fin + end,
+    pfx + cg1b + cg2 + cat + end,
+    pfx + cg1b + cg2 + cat + fin + end,
+    ];
+
+  var expsrc = [
+    exphash.pfx + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cat + exphash.end,
+    exphash.pfx + exphash.cat + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cg1a + exphash.end,
+    exphash.pfx + exphash.cg1a + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cg1a + exphash.cat + exphash.end,
+    exphash.pfx + exphash.cg1a + exphash.cat + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cg1a + exphash.cg2 + exphash.end,
+    exphash.pfx + exphash.cg1a + exphash.cg2 + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cg1a + exphash.cg2 + exphash.cat + exphash.end,
+    exphash.pfx + exphash.cg1a + exphash.cg2 + exphash.cat + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cg1b + exphash.end,
+    exphash.pfx + exphash.cg1b + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cg1b + exphash.cat + exphash.end,
+    exphash.pfx + exphash.cg1b + exphash.cat + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cg1b + exphash.cg2 + exphash.end,
+    exphash.pfx + exphash.cg1b + exphash.cg2 + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cg1b + exphash.cg2 + exphash.cat + exphash.end,
+    exphash.pfx + exphash.cg1b + exphash.cg2 + exphash.cat + exphash.fin + exphash.end,
+    ];
+
+  for (var i in src) {
+    print(""""\n=== """" + i + """": """" + src[i]);
+    var f = eval(src[i]);
+    var exp = eval(expsrc[i]);
+    // dis(f);
+    print('decompiling: ' + f);
+    //print('decompiling exp: ' + exp);
+
+    actual = '';
+    try { expect = exp(41); f(41) } catch (e) { print('tried f(41), caught ' + e) }
+    reportCompare(expect, actual, summary);
+
+    actual = '';
+    try { expect = exp(42); f(42) } catch (e) { print('tried f(42), caught ' + e) }
+    reportCompare(expect, actual, summary);
+
+    actual = '';
+    try { expect = exp(43); f(43) } catch (e) { print('tried f(43), caught ' + e) }
+    reportCompare(expect, actual, summary);
+
+    actual = '';
+    try { expect = exp(44); f(44) } catch (e) { print('tried f(44), caught ' + e) }
+    reportCompare(expect, actual, summary);
+
+    actual = '';
+    try { expect = exp(45); f(45) } catch (e) { print('tried f(44), caught ' + e) }
+    reportCompare(expect, actual, summary);
+
+  }
+
+  exitFunc ('test');
+}"""
3ad89fa3db3d6075e196636b58980732f7c00c63,104683,350312,bclary%bclary.com,"JavaScript Test - move SpiderMonkey extension js1_5/Regress/regress-350312-02.js to js1_5/extensions/regress-350312-02.js, bug 368585, r+sr=brendan
",1171543419,"""diff --git a/js/tests/js1_5/Regress/regress-350312-02.js b/js/tests/js1_5/Regress/regress-350312-02.js
deleted file mode 100755
index e69de29..0000000
diff --git a/js/tests/js1_5/extensions/regress-350312-02.js b/js/tests/js1_5/extensions/regress-350312-02.js
new file mode 100755
index 0000000..16cdb4e
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-350312-02.js
@@ -0,0 +1,143 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Brendan Eich
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 350312;
+var summary = 'Accessing wrong stack slot with nested catch/finally';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+
+  function createPrint(obj)
+    {
+      return new Function(""""actual += """" + obj + """" + ','; """" + 
+                          """"print("""" + obj + """");"""");
+    }
+
+  function createThrow(obj)
+    {
+      return new Function(""""throw """" + obj + """"; """");
+    }
+
+
+  function f(a, b, c)
+    {
+      try {
+        a();
+      } catch (e if e == null) {
+        b();
+      } finally {
+        c();
+      }
+    }
+
+  print('test 1');
+  expect = 'a,c,';
+  actual = '';
+  try
+  {
+    f(createPrint(""""'a'""""), createPrint(""""'b'""""), createPrint(""""'c'""""));
+  }
+  catch(ex)
+  {
+    actual += 'caught ' + ex;
+  }
+  reportCompare(expect, actual, summary + ': 1');
+
+  print('test 2');
+  expect = 'c,caught a';
+  actual = '';
+  try
+  {
+    f(createThrow(""""'a'""""), createPrint(""""'b'""""), createPrint(""""'c'""""));
+  }
+  catch(ex)
+  {
+    actual += 'caught ' + ex;
+  }
+  reportCompare(expect, actual, summary + ': 2');
+
+  print('test 3');
+  expect = 'b,c,';
+  actual = '';
+  try
+  {
+    f(createThrow(""""null""""), createPrint(""""'b'""""), createPrint(""""'c'""""));
+  }
+  catch(ex)
+  {
+    actual += 'caught ' + ex;
+  }
+  reportCompare(expect, actual, summary + ': 3');
+
+  print('test 4');
+  expect = 'a,c,';
+  actual = '';
+  try
+  {
+    f(createPrint(""""'a'""""), createThrow(""""'b'""""), createPrint(""""'c'""""));
+  }
+  catch(ex)
+  {
+    actual += 'caught ' + ex;
+  }
+  reportCompare(expect, actual, summary + ': 4');
+
+  print('test 5');
+  expect = 'c,caught b';
+  actual = '';
+  try
+  {
+    f(createThrow(""""null""""), createThrow(""""'b'""""), createPrint(""""'c'""""));
+  }
+  catch(ex)
+  {
+    actual += 'caught ' + ex;
+  }
+  reportCompare(expect, actual, summary + ': 5');
+
+  exitFunc ('test');
+}"""
2ccf360b96528a339379721782555d3122315449,104684,350312,bclary%bclary.com,"JavaScript Test - move SpiderMonkey extension js1_5/Regress/regress-350312-01.js to js1_5/extensions/regress-350312-01.js, bug 368585, r+sr=brendan
",1171543329,"""diff --git a/js/tests/js1_5/Regress/regress-350312-01.js b/js/tests/js1_5/Regress/regress-350312-01.js
deleted file mode 100755
index e69de29..0000000
diff --git a/js/tests/js1_5/extensions/regress-350312-01.js b/js/tests/js1_5/extensions/regress-350312-01.js
new file mode 100755
index 0000000..015ab21
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-350312-01.js
@@ -0,0 +1,81 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 350312;
+var summary = 'Accessing wrong stack slot with nested catch/finally';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+
+  var tmp;
+
+  function f()
+    {
+      try {   
+        try {   
+          throw 1;
+        } catch (e) {
+          throw e;
+        } finally {
+          tmp = true;
+        }
+      } catch (e) {
+        return e;
+      }
+    }
+
+  var ex = f();
+
+  var passed = ex === 1;
+  if (!passed) {
+    print(""""Failed!"""");
+    print(""""ex=""""+uneval(ex));
+  }
+  reportCompare(true, passed, summary);
+
+  exitFunc ('test');
+}"""
ac656d9efa0bb95b780b98e93b52cb5bea3c2c64,104721,345967,bclary%bclary.com,"JavaScript Test - move SpiderMonkey extension js1_5/GC/regress-345967.js to js1_5/extensions/regress-345967.js, bug 368585, r+sr=brendan
",1171540268,"""diff --git a/js/tests/js1_5/GC/regress-345967.js b/js/tests/js1_5/GC/regress-345967.js
deleted file mode 100755
index e69de29..0000000
diff --git a/js/tests/js1_5/extensions/regress-345967.js b/js/tests/js1_5/extensions/regress-345967.js
new file mode 100755
index 0000000..d657f8e
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-345967.js
@@ -0,0 +1,98 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 345967;
+var summary = 'Yet another unrooted atom in jsarray.c';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+
+  expectExitCode(0);
+  expectExitCode(3);
+
+  print('This test will probably run out of memory');
+  print('This test really should only fail on 64 bit machines');
+  
+  var JSVAL_INT_MAX = (1 << 30) - 1;
+
+  var a = new Array(JSVAL_INT_MAX + 2);
+  a[JSVAL_INT_MAX] = 0;
+  a[JSVAL_INT_MAX + 1] = 1;
+
+  a.__defineGetter__(JSVAL_INT_MAX, function() { return 0; });
+
+  a.__defineSetter__(JSVAL_INT_MAX, function(value) {
+    delete a[JSVAL_INT_MAX + 1];
+    var tmp = [];
+    tmp[JSVAL_INT_MAX + 2] = 2;
+
+    if (typeof gc == 'function')
+      gc();
+    for (var i = 0; i != 50000; ++i) {
+      var tmp = 1 / 3;
+      tmp /= 10;
+    }
+    for (var i = 0; i != 1000; ++i) {
+      // Make string with 11 characters that would take
+      // (11 + 1) * 2 bytes or sizeof(JSAtom) so eventually
+      // malloc will ovewrite just freed atoms. 
+      var tmp2 = Array(12).join(' ');
+    }
+  });
+
+
+  a.shift();
+
+  expect = 0;
+  actual = a[JSVAL_INT_MAX];
+  if (expect !== actual)
+    print(""""BAD"""");
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
560a08fa481e4bfac25ae86cc376d6890e69d244,104722,325269,bclary%bclary.com,"JavaScript Test - move SpiderMonkey extension js1_5/GC/regress-325269.js to js1_5/extensions/regress-325269.js, bug 368585, r+sr=brendan
",1171540194,"""diff --git a/js/tests/js1_5/GC/regress-325269.js b/js/tests/js1_5/GC/regress-325269.js
deleted file mode 100755
index e69de29..0000000
diff --git a/js/tests/js1_5/extensions/regress-325269.js b/js/tests/js1_5/extensions/regress-325269.js
new file mode 100755
index 0000000..fecbd4b
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-325269.js
@@ -0,0 +1,84 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 325269;
+var summary = 'GC hazard in js_ConstructObject';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+// only get exit code 3 if out of memory error occurs which 
+// will not happen on machines with enough memory.
+// expectExitCode(3);
+  
+var SavedArray = Array;
+
+function Redirector() { }
+
+Redirector.prototype = 1;
+Redirector.__defineGetter__('prototype', function() {
+//        printStatus(""""REDIRECTOR"""");
+        gc();
+        return SavedArray.prototype;
+});
+
+//Array = Function('printStatus(""""Constructor"""")');
+Array = Function('');
+Array.prototype = 1;
+Array.__defineGetter__('prototype', function() { 
+//        printStatus(""""**** GETTER ****"""");
+        Array = Redirector;
+        gc();
+        new Object();
+        new Object();
+        return undefined;
+});
+
+new Object();
+
+try
+{
+  var y = """"test"""".split('');
+}
+catch(ex)
+{
+  printStatus(ex + '');
+}
+
+
+reportCompare(expect, actual, summary);"""
2d8de55dad1f6b258362e327278c4f296ac8edc7,104723,313938,bclary%bclary.com,"JavaScript Test - move SpiderMonkey extension js1_5/GC/regress-313938.js to js1_5/extensions/regress-313938.js, bug 368585, r+sr=brendan
",1171540117,"""diff --git a/js/tests/js1_5/GC/regress-313938.js b/js/tests/js1_5/GC/regress-313938.js
deleted file mode 100755
index e69de29..0000000
diff --git a/js/tests/js1_5/extensions/regress-313938.js b/js/tests/js1_5/extensions/regress-313938.js
new file mode 100755
index 0000000..20ad581
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-313938.js
@@ -0,0 +1,75 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2005
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 313938;
+var summary = 'Root access in jsscript.c';
+var actual = '';
+var expect = '';
+
+printBugNumber (bug);
+printStatus (summary);
+
+var str = """" 2;"""".substring(1);
+""""1"""".substring(2);
+var expected = Script.prototype.compile(str).toSource();
+
+var likeString = { 
+        toString: function() {
+                var tmp = str;
+                str = null;
+                return tmp;
+        }
+};
+
+TWO = 2.0;
+
+var likeObject = {
+        valueOf: function() {
+                if (typeof gc == """"function"""") 
+                        gc();
+                for (var i = 0; i != 40000; ++i) {
+                        var tmp = 1e100 * TWO;
+                }
+                return this;
+        }
+}
+
+var s = Script.prototype.compile(likeString, likeObject);
+var actual = s.toSource();
+printStatus(expected === actual);
+
+reportCompare(expected, actual, summary);"""
08812dc18bbb3ee45975ed2e64cae2b533277cc8,104724,313763,bclary%bclary.com,"JavaScript Test - move SpiderMonkey extension js1_5/GC/regress-313763.js to js1_5/extensions/regress-313763.js, bug 368585, r+sr=brendan
",1171540042,"""diff --git a/js/tests/js1_5/GC/regress-313763.js b/js/tests/js1_5/GC/regress-313763.js
deleted file mode 100755
index e69de29..0000000
diff --git a/js/tests/js1_5/extensions/regress-313763.js b/js/tests/js1_5/extensions/regress-313763.js
new file mode 100755
index 0000000..0288c74
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-313763.js
@@ -0,0 +1,77 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2005
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 313763;
+var summary = 'Root jsarray.c creatures';
+var actual = '';
+var expect = '';
+
+printBugNumber (bug);
+printStatus (summary);
+printStatus ('This bug requires TOO_MUCH_GC');
+
+var N = 0x80000002;
+var array = Array(N);
+array[N - 1] = 1;
+array[N - 2] = 2;
+
+// Set getter not to wait untill engine loops through 2^31 holes in the array.
+var LOOP_TERMINATOR = """"stop_long_loop"""";
+array.__defineGetter__(N - 2, function() {
+        throw """"stop_long_loop"""";
+});
+
+var prepared_string = String(1);
+array.__defineGetter__(N - 1, function() {
+        var tmp = prepared_string;
+        prepared_string = null;
+        return tmp;
+})
+
+
+try {
+        array.unshift(1);
+} catch (e) {
+        if (e !== LOOP_TERMINATOR)
+                throw e;
+}
+
+var expect = """"1"""";
+var actual = array[N];
+printStatus(expect === actual);
+
+reportCompare(expect, actual, summary);"""
fbd60caaf441396dfa4b21c74d641ed9dad0f5ed,104725,313630,bclary%bclary.com,"JavaScript Test - move SpiderMonkey extension js1_5/GC/regress-313630.js to js1_5/extensions/regress-313630.js, bug 368585, r+sr=brendan
",1171539969,"""diff --git a/js/tests/js1_5/GC/regress-313630.js b/js/tests/js1_5/GC/regress-313630.js
deleted file mode 100755
index e69de29..0000000
diff --git a/js/tests/js1_5/extensions/regress-313630.js b/js/tests/js1_5/extensions/regress-313630.js
new file mode 100755
index 0000000..d34ae86
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-313630.js
@@ -0,0 +1,69 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2005
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 313630;
+var summary = 'Root access in js_fun_toString';
+var actual = '';
+var expect = '';
+
+printBugNumber (bug);
+printStatus (summary);
+
+var f = Function(""""return 1"""");
+Function(""""return 2"""");
+expect = f.toSource(0);
+
+var likeFunction = { 
+        valueOf: function() {
+                var tmp = f;
+                f = null;
+                return tmp;
+        },
+        __proto__: Function.prototype
+};
+
+var likeNumber = { 
+        valueOf: function() {
+                gc();
+                return 0;
+        }
+};
+
+var actual = likeFunction.toSource(likeNumber);
+printStatus(expect === actual);
+
+reportCompare(expect, actual, summary);"""
b4d8a1581c1abbc67f4ff36d5c51990172cd305a,104726,312278,bclary%bclary.com,"JavaScript Test - move SpiderMonkey extension js1_5/GC/regress-312278.js to js1_5/extensions/regress-312278.js, bug 368585, r+sr=brendan
",1171539885,"""diff --git a/js/tests/js1_5/GC/regress-312278.js b/js/tests/js1_5/GC/regress-312278.js
deleted file mode 100755
index e69de29..0000000
diff --git a/js/tests/js1_5/extensions/regress-312278.js b/js/tests/js1_5/extensions/regress-312278.js
new file mode 100755
index 0000000..f6375c54
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-312278.js
@@ -0,0 +1,73 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2005
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 312278;
+var summary = 'Do no access GC-ed object in Error.prototype.toSource';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+  
+function wrapInsideWith(obj)
+{
+  var f;
+  with (obj) {
+    f = function() { }
+  }
+  return f.__parent__;
+}
+
+function customToSource()
+{
+  return """"customToSource """"+this;
+}
+
+Error.prototype.__defineGetter__('message', function() {
+	var obj = {
+    toSource: """"something""""
+  }
+	obj.__defineGetter__('toSource', function() {
+		gc();
+		return customToSource;
+  });
+  return wrapInsideWith(obj);
+});
+
+printStatus(Error.prototype.toSource());
+
+reportCompare(expect, actual, summary);"""
33b27420307933ffdd461b684dcfed2f6a028d95,104727,311792,bclary%bclary.com,"JavaScript Test - move SpiderMonkey extension js1_5/GC/regress-311792-02.js to js1_5/extensions/regress-311792-02.js, bug 368585, r+sr=brendan
",1171539811,"""diff --git a/js/tests/js1_5/GC/regress-311792-02.js b/js/tests/js1_5/GC/regress-311792-02.js
deleted file mode 100755
index e69de29..0000000
diff --git a/js/tests/js1_5/extensions/regress-311792-02.js b/js/tests/js1_5/extensions/regress-311792-02.js
new file mode 100755
index 0000000..52f84d5
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-311792-02.js
@@ -0,0 +1,71 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2005
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov 
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 311792;
+var summary = 'Root Array.prototype methods';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+  
+var subverted = 0;
+
+function index_getter()
+{
+	delete a[0];
+	gc();
+	for (var i = 0; i != 1 << 14; ++i) {
+		var tmp = new String(""""test"""");
+		tmp = null;
+	}
+	return 1;
+}
+
+function index_setter(value)
+{
+	subverted = value;
+}
+
+var a = [ Math.sqrt(2), 0 ];
+a.__defineGetter__(1, index_getter);
+a.__defineSetter__(1, index_setter);
+
+a.reverse();
+printStatus(subverted)
+
+reportCompare(expect, actual, summary);"""
682e77c00d593c85cabceea496f1d7cf6547200a,104728,311792,bclary%bclary.com,"JavaScript Test - move SpiderMonkey extension js1_5/GC/regress-311792-01.js to js1_5/extensions/regress-311792-01.js, bug 368585, r+sr=brendan
",1171539742,"""diff --git a/js/tests/js1_5/GC/regress-311792-01.js b/js/tests/js1_5/GC/regress-311792-01.js
deleted file mode 100755
index e69de29..0000000
diff --git a/js/tests/js1_5/extensions/regress-311792-01.js b/js/tests/js1_5/extensions/regress-311792-01.js
new file mode 100755
index 0000000..e9415a5
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-311792-01.js
@@ -0,0 +1,57 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2005
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov 
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 311792;
+var summary = 'Root Array.prototype methods';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+function index_getter()
+{
+	gc();
+	return 100;
+}
+
+var a = [0, 1];
+a.__defineGetter__(0, index_getter);
+
+uneval(a.slice(0, 1));
+  
+reportCompare(expect, actual, summary);"""
93d49edd9dac9edc13dead98e288a198cb8c823d,104770,354151,bclary%bclary.com,"JavaScript Test - move SpiderMonkey extension e4x/Regress/regress-354151-02.js to e4x/extensions/regress-354151-02.js, bug 368585, r+sr=brendan
",1171536706,"""diff --git a/js/tests/e4x/Regress/regress-354151-02.js b/js/tests/e4x/Regress/regress-354151-02.js
deleted file mode 100755
index e69de29..0000000
diff --git a/js/tests/e4x/extensions/regress-354151-02.js b/js/tests/e4x/extensions/regress-354151-02.js
new file mode 100755
index 0000000..e3cdcca
--- /dev/null
+++ b/js/tests/e4x/extensions/regress-354151-02.js
@@ -0,0 +1,67 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 354151;
+var summary = 'Bad assumptions about Array elements';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+var xml = <tag xmlns:n=""""uri:1"""" xmlns:n2=""""uri:2"""" n:a=""""1"""" n2:a=""""1""""/>;
+
+function getter() { }
+
+function setter(v)
+{
+  delete xml.@*::a;
+  xml.removeNamespace(""""uri:2"""");
+  gc();
+}
+
+Array.prototype.__defineGetter__(0, getter);
+Array.prototype.__defineSetter__(0, setter);
+
+xml.namespaceDeclarations();
+
+delete Array.prototype[0];
+
+TEST(1, expect, actual);
+
+END();"""
7021ccbd293597c3849867ad7a748b37325d9378,104771,354151,bclary%bclary.com,"JavaScript Test - move SpiderMonkey extension e4x/Regress/regress-354151-01.js to e4x/extensions/regress-354151-01.js, bug 368585, r+sr=brendan
",1171536632,"""diff --git a/js/tests/e4x/Regress/regress-354151-01.js b/js/tests/e4x/Regress/regress-354151-01.js
deleted file mode 100755
index e69de29..0000000
diff --git a/js/tests/e4x/extensions/regress-354151-01.js b/js/tests/e4x/extensions/regress-354151-01.js
new file mode 100755
index 0000000..09e6141
--- /dev/null
+++ b/js/tests/e4x/extensions/regress-354151-01.js
@@ -0,0 +1,61 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 354151;
+var summary = 'Bad assumptions about Array elements';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+function getter() { return 1; }
+function setter(v) { return v; }
+
+var xml = <a xmlns=""""foo:bar""""/>;
+
+Array.prototype.__defineGetter__(0, getter);
+Array.prototype.__defineSetter__(0, setter);
+
+xml.namespace();
+
+delete Array.prototype[0];
+
+TEST(1, expect, actual);
+
+END();"""
af85b64d2ae25743ffe5031f3629c7cf01a3f480,104772,354145,bclary%bclary.com,"JavaScript Test - move SpiderMonkey extension e4x/Regress/regress-354145-06.js to e4x/extensions/regress-354145-06.js, bug 368585, r+sr=brendan
",1171536554,"""diff --git a/js/tests/e4x/Regress/regress-354145-06.js b/js/tests/e4x/Regress/regress-354145-06.js
deleted file mode 100755
index e69de29..0000000
diff --git a/js/tests/e4x/extensions/regress-354145-06.js b/js/tests/e4x/extensions/regress-354145-06.js
new file mode 100755
index 0000000..5a3a069
--- /dev/null
+++ b/js/tests/e4x/extensions/regress-354145-06.js
@@ -0,0 +1,65 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 354145;
+var summary = 'Immutable XML';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+
+var list = <><a/><b/></>
+
+function a() {
+   delete list[1];
+   delete list[0];
+   gc();
+   for (var i = 0; i != 50000; ++i) 
+     var tmp = """"""""+i;     
+  return true;
+}
+
+var list2 = list.(a());
+
+print(uneval(list2))
+
+TEST(1, expect, actual);
+
+END();"""
d533d9bde6cd9d38237a4b83a11937df4bbead85,104914,370101,igor.bukanov%gmail.com,"Bug 370101, r=brendan
",1171263790,"""diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index 69d796f..f20bc83 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -5822,6 +5822,7 @@ interrupt:
           END_CASE(JSOP_SETMETHOD)
 
           BEGIN_CASE(JSOP_GETFUNNS)
+            SAVE_SP_AND_PC(fp);
             ok = js_GetFunctionNamespace(cx, &rval);
             if (!ok)
                 goto out;"""
44b3697a0bd244e0a3abc2a5e62bfeaf6f97945b,105006,361964,bclary%bclary.com,"JavaScript Test - regression test for bug 361964, by moz_bug_r_a4
",1171002895,"""diff --git a/js/tests/js1_5/extensions/regress-361964.js b/js/tests/js1_5/extensions/regress-361964.js
new file mode 100755
index 0000000..fd58aa6
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-361964.js
@@ -0,0 +1,79 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): moz_bug_r_a4
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 361964;
+var summary = 'Crash [@ MarkGCThingChildren] involving watch and setter';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+ 
+  if (typeof document == 'undefined')
+  {
+    document = {};
+  }
+
+  if (typeof alert == 'undefined')
+  {
+    alert = print;
+  }
+
+// Crash:
+  document.watch(""""title"""", function(a,b,c,d) {
+    return { toString : function() { alert(1); } };
+  });
+  document.title = """"xxx"""";
+
+// No crash:
+  document.watch(""""title"""", function() {
+    return { toString : function() { alert(1); } };
+  });
+  document.title = """"xxx"""";
+ 
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
a1810a65acaa864d5ddb248be42c412ecc25465d,105007,361346,bclary%bclary.com,"JavaScript Test - regression test for bug 361346, by Jesse Ruderman
",1171002605,"""diff --git a/js/tests/js1_5/extensions/regress-361346.js b/js/tests/js1_5/extensions/regress-361346.js
new file mode 100755
index 0000000..0b2a2fb
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-361346.js
@@ -0,0 +1,53 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 361346;
+var summary = 'Crash with setter, watch, GC';
+var actual = '';
+var expect = '';
+
+printBugNumber (bug);
+printStatus (summary);
+  
+expect = actual = 'No Crash';
+
+this.x setter= new Function; 
+this.watch('x', function(){}); 
+gc(); 
+x = {};
+
+reportCompare(expect, actual, summary);"""
a81428abfa8f27478a7ecb850776209b6befdad7,105012,352606,bclary%bclary.com,"JavaScript Test - regression test for bug 352606, by Jesse Ruderman
",1171001877,"""diff --git a/js/tests/js1_5/GC/regress-352606.js b/js/tests/js1_5/GC/regress-352606.js
new file mode 100755
index 0000000..793eb85
--- /dev/null
+++ b/js/tests/js1_5/GC/regress-352606.js
@@ -0,0 +1,59 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 352606;
+var summary = 'Do not crash involving post decrement';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  y = ({toString: gc}); new Function(""""y--;"""")()
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
d4508592e9a37e4860e581c97cf08bce7c733aca,105013,351973,bclary%bclary.com,"JavaScript Test - regression test for bug 351973, by Igor Bukanov
",1171001683,"""diff --git a/js/tests/js1_5/extensions/regress-351973.js b/js/tests/js1_5/extensions/regress-351973.js
new file mode 100755
index 0000000..17d42ee
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-351973.js
@@ -0,0 +1,82 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 351973;
+var summary = 'GC hazard with unrooted ids in Object.toSource';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  function removeAllProperties(o)
+    {
+      for (var prop in o)
+        delete o[prop];
+      for (var i = 0; i != 50*1000; ++i) {
+        var tmp = Math.sqrt(i+0.2);
+        tmp = 0;
+      }
+      if (typeof gc == """"function"""")
+        gc();
+    }
+
+  function run_test()
+    {
+
+      var o = {};
+      o.first = { toSource: function() { removeAllProperties(o); } };
+      for (var i = 0; i != 10; ++i) {
+        o[Math.sqrt(i + 0.1)] = 1;
+      }
+      return o.toSource();
+    }
+
+  print(run_test());
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
f5e8d0d185c6f6dbe555670547ec098c68d51e98,105014,342960,bclary%bclary.com,"JavaScript Test - regression test for bug 342960, by Georgi Guninski
",1170999544,"""diff --git a/js/tests/js1_5/extensions/regress-342960.js b/js/tests/js1_5/extensions/regress-342960.js
new file mode 100755
index 0000000..62ae25c
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-342960.js
@@ -0,0 +1,76 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Georgi Guninski
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 342960;
+var summary = 'Do not crash on large string toSource';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  expectExitCode(0);
+  expectExitCode(5);
+
+	function v() 
+	{
+		var meg="""""""";
+		var r="""""""";
+		var i;
+		print(""""don't interrupt the script. let it go."""");
+		for(i=0;i<1024*1024;i++) meg += """"v"""";	
+		for(i=0;i<1024/4;i++) r += meg;
+		var o={f1: r, f2: r, f3: r,f4: r,f5: r, f6: r, f7: r, f8: r,f9: r};
+		print('done obj');
+		var rr=r.toSource();
+		print('done toSource()');
+  }
+
+  v();
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
f67cf84e6f87d6b286b49a8c1524076bd8738a11,105016,341956,bclary%bclary.com,"JavaScript Test - regression test for bug 341956, by Igor Bukanov
",1170999338,"""diff --git a/js/tests/js1_5/extensions/regress-341956-01.js b/js/tests/js1_5/extensions/regress-341956-01.js
new file mode 100755
index 0000000..3ea7087
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-341956-01.js
@@ -0,0 +1,99 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 341956;
+var summary = 'GC Hazards in jsarray.c - unshift';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  var N = 0xFFFFFFFF;
+
+  var a = [];
+  a[N - 1] = 1;
+  a.__defineGetter__(N - 1, function() { 
+      var tmp = [];
+      tmp[N - 2] = 0;
+      if (typeof gc == 'function')
+        gc();
+      for (var i = 0; i != 50000; ++i) {
+        var tmp = 1 / 3;
+        tmp /= 10;
+      }
+      for (var i = 0; i != 1000; ++i) {
+        // Make string with 11 characters that would take
+        // (11 + 1) * 2 bytes or sizeof(JSAtom) so eventually
+        // malloc will ovewrite just freed atoms. 
+        var tmp2 = Array(12).join(' ');
+      }
+      return 10; 
+    });
+
+
+// The following always-throw getter is to stop unshift from doing
+// 2^32 iterations.
+  var toStop = """"stringToStop"""";
+  a[N - 3] = 0;
+  a.__defineGetter__(N - 3, function() { throw toStop; });
+
+  var good = false;
+
+  try {
+    a.unshift(1);
+  } catch (e) {
+    if (e === toStop)
+      good = true;
+  }
+
+  expect = true;
+  actual = good;
+
+  reportCompare(expect, actual, summary);
+
+  print('Done');
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-341956-02.js b/js/tests/js1_5/extensions/regress-341956-02.js
new file mode 100755
index 0000000..6c53d34
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-341956-02.js
@@ -0,0 +1,86 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 341956;
+var summary = 'GC Hazards in jsarray.c - pop';
+var actual = '';
+var expect = 'GETTER RESULT';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+
+  var N = 0xFFFFFFFF;
+  var a = [];  
+  a[N - 1] = 0;
+
+  var expected = """"GETTER RESULT"""";
+
+  a.__defineGetter__(N - 1, function() {
+      delete a[N - 1];
+      var tmp = [];
+      tmp[N - 2] = 1;
+
+      if (typeof gc == 'function')
+        gc();
+      for (var i = 0; i != 50000; ++i) {
+        var tmp = 1 / 3;
+        tmp /= 10;
+      }
+      for (var i = 0; i != 1000; ++i) {
+        // Make string with 11 characters that would take
+        // (11 + 1) * 2 bytes or sizeof(JSAtom) so eventually
+        // malloc will ovewrite just freed atoms.
+        var tmp2 = Array(12).join(' ');
+      }
+      return expected;
+    });
+
+  actual = a.pop();
+
+  reportCompare(expect, actual, summary);
+
+  print('Done');
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/extensions/regress-341956-03.js b/js/tests/js1_5/extensions/regress-341956-03.js
new file mode 100755
index 0000000..9f8eaca
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-341956-03.js
@@ -0,0 +1,103 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 341956;
+var summary = 'GC Hazards in jsarray.c - reverse';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+
+  var N = 0xFFFFFFFF;
+  var a = [];
+  a[N - 1] = 0;
+
+  var expected = """"GETTER RESULT"""";
+
+  a.__defineGetter__(N - 1, function() {
+      delete a[N - 1];
+      var tmp = [];
+      tmp[N - 2] = 1;
+
+      if (typeof gc == 'function')
+        gc();
+      for (var i = 0; i != 50000; ++i) {
+        var tmp = 1 / 3;
+        tmp /= 10;  
+      }
+      for (var i = 0; i != 1000; ++i) {
+        // Make string with 11 characters that would take
+        // (11 + 1) * 2 bytes or sizeof(JSAtom) so eventually
+        // malloc will ovewrite just freed atoms.
+        var tmp2 = Array(12).join(' ');
+      }
+      return expected;
+    });
+
+// The following always-throw getter is to stop unshift from doing
+// 2^32 iterations.
+  var toStop = """"stringToStop"""";
+  a[N - 3] = 0;
+  a.__defineGetter__(N - 3, function() { throw toStop; });
+
+
+  var good = false;
+
+  try {
+    a.reverse();
+  } catch (e) {
+    if (e === toStop)
+      good = true;
+  }
+
+  expect = true;
+  actual = good;
+
+  reportCompare(expect, actual, summary);
+
+  print('Done');
+
+  exitFunc ('test');
+}"""
a556a0415918ad17ab46016b0c678eb3e11f96f9,105029,341877,bclary%bclary.com,"JavaScript Test - regression tests for bug 341877, by Igor Bukanov
",1170988037,"""diff --git a/js/tests/js1_5/GC/regress-341877-01.js b/js/tests/js1_5/GC/regress-341877-01.js
new file mode 100755
index 0000000..988684f
--- /dev/null
+++ b/js/tests/js1_5/GC/regress-341877-01.js
@@ -0,0 +1,71 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 341877;
+var summary = 'GC hazard with for-in loop';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+var obj = { };
+
+var prop = """"xsomePropety"""".substr(1);
+
+obj.first = """"first""""
+
+  obj[prop] = 1;
+
+for (var elem in obj) {
+  var tmp = elem.toString(); 
+  delete obj[prop];
+  // ensure that prop is cut from all roots
+  prop = """"xsomePropety"""".substr(2);
+  obj[prop] = 2;
+  delete obj[prop];
+  prop = null;
+  if (typeof gc == 'function')
+    gc();
+  for (var i = 0; i != 50000; ++i) {
+    var tmp = 1 / 3;
+    tmp /= 10;
+  }
+}
+
+  
+reportCompare(expect, actual, summary);
diff --git a/js/tests/js1_5/GC/regress-341877-02.js b/js/tests/js1_5/GC/regress-341877-02.js
new file mode 100755
index 0000000..9849f53
--- /dev/null
+++ b/js/tests/js1_5/GC/regress-341877-02.js
@@ -0,0 +1,76 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 341877;
+var summary = 'GC hazard with for-in loop';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+var obj = { };
+
+var prop = """"xsomePropety"""".substr(1);
+
+obj.first = """"first""""
+
+  obj[prop] = 1;
+
+for (var elem in obj) {
+  var tmp = elem.toString(); 
+  delete obj[prop];
+  // ensure that prop is cut from all roots
+  prop = """"xsomePropety"""".substr(2);
+  obj[prop] = 2;
+  delete obj[prop];
+  prop = null;
+  if (typeof gc == 'function')
+    gc();
+  for (var i = 0; i != 50000; ++i) {
+    var tmp = 1 / 3;
+    tmp /= 10;
+  }
+  for (var i = 0; i != 1000; ++i) {
+    // Make string with 11 characters that would take
+    // (11 + 1) * 2 bytes or sizeof(JSAtom) so eventually
+    // malloc will ovewrite just freed atoms. 
+    var tmp2 = Array(12).join(' ');
+  }
+}
+  
+reportCompare(expect, actual, summary);"""
480334fafdb7d58602a48d98294c93b261b5ecd9,105030,313500,bclary%bclary.com,"JavaScript Test - regression test for bug 313500, by Igor Bukanov
",1170987740,"""diff --git a/js/tests/js1_5/extensions/regress-313500.js b/js/tests/js1_5/extensions/regress-313500.js
new file mode 100755
index 0000000..211612a
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-313500.js
@@ -0,0 +1,60 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2005
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 313500;
+var summary = 'Root access to """"prototype"""" property';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+printStatus('This test requires TOO_MUCH_GC');
+
+function F() { }
+
+var prepared = new Object();
+
+F.prototype = {};
+F.__defineGetter__('prototype', function() {
+        var tmp = prepared;
+        prepared = null;
+        return tmp;
+});
+
+new F();
+  
+reportCompare(expect, actual, summary);"""
69c0cd85d326485e4623a715a89b12c4d423696b,105035,361552,bclary%bclary.com,"JavaScript Test - regression test for bug 361552, by Jesse Ruderman
",1170986909,"""diff --git a/js/tests/js1_5/extensions/regress-361552.js b/js/tests/js1_5/extensions/regress-361552.js
new file mode 100755
index 0000000..15d06e1
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-361552.js
@@ -0,0 +1,58 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 361552;
+var summary = 'Crash with setter, watch, Script';
+var actual = '';
+var expect = '';
+
+printBugNumber (bug);
+printStatus (summary);
+  
+expect = actual = 'No Crash';
+
+if (typeof Script == 'undefined')
+{
+  print('Test skipped. Script not defined');
+}
+else
+{
+  this.__defineSetter__('x', gc); 
+  this.watch('x', new Script('')); 
+  x = 3;
+}
+reportCompare(expect, actual, summary);"""
3864937db7e526677c90a0c0cddb48b129ca0528,105051,338804,bclary%bclary.com,"JavaScript Test - regression tests for bug 338804, by shutdown
",1170981638,"""diff --git a/js/tests/js1_5/extensions/regress-338804-01.js b/js/tests/js1_5/extensions/regress-338804-01.js
new file mode 100755
index 0000000..205405d
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-338804-01.js
@@ -0,0 +1,100 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): shutdown
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 338804;
+var summary = 'GC hazards in constructor functions';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+printStatus ('Uses Intel Assembly');
+
+// <script>
+// SpiderMonkey Script() GC hazard exploit
+//
+// scale: magic number ;-)
+//  BonEcho/2.0a2: 3000
+//  Firefox/1.5.0.4: 2000
+//
+var rooter, scale = 3000;
+
+/*
+if(typeof(setTimeout) != """"undefined"""") {
+  setTimeout(exploit, 2000);
+} else {
+  exploit();
+}
+*/
+
+function exploit() {
+  if (typeof Script == 'undefined')
+  {
+    print('test skipped. Script not defined');
+  }
+  else
+  {
+    Script({ toString: fillHeap });
+    Script({ toString: fillHeap });
+  }
+}
+
+function createPayload() {
+  var result = """"\u9090"""", i;
+  for(i = 0; i < 9; i++) {
+    result += result;
+  }
+  /* mov eax, 0xdeadfeed; mov ebx, eax; mov ecx, eax; mov edx, eax; int3 */
+  result += """"\uEDB8\uADFE\u89DE\u89C3\u89C1\uCCC2"""";
+  return result;
+}
+
+function fillHeap() {
+  rooter = [];
+  var payload = createPayload(), block = """""""", s2 = scale * 2, i;
+  for(i = 0; i < scale; i++) {
+    rooter[i] = block = block + payload;
+  }
+  for(; i < s2; i++) {
+    rooter[i] = payload + i;
+  }
+  return """""""";
+}
+
+// </script>
+  
+reportCompare(expect, actual, summary);
diff --git a/js/tests/js1_5/extensions/regress-338804-02.js b/js/tests/js1_5/extensions/regress-338804-02.js
new file mode 100755
index 0000000..c8ec5a9
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-338804-02.js
@@ -0,0 +1,101 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): shutdown
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 338804;
+var summary = 'GC hazards in constructor functions';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+printStatus ('Uses Intel Assembly');
+
+// <script>
+// SpiderMonkey Script() GC hazard exploit
+//
+// scale: magic number ;-)
+//  BonEcho/2.0a2: 3000
+//  Firefox/1.5.0.4: 2000
+//
+var rooter, scale = 2000;
+
+exploit();
+/*
+if(typeof(setTimeout) != """"undefined"""") {
+  setTimeout(exploit, 2000);
+} else {
+  exploit();
+}
+*/
+
+function exploit() {
+  if (typeof Script == 'undefined')
+  {
+    print('test skipped. Script not defined');
+  }
+  else
+  {
+    Script({ toString: fillHeap });
+    Script({ toString: fillHeap });
+  }
+}
+
+function createPayload() {
+  var result = """"\u9090"""", i;
+  for(i = 0; i < 9; i++) {
+    result += result;
+  }
+  /* mov eax, 0xdeadfeed; mov ebx, eax; mov ecx, eax; mov edx, eax; int3 */
+  result += """"\uEDB8\uADFE\u89DE\u89C3\u89C1\uCCC2"""";
+  return result;
+}
+
+function fillHeap() {
+  rooter = [];
+  var payload = createPayload(), block = """""""", s2 = scale * 2, i;
+  for(i = 0; i < scale; i++) {
+    rooter[i] = block = block + payload;
+  }
+  for(; i < s2; i++) {
+    rooter[i] = payload + i;
+  }
+  return """""""";
+}
+
+// </script>
+  
+reportCompare(expect, actual, summary);
diff --git a/js/tests/js1_5/extensions/regress-338804-03.js b/js/tests/js1_5/extensions/regress-338804-03.js
new file mode 100755
index 0000000..9aa009c
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-338804-03.js
@@ -0,0 +1,60 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): shutdown
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 338804;
+var summary = 'GC hazards in constructor functions';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+if (typeof Script != 'undefined')
+{
+  Script({ toString: fillHeap });
+}
+RegExp({ toString: fillHeap });
+
+function fillHeap() {
+  if (typeof gc == 'function') gc();
+  var x = 1, tmp;
+  for (var i = 0; i != 50000; ++i) {
+     tmp = x / 3;
+  }
+}	
+  
+reportCompare(expect, actual, summary);"""
17a81f60c81bbf63f25be758d87873eb2c0c57e3,105053,353165,bclary%bclary.com,"JavaScript Test - regression test for bug 353165, by Igor Bukanov
",1170980912,"""diff --git a/js/tests/e4x/extensions/regress-353165.js b/js/tests/e4x/extensions/regress-353165.js
new file mode 100755
index 0000000..1f77590
--- /dev/null
+++ b/js/tests/e4x/extensions/regress-353165.js
@@ -0,0 +1,115 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 353165;
+var summary = 'Do not crash with xml_getMethod';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+crash1();
+crash2();
+
+END();
+
+function crash1()
+{
+    try {
+        var set = new XML('<a><b>text</b></a>').children('b');
+        var counter = 0;
+        Object.prototype.unrooter getter = function() {
+            ++counter;
+            if (counter == 5) {
+                set[0] = new XML('<c/>');
+                if (typeof gc == """"function"""") { 
+                    gc();
+                    var tmp = Math.sqrt(2), tmp2;
+                    for (i = 0; i != 50000; ++i)
+                        tmp2 = tmp / 2;
+                }
+            }
+            return undefined;
+        }
+
+        set.unrooter();
+    }
+    catch(ex) {
+        print('1: ' + ex);
+    }
+    TEST(1, expect, actual);
+
+}
+
+function crash2() {
+    try {
+        var expected = """"SOME RANDOM TEXT"""";
+
+        var set = <a><b>{expected}</b></a>.children('b');
+        var counter = 0;
+
+        function unrooter_impl() {
+                return String(this);
+        }
+
+        Object.prototype.unrooter getter = function() {
+            ++counter;
+            if (counter == 7)
+            return unrooter_impl;
+            if (counter == 5) {
+                set[0] = new XML('<c/>');
+                if (typeof gc == """"function"""") { 
+                    gc();
+                    var tmp = 1e500, tmp2;
+                    for (i = 0; i != 50000; ++i)
+                        tmp2 = tmp / 1.1;
+                }
+            }
+            return undefined;
+        }
+
+        var actual = set.unrooter();
+        print('actual:   ' + actual);
+        print('expected: ' + expected);
+    }
+    catch(ex) {
+        print('2: ' + ex);
+    }
+    TEST(2, true, actual === expected);
+}"""
98c519c46e57e03cc95ba582066ebc6555d972ed,105055,352846,bclary%bclary.com,"JavaScript Test - regression test for bug 352846, by Igor Bukanov
",1170980320,"""diff --git a/js/tests/e4x/extensions/regress-352846-01.js b/js/tests/e4x/extensions/regress-352846-01.js
new file mode 100755
index 0000000..8ee8abd
--- /dev/null
+++ b/js/tests/e4x/extensions/regress-352846-01.js
@@ -0,0 +1,79 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 352846;
+var summary = 'Passing unrooted value to OBJ_DEFAULT_VALUE is GC hazard';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+function prepare_xml()
+{
+  delete XML.prototype.function::toString;
+  Object.prototype.toString getter = toSource_getter;
+  return new XML(""""<a>xml_text</a>""""); 
+}
+
+var counter = 0;
+
+function toSource_getter() 
+{
+  // Make sure that lastInternalResult does not contain prepare_xml 
+  var tmp = { toSource: function() { return [1,2,3]; } };
+  uneval(tmp);
+
+  if (counter++ < 2) return undefined;
+
+  // run GC onr overwrite the heap
+  if (typeof gc == """"function"""") gc();
+  var x = 1e-100;
+  for (var i = 0; i != 50000; ++i)
+    var x2 = x / 4;
+
+  // Return a function that would access this in non-trivial way to
+  // check if prepare_xml() was rooted.
+  return function() { return this.toXMLString(); };
+}
+
+uneval({ toSource: prepare_xml });
+
+TEST(1, expect, actual);
+
+END();
diff --git a/js/tests/e4x/extensions/regress-352846-02.js b/js/tests/e4x/extensions/regress-352846-02.js
new file mode 100755
index 0000000..80ddf5d
--- /dev/null
+++ b/js/tests/e4x/extensions/regress-352846-02.js
@@ -0,0 +1,84 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 352846;
+var summary = 'Passing unrooted value to OBJ_DEFAULT_VALUE is GC hazard';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+var counter = 0;
+
+function prepare_xml()
+{
+  delete XML.prototype.function::toString;
+  Object.prototype.toString getter = toSource_getter;
+  return new XML(""""<a>xml_text</a>""""); 
+}
+
+function toSource_getter() 
+{
+  // Make sure that lastInternalResult does not contain prepare_xml 
+  var tmp = { toSource: function() { return [1,2,3]; } };
+  uneval(tmp);
+
+  if (counter++ < 2) return undefined;
+
+  // run GC onr overwrite the heap
+  if (typeof gc == """"function"""") gc();
+  var x = 1e-100;
+  for (var i = 0; i != 50000; ++i)
+    var x2 = x / 4;
+
+  // Return a function that would access this in non-trivial way to
+  // check if prepare_xml() was rooted.
+  return function() { 
+    print(""""xxx"""");
+    return this.toXMLString(); 
+  };
+}
+
+var a = [1, 2];
+
+a.sort(prepare_xml);
+
+TEST(1, expect, actual);
+
+END();
diff --git a/js/tests/e4x/extensions/regress-352846-03.js b/js/tests/e4x/extensions/regress-352846-03.js
new file mode 100755
index 0000000..e6a5538
--- /dev/null
+++ b/js/tests/e4x/extensions/regress-352846-03.js
@@ -0,0 +1,84 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 352846;
+var summary = 'Passing unrooted value to OBJ_DEFAULT_VALUE is GC hazard';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+var counter = 0;
+
+function prepare_xml()
+{
+  delete XML.prototype.function::toString;
+  Object.prototype.toString getter = toSource_getter;
+  return new XML(""""<a>xml_text</a>""""); 
+}
+
+function toSource_getter() 
+{
+  // Make sure that lastInternalResult does not contain prepare_xml 
+  var tmp = { toSource: function() { return [1,2,3]; } };
+  uneval(tmp);
+
+  if (counter++ < 2) return undefined;
+
+  // run GC onr overwrite the heap
+  if (typeof gc == """"function"""") gc();
+  var x = 1e-100;
+  for (var i = 0; i != 50000; ++i)
+    var x2 = x / 4;
+
+  // Return a function that would access this in non-trivial way to
+  // check if prepare_xml() was rooted.
+  return function() { 
+    print(""""xxx"""");
+    return this.toXMLString(); 
+  };
+}
+
+var obj = { };
+obj.length getter = prepare_xml;
+Array.reverse(obj);
+
+TEST(1, expect, actual);
+
+END();"""
2925d836e4e0ff89d41781d988cbf8fd8208d385,105057,339785,bclary%bclary.com,"JavaScript Test - regression test for bug 339785, by Igor Bukanov
",1170979992,"""diff --git a/js/tests/e4x/GC/regress-339785.js b/js/tests/e4x/GC/regress-339785.js
new file mode 100755
index 0000000..d30a83f
--- /dev/null
+++ b/js/tests/e4x/GC/regress-339785.js
@@ -0,0 +1,92 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+START(""""scanner: memory exposure to scripts"""");
+
+var bug = 339785;
+var summary = 'scanner: memory exposure to scripts';
+var actual = '';
+var expect = '';
+
+printBugNumber (bug);
+printStatus (summary);
+
+function evalXML(N)
+{
+    var str = Array(N + 1).join('a'); // str is string of N a
+    src = """"var x = <xml>&""""+str+"""";</xml>;"""";
+    try {
+        eval(src);
+        return """"Should have thrown unknown entity error"""";
+    } catch (e) {
+        return e.message;
+    }
+    return """"Unexpected"""";
+}
+
+var N1 = 1;
+var must_be_good = evalXML(N1);
+expect = 'unknown XML entity a';
+actual = must_be_good;
+TEST(1, expect, actual);
+
+function testScanner()
+{
+    for (var power = 2; power != 15; ++power) {
+        var N2 = (1 << power) - 2;
+        var can_be_bad  = evalXML(N2);
+        var diff = can_be_bad.length - must_be_good.length;
+        if (diff != 0 && diff != N2 - N1) {
+            return """"Detected memory exposure at entity length of """"+(N2+2);
+        }
+    }
+    return """"Ok"""";
+}
+
+expect = """"Ok"""";
+
+// repeat test since test does not always fail
+
+for (var iTestScanner = 0; iTestScanner < 100; ++iTestScanner)
+{
+    actual = testScanner();
+    TEST(iTestScanner+1, expect, actual);
+}
+
+
+END();"""
3c2bd87606f8e3e03f9c53bc6e14582de165a1f3,105059,324117,bclary%bclary.com,"JavaScript Test - regression test for bug 324117, by Igor Bukanov
",1170979714,"""diff --git a/js/tests/e4x/GC/regress-324117.js b/js/tests/e4x/GC/regress-324117.js
new file mode 100755
index 0000000..24ebe76
--- /dev/null
+++ b/js/tests/e4x/GC/regress-324117.js
@@ -0,0 +1,99 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+START(""""GC hazard during namespace scanning"""");
+
+var bug = 324117;
+var summary = 'GC hazard during namespace scanning';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+
+function prepare(N) 
+{
+    var xml = <xml/>;
+    var ns1 = new Namespace(""""text1"""");  
+    var ns2 = new Namespace(""""text2"""");  
+    xml.addNamespace(ns1);
+    xml.addNamespace(ns2);
+
+    // Prepare list to trigger DeutschSchorrWaite call during GC
+    cursor = xml;
+    for (var i = 0; i != N; ++i) {
+        if (i % 2 == 0) 
+            cursor = [ {a: 1}, cursor ];
+        else 
+            cursor = [ cursor, {a: 1} ];
+    }
+    return cursor;
+}
+
+function check(list, N)
+{
+    // Extract xml to verify
+    for (var i = N; i != 0; --i) {
+        list = list[i % 2];
+    }
+    var xml = list;
+    if (typeof xml != """"xml"""")
+        return false;
+    var array = xml.inScopeNamespaces();
+    if (array.length !== 3)
+        return false;
+    if (array[0].uri !== """""""")
+        return false;
+    if (array[1].uri !== """"text1"""")
+        return false;
+    if (array[2].uri !== """"text2"""")
+        return false;
+
+    return true;
+}
+
+var N = 64000;
+var list = prepare(N);
+gc();
+var ok = check(list, N);
+printStatus(ok);
+
+TEST(1, expect, actual);
+
+END();"""
c36786ecfa5f7f1dfb816f38e460f4e403c518d6,105061,353214,bclary%bclary.com,"JavaScript Test - regression tests for bug 353214, by Jesse Ruderman
",1170978302,"""diff --git a/js/tests/js1_5/extensions/regress-353214.js b/js/tests/js1_5/extensions/regress-353214.js
new file mode 100755
index 0000000..5f986fc
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-353214.js
@@ -0,0 +1,60 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 353214;
+var summary = 'decompilation of |function() { (function ([x]) { })(); eval(""""return 3;"""") }|';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  var f = function() { (function ([x]) { })(); eval('return 3;') }
+  expect = 'function() { (function ([x]) { })(); eval(""""return 3;""""); }';
+  actual = f + '';
+  compareSource(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_7/extensions/regress-353214-01.js b/js/tests/js1_7/extensions/regress-353214-01.js
new file mode 100755
index 0000000..9e3c8ed
--- /dev/null
+++ b/js/tests/js1_7/extensions/regress-353214-01.js
@@ -0,0 +1,77 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 353214;
+var summary = 'bug 353214';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  var f = function () { 
+    switch(({ get x() { export *; }, set x([[y], [x] ]) { let x; } })) { 
+    case eval(""""[[1]]"""", function(id) { return id; }): 
+    L:for(let x in (((eval).call)(eval(""""yield <x><y/></x>;"""",  """""""" ))))var x; 
+    case (uneval(this)): 
+    import x.*; 
+    }
+  }
+
+  expect = 'function () { ' +
+    'switch({ get x() { export *; }, set x([[y], [x] ]) { let x; } }) {  ' +
+    'case eval(""""[[1]]"""", function(id) { return id; }):  ' +
+    'L:for(let x in eval.call(eval(""""yield <x><y/></x>;"""",  """""""" ))){var x;} ' +
+    'case uneval(this):  ' +
+    'import x.*;  default:;' +
+    '} ' +
+    '}';
+
+  actual = f + '';
+
+  compareSource(expect, actual, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_7/extensions/regress-353214-02.js b/js/tests/js1_7/extensions/regress-353214-02.js
new file mode 100755
index 0000000..ff81e1b
--- /dev/null
+++ b/js/tests/js1_7/extensions/regress-353214-02.js
@@ -0,0 +1,61 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 353214;
+var summary = 'bug 353214';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+
+  var f = function ([x]) { let x; }
+  expect = 'function ([x]) { let x; }';
+  actual = f + '';
+
+  compareSource(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
ea11d884082cccb95263e5c8762aa50cb5cd74c1,105064,336410,bclary%bclary.com,"JavaScript Test - regression tests for bug 336410, by Georgi Guninski
",1170977279,"""diff --git a/js/tests/js1_5/extensions/regress-336410-1.js b/js/tests/js1_5/extensions/regress-336410-1.js
new file mode 100755
index 0000000..2414161
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-336410-1.js
@@ -0,0 +1,71 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Georgi Guninski
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 336410;
+var summary = 'Integer overflow in array_toSource';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+expectExitCode(0);
+expectExitCode(5);
+
+function createString(n)
+{
+  var l = n*1024*1024;
+  var r = 'r';
+
+  while (r.length < l)
+  {
+    r = r + r;
+  }
+  return r;
+}
+
+var n = 64;
+printStatus('Creating ' + n + 'M length string');
+var r = createString(n);
+printStatus('Done. length = ' + r.length);
+printStatus('Creating array');
+var o=[r, r, r, r, r, r, r, r, r];
+printStatus('object.toSource()');
+var rr = o.toSource();
+printStatus('Done.');
+
+reportCompare(expect, actual, summary);
diff --git a/js/tests/js1_5/extensions/regress-336410-2.js b/js/tests/js1_5/extensions/regress-336410-2.js
new file mode 100755
index 0000000..2113b57
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-336410-2.js
@@ -0,0 +1,71 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Georgi Guninski
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 336410;
+var summary = 'Integer overflow in array_toSource';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+expectExitCode(0);
+expectExitCode(5);
+
+function createString(n)
+{
+  var l = n*1024*1024;
+  var r = 'r';
+
+  while (r.length < l)
+  {
+    r = r + r;
+  }
+  return r;
+}
+
+var n = 128;
+printStatus('Creating ' + n + 'M length string');
+var r = createString(n);
+printStatus('Done. length = ' + r.length);
+printStatus('Creating array');
+var o=[r, r, r, r, r, r, r, r, r];
+printStatus('object.toSource()');
+var rr = o.toSource();
+printStatus('Done.');
+
+reportCompare(expect, actual, summary);"""
3448563c8651912343be1d061b6f2974c33b1d6a,105065,336409,bclary%bclary.com,"JavaScript Test - regression tests for bug 336409, by Georgi Guninski
",1170977099,"""diff --git a/js/tests/js1_5/extensions/regress-336409-1.js b/js/tests/js1_5/extensions/regress-336409-1.js
new file mode 100755
index 0000000..d07b24f
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-336409-1.js
@@ -0,0 +1,71 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Georgi Guninski
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 336409;
+var summary = 'Integer overflow in js_obj_toSource';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+expectExitCode(0);
+expectExitCode(5);
+
+function createString(n)
+{
+  var l = n*1024*1024;
+  var r = 'r';
+
+  while (r.length < l)
+  {
+    r = r + r;
+  }
+  return r;
+}
+
+var n = 64;
+printStatus('Creating ' + n + 'MB string');
+var r = createString(n);
+printStatus('Done. length = ' + r.length);
+printStatus('Creating object');
+var o = {f1: r, f2: r, f3: r,f4: r,f5: r, f6: r, f7: r, f8: r,f9: r};
+printStatus('object.toSource()');
+var rr = o.toSource();
+printStatus('Done.');
+
+reportCompare(expect, actual, summary);
diff --git a/js/tests/js1_5/extensions/regress-336409-2.js b/js/tests/js1_5/extensions/regress-336409-2.js
new file mode 100755
index 0000000..9a8b6a9
--- /dev/null
+++ b/js/tests/js1_5/extensions/regress-336409-2.js
@@ -0,0 +1,71 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Georgi Guninski
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 336409;
+var summary = 'Integer overflow in js_obj_toSource';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+expectExitCode(0);
+expectExitCode(5);
+
+function createString(n)
+{
+  var l = n*1024*1024;
+  var r = 'r';
+
+  while (r.length < l)
+  {
+    r = r + r;
+  }
+  return r;
+}
+
+var n = 128;
+printStatus('Creating ' + n + 'MB string');
+var r = createString(n);
+printStatus('Done. length = ' + r.length);
+printStatus('Creating object');
+var o = {f1: r, f2: r, f3: r,f4: r,f5: r, f6: r, f7: r, f8: r,f9: r};
+printStatus('object.toSource()');
+var rr = o.toSource();
+printStatus('Done.');
+
+reportCompare(expect, actual, summary);"""
7595b9c1fb58d239c4f2016c1991c46d51dd23ec,105068,338121,bclary%bclary.com,"JavaScript Test - regression test for bug 338121, by Georgi Guninski
",1170975701,"""diff --git a/js/tests/js1_5/Function/regress-338121-01.js b/js/tests/js1_5/Function/regress-338121-01.js
new file mode 100755
index 0000000..2991309
--- /dev/null
+++ b/js/tests/js1_5/Function/regress-338121-01.js
@@ -0,0 +1,59 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Georgi Guninski
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 338121;
+var summary = 'Issues with JS_ARENA_ALLOCATE_CAST';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+var fe=""""v"""";
+
+for (i=0; i<25; i++) 
+  fe += fe;
+
+var fu=new Function(
+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, 
+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe,
+  """"done""""
+  );
+
+print('Done');
+
+reportCompare(expect, actual, summary);
diff --git a/js/tests/js1_5/Function/regress-338121-02.js b/js/tests/js1_5/Function/regress-338121-02.js
new file mode 100755
index 0000000..d9b309b
--- /dev/null
+++ b/js/tests/js1_5/Function/regress-338121-02.js
@@ -0,0 +1,63 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Georgi Guninski
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 338121;
+var summary = 'Issues with JS_ARENA_ALLOCATE_CAST';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+var fe=""""vv"""";
+
+for (i=0; i<24; i++) 
+  fe += fe;
+
+var fu=new Function(
+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, 
+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe,
+  """"done""""
+  );
+
+//alert(""""fu=""""+fu);
+//print(""""fu=""""+fu);
+var fuout = 'fu=' + fu;
+
+print('Done');
+
+reportCompare(expect, actual, summary);
diff --git a/js/tests/js1_5/Function/regress-338121-03.js b/js/tests/js1_5/Function/regress-338121-03.js
new file mode 100755
index 0000000..df2cd76
--- /dev/null
+++ b/js/tests/js1_5/Function/regress-338121-03.js
@@ -0,0 +1,65 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Georgi Guninski
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 338121;
+var summary = 'Issues with JS_ARENA_ALLOCATE_CAST';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+var fe=""""vv"""";
+
+for (i=0; i<24; i++) 
+  fe += fe;
+
+var fu=new Function(
+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, 
+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, 
+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, 
+  fe, fe, fe,
+  """"done""""
+  );
+
+//alert(""""fu=""""+fu);
+//print(""""fu=""""+fu);
+var fuout = 'fu=' + fu;
+
+print('Done');
+
+reportCompare(expect, actual, summary);"""
8a96b7d59a9973485bbbb85cb01bb64157d324c3,105069,338001,bclary%bclary.com,"JavaScript Test - regression test for bug 338001, by Georgi Guninski
",1170975401,"""diff --git a/js/tests/js1_5/Function/regress-338001.js b/js/tests/js1_5/Function/regress-338001.js
new file mode 100755
index 0000000..ac4c27d
--- /dev/null
+++ b/js/tests/js1_5/Function/regress-338001.js
@@ -0,0 +1,64 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Georgi Guninski
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 338001;
+var summary = 'integer overflow in jsfun.c:Function';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+expectExitCode(0);
+expectExitCode(5);
+
+var fe=""""f"""";
+
+for (i=0; i<25; i++) 
+  fe += fe;
+
+var fu=new Function(
+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, 
+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, 
+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, 
+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe,
+  """"done""""
+  );
+  
+print('Done');
+
+reportCompare(expect, actual, summary);"""
3f27354053c1aa560a02817a87e3caaa21661504,105080,325425,bclary%bclary.com,"JavaScript Test - regression test for bug 325425, by Igor Bukanov
",1170970110,"""diff --git a/js/tests/e4x/Regress/regress-325425.js b/js/tests/e4x/Regress/regress-325425.js
new file mode 100755
index 0000000..d58024e
--- /dev/null
+++ b/js/tests/e4x/Regress/regress-325425.js
@@ -0,0 +1,58 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 325425;
+var summary = 'jsxml.c: Bad assumptions about js_ConstructObject';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+try
+{
+    QName = function() { }; 
+    <xml/>.elements("""""""");
+}
+catch(ex)
+{
+    printStatus(ex + '');
+}
+TEST(1, expect, actual);
+
+END();"""
a7ef0a378e8edcf3c500bffc0e01e3713dad5a83,105187,369413,bzbarsky%mit.edu,"Check lengths.  Bug 369413, r+sr=jst
",1170744006,"""diff --git a/dom/src/base/nsGlobalWindow.cpp b/dom/src/base/nsGlobalWindow.cpp
index 2118d5a..2d52804 100644
--- a/dom/src/base/nsGlobalWindow.cpp
+++ b/dom/src/base/nsGlobalWindow.cpp
@@ -5266,8 +5266,8 @@ nsGlobalWindow::Atob(const nsAString& aAsciiBase64String,
   }
 
   PRInt32 resultLen = dataLen;
-  if (base64[dataLen - 1] == '=') {
-    if (base64[dataLen - 2] == '=') {
+  if (!base64.IsEmpty() && base64[dataLen - 1] == '=') {
+    if (base64.Length() > 1 && base64[dataLen - 2] == '=') {
       resultLen = dataLen - 2;
     } else {
       resultLen = dataLen - 1;"""
7d4adf63b125424616f3a4f5ba878d1f9b2938ae,105224,360493,mconnor%steelgryphon.com,"bug 360493 - add filters to password manager to also match on actionURL, r=mano, sr+a=dveditz
",1170701090,"""diff --git a/calendar/sunbird/app/profile/sunbird.js b/calendar/sunbird/app/profile/sunbird.js
index ee5b9b2..0b36c21 100644
--- a/calendar/sunbird/app/profile/sunbird.js
+++ b/calendar/sunbird/app/profile/sunbird.js
@@ -208,7 +208,8 @@ pref(""""alerts.totalOpenTime"""", 4000);
 
 pref(""""signon.rememberSignons"""",              true);
 pref(""""signon.expireMasterPassword"""",         false);
-pref(""""signon.SignonFileName"""", """"signons.txt"""");
+pref(""""signon.SignonFileName"""",               """"signons.txt"""");
+pref(""""signon.SignonFileName2"""",              """"signons2.txt"""");
 
 // We want to make sure mail URLs are handled externally...
 pref(""""network.protocol-handler.external.mailto"""", true); // for mail"""
604af53068566e72dc9fd159915c368c770bef1d,105469,368655,bzbarsky%mit.edu,"Check with CAPS before executing in a sandbox.  Bug 368655, r+sr=jst.
",1170175095,"""diff --git a/dom/src/jsurl/nsJSProtocolHandler.cpp b/dom/src/jsurl/nsJSProtocolHandler.cpp
index f23c627..6632611 100644
--- a/dom/src/jsurl/nsJSProtocolHandler.cpp
+++ b/dom/src/jsurl/nsJSProtocolHandler.cpp
@@ -255,9 +255,31 @@ nsresult nsJSThunk::EvaluateScript(nsIChannel *aChannel,
         // prevent it from accessing data it doesn't have permissions
         // to access.
 
-        nsIXPConnect *xpc = nsContentUtils::XPConnect();
+        // First check to make sure it's OK to evaluate this script to
+        // start with.  For example, script could be disabled.
+        if (!principal) {
+            principal = do_CreateInstance(""""@mozilla.org/nullprincipal;1"""");
+            if (!principal) {
+                return NS_ERROR_OUT_OF_MEMORY;
+            }
+        }
 
         JSContext *cx = (JSContext*)scriptContext->GetNativeContext();
+
+        PRBool ok;
+        rv = securityManager->CanExecuteScripts(cx, principal, &ok);
+        if (NS_FAILED(rv)) {
+            return rv;
+        }
+
+        if (!ok) {
+            // Treat this as returning undefined from the script.  That's what
+            // nsJSContext does.
+            return NS_ERROR_DOM_RETVAL_UNDEFINED;
+        }
+
+        nsIXPConnect *xpc = nsContentUtils::XPConnect();
+
         nsCOMPtr<nsIXPConnectJSObjectHolder> sandbox;
         rv = xpc->CreateSandbox(cx, principal, getter_AddRefs(sandbox));
         NS_ENSURE_SUCCESS(rv, rv);"""
ebcc6779bf425b1cefa0e7b9d9865c583b2766dd,105529,366082,jst%mozilla.org,"Fixing bug 366082. Prevent Adobe Acrobat from loading URLs other than http:, https:, or ftp: w/o specifying a target. r+sr=dveditz@cruzio.com
",1170013837,"""diff --git a/modules/plugin/base/src/ns4xPlugin.cpp b/modules/plugin/base/src/ns4xPlugin.cpp
index 07510bd..36cedbb 100644
--- a/modules/plugin/base/src/ns4xPlugin.cpp
+++ b/modules/plugin/base/src/ns4xPlugin.cpp
@@ -975,6 +975,21 @@ _geturl(NPP npp, const char* relativeURL, const char* target)
   (""""NPN_GetURL: npp=%p, target=%s, url=%s\n"""", (void *)npp, target,
    relativeURL));
 
+  // Block Adobe Acrobat from loading URLs that are not http:, https:,
+  // or ftp: URLs if the given target is null.
+  if (target == nsnull && relativeURL &&
+      (strncmp(relativeURL, """"http:"""", 5) != 0) &&
+      (strncmp(relativeURL, """"https:"""", 6) != 0) &&
+      (strncmp(relativeURL, """"ftp:"""", 4) != 0)) {
+    ns4xPluginInstance *inst = (ns4xPluginInstance *) npp->ndata;
+
+    const char *name = nsPluginHostImpl::GetPluginName(inst);
+
+    if (name && strstr(name, """"Adobe"""") && strstr(name, """"Acrobat"""")) {
+      return NPERR_NO_ERROR;
+    }
+  }
+
   return MakeNew4xStreamInternal (npp, relativeURL, target,
                                   eNPPStreamTypeInternal_Get);
 }
diff --git a/modules/plugin/base/src/nsPluginHostImpl.cpp b/modules/plugin/base/src/nsPluginHostImpl.cpp
index c05c800..243149e 100644
--- a/modules/plugin/base/src/nsPluginHostImpl.cpp
+++ b/modules/plugin/base/src/nsPluginHostImpl.cpp
@@ -2566,6 +2566,20 @@ nsPluginHostImpl::GetInst()
   return sInst;
 }
 
+// static
+const char *
+nsPluginHostImpl::GetPluginName(nsIPluginInstance *aPluginInstance)
+{
+  nsActivePlugin *plugin =
+    gActivePluginList ? gActivePluginList->find(aPluginInstance) : nsnull;
+
+  if (plugin && plugin->mPluginTag) {
+    return plugin->mPluginTag->mName;
+  }
+
+  return nsnull;
+}
+
 
 ////////////////////////////////////////////////////////////////////////
 NS_IMETHODIMP nsPluginHostImpl::GetValue(nsPluginManagerVariable aVariable, void *aValue)
@@ -6699,7 +6713,7 @@ nsresult nsPluginHostImpl::AddPrefObserver()
 
 ////////////////////////////////////////////////////////////////////////////////////
 nsresult nsPluginStreamListenerPeer::ServeStreamAsFile(nsIRequest *request,
-                                                        nsISupports* aContext)
+                                                       nsISupports* aContext)
 {
   if (!mInstance)
     return NS_ERROR_FAILURE;
diff --git a/modules/plugin/base/src/nsPluginHostImpl.h b/modules/plugin/base/src/nsPluginHostImpl.h
index 9b032e3..fe486a5 100644
--- a/modules/plugin/base/src/nsPluginHostImpl.h
+++ b/modules/plugin/base/src/nsPluginHostImpl.h
@@ -213,6 +213,8 @@ public:
 
   NS_DECL_ISUPPORTS
 
+  static const char *GetPluginName(nsIPluginInstance *aPluginInstance);
+
   //nsIPluginManager interface - the main interface nsIPlugin communicates to
 
   NS_IMETHOD"""
f0f47be3ab5755ad084626bd4b22b92618787b92,105649,315473,mrbkap%gmail.com,"Use a better replacement character. bug 315473, r=bzbarsky sr=sicking
",1169746213,"""diff --git a/parser/htmlparser/src/nsScanner.cpp b/parser/htmlparser/src/nsScanner.cpp
index aff4de0..e2fb44c 100644
--- a/parser/htmlparser/src/nsScanner.cpp
+++ b/parser/htmlparser/src/nsScanner.cpp
@@ -51,6 +51,9 @@
 #include """"nsCRT.h""""
 #include """"nsParser.h""""
 
+// We replace NUL characters with this character.
+static PRUnichar sInvalid = UCS2_REPLACEMENT_CHAR;
+
 nsReadEndCondition::nsReadEndCondition(const PRUnichar* aTerminateChars) :
   mChars(aTerminateChars), mFilter(PRUnichar(~0)) // All bits set
 {
@@ -758,7 +761,7 @@ nsresult nsScanner::ReadTagIdentifier(nsScannerSharedSubstring& aString) {
         break;
 
       case '\0':
-        ReplaceCharacter(current, '-');
+        ReplaceCharacter(current, sInvalid);
         break;
 
       default:
@@ -1059,8 +1062,8 @@ nsresult nsScanner::ReadWhile(nsString& aString,
  
     theChar=*current;
     if (theChar == '\0') {
-      ReplaceCharacter(current, '-');
-      theChar = '-';
+      ReplaceCharacter(current, sInvalid);
+      theChar = sInvalid;
     }
     if(theChar) {
       PRInt32 pos=aValidSet.FindChar(theChar);
@@ -1121,8 +1124,8 @@ nsresult nsScanner::ReadUntil(nsAString& aString,
   while (current != mEndPosition) {
     theChar = *current;
     if (theChar == '\0') {
-      ReplaceCharacter(current, '-');
-      theChar = '-';
+      ReplaceCharacter(current, sInvalid);
+      theChar = sInvalid;
     }
 
     // Filter out completely wrong characters
@@ -1181,8 +1184,8 @@ nsresult nsScanner::ReadUntil(nsScannerSharedSubstring& aString,
   while (current != mEndPosition) {
     theChar = *current;
     if (theChar == '\0') {
-      ReplaceCharacter(current, '-');
-      theChar = '-';
+      ReplaceCharacter(current, sInvalid);
+      theChar = sInvalid;
     }
 
     // Filter out completely wrong characters
@@ -1242,8 +1245,8 @@ nsresult nsScanner::ReadUntil(nsScannerIterator& aStart,
   
   while (current != mEndPosition) {
     if (theChar == '\0') {
-      ReplaceCharacter(current, '-');
-      theChar = '-';
+      ReplaceCharacter(current, sInvalid);
+      theChar = sInvalid;
     }
 
     // Filter out completely wrong characters
@@ -1306,8 +1309,8 @@ nsresult nsScanner::ReadUntil(nsAString& aString,
 
   while (current != mEndPosition) {
     if (theChar == '\0') {
-      ReplaceCharacter(current, '-');
-      theChar = '-';
+      ReplaceCharacter(current, sInvalid);
+      theChar = sInvalid;
     }
 
     if (aTerminalChar == theChar) {"""
a7c7fa1548eacc35223532645887cd536e918b82,105664,361298,roc+%cs.cmu.edu,"Bug 361298. Don't allow overlarge custom cursors. r+sr=pavlov
",1169691442,"""diff --git a/widget/src/gtk2/nsWindow.cpp b/widget/src/gtk2/nsWindow.cpp
index ed8ad36..a172b8b 100644
--- a/widget/src/gtk2/nsWindow.cpp
+++ b/widget/src/gtk2/nsWindow.cpp
@@ -959,6 +959,15 @@ nsWindow::SetCursor(imgIContainer* aCursor,
     if (!pixbuf)
         return NS_ERROR_NOT_AVAILABLE;
 
+    int width = gdk_pixbuf_get_width(pixbuf);
+    int height = gdk_pixbuf_get_height(pixbuf);
+    // Reject cursors greater than 128 pixels in some direction, to prevent
+    // spoofing.
+    // XXX ideally we should rescale. Also, we could modify the API to
+    // allow trusted content to set larger cursors.
+    if (width > 128 || height > 128)
+        return NS_ERROR_NOT_AVAILABLE;
+
     // Looks like all cursors need an alpha channel (tested on Gtk 2.4.4). This
     // is of course not documented anywhere...
     // So add one if there isn't one yet
@@ -974,8 +983,6 @@ nsWindow::SetCursor(imgIContainer* aCursor,
     GdkCursor* cursor;
     if (!_gdk_cursor_new_from_pixbuf || !_gdk_display_get_default) {
         // Fallback to a monochrome cursor
-        int width = gdk_pixbuf_get_width(pixbuf);
-        int height = gdk_pixbuf_get_height(pixbuf);
         GdkPixmap* mask = gdk_pixmap_new(NULL, width, height, 1);
         if (!mask)
             return NS_ERROR_OUT_OF_MEMORY;
diff --git a/widget/src/windows/nsWindow.cpp b/widget/src/windows/nsWindow.cpp
index 99f2280..198fa7e 100644
--- a/widget/src/windows/nsWindow.cpp
+++ b/widget/src/windows/nsWindow.cpp
@@ -2786,17 +2786,26 @@ NS_IMETHODIMP nsWindow::SetCursor(imgIContainer* aCursor,
     return NS_OK;
   }
 
-#ifdef MOZ_CAIRO_GFX
+  // Get the image data
   nsCOMPtr<gfxIImageFrame> frame;
   aCursor->GetFrameAt(0, getter_AddRefs(frame));
   if (!frame)
     return NS_ERROR_NOT_AVAILABLE;
 
   PRInt32 width, height;
-  PRUint32 bpr;
-  gfx_format format;
   frame->GetWidth(&width);
   frame->GetHeight(&height);
+
+  // Reject cursors greater than 128 pixels in some direction, to prevent
+  // spoofing.
+  // XXX ideally we should rescale. Also, we could modify the API to
+  // allow trusted content to set larger cursors.
+  if (width > 128 || height > 128)
+    return NS_ERROR_NOT_AVAILABLE;
+
+#ifdef MOZ_CAIRO_GFX
+  PRUint32 bpr;
+  gfx_format format;
   frame->GetImageBytesPerRow(&bpr);
   frame->GetFormat(&format);
 
@@ -2868,16 +2877,6 @@ NS_IMETHODIMP nsWindow::SetCursor(imgIContainer* aCursor,
 
 #else
 
-  // Get the image data
-  nsCOMPtr<gfxIImageFrame> frame;
-  aCursor->GetFrameAt(0, getter_AddRefs(frame));
-  if (!frame)
-    return NS_ERROR_NOT_AVAILABLE;
-
-  PRInt32 width, height;
-  frame->GetWidth(&width);
-  frame->GetHeight(&height);
-
   gfx_format format;
   nsresult rv = frame->GetFormat(&format);
   if (NS_FAILED(rv))
@@ -2889,6 +2888,8 @@ NS_IMETHODIMP nsWindow::SetCursor(imgIContainer* aCursor,
 
   // On Win2k with nVidia video drivers 71.84 at 32 bit color, cursors that 
   // have 8 bit alpha are truncated to 64x64.  Skip cursors larger than that.
+  // This is redundant with checks above, but we'll leave it in as a reminder
+  // in case we start accepting larger cursors again
   if (IsWin2k() && (format == gfxIFormats::BGR_A8) &&
       (width > 64 || height > 64))
     return NS_ERROR_FAILURE;"""
60d008126f7777e6fcb4f49efcbe9085a20d4251,105670,315473,mrbkap%gmail.com,"Handle NUL characters in HTML input better. bug 315473, r=jst sr=sicking
",1169688341,"""diff --git a/parser/htmlparser/src/nsScanner.cpp b/parser/htmlparser/src/nsScanner.cpp
index 35908b3..aff4de0 100644
--- a/parser/htmlparser/src/nsScanner.cpp
+++ b/parser/htmlparser/src/nsScanner.cpp
@@ -1,4 +1,5 @@
 /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=2 sw=2 et tw=78: */
 /* ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
  *
@@ -454,7 +455,7 @@ nsresult nsScanner::GetChar(PRUnichar& aChar) {
   }
 
   if(NS_OK == result){
-    aChar=*mCurrentPosition++;
+    aChar = *mCurrentPosition++;
     --mCountRemaining;
   }
   return result;
@@ -753,9 +754,13 @@ nsresult nsScanner::ReadTagIdentifier(nsScannerSharedSubstring& aString) {
       case '<':
       case '>':
       case '/':
-      case '\0':
         found = PR_TRUE;
         break;
+
+      case '\0':
+        ReplaceCharacter(current, '-');
+        break;
+
       default:
         break;
     }
@@ -770,11 +775,6 @@ nsresult nsScanner::ReadTagIdentifier(nsScannerSharedSubstring& aString) {
     AppendUnicodeTo(mCurrentPosition, current, aString);
   }
 
-  // Drop NULs on the floor since nobody really likes them.
-  while (current != end && !*current) {
-    ++current;
-  }
-
   SetPosition(current);  
   if (current == end) {
     result = FillBuffer();
@@ -1058,6 +1058,10 @@ nsresult nsScanner::ReadWhile(nsString& aString,
   while(current != end) {
  
     theChar=*current;
+    if (theChar == '\0') {
+      ReplaceCharacter(current, '-');
+      theChar = '-';
+    }
     if(theChar) {
       PRInt32 pos=aValidSet.FindChar(theChar);
       if(kNotFound==pos) {
@@ -1116,6 +1120,10 @@ nsresult nsScanner::ReadUntil(nsAString& aString,
   
   while (current != mEndPosition) {
     theChar = *current;
+    if (theChar == '\0') {
+      ReplaceCharacter(current, '-');
+      theChar = '-';
+    }
 
     // Filter out completely wrong characters
     // Check if all bits are in the required area
@@ -1172,6 +1180,10 @@ nsresult nsScanner::ReadUntil(nsScannerSharedSubstring& aString,
   
   while (current != mEndPosition) {
     theChar = *current;
+    if (theChar == '\0') {
+      ReplaceCharacter(current, '-');
+      theChar = '-';
+    }
 
     // Filter out completely wrong characters
     // Check if all bits are in the required area
@@ -1229,6 +1241,11 @@ nsresult nsScanner::ReadUntil(nsScannerIterator& aStart,
   }
   
   while (current != mEndPosition) {
+    if (theChar == '\0') {
+      ReplaceCharacter(current, '-');
+      theChar = '-';
+    }
+
     // Filter out completely wrong characters
     // Check if all bits are in the required area
     if(!(theChar & aEndCondition.mFilter)) {
@@ -1244,7 +1261,7 @@ nsresult nsScanner::ReadUntil(nsScannerIterator& aStart,
 
           return NS_OK;
         }
-      ++setcurrent;
+        ++setcurrent;
       }
     }
     
@@ -1288,6 +1305,11 @@ nsresult nsScanner::ReadUntil(nsAString& aString,
   }
 
   while (current != mEndPosition) {
+    if (theChar == '\0') {
+      ReplaceCharacter(current, '-');
+      theChar = '-';
+    }
+
     if (aTerminalChar == theChar) {
       if(addTerminal)
         ++current;"""
5291041be2bfe99c452cbcb20430dfa7da5db40a,105814,367243,bzbarsky%mit.edu,"Don't calculate stuff with dirty lists.  Bug 367243, r=mats, sr=dbaron
",1169255937,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index 68617e1..cc88f2f 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -2024,15 +2024,22 @@ nsCSSFrameConstructor::CreateGeneratedFrameFor(nsIFrame*             aParentFram
           return NS_ERROR_OUT_OF_MEMORY;
 
         counterList->Insert(node);
-        if (counterList->IsLast(node))
-          node->Calc(counterList);
-        else {
-          counterList->SetDirty();
-          CountersDirty();
+        PRBool dirty = counterList->IsDirty();
+        if (!dirty) {
+          if (counterList->IsLast(node)) {
+            node->Calc(counterList);
+            node->GetText(contentString);
+          }
+          // In all other cases (list already dirty or node not at the end),
+          // just start with an empty string for now and when we recalculate
+          // the list we'll change the value to the right one.
+          else {
+            counterList->SetDirty();
+            CountersDirty();
+          }
         }
 
         textPtr = &node->mText; // text node assigned below
-        node->GetText(contentString);
       }
       break;
 
diff --git a/layout/base/nsCounterManager.cpp b/layout/base/nsCounterManager.cpp
index fbc31c1..c56065a 100644
--- a/layout/base/nsCounterManager.cpp
+++ b/layout/base/nsCounterManager.cpp
@@ -46,6 +46,8 @@
 // Should be called immediately after calling |Insert|.
 void nsCounterUseNode::Calc(nsCounterList *aList)
 {
+    NS_ASSERTION(!aList->IsDirty(),
+                 """"Why are we calculating with a dirty list?"""");
     mValueAfter = aList->ValueBefore(this);
 }
 
@@ -53,6 +55,8 @@ void nsCounterUseNode::Calc(nsCounterList *aList)
 // Should be called immediately after calling |Insert|.
 void nsCounterChangeNode::Calc(nsCounterList *aList)
 {
+    NS_ASSERTION(!aList->IsDirty(),
+                 """"Why are we calculating with a dirty list?"""");
     if (mType == RESET) {
         mValueAfter = mChangeValue;
     } else {
@@ -235,7 +239,12 @@ nsCounterManager::AddResetOrIncrement(nsIFrame *aFrame, PRInt32 aIndex,
         // list.
         return PR_TRUE;
     }
-    node->Calc(counterList);
+
+    // Don't call Calc() if the list is already dirty -- it'll be recalculated
+    // anyway, and trying to calculate with a dirty list doesn't work.
+    if (NS_LIKELY(!counterList->IsDirty())) {
+        node->Calc(counterList);
+    }
     return PR_FALSE;
 }
 
diff --git a/layout/base/nsCounterManager.h b/layout/base/nsCounterManager.h
index 0c341ed..61cc3a0 100644
--- a/layout/base/nsCounterManager.h
+++ b/layout/base/nsCounterManager.h
@@ -190,7 +190,11 @@ public:
 
     void Insert(nsCounterNode* aNode) {
         nsGenConList::Insert(aNode);
-        SetScope(aNode);
+        // Don't SetScope if we're dirty -- we'll reset all the scopes anyway,
+        // and we can't usefully compute scopes right now.
+        if (NS_LIKELY(!IsDirty())) {
+            SetScope(aNode);
+        }
     }
 
     nsCounterNode* First() {"""
516c3688b2998c925cb72e267ba5791269ae9789,105878,362872,brendan%mozilla.org,"Fix for 362872, r=mrbkap.
",1169080118,"""diff --git a/js/src/jsdbgapi.c b/js/src/jsdbgapi.c
index f7528d7..3ed4199 100644
--- a/js/src/jsdbgapi.c
+++ b/js/src/jsdbgapi.c
@@ -562,8 +562,7 @@ js_watch_set(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
         }
     }
     DBG_UNLOCK(rt);
-    JS_ASSERT(0);       /* XXX can't happen */
-    return JS_FALSE;
+    return JS_TRUE;
 }
 
 JSBool JS_DLL_CALLBACK"""
0c477f16d31ba7359cec938b26c534ea0e23bfe0,105888,363813,roc+%cs.cmu.edu,"Bug 363813. When inserting frames into a list of out-of-flow frames, finding the correct position by comparing positions in the content tree doesn't always work, in particular when the frames are for anonymous content. So compare the positions of placeholders in the frame tree, which should always work (if we're careful). r+sr=dbaron
",1169074104,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index 879b1c4..68617e1 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -1232,9 +1232,17 @@ nsFrameConstructorState::nsFrameConstructorState(nsIPresShell* aPresShell,
 
 nsFrameConstructorState::~nsFrameConstructorState()
 {
+  // Frame order comparison functions only work properly when the placeholders
+  // have been inserted into the frame tree. So for example if we have a new float
+  // containing the placeholder for a new abs-pos frame, and we process the abs-pos
+  // insertion first, then we won't be able to find the right place to insert in
+  // in the abs-pos list. So put floats in first, because they can contain placeholders
+  // for abs-pos and fixed-pos items whose containing blocks are outside the floats.
+  // Then put abs-pos frames in, because they can contain placeholders for fixed-pos
+  // items whose containing block is outside the abs-pos frames. 
+  ProcessFrameInsertions(mFloatedItems, nsGkAtoms::floatList);
   ProcessFrameInsertions(mAbsoluteItems, nsGkAtoms::absoluteList);
   ProcessFrameInsertions(mFixedItems, nsGkAtoms::fixedList);
-  ProcessFrameInsertions(mFloatedItems, nsGkAtoms::floatList);
 }
 
 static nsIFrame*
@@ -1473,19 +1481,20 @@ nsFrameConstructorState::ProcessFrameInsertions(nsAbsoluteItems& aFrameItems,
     // So first test the last child of the containing block
     nsIFrame* lastChild = nsLayoutUtils::GetLastSibling(firstChild);
 
+    // CompareTreePosition uses placeholder hierarchy for out of flow frames,
+    // so this will make out-of-flows respect the ordering of placeholders,
+    // which is great because it takes care of anonymous content.
     if (!lastChild ||
-        nsLayoutUtils::CompareTreePosition(lastChild->GetContent(),
-                                           firstNewFrame->GetContent(),
-                                           containingBlock->GetContent()) < 0) {
+        nsLayoutUtils::CompareTreePosition(lastChild, firstNewFrame, containingBlock) < 0) {
       // no lastChild, or lastChild comes before the new children, so just append
       rv = containingBlock->AppendFrames(aChildListName, firstNewFrame);
     } else {
       nsIFrame* insertionPoint = nsnull;
       // try the other children
       for (nsIFrame* f = firstChild; f != lastChild; f = f->GetNextSibling()) {
-        if (nsLayoutUtils::CompareTreePosition(f->GetContent(),
-                                               firstNewFrame->GetContent(),
-                                               containingBlock->GetContent()) > 0) {
+        PRInt32 compare =
+          nsLayoutUtils::CompareTreePosition(f, firstNewFrame, containingBlock);
+        if (compare > 0) {
           // f comes after the new children, so stop here and insert after
           // the previous frame
           break;
diff --git a/layout/base/nsLayoutUtils.cpp b/layout/base/nsLayoutUtils.cpp
index e4a1c33..f9d8668 100644
--- a/layout/base/nsLayoutUtils.cpp
+++ b/layout/base/nsLayoutUtils.cpp
@@ -360,6 +360,96 @@ nsLayoutUtils::DoCompareTreePosition(nsIContent* aContent1,
   return index1 - index2;
 }
 
+static nsIFrame* FillAncestors(nsIFrame* aFrame,
+                               nsIFrame* aStopAtAncestor, nsFrameManager* aFrameManager,
+                               nsTArray<nsIFrame*>* aAncestors)
+{
+  while (aFrame && aFrame != aStopAtAncestor) {
+    aAncestors->AppendElement(aFrame);
+    aFrame = nsLayoutUtils::GetParentOrPlaceholderFor(aFrameManager, aFrame);
+  }
+  return aFrame;
+}
+
+// Return true if aFrame1 is after aFrame2
+static PRBool IsFrameAfter(nsIFrame* aFrame1, nsIFrame* aFrame2)
+{
+  nsIFrame* f = aFrame2;
+  do {
+    f = f->GetNextSibling();
+    if (f == aFrame1)
+      return PR_TRUE;
+  } while (f);
+  return PR_FALSE;
+}
+
+// static
+PRInt32
+nsLayoutUtils::DoCompareTreePosition(nsIFrame* aFrame1,
+                                     nsIFrame* aFrame2,
+                                     PRInt32 aIf1Ancestor,
+                                     PRInt32 aIf2Ancestor,
+                                     nsIFrame* aCommonAncestor)
+{
+  NS_PRECONDITION(aFrame1, """"aFrame1 must not be null"""");
+  NS_PRECONDITION(aFrame2, """"aFrame2 must not be null"""");
+
+  nsPresContext* presContext = aFrame1->GetPresContext();
+  if (presContext != aFrame2->GetPresContext()) {
+    NS_ERROR(""""no common ancestor at all, different documents"""");
+    return 0;
+  }
+  nsFrameManager* frameManager = presContext->PresShell()->FrameManager();
+
+  nsAutoTArray<nsIFrame*,20> frame1Ancestors;
+  if (!FillAncestors(aFrame1, aCommonAncestor, frameManager, &frame1Ancestors)) {
+    // We reached the root of the frame tree ... if aCommonAncestor was set,
+    // it is wrong
+    aCommonAncestor = nsnull;
+  }
+
+  nsAutoTArray<nsIFrame*,20> frame2Ancestors;
+  if (!FillAncestors(aFrame2, aCommonAncestor, frameManager, &frame2Ancestors) &&
+      aCommonAncestor) {
+    // We reached the root of the frame tree ... aCommonAncestor was wrong.
+    // Try again with no hint.
+    return DoCompareTreePosition(aFrame1, aFrame2,
+                                 aIf1Ancestor, aIf2Ancestor, nsnull);
+  }
+
+  PRInt32 last1 = PRInt32(frame1Ancestors.Length()) - 1;
+  PRInt32 last2 = PRInt32(frame2Ancestors.Length()) - 1;
+  while (last1 >= 0 && last2 >= 0 &&
+         frame1Ancestors[last1] == frame2Ancestors[last2]) {
+    last1--;
+    last2--;
+  }
+
+  if (last1 < 0) {
+    if (last2 < 0) {
+      NS_ASSERTION(aFrame1 == aFrame2, """"internal error?"""");
+      return 0;
+    }
+    // aFrame1 is an ancestor of aFrame2
+    return aIf1Ancestor;
+  }
+
+  if (last2 < 0) {
+    // aFrame2 is an ancestor of aFrame1
+    return aIf2Ancestor;
+  }
+
+  nsIFrame* ancestor1 = frame1Ancestors[last1];
+  nsIFrame* ancestor2 = frame2Ancestors[last2];
+  // Now we should be able to walk sibling chains to find which one is first
+  if (IsFrameAfter(ancestor2, ancestor1))
+    return -1;
+  if (IsFrameAfter(ancestor1, ancestor2))
+    return 1;
+  NS_WARNING(""""Frames were in different child lists???"""");
+  return 0;
+}
+
 // static
 nsIFrame* nsLayoutUtils::GetLastSibling(nsIFrame* aFrame) {
   if (!aFrame) {
diff --git a/layout/base/nsLayoutUtils.h b/layout/base/nsLayoutUtils.h
index 5831133..0f1a776 100644
--- a/layout/base/nsLayoutUtils.h
+++ b/layout/base/nsLayoutUtils.h
@@ -144,7 +144,45 @@ public:
                                        PRInt32 aIf1Ancestor,
                                        PRInt32 aIf2Ancestor,
                                        nsIContent* aCommonAncestor = nsnull);
-  
+
+  /**
+   * CompareTreePosition determines whether aFrame1 comes before or
+   * after aFrame2 in a preorder traversal of the frame tree, where out
+   * of flow frames are treated as children of their placeholders. This is
+   * basically the same ordering as DoCompareTreePosition(nsIContent*) except
+   * that it handles anonymous content properly and there are subtleties with
+   * continuations.
+   * 
+   * @param aCommonAncestor either null, or a common ancestor of
+   *                        aContent1 and aContent2.  Actually this is
+   *                        only a hint; if it's not an ancestor of
+   *                        aContent1 or aContent2, this function will
+   *                        still work, but it will be slower than
+   *                        normal.
+   * @return < 0 if aContent1 is before aContent2
+   *         > 0 if aContent1 is after aContent2,
+   *         0 otherwise (meaning they're the same, or they're in
+   *           different frame trees)
+   */
+  static PRInt32 CompareTreePosition(nsIFrame* aFrame1,
+                                     nsIFrame* aFrame2,
+                                     nsIFrame* aCommonAncestor = nsnull)
+  {
+    return DoCompareTreePosition(aFrame1, aFrame2, -1, 1, aCommonAncestor);
+  }
+
+  /*
+   * More generic version of |CompareTreePosition|.  |aIf1Ancestor|
+   * gives the value to return when 1 is an ancestor of 2, and likewise
+   * for |aIf2Ancestor|.  Passing (-1, 1) gives preorder traversal
+   * order, and (1, -1) gives postorder traversal order.
+   */
+  static PRInt32 DoCompareTreePosition(nsIFrame* aFrame1,
+                                       nsIFrame* aFrame2,
+                                       PRInt32 aIf1Ancestor,
+                                       PRInt32 aIf2Ancestor,
+                                       nsIFrame* aCommonAncestor = nsnull);
+
   /**
    * GetLastSibling simply finds the last sibling of aFrame, or returns nsnull if
    * aFrame is null."""
96bee23dc462c8c5a5a8bb91ecb952bdb36a3cd8,105901,363813,roc+%cs.cmu.edu,"Bug 363813. Ensure that floating first-letter frames get inserted in the right place in the list of new floated items. r+sr=dbaron
",1169068833,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index 030f5bf..879b1c4 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -706,6 +706,10 @@ struct nsFrameItems {
 
   // Appends the frame to the end of the list
   void AddChild(nsIFrame* aChild);
+
+  // Inserts the frame somewhere in the list
+  void InsertChildAfter(nsIFrame* aChild, nsIFrame* aAfter);
+
   // Remove the frame from the list, return PR_FALSE if not found.
   PRBool RemoveChild(nsIFrame* aChild);
 };
@@ -740,6 +744,24 @@ nsFrameItems::AddChild(nsIFrame* aChild)
   }
 }
 
+void
+nsFrameItems::InsertChildAfter(nsIFrame* aChild, nsIFrame* aAfter)
+{
+  if (!childList || (aAfter && !aAfter->GetNextSibling())) {
+    // Appending to the end of the list
+    AddChild(aChild);
+    return;
+  }
+  if (!aAfter) {
+    // Inserting at beginning of list
+    aChild->SetNextSibling(childList);
+    childList = aChild;
+    return;
+  }
+  aChild->SetNextSibling(aAfter->GetNextSibling());
+  aAfter->SetNextSibling(aChild);
+}
+
 PRBool
 nsFrameItems::RemoveChild(nsIFrame* aFrame)
 {
@@ -1152,7 +1174,9 @@ public:
                     nsIFrame* aParentFrame,
                     PRBool aCanBePositioned = PR_TRUE,
                     PRBool aCanBeFloated = PR_TRUE,
-                    PRBool aIsOutOfFlowPopup = PR_FALSE);
+                    PRBool aIsOutOfFlowPopup = PR_FALSE,
+                    PRBool aInsertAfter = PR_FALSE,
+                    nsIFrame* aInsertAfterFrame = nsnull);
 
 protected:
   friend class nsFrameConstructorSaveState;
@@ -1314,7 +1338,9 @@ nsFrameConstructorState::AddChild(nsIFrame* aNewFrame,
                                   nsIFrame* aParentFrame,
                                   PRBool aCanBePositioned,
                                   PRBool aCanBeFloated,
-                                  PRBool aIsOutOfFlowPopup)
+                                  PRBool aIsOutOfFlowPopup,
+                                  PRBool aInsertAfter,
+                                  nsIFrame* aInsertAfterFrame)
 {
   // The comments in GetGeometricParent regarding root table frames
   // all apply here, unfortunately.
@@ -1387,7 +1413,11 @@ nsFrameConstructorState::AddChild(nsIFrame* aNewFrame,
   }
 #endif
 
-  frameItems->AddChild(aNewFrame);
+  if (aInsertAfter) {
+    frameItems->InsertChildAfter(aNewFrame, aInsertAfterFrame);
+  } else {
+    frameItems->AddChild(aNewFrame);
+  }
 
   // Now add the special siblings too.
   nsIFrame* specialSibling = aNewFrame;
@@ -11641,6 +11671,7 @@ static PRBool IsFirstLetterContent(nsIContent* aContent)
 void
 nsCSSFrameConstructor::CreateFloatingLetterFrame(
   nsFrameConstructorState& aState,
+  nsIFrame* aBlockFrame,
   nsIContent* aTextContent,
   nsIFrame* aTextFrame,
   nsIContent* aBlockContent,
@@ -11696,10 +11727,19 @@ nsCSSFrameConstructor::CreateFloatingLetterFrame(
 
   NS_ASSERTION(aResult.childList == nsnull,
                """"aResult should be an empty nsFrameItems!"""");
+  nsIFrame* insertAfter = nsnull;
+  nsIFrame* f;
+  // Put the new float before any of the floats in the block we're
+  // doing first-letter for, that is, before any floats whose parent is aBlockFrame
+  for (f = aState.mFloatedItems.childList; f; f = f->GetNextSibling()) {
+    if (f->GetParent() == aBlockFrame)
+      break;
+    insertAfter = f;
+  }
 
   rv = aState.AddChild(letterFrame, aResult, letterFrame->GetStyleDisplay(),
                        aTextContent, aStyleContext, aParentFrame, PR_FALSE,
-                       PR_TRUE);
+                       PR_TRUE, PR_FALSE, PR_TRUE, insertAfter);
 
   if (nextTextFrame) {
     if (NS_FAILED(rv)) {
@@ -11716,6 +11756,7 @@ nsCSSFrameConstructor::CreateFloatingLetterFrame(
  */
 nsresult
 nsCSSFrameConstructor::CreateLetterFrame(nsFrameConstructorState& aState,
+                                         nsIFrame* aBlockFrame,
                                          nsIContent* aTextContent,
                                          nsIFrame* aParentFrame,
                                          nsFrameItems& aResult)
@@ -11745,7 +11786,7 @@ nsCSSFrameConstructor::CreateLetterFrame(nsFrameConstructorState& aState,
       const nsStyleDisplay* display = sc->GetStyleDisplay();
       if (display->IsFloating()) {
         // Make a floating first-letter frame
-        CreateFloatingLetterFrame(aState, aTextContent, textFrame,
+        CreateFloatingLetterFrame(aState, aBlockFrame, aTextContent, textFrame,
                                   blockContent, aParentFrame,
                                   sc, aResult);
       }
@@ -11783,7 +11824,7 @@ nsCSSFrameConstructor::WrapFramesInFirstLetterFrame(
   nsIFrame* prevFrame = nsnull;
   nsFrameItems letterFrames;
   PRBool stopLooking = PR_FALSE;
-  rv = WrapFramesInFirstLetterFrame(aState, aBlockFrame,
+  rv = WrapFramesInFirstLetterFrame(aState, aBlockFrame, aBlockFrame,
                                     aBlockFrames.childList,
                                     &parentFrame, &textFrame, &prevFrame,
                                     letterFrames, &stopLooking);
@@ -11829,6 +11870,7 @@ nsCSSFrameConstructor::WrapFramesInFirstLetterFrame(
 nsresult
 nsCSSFrameConstructor::WrapFramesInFirstLetterFrame(
   nsFrameConstructorState& aState,
+  nsIFrame*                aBlockFrame,
   nsIFrame*                aParentFrame,
   nsIFrame*                aParentFrameList,
   nsIFrame**               aModifiedParent,
@@ -11851,7 +11893,7 @@ nsCSSFrameConstructor::WrapFramesInFirstLetterFrame(
       nsIContent* textContent = frame->GetContent();
       if (IsFirstLetterContent(textContent)) {
         // Create letter frame to wrap up the text
-        rv = CreateLetterFrame(aState, textContent,
+        rv = CreateLetterFrame(aState, aBlockFrame, textContent,
                                aParentFrame, aLetterFrames);
         if (NS_FAILED(rv)) {
           return rv;
@@ -11869,7 +11911,7 @@ nsCSSFrameConstructor::WrapFramesInFirstLetterFrame(
              (nsGkAtoms::lineFrame == frameType) ||
              (nsGkAtoms::positionedInlineFrame == frameType)) {
       nsIFrame* kids = frame->GetFirstChild(nsnull);
-      WrapFramesInFirstLetterFrame(aState, frame, kids,
+      WrapFramesInFirstLetterFrame(aState, aBlockFrame, frame, kids,
                                    aModifiedParent, aTextFrame,
                                    aPrevFrame, aLetterFrames, aStopLooking);
       if (*aStopLooking) {
@@ -12102,7 +12144,7 @@ nsCSSFrameConstructor::RecoverLetterFrames(nsFrameConstructorState& aState,
   nsIFrame* prevFrame = nsnull;
   nsFrameItems letterFrames;
   PRBool stopLooking = PR_FALSE;
-  rv = WrapFramesInFirstLetterFrame(aState, aBlockFrame, blockKids,
+  rv = WrapFramesInFirstLetterFrame(aState, aBlockFrame, aBlockFrame, blockKids,
                                     &parentFrame, &textFrame, &prevFrame,
                                     letterFrames, &stopLooking);
   if (NS_FAILED(rv)) {
diff --git a/layout/base/nsCSSFrameConstructor.h b/layout/base/nsCSSFrameConstructor.h
index 73ceaae..c49fed3 100644
--- a/layout/base/nsCSSFrameConstructor.h
+++ b/layout/base/nsCSSFrameConstructor.h
@@ -833,6 +833,7 @@ private:
   // Methods support :first-letter style
 
   void CreateFloatingLetterFrame(nsFrameConstructorState& aState,
+                                 nsIFrame*                aBlockFrame,
                                  nsIContent*              aTextContent,
                                  nsIFrame*                aTextFrame,
                                  nsIContent*              aBlockContent,
@@ -841,6 +842,7 @@ private:
                                  nsFrameItems&            aResult);
 
   nsresult CreateLetterFrame(nsFrameConstructorState& aState,
+                             nsIFrame*                aBlockFrame,
                              nsIContent*              aTextContent,
                              nsIFrame*                aParentFrame,
                              nsFrameItems&            aResult);
@@ -851,6 +853,7 @@ private:
                                         nsFrameItems&            aBlockFrames);
 
   nsresult WrapFramesInFirstLetterFrame(nsFrameConstructorState& aState,
+                                        nsIFrame*                aBlockFrame,
                                         nsIFrame*                aParentFrame,
                                         nsIFrame*                aParentFrameList,
                                         nsIFrame**               aModifiedParent,"""
b58fad343a062dba26c72f7e1908368ec975bab6,106101,354973,sayrer%gmail.com,"Attempt at bustage fix for bug 354973. r=froodian/ardissone
",1168670635,"""diff --git a/camino/src/browser/BrowserWindowController.mm b/camino/src/browser/BrowserWindowController.mm
index ab13df2..ba92d0e 100644
--- a/camino/src/browser/BrowserWindowController.mm
+++ b/camino/src/browser/BrowserWindowController.mm
@@ -1945,11 +1945,19 @@ enum BWCOpenDest {
   popupWindowURI->GetSpec(uriStr);
   
   // whitelist the URL
-  [self whitelistURL:requestingWindowURI];
-
+  nsCOMPtr<nsIURI> requestingWindowURI;
+  nsCOMPtr<nsIWebNavigation> webNav = do_GetInterface(requestingWindow);                                                                                                   
+  if (webNav)                                                                                                                                        
+    webNav->GetCurrentURI(getter_AddRefs(requestingWindowURI));
+  
+  if (requestingWindowURI)
+    [self whitelistURL:requestingWindowURI];
+  else
+    NSLog(@""""Couldn't whitelist the URI"""");  
+  
   // show the blocked popup
   nsCOMPtr<nsIDOMWindow> openedWindow;
-  nsresult rv = domWin->Open(NS_ConvertUTF8toUTF16(uriStr), windowName, features, getter_AddRefs(openedWindow));
+  nsresult rv = piDomWin->Open(NS_ConvertUTF8toUTF16(uriStr), windowName, features, getter_AddRefs(openedWindow));
   if (NS_FAILED(rv))
     NSLog(@""""Couldn't show the blocked popup window for %@"""", [NSString stringWith_nsACString:uriStr]);  
 }"""
b6e35b8cde48b101106f3c28087d0421e3b2a28c,106106,354973,jst%mozilla.org,"Fixing popup blocker bug 354973. r=mano@mozilla.com, sr=peterv@propagandism.org
",1168650523,"""diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
index 8e5cff3..2dc6ce8 100644
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -529,14 +529,12 @@ const gPopupBlockerObserver = {
         var label = bundle_browser.getFormattedString(""""popupShowPopupPrefix"""",
                                                       [popupURIspec]);
         menuitem.setAttribute(""""label"""", label);
-        menuitem.setAttribute(""""requestingWindowURI"""", pageReport[i].requestingWindowURI.spec);
         menuitem.setAttribute(""""popupWindowURI"""", popupURIspec);
         menuitem.setAttribute(""""popupWindowFeatures"""", pageReport[i].popupWindowFeatures);
-#ifndef MOZILLA_1_8_BRANCH
-# bug 314700
         menuitem.setAttribute(""""popupWindowName"""", pageReport[i].popupWindowName);
-#endif
         menuitem.setAttribute(""""oncommand"""", """"gPopupBlockerObserver.showBlockedPopup(event);"""");
+        menuitem.requestingWindow = pageReport[i].requestingWindow;
+        menuitem.requestingDocument = pageReport[i].requestingDocument;
         aEvent.target.appendChild(menuitem);
       }
     }
@@ -561,30 +559,17 @@ const gPopupBlockerObserver = {
 
   showBlockedPopup: function (aEvent)
   {
-    var requestingWindow = aEvent.target.getAttribute(""""requestingWindowURI"""");
-    var requestingWindowURI =
-                      Components.classes[""""@mozilla.org/network/io-service;1""""]
-                                .getService(Components.interfaces.nsIIOService)
-                                .newURI(requestingWindow, null, null);
-
-    var popupWindowURI = aEvent.target.getAttribute(""""popupWindowURI"""");
-    var features = aEvent.target.getAttribute(""""popupWindowFeatures"""");
-#ifndef MOZILLA_1_8_BRANCH
-# bug 314700
-    var name = aEvent.target.getAttribute(""""popupWindowName"""");
-#endif
+    var target = aEvent.target;
+    var popupWindowURI = target.getAttribute(""""popupWindowURI"""");
+    var features = target.getAttribute(""""popupWindowFeatures"""");
+    var name = target.getAttribute(""""popupWindowName"""");
 
-    var shell = findChildShell(null, gBrowser.selectedBrowser.docShell,
-                               requestingWindowURI);
-    if (shell) {
-      var ifr = shell.QueryInterface(Components.interfaces.nsIInterfaceRequestor);
-      var dwi = ifr.getInterface(Components.interfaces.nsIDOMWindowInternal);
-#ifdef MOZILLA_1_8_BRANCH
-# bug 314700
-      dwi.open(popupWindowURI, """""""", features);
-#else
+    var dwi = target.requestingWindow;
+
+    // If we have a requesting window and the requesting document is
+    // still the current document, open the popup.
+    if (dwi && dwi.document == target.requestingDocument) {
       dwi.open(popupWindowURI, name, features);
-#endif
     }
   },
 
diff --git a/camino/src/browser/BrowserWindowController.mm b/camino/src/browser/BrowserWindowController.mm
index 1bba2db..ab13df2 100644
--- a/camino/src/browser/BrowserWindowController.mm
+++ b/camino/src/browser/BrowserWindowController.mm
@@ -1912,9 +1912,10 @@ enum BWCOpenDest {
 
 - (void)whitelistAndShowPopup:(nsIDOMPopupBlockedEvent*)aPopupBlockedEvent
 { 
+  nsCOMPtr<nsIDOMWindow> requestingWindow;
+  aPopupBlockedEvent->GetRequestingWindow(getter_AddRefs(requestingWindow));
   // get the URIs for the popup window, and it's parent document
-  nsCOMPtr<nsIURI> requestingWindowURI, popupWindowURI;
-  aPopupBlockedEvent->GetRequestingWindowURI(getter_AddRefs(requestingWindowURI));
+  nsCOMPtr<nsIURI> popupWindowURI;
   aPopupBlockedEvent->GetPopupWindowURI(getter_AddRefs(popupWindowURI));
 
   nsAutoString windowName, features;
@@ -1930,15 +1931,10 @@ enum BWCOpenDest {
 #endif 
 
   // find the docshell for the blocked popup window, in order to show it
-  nsCOMPtr<nsIDocShell> popupWinDocShell = [[mBrowserView getBrowserView] findDocShellForURI:requestingWindowURI];
-  if (!popupWinDocShell)
+  if (!requestingWindow)
     return;
 
-  nsCOMPtr<nsIDOMWindowInternal> domWin = do_GetInterface(popupWinDocShell);
-  if (!domWin)
-    return;
-
-  nsCOMPtr<nsPIDOMWindow> piDomWin = do_QueryInterface(domWin);
+  nsCOMPtr<nsPIDOMWindow> piDomWin = do_QueryInterface(requestingWindow);
   if (!piDomWin)
     return;
 
diff --git a/content/events/src/nsDOMPopupBlockedEvent.cpp b/content/events/src/nsDOMPopupBlockedEvent.cpp
index 8f2e89a..1a986ca 100644
--- a/content/events/src/nsDOMPopupBlockedEvent.cpp
+++ b/content/events/src/nsDOMPopupBlockedEvent.cpp
@@ -62,7 +62,6 @@ nsDOMPopupBlockedEvent::~nsDOMPopupBlockedEvent()
   if (mEventIsInternal) {
     if (mEvent->eventStructType == NS_POPUPBLOCKED_EVENT) {
       nsPopupBlockedEvent* event = NS_STATIC_CAST(nsPopupBlockedEvent*, mEvent);
-      NS_IF_RELEASE(event->mRequestingWindowURI);
       NS_IF_RELEASE(event->mPopupWindowURI);
     }
   }
@@ -79,7 +78,7 @@ NS_INTERFACE_MAP_END_INHERITING(nsDOMEvent)
 NS_IMETHODIMP
 nsDOMPopupBlockedEvent::InitPopupBlockedEvent(const nsAString & aTypeArg,
                             PRBool aCanBubbleArg, PRBool aCancelableArg,
-                            nsIURI *aRequestingWindowURI,
+                            nsIDOMWindow *aRequestingWindow,
                             nsIURI *aPopupWindowURI,
                             const nsAString & aPopupWindowName,
                             const nsAString & aPopupWindowFeatures)
@@ -92,9 +91,8 @@ nsDOMPopupBlockedEvent::InitPopupBlockedEvent(const nsAString & aTypeArg,
     case NS_POPUPBLOCKED_EVENT:
     {
        nsPopupBlockedEvent* event = NS_STATIC_CAST(nsPopupBlockedEvent*, mEvent);
-       event->mRequestingWindowURI = aRequestingWindowURI;
+       event->mRequestingWindow = do_GetWeakReference(aRequestingWindow);
        event->mPopupWindowURI = aPopupWindowURI;
-       NS_IF_ADDREF(event->mRequestingWindowURI);
        NS_IF_ADDREF(event->mPopupWindowURI);
        event->mPopupWindowFeatures = aPopupWindowFeatures;
        event->mPopupWindowName = aPopupWindowName;
@@ -108,16 +106,15 @@ nsDOMPopupBlockedEvent::InitPopupBlockedEvent(const nsAString & aTypeArg,
 }
 
 NS_IMETHODIMP
-nsDOMPopupBlockedEvent::GetRequestingWindowURI(nsIURI **aRequestingWindowURI)
+nsDOMPopupBlockedEvent::GetRequestingWindow(nsIDOMWindow **aRequestingWindow)
 {
-  NS_ENSURE_ARG_POINTER(aRequestingWindowURI);
   if (mEvent->eventStructType == NS_POPUPBLOCKED_EVENT) {
     nsPopupBlockedEvent* event = NS_STATIC_CAST(nsPopupBlockedEvent*, mEvent);
-    *aRequestingWindowURI = event->mRequestingWindowURI;
-    NS_IF_ADDREF(*aRequestingWindowURI);
-    return NS_OK;
+    CallQueryReferent(event->mRequestingWindow.get(), aRequestingWindow);
+  } else {
+    *aRequestingWindow = 0;
   }
-  *aRequestingWindowURI = 0;
+
   return NS_OK;  // Don't throw an exception
 }
 
diff --git a/dom/public/idl/events/nsIDOMPopupBlockedEvent.idl b/dom/public/idl/events/nsIDOMPopupBlockedEvent.idl
index f6c256f..2962f7e 100644
--- a/dom/public/idl/events/nsIDOMPopupBlockedEvent.idl
+++ b/dom/public/idl/events/nsIDOMPopupBlockedEvent.idl
@@ -44,10 +44,19 @@ interface nsIURI;
  * posted when a popup window is blocked.
  */
 
-[scriptable, uuid(bb57e9bb-0c89-459c-977d-5cbc1831bdf5)]
+[scriptable, uuid(05be571f-c3ea-4959-a340-c57b1591ae4b)]
 interface nsIDOMPopupBlockedEvent : nsIDOMEvent
 {
-  readonly attribute nsIURI requestingWindowURI;
+  /**
+   * The window object that attempted to open the blocked popup
+   * (i.e. the window object on which open() was called).
+   */
+  readonly attribute nsIDOMWindow requestingWindow;
+
+
+  /**
+   * The URI of the window that was blocked.
+   */
   readonly attribute nsIURI popupWindowURI;
 
   /**
@@ -65,7 +74,7 @@ interface nsIDOMPopupBlockedEvent : nsIDOMEvent
   void initPopupBlockedEvent(in DOMString typeArg,
                              in boolean canBubbleArg,
                              in boolean cancelableArg,
-                             in nsIURI requestingWindowURI,
+                             in nsIDOMWindow requestingWindow,
                              in nsIURI popupWindowURI,
                              in DOMString popupWindowName,
                              in DOMString popupWindowFeatures);
diff --git a/dom/src/base/nsGlobalWindow.cpp b/dom/src/base/nsGlobalWindow.cpp
index a782852..e428ddd 100644
--- a/dom/src/base/nsGlobalWindow.cpp
+++ b/dom/src/base/nsGlobalWindow.cpp
@@ -4235,19 +4235,23 @@ PRBool IsPopupBlocked(nsIDOMDocument* aDoc)
 
 static
 void FirePopupBlockedEvent(nsIDOMDocument* aDoc,
-                           nsIURI *aRequestingURI, nsIURI *aPopupURI,
+                           nsIDOMWindow *aRequestingWindow, nsIURI *aPopupURI,
                            const nsAString &aPopupWindowName,
                            const nsAString &aPopupWindowFeatures)
 {
   if (aDoc) {
-    // Fire a """"DOMPopupBlocked"""" event so that the UI can hear about blocked popups.
+    // Fire a """"DOMPopupBlocked"""" event so that the UI can hear about
+    // blocked popups.
     nsCOMPtr<nsIDOMDocumentEvent> docEvent(do_QueryInterface(aDoc));
     nsCOMPtr<nsIDOMEvent> event;
-    docEvent->CreateEvent(NS_LITERAL_STRING(""""PopupBlockedEvents""""), getter_AddRefs(event));
+    docEvent->CreateEvent(NS_LITERAL_STRING(""""PopupBlockedEvents""""),
+                          getter_AddRefs(event));
     if (event) {
       nsCOMPtr<nsIDOMPopupBlockedEvent> pbev(do_QueryInterface(event));
       pbev->InitPopupBlockedEvent(NS_LITERAL_STRING(""""DOMPopupBlocked""""),
-              PR_TRUE, PR_TRUE, aRequestingURI, aPopupURI, aPopupWindowName, aPopupWindowFeatures);
+                                  PR_TRUE, PR_TRUE, aRequestingWindow,
+                                  aPopupURI, aPopupWindowName,
+                                  aPopupWindowFeatures);
       nsCOMPtr<nsIPrivateDOMEvent> privateEvent(do_QueryInterface(event));
       privateEvent->SetTrusted(PR_TRUE);
 
@@ -4373,12 +4377,7 @@ nsGlobalWindow::FireAbuseEvents(PRBool aBlocked, PRBool aWindow,
   nsCOMPtr<nsIDOMDocument> topDoc;
   topWindow->GetDocument(getter_AddRefs(topDoc));
 
-  nsCOMPtr<nsIURI> requestingURI;
   nsCOMPtr<nsIURI> popupURI;
-  nsCOMPtr<nsIWebNavigation> webNav =
-    do_GetInterface((nsIScriptGlobalObject *)this);
-  if (webNav)
-    webNav->GetCurrentURI(getter_AddRefs(requestingURI));
 
   // build the URI of the would-have-been popup window
   // (see nsWindowWatcher::URIfromURL)
@@ -4416,7 +4415,8 @@ nsGlobalWindow::FireAbuseEvents(PRBool aBlocked, PRBool aWindow,
 
   // fire an event chock full of informative URIs
   if (aBlocked)
-    FirePopupBlockedEvent(topDoc, requestingURI, popupURI, aPopupWindowName, aPopupWindowFeatures);
+    FirePopupBlockedEvent(topDoc, this, popupURI, aPopupWindowName,
+                          aPopupWindowFeatures);
   if (aWindow)
     FirePopupWindowEvent(topDoc);
 }
diff --git a/toolkit/content/widgets/browser.xml b/toolkit/content/widgets/browser.xml
index d42791e..5cde174 100644
--- a/toolkit/content/widgets/browser.xml
+++ b/toolkit/content/widgets/browser.xml
@@ -424,8 +424,10 @@
             if (this.pageReport) {
               var i = 0;
               while (i < this.pageReport.length) {
-                if (this.findChildShell(this.docShell,
-                                        this.pageReport[i].requestingWindowURI))
+                // Filter out irrelevant reports.
+                if (this.pageReport[i].requestingWindow &&
+                    (this.pageReport[i].requestingWindow.document ==
+                     this.pageReport[i].requestingDocument))
                   i++;
                 else
                   this.pageReport.splice(i, 1);
@@ -481,20 +483,17 @@
               this.pageReport = new Array();
             }
 
-#ifdef MOZILLA_1_8_BRANCH
-# bug 314700
-            var obj = { requestingWindowURI: evt.requestingWindowURI,
-                        popupWindowURI: evt.popupWindowURI,
-                        popupWindowFeatures: evt.popupWindowFeatures };
-#else
-            var obj = { requestingWindowURI: evt.requestingWindowURI,
+            var obj = { requestingWindow: evt.requestingWindow,
+                        // Record the current document in the requesting window
+                        // before it can change.
+                        requestingDocument: evt.requestingWindow.document,
                         popupWindowURI: evt.popupWindowURI,
                         popupWindowFeatures: evt.popupWindowFeatures,
                         popupWindowName: evt.popupWindowName };
-#endif
+
             this.pageReport.push(obj);
             this.pageReport.reported = false;
-            this.updatePageReport()
+            this.updatePageReport();
           ]]> 
         </body>
       </method>
diff --git a/widget/public/nsGUIEvent.h b/widget/public/nsGUIEvent.h
index 804fca9..23d1323 100644
--- a/widget/public/nsGUIEvent.h
+++ b/widget/public/nsGUIEvent.h
@@ -54,6 +54,7 @@
 #include """"nsCOMPtr.h""""
 #include """"nsIAtom.h""""
 #include """"nsIDOMKeyEvent.h""""
+#include """"nsWeakPtr.h""""
 
 class nsIRenderingContext;
 class nsIRegion;
@@ -885,11 +886,11 @@ class nsPopupBlockedEvent : public nsEvent
 public:
   nsPopupBlockedEvent(PRBool isTrusted, PRUint32 msg)
     : nsEvent(isTrusted, msg, NS_POPUPBLOCKED_EVENT),
-      mRequestingWindowURI(nsnull), mPopupWindowURI(nsnull)
+      mPopupWindowURI(nsnull)
   {
   }
 
-  nsIURI* mRequestingWindowURI; // owning reference
+  nsWeakPtr mRequestingWindow;
   nsIURI* mPopupWindowURI;      // owning reference
   nsString mPopupWindowFeatures;
   nsString mPopupWindowName;"""
36f887bb649bac54cd0352d5d951ea79a86db021,106152,366601,igor.bukanov%gmail.com,"bug 366601, r=brendan
",1168512303,"""diff --git a/js/src/jsemit.c b/js/src/jsemit.c
index 62d5ae9..c53a490d 100644
--- a/js/src/jsemit.c
+++ b/js/src/jsemit.c
@@ -2813,6 +2813,15 @@ EmitSwitch(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn,
             tableLength = (uint32)(high - low + 1);
             if (tableLength >= JS_BIT(16) || tableLength > 2 * caseCount)
                 switchOp = JSOP_LOOKUPSWITCH;
+        } else if (switchOp == JSOP_LOOKUPSWITCH) {
+            /*
+             * Lookup switch supports only atom indexes bellow 64K limit.
+             * Conservatively estimate the maximum possible index during
+             * switch generation and use conditional switch if it exceeds
+             * the limit.
+             */
+            if (caseCount + cg->atomList.count > JS_BIT(16))
+                switchOp = JSOP_CONDSWITCH;
         }
     }
 """
c4e0a213461202ceed14ba5ef7561e5c3bbf9753,106390,337716,jst%mozilla.org,"Fixing bug 337716. Swap two calls to avoid using a potentially dangling obj pointer. r=mrbkap@gmail.com, sr=bugmail@sicking.cc
",1168036080,"""diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index e843471..c4335ee 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -4470,12 +4470,13 @@ nsWindowSH::SetProperty(nsIXPConnectWrappedNative *wrapper, JSContext *cx,
     nsresult rv = window->GetLocation(getter_AddRefs(location));
     NS_ENSURE_SUCCESS(rv, rv);
 
-    rv = location->SetHref(nsDependentJSString(val));
-    NS_ENSURE_SUCCESS(rv, rv);
-
     nsCOMPtr<nsIXPConnectJSObjectHolder> holder;
     rv = WrapNative(cx, obj, location, NS_GET_IID(nsIDOMLocation), vp,
                     getter_AddRefs(holder));
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    rv = location->SetHref(nsDependentJSString(val));
+
     return NS_FAILED(rv) ? rv : NS_SUCCESS_I_DID_SOMETHING;
   }
 """
ee3d61528ad4d6a3f729d1b473a7ccae333cfa29,106510,364319,nelson%bolyard.com,"Improve checking of received SSL2 records.
Bug 364319, bug 364323. r=rrelyea, wtchang
",1167802233,"""diff --git a/security/nss/lib/ssl/sslcon.c b/security/nss/lib/ssl/sslcon.c
index e243ae9..76a1664 100644
--- a/security/nss/lib/ssl/sslcon.c
+++ b/security/nss/lib/ssl/sslcon.c
@@ -37,7 +37,7 @@
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
-/* $Id: sslcon.c,v 1.34 2006-11-14 01:09:54 wtchang%redhat.com Exp $ */
+/* $Id: sslcon.c,v 1.35 2007-01-03 05:30:33 nelson%bolyard.com Exp $ */
 
 #include """"nssrenam.h""""
 #include """"cert.h""""
@@ -1579,15 +1579,17 @@ ssl2_ServerSetupSessionCypher(sslSocket *ss, int cipher, unsigned int keyBits,
 			 PRUint8 *ek, unsigned int ekLen,
 			 PRUint8 *ca, unsigned int caLen)
 {
-    PRUint8           *kk = NULL;
+    PRUint8      *    dk   = NULL; /* decrypted master key */
     sslSessionID *    sid;
+    sslServerCerts *  sc   = ss->serverCerts + kt_rsa;
     PRUint8       *   kbuf = 0;	/* buffer for RSA decrypted data. */
-    unsigned int      el1;	/* length of RSA decrypted data in kbuf */
+    unsigned int      ddLen;	/* length of RSA decrypted data in kbuf */
     unsigned int      keySize;
-    unsigned int      modulusLen;
+    unsigned int      dkLen;    /* decrypted key length in bytes */
+    int               modulusLen;
     SECStatus         rv;
+    PRUint16          allowed;  /* cipher kinds enabled and allowed by policy */
     PRUint8           mkbuf[SSL_MAX_MASTER_KEY_BYTES];
-    sslServerCerts  * sc = ss->serverCerts + kt_rsa;
 
     PORT_Assert( ss->opt.noLocks || ssl_Have1stHandshakeLock(ss) );
     PORT_Assert( ss->opt.noLocks || ssl_HaveRecvBufLock(ss)   );
@@ -1595,18 +1597,6 @@ ssl2_ServerSetupSessionCypher(sslSocket *ss, int cipher, unsigned int keyBits,
     PORT_Assert((ss->sec.ci.sid != 0));
     sid = ss->sec.ci.sid;
 
-    keySize = (keyBits + 7) >> 3;
-    /* Is the message just way too big? */
-    if (keySize > SSL_MAX_MASTER_KEY_BYTES) {
-	/* bummer */
-	SSL_DBG((""""%d: SSL[%d]: keySize=%d ckLen=%d max session key size=%d"""",
-		 SSL_GETPID(), ss->fd, keySize, ckLen,
-		 SSL_MAX_MASTER_KEY_BYTES));
-	PORT_SetError(SSL_ERROR_BAD_CLIENT);
-	goto loser;
-    }
-
-
     /* Trying to cut down on all these switch statements that should be tables.
      * So, test cipherType once, here, and then use tables below. 
      */
@@ -1626,50 +1616,71 @@ ssl2_ServerSetupSessionCypher(sslSocket *ss, int cipher, unsigned int keyBits,
 	goto loser;
     }
 
-    /* For export ciphers, make sure they didn't send too much key data. */
+    allowed = ss->allowedByPolicy & ss->chosenPreference & SSL_CB_IMPLEMENTED;
+    if (!(allowed & (1 << cipher))) {
+    	/* client chose a kind we don't allow! */
+	SSL_DBG((""""%d: SSL[%d]: disallowed cipher=%d"""",
+		 SSL_GETPID(), ss->fd, cipher));
+	PORT_SetError(SSL_ERROR_BAD_CLIENT);
+	goto loser;
+    }
+
+    keySize = ssl_Specs[cipher].keyLen;
+    if (keyBits != keySize * BPB) {
+	SSL_DBG((""""%d: SSL[%d]: invalid master secret key length=%d (bits)!"""",
+		 SSL_GETPID(), ss->fd, keyBits));
+	PORT_SetError(SSL_ERROR_BAD_CLIENT);
+	goto loser;
+    }
+
     if (ckLen != ssl_Specs[cipher].pubLen) {
-	SSL_DBG((""""%d: SSL[%d]: odd secret key size, keySize=%d ckLen=%d!"""",
-		 SSL_GETPID(), ss->fd, keySize, ckLen));
-	/* Somebody tried to sneak by a strange secret key */
+	SSL_DBG((""""%d: SSL[%d]: invalid clear key length, ckLen=%d (bytes)!"""",
+		 SSL_GETPID(), ss->fd, ckLen));
+	PORT_SetError(SSL_ERROR_BAD_CLIENT);
+	goto loser;
+    }
+
+    if (caLen != ssl_Specs[cipher].ivLen) {
+	SSL_DBG((""""%d: SSL[%d]: invalid key args length, caLen=%d (bytes)!"""",
+		 SSL_GETPID(), ss->fd, caLen));
+	PORT_SetError(SSL_ERROR_BAD_CLIENT);
+	goto loser;
+    }
+
+    modulusLen = PK11_GetPrivateModulusLen(sc->SERVERKEY);
+    if (modulusLen == -1) {
+	/* XXX If the key is bad, then PK11_PubDecryptRaw will fail below. */
+	modulusLen = ekLen;
+    }
+    if (ekLen > modulusLen || ekLen + ckLen < keySize) {
+	SSL_DBG((""""%d: SSL[%d]: invalid encrypted key length, ekLen=%d (bytes)!"""",
+		 SSL_GETPID(), ss->fd, ekLen));
 	PORT_SetError(SSL_ERROR_BAD_CLIENT);
 	goto loser;
     }
 
     /* allocate the buffer to hold the decrypted portion of the key. */
-    /* XXX Haven't done any range check on ekLen. */
-    kbuf = (PRUint8*) PORT_Alloc(ekLen);
+    kbuf = (PRUint8*)PORT_Alloc(modulusLen);
     if (!kbuf) {
 	goto loser;
     }
+    dkLen = keySize - ckLen;
+    dk    = kbuf + modulusLen - dkLen;
 
-    /*
-    ** Decrypt encrypted half of the key. Note that encrypted half has
-    ** been made to match the modulus size of our public key using
-    ** PKCS#1. keySize is the real size of the data that is interesting.
+    /* Decrypt encrypted half of the key. 
     ** NOTE: PK11_PubDecryptRaw will barf on a non-RSA key. This is
     ** desired behavior here.
     */
-    rv = PK11_PubDecryptRaw(sc->SERVERKEY, kbuf, &el1, ekLen, ek, ekLen);
+    rv = PK11_PubDecryptRaw(sc->SERVERKEY, kbuf, &ddLen, modulusLen, ek, ekLen);
     if (rv != SECSuccess) 
 	goto hide_loser;
 
-    modulusLen = PK11_GetPrivateModulusLen(sc->SERVERKEY);
-    if (modulusLen == -1) {
-	/* If the key was really bad, then PK11_pubDecryptRaw
-	 * would have failed, therefore the we must assume that the card
-	 * is just being a pain and not giving us the modulus... but it
-	 * should be the same size as the encrypted key length, so use it
-	 * and keep cranking */
-	modulusLen = ekLen;
-    }
-    /* Is the length of the decrypted data (el1) the expected value? */
-    if (modulusLen != el1) 
+    /* Is the length of the decrypted data (ddLen) the expected value? */
+    if (modulusLen != ddLen) 
 	goto hide_loser;
 
     /* Cheaply verify that PKCS#1 was used to format the encryption block */
-    kk = kbuf + modulusLen - (keySize - ckLen);
-    if ((kbuf[0] != 0x00) || (kbuf[1] != 0x02) || (kk[-1] != 0x00)) {
-	/* Tsk tsk. */
+    if ((kbuf[0] != 0x00) || (kbuf[1] != 0x02) || (dk[-1] != 0x00)) {
 	SSL_DBG((""""%d: SSL[%d]: strange encryption block"""",
 		 SSL_GETPID(), ss->fd));
 	PORT_SetError(SSL_ERROR_BAD_CLIENT);
@@ -1678,10 +1689,10 @@ ssl2_ServerSetupSessionCypher(sslSocket *ss, int cipher, unsigned int keyBits,
 
     /* Make sure we're not subject to a version rollback attack. */
     if (ss->opt.enableSSL3 || ss->opt.enableTLS) {
-	PRUint8 threes[8] = { 0x03, 0x03, 0x03, 0x03,
-			      0x03, 0x03, 0x03, 0x03 };
+	static const PRUint8 threes[8] = { 0x03, 0x03, 0x03, 0x03,
+			                   0x03, 0x03, 0x03, 0x03 };
 	
-	if (PORT_Memcmp(kk - 8 - 1, threes, 8) == 0) {
+	if (PORT_Memcmp(dk - 8 - 1, threes, 8) == 0) {
 	    PORT_SetError(SSL_ERROR_BAD_CLIENT);
 	    goto hide_loser;
 	}
@@ -1693,10 +1704,7 @@ hide_loser:
 	 * was erroneous.  Don't send any error messages.
 	 * Instead, Generate a completely bogus master key .
 	 */
-	PK11_GenerateRandom(kbuf, ekLen);
-	if (!kk) {
-	    kk = kbuf + ekLen - (keySize-ckLen);
-	}
+	PK11_GenerateRandom(dk, dkLen);
     }
 
     /*
@@ -1705,7 +1713,7 @@ hide_loser:
     if (ckLen) {
 	PORT_Memcpy(mkbuf, ck, ckLen);
     }
-    PORT_Memcpy(mkbuf+ckLen, kk, keySize-ckLen);
+    PORT_Memcpy(mkbuf + ckLen, dk, dkLen);
 
     /* Fill in session-id */
     rv = ssl2_FillInSID(sid, cipher, mkbuf, keySize, ca, caLen,
@@ -1981,7 +1989,10 @@ ssl_FormatSSL2Block(unsigned modulusLen, SECItem *data)
     SECStatus rv;
     int i;
 
-    PORT_Assert (data->len <= (modulusLen - (3 + RSA_BLOCK_MIN_PAD_LEN)));
+    if (modulusLen < data->len + (3 + RSA_BLOCK_MIN_PAD_LEN)) {
+	PORT_SetError(SEC_ERROR_BAD_KEY);
+    	return NULL;
+    }
     block = (unsigned char *) PORT_Alloc(modulusLen);
     if (block == NULL)
 	return NULL;
@@ -3223,7 +3234,7 @@ ssl2_HandleClientSessionKeyMessage(sslSocket *ss)
     unsigned int     caLen;
     unsigned int     ckLen;
     unsigned int     ekLen;
-    unsigned int     keySize;
+    unsigned int     keyBits;
     int              cipher;
     SECStatus        rv;
 
@@ -3238,13 +3249,13 @@ ssl2_HandleClientSessionKeyMessage(sslSocket *ss)
 	goto bad_client;
     }
     cipher  = data[1];
-    keySize = (data[2] << 8) | data[3];
+    keyBits = (data[2] << 8) | data[3];
     ckLen   = (data[4] << 8) | data[5];
     ekLen   = (data[6] << 8) | data[7];
     caLen   = (data[8] << 8) | data[9];
 
-    SSL_TRC(5, (""""%d: SSL[%d]: session-key, cipher=%d keySize=%d ckLen=%d ekLen=%d caLen=%d"""",
-		SSL_GETPID(), ss->fd, cipher, keySize, ckLen, ekLen, caLen));
+    SSL_TRC(5, (""""%d: SSL[%d]: session-key, cipher=%d keyBits=%d ckLen=%d ekLen=%d caLen=%d"""",
+		SSL_GETPID(), ss->fd, cipher, keyBits, ckLen, ekLen, caLen));
 
     if (ss->gs.recordLen < 
     	    SSL_HL_CLIENT_MASTER_KEY_HBYTES + ckLen + ekLen + caLen) {
@@ -3254,8 +3265,7 @@ ssl2_HandleClientSessionKeyMessage(sslSocket *ss)
     }
 
     /* Use info from client to setup session key */
-    /* XXX should validate cipher&keySize are in our array */
-    rv = ssl2_ServerSetupSessionCypher(ss, cipher, keySize,
+    rv = ssl2_ServerSetupSessionCypher(ss, cipher, keyBits,
 		data + SSL_HL_CLIENT_MASTER_KEY_HBYTES,                 ckLen,
 		data + SSL_HL_CLIENT_MASTER_KEY_HBYTES + ckLen,         ekLen,
 		data + SSL_HL_CLIENT_MASTER_KEY_HBYTES + ckLen + ekLen, caLen);
@@ -3282,7 +3292,8 @@ ssl2_HandleClientSessionKeyMessage(sslSocket *ss)
     }
 
     SSL_TRC(5, (""""%d: SSL[%d]: server: waiting for elements=0x%d"""",
-		SSL_GETPID(), ss->fd, ss->sec.ci.requiredElements ^ ss->sec.ci.elements));
+		SSL_GETPID(), ss->fd, 
+		ss->sec.ci.requiredElements ^ ss->sec.ci.elements));
     ss->handshake         = ssl_GatherRecord1stHandshake;
     ss->nextHandshake     = ssl2_HandleMessage;
 """
71abc76b85a41a2c4da9bbe9b3f867ef342ca803,106759,363813,roc+%cs.cmu.edu,"Bug 363813. Mark canvas with HAS_DIRTY_CHILDREN when we delete its child. r+sr=dbaron
",1166731534,"""diff --git a/layout/generic/nsHTMLFrame.cpp b/layout/generic/nsHTMLFrame.cpp
index 9530294..eac927d 100644
--- a/layout/generic/nsHTMLFrame.cpp
+++ b/layout/generic/nsHTMLFrame.cpp
@@ -329,6 +329,7 @@ CanvasFrame::RemoveFrame(nsIAtom*        aListName,
     // Remove the frame and destroy it
     mFrames.DestroyFrame(aOldFrame);
 
+    AddStateBits(NS_FRAME_HAS_DIRTY_CHILDREN);
     GetPresContext()->PresShell()->
       FrameNeedsReflow(this, nsIPresShell::eTreeChange);
   } else {"""
c6856b3d82e0a9d97ecacfa02fda35623b468694,106760,363813,roc+%cs.cmu.edu,"Bug 363813. Reparent style contexts for special-siblings because they may depend on our frame's style context. r+sr=dbaron
",1166731389,"""diff --git a/layout/base/nsFrameManager.cpp b/layout/base/nsFrameManager.cpp
index f5f1e19..a7053e9 100644
--- a/layout/base/nsFrameManager.cpp
+++ b/layout/base/nsFrameManager.cpp
@@ -944,6 +944,11 @@ nsFrameManager::ReParentStyleContext(nsIFrame* aFrame)
       NS_NOTREACHED(""""Reparenting something that has no usable parent? """"
                     """"Shouldn't happen!"""");
     }
+    // XXX need to do something here to produce the correct style context
+    // for an IB split whose first inline part is inside a first-line frame.
+    // Currently the IB anonymous block's style context takes the first part's
+    // style context as parent, which is wrong since first-line style should
+    // not apply to the anonymous block.
 
     newContext = mStyleSet->ReParentStyleContext(presContext, oldContext,
                                                  newParentContext);
@@ -986,6 +991,20 @@ nsFrameManager::ReParentStyleContext(nsIFrame* aFrame)
           childList = aFrame->GetAdditionalChildListName(listIndex++);
         } while (childList);
 
+        // If this frame is part of an IB split, then the style context of
+        // the next part of the split might be a child of our style context.
+        // Reparent its style context just in case one of our ancestors
+        // (split or not) hasn't done so already). It's not a problem to
+        // reparent the same frame twice because the """"if (newContext !=
+        // oldContext)"""" check will prevent us from redoing work.
+        if ((aFrame->GetStateBits() & NS_FRAME_IS_SPECIAL) &&
+            !aFrame->GetPrevInFlow()) {
+          nsIFrame* sib = NS_STATIC_CAST(nsIFrame*, aFrame->GetProperty(nsLayoutAtoms::IBSplitSpecialSibling));
+          if (sib) {
+            ReParentStyleContext(sib);
+          }
+        }
+
         // do additional contexts 
         PRInt32 contextIndex = -1;
         while (1) {"""
5ed8439693255e80f6d6ac9d010b168163263584,106762,363813,roc+%cs.cmu.edu,"Bug 363813. Always reset parent pointers when pulling an inline frame's overflow back into its main child list. r+sr=dbaron
",1166731170,"""diff --git a/layout/generic/nsInlineFrame.cpp b/layout/generic/nsInlineFrame.cpp
index 3ded76b..c82b308 100644
--- a/layout/generic/nsInlineFrame.cpp
+++ b/layout/generic/nsInlineFrame.cpp
@@ -416,9 +416,8 @@ nsInlineFrame::Reflow(nsPresContext*          aPresContext,
 
       // Because we lazily set the parent pointer of child frames we get from
       // our prev-in-flow's overflow list, it's possible that we have not set
-      // the parent pointer for these frames. Check the first frame to see, and
-      // if we haven't set the parent pointer then set it now
-      mFrames.AppendFrames(overflowFrames->GetParent() == this ? nsnull : this, overflowFrames);
+      // the parent pointer for these frames.
+      mFrames.AppendFrames(this, overflowFrames);
     }
   }
 """
132e5a7115dbc3b6b2485f07a67f24c7429e7006,106923,362909,igor.bukanov%gmail.com,"Bug 362909: Faster debugging of function calls. r=brendan
",1166320734,"""diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index 72a7182..c6989fc 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -2107,8 +2107,10 @@ js_Interpret(JSContext *cx, jsbytecode *pc, jsval *result)
     };
 
     static void *interruptJumpTable[] = {
-# define OPDEF(op,val,name,token,length,nuses,ndefs,prec,format) \
-        JS_EXTENSION &&interrupt,
+# define OPDEF(op,val,name,token,length,nuses,ndefs,prec,format)              \
+        ((op != JSOP_PUSHOBJ)                                                 \
+         ? JS_EXTENSION &&interrupt                                           \
+         : JS_EXTENSION &&L_JSOP_PUSHOBJ),
 # include """"jsopcode.tbl""""
 # undef OPDEF
     };
@@ -2317,7 +2319,7 @@ interrupt:
         }
 #endif /* DEBUG */
 
-        if (interruptHandler) {
+        if (interruptHandler && op != JSOP_PUSHOBJ) {
             SAVE_SP_AND_PC(fp);
             switch (interruptHandler(cx, script, pc, &rval,
                                      rt->interruptHandlerData)) {"""
111ae391b9f0a61f4f326a7a2a2bfd7b25007b3b,106994,359371,roc+%cs.cmu.edu,"Bug 359371. Calculate correct available content-height when a float has border or padding. r+sr=dbaron
",1166147573,"""diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
index c25a0ae..3508d08 100644
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -5280,9 +5280,11 @@ nsBlockFrame::ReflowFloat(nsBlockReflowState& aState,
     availWidth -=  availWidth % twp;
   }
 
+  // aState.mY is relative to the border-top, make it relative to the content-top
+  nscoord contentYOffset = aState.mY - aState.BorderPadding().top;
   nscoord availHeight = NS_UNCONSTRAINEDSIZE == aState.mContentArea.height
                         ? NS_UNCONSTRAINEDSIZE 
-                        : PR_MAX(0, aState.mContentArea.height - aState.mY);
+                        : PR_MAX(0, aState.mContentArea.height - contentYOffset);
 
   nsRect availSpace(aState.BorderPadding().left,
                     aState.BorderPadding().top,"""
16e911af049641857abf2ffc3182656b287a8c48,106997,336574,Olli.Pettay%helsinki.fi,"Bug 336574, r+sr=roc
",1166142219,"""diff --git a/layout/base/nsIPresShell.h b/layout/base/nsIPresShell.h
index 0e61a28..b093e5e 100644
--- a/layout/base/nsIPresShell.h
+++ b/layout/base/nsIPresShell.h
@@ -97,10 +97,10 @@ class nsWeakFrame;
 
 typedef short SelectionType;
 
-// b6cf677a-aa50-47c2-b381-5a82e7e792da
+// 56719ada-52e9-4d81-b23d-acba10c5c1e2
 #define NS_IPRESSHELL_IID     \
-{ 0xb6cf677a, 0xaa50, 0x47c2, \
-  { 0xb3, 0x81, 0x5a, 0x82, 0xe7, 0xe7, 0x92, 0xda } }
+{ 0x56719ada, 0x52e9, 0x4d81, \
+  { 0xb2, 0x3d, 0xac, 0xba, 0x10, 0xc5, 0xc1, 0xe2 } }
 
 // Constants uses for ScrollFrameIntoView() function
 #define NS_PRESSHELL_SCROLL_TOP      0
@@ -377,11 +377,6 @@ public:
   NS_IMETHOD FlushPendingNotifications(mozFlushType aType) = 0;
 
   /**
-   * Post a request to handle a DOM event after Reflow has finished.
-   */
-  NS_IMETHOD PostDOMEvent(nsIContent* aContent, nsEvent* aEvent)=0;
-
-  /**
    * Post a request to set and attribute after reflow has finished.
    */
   NS_IMETHOD PostAttributeChange(nsIContent* aContent,
diff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp
index 841ad8d..0da230e 100644
--- a/layout/base/nsPresShell.cpp
+++ b/layout/base/nsPresShell.cpp
@@ -845,11 +845,6 @@ public:
   NS_IMETHOD RecreateFramesFor(nsIContent* aContent);
 
   /**
-   * Post a request to handle a DOM event after Reflow has finished.
-   */
-  NS_IMETHOD PostDOMEvent(nsIContent* aContent, nsEvent* aEvent);
-
-  /**
    * Post a request to set and attribute after reflow has finished.
    */
   NS_IMETHOD PostAttributeChange(nsIContent* aContent,
@@ -1156,10 +1151,7 @@ protected:
   
   nsRevocableEventPtr<ReflowEvent> mReflowEvent;
 
-  // used for list of posted events and attribute changes. To be done
-  // after reflow.
-  nsDOMEventRequest* mFirstDOMEventRequest;
-  nsDOMEventRequest* mLastDOMEventRequest;
+  // used for list of posted attribute changes. To be done after reflow.
   nsAttributeChangeRequest* mFirstAttributeRequest;
   nsAttributeChangeRequest* mLastAttributeRequest;
   nsCallbackEventRequest* mFirstCallbackEventRequest;
@@ -1426,9 +1418,7 @@ PresShell::~PresShell()
 
   NS_ASSERTION(mCurrentEventContentStack.Count() == 0,
                """"Huh, event content left on the stack in pres shell dtor!"""");
-  NS_ASSERTION(mFirstDOMEventRequest == nsnull &&
-               mLastDOMEventRequest == nsnull &&
-               mFirstAttributeRequest == nsnull &&
+  NS_ASSERTION(mFirstAttributeRequest == nsnull &&
                mLastAttributeRequest == nsnull &&
                mFirstCallbackEventRequest == nsnull &&
                mLastCallbackEventRequest == nsnull,
@@ -4672,39 +4662,6 @@ PresShell::CancelReflowCallback(nsIReflowCallback* aCallback)
 }
 
 /**
-* Post a request to handle a DOM event after Reflow has finished.
-* The event must have been created with the """"new"""" operator.
-*/
-NS_IMETHODIMP
-PresShell::PostDOMEvent(nsIContent* aContent, nsEvent* aEvent)
-{
- // ok we have a list of events to handle. Queue them up and handle them
- // after we finish reflow.
-
-  void* result = AllocateFrame(sizeof(nsDOMEventRequest));
-  if (NS_UNLIKELY(!result)) {
-    return NS_ERROR_OUT_OF_MEMORY;
-  }
-  nsDOMEventRequest* request = (nsDOMEventRequest*)result;
-
-  request->content = aContent;
-  NS_ADDREF(aContent);
-
-  request->event = aEvent;
-  request->next = nsnull;
-
-  if (mLastDOMEventRequest) {
-    mLastDOMEventRequest = mLastDOMEventRequest->next = request;
-  } else {
-    mFirstDOMEventRequest = request;
-    mLastDOMEventRequest = request;
-  }
- 
-  return NS_OK;
-}
-
-
-/**
  * Post a request to set and attribute after reflow has finished.
  */
 NS_IMETHODIMP
@@ -4768,30 +4725,6 @@ PresShell::HandlePostedReflowCallbacks()
 }
 
 void
-PresShell::HandlePostedDOMEvents()
-{
-   while(mFirstDOMEventRequest)
-   {
-      /* pull the node from the event request list. Be prepared for reentrant access to the list
-         from within Dispatch and its callees! */
-      nsDOMEventRequest* node = mFirstDOMEventRequest;
-      nsEventStatus status = nsEventStatus_eIgnore;
-
-      mFirstDOMEventRequest = node->next;
-      if (nsnull == mFirstDOMEventRequest) {
-        mLastDOMEventRequest = nsnull;
-      }
-
-      nsEventDispatcher::Dispatch(node->content, mPresContext, node->event,
-                                  nsnull, &status);
-      NS_RELEASE(node->content);
-      delete node->event;
-      node->nsDOMEventRequest::~nsDOMEventRequest(); // doesn't do anything, but just in case
-      FreeFrame(sizeof(nsDOMEventRequest), node);
-   }
-}
-
-void
 PresShell::HandlePostedAttributeChanges()
 {
    while(mFirstAttributeRequest)
@@ -6174,7 +6107,6 @@ PresShell::WillDoReflow()
 void
 PresShell::DidDoReflow()
 {
-  HandlePostedDOMEvents();
   HandlePostedAttributeChanges();
   HandlePostedReflowCallbacks();
   // Null-check mViewManager in case this happens during Destroy.  See
diff --git a/layout/generic/nsGfxScrollFrame.cpp b/layout/generic/nsGfxScrollFrame.cpp
index 0b7899b..81c00f7 100644
--- a/layout/generic/nsGfxScrollFrame.cpp
+++ b/layout/generic/nsGfxScrollFrame.cpp
@@ -1532,6 +1532,24 @@ nsGfxScrollFrameInner::ScrollToRestoredPosition()
   }
 }
 
+class nsAsyncScrollPortEvent : public nsRunnable
+{
+public:
+  // nsAsyncScrollPortEvent owns aEvent.
+  nsAsyncScrollPortEvent(nsIContent* aTarget, nsPresContext* aPresContext,
+                         nsScrollPortEvent* aEvent)
+  : mTarget(aTarget), mPresContext(aPresContext), mEvent(aEvent) {}
+
+  NS_IMETHOD Run() {
+    nsEventDispatcher::Dispatch(mTarget, mPresContext, mEvent);
+    return NS_OK;
+  }
+private:
+  nsCOMPtr<nsIContent>         mTarget;
+  nsRefPtr<nsPresContext>      mPresContext;
+  nsAutoPtr<nsScrollPortEvent> mEvent;
+};
+
 void
 nsGfxScrollFrameInner::PostScrollPortEvent(PRBool aOverflow, nsScrollPortEvent::orientType aType)
 {
@@ -1539,8 +1557,12 @@ nsGfxScrollFrameInner::PostScrollPortEvent(PRBool aOverflow, nsScrollPortEvent::
                                                    NS_SCROLLPORT_OVERFLOW :
                                                    NS_SCROLLPORT_UNDERFLOW,
                                                    nsnull);
+  ENSURE_TRUE(event);
   event->orient = aType;
-  mOuter->GetPresContext()->PresShell()->PostDOMEvent(mOuter->GetContent(), event);
+  nsCOMPtr<nsIRunnable> ev = new nsAsyncScrollPortEvent(mOuter->GetContent(),
+                                                        mOuter->GetPresContext(),
+                                                        event);
+  NS_DispatchToCurrentThread(ev);
 }
 
 void"""
ae03d2480695ab5566419daa0b80756d94c54f76,107100,359371,roc+%cs.cmu.edu,"Bug 359371. Don't leak overflowing frames if a bug occurs and we still have overflowing frames in an unconstrained reflow situation. r+sr=dbaron
",1165885583,"""diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
index 7ec5cae..c25a0ae 100644
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -872,7 +872,8 @@ nsBlockFrame::Reflow(nsPresContext*          aPresContext,
   // overflow lines hanging around; block reflow depends on the
   // overflow line lists being cleared out between reflow passes.
   DrainOverflowLines(state);
-
+  state.SetupOverflowPlaceholdersProperty();
+ 
   // If we're not dirty (which means we'll mark everything dirty later)
   // and our width has changed, mark the lines dirty that we need to
   // mark dirty for a resize reflow.
@@ -891,9 +892,9 @@ nsBlockFrame::Reflow(nsPresContext*          aPresContext,
   // allows subsequent lines on the page to be impacted by floats. If the 
   // block is incomplete or there is no ancestor using the same space manager, 
   // put continued floats at the beginning of the first overflow line.
-  if ((NS_UNCONSTRAINEDSIZE != aReflowState.availableHeight) && 
-      state.mOverflowPlaceholders.NotEmpty()) {
-    PRBool gaveToAncestor = PR_FALSE;
+  if (state.mOverflowPlaceholders.NotEmpty()) {
+    NS_ASSERTION(aReflowState.availableHeight != NS_UNCONSTRAINEDSIZE,
+                 """"Somehow we failed to fit all content, even though we have unlimited space!"""");
     if (NS_FRAME_IS_COMPLETE(state.mReflowStatus)) {
       // find the nearest block ancestor that uses the same space manager
       for (const nsHTMLReflowState* ancestorRS = aReflowState.parentReflowState; 
@@ -924,13 +925,13 @@ nsBlockFrame::Reflow(nsPresContext*          aPresContext,
               // don't keep their out of flows in a child frame list.
             }
             ancestorPlace->AppendFrames(nsnull, state.mOverflowPlaceholders.FirstChild());
-            gaveToAncestor = PR_TRUE;
+            state.mOverflowPlaceholders.SetFrames(nsnull);
             break;
           }
         }
       }
     }
-    if (!gaveToAncestor) {
+    if (!state.mOverflowPlaceholders.IsEmpty()) {
       state.mOverflowPlaceholders.SortByContentOrder();
       PRInt32 numOverflowPlace = state.mOverflowPlaceholders.GetLength();
       nsLineBox* newLine =
@@ -971,6 +972,7 @@ nsBlockFrame::Reflow(nsPresContext*          aPresContext,
           nsLineList::iterator nextToLastLine = ----end_lines();
           PushLines(state, nextToLastLine);
         }
+        state.mOverflowPlaceholders.SetFrames(nsnull);
       }
       state.mReflowStatus |= NS_FRAME_NOT_COMPLETE | NS_FRAME_REFLOW_NEXTINFLOW;
     }
diff --git a/layout/generic/nsBlockReflowState.cpp b/layout/generic/nsBlockReflowState.cpp
index eb6e2b5..d4225a6 100644
--- a/layout/generic/nsBlockReflowState.cpp
+++ b/layout/generic/nsBlockReflowState.cpp
@@ -77,12 +77,6 @@ nsBlockReflowState::nsBlockReflowState(const nsHTMLReflowState& aReflowState,
 
   const nsMargin& borderPadding = BorderPadding();
 
-  if (aReflowState.availableHeight != NS_UNCONSTRAINEDSIZE) {
-    mBlock->SetProperty(nsLayoutAtoms::overflowPlaceholdersProperty,
-                        &mOverflowPlaceholders, nsnull);
-    mBlock->AddStateBits(NS_BLOCK_HAS_OVERFLOW_PLACEHOLDERS);
-  }
-
   if (aTopMarginRoot || 0 != aReflowState.mComputedBorderPadding.top) {
     SetFlag(BRS_ISTOPMARGINROOT, PR_TRUE);
   }
@@ -144,8 +138,22 @@ nsBlockReflowState::nsBlockReflowState(const nsHTMLReflowState& aReflowState,
                                                      aReflowState.frame);
 }
 
+void
+nsBlockReflowState::SetupOverflowPlaceholdersProperty()
+{
+  if (mReflowState.availableHeight != NS_UNCONSTRAINEDSIZE ||
+      !mOverflowPlaceholders.IsEmpty()) {
+    mBlock->SetProperty(nsLayoutAtoms::overflowPlaceholdersProperty,
+                        &mOverflowPlaceholders, nsnull);
+    mBlock->AddStateBits(NS_BLOCK_HAS_OVERFLOW_PLACEHOLDERS);
+  }
+}
+
 nsBlockReflowState::~nsBlockReflowState()
 {
+  NS_ASSERTION(mOverflowPlaceholders.IsEmpty(),
+               """"Leaking overflow placeholder frames"""");
+
   // Restore the coordinate system, unless the space manager is null,
   // which means it was just destroyed.
   if (mSpaceManager) {
@@ -153,7 +161,7 @@ nsBlockReflowState::~nsBlockReflowState()
     mSpaceManager->Translate(-borderPadding.left, -borderPadding.top);
   }
 
-  if (mReflowState.availableHeight != NS_UNCONSTRAINEDSIZE) {
+  if (mBlock->GetStateBits() & NS_BLOCK_HAS_OVERFLOW_PLACEHOLDERS) {
     mBlock->UnsetProperty(nsLayoutAtoms::overflowPlaceholdersProperty);
     mBlock->RemoveStateBits(NS_BLOCK_HAS_OVERFLOW_PLACEHOLDERS);
   }
@@ -560,11 +568,15 @@ nsBlockReflowState::AddFloat(nsLineLayout&       aLineLayout,
     // This float will be placed after the line is done (it is a
     // below-current-line float).
     mBelowCurrentLineFloats.Append(fc);
-    if (mReflowState.availableHeight != NS_UNCONSTRAINEDSIZE) {
+    if (mReflowState.availableHeight != NS_UNCONSTRAINEDSIZE ||
+        aPlaceholder->GetNextInFlow()) {
       // If the float might not be complete, mark it incomplete now to
       // prevent the placeholders being torn down. We will destroy any
       // placeholders later if PlaceBelowCurrentLineFloats finds the
       // float is complete.
+      // Note that we could have unconstrained height and yet have
+      // a next-in-flow placeholder --- for example columns can switch
+      // from constrained height to unconstrained height.
       nsSplittableType splitType;
       aPlaceholder->IsSplittable(splitType);
       if (splitType == NS_FRAME_NOT_SPLITTABLE) {
diff --git a/layout/generic/nsBlockReflowState.h b/layout/generic/nsBlockReflowState.h
index b5887ff..a24157c 100644
--- a/layout/generic/nsBlockReflowState.h
+++ b/layout/generic/nsBlockReflowState.h
@@ -69,6 +69,13 @@ public:
 
   ~nsBlockReflowState();
 
+  // Set up a property on the block that points to our temporary mOverflowPlaceholders
+  // list, if that list is or could become non-empty during this reflow. Must be
+  // called after the block has done DrainOverflowLines because DrainOverflowLines
+  // can setup mOverflowPlaceholders even if the block is in unconstrained height
+  // reflow (it may have previously been reflowed with constrained height).
+  void SetupOverflowPlaceholdersProperty();
+
   /**
    * Get the available reflow space for the current y coordinate. The
    * available space is relative to our coordinate system (0,0) is our"""
0e7b40f96c3bbbde4739bc656d252cc1db87e4f6,107146,362724,bmlk%gmx.de,"report frames currently on the overflow list as frames on a additional childlist to get their views reparented if a frame higher in the tree needs to reparent the views bug 362724 r/sr=roc
",1165733177,"""diff --git a/layout/tables/nsTableFrame.cpp b/layout/tables/nsTableFrame.cpp
index 7a52ad0..2f63429 100644
--- a/layout/tables/nsTableFrame.cpp
+++ b/layout/tables/nsTableFrame.cpp
@@ -1300,6 +1300,9 @@ nsTableFrame::GetAdditionalChildListName(PRInt32 aIndex) const
   if (aIndex == NS_TABLE_FRAME_COLGROUP_LIST_INDEX) {
     return nsLayoutAtoms::colGroupList;
   }
+  if (aIndex == NS_TABLE_FRAME_OVERFLOW_LIST_INDEX) {
+    return nsLayoutAtoms::overflowList;
+  } 
   return nsnull;
 }
 
diff --git a/layout/tables/nsTableFrame.h b/layout/tables/nsTableFrame.h
index ac01ff5..2977364 100644
--- a/layout/tables/nsTableFrame.h
+++ b/layout/tables/nsTableFrame.h
@@ -65,7 +65,8 @@ enum nsPixelRound {eAlwaysRoundUp=0, eAlwaysRoundDown, eRoundUpIfHalfOrMore};
  * @see #GetAdditionalChildListName()
  */
 #define NS_TABLE_FRAME_COLGROUP_LIST_INDEX 0
-#define NS_TABLE_FRAME_LAST_LIST_INDEX    NS_TABLE_FRAME_COLGROUP_LIST_INDEX
+#define NS_TABLE_FRAME_OVERFLOW_LIST_INDEX 1
+#define NS_TABLE_FRAME_LAST_LIST_INDEX    NS_TABLE_FRAME_OVERFLOW_LIST_INDEX
 
 /* ============================================================================ */
 """
467d77c218f7a593b7771397a71544af20c7c23f,107206,362708,mats.palmgren%bredband.net,"Fix a Print Preview crash. b=362708 r=bernd sr=roc
",1165549451,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index 4049f8b..9d0ec08 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -10673,28 +10673,27 @@ nsCSSFrameConstructor::CreateContinuingTableFrame(nsIPresShell* aPresShell,
 
     // Replicate any header/footer frames
     nsFrameItems  childFrames;
-    nsIFrame* rowGroupFrame = aFrame->GetFirstChild(nsnull);
-    while (rowGroupFrame) {
-      // See if it's a header/footer
-      nsStyleContext*       rowGroupStyle = rowGroupFrame->GetStyleContext();
-      const nsStyleDisplay* display = rowGroupStyle->GetStyleDisplay();
-
-      if ((NS_STYLE_DISPLAY_TABLE_HEADER_GROUP == display->mDisplay) ||
-          (NS_STYLE_DISPLAY_TABLE_FOOTER_GROUP == display->mDisplay)) {
-        // If the row group has was continued, then don't replicate it
+    nsIFrame* childFrame = aFrame->GetFirstChild(nsnull);
+    for ( ; childFrame; childFrame = childFrame->GetNextSibling()) {
+      // See if it's a header/footer, possibly wrapped in a scroll frame.
+      nsTableRowGroupFrame* rowGroupFrame =
+        nsTableFrame::GetRowGroupFrame(childFrame);
+      if (rowGroupFrame) {
+        // If the row group was continued, then don't replicate it.
         nsIFrame* rgNextInFlow = rowGroupFrame->GetNextInFlow();
         if (rgNextInFlow) {
-          ((nsTableRowGroupFrame*)rowGroupFrame)->SetRepeatable(PR_FALSE);
+          rowGroupFrame->SetRepeatable(PR_FALSE);
         }
-        // Replicate the header/footer frame if it is not too tall
-        else if (((nsTableRowGroupFrame*)rowGroupFrame)->IsRepeatable()) {        
-          nsIFrame*               headerFooterFrame;
+        else if (rowGroupFrame->IsRepeatable()) {        
+          // Replicate the header/footer frame.
+          nsTableRowGroupFrame*   headerFooterFrame;
           nsFrameItems            childItems;
           nsFrameConstructorState state(mPresShell, mFixedContainingBlock,
                                         GetAbsoluteContainingBlock(newFrame),
                                         nsnull);
 
-          headerFooterFrame = NS_NewTableRowGroupFrame(aPresShell, rowGroupStyle);
+          headerFooterFrame = NS_STATIC_CAST(nsTableRowGroupFrame*,
+            NS_NewTableRowGroupFrame(aPresShell, rowGroupFrame->GetStyleContext()));
           nsIContent* headerFooter = rowGroupFrame->GetContent();
           headerFooterFrame->Init(headerFooter, newFrame, nsnull);
           nsTableCreator tableCreator(aPresShell); 
@@ -10702,19 +10701,15 @@ nsCSSFrameConstructor::CreateContinuingTableFrame(nsIPresShell* aPresShell,
                           PR_FALSE, childItems, PR_FALSE, &tableCreator);
           NS_ASSERTION(!state.mFloatedItems.childList, """"unexpected floated element"""");
           headerFooterFrame->SetInitialChildList(nsnull, childItems.childList);
-          ((nsTableRowGroupFrame*)headerFooterFrame)->SetRepeatable(PR_TRUE);
+          headerFooterFrame->SetRepeatable(PR_TRUE);
 
           // Table specific initialization
-          ((nsTableRowGroupFrame*)headerFooterFrame)->InitRepeatedFrame
-            (aPresContext, (nsTableRowGroupFrame*)rowGroupFrame);
+          headerFooterFrame->InitRepeatedFrame(aPresContext, rowGroupFrame);
 
           // XXX Deal with absolute and fixed frames...
           childFrames.AddChild(headerFooterFrame);
         }
       }
-
-      // Get the next row group frame
-      rowGroupFrame = rowGroupFrame->GetNextSibling();
     }
     
     // Set the table frame's initial child list"""
361de71875d6b8dde6df2026a0d4c19b91101e42,107232,344228,roc+%cs.cmu.edu,"Bug 344228. Fix up some naughty uses of nsIScrollbarMediator. r=enndeakin,sr=bzbarsky
",1165521221,"""diff --git a/layout/generic/nsGfxScrollFrame.cpp b/layout/generic/nsGfxScrollFrame.cpp
index ff1eb0c..4beeac3 100644
--- a/layout/generic/nsGfxScrollFrame.cpp
+++ b/layout/generic/nsGfxScrollFrame.cpp
@@ -2584,11 +2584,11 @@ nsGfxScrollFrameInner::SetScrollbarVisibility(nsIBox* aScrollbar, PRBool aVisibl
   if (!aScrollbar)
     return;
 
-  nsCOMPtr<nsIScrollbarFrame> scrollbar(do_QueryInterface(aScrollbar));
+  nsIScrollbarFrame* scrollbar;
+  CallQueryInterface(aScrollbar, &scrollbar);
   if (scrollbar) {
     // See if we have a mediator.
-    nsCOMPtr<nsIScrollbarMediator> mediator;
-    scrollbar->GetScrollbarMediator(getter_AddRefs(mediator));
+    nsIScrollbarMediator* mediator = scrollbar->GetScrollbarMediator();
     if (mediator) {
       // Inform the mediator of the visibility change.
       mediator->VisibilityChanged(scrollbar, aVisible);
@@ -2688,12 +2688,14 @@ nsGfxScrollFrameInner::SaveState(nsIStatefulFrame::SpecialStateID aStateID)
   if (mIsRoot && aStateID == nsIStatefulFrame::eNoID) {
     return nsnull;
   }
-  
+
+  // XXX can this actually get hit? I don't think so  
   nsCOMPtr<nsIScrollbarMediator> mediator;
   nsIFrame* first = GetScrolledFrame();
   mediator = do_QueryInterface(first);
   if (mediator) {
     // Child manages its own scrolling. Bail.
+    NS_ERROR(""""This code shouldn't be hit; alert robert@ocallahan.org"""");
     return nsnull;
   }
 
diff --git a/layout/xul/base/src/nsIScrollbarFrame.h b/layout/xul/base/src/nsIScrollbarFrame.h
index 3727a83..c0e4833 100644
--- a/layout/xul/base/src/nsIScrollbarFrame.h
+++ b/layout/xul/base/src/nsIScrollbarFrame.h
@@ -39,9 +39,9 @@
 #ifndef nsIScrollbarFrame_h___
 #define nsIScrollbarFrame_h___
 
-// {9A6B0416-4A5D-4550-BEB5-C94D18A69A94}
+// {660e5ed6-1cf7-47ff-b094-c588c21986e8}
 #define NS_ISCROLLBARFRAME_IID \
-{ 0x9a6b0416, 0x4a5d, 0x4550, { 0xbe, 0xb5, 0xc9, 0x4d, 0x18, 0xa6, 0x9a, 0x94 } }
+{ 0x660e5ed6, 0x1cf7, 0x47ff, { 0xb0, 0x94, 0xc5, 0x88, 0xc2, 0x19, 0x86, 0xe8 } }
 
 static NS_DEFINE_IID(kIScrollbarFrameIID,     NS_ISCROLLBARFRAME_IID);
 
@@ -52,11 +52,14 @@ class nsIScrollbarFrame : public nsISupports {
 public:
   NS_DECLARE_STATIC_IID_ACCESSOR(NS_ISCROLLBARFRAME_IID)
   
-  NS_IMETHOD GetScrollbarMediator(nsIScrollbarMediator** aResult) = 0;
-  NS_IMETHOD SetScrollbarMediator(nsIScrollbarMediator* aMediator) = 0;
+  // Sets the scrollbar mediator content. We will try to get its primary frame
+  // and then QI that to nsIScrollbarMediator as necessary.
+  virtual void SetScrollbarMediatorContent(nsIContent* aMediator) = 0;
+
+  // Do NOT hold on to this.
+  virtual nsIScrollbarMediator* GetScrollbarMediator() = 0;
 };
 
 NS_DEFINE_STATIC_IID_ACCESSOR(nsIScrollbarFrame, NS_ISCROLLBARFRAME_IID)
 
 #endif
-
diff --git a/layout/xul/base/src/nsListBoxBodyFrame.cpp b/layout/xul/base/src/nsListBoxBodyFrame.cpp
index f125c4f..c4c1b1e 100644
--- a/layout/xul/base/src/nsListBoxBodyFrame.cpp
+++ b/layout/xul/base/src/nsListBoxBodyFrame.cpp
@@ -257,7 +257,7 @@ nsListBoxBodyFrame::Init(nsIContent*     aContent,
   }
 
   nsCOMPtr<nsIScrollbarFrame> scrollbarFrame(do_QueryInterface(verticalScrollbar));
-  scrollbarFrame->SetScrollbarMediator(this);
+  scrollbarFrame->SetScrollbarMediatorContent(GetContent());
 
   nsBoxLayoutState boxLayoutState(presContext);
 
diff --git a/layout/xul/base/src/nsNativeScrollbarFrame.cpp b/layout/xul/base/src/nsNativeScrollbarFrame.cpp
index c22927e..0b6c8f7 100644
--- a/layout/xul/base/src/nsNativeScrollbarFrame.cpp
+++ b/layout/xul/base/src/nsNativeScrollbarFrame.cpp
@@ -64,19 +64,19 @@ NS_NewNativeScrollbarFrame (nsIPresShell* aPresShell, nsStyleContext* aContext)
 //
 // QueryInterface
 //
-NS_INTERFACE_MAP_BEGIN(nsNativeScrollbarFrame)
-NS_INTERFACE_MAP_END_INHERITING(nsBoxFrame)
-
-nsNativeScrollbarFrame::~nsNativeScrollbarFrame ( )
+NS_IMETHODIMP
+nsNativeScrollbarFrame::QueryInterface(const nsIID& aIID, void** aInstancePtr)
 {
-  // frame is going away, unhook the native scrollbar from
-  // the content node just to be safe about lifetime issues
-  nsCOMPtr<nsINativeScrollbar> scrollbar ( do_QueryInterface(mScrollbar) );
-  if ( scrollbar )
-    scrollbar->SetContent(nsnull, nsnull, nsnull);
+  if (!aInstancePtr) {
+    return NS_ERROR_NULL_POINTER;
+  }
+  if (aIID.Equals(NS_GET_IID(nsIScrollbarMediator))) {
+    *aInstancePtr = (void*) ((nsIScrollbarMediator*) this);
+    return NS_OK;
+  }
+  return nsBoxFrame::QueryInterface(aIID, aInstancePtr);
 }
 
-
 //
 // Init
 //
@@ -119,37 +119,41 @@ nsNativeScrollbarFrame::Init(nsIContent*     aContent,
   return rv;
 }
 
+void
+nsNativeScrollbarFrame::Destroy()
+{
+  nsCOMPtr<nsINativeScrollbar> scrollbar(do_QueryInterface(mScrollbar));
+  if (scrollbar) {
+    // frame is going away, unhook the native scrollbar from
+    // the content node just to be safe about lifetime issues
+    scrollbar->SetContent(nsnull, nsnull, nsnull);
+  }
+}
 
 //
-// FindScrollbar
+// FindParts
 //
 // Walk up the parent frame tree and find the content node of the frame
 // with the tag """"scrollbar"""". This is the content node that the GFX Scroll Frame
-// is watching for attribute changes.
+// is watching for attribute changes. We return the associated frame and
+// any mediator.
 //
-nsresult
-nsNativeScrollbarFrame::FindScrollbar(nsIFrame* start, nsIFrame** outFrame,
-                                      nsIContent** outContent)
+nsNativeScrollbarFrame::Parts
+nsNativeScrollbarFrame::FindParts()
 {
-  *outContent = nsnull;
-  *outFrame = nsnull;
-  
-  while ( start ) {
-    start = start->GetParent();
-    if ( start ) {
-      // get the content node
-      nsIContent* currContent = start->GetContent();
-
-      if (currContent && currContent->Tag() == nsXULAtoms::scrollbar) {
-        *outContent = currContent;
-        *outFrame = start;
-        NS_ADDREF(*outContent);
-        return NS_OK;
-      }
+  nsIFrame* f;
+  for (f = GetParent(); f; f = f->GetParent()) {
+    nsIContent* currContent = f->GetContent();
+
+    if (currContent && currContent->Tag() == nsXULAtoms::scrollbar) {
+      nsIScrollbarFrame* sb;
+      CallQueryInterface(f, &sb);
+      if (sb)
+        return Parts(f, sb, sb->GetScrollbarMediator());
     }
   }
 
-  return NS_OK;
+  return Parts(nsnull, nsnull, nsnull);
 }
 
 NS_IMETHODIMP
@@ -213,20 +217,15 @@ nsNativeScrollbarFrame::AttributeChanged(PRInt32 aNameSpaceID,
           PRInt32 oldPosition = (PRInt32)current;
           PRInt32 curPosition = maxValue;
         
-          nsCOMPtr<nsIContent> scrollbarContent;
-          nsIFrame* sbFrame = nsnull;
-          FindScrollbar(this, &sbFrame, getter_AddRefs(scrollbarContent));
-          nsCOMPtr<nsIScrollbarFrame> scrollbarFrame(do_QueryInterface(sbFrame));
-          if (scrollbarFrame) {
-            nsCOMPtr<nsIScrollbarMediator> mediator;
-            scrollbarFrame->GetScrollbarMediator(getter_AddRefs(mediator));
-            if (mediator)
-              mediator->PositionChanged(scrollbarFrame, oldPosition, /* inout */ curPosition);
+          Parts parts = FindParts();
+          if (parts.mMediator) {
+            parts.mMediator->PositionChanged(parts.mIScrollbarFrame, oldPosition, /* inout */ curPosition);
           }
 
           nsAutoString currentStr;
           currentStr.AppendInt(curPosition);
-          scrollbarContent->SetAttr(kNameSpaceID_None, nsXULAtoms::curpos, currentStr, PR_TRUE);
+          parts.mScrollbarFrame->GetContent()->
+            SetAttr(kNameSpaceID_None, nsXULAtoms::curpos, currentStr, PR_TRUE);
         }
       }
       
@@ -290,25 +289,18 @@ nsNativeScrollbarFrame::Hookup()
   if (!mScrollbarNeedsContent)
     return;
 
-  nsCOMPtr<nsIContent> scrollbarContent;
-  nsIFrame* scrollbarFrame = nsnull;
-  FindScrollbar(this, &scrollbarFrame, getter_AddRefs(scrollbarContent));
-
-  nsCOMPtr<nsIScrollbarMediator> mediator;
-  nsCOMPtr<nsIScrollbarFrame> sb(do_QueryInterface(scrollbarFrame));
-  if (!sb) {
-    NS_WARNING(""""ScrollbarFrame doesn't implement nsIScrollbarFrame"""");
-    return;
-  }
-
-  sb->GetScrollbarMediator(getter_AddRefs(mediator));
   nsCOMPtr<nsINativeScrollbar> scrollbar(do_QueryInterface(mScrollbar));
-  if (!mScrollbar) {
+  if (!scrollbar) {
     NS_WARNING(""""Native scrollbar widget doesn't implement nsINativeScrollbar"""");
     return;
   }
 
-  scrollbar->SetContent(scrollbarContent, sb, mediator);
+  Parts parts = FindParts();
+  // We can't just pass 'mediator' to the widget, because 'mediator' might go away.
+  // So pass a pointer to us. When we go away, we can tell the widget.
+  nsIContent* scrollbarContent = parts.mScrollbarFrame->GetContent();
+  scrollbar->SetContent(scrollbarContent,
+                        parts.mIScrollbarFrame, parts.mMediator ? this : nsnull);
   mScrollbarNeedsContent = PR_FALSE;
 
   if (!scrollbarContent)
@@ -328,3 +320,29 @@ nsNativeScrollbarFrame::Hookup()
   scrollbar->SetPosition(curpos);
 }
 
+NS_IMETHODIMP
+nsNativeScrollbarFrame::PositionChanged(nsISupports* aScrollbar, PRInt32 aOldIndex, PRInt32& aNewIndex)
+{
+  Parts parts = FindParts();
+  if (!parts.mMediator)
+    return NS_OK;
+  return parts.mMediator->PositionChanged(aScrollbar, aOldIndex, aNewIndex);
+}
+
+NS_IMETHODIMP
+nsNativeScrollbarFrame::ScrollbarButtonPressed(nsISupports* aScrollbar, PRInt32 aOldIndex, PRInt32 aNewIndex)
+{
+  Parts parts = FindParts();
+  if (!parts.mMediator)
+    return NS_OK;
+  return parts.mMediator->ScrollbarButtonPressed(aScrollbar, aOldIndex, aNewIndex);
+}
+
+NS_IMETHODIMP
+nsNativeScrollbarFrame::VisibilityChanged(nsISupports* aScrollbar, PRBool aVisible)
+{
+  Parts parts = FindParts();
+  if (!parts.mMediator)
+    return NS_OK;
+  return parts.mMediator->VisibilityChanged(aScrollbar, aVisible);
+}
diff --git a/layout/xul/base/src/nsNativeScrollbarFrame.h b/layout/xul/base/src/nsNativeScrollbarFrame.h
index d1ecac3..3ea3e1b 100644
--- a/layout/xul/base/src/nsNativeScrollbarFrame.h
+++ b/layout/xul/base/src/nsNativeScrollbarFrame.h
@@ -49,6 +49,7 @@
 
 #include """"nsScrollbarFrame.h""""
 #include """"nsIWidget.h""""
+#include """"nsIScrollbarMediator.h""""
 
 class nsISupportsArray;
 class nsIPresShell;
@@ -58,12 +59,11 @@ class nsStyleContext;
 
 nsIFrame* NS_NewNativeScrollbarFrame(nsIPresShell* aPresShell, nsStyleContext* aContext);
 
-class nsNativeScrollbarFrame : public nsBoxFrame
+class nsNativeScrollbarFrame : public nsBoxFrame, public nsIScrollbarMediator
 {
 public:
   nsNativeScrollbarFrame(nsIPresShell* aShell, nsStyleContext* aContext):
     nsBoxFrame(aShell, aContext), mScrollbarNeedsContent(PR_TRUE) {}
-  virtual ~nsNativeScrollbarFrame ( ) ;
 
 #ifdef DEBUG
   NS_IMETHOD GetFrameName(nsAString& aResult) const {
@@ -88,15 +88,30 @@ public:
                     nsReflowStatus&          aStatus);
 
   NS_IMETHOD GetPrefSize(nsBoxLayoutState& aState, nsSize& aSize);
-                        
+
+  virtual void Destroy();
+
+  // nsIScrollbarMediator forwarding
+  NS_IMETHOD PositionChanged(nsISupports* aScrollbar, PRInt32 aOldIndex, PRInt32& aNewIndex);
+  NS_IMETHOD ScrollbarButtonPressed(nsISupports* aScrollbar, PRInt32 aOldIndex, PRInt32 aNewIndex);
+  NS_IMETHOD VisibilityChanged(nsISupports* aScrollbar, PRBool aVisible);
+
 protected:
   
   void Hookup();
 
-  nsresult FindScrollbar(nsIFrame* start, nsIFrame** outFrame, nsIContent** outContent);
-  
+  struct Parts {
+    nsIFrame*             mScrollbarFrame;
+    nsIScrollbarFrame*    mIScrollbarFrame;
+    nsIScrollbarMediator* mMediator;
+    
+    Parts(nsIFrame* aFrame, nsIScrollbarFrame* aIScrollbarFrame, nsIScrollbarMediator* aMediator) :
+      mScrollbarFrame(aFrame), mIScrollbarFrame(aIScrollbarFrame), mMediator(aMediator) {}
+  };
+  Parts FindParts();
+
   PRBool IsVertical() const { return mIsVertical; }
-                  
+
 private:
 
   PRPackedBool mIsVertical;
diff --git a/layout/xul/base/src/nsScrollbarButtonFrame.cpp b/layout/xul/base/src/nsScrollbarButtonFrame.cpp
index 77859de..661027b 100644
--- a/layout/xul/base/src/nsScrollbarButtonFrame.cpp
+++ b/layout/xul/base/src/nsScrollbarButtonFrame.cpp
@@ -253,10 +253,10 @@ nsScrollbarButtonFrame::DoButtonAction(PRBool aSmoothScroll)
   else if (curpos > maxpos)
     curpos = maxpos;
 
-  nsCOMPtr<nsIScrollbarFrame> sb(do_QueryInterface(scrollbar));
+  nsIScrollbarFrame* sb;
+  CallQueryInterface(scrollbar, &sb);
   if (sb) {
-    nsCOMPtr<nsIScrollbarMediator> m;
-    sb->GetScrollbarMediator(getter_AddRefs(m));
+    nsIScrollbarMediator* m = sb->GetScrollbarMediator();
     if (m) {
       m->ScrollbarButtonPressed(sb, oldpos, curpos);
       return;
diff --git a/layout/xul/base/src/nsScrollbarFrame.cpp b/layout/xul/base/src/nsScrollbarFrame.cpp
index f0ccc5b..9452f35 100644
--- a/layout/xul/base/src/nsScrollbarFrame.cpp
+++ b/layout/xul/base/src/nsScrollbarFrame.cpp
@@ -48,7 +48,7 @@
 #include """"nsIScrollableFrame.h""""
 #include """"nsIView.h""""
 #include """"nsIViewManager.h""""
-
+#include """"nsIScrollbarMediator.h""""
 
 //
 // NS_NewToolbarFrame
@@ -176,3 +176,22 @@ nsScrollbarFrame::HandleRelease(nsPresContext* aPresContext,
   return NS_OK;
 }
 
+void
+nsScrollbarFrame::SetScrollbarMediatorContent(nsIContent* aMediator)
+{
+  mScrollbarMediator = aMediator;
+}
+
+nsIScrollbarMediator*
+nsScrollbarFrame::GetScrollbarMediator()
+{
+  if (!mScrollbarMediator)
+    return nsnull;
+  nsIFrame* f =
+    GetPresContext()->PresShell()->GetPrimaryFrameFor(mScrollbarMediator);
+  if (!f)
+    return nsnull;
+  nsIScrollbarMediator* sbm;
+  CallQueryInterface(f, &sbm);
+  return sbm;
+}
diff --git a/layout/xul/base/src/nsScrollbarFrame.h b/layout/xul/base/src/nsScrollbarFrame.h
index d4e0170..e7af558 100644
--- a/layout/xul/base/src/nsScrollbarFrame.h
+++ b/layout/xul/base/src/nsScrollbarFrame.h
@@ -100,8 +100,8 @@ public:
   virtual PRBool IsContainingBlock() const;
 
   // nsIScrollbarFrame
-  NS_IMETHOD SetScrollbarMediator(nsIScrollbarMediator* aMediator) { mScrollbarMediator = aMediator; return NS_OK; };
-  NS_IMETHOD GetScrollbarMediator(nsIScrollbarMediator** aResult) { *aResult = mScrollbarMediator; return NS_OK; };
+  virtual void SetScrollbarMediatorContent(nsIContent* aMediator);
+  virtual nsIScrollbarMediator* GetScrollbarMediator();
 
   // nsBox methods
 
@@ -113,8 +113,9 @@ public:
    * hide the children too.
    */
   virtual PRBool DoesClipChildren() { return PR_TRUE; }
+
 private:
-  nsIScrollbarMediator* mScrollbarMediator;
+  nsCOMPtr<nsIContent> mScrollbarMediator;
 }; // class nsScrollbarFrame
 
 #endif
diff --git a/layout/xul/base/src/nsSliderFrame.cpp b/layout/xul/base/src/nsSliderFrame.cpp
index 02df109..894fab8 100644
--- a/layout/xul/base/src/nsSliderFrame.cpp
+++ b/layout/xul/base/src/nsSliderFrame.cpp
@@ -252,10 +252,10 @@ nsSliderFrame::AttributeChanged(PRInt32 aNameSpaceID,
             current = max;
 
         // set the new position and notify observers
-        nsCOMPtr<nsIScrollbarFrame> scrollbarFrame(do_QueryInterface(scrollbarBox));
+        nsIScrollbarFrame* scrollbarFrame;
+        CallQueryInterface(scrollbarBox, &scrollbarFrame);
         if (scrollbarFrame) {
-          nsCOMPtr<nsIScrollbarMediator> mediator;
-          scrollbarFrame->GetScrollbarMediator(getter_AddRefs(mediator));
+          nsIScrollbarMediator* mediator = scrollbarFrame->GetScrollbarMediator();
           if (mediator) {
             mediator->PositionChanged(scrollbarFrame, GetCurrentPosition(scrollbar), current);
           }
@@ -738,14 +738,15 @@ nsSliderFrame::SetCurrentPosition(nsIContent* scrollbar, nsIFrame* aThumbFrame,
       newpos = maxpos;
 
   nsIBox* scrollbarBox = GetScrollbar();
-  nsCOMPtr<nsIScrollbarFrame> scrollbarFrame(do_QueryInterface(scrollbarBox));
+  nsIScrollbarFrame* scrollbarFrame;
+  CallQueryInterface(scrollbarBox, &scrollbarFrame);
 
   if (scrollbarFrame) {
     // See if we have a mediator.
-    nsCOMPtr<nsIScrollbarMediator> mediator;
-    scrollbarFrame->GetScrollbarMediator(getter_AddRefs(mediator));
+    nsIScrollbarMediator* mediator = scrollbarFrame->GetScrollbarMediator();
     if (mediator) {
       mediator->PositionChanged(scrollbarFrame, GetCurrentPosition(scrollbar), newpos);
+      // 'mediator' might be dangling now...
       UpdateAttribute(scrollbar, newpos, PR_FALSE, aIsSmooth);
       CurrentPositionChanged(GetPresContext());
       return;
diff --git a/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp b/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
index 283d33c..f7908ff 100644
--- a/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
+++ b/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
@@ -779,13 +779,13 @@ nsTreeBodyFrame::ScrollParts nsTreeBodyFrame::GetScrollParts()
     // dumb! We should know where these frames are.
     FindScrollParts(treeFrame, &result);
     if (result.mHScrollbar) {
-      result.mHScrollbar->SetScrollbarMediator(this);
+      result.mHScrollbar->SetScrollbarMediatorContent(GetContent());
       nsIFrame* f;
       CallQueryInterface(result.mHScrollbar, &f);
       result.mHScrollbarContent = f->GetContent();
     }
     if (result.mVScrollbar) {
-      result.mVScrollbar->SetScrollbarMediator(this);
+      result.mVScrollbar->SetScrollbarMediatorContent(GetContent());
       nsIFrame* f;
       CallQueryInterface(result.mVScrollbar, &f);
       result.mVScrollbarContent = f->GetContent();"""
11093d8b2cf94835d732cc53f9be07a55a295c9b,107387,353553,mats.palmgren%bredband.net,"Last checkin was for bug 353553.
",1165276219,""""""
47494a9313f53019d4a1a8bdbb00580a261ea1a4,107405,343293,bzbarsky%mit.edu,"Make ReconstructDocElementHierarchy work correctly even if we first blew away a
pseudo which had the root as its content.  Bug 343293, r+sr=roc
",1165264555,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index abbb757..4049f8b 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -667,8 +667,7 @@ DoCleanupFrameReferences(nsFrameManager*  aFrameManager,
   }
 
   // Remove the mapping from the content object to its frame
-  aFrameManager->SetPrimaryFrameFor(content, nsnull);
-  aFrameIn->RemovedAsPrimaryFrame();
+  aFrameManager->RemoveAsPrimaryFrame(content, aFrameIn);
   aFrameManager->ClearAllUndisplayedContentIn(content);
 
   // Recursively walk the child frames.
@@ -9620,8 +9619,7 @@ DoDeletingFrameSubtree(nsFrameManager* aFrameManager,
   // Remove the mapping from the content object to its frame.
   nsIContent* content = aFrame->GetContent();
   if (content) {
-    aFrameManager->SetPrimaryFrameFor(content, nsnull);
-    aFrame->RemovedAsPrimaryFrame();
+    aFrameManager->RemoveAsPrimaryFrame(content, aFrame);
     aFrameManager->ClearAllUndisplayedContentIn(content);
   }
 
diff --git a/layout/base/nsFrameManager.cpp b/layout/base/nsFrameManager.cpp
index aa393d1..3c8bb21 100644
--- a/layout/base/nsFrameManager.cpp
+++ b/layout/base/nsFrameManager.cpp
@@ -423,45 +423,57 @@ nsFrameManager::SetPrimaryFrameFor(nsIContent* aContent,
                                    nsIFrame*   aPrimaryFrame)
 {
   NS_ENSURE_ARG_POINTER(aContent);
-  // it's ok if aPrimaryFrame is null
+  NS_ASSERTION(aPrimaryFrame && aPrimaryFrame->GetParent(),
+               """"BOGUS!"""");
 
-  // If aPrimaryFrame is NULL, then remove the mapping
-  if (!aPrimaryFrame) {
-    if (mPrimaryFrameMap.ops) {
-      PL_DHashTableOperate(&mPrimaryFrameMap, aContent, PL_DHASH_REMOVE);
-    }
-  } else {
   // This code should be used if/when we switch back to a 2-word entry
   // in the primary frame map.
 #if 0
-    NS_PRECONDITION(aPrimaryFrame->GetContent() == aContent, """"wrong content"""");
+  NS_PRECONDITION(aPrimaryFrame->GetContent() == aContent, """"wrong content"""");
 #endif
 
-    // Create a new hashtable if necessary
-    if (!mPrimaryFrameMap.ops) {
-      if (!PL_DHashTableInit(&mPrimaryFrameMap, PL_DHashGetStubOps(), nsnull,
-                             sizeof(PrimaryFrameMapEntry), 16)) {
-        mPrimaryFrameMap.ops = nsnull;
-        return NS_ERROR_OUT_OF_MEMORY;
-      }
+  // Create a new hashtable if necessary
+  if (!mPrimaryFrameMap.ops) {
+    if (!PL_DHashTableInit(&mPrimaryFrameMap, PL_DHashGetStubOps(), nsnull,
+                           sizeof(PrimaryFrameMapEntry), 16)) {
+      mPrimaryFrameMap.ops = nsnull;
+      return NS_ERROR_OUT_OF_MEMORY;
     }
+  }
 
-    // Add a mapping to the hash table
-    PrimaryFrameMapEntry *entry = NS_STATIC_CAST(PrimaryFrameMapEntry*,
-        PL_DHashTableOperate(&mPrimaryFrameMap, aContent, PL_DHASH_ADD));
+  // Add a mapping to the hash table
+  PrimaryFrameMapEntry *entry = NS_STATIC_CAST(PrimaryFrameMapEntry*,
+      PL_DHashTableOperate(&mPrimaryFrameMap, aContent, PL_DHASH_ADD));
 #ifdef DEBUG_dbaron
-    if (entry->frame) {
-      NS_WARNING(""""already have primary frame for content"""");
-    }
-#endif
-    entry->frame = aPrimaryFrame;
-    entry->content = aContent;
+  if (entry->frame) {
+    NS_WARNING(""""already have primary frame for content"""");
   }
+#endif
+  entry->frame = aPrimaryFrame;
+  entry->content = aContent;
     
   return NS_OK;
 }
 
 void
+nsFrameManager::RemoveAsPrimaryFrame(nsIContent* aContent,
+                                     nsIFrame* aPrimaryFrame)
+{
+  NS_PRECONDITION(aPrimaryFrame, """"Must have a frame"""");
+  if (aContent && mPrimaryFrameMap.ops) {
+    PrimaryFrameMapEntry *entry = NS_STATIC_CAST(PrimaryFrameMapEntry*,
+        PL_DHashTableOperate(&mPrimaryFrameMap, aContent, PL_DHASH_LOOKUP));
+    if (PL_DHASH_ENTRY_IS_BUSY(entry) && entry->frame == aPrimaryFrame) {
+      // Don't use PL_DHashTableRawRemove, since we want the table to
+      // shrink as needed.
+      PL_DHashTableOperate(&mPrimaryFrameMap, aContent, PL_DHASH_REMOVE);
+    }
+  }
+
+  aPrimaryFrame->RemovedAsPrimaryFrame();
+}
+
+void
 nsFrameManager::ClearPrimaryFrameMap()
 {
   if (mPrimaryFrameMap.ops) {
diff --git a/layout/base/nsFrameManager.h b/layout/base/nsFrameManager.h
index dd598ae..113b616 100644
--- a/layout/base/nsFrameManager.h
+++ b/layout/base/nsFrameManager.h
@@ -114,8 +114,16 @@ public:
   // instead of calling IndexOf(aContent).
   NS_HIDDEN_(nsIFrame*) GetPrimaryFrameFor(nsIContent* aContent,
                                            PRInt32 aIndexHint);
+  // aPrimaryFrame must not be null.  If you're trying to remove a primary frame
+  // mapping, use RemoveAsPrimaryFrame.
   NS_HIDDEN_(nsresult)  SetPrimaryFrameFor(nsIContent* aContent,
                                            nsIFrame* aPrimaryFrame);
+  // If aPrimaryFrame is the current primary frame for aContent, remove the
+  // relevant hashtable entry.  If the current primary frame for aContent is
+  // null, this does nothing.  aPrimaryFrame must not be null, and this method
+  // handles calling RemovedAsPrimaryFrame on aPrimaryFrame.
+  NS_HIDDEN_(void)      RemoveAsPrimaryFrame(nsIContent* aContent,
+                                             nsIFrame* aPrimaryFrame);
   NS_HIDDEN_(void)      ClearPrimaryFrameMap();
 
   // Placeholder frame functions
diff --git a/layout/generic/nsImageMap.cpp b/layout/generic/nsImageMap.cpp
index 17547ee..4836eb4 100644
--- a/layout/generic/nsImageMap.cpp
+++ b/layout/generic/nsImageMap.cpp
@@ -762,7 +762,7 @@ nsImageMap::FreeAreas()
   PRInt32 i, n = mAreas.Count();
   for (i = 0; i < n; i++) {
     Area* area = (Area*) mAreas.ElementAt(i);
-    frameManager->SetPrimaryFrameFor(area->mArea, nsnull);
+    frameManager->RemoveAsPrimaryFrame(area->mArea, mImageFrame);
 
     nsCOMPtr<nsIContent> areaContent;
     area->GetArea(getter_AddRefs(areaContent));"""
18ec81feed81653176ae9557d565acbc77e171a7,107486,360493,mconnor%steelgryphon.com,"bug 360493 - allow users to disable password autofill without disabling password manager, r=gavin
",1165041262,"""diff --git a/browser/app/profile/firefox.js b/browser/app/profile/firefox.js
index 00f72ad..6009c3b 100644
--- a/browser/app/profile/firefox.js
+++ b/browser/app/profile/firefox.js
@@ -385,7 +385,8 @@ pref(""""browser.xul.error_pages.enabled"""", true);
 
 pref(""""signon.rememberSignons"""",              true);
 pref(""""signon.expireMasterPassword"""",         false);
-pref(""""signon.SignonFileName"""", """"signons.txt"""");
+pref(""""signon.SignonFileName"""",               """"signons.txt"""");
+pref(""""signon.autofillForms"""",                true);
 
 // We want to make sure mail URLs are handled externally...
 pref(""""network.protocol-handler.external.mailto"""", true); // for mail
diff --git a/toolkit/components/passwordmgr/base/nsPasswordManager.cpp b/toolkit/components/passwordmgr/base/nsPasswordManager.cpp
index dab894f..4a3f30f 100644
--- a/toolkit/components/passwordmgr/base/nsPasswordManager.cpp
+++ b/toolkit/components/passwordmgr/base/nsPasswordManager.cpp
@@ -1792,6 +1792,10 @@ nsPasswordManager::FillDocument(nsIDOMDocument* aDomDoc)
 
   PRUint32 formCount;
   forms->GetLength(&formCount);
+  
+  // check to see if we should formfill.  failure is non-fatal
+  PRBool prefillForm = PR_TRUE;
+  mPrefBranch->GetBoolPref(""""autofillForms"""", &prefillForm);
 
   // We can auto-prefill the username and password if there is only
   // one stored login that matches the username and password field names
@@ -1920,7 +1924,7 @@ nsPasswordManager::FillDocument(nsIDOMDocument* aDomDoc)
         continue;
       }
 
-      if (!oldUserValue.IsEmpty()) {
+      if (!oldUserValue.IsEmpty() && prefillForm) {
         // The page has prefilled a username.
         // If it matches any of our saved usernames, prefill the password
         // for that username.  If there are multiple saved usernames,
@@ -1962,7 +1966,7 @@ nsPasswordManager::FillDocument(nsIDOMDocument* aDomDoc)
       if (userField)
         AttachToInput(userField);
 
-      if (!prefilledUser){
+      if (!prefilledUser && prefillForm) {
         nsAutoString buffer;
 
         if (userField) {"""
eb240f27eea6656399f4f8da9406d424eafe29a3,107513,362512,bienvenu%nventure.com,"fix 362512 issues with rfc2047 encoding, sr=mscott
",1165001062,"""diff --git a/mailnews/mime/src/comi18n.cpp b/mailnews/mime/src/comi18n.cpp
index cd7e7c3..6da6420 100644
--- a/mailnews/mime/src/comi18n.cpp
+++ b/mailnews/mime/src/comi18n.cpp
@@ -592,13 +592,19 @@ char * apply_rfc2047_encoding(const char *_src, PRBool structured, const char *c
 
   if (!_src)
     return nsnull;
-  if ((src = src_head = nsCRT::strdup(_src)) == nsnull)
+
+  //<TAB>=?<charset>?<B/Q>?...?=<CRLF>
+  PRInt32 perLineOverhead = strlen(charset) + 10;
+
+  if (perLineOverhead > foldlen || (src = src_head = nsCRT::strdup(_src)) == nsnull)
     return nsnull;
 
   /* allocate enough buffer for conversion, this way it can avoid
      do another memory allocation which is expensive
    */
-  outputlen = strlen(src) * 4 + kMAX_CSNAME + 8;
+  PRInt32 charsPerLine = (foldlen - perLineOverhead) / 4;
+  PRInt32 maxNumLines = (strlen(src) / charsPerLine) + 1;
+  outputlen = strlen(src) * 4 + (maxNumLines * perLineOverhead) + 20 /* fudge */;
   if ((outputtail = output = (char *)PR_Malloc(outputlen)) == nsnull) {
     PR_Free(src_head);
     return nsnull;"""
92468882ca511bcc5d6d85a82ffe2277f00f1c88,107558,347852,bzbarsky%mit.edu,"Make sure to not use the same disk cache data block for different URIs.  Bug
347852, patch by Alfred Kayser <alfredkayser@nl.ibm.com>, r=darin, sr=bzbarsky
",1164948090,"""diff --git a/netwerk/cache/src/nsCacheDevice.h b/netwerk/cache/src/nsCacheDevice.h
index 14e8ae6..f8f496c 100644
--- a/netwerk/cache/src/nsCacheDevice.h
+++ b/netwerk/cache/src/nsCacheDevice.h
@@ -64,7 +64,7 @@ public:
     virtual nsresult Shutdown() = 0;
 
     virtual const char *   GetDeviceID(void) = 0;
-    virtual nsCacheEntry * FindEntry( nsCString * key ) = 0;
+    virtual nsCacheEntry * FindEntry( nsCString * key, PRBool *collision ) = 0;
 
     virtual nsresult DeactivateEntry( nsCacheEntry * entry ) = 0;
     virtual nsresult BindEntry( nsCacheEntry * entry ) = 0;
diff --git a/netwerk/cache/src/nsCacheService.cpp b/netwerk/cache/src/nsCacheService.cpp
index b23f465..6f75cd4 100644
--- a/netwerk/cache/src/nsCacheService.cpp
+++ b/netwerk/cache/src/nsCacheService.cpp
@@ -1023,7 +1023,11 @@ nsCacheService::ActivateEntry(nsCacheRequest * request,
 
     if (!entry) {
         // search cache devices for entry
-        entry = SearchCacheDevices(request->mKey, request->StoragePolicy());
+        PRBool collision = PR_FALSE;
+        entry = SearchCacheDevices(request->mKey, request->StoragePolicy(), &collision);
+        // When there is a hashkey collision just refuse to cache it...
+        if (collision) return NS_ERROR_CACHE_IN_USE;
+
         if (entry)  entry->MarkInitialized();
     }
 
@@ -1084,14 +1088,15 @@ nsCacheService::ActivateEntry(nsCacheRequest * request,
 
 
 nsCacheEntry *
-nsCacheService::SearchCacheDevices(nsCString * key, nsCacheStoragePolicy policy)
+nsCacheService::SearchCacheDevices(nsCString * key, nsCacheStoragePolicy policy, PRBool *collision)
 {
     nsCacheEntry * entry = nsnull;
 
+    *collision = PR_FALSE;
     if ((policy == nsICache::STORE_ANYWHERE) || (policy == nsICache::STORE_IN_MEMORY)) {
         // If there is no memory device, then there is nothing to search...
         if (mMemoryDevice)
-            entry = mMemoryDevice->FindEntry(key);
+            entry = mMemoryDevice->FindEntry(key, collision);
     }
 
     if (!entry && 
@@ -1105,7 +1110,7 @@ nsCacheService::SearchCacheDevices(nsCString * key, nsCacheStoragePolicy policy)
                     return nsnull;
             }
             
-            entry = mDiskDevice->FindEntry(key);
+            entry = mDiskDevice->FindEntry(key, collision);
         }
 #endif // !NECKO_DISK_CACHE
     }
diff --git a/netwerk/cache/src/nsCacheService.h b/netwerk/cache/src/nsCacheService.h
index 7279788..257ef45 100644
--- a/netwerk/cache/src/nsCacheService.h
+++ b/netwerk/cache/src/nsCacheService.h
@@ -191,7 +191,7 @@ private:
 
     nsCacheDevice *  EnsureEntryHasDevice(nsCacheEntry * entry);
 
-    nsCacheEntry *   SearchCacheDevices(nsCString * key, nsCacheStoragePolicy policy);
+    nsCacheEntry *   SearchCacheDevices(nsCString * key, nsCacheStoragePolicy policy, PRBool *collision);
 
     void             DeactivateEntry(nsCacheEntry * entry);
 
diff --git a/netwerk/cache/src/nsDiskCacheDevice.cpp b/netwerk/cache/src/nsDiskCacheDevice.cpp
index bb4a9ea..d9df21c 100644
--- a/netwerk/cache/src/nsDiskCacheDevice.cpp
+++ b/netwerk/cache/src/nsDiskCacheDevice.cpp
@@ -396,7 +396,7 @@ nsDiskCacheDevice::GetDeviceID()
  *  NOTE: called while holding the cache service lock
  */
 nsCacheEntry *
-nsDiskCacheDevice::FindEntry(nsCString * key)
+nsDiskCacheDevice::FindEntry(nsCString * key, PRBool *collision)
 {
     if (!Initialized())  return nsnull;  // NS_ERROR_NOT_INITIALIZED
     nsresult                rv;
@@ -405,6 +405,8 @@ nsDiskCacheDevice::FindEntry(nsCString * key)
     nsDiskCacheBinding *    binding = nsnull;
     PLDHashNumber           hashNumber = nsDiskCache::Hash(key->get());
 
+    *collision = PR_FALSE;
+
 #if DEBUG  /*because we shouldn't be called for active entries */
     binding = mBindery.FindActiveBinding(hashNumber);
     NS_ASSERTION(!binding, """"FindEntry() called for a bound entry."""");
@@ -422,6 +424,8 @@ nsDiskCacheDevice::FindEntry(nsCString * key)
     // compare key to be sure
     if (strcmp(diskEntry->mKeyStart, key->get()) == 0) {
         entry = diskEntry->CreateCacheEntry(this);
+    } else {
+        *collision = PR_TRUE;
     }
     delete [] (char *)diskEntry;
     
diff --git a/netwerk/cache/src/nsDiskCacheDevice.h b/netwerk/cache/src/nsDiskCacheDevice.h
index 7d56b61..2dd4f68 100644
--- a/netwerk/cache/src/nsDiskCacheDevice.h
+++ b/netwerk/cache/src/nsDiskCacheDevice.h
@@ -63,7 +63,7 @@ public:
     virtual nsresult        Shutdown();
 
     virtual const char *    GetDeviceID(void);
-    virtual nsCacheEntry *  FindEntry(nsCString * key);
+    virtual nsCacheEntry *  FindEntry(nsCString * key, PRBool *collision);
     virtual nsresult        DeactivateEntry(nsCacheEntry * entry);
     virtual nsresult        BindEntry(nsCacheEntry * entry);
     virtual void            DoomEntry( nsCacheEntry * entry );
diff --git a/netwerk/cache/src/nsDiskCacheDeviceSQL.cpp b/netwerk/cache/src/nsDiskCacheDeviceSQL.cpp
index c31ccb1..c30208a 100644
--- a/netwerk/cache/src/nsDiskCacheDeviceSQL.cpp
+++ b/netwerk/cache/src/nsDiskCacheDeviceSQL.cpp
@@ -846,7 +846,7 @@ nsDiskCacheDevice::GetDeviceID()
 }
 
 nsCacheEntry *
-nsDiskCacheDevice::FindEntry(nsCString *fullKey)
+nsDiskCacheDevice::FindEntry(nsCString *fullKey, PRBool *collision)
 {
   LOG((""""nsDiskCacheDevice::FindEntry [key=%s]\n"""", fullKey->get()));
 
diff --git a/netwerk/cache/src/nsDiskCacheDeviceSQL.h b/netwerk/cache/src/nsDiskCacheDeviceSQL.h
index 88f1012..7cc74a6 100644
--- a/netwerk/cache/src/nsDiskCacheDeviceSQL.h
+++ b/netwerk/cache/src/nsDiskCacheDeviceSQL.h
@@ -59,7 +59,7 @@ public:
   virtual nsresult        Shutdown();
 
   virtual const char *    GetDeviceID(void);
-  virtual nsCacheEntry *  FindEntry(nsCString * key);
+  virtual nsCacheEntry *  FindEntry(nsCString * key, PRBool *collision);
   virtual nsresult        DeactivateEntry(nsCacheEntry * entry);
   virtual nsresult        BindEntry(nsCacheEntry * entry);
   virtual void            DoomEntry( nsCacheEntry * entry );
diff --git a/netwerk/cache/src/nsMemoryCacheDevice.cpp b/netwerk/cache/src/nsMemoryCacheDevice.cpp
index 28c07bd..0f1802a 100644
--- a/netwerk/cache/src/nsMemoryCacheDevice.cpp
+++ b/netwerk/cache/src/nsMemoryCacheDevice.cpp
@@ -143,7 +143,7 @@ nsMemoryCacheDevice::GetDeviceID()
 
 
 nsCacheEntry *
-nsMemoryCacheDevice::FindEntry(nsCString * key)
+nsMemoryCacheDevice::FindEntry(nsCString * key, PRBool *collision)
 {
     nsCacheEntry * entry = mMemCacheEntries.GetEntry(key);
     if (!entry)  return nsnull;
diff --git a/netwerk/cache/src/nsMemoryCacheDevice.h b/netwerk/cache/src/nsMemoryCacheDevice.h
index e464aac..87cbd97 100644
--- a/netwerk/cache/src/nsMemoryCacheDevice.h
+++ b/netwerk/cache/src/nsMemoryCacheDevice.h
@@ -64,7 +64,7 @@ public:
     virtual const char *    GetDeviceID(void);
 
     virtual nsresult        BindEntry( nsCacheEntry * entry );
-    virtual nsCacheEntry *  FindEntry( nsCString * key );
+    virtual nsCacheEntry *  FindEntry( nsCString * key, PRBool *collision );
     virtual void            DoomEntry( nsCacheEntry * entry );
     virtual nsresult        DeactivateEntry( nsCacheEntry * entry );
 """
64f0f106c849d1f05c27af4d649360777eb73a3f,107574,361964,mrbkap%gmail.com,"Make argv as large as GC expects it to be. bug 361964, r=brendan
",1164923037,"""diff --git a/js/src/jsdbgapi.c b/js/src/jsdbgapi.c
index 7e11a87..560411c 100644
--- a/js/src/jsdbgapi.c
+++ b/js/src/jsdbgapi.c
@@ -375,7 +375,9 @@ js_watch_set(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
                 JSClass *clasp;
                 JSFunction *fun;
                 JSScript *script;
-                jsval argv[2];
+                uintN nslots;
+                jsval smallv[5];
+                jsval *argv;
                 JSStackFrame frame;
 
                 closure = (JSObject *) wp->closure;
@@ -390,8 +392,27 @@ js_watch_set(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
                     fun = NULL;
                     script = NULL;
                 }
+
+                nslots = 2;
+                if (fun) {
+                    nslots += fun->nargs;
+                    if (FUN_NATIVE(fun))
+                        nslots += fun->u.n.extra;
+                }
+
+                if (nslots <= JS_ARRAY_LENGTH(smallv)) {
+                    argv = smallv;
+                } else {
+                    argv = JS_malloc(cx, nslots);
+                    if (!argv) {
+                        DropWatchPoint(cx, wp);
+                        return JS_FALSE;
+                    }
+                }
+
                 argv[0] = OBJECT_TO_JSVAL(closure);
                 argv[1] = JSVAL_NULL;
+                memset(argv + 2, 0, nslots - 2);
 
                 memset(&frame, 0, sizeof(frame));
                 frame.script = script;
@@ -411,6 +432,8 @@ js_watch_set(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
                                         1, vp, vp)
                       : wp->setter(cx, OBJ_THIS_OBJECT(cx, obj), userid, vp));
                 cx->fp = frame.down;
+                if (argv != smallv)
+                    JS_free(cx, argv);
             }
             return DropWatchPoint(cx, wp) && ok;
         }"""
eeaa7dc7bd86cdd813cbc38e4da5005c9de20a90,107610,362213,bienvenu%nventure.com,"fix 362213 crash in MimeExternalBody_parse_eof, sr=mscott
",1164834059,"""diff --git a/mailnews/mime/src/mimeebod.cpp b/mailnews/mime/src/mimeebod.cpp
index 85b949c..99b211e 100644
--- a/mailnews/mime/src/mimeebod.cpp
+++ b/mailnews/mime/src/mimeebod.cpp
@@ -340,6 +340,7 @@ MimeExternalBody_parse_eof (MimeObject *obj, PRBool abort_p)
 							(site ? strlen(site) : 0) +
 							(svr ? strlen(svr) : 0) +
 							(subj ? strlen(subj) : 0) +
+                                                        (ct ? strlen(ct) : 0) +
 							(url ? strlen(url) : 0) + 100);
 	  if (!h)
 		{"""
09b1f43ea98830865016495bb0039b150552ac88,107614,322345,roc+%cs.cmu.edu,"Bug 322345. Cap maximum ft2 font size at 1000 pixels to avoid killing freetype2 and/or the X server. r=vlad
",1164831575,"""diff --git a/gfx/cairo/cairo/src/cairo-ft-font.c b/gfx/cairo/cairo/src/cairo-ft-font.c
index 25fabc9..8851387 100644
--- a/gfx/cairo/cairo/src/cairo-ft-font.c
+++ b/gfx/cairo/cairo/src/cairo-ft-font.c
@@ -62,6 +62,10 @@
  */
 #define MAX_OPEN_FACES 10
 
+/* This is the maximum font size we allow to be passed to FT_Set_Char_Size
+ */
+#define MAX_FONT_SIZE 1000
+
 /*
  * The simple 2x2 matrix is converted into separate scale and shape
  * factors so that hinting works right
@@ -643,9 +647,18 @@ _cairo_ft_unscaled_font_set_scale (cairo_ft_unscaled_font_t *unscaled,
     FT_Set_Transform(unscaled->face, &mat, NULL);
 
     if ((unscaled->face->face_flags & FT_FACE_FLAG_SCALABLE) != 0) {
+        double x_scale = sf.x_scale;
+        double y_scale = sf.y_scale;
+        if (x_scale > MAX_FONT_SIZE) {
+            x_scale = MAX_FONT_SIZE;
+        }
+        if (y_scale > MAX_FONT_SIZE) {
+            y_scale = MAX_FONT_SIZE;
+        }
+
 	error = FT_Set_Char_Size (unscaled->face,
-				  sf.x_scale * 64.0,
-				  sf.y_scale * 64.0,
+				  x_scale * 64.0,
+				  y_scale * 64.0,
 				  0, 0);
 	assert (error == 0);
     } else {
diff --git a/gfx/cairo/max-font-size.patch b/gfx/cairo/max-font-size.patch
new file mode 100644
index 0000000..7b563a8
--- /dev/null
+++ b/gfx/cairo/max-font-size.patch
@@ -0,0 +1,36 @@
+diff --git a/src/cairo-ft-font.c b/src/cairo-ft-font.c
+index 59a5acb..8851387 100644
+--- a/src/cairo-ft-font.c
++++ b/src/cairo-ft-font.c
+@@ -62,6 +62,10 @@
+  */
+ #define MAX_OPEN_FACES 10
+ 
++/* This is the maximum font size we allow to be passed to FT_Set_Char_Size
++ */
++#define MAX_FONT_SIZE 1000
++
+ /*
+  * The simple 2x2 matrix is converted into separate scale and shape
+  * factors so that hinting works right
+@@ -643,9 +647,18 @@ _cairo_ft_unscaled_font_set_scale (cairo
+     FT_Set_Transform(unscaled->face, &mat, NULL);
+ 
+     if ((unscaled->face->face_flags & FT_FACE_FLAG_SCALABLE) != 0) {
++        double x_scale = sf.x_scale;
++        double y_scale = sf.y_scale;
++        if (x_scale > MAX_FONT_SIZE) {
++            x_scale = MAX_FONT_SIZE;
++        }
++        if (y_scale > MAX_FONT_SIZE) {
++            y_scale = MAX_FONT_SIZE;
++        }
++
+ 	error = FT_Set_Char_Size (unscaled->face,
+-				  sf.x_scale * 64.0,
+-				  sf.y_scale * 64.0,
++				  x_scale * 64.0,
++				  y_scale * 64.0,
+ 				  0, 0);
+ 	assert (error == 0);
+     } else {"""
6a701c884cd4cb2c55f5c7b917ea49a59a76dd3e,107623,362180,igor.bukanov%gmail.com,"Bug 362180: optimizing slot access in JS_NewPropertyIterator.
",1164820615,"""diff --git a/js/src/jsapi.c b/js/src/jsapi.c
index 07618a8..f278b18 100644
--- a/js/src/jsapi.c
+++ b/js/src/jsapi.c
@@ -3378,7 +3378,7 @@ JS_NewPropertyIterator(JSContext *cx, JSObject *obj)
          * Note: we have to make sure that we root obj around the call to
          * JS_Enumerate to protect against multiple allocations under it.
          */
-        JS_PUSH_SINGLE_TEMP_ROOT(cx, OBJECT_TO_JSVAL(obj), &tvr);
+        JS_PUSH_SINGLE_TEMP_ROOT(cx, OBJECT_TO_JSVAL(iterobj), &tvr);
         ida = JS_Enumerate(cx, obj);
         JS_POP_TEMP_ROOT(cx, &tvr);
         if (!ida)
@@ -3387,9 +3387,9 @@ JS_NewPropertyIterator(JSContext *cx, JSObject *obj)
         index = ida->length;
     }
 
-    if (!JS_SetPrivate(cx, iterobj, pdata))
-        goto bad;
-    OBJ_SET_SLOT(cx, iterobj, JSSLOT_ITER_INDEX, INT_TO_JSVAL(index));
+    /* iterobj can not escape to other threads here. */
+    iterobj->slots[JSSLOT_PRIVATE] = PRIVATE_TO_JSVAL(pdata);
+    iterobj->slots[JSSLOT_ITER_INDEX] = INT_TO_JSVAL(index);
     return iterobj;
 
 bad:"""
72b9d72dd48c062b0489f840089ecd5489ad953b,107710,360293,vladimir%pobox.com,"b=360293, add helper macros for argument checking, r=dveditz
",1164666167,"""diff --git a/content/canvas/src/nsCanvasRenderingContext2D.cpp b/content/canvas/src/nsCanvasRenderingContext2D.cpp
index b6ff302..6928c7a 100644
--- a/content/canvas/src/nsCanvasRenderingContext2D.cpp
+++ b/content/canvas/src/nsCanvasRenderingContext2D.cpp
@@ -94,6 +94,7 @@
 #include """"nsPIDOMWindow.h""""
 #include """"nsIXPConnect.h""""
 #include """"jsapi.h""""
+#include """"jsnum.h""""
 
 #include """"nsTArray.h""""
 
@@ -178,6 +179,47 @@ static NS_DEFINE_IID(kBlenderCID, NS_BLENDER_CID);
 static PRBool CheckSaneImageSize (PRInt32 width, PRInt32 height);
 static PRBool CheckSaneSubrectSize (PRInt32 x, PRInt32 y, PRInt32 w, PRInt32 h, PRInt32 realWidth, PRInt32 realHeight);
 
+/* Float validation stuff */
+
+#define VALIDATE(_f)  if (!JSDOUBLE_IS_FINITE(_f)) return PR_FALSE
+
+/* These must take doubles as args, because JSDOUBLE_IS_FINITE expects
+ * to take the address of its argument; we can't cast/convert in the
+ * macro.
+ */
+
+static PRBool FloatValidate (double f1) {
+    VALIDATE(f1);
+    return PR_TRUE;
+}
+
+static PRBool FloatValidate (double f1, double f2) {
+    VALIDATE(f1); VALIDATE(f2);
+    return PR_TRUE;
+}
+
+static PRBool FloatValidate (double f1, double f2, double f3) {
+    VALIDATE(f1); VALIDATE(f2); VALIDATE(f3);
+    return PR_TRUE;
+}
+
+static PRBool FloatValidate (double f1, double f2, double f3, double f4) {
+    VALIDATE(f1); VALIDATE(f2); VALIDATE(f3); VALIDATE(f4);
+    return PR_TRUE;
+}
+
+static PRBool FloatValidate (double f1, double f2, double f3, double f4, double f5) {
+    VALIDATE(f1); VALIDATE(f2); VALIDATE(f3); VALIDATE(f4); VALIDATE(f5);
+    return PR_TRUE;
+}
+
+static PRBool FloatValidate (double f1, double f2, double f3, double f4, double f5, double f6) {
+    VALIDATE(f1); VALIDATE(f2); VALIDATE(f3); VALIDATE(f4); VALIDATE(f5); VALIDATE(f6);
+    return PR_TRUE;
+}
+
+#undef VALIDATE
+
 /**
  ** nsCanvasGradient
  **/
@@ -212,6 +254,9 @@ public:
     {
         nscolor color;
 
+        if (!FloatValidate(offset))
+            return NS_ERROR_DOM_SYNTAX_ERR;
+
         if (offset < 0.0 || offset > 1.0)
             return NS_ERROR_DOM_INDEX_SIZE_ERR;
 
@@ -1136,6 +1181,9 @@ nsCanvasRenderingContext2D::Restore()
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::Scale(float x, float y)
 {
+    if (!FloatValidate(x,y))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     cairo_scale (mCairo, x, y);
     return NS_OK;
 }
@@ -1143,6 +1191,9 @@ nsCanvasRenderingContext2D::Scale(float x, float y)
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::Rotate(float angle)
 {
+    if (!FloatValidate(angle))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     cairo_rotate (mCairo, angle);
     return NS_OK;
 }
@@ -1150,6 +1201,9 @@ nsCanvasRenderingContext2D::Rotate(float angle)
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::Translate(float x, float y)
 {
+    if (!FloatValidate(x,y))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     cairo_translate (mCairo, x, y);
     return NS_OK;
 }
@@ -1161,6 +1215,9 @@ nsCanvasRenderingContext2D::Translate(float x, float y)
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::SetGlobalAlpha(float aGlobalAlpha)
 {
+    if (!FloatValidate(aGlobalAlpha))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     // ignore invalid values, as per spec
     if (aGlobalAlpha < 0.0 || aGlobalAlpha > 1.0)
         return NS_OK;
@@ -1253,6 +1310,9 @@ NS_IMETHODIMP
 nsCanvasRenderingContext2D::CreateLinearGradient(float x0, float y0, float x1, float y1,
                                                  nsIDOMCanvasGradient **_retval)
 {
+    if (!FloatValidate(x0,y0,x1,y1))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     cairo_pattern_t *gradpat = nsnull;
     gradpat = cairo_pattern_create_linear ((double) x0, (double) y0, (double) x1, (double) y1);
     nsCanvasGradient *grad = new nsCanvasGradient(gradpat, mCSSParser);
@@ -1269,6 +1329,9 @@ NS_IMETHODIMP
 nsCanvasRenderingContext2D::CreateRadialGradient(float x0, float y0, float r0, float x1, float y1, float r1,
                                                  nsIDOMCanvasGradient **_retval)
 {
+    if (!FloatValidate(x0,y0,r0,x1,y1,r1))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     cairo_pattern_t *gradpat = nsnull;
     gradpat = cairo_pattern_create_radial ((double) x0, (double) y0, (double) r0,
                                            (double) x1, (double) y1, (double) r1);
@@ -1337,6 +1400,8 @@ nsCanvasRenderingContext2D::CreatePattern(nsIDOMHTMLElement *image,
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::SetShadowOffsetX(float x)
 {
+    if (!FloatValidate(x))
+        return NS_ERROR_DOM_SYNTAX_ERR;
     // XXX ERRMSG we need to report an error to developers here! (bug 329026)
     return NS_OK;
 }
@@ -1351,6 +1416,8 @@ nsCanvasRenderingContext2D::GetShadowOffsetX(float *x)
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::SetShadowOffsetY(float y)
 {
+    if (!FloatValidate(y))
+        return NS_ERROR_DOM_SYNTAX_ERR;
     // XXX ERRMSG we need to report an error to developers here! (bug 329026)
     return NS_OK;
 }
@@ -1365,6 +1432,8 @@ nsCanvasRenderingContext2D::GetShadowOffsetY(float *y)
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::SetShadowBlur(float blur)
 {
+    if (!FloatValidate(blur))
+        return NS_ERROR_DOM_SYNTAX_ERR;
     // XXX ERRMSG we need to report an error to developers here! (bug 329026)
     return NS_OK;
 }
@@ -1397,6 +1466,9 @@ nsCanvasRenderingContext2D::GetShadowColor(nsAString& color)
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::ClearRect(float x, float y, float w, float h)
 {
+    if (!FloatValidate(x,y,w,h))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     cairo_save (mCairo);
     cairo_set_operator (mCairo, CAIRO_OPERATOR_CLEAR);
     cairo_new_path (mCairo);
@@ -1410,6 +1482,9 @@ nsCanvasRenderingContext2D::ClearRect(float x, float y, float w, float h)
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::FillRect(float x, float y, float w, float h)
 {
+    if (!FloatValidate(x,y,w,h))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     cairo_new_path (mCairo);
     cairo_rectangle (mCairo, x, y, w, h);
 
@@ -1422,6 +1497,9 @@ nsCanvasRenderingContext2D::FillRect(float x, float y, float w, float h)
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::StrokeRect(float x, float y, float w, float h)
 {
+    if (!FloatValidate(x,y,w,h))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     cairo_new_path (mCairo);
     cairo_rectangle (mCairo, x, y, w, h);
 
@@ -1475,6 +1553,9 @@ nsCanvasRenderingContext2D::Clip()
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::MoveTo(float x, float y)
 {
+    if (!FloatValidate(x,y))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     cairo_move_to(mCairo, x, y);
     return NS_OK;
 }
@@ -1482,6 +1563,9 @@ nsCanvasRenderingContext2D::MoveTo(float x, float y)
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::LineTo(float x, float y)
 {
+    if (!FloatValidate(x,y))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     cairo_line_to(mCairo, x, y);
     return NS_OK;
 }
@@ -1489,6 +1573,9 @@ nsCanvasRenderingContext2D::LineTo(float x, float y)
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::QuadraticCurveTo(float cpx, float cpy, float x, float y)
 {
+    if (!FloatValidate(cpx,cpy,x,y))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     double cx, cy;
 
     // we will always have a current point, since beginPath forces
@@ -1510,6 +1597,9 @@ nsCanvasRenderingContext2D::BezierCurveTo(float cp1x, float cp1y,
                                           float cp2x, float cp2y,
                                           float x, float y)
 {
+    if (!FloatValidate(cp1x,cp1y,cp2x,cp2y,x,y))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     cairo_curve_to(mCairo, cp1x, cp1y, cp2x, cp2y, x, y);
     return NS_OK;
 }
@@ -1517,6 +1607,9 @@ nsCanvasRenderingContext2D::BezierCurveTo(float cp1x, float cp1y,
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::ArcTo(float x1, float y1, float x2, float y2, float radius)
 {
+    if (!FloatValidate(x1,y1,x2,y2,radius))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     if (radius <= 0)
         return NS_ERROR_DOM_INDEX_SIZE_ERR;
 
@@ -1604,6 +1697,9 @@ nsCanvasRenderingContext2D::ArcTo(float x1, float y1, float x2, float y2, float
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::Arc(float x, float y, float r, float startAngle, float endAngle, int ccw)
 {
+    if (!FloatValidate(x,y,r,startAngle,endAngle))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     if (ccw)
         cairo_arc_negative (mCairo, x, y, r, startAngle, endAngle);
     else
@@ -1614,6 +1710,9 @@ nsCanvasRenderingContext2D::Arc(float x, float y, float r, float startAngle, flo
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::Rect(float x, float y, float w, float h)
 {
+    if (!FloatValidate(x,y,w,h))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     cairo_rectangle (mCairo, x, y, w, h);
     return NS_OK;
 }
@@ -1625,6 +1724,9 @@ nsCanvasRenderingContext2D::Rect(float x, float y, float w, float h)
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::SetLineWidth(float width)
 {
+    if (!FloatValidate(width))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     cairo_set_line_width(mCairo, width);
     return NS_OK;
 }
@@ -1712,6 +1814,9 @@ nsCanvasRenderingContext2D::GetLineJoin(nsAString& joinstyle)
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::SetMiterLimit(float miter)
 {
+    if (!FloatValidate(miter))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     cairo_set_miter_limit(mCairo, miter);
     return NS_OK;
 }
@@ -1727,6 +1832,9 @@ nsCanvasRenderingContext2D::GetMiterLimit(float *miter)
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::IsPointInPath(float x, float y, PRBool *retVal)
 {
+    if (!FloatValidate(x,y))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     *retVal = (PRBool) cairo_in_fill(mCairo, x, y);
     return NS_OK;
 }
@@ -1827,6 +1935,11 @@ nsCanvasRenderingContext2D::DrawImage()
     }
 #undef GET_ARG
 
+    if (!FloatValidate(sx,sy,sw,sh))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+    if (!FloatValidate(dx,dy,dw,dh))
+        return NS_ERROR_DOM_SYNTAX_ERR;
+
     // check args
     if (sx < 0.0 || sy < 0.0 ||
         sw < 0.0 || sw > (double) imgWidth ||"""
ba5d458bc63a28e586c96e89401362ef65767ff1,107796,361346,mrbkap%gmail.com,"Mark our saved setter in case we have the last reference to it. bug 361346, r=brendan
",1164394654,"""diff --git a/js/src/jsdbgapi.c b/js/src/jsdbgapi.c
index 2c3e7f3..7e11a87 100644
--- a/js/src/jsdbgapi.c
+++ b/js/src/jsdbgapi.c
@@ -279,14 +279,18 @@ DropWatchPoint(JSContext *cx, JSWatchPoint *wp)
 }
 
 void
-js_MarkWatchPoints(JSRuntime *rt)
+js_MarkWatchPoints(JSContext *cx)
 {
+    JSRuntime *rt;
     JSWatchPoint *wp;
 
+    rt = cx->runtime;
     for (wp = (JSWatchPoint *)rt->watchPointList.next;
          wp != (JSWatchPoint *)&rt->watchPointList;
          wp = (JSWatchPoint *)wp->links.next) {
         MARK_SCOPE_PROPERTY(wp->sprop);
+        if (wp->sprop->attrs & JSPROP_SETTER)
+            JS_MarkGCThing(cx, wp->setter, """"wp->setter"""", NULL);
     }
 }
 
diff --git a/js/src/jsdbgapi.h b/js/src/jsdbgapi.h
index dea0f48..d2e1f1c 100644
--- a/js/src/jsdbgapi.h
+++ b/js/src/jsdbgapi.h
@@ -99,7 +99,7 @@ JS_ClearAllWatchPoints(JSContext *cx);
  * header file """"jsconfig.h"""" has been included.
  */
 extern void
-js_MarkWatchPoints(JSRuntime *rt);
+js_MarkWatchPoints(JSContext *cx);
 
 extern JSScopeProperty *
 js_FindWatchPoint(JSRuntime *rt, JSScope *scope, jsid id);
diff --git a/js/src/jsgc.c b/js/src/jsgc.c
index fe2a3d1..4dcd005 100644
--- a/js/src/jsgc.c
+++ b/js/src/jsgc.c
@@ -2849,7 +2849,7 @@ restart:
     if (rt->gcLocksHash)
         JS_DHashTableEnumerate(rt->gcLocksHash, gc_lock_marker, cx);
     js_MarkAtomState(&rt->atomState, keepAtoms, gc_mark_atom_key_thing, cx);
-    js_MarkWatchPoints(rt);
+    js_MarkWatchPoints(cx);
     js_MarkScriptFilenames(rt, keepAtoms);
     js_MarkNativeIteratorStates(cx);
 """
e21435c2e4c0a5b266bbdf743e759f99a23f183c,108095,360642,Olli.Pettay%helsinki.fi,"Bug 360642, r+enndeakin, sr=roc
",1163691955,"""diff --git a/layout/xul/base/src/nsListBoxBodyFrame.cpp b/layout/xul/base/src/nsListBoxBodyFrame.cpp
index fb6476f..0a875ce 100644
--- a/layout/xul/base/src/nsListBoxBodyFrame.cpp
+++ b/layout/xul/base/src/nsListBoxBodyFrame.cpp
@@ -1155,9 +1155,10 @@ nsListBoxBodyFrame::GetFirstItemBox(PRInt32 aOffset, PRBool* aCreated)
     
     nsPresContext* presContext = GetPresContext();
     nsCSSFrameConstructor* fc = presContext->PresShell()->FrameConstructor();
+    nsIFrame* topFrame = nsnull;
     fc->CreateListBoxContent(presContext, this, nsnull, startContent,
-                             &mTopFrame, isAppend, PR_FALSE, nsnull);
-    
+                             &topFrame, isAppend, PR_FALSE, nsnull);
+    mTopFrame = topFrame;
     if (mTopFrame) {
       if (aCreated)
         *aCreated = PR_TRUE;
diff --git a/layout/xul/base/src/nsListBoxBodyFrame.h b/layout/xul/base/src/nsListBoxBodyFrame.h
index 619e17c..80e8154 100644
--- a/layout/xul/base/src/nsListBoxBodyFrame.h
+++ b/layout/xul/base/src/nsListBoxBodyFrame.h
@@ -143,7 +143,7 @@ protected:
   nscoord mStringWidth;
 
   // frame markers
-  nsIFrame* mTopFrame;
+  nsWeakFrame mTopFrame;
   nsIFrame* mBottomFrame;
   nsIFrame* mLinkupFrame;
   PRInt32 mRowsToPrepend;"""
aecf439a54e3792c5a3a853d75135eb4717116cd,108273,339494,bzbarsky%mit.edu,"Fix order of mutation event firing for attribute removals.  Bug 339494, r+sr=sicking
",1163203486,"""diff --git a/content/base/src/nsAttrAndChildArray.cpp b/content/base/src/nsAttrAndChildArray.cpp
index 9b9e260..c795182 100644
--- a/content/base/src/nsAttrAndChildArray.cpp
+++ b/content/base/src/nsAttrAndChildArray.cpp
@@ -427,14 +427,16 @@ nsAttrAndChildArray::SetAndTakeAttr(nsINodeInfo* aName, nsAttrValue& aValue)
 
 
 nsresult
-nsAttrAndChildArray::RemoveAttrAt(PRUint32 aPos)
+nsAttrAndChildArray::RemoveAttrAt(PRUint32 aPos, nsAttrValue& aValue)
 {
   NS_ASSERTION(aPos < AttrCount(), """"out-of-bounds"""");
 
   PRUint32 mapped = MappedAttrCount();
   if (aPos < mapped) {
     if (mapped == 1) {
-      // We're removing the last mapped attribute.
+      // We're removing the last mapped attribute.  Can't swap in this
+      // case; have to copy.
+      aValue.SetTo(*mImpl->mMappedAttrs->AttrAt(0));
       NS_RELEASE(mImpl->mMappedAttrs);
 
       return NS_OK;
@@ -445,12 +447,13 @@ nsAttrAndChildArray::RemoveAttrAt(PRUint32 aPos)
                                       getter_AddRefs(mapped));
     NS_ENSURE_SUCCESS(rv, rv);
 
-    mapped->RemoveAttrAt(aPos);
+    mapped->RemoveAttrAt(aPos, aValue);
 
     return MakeMappedUnique(mapped);
   }
 
   aPos -= mapped;
+  ATTRS(mImpl)[aPos].mValue.SwapValueWith(aValue);
   ATTRS(mImpl)[aPos].~InternalAttr();
 
   PRUint32 slotCount = AttrSlotCount();
diff --git a/content/base/src/nsAttrAndChildArray.h b/content/base/src/nsAttrAndChildArray.h
index 826b375..0781686 100644
--- a/content/base/src/nsAttrAndChildArray.h
+++ b/content/base/src/nsAttrAndChildArray.h
@@ -102,7 +102,10 @@ public:
   nsresult SetAttr(nsIAtom* aLocalName, const nsAString& aValue);
   nsresult SetAndTakeAttr(nsIAtom* aLocalName, nsAttrValue& aValue);
   nsresult SetAndTakeAttr(nsINodeInfo* aName, nsAttrValue& aValue);
-  nsresult RemoveAttrAt(PRUint32 aPos);
+
+  // Remove the attr at position aPos.  The value of the attr is placed in
+  // aValue; any value that was already in aValue is destroyed.
+  nsresult RemoveAttrAt(PRUint32 aPos, nsAttrValue& aValue);
 
   // Returns attribute name at given position, *not* out-of-bounds safe
   const nsAttrName* AttrNameAt(PRUint32 aPos) const;
diff --git a/content/base/src/nsGenericElement.cpp b/content/base/src/nsGenericElement.cpp
index 062a9a1..86ded4d 100644
--- a/content/base/src/nsGenericElement.cpp
+++ b/content/base/src/nsGenericElement.cpp
@@ -3397,29 +3397,17 @@ nsGenericElement::UnsetAttr(PRInt32 aNameSpaceID, nsIAtom* aName,
     }
   }
 
-  if (aNotify && nsContentUtils::HasMutationListeners(this,
-                   NS_EVENT_BITS_MUTATION_ATTRMODIFIED)) {
-    nsCOMPtr<nsIDOMEventTarget> node =
-      do_QueryInterface(NS_STATIC_CAST(nsIContent *, this));
-    nsMutationEvent mutation(PR_TRUE, NS_MUTATION_ATTRMODIFIED);
+  PRBool hasMutationListeners = aNotify &&
+    nsContentUtils::HasMutationListeners(this,
+                                         NS_EVENT_BITS_MUTATION_ATTRMODIFIED);
 
+  // Grab the attr node if needed before we remove it from the attr map
+  nsCOMPtr<nsIDOMAttr> attrNode;
+  if (hasMutationListeners) {
+    // XXXbz namespaces, dude!
     nsAutoString attrName;
     aName->ToString(attrName);
-    nsCOMPtr<nsIDOMAttr> attrNode;
     GetAttributeNode(attrName, getter_AddRefs(attrNode));
-    mutation.mRelatedNode = attrNode;
-    mutation.mAttrName = aName;
-
-    nsAutoString value;
-    // It sucks that we have to call GetAttr here, but HTML can't always
-    // get the value from the nsAttrAndChildArray. Specifically enums and
-    // nsISupports can't be converted to strings.
-    GetAttr(aNameSpaceID, aName, value);
-    if (!value.IsEmpty())
-      mutation.mPrevAttrValue = do_GetAtom(value);
-    mutation.mAttrChange = nsIDOMMutationEvent::REMOVAL;
-
-    nsEventDispatcher::Dispatch(this, nsnull, &mutation);
   }
 
   // Clear binding to nsIDOMNamedNodeMap
@@ -3428,7 +3416,8 @@ nsGenericElement::UnsetAttr(PRInt32 aNameSpaceID, nsIAtom* aName,
     slots->mAttributeMap->DropAttribute(aNameSpaceID, aName);
   }
 
-  nsresult rv = mAttrsAndChildren.RemoveAttrAt(index);
+  nsAttrValue oldValue;
+  nsresult rv = mAttrsAndChildren.RemoveAttrAt(index, oldValue);
   NS_ENSURE_SUCCESS(rv, rv);
 
   if (document) {
@@ -3442,6 +3431,23 @@ nsGenericElement::UnsetAttr(PRInt32 aNameSpaceID, nsIAtom* aName,
                                   nsIDOMMutationEvent::REMOVAL);
   }
 
+  if (hasMutationListeners) {
+    nsCOMPtr<nsIDOMEventTarget> node =
+      do_QueryInterface(NS_STATIC_CAST(nsIContent *, this));
+    nsMutationEvent mutation(PR_TRUE, NS_MUTATION_ATTRMODIFIED);
+
+    mutation.mRelatedNode = attrNode;
+    mutation.mAttrName = aName;
+
+    nsAutoString value;
+    oldValue.ToString(value);
+    if (!value.IsEmpty())
+      mutation.mPrevAttrValue = do_GetAtom(value);
+    mutation.mAttrChange = nsIDOMMutationEvent::REMOVAL;
+
+    nsEventDispatcher::Dispatch(this, nsnull, &mutation);
+  }
+
   return NS_OK;
 }
 
diff --git a/content/base/src/nsMappedAttributes.cpp b/content/base/src/nsMappedAttributes.cpp
index 83b712c..a90b74c 100644
--- a/content/base/src/nsMappedAttributes.cpp
+++ b/content/base/src/nsMappedAttributes.cpp
@@ -234,8 +234,9 @@ nsMappedAttributes::List(FILE* out, PRInt32 aIndent) const
 #endif
 
 void
-nsMappedAttributes::RemoveAttrAt(PRUint32 aPos)
+nsMappedAttributes::RemoveAttrAt(PRUint32 aPos, nsAttrValue& aValue)
 {
+  Attrs()[aPos].mValue.SwapValueWith(aValue);
   Attrs()[aPos].~InternalAttr();
   memmove(&Attrs()[aPos], &Attrs()[aPos + 1],
           (mAttrCount - aPos - 1) * sizeof(InternalAttr));
diff --git a/content/base/src/nsMappedAttributes.h b/content/base/src/nsMappedAttributes.h
index 36187cb..cd82631 100644
--- a/content/base/src/nsMappedAttributes.h
+++ b/content/base/src/nsMappedAttributes.h
@@ -95,7 +95,9 @@ public:
     NS_ASSERTION(aPos < mAttrCount, """"out-of-bounds"""");
     return &Attrs()[aPos].mValue;
   }
-  void RemoveAttrAt(PRUint32 aPos);
+  // Remove the attr at position aPos.  The value of the attr is placed in
+  // aValue; any value that was already in aValue is destroyed.
+  void RemoveAttrAt(PRUint32 aPos, nsAttrValue& aValue);
   const nsAttrName* GetExistingAttrNameFromQName(const nsACString& aName) const;
   PRInt32 IndexOfAttr(nsIAtom* aLocalName, PRInt32 aNamespaceID) const;
   
diff --git a/content/xul/content/src/nsXULElement.cpp b/content/xul/content/src/nsXULElement.cpp
index a52385d..13cc0a7 100644
--- a/content/xul/content/src/nsXULElement.cpp
+++ b/content/xul/content/src/nsXULElement.cpp
@@ -1385,6 +1385,7 @@ nsXULElement::UnsetAttr(PRInt32 aNameSpaceID, nsIAtom* aName, PRBool aNotify)
 
     nsCOMPtr<nsIDOMAttr> attrNode;
     if (hasMutationListeners) {
+        // XXXbz namespaces, dude!
         nsAutoString attrName;
         aName->ToString(attrName);
         GetAttributeNode(attrName, getter_AddRefs(attrNode));
@@ -1395,7 +1396,8 @@ nsXULElement::UnsetAttr(PRInt32 aNameSpaceID, nsIAtom* aName, PRBool aNotify)
       slots->mAttributeMap->DropAttribute(aNameSpaceID, aName);
     }
 
-    rv = mAttrsAndChildren.RemoveAttrAt(index);
+    nsAttrValue ignored;
+    rv = mAttrsAndChildren.RemoveAttrAt(index, ignored);
     NS_ENSURE_SUCCESS(rv, rv);
 
     // XXX if the RemoveAttrAt() call fails, we might end up having removed"""
4522dd2e4c3404d87713f6afff794f4db50b0d7c,108285,352271,bclary%bclary.com,"JavaScript Test - regression test for bug 352271, by Jesse Ruderman
",1163188389,"""diff --git a/js/tests/js1_6/Regress/regress-352271.js b/js/tests/js1_6/Regress/regress-352271.js
new file mode 100755
index 0000000..baf8c70
--- /dev/null
+++ b/js/tests/js1_6/Regress/regress-352271.js
@@ -0,0 +1,65 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 352271;
+var summary = 'Do not crash with |getter| |for each|';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  try
+  {
+    eval('[window.x getter= t for each ([*].a(v) in [])]');
+  }
+  catch(ex)
+  {
+  }
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
cda0460472c6df9784fb3781166f38d40b81a684,108286,354924,bclary%bclary.com,"JavaScript Test - regression test for bug 354924, by Jesse Ruderman
",1163188145,"""diff --git a/js/tests/js1_5/Regress/regress-354924.js b/js/tests/js1_5/Regress/regress-354924.js
new file mode 100755
index 0000000..3c83def
--- /dev/null
+++ b/js/tests/js1_5/Regress/regress-354924.js
@@ -0,0 +1,62 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 354924;
+var summary = 'Do not crash with export/import and setter';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  this.x setter= function(){}; 
+  export *; 
+  t = this; 
+  new Function(""""import t.*; import t.*;"""")();
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
23097925999aa3f33bc9d4528c74e38502905d71,108288,354151,bclary%bclary.com,"JavaScript Test - regression test for bug 354151, by Igor Bukanov
",1163187418,"""diff --git a/js/tests/e4x/Regress/regress-354151-01.js b/js/tests/e4x/Regress/regress-354151-01.js
new file mode 100755
index 0000000..e69de29
diff --git a/js/tests/e4x/Regress/regress-354151-02.js b/js/tests/e4x/Regress/regress-354151-02.js
new file mode 100755
index 0000000..e69de29"""
d1dc48cb78d398a65b11a5797a178b155d7c94f3,108289,354145,bclary%bclary.com,"JavaScript Test - regression test for bug 354145, by Igor Bukanov
",1163187135,"""diff --git a/js/tests/e4x/Regress/regress-354145-01.js b/js/tests/e4x/Regress/regress-354145-01.js
new file mode 100755
index 0000000..604b217
--- /dev/null
+++ b/js/tests/e4x/Regress/regress-354145-01.js
@@ -0,0 +1,65 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 354145;
+var summary = 'Immutable XML';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+var xml = <></>
+var N = 10;
+for (var i = 0; i != N; ++i) {
+  xml[i] = <{""""a""""+i}/>;
+}
+
+function prepare()
+{
+  for (var i = N - 1; i >= 0; --i)
+    delete xml[i];
+  gc();
+  return """"test"""";
+}
+
+xml[N - 1] = { toString: prepare };
+
+TEST(1, expect, actual);
+
+END();
diff --git a/js/tests/e4x/Regress/regress-354145-02.js b/js/tests/e4x/Regress/regress-354145-02.js
new file mode 100755
index 0000000..68ead67
--- /dev/null
+++ b/js/tests/e4x/Regress/regress-354145-02.js
@@ -0,0 +1,65 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 354145;
+var summary = 'Immutable XML';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+
+var list = <></>
+var N = 10;
+for (var i = 0; i != N; ++i)
+  list[i] = <{""""a""""+i}/>;
+
+function prepare()
+{
+  for (var i = N - 1; i >= 0; --i)
+    delete list[i];
+  gc();
+  return """"test"""";
+}
+
+list.child({ toString: prepare });
+
+TEST(1, expect, actual);
+
+END();
diff --git a/js/tests/e4x/Regress/regress-354145-03.js b/js/tests/e4x/Regress/regress-354145-03.js
new file mode 100755
index 0000000..c84654e
--- /dev/null
+++ b/js/tests/e4x/Regress/regress-354145-03.js
@@ -0,0 +1,66 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 354145;
+var summary = 'Immutable XML';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+var list = <></>
+var N = 10;
+for (var i = 0; i != N; ++i)
+  list[i] = <{""""a""""+i}/>;
+
+function prepare()
+{
+  for (var i = N - 1; i >= 0; --i)
+    delete list[i];
+  gc();
+  return """"test"""";
+}
+
+print(""""Before list.contains"""");
+list.contains({ toString: prepare });
+print(""""After list.contains"""");
+TEST(1, expect, actual);
+print(""""After TEST"""");
+
+END();
diff --git a/js/tests/e4x/Regress/regress-354145-04.js b/js/tests/e4x/Regress/regress-354145-04.js
new file mode 100755
index 0000000..bbbb72d
--- /dev/null
+++ b/js/tests/e4x/Regress/regress-354145-04.js
@@ -0,0 +1,64 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 354145;
+var summary = 'Immutable XML';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+var xml = <tag/>;
+var N = 10;
+for (var i = 0; i != N; ++i)
+  xml.appendChild(<{'a'+i}/>);
+
+function prepare()
+{
+  delete xml.*;
+  gc();
+  return """"test"""";
+}
+
+var last = xml.*[N - 1];
+xml.insertChildAfter(last, { toString: prepare });
+
+TEST(1, expect, actual);
+
+END();
diff --git a/js/tests/e4x/Regress/regress-354145-05.js b/js/tests/e4x/Regress/regress-354145-05.js
new file mode 100755
index 0000000..10087f9
--- /dev/null
+++ b/js/tests/e4x/Regress/regress-354145-05.js
@@ -0,0 +1,64 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 354145;
+var summary = 'Immutable XML';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+var xml = <tag/>;
+var N = 10;
+for (var i = 0; i != N; ++i)
+  xml.appendChild(<{'a'+i}/>);
+
+function prepare()
+{
+  delete xml.*;
+  gc();
+  return """"test"""";
+}
+
+var last = xml.*[N - 1];
+xml.insertChildBefore(last, { toString: prepare });
+
+TEST(1, expect, actual);
+
+END();
diff --git a/js/tests/e4x/Regress/regress-354145-06.js b/js/tests/e4x/Regress/regress-354145-06.js
new file mode 100755
index 0000000..e69de29
diff --git a/js/tests/e4x/Regress/regress-354145-07.js b/js/tests/e4x/Regress/regress-354145-07.js
new file mode 100755
index 0000000..8136b4c
--- /dev/null
+++ b/js/tests/e4x/Regress/regress-354145-07.js
@@ -0,0 +1,57 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 354145;
+var summary = 'Immutable XML';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+
+var a = <a><b/></a>
+try {
+  a.insertChildAfter(a.b[0], {toString: function() { throw 1; }});
+} catch (e) { }
+
+for each (var i in a) { }
+
+TEST(1, expect, actual);
+
+END();"""
f762b53e5b5450d43d43bdb5bfbc77403a78f6f0,108290,350238,bclary%bclary.com,"JavaScript Test - regression test for bug 350238, by Jesse Ruderman
",1163186823,"""diff --git a/js/tests/e4x/Regress/regress-350238.js b/js/tests/e4x/Regress/regress-350238.js
new file mode 100755
index 0000000..9faa78b
--- /dev/null
+++ b/js/tests/e4x/Regress/regress-350238.js
@@ -0,0 +1,58 @@
+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+var bug = 350238;
+var summary = 'Do not assert <x/>.@*++';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+if (typeof document != 'undefined')
+{
+    document.location.href='javascript:<x/>.@*++;';
+}
+else
+{
+    <x/>.@*++;
+}
+
+TEST(1, expect, actual);
+
+END();"""
fe7743592bd9e945e6421c1a9144b6e2912b2a03,108325,358569,gavin%gavinsharp.com,"Bug 358569: When running with reduced FPU precision, the rounding error introduced by |d -=L*ds;| will cause |if (!(d *= 10.)) break;| to never be true, causing an infinite loop and consequent crash. Given |k| is already known, we know how often the loop should run, so use that as stop condition, also avoiding overwriting memory with 0. Patch by Keith Victor of MediaMachines, r=igor, r=crowder
",1163098404,"""diff --git a/js/src/jsdtoa.c b/js/src/jsdtoa.c
index 9668422..529a573 100644
--- a/js/src/jsdtoa.c
+++ b/js/src/jsdtoa.c
@@ -2396,7 +2396,9 @@ js_dtoa(double d, int mode, JSBool biasUp, int ndigits,
                 goto no_digits;
             goto one_digit;
         }
-        for(i = 1;; i++) {
+
+        /* Use true number of digits to limit looping. */
+        for(i = 1; i<=k+1; i++) {
             L = (Long) (d / ds);
             d -= L*ds;
 #ifdef Check_FLT_ROUNDS
@@ -2421,8 +2423,7 @@ js_dtoa(double d, int mode, JSBool biasUp, int ndigits,
                 }
                 break;
             }
-            if (!(d *= 10.))
-                break;
+            d *= 10.;
         }
         goto ret1;
     }"""
7b5b6ae191d4f025482a3430715c134fa3719cb0,108393,354978,mrbkap%gmail.com,"Set up the pseudo frame more carefully. bug 354978, r=brendan
",1162876193,"""diff --git a/js/src/jsdbgapi.c b/js/src/jsdbgapi.c
index 6f1a270..1f0cd55 100644
--- a/js/src/jsdbgapi.c
+++ b/js/src/jsdbgapi.c
@@ -366,12 +366,14 @@ js_watch_set(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
                  */
                 JSObject *funobj = (JSObject *) wp->closure;
                 JSFunction *fun = (JSFunction *) JS_GetPrivate(cx, funobj);
+                jsval argv[2] = { OBJECT_TO_JSVAL(funobj), JSVAL_NULL };
                 JSStackFrame frame;
 
                 memset(&frame, 0, sizeof(frame));
                 frame.script = FUN_SCRIPT(fun);
                 frame.fun = fun;
                 frame.down = cx->fp;
+                frame.argv = argv + 2;
                 cx->fp = &frame;
                 ok = !wp->setter ||
                      ((sprop->attrs & JSPROP_SETTER)"""
6acb4c208c70692dea6e00a118deeceaa931dacd,108504,358878,mozilla.mano%sent.com,"Bug 358878 - Feed preview's request for favicon.ico should not send Referer. r=gavin.
",1162629340,"""diff --git a/browser/components/feeds/src/FeedWriter.js b/browser/components/feeds/src/FeedWriter.js
index 0b21ce7..a349a02 100755
--- a/browser/components/feeds/src/FeedWriter.js
+++ b/browser/components/feeds/src/FeedWriter.js
@@ -58,6 +58,23 @@ function LOG(str) {
     dump(""""*** Feeds: """" + str + """"\n"""");
 }
 
+/**
+ * Wrapper function for nsIIOService::newURI.
+ * @param aURLSpec
+ *        The URL string from which to create an nsIURI.
+ * @returns an nsIURI object, or null if the creation of the URI failed.
+ */
+function makeURI(aURLSpec, aCharset) {
+  var ios = Cc[""""@mozilla.org/network/io-service;1""""].
+            getService(Ci.nsIIOService);
+  try {
+    return ios.newURI(aURLSpec, aCharset, null);
+  } catch (ex) { }
+
+  return null;
+}
+
+
 const XML_NS = """"http://www.w3.org/XML/1998/namespace""""
 const HTML_NS = """"http://www.w3.org/1999/xhtml"""";
 const XUL_NS = """"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"""";
@@ -77,6 +94,8 @@ const FW_CONTRACTID = """"@mozilla.org/browser/feeds/result-writer;1"""";
 const TITLE_ID = """"feedTitleText"""";
 const SUBTITLE_ID = """"feedSubtitleText"""";
 
+const ICON_DATAURL_PREFIX = """"data:image/x-icon;base64,"""";
+
 function FeedWriter() {
 }
 FeedWriter.prototype = {
@@ -321,10 +340,6 @@ FeedWriter.prototype = {
     var feedService = 
         Cc[""""@mozilla.org/browser/feeds/result-service;1""""].
         getService(Ci.nsIFeedResultService);
-        
-    var ios = 
-        Cc[""""@mozilla.org/network/io-service;1""""].
-        getService(Ci.nsIIOService);
  
     try {
       var result = 
@@ -479,7 +494,8 @@ FeedWriter.prototype = {
     if (checkbox) {
       var handlersMenuList = this._document.getElementById(""""handlersMenuList"""");
       if (handlersMenuList) {
-        var handlerName = this._getSelectedItemFromMenulist(handlersMenuList)                              .getAttribute(""""label"""");
+        var handlerName = this._getSelectedItemFromMenulist(handlersMenuList)
+                              .getAttribute(""""label"""");
         checkbox.setAttribute(""""label"""", this._getFormattedString(""""alwaysUse"""", [handlerName]));
       }
     }
@@ -552,7 +568,7 @@ FeedWriter.prototype = {
         break;
       }
       case """"client"""": {
-        var selectedAppMenuItem = this.selectedApplicationItemWrapped;
+        var selectedAppMenuItem = this.selectedApplicationItemWrapped;
         if (selectedAppMenuItem) {
           try {
             var selectedApp = prefs.getComplexValue(PREF_SELECTED_APP,
@@ -683,19 +699,19 @@ FeedWriter.prototype = {
       getService(Ci.nsIWebContentConverterService);
     var handlers = wccr.getContentHandlers(TYPE_MAYBE_FEED, {});
     if (handlers.length != 0) {
-      var ios = Cc[""""@mozilla.org/network/io-service;1""""].
-                getService(Ci.nsIIOService);
       for (var i = 0; i < handlers.length; ++i) {
         menuItem = this._document.createElementNS(XUL_NS, """"menuitem"""");
         menuItem.className = """"menuitem-iconic"""";
         menuItem.setAttribute(""""label"""", handlers[i].name);
         menuItem.setAttribute(""""handlerType"""", """"web"""");
         menuItem.setAttribute(""""webhandlerurl"""", handlers[i].uri);
-
-        var uri = ios.newURI(handlers[i].uri, null, null);
-        menuItem.setAttribute(""""image"""", uri.prePath + """"/favicon.ico"""");
-
         handlersMenuPopup.appendChild(menuItem);
+
+        // For privacy reasons we cannot set the image attribute directly
+        // to the icon url, see Bug 358878
+        var uri = makeURI(handlers[i].uri);
+        if (uri) 
+          new iconDataURIGenerator(uri.prePath + """"/favicon.ico"""", menuItem)
       }
     }
 
@@ -742,9 +758,7 @@ FeedWriter.prototype = {
         QueryInterface(Ci.nsIDocShell).currentDocumentChannel;
 
     const SUBSCRIBE_PAGE_URI = """"chrome://browser/content/feeds/subscribe.xhtml"""";
-    var uri = Cc[""""@mozilla.org/network/io-service;1""""].
-              getService(Ci.nsIIOService).
-              newURI(SUBSCRIBE_PAGE_URI, """""""", null)
+    var uri = makeURI(SUBSCRIBE_PAGE_URI);
     var resolvedURI = Cc[""""@mozilla.org/chrome/chrome-registry;1""""].
                       getService(Ci.nsIChromeRegistry).
                       convertChromeURL(uri);
@@ -959,6 +973,144 @@ FeedWriter.prototype = {
   }
 };
 
+// copied over from nsSearchService.js
+function b64(aBytes) {
+  const B64_CHARS =
+            """"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"""";
+  var out = """""""", bits, i, j;
+
+  while (aBytes.length >= 3) {
+    bits = 0;
+    for (i = 0; i < 3; i++) {
+      bits <<= 8;
+      bits |= aBytes[i];
+    }
+    for (j = 18; j >= 0; j -= 6)
+      out += B64_CHARS[(bits>>j) & 0x3F];
+
+    aBytes.splice(0, 3);
+  }
+
+  switch (aBytes.length) {
+    case 2:
+      out += B64_CHARS[(aBytes[0]>>2) & 0x3F];
+      out += B64_CHARS[((aBytes[0] & 0x03) << 4) | ((aBytes[1] >> 4) & 0x0F)];
+      out += B64_CHARS[((aBytes[1] & 0x0F) << 2)];
+      out += """"="""";
+      break;
+    case 1:
+      out += B64_CHARS[(aBytes[0]>>2) & 0x3F];
+      out += B64_CHARS[(aBytes[0] & 0x03) << 4];
+      out += """"=="""";
+      break;
+  }
+  return out;
+}
+
+function iconDataURIGenerator(aURISpec, aElement) {
+  var ios = Cc[""""@mozilla.org/network/io-service;1""""].
+            getService(Ci.nsIIOService);
+  var chan = ios.newChannelFromURI(makeURI(aURISpec));
+  chan.notificationCallbacks = this;
+  chan.asyncOpen(this, null);
+
+  this._channel = chan;
+  this._bytes = [];
+  this._element = aElement;
+}
+iconDataURIGenerator.prototype = {
+  _channel: null,
+  _countRead: 0,
+  _stream: null,
+
+  QueryInterface: function FW_IDUG_loadQI(aIID) {
+    if (aIID.equals(Ci.nsISupports)           ||
+        aIID.equals(Ci.nsIRequestObserver)    ||
+        aIID.equals(Ci.nsIStreamListener)     ||
+        aIID.equals(Ci.nsIChannelEventSink)   ||
+        aIID.equals(Ci.nsIInterfaceRequestor) ||
+        aIID.equals(Ci.nsIBadCertListener)    ||
+        // See bug 358878 comment 11
+        aIID.equals(Ci.nsIPrompt)             ||
+        // See FIXME comment below
+        aIID.equals(Ci.nsIHttpEventSink)      ||
+        aIID.equals(Ci.nsIProgressEventSink)  ||
+        false)
+      return this;
+
+    throw Cr.NS_ERROR_NO_INTERFACE;
+  },
+
+  // nsIRequestObserver
+  onStartRequest: function FW_IDUG_loadStartR(aRequest, aContext) {
+    this._stream = Cc[""""@mozilla.org/binaryinputstream;1""""].
+                   createInstance(Ci.nsIBinaryInputStream);
+  },
+
+  onStopRequest: function FW_IDUG_loadStopR(aRequest, aContext, aStatusCode) {
+    var requestFailed = !Components.isSuccessCode(aStatusCode);
+    if (!requestFailed && (aRequest instanceof Ci.nsIHttpChannel))
+      requestFailed = !aRequest.requestSucceeded;
+
+    if (!requestFailed && this._countRead != 0) {
+      try {
+        var dataURI = ICON_DATAURL_PREFIX + b64(this._bytes);
+        this._element.setAttribute(""""image"""", dataURI);
+      }
+      catch(ex) { }
+    }
+    this._channel = null;
+    this._element  = null;
+  },
+
+  // nsIStreamListener
+  onDataAvailable: function FW_IDUG_loadDAvailable(aRequest, aContext,
+                                                   aInputStream, aOffset,
+                                                   aCount) {
+    this._stream.setInputStream(aInputStream);
+
+    // Get a byte array of the data
+    this._bytes = this._bytes.concat(this._stream.readByteArray(aCount));
+    this._countRead += aCount;
+  },
+
+  // nsIChannelEventSink
+  onChannelRedirect: function FW_IDUG_loadCRedirect(aOldChannel, aNewChannel,
+                                                    aFlags) {
+    this._channel = aNewChannel;
+  },
+
+  // nsIInterfaceRequestor
+  getInterface: function FW_IDUG_load_GI(aIID) {
+    return this.QueryInterface(aIID);
+  },
+
+  // nsIBadCertListener
+  confirmUnknownIssuer: function FW_IDUG_load_CUI(aSocketInfo, aCert,
+                                                  aCertAddType) {
+    return false;
+  },
+
+  confirmMismatchDomain: function FW_IDUG_load_CMD(aSocketInfo, aTargetURL,
+                                                   aCert) {
+    return false;
+  },
+
+  confirmCertExpired: function FW_IDUG_load_CCE(aSocketInfo, aCert) {
+    return false;
+  },
+
+  notifyCrlNextupdate: function FW_IDUG_load_NCN(aSocketInfo, aTargetURL, aCert) {
+  },
+
+  // FIXME: bug 253127
+  // nsIHttpEventSink
+  onRedirect: function (aChannel, aNewChannel) { },
+  // nsIProgressEventSink
+  onProgress: function (aRequest, aContext, aProgress, aProgressMax) { },
+  onStatus: function (aRequest, aContext, aStatus, aStatusArg) { }
+};
+
 var Module = {
   QueryInterface: function M_QueryInterface(iid) {
     if (iid.equals(Ci.nsIModule) ||"""
5e6191419376267eca1fb1d4936494599363bc92,108579,359203,Olli.Pettay%helsinki.fi,"Bug 359203, r+sr=bz
",1162492495,"""diff --git a/layout/generic/nsFrameSetFrame.cpp b/layout/generic/nsFrameSetFrame.cpp
index 26e6ee0..84f5a3a 100644
--- a/layout/generic/nsFrameSetFrame.cpp
+++ b/layout/generic/nsFrameSetFrame.cpp
@@ -1495,6 +1495,7 @@ nsHTMLFramesetFrame::MouseDrag(nsPresContext* aPresContext,
 {
   PRInt32 change; // measured positive from left-to-right or top-to-bottom
   float p2t = aPresContext->PixelsToTwips();
+  nsWeakFrame weakFrame(this);
   if (mDragger->mVertical) {
     change = NSIntPixelsToTwips(aEvent->refPoint.x - mFirstDragPoint.x, p2t);
     if (change > mNextNeighborOrigSize - mMinDrag) {
@@ -1543,6 +1544,7 @@ nsHTMLFramesetFrame::MouseDrag(nsPresContext* aPresContext,
     }
   }
 
+  ENSURE_TRUE(weakFrame.IsAlive());
   if (change != 0) {
     mDrag.Reset(mDragger->mVertical, mDragger->mPrevNeighbor, change, this);
     nsIFrame* parentFrame = GetParent();"""
910e1211fb949688a4afdd03336857e130c0045e,108824,355161,jst%mozilla.org,"Fixing bug 355161. Make sure to innerize the global object when looking for class objects, and fix the innerObject() hook to deal with really early requests to innerize. r=mrbkap@gmail.com, sr=brendan@mozilla.org
",1161994913,"""diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index cdf00a6..a77213d 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -6564,8 +6564,9 @@ nsWindowSH::InnerObject(nsIXPConnectWrappedNative *wrapper, JSContext * cx,
 {
   nsGlobalWindow *win = nsGlobalWindow::FromWrapper(wrapper);
 
-  if (win->IsInnerWindow()) {
-    // Return the inner window.
+  if (win->IsInnerWindow() || win->IsFrozen()) {
+    // Return the inner window, or the outer if we're dealing with a
+    // frozen outer.
 
     *_retval = obj;
   } else {
diff --git a/dom/src/base/nsGlobalWindow.cpp b/dom/src/base/nsGlobalWindow.cpp
index 828699a..59e6f3d 100644
--- a/dom/src/base/nsGlobalWindow.cpp
+++ b/dom/src/base/nsGlobalWindow.cpp
@@ -408,7 +408,7 @@ nsGlobalWindow::nsGlobalWindow(nsGlobalWindow *aOuterWindow)
 
   if (aOuterWindow) {
     // |this| is an inner window, add this inner window to the outer
-    // |window list of inners.
+    // window list of inners.
     PR_INSERT_AFTER(this, aOuterWindow);
 
     mObserver = new nsGlobalWindowObserver(this);
@@ -428,6 +428,11 @@ nsGlobalWindow::nsGlobalWindow(nsGlobalWindow *aOuterWindow)
       }
     }
   } else {
+    // |this| is an outer window. Outer windows start out frozen and
+    // remain frozen until they get an inner window, so freeze this
+    // outer window here.
+    Freeze();
+
     mObserver = nsnull;
   }
 
@@ -1106,6 +1111,13 @@ nsGlobalWindow::SetNewDocument(nsIDocument* aDocument,
   }
 #endif
 
+  if (IsOuterWindow() && IsFrozen()) {
+    // This outer is now getting its first inner, thaw the outer now
+    // that it's ready and is getting an inner window.
+
+    Thaw();
+  }
+
   if (!aIsInternalCall && IsInnerWindow()) {
     if (!mOuterWindow) {
       return NS_ERROR_NOT_INITIALIZED;
@@ -5907,7 +5919,7 @@ nsGlobalWindow::Observe(nsISupports* aSubject, const char* aTopic,
 
     nsAutoString domain(aData);
 
-    if (mIsFrozen) {
+    if (IsFrozen()) {
       // This window is frozen, rather than firing the events here,
       // store the domain in which the change happened and fire the
       // events if we're ever thawed.
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index 8b9bd54..a6a2beb 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -2529,6 +2529,10 @@ js_FindClassObject(JSContext *cx, JSObject *start, jsid id, jsval *vp)
         }
     }
 
+    OBJ_TO_INNER_OBJECT(cx, obj);
+    if (!obj)
+        return JS_FALSE;
+
     if (JSID_IS_INT(id)) {
         key = JSID_TO_INT(id);
         JS_ASSERT(key != JSProto_Null);"""
2a52d5a2afb8ed15ecd01ba207d4893b9b1c2932,108884,358192,igor.bukanov%gmail.com,"Bug 358192: Make sure that Out-of-Memory during exception initialization is properly propagated. r=brendan
",1161901432,"""diff --git a/js/src/jsexn.c b/js/src/jsexn.c
index 7a57dea..1b15c20 100644
--- a/js/src/jsexn.c
+++ b/js/src/jsexn.c
@@ -1149,12 +1149,13 @@ JSBool
 js_ErrorToException(JSContext *cx, const char *message, JSErrorReport *reportp)
 {
     JSErrNum errorNumber;
+    const JSErrorFormatString *errorString;
     JSExnType exn;
+    jsval tv[4];
+    JSTempValueRooter tvr;
     JSBool ok;
     JSObject *errProto, *errObject;
     JSString *messageStr, *filenameStr;
-    uintN lineno;
-    const JSErrorFormatString *errorString;
 
     /*
      * Tell our caller to report immediately if cx has no active frames, or if
@@ -1193,12 +1194,13 @@ js_ErrorToException(JSContext *cx, const char *message, JSErrorReport *reportp)
      */
     if (cx->creatingException)
         return JS_FALSE;
+
+    /* After this point the control must flow through the label out. */
     cx->creatingException = JS_TRUE;
 
     /* Protect the newly-created strings below from nesting GCs. */
-    ok = js_EnterLocalRootScope(cx);
-    if (!ok)
-        goto out;
+    memset(tv, 0, sizeof tv);
+    JS_PUSH_TEMP_ROOT(cx, sizeof tv / sizeof tv[0], tv, &tvr);
 
     /*
      * Try to get an appropriate prototype by looking up the corresponding
@@ -1209,45 +1211,41 @@ js_ErrorToException(JSContext *cx, const char *message, JSErrorReport *reportp)
                               &errProto);
     if (!ok)
         goto out;
+    tv[0] = OBJECT_TO_JSVAL(errProto);
 
     errObject = js_NewObject(cx, &js_ErrorClass, errProto, NULL);
     if (!errObject) {
         ok = JS_FALSE;
         goto out;
     }
-
-    /*
-     * Set the generated Exception object early, so it won't be GC'd by a last
-     * ditch attempt to collect garbage, or a GC that otherwise nests or races
-     * under any of the following calls.  If one of the following calls fails,
-     * it will overwrite this exception object with one of its own (except in
-     * case of OOM errors, of course).
-     */
-    JS_SetPendingException(cx, OBJECT_TO_JSVAL(errObject));
+    tv[1] = OBJECT_TO_JSVAL(errObject);
 
     messageStr = JS_NewStringCopyZ(cx, message);
     if (!messageStr) {
         ok = JS_FALSE;
         goto out;
     }
+    tv[2] = STRING_TO_JSVAL(messageStr);
 
     filenameStr = JS_NewStringCopyZ(cx, reportp->filename);
     if (!filenameStr) {
         ok = JS_FALSE;
         goto out;
     }
-    lineno = reportp->lineno;
+    tv[3] = STRING_TO_JSVAL(filenameStr);
 
-    ok = InitExnPrivate(cx, errObject, messageStr, filenameStr, lineno,
-                        reportp);
+    ok = InitExnPrivate(cx, errObject, messageStr, filenameStr,
+                        reportp->lineno, reportp);
     if (!ok)
         goto out;
 
+    JS_SetPendingException(cx, OBJECT_TO_JSVAL(errObject));
+
     /* Flag the error report passed in to indicate an exception was raised. */
     reportp->flags |= JSREPORT_EXCEPTION;
 
 out:
-    js_LeaveLocalRootScope(cx);
+    JS_POP_TEMP_ROOT(cx, &tvr);
     cx->creatingException = JS_FALSE;
     return ok;
 }"""
6f712011313417de43e38486efe55a3f4862adce,109480,350312,bclary%bclary.com,"JavaScript Tests - regression tests for bug 350312, by Igor Bukanov, Brendan Eich
",1160477711,"""diff --git a/js/tests/js1_5/Regress/regress-350312-01.js b/js/tests/js1_5/Regress/regress-350312-01.js
new file mode 100755
index 0000000..f889d4c
--- /dev/null
+++ b/js/tests/js1_5/Regress/regress-350312-01.js
@@ -0,0 +1,81 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 350312;
+var summary = 'Accessing wrong stack slot with nested catch/finally';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+
+  var tmp;
+
+  function f()
+    {
+      try {   
+        try {   
+          throw 1;
+        } catch (e) {
+          throw e;
+        } finally {
+          tmp = true;
+        }
+      } catch (e) {
+        return e;
+      }
+    }
+
+  var ex = f();
+
+  var passed = ex === 1;
+  if (!passed) {
+    writeLineToLog(""""Failed!"""");
+    writeLineToLog(""""ex=""""+uneval(ex));
+  }
+  reportCompare(true, passed, summary);
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/Regress/regress-350312-02.js b/js/tests/js1_5/Regress/regress-350312-02.js
new file mode 100755
index 0000000..3f6d663
--- /dev/null
+++ b/js/tests/js1_5/Regress/regress-350312-02.js
@@ -0,0 +1,143 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Brendan Eich
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 350312;
+var summary = 'Accessing wrong stack slot with nested catch/finally';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+
+  function createPrint(obj)
+    {
+      return new Function(""""actual += """" + obj + """" + ','; """" + 
+                          """"writeLineToLog("""" + obj + """");"""");
+    }
+
+  function createThrow(obj)
+    {
+      return new Function(""""throw """" + obj + """"; """");
+    }
+
+
+  function f(a, b, c)
+    {
+      try {
+        a();
+      } catch (e if e == null) {
+        b();
+      } finally {
+        c();
+      }
+    }
+
+  writeLineToLog('test 1');
+  expect = 'a,c,';
+  actual = '';
+  try
+  {
+    f(createPrint(""""'a'""""), createPrint(""""'b'""""), createPrint(""""'c'""""));
+  }
+  catch(ex)
+  {
+    actual += 'caught ' + ex;
+  }
+  reportCompare(expect, actual, summary + ': 1');
+
+  writeLineToLog('test 2');
+  expect = 'c,caught a';
+  actual = '';
+  try
+  {
+    f(createThrow(""""'a'""""), createPrint(""""'b'""""), createPrint(""""'c'""""));
+  }
+  catch(ex)
+  {
+    actual += 'caught ' + ex;
+  }
+  reportCompare(expect, actual, summary + ': 2');
+
+  writeLineToLog('test 3');
+  expect = 'b,c,';
+  actual = '';
+  try
+  {
+    f(createThrow(""""null""""), createPrint(""""'b'""""), createPrint(""""'c'""""));
+  }
+  catch(ex)
+  {
+    actual += 'caught ' + ex;
+  }
+  reportCompare(expect, actual, summary + ': 3');
+
+  writeLineToLog('test 4');
+  expect = 'a,c,';
+  actual = '';
+  try
+  {
+    f(createPrint(""""'a'""""), createThrow(""""'b'""""), createPrint(""""'c'""""));
+  }
+  catch(ex)
+  {
+    actual += 'caught ' + ex;
+  }
+  reportCompare(expect, actual, summary + ': 4');
+
+  writeLineToLog('test 5');
+  expect = 'c,caught b';
+  actual = '';
+  try
+  {
+    f(createThrow(""""null""""), createThrow(""""'b'""""), createPrint(""""'c'""""));
+  }
+  catch(ex)
+  {
+    actual += 'caught ' + ex;
+  }
+  reportCompare(expect, actual, summary + ': 5');
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_5/Regress/regress-350312-03.js b/js/tests/js1_5/Regress/regress-350312-03.js
new file mode 100755
index 0000000..646a00c
--- /dev/null
+++ b/js/tests/js1_5/Regress/regress-350312-03.js
@@ -0,0 +1,147 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Brendan Eich
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 350312;
+var summary = 'Accessing wrong stack slot with nested catch/finally';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+
+  var pfx  = """"(function (x) {try {if (x > 41) throw x}"""",
+    cg1a = """" catch (e if e === 42) {var v = 'catch guard 1 ' + e; actual += v + ',';writeLineToLog(v);}""""
+    cg1b = """" catch (e if e === 42) {var v = 'catch guard 1 + throw ' + e; actual += v + ',';writeLineToLog(v); throw e;}""""
+    cg2  = """" catch (e if e === 43) {var v = 'catch guard 2 ' + e; actual += v + ',';writeLineToLog(v)}""""
+    cat  = """" catch (e) {var v = 'catch all ' + e; writeLineToLog(v); if (e == 44) throw e}""""
+    fin  = """" finally{var v = 'fin'; actual += v + ',';writeLineToLog(v)}"""",
+    end  = """"})"""";
+
+  var exphash  = {
+    pfx: """"(function (y) { var result = ''; y = y + ',';"""",
+    cg1a: """" result += (y === '42,') ? ('catch guard 1 ' + y):'';"""",
+    cg1b: """" result += (y === '42,') ? ('catch guard 1 + throw ' + y):'';"""",
+    cg2:  """" result += (y === '43,') ? ('catch guard 2 ' + y):'';"""",
+    cat:  """" result += (y > 41) ? ('catch all ' + y):'';"""",
+    fin:  """" result += 'fin,';"""",
+    end:  """"return result;})""""
+  };
+
+  var src = [
+    pfx + fin + end,
+    pfx + cat + end,
+    pfx + cat + fin + end,
+    pfx + cg1a + end,
+    pfx + cg1a + fin + end,
+    pfx + cg1a + cat + end,
+    pfx + cg1a + cat + fin + end,
+    pfx + cg1a + cg2 + end,
+    pfx + cg1a + cg2 + fin + end,
+    pfx + cg1a + cg2 + cat + end,
+    pfx + cg1a + cg2 + cat + fin + end,
+    pfx + cg1b + end,
+    pfx + cg1b + fin + end,
+    pfx + cg1b + cat + end,
+    pfx + cg1b + cat + fin + end,
+    pfx + cg1b + cg2 + end,
+    pfx + cg1b + cg2 + fin + end,
+    pfx + cg1b + cg2 + cat + end,
+    pfx + cg1b + cg2 + cat + fin + end,
+    ];
+
+  var expsrc = [
+    exphash.pfx + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cat + exphash.end,
+    exphash.pfx + exphash.cat + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cg1a + exphash.end,
+    exphash.pfx + exphash.cg1a + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cg1a + exphash.cat + exphash.end,
+    exphash.pfx + exphash.cg1a + exphash.cat + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cg1a + exphash.cg2 + exphash.end,
+    exphash.pfx + exphash.cg1a + exphash.cg2 + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cg1a + exphash.cg2 + exphash.cat + exphash.end,
+    exphash.pfx + exphash.cg1a + exphash.cg2 + exphash.cat + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cg1b + exphash.end,
+    exphash.pfx + exphash.cg1b + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cg1b + exphash.cat + exphash.end,
+    exphash.pfx + exphash.cg1b + exphash.cat + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cg1b + exphash.cg2 + exphash.end,
+    exphash.pfx + exphash.cg1b + exphash.cg2 + exphash.fin + exphash.end,
+    exphash.pfx + exphash.cg1b + exphash.cg2 + exphash.cat + exphash.end,
+    exphash.pfx + exphash.cg1b + exphash.cg2 + exphash.cat + exphash.fin + exphash.end,
+    ];
+
+  for (var i in src) {
+    writeLineToLog(""""\n=== """" + i + """": """" + src[i]);
+    var f = eval(src[i]);
+    var exp = eval(expsrc[i]);
+    // dis(f);
+    writeLineToLog('decompiling: ' + f);
+    //writeLineToLog('decompiling exp: ' + exp);
+
+    actual = '';
+    try { expect = exp(41); f(41) } catch (e) { writeLineToLog('tried f(41), caught ' + e) }
+    reportCompare(expect, actual, summary);
+
+    actual = '';
+    try { expect = exp(42); f(42) } catch (e) { writeLineToLog('tried f(42), caught ' + e) }
+    reportCompare(expect, actual, summary);
+
+    actual = '';
+    try { expect = exp(43); f(43) } catch (e) { writeLineToLog('tried f(43), caught ' + e) }
+    reportCompare(expect, actual, summary);
+
+    actual = '';
+    try { expect = exp(44); f(44) } catch (e) { writeLineToLog('tried f(44), caught ' + e) }
+    reportCompare(expect, actual, summary);
+
+    actual = '';
+    try { expect = exp(45); f(45) } catch (e) { writeLineToLog('tried f(44), caught ' + e) }
+    reportCompare(expect, actual, summary);
+
+  }
+
+  exitFunc ('test');
+}
diff --git a/js/tests/js1_7/geniter/regress-350312.js b/js/tests/js1_7/geniter/regress-350312.js
new file mode 100755
index 0000000..e202d58
--- /dev/null
+++ b/js/tests/js1_7/geniter/regress-350312.js
@@ -0,0 +1,111 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 350312;
+var summary = 'Accessing wrong stack slot with nested catch/finally';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+
+  var iter;
+  function gen()
+    { 
+      try {
+        yield iter;
+      } catch (e if e == null) {
+        actual += 'CATCH,';
+        writeLineToLog(""""CATCH"""");
+      } finally {
+        actual += 'FINALLY';
+        writeLineToLog(""""FINALLY"""");
+      }
+    }
+
+  expect = 'FINALLY';
+  actual = '';
+  (iter = gen()).next().close();
+  reportCompare(expect, actual, summary);
+
+  expect = 'FINALLY';
+  actual = '';
+  try
+  {
+    (iter = gen()).next().throw(1);
+  }
+  catch(ex)
+  {
+  }
+  reportCompare(expect, actual, summary);
+
+  expect = 'CATCH,FINALLY';
+  actual = '';
+  try
+  {
+    (iter = gen()).next().throw(null);
+  }
+  catch(ex)
+  {
+  }
+  reportCompare(expect, actual, summary);
+
+  expect = 'FINALLY';
+  actual = '';
+  var expectexcp = '[object StopIteration]';
+  var actualexcp = '';
+  try
+  {
+    (iter = gen()).next().next();      
+  }
+  catch(ex)
+  {
+    actualexcp = ex + '';
+  }
+  reportCompare(expect, actual, summary);
+  reportCompare(expectexcp, actualexcp, summary);
+
+  exitFunc ('test');
+}"""
a14d002577327e999a17047b4b3e58d4c02a2ef5,109481,348532,bclary%bclary.com,"JavaScript Test - regression test for bug 348532, by Igor Bukanov
",1160477488,"""diff --git a/js/tests/js1_5/GC/regress-348532.js b/js/tests/js1_5/GC/regress-348532.js
new file mode 100755
index 0000000..b9298e3
--- /dev/null
+++ b/js/tests/js1_5/GC/regress-348532.js
@@ -0,0 +1,81 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 348532;
+var summary = 'Do not overflow int when constructing Error.stack';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+
+  expectExitCode(0);
+  expectExitCode(3);
+
+  actual = 0;
+  
+  // construct string of 1<<23 characters
+  var s = Array((1<<23)+1).join('x');
+
+  var recursionDepth = 0;
+  function err() {
+    if (++recursionDepth == 128)
+      return new Error();
+    return err.apply(this, arguments);
+  }
+
+  // The full stack trace in error would include 128*2 copies of s exceeding
+  //  2^23 * 256 or 2^31 in length
+  var error = err(s,s);
+
+  writeLineToLog(error.stack.length);
+
+  expect = true;
+  actual = (error.stack.length > 0);
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
83c7c0ca8275189f917dedacded3815218761242,109482,345967,bclary%bclary.com,"JavaScript Test - regression test for bug 345967, by Igor Bukanov
",1160477300,"""diff --git a/js/tests/js1_5/GC/regress-345967.js b/js/tests/js1_5/GC/regress-345967.js
new file mode 100755
index 0000000..cfdc502
--- /dev/null
+++ b/js/tests/js1_5/GC/regress-345967.js
@@ -0,0 +1,98 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 345967;
+var summary = 'Yet another unrooted atom in jsarray.c';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+
+  expectExitCode(0);
+  expectExitCode(3);
+
+  writeLineToLog('This test will probably run out of memory');
+  writeLineToLog('This test really should only fail on 64 bit machines');
+  
+  var JSVAL_INT_MAX = (1 << 30) - 1;
+
+  var a = new Array(JSVAL_INT_MAX + 2);
+  a[JSVAL_INT_MAX] = 0;
+  a[JSVAL_INT_MAX + 1] = 1;
+
+  a.__defineGetter__(JSVAL_INT_MAX, function() { return 0; });
+
+  a.__defineSetter__(JSVAL_INT_MAX, function(value) {
+    delete a[JSVAL_INT_MAX + 1];
+    var tmp = [];
+    tmp[JSVAL_INT_MAX + 2] = 2;
+
+    if (typeof gc == 'function')
+      gc();
+    for (var i = 0; i != 50000; ++i) {
+      var tmp = 1 / 3;
+      tmp /= 10;
+    }
+    for (var i = 0; i != 1000; ++i) {
+      // Make string with 11 characters that would take
+      // (11 + 1) * 2 bytes or sizeof(JSAtom) so eventually
+      // malloc will ovewrite just freed atoms. 
+      var tmp2 = Array(12).join(' ');
+    }
+  });
+
+
+  a.shift();
+
+  expect = 0;
+  actual = a[JSVAL_INT_MAX];
+  if (expect !== actual)
+    writeLineToLog(""""BAD"""");
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
c7d0dffaac0454e3c70ecfe9c44289d801390f8c,109487,346090,bclary%bclary.com,"JavaScript Test - regression test for bug 346090, by Priit Laes, Brian Crowder
",1160470835,"""diff --git a/js/tests/ecma_3/RegExp/regress-346090.js b/js/tests/ecma_3/RegExp/regress-346090.js
new file mode 100755
index 0000000..880ee83
--- /dev/null
+++ b/js/tests/ecma_3/RegExp/regress-346090.js
@@ -0,0 +1,61 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Priit Laes
+ *                 Brian Crowder
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 346090;
+var summary = 'Do not crash with this regexp';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  var r = /%((h[^l]+)|(l[^h]+)){0,2}?a/g;
+  r.exec('%lld %d');
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
39538c94cd628ea7d1b843831626997e14dd8280,109540,354145,igor.bukanov%gmail.com,"Consistently using array cursors for internal enumerations to adhere to E4X fully. Patch comes mostly from Brendan with my extra cleanups. bug=354145 r=brendan
",1160347734,"""diff --git a/js/src/jsxml.c b/js/src/jsxml.c
index 5ee5d5a..9b0dcac 100644
--- a/js/src/jsxml.c
+++ b/js/src/jsxml.c
@@ -998,6 +998,7 @@ XMLArrayCursorInit(JSXMLArrayCursor *cursor, JSXMLArray *array)
         next->prevp = &cursor->next;
     cursor->prevp = &array->cursors;
     array->cursors = cursor;
+    cursor->root = NULL;
 }
 
 static void
@@ -1014,6 +1015,37 @@ XMLArrayCursorFinish(JSXMLArrayCursor *cursor)
     cursor->array = NULL;
 }
 
+static void *
+XMLArrayCursorNext(JSXMLArrayCursor *cursor)
+{
+    JSXMLArray *array;
+
+    array = cursor->array;
+    if (!array || cursor->index >= array->length)
+        return NULL;
+    return cursor->root = array->vector[cursor->index++];
+}
+
+static void *
+XMLArrayCursorItem(JSXMLArrayCursor *cursor)
+{
+    JSXMLArray *array;
+
+    array = cursor->array;
+    if (!array || cursor->index >= array->length)
+        return NULL;
+    return cursor->root = array->vector[cursor->index];
+}
+
+static void
+XMLArrayCursorMark(JSContext *cx, JSXMLArrayCursor *cursor)
+{
+    while (cursor) {
+        GC_MARK(cx, cursor->root, """"cursor->root"""");
+        cursor = cursor->next;
+    }
+}
+
 /* NB: called with null cx from the GC, via xml_mark => XMLArrayTrim. */
 static JSBool
 XMLArraySetCapacity(JSContext *cx, JSXMLArray *array, uint32 capacity)
@@ -1221,13 +1253,14 @@ XMLArrayTruncate(JSContext *cx, JSXMLArray *array, uint32 length)
 #define XMLARRAY_FIND_MEMBER(a,e,f) XMLArrayFindMember(a, (void *)(e), f)
 #define XMLARRAY_HAS_MEMBER(a,e,f)  (XMLArrayFindMember(a, (void *)(e), f) != \
                                      XML_NOT_FOUND)
-#define XMLARRAY_MEMBER(a,i,t)      ((t *) (a)->vector[i])
-#define XMLARRAY_SET_MEMBER(a,i,e)                                            \
-    JS_BEGIN_MACRO                                                            \
-      if ((a)->length <= (i))                                                 \
-          (a)->length = (i) + 1;                                              \
-      ((a)->vector[i] = (void *)(e));                                         \
-    JS_END_MACRO
+#define XMLARRAY_MEMBER(a,i,t)      (((i) < (a)->length)                      \
+                                     ? (t *) (a)->vector[i]                   \
+                                     : NULL)
+#define XMLARRAY_SET_MEMBER(a,i,e)  JS_BEGIN_MACRO                            \
+                                        if ((a)->length <= (i))               \
+                                            (a)->length = (i) + 1;            \
+                                        ((a)->vector[i] = (void *)(e));       \
+                                    JS_END_MACRO
 #define XMLARRAY_ADD_MEMBER(x,a,i,e)XMLArrayAddMember(x, a, i, (void *)(e))
 #define XMLARRAY_INSERT(x,a,i,n)    XMLArrayInsert(x, a, i, n)
 #define XMLARRAY_APPEND(x,a,e)      XMLARRAY_ADD_MEMBER(x, a, (a)->length, (e))
@@ -1388,7 +1421,8 @@ ParseNodeToQName(JSContext *cx, JSParseNode *pn, JSXMLArray *inScopeNSes,
             uri = NULL;
             n = inScopeNSes->length;
             while (n != 0) {
-                ns = XMLARRAY_MEMBER(inScopeNSes, --n, JSXMLNamespace);
+                --n;
+                ns = XMLARRAY_MEMBER(inScopeNSes, n, JSXMLNamespace);
                 if (ns->prefix && js_EqualStrings(ns->prefix, prefix)) {
                     uri = ns->uri;
                     break;
@@ -1422,7 +1456,8 @@ ParseNodeToQName(JSContext *cx, JSParseNode *pn, JSXMLArray *inScopeNSes,
              */
             n = inScopeNSes->length;
             while (n != 0) {
-                ns = XMLARRAY_MEMBER(inScopeNSes, --n, JSXMLNamespace);
+                --n;
+                ns = XMLARRAY_MEMBER(inScopeNSes, n, JSXMLNamespace);
                 if (!ns->prefix || IS_EMPTY(ns->prefix)) {
                     uri = ns->uri;
                     break;
@@ -2012,6 +2047,8 @@ OrphanXMLChild(JSContext *cx, JSXML *xml, uint32 i)
 
     ns = XMLARRAY_MEMBER(&xml->xml_namespaces, 0, JSXMLNamespace);
     xml = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
+    if (!ns || !xml)
+        return xml;
     if (xml->xml_class == JSXML_CLASS_ELEMENT) {
         if (!XMLARRAY_APPEND(cx, &xml->xml_namespaces, ns))
             return NULL;
@@ -2041,8 +2078,10 @@ ToXML(JSContext *cx, jsval v)
                 if (xml->xml_kids.length != 1)
                     goto bad;
                 xml = XMLARRAY_MEMBER(&xml->xml_kids, 0, JSXML);
-                JS_ASSERT(xml->xml_class != JSXML_CLASS_LIST);
-                return js_GetXMLObject(cx, xml);
+                if (xml) {
+                    JS_ASSERT(xml->xml_class != JSXML_CLASS_LIST);
+                    return js_GetXMLObject(cx, xml);
+                }
             }
             return obj;
         }
@@ -2437,6 +2476,8 @@ GetNamespace(JSContext *cx, JSXMLQName *qn, const JSXMLArray *inScopeNSes)
     if (inScopeNSes) {
         for (i = 0, n = inScopeNSes->length; i < n; i++) {
             ns = XMLARRAY_MEMBER(inScopeNSes, i, JSXMLNamespace);
+            if (!ns)
+                continue;
 
             /*
              * Erratum, very tricky, and not specified in ECMA-357 13.3.5.4:
@@ -2565,7 +2606,7 @@ GeneratePrefix(JSContext *cx, JSString *uri, JSXMLArray *decls)
         done = JS_TRUE;
         for (i = 0, n = decls->length; i < n; i++) {
             ns = XMLARRAY_MEMBER(decls, i, JSXMLNamespace);
-            if (ns->prefix &&
+            if (ns && ns->prefix &&
                 JSSTRING_LENGTH(ns->prefix) == newlength &&
                 !memcmp(JSSTRING_CHARS(ns->prefix), bp,
                         newlength * sizeof(jschar))) {
@@ -2623,6 +2664,7 @@ XMLToXMLString(JSContext *cx, JSXML *xml, const JSXMLArray *ancestorNSes,
     JSBool pretty, indentKids;
     JSStringBuffer sb;
     JSString *str, *prefix, *kidstr;
+    JSXMLArrayCursor cursor;
     uint32 i, n;
     JSXMLArray empty, decls, ancdecls;
     JSXMLNamespace *ns, *ns2;
@@ -2663,17 +2705,22 @@ XMLToXMLString(JSContext *cx, JSXML *xml, const JSXMLArray *ancestorNSes,
 
       case JSXML_CLASS_LIST:
         /* ECMA-357 10.2.2. */
-        for (i = 0, n = xml->xml_kids.length; i < n; i++) {
+        XMLArrayCursorInit(&cursor, &xml->xml_kids);
+        i = 0;
+        while ((kid = (JSXML *) XMLArrayCursorNext(&cursor)) != NULL) {
             if (pretty && i != 0)
                 js_AppendChar(&sb, '\n');
 
-            kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
             kidstr = XMLToXMLString(cx, kid, ancestorNSes, indentLevel);
             if (!kidstr)
-                goto list_out;
+                break;
 
             js_AppendJSString(&sb, kidstr);
+            ++i;
         }
+        XMLArrayCursorFinish(&cursor);
+        if (kid)
+            goto list_out;
 
         if (!sb.base) {
             if (!STRING_BUFFER_OK(&sb)) {
@@ -2705,19 +2752,20 @@ XMLToXMLString(JSContext *cx, JSXML *xml, const JSXMLArray *ancestorNSes,
     ancdecls.capacity = 0;
 
     /* Clone in-scope namespaces not in ancestorNSes into decls. */
-    for (i = 0, n = xml->xml_namespaces.length; i < n; i++) {
-        ns = XMLARRAY_MEMBER(&xml->xml_namespaces, i, JSXMLNamespace);
+    XMLArrayCursorInit(&cursor, &xml->xml_namespaces);
+    while ((ns = (JSXMLNamespace *) XMLArrayCursorNext(&cursor)) != NULL) {
         if (!ns->declared)
             continue;
         if (!XMLARRAY_HAS_MEMBER(ancestorNSes, ns, namespace_identity)) {
             /* NOTE: may want to exclude unused namespaces here. */
             ns2 = js_NewXMLNamespace(cx, ns->prefix, ns->uri, JS_TRUE);
-            if (!ns2)
-                goto out;
-            if (!XMLARRAY_APPEND(cx, &decls, ns2))
-                goto out;
+            if (!ns2 || !XMLARRAY_APPEND(cx, &decls, ns2))
+                break;
         }
     }
+    XMLArrayCursorFinish(&cursor);
+    if (ns)
+        goto out;
 
     /*
      * Union ancestorNSes and decls into ancdecls.  Note that ancdecls does
@@ -2728,12 +2776,16 @@ XMLToXMLString(JSContext *cx, JSXML *xml, const JSXMLArray *ancestorNSes,
         goto out;
     for (i = 0, n = ancestorNSes->length; i < n; i++) {
         ns2 = XMLARRAY_MEMBER(ancestorNSes, i, JSXMLNamespace);
+        if (!ns2)
+            continue;
         JS_ASSERT(!XMLARRAY_HAS_MEMBER(&decls, ns2, namespace_identity));
         if (!XMLARRAY_APPEND(cx, &ancdecls, ns2))
             goto out;
     }
     for (i = 0, n = decls.length; i < n; i++) {
         ns2 = XMLARRAY_MEMBER(&decls, i, JSXMLNamespace);
+        if (!ns2)
+            continue;
         JS_ASSERT(!XMLARRAY_HAS_MEMBER(&ancdecls, ns2, namespace_identity));
         if (!XMLARRAY_APPEND(cx, &ancdecls, ns2))
             goto out;
@@ -2819,23 +2871,23 @@ XMLToXMLString(JSContext *cx, JSXML *xml, const JSXMLArray *ancestorNSes,
      */
 
     /* Step 17(b): append attributes. */
-    for (i = 0, n = xml->xml_attrs.length; i < n; i++) {
-        attr = XMLARRAY_MEMBER(&xml->xml_attrs, i, JSXML);
+    XMLArrayCursorInit(&cursor, &xml->xml_attrs);
+    while ((attr = (JSXML *) XMLArrayCursorNext(&cursor)) != NULL) {
         js_AppendChar(&sb, ' ');
         ns2 = GetNamespace(cx, attr->name, &ancdecls);
         if (!ns2)
-            goto out;
+            break;
 
         /* 17(b)(ii): NULL means *undefined* here. */
         if (!ns2->prefix) {
             prefix = GeneratePrefix(cx, ns2->uri, &ancdecls);
             if (!prefix)
-                goto out;
+                break;
 
             /* Again, we avoid copying ns2 until we know it's prefix-less. */
             ns2 = js_NewXMLNamespace(cx, prefix, ns2->uri, JS_TRUE);
             if (!ns2)
-                goto out;
+                break;
 
             /*
              * In the spec, ancdecls has no name, but is always written out as
@@ -2846,7 +2898,7 @@ XMLToXMLString(JSContext *cx, JSXML *xml, const JSXMLArray *ancestorNSes,
              */
             if (!XMLARRAY_APPEND(cx, &ancdecls, ns2) ||
                 !XMLARRAY_APPEND(cx, &decls, ns2)) {
-                goto out;
+                break;
             }
         }
 
@@ -2862,10 +2914,13 @@ XMLToXMLString(JSContext *cx, JSXML *xml, const JSXMLArray *ancestorNSes,
         /* 17(d-g). */
         AppendAttributeValue(cx, &sb, attr->xml_value);
     }
+    XMLArrayCursorFinish(&cursor);
+    if (attr)
+        goto out;
 
     /* Step 17(c): append XML namespace declarations. */
-    for (i = 0, n = decls.length; i < n; i++) {
-        ns2 = XMLARRAY_MEMBER(&decls, i, JSXMLNamespace);
+    XMLArrayCursorInit(&cursor, &decls);
+    while ((ns2 = (JSXMLNamespace *) XMLArrayCursorNext(&cursor)) != NULL) {
         JS_ASSERT(ns2->declared);
 
         js_AppendCString(&sb, """" xmlns"""");
@@ -2874,7 +2929,7 @@ XMLToXMLString(JSContext *cx, JSXML *xml, const JSXMLArray *ancestorNSes,
         if (!ns2->prefix) {
             prefix = GeneratePrefix(cx, ns2->uri, &ancdecls);
             if (!prefix)
-                goto out;
+                break;
             ns2->prefix = prefix;
         }
 
@@ -2887,6 +2942,9 @@ XMLToXMLString(JSContext *cx, JSXML *xml, const JSXMLArray *ancestorNSes,
         /* 17(d-g). */
         AppendAttributeValue(cx, &sb, ns2->uri);
     }
+    XMLArrayCursorFinish(&cursor);
+    if (ns2)
+        goto out;
 
     /* Step 18: handle point tags. */
     n = xml->xml_kids.length;
@@ -2897,8 +2955,8 @@ XMLToXMLString(JSContext *cx, JSXML *xml, const JSXMLArray *ancestorNSes,
         js_AppendChar(&sb, '>');
         indentKids = n > 1 ||
                      (n == 1 &&
-                      XMLARRAY_MEMBER(&xml->xml_kids, 0, JSXML)->xml_class
-                      != JSXML_CLASS_TEXT);
+                      (kid = XMLARRAY_MEMBER(&xml->xml_kids, 0, JSXML)) &&
+                      kid->xml_class != JSXML_CLASS_TEXT);
 
         if (pretty && indentKids) {
             if (!GetUint32XMLSetting(cx, js_prettyIndent_str, &i))
@@ -2908,17 +2966,20 @@ XMLToXMLString(JSContext *cx, JSXML *xml, const JSXMLArray *ancestorNSes,
             nextIndentLevel = 0;
         }
 
-        for (i = 0; i < n; i++) {
+        XMLArrayCursorInit(&cursor, &xml->xml_kids);
+        while ((kid = (JSXML *) XMLArrayCursorNext(&cursor)) != NULL) {
             if (pretty && indentKids)
                 js_AppendChar(&sb, '\n');
 
-            kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
             kidstr = XMLToXMLString(cx, kid, &ancdecls, nextIndentLevel);
             if (!kidstr)
-                goto out;
+                break;
 
             js_AppendJSString(&sb, kidstr);
         }
+        XMLArrayCursorFinish(&cursor);
+        if (kid)
+            goto out;
 
         if (pretty && indentKids) {
             js_AppendChar(&sb, '\n');
@@ -3146,7 +3207,7 @@ AddInScopeNamespace(JSContext *cx, JSXML *xml, JSXMLNamespace *ns)
         match = NULL;
         for (i = 0, n = xml->xml_namespaces.length; i < n; i++) {
             ns2 = XMLARRAY_MEMBER(&xml->xml_namespaces, i, JSXMLNamespace);
-            if (js_EqualStrings(ns2->uri, ns->uri)) {
+            if (ns2 && js_EqualStrings(ns2->uri, ns->uri)) {
                 match = ns2;
                 break;
             }
@@ -3162,7 +3223,8 @@ AddInScopeNamespace(JSContext *cx, JSXML *xml, JSXMLNamespace *ns)
 #endif
         for (i = 0, n = xml->xml_namespaces.length; i < n; i++) {
             ns2 = XMLARRAY_MEMBER(&xml->xml_namespaces, i, JSXMLNamespace);
-            if (ns2->prefix && js_EqualStrings(ns2->prefix, ns->prefix)) {
+            if (ns2 && ns2->prefix &&
+                js_EqualStrings(ns2->prefix, ns->prefix)) {
                 match = ns2;
                 m = i;
                 break;
@@ -3203,7 +3265,8 @@ Append(JSContext *cx, JSXML *list, JSXML *xml)
             return JS_FALSE;
         for (j = 0; j < n; j++) {
             kid = XMLARRAY_MEMBER(&xml->xml_kids, j, JSXML);
-            XMLARRAY_SET_MEMBER(&list->xml_kids, i + j, kid);
+            if (kid)
+                XMLARRAY_SET_MEMBER(&list->xml_kids, i + j, kid);
         }
         return JS_TRUE;
     }
@@ -3257,7 +3320,9 @@ static JSBool
 DeepCopySetInLRS(JSContext *cx, JSXMLArray *from, JSXMLArray *to, JSXML *parent,
                  uintN flags)
 {
-    uint32 i, j, n;
+    uint32 j, n;
+    JSXMLArrayCursor cursor;
+    JSBool ok;
     JSXML *kid, *kid2;
     JSString *str;
 
@@ -3267,8 +3332,10 @@ DeepCopySetInLRS(JSContext *cx, JSXMLArray *from, JSXMLArray *to, JSXML *parent,
     if (!XMLArraySetCapacity(cx, to, n))
         return JS_FALSE;
 
-    for (i = j = 0; i < n; i++) {
-        kid = XMLARRAY_MEMBER(from, i, JSXML);
+    XMLArrayCursorInit(&cursor, from);
+    j = 0;
+    ok = JS_TRUE;
+    while ((kid = (JSXML *) XMLArrayCursorNext(&cursor)) != NULL) {
         if ((flags & XSF_IGNORE_COMMENTS) &&
             kid->xml_class == JSXML_CLASS_COMMENT) {
             continue;
@@ -3284,7 +3351,8 @@ DeepCopySetInLRS(JSContext *cx, JSXMLArray *from, JSXMLArray *to, JSXML *parent,
         kid2 = DeepCopyInLRS(cx, kid, flags);
         if (!kid2) {
             to->length = j;
-            return JS_FALSE;
+            ok = JS_FALSE;
+            break;
         }
 
         if ((flags & XSF_IGNORE_WHITESPACE) &&
@@ -3292,7 +3360,8 @@ DeepCopySetInLRS(JSContext *cx, JSXMLArray *from, JSXMLArray *to, JSXML *parent,
             str = ChompXMLWhitespace(cx, kid2->xml_value);
             if (!str) {
                 to->length = j;
-                return JS_FALSE;
+                ok = JS_FALSE;
+                break;
             }
             kid2->xml_value = str;
         }
@@ -3302,6 +3371,9 @@ DeepCopySetInLRS(JSContext *cx, JSXMLArray *from, JSXMLArray *to, JSXML *parent,
         if (parent->xml_class != JSXML_CLASS_LIST)
             kid2->parent = parent;
     }
+    XMLArrayCursorFinish(&cursor);
+    if (!ok)
+        return JS_FALSE;
 
     if (j < n)
         XMLArrayTrim(to);
@@ -3352,6 +3424,8 @@ DeepCopyInLRS(JSContext *cx, JSXML *xml, uintN flags)
                 goto out;
             for (i = 0; i < n; i++) {
                 ns = XMLARRAY_MEMBER(&xml->xml_namespaces, i, JSXMLNamespace);
+                if (!ns)
+                    continue;
                 ns2 = js_NewXMLNamespace(cx, ns->prefix, ns->uri, ns->declared);
                 if (!ns2) {
                     copy->xml_namespaces.length = i;
@@ -3401,7 +3475,8 @@ DeleteByIndex(JSContext *cx, JSXML *xml, jsval id, jsval *vp)
 
     if (JSXML_HAS_KIDS(xml) && index < xml->xml_kids.length) {
         kid = XMLARRAY_MEMBER(&xml->xml_kids, index, JSXML);
-        kid->parent = NULL;
+        if (kid)
+            kid->parent = NULL;
         XMLArrayDelete(cx, &xml->xml_kids, index, JS_TRUE);
     }
 
@@ -3444,7 +3519,7 @@ DescendantsHelper(JSContext *cx, JSXML *xml, JSXMLQName *nameqn, JSXML *list)
         OBJ_GET_CLASS(cx, nameqn->object) == &js_AttributeNameClass) {
         for (i = 0, n = xml->xml_attrs.length; i < n; i++) {
             attr = XMLARRAY_MEMBER(&xml->xml_attrs, i, JSXML);
-            if (MatchAttrName(nameqn, attr)) {
+            if (attr && MatchAttrName(nameqn, attr)) {
                 if (!Append(cx, list, attr))
                     return JS_FALSE;
             }
@@ -3453,6 +3528,8 @@ DescendantsHelper(JSContext *cx, JSXML *xml, JSXMLQName *nameqn, JSXML *list)
 
     for (i = 0, n = JSXML_LENGTH(xml); i < n; i++) {
         kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
+        if (!kid)
+            continue;
         if (OBJ_GET_CLASS(cx, nameqn->object) != &js_AttributeNameClass &&
             MatchElemName(nameqn, kid)) {
             if (!Append(cx, list, kid))
@@ -3498,7 +3575,7 @@ Descendants(JSContext *cx, JSXML *xml, jsval id)
         ok = JS_TRUE;
         for (i = 0, n = xml->xml_kids.length; i < n; i++) {
             kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
-            if (kid->xml_class == JSXML_CLASS_ELEMENT) {
+            if (kid && kid->xml_class == JSXML_CLASS_ELEMENT) {
                 ok = DescendantsHelper(cx, kid, nameqn, list);
                 if (!ok)
                     break;
@@ -3527,11 +3604,13 @@ retry:
     if (xml->xml_class != vxml->xml_class) {
         if (xml->xml_class == JSXML_CLASS_LIST && xml->xml_kids.length == 1) {
             xml = XMLARRAY_MEMBER(&xml->xml_kids, 0, JSXML);
-            goto retry;
+            if (xml)
+                goto retry;
         }
         if (vxml->xml_class == JSXML_CLASS_LIST && vxml->xml_kids.length == 1) {
             vxml = XMLARRAY_MEMBER(&vxml->xml_kids, 0, JSXML);
-            goto retry;
+            if (vxml)
+                goto retry;
         }
         *bp = JS_FALSE;
         return JS_TRUE;
@@ -3573,12 +3652,16 @@ retry:
                 *bp = JS_FALSE;
             for (i = 0; i < n; i++) {
                 attr = XMLARRAY_MEMBER(&xml->xml_attrs, i, JSXML);
+                if (!attr)
+                    continue;
                 j = XMLARRAY_FIND_MEMBER(&vxml->xml_attrs, attr, attr_identity);
                 if (j == XML_NOT_FOUND) {
                     *bp = JS_FALSE;
                     break;
                 }
                 vattr = XMLARRAY_MEMBER(&vxml->xml_attrs, j, JSXML);
+                if (!vattr)
+                    continue;
                 *bp = js_EqualStrings(attr->xml_value, vattr->xml_value);
                 if (!*bp)
                     break;
@@ -3601,6 +3684,8 @@ Equals(JSContext *cx, JSXML *xml, jsval v, JSBool *bp)
         if (xml->xml_class == JSXML_CLASS_LIST) {
             if (xml->xml_kids.length == 1) {
                 vxml = XMLARRAY_MEMBER(&xml->xml_kids, 0, JSXML);
+                if (!vxml)
+                    return JS_TRUE;
                 vobj = js_GetXMLObject(cx, vxml);
                 if (!vobj)
                     return JS_FALSE;
@@ -3643,40 +3728,55 @@ CheckCycle(JSContext *cx, JSXML *xml, JSXML *kid)
 
 /* ECMA-357 9.1.1.11 XML [[Insert]]. */
 static JSBool
-Insert(JSContext *cx, JSXML *xml, jsval id, jsval v)
+Insert(JSContext *cx, JSXML *xml, uint32 i, jsval v)
 {
-    uint32 i, j, n;
+    uint32 j, n;
     JSXML *vxml, *kid;
     JSObject *vobj;
+    JSString *str;
 
     if (!JSXML_HAS_KIDS(xml))
         return JS_TRUE;
 
-    if (!js_IdIsIndex(id, &i)) {
-        ReportBadXMLName(cx, id);
-        return JS_FALSE;
-    }
-
     n = 1;
     vxml = NULL;
     if (!JSVAL_IS_PRIMITIVE(v)) {
         vobj = JSVAL_TO_OBJECT(v);
         if (OBJECT_IS_XML(cx, vobj)) {
             vxml = (JSXML *) JS_GetPrivate(cx, vobj);
-            if (vxml->xml_class == JSXML_CLASS_LIST)
+            if (vxml->xml_class == JSXML_CLASS_LIST) {
                 n = vxml->xml_kids.length;
+                if (n == 0)
+                    return JS_TRUE;
+            } else if (vxml->xml_class == JSXML_CLASS_ELEMENT) {
+                /* OPTION: enforce that descendants have superset namespaces. */
+                if (!CheckCycle(cx, xml, vxml))
+                    return JS_FALSE;
+            }
         }
     }
+    if (!vxml) {
+        str = js_ValueToString(cx, v);
+        if (!str)
+            return JS_FALSE;
 
-    if (n == 0)
-        return JS_TRUE;
+        vxml = js_NewXML(cx, JSXML_CLASS_TEXT);
+        if (!vxml)
+            return JS_FALSE;
+        vxml->xml_value = str;
+    }
+
+    if (i > xml->xml_kids.length)
+        i = xml->xml_kids.length;
 
     if (!XMLArrayInsert(cx, &xml->xml_kids, i, n))
         return JS_FALSE;
 
-    if (vxml && vxml->xml_class == JSXML_CLASS_LIST) {
+    if (vxml->xml_class == JSXML_CLASS_LIST) {
         for (j = 0; j < n; j++) {
             kid = XMLARRAY_MEMBER(&vxml->xml_kids, j, JSXML);
+            if (!kid)
+                continue;
             if (!CheckCycle(cx, xml, kid))
                 return JS_FALSE;
             kid->parent = xml;
@@ -3685,24 +3785,8 @@ Insert(JSContext *cx, JSXML *xml, jsval id, jsval v)
             /* OPTION: enforce that descendants have superset namespaces. */
         }
     } else {
-        /*
-         * Tricky: ECMA-357 9.1.1.11 step 7 specifies:
-         *
-         *      For j = x.[[Length]]-1 downto i,
-         *              rename property ToString(j) of x to ToString(j + n)
-         *
-         * That loop, coded above, simply copies pointers up in xml->xml_kids.
-         * We don't need to change property """"names"""", nor do we need to null
-         * pointers in the vxml->xml_class == JSXML_CLASS_LIST case, above.
-         *
-         * But here, before calling Replace, we must help Replace discern that
-         * the """"properties"""" have been """"renamed"""" by nulling the n xml->xml_kids
-         * slots that have been evacuated to make way for vxml.
-         */
-        for (j = 0; j < n; j++)
-            xml->xml_kids.vector[i + j] = NULL;
-        if (!Replace(cx, xml, id, v))
-            return JS_FALSE;
+        vxml->parent = xml;
+        XMLARRAY_SET_MEMBER(&xml->xml_kids, i, vxml);
     }
     return JS_TRUE;
 }
@@ -3774,7 +3858,7 @@ Replace(JSContext *cx, JSXML *xml, jsval id, jsval v)
       case JSXML_CLASS_LIST:
         if (i < n && !DeleteByIndex(cx, xml, id, &junk))
             return JS_FALSE;
-        if (!Insert(cx, xml, id, v))
+        if (!Insert(cx, xml, i, v))
             return JS_FALSE;
         break;
 
@@ -3834,6 +3918,8 @@ DeleteProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
         /* ECMA-357 9.2.1.3. */
         if (isIndex && index < length) {
             kid = XMLARRAY_MEMBER(array, index, JSXML);
+            if (!kid)
+                goto out;
             parent = kid->parent;
             if (parent) {
                 JS_ASSERT(parent != xml);
@@ -3863,7 +3949,7 @@ DeleteProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
         } else {
             for (index = 0; index < length; index++) {
                 kid = XMLARRAY_MEMBER(array, index, JSXML);
-                if (kid->xml_class == JSXML_CLASS_ELEMENT) {
+                if (kid && kid->xml_class == JSXML_CLASS_ELEMENT) {
                     kidobj = js_GetXMLObject(cx, kid);
                     if (!kidobj || !DeleteProperty(cx, kidobj, id, vp))
                         return JS_FALSE;
@@ -3898,7 +3984,7 @@ DeleteProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
             deleteCount = 0;
             for (index = 0; index < length; index++) {
                 kid = XMLARRAY_MEMBER(array, index, JSXML);
-                if (matcher(nameqn, kid)) {
+                if (kid && matcher(nameqn, kid)) {
                     kid->parent = NULL;
                     XMLArrayDelete(cx, array, index, JS_FALSE);
                     ++deleteCount;
@@ -3962,7 +4048,7 @@ SyncInScopeNamespaces(JSContext *cx, JSXML *xml)
     while ((xml = xml->parent) != NULL) {
         for (i = 0, n = xml->xml_namespaces.length; i < n; i++) {
             ns = XMLARRAY_MEMBER(&xml->xml_namespaces, i, JSXMLNamespace);
-            if (!XMLARRAY_HAS_MEMBER(nsarray, ns, namespace_identity)) {
+            if (ns && !XMLARRAY_HAS_MEMBER(nsarray, ns, namespace_identity)) {
                 if (!XMLARRAY_APPEND(cx, nsarray, ns))
                     return JS_FALSE;
             }
@@ -3976,11 +4062,12 @@ static JSBool
 GetProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
 {
     JSXML *xml, *list, *kid;
-    uint32 index, i, n;
+    uint32 index;
     JSObject *kidobj, *listobj, *nameobj;
     JSXMLQName *nameqn;
     jsid funid;
     JSBool ok;
+    JSXMLArrayCursor cursor;
     jsval kidval;
     JSXMLArray *array;
     JSXMLNameMatcher matcher;
@@ -4004,6 +4091,10 @@ retry:
              */
             if (index < xml->xml_kids.length) {
                 kid = XMLARRAY_MEMBER(&xml->xml_kids, index, JSXML);
+                if (!kid) {
+                    *vp = JSVAL_VOID;
+                    return JS_TRUE;
+                }
                 kidobj = js_GetXMLObject(cx, kid);
                 if (!kidobj)
                     return JS_FALSE;
@@ -4042,8 +4133,8 @@ retry:
             list = (JSXML *) JS_GetPrivate(cx, listobj);
             list->xml_target = xml;
 
-            for (i = 0, n = JSXML_LENGTH(xml); i < n; i++) {
-                kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
+            XMLArrayCursorInit(&cursor, &xml->xml_kids);
+            while ((kid = (JSXML *) XMLArrayCursorNext(&cursor)) != NULL) {
                 if (kid->xml_class == JSXML_CLASS_ELEMENT) {
                     kidobj = js_GetXMLObject(cx, kid);
                     if (!kidobj) {
@@ -4062,6 +4153,7 @@ retry:
                     }
                 }
             }
+            XMLArrayCursorFinish(&cursor);
         }
     } else {
         /* ECMA-357 9.1.1.1 starts here. */
@@ -4104,8 +4196,8 @@ retry:
                     array = &xml->xml_kids;
                     matcher = MatchElemName;
                 }
-                for (i = 0, n = array->length; i < n; i++) {
-                    kid = XMLARRAY_MEMBER(array, i, JSXML);
+                XMLArrayCursorInit(&cursor, array);
+                while ((kid = (JSXML *) XMLArrayCursorNext(&cursor)) != NULL) {
                     if (matcher(nameqn, kid)) {
                         if (array == &xml->xml_kids &&
                             kid->xml_class == JSXML_CLASS_ELEMENT) {
@@ -4118,6 +4210,7 @@ retry:
                             break;
                     }
                 }
+                XMLArrayCursorFinish(&cursor);
             }
         }
     }
@@ -4162,6 +4255,8 @@ KidToString(JSContext *cx, JSXML *xml, uint32 index)
     JSObject *kidobj;
 
     kid = XMLARRAY_MEMBER(&xml->xml_kids, index, JSXML);
+    if (!kid)
+        return cx->runtime->emptyString;
     kidobj = js_GetXMLObject(cx, kid);
     if (!kidobj)
         return NULL;
@@ -4173,6 +4268,9 @@ static JSBool
 PutProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
 {
     JSBool ok, primitiveAssign;
+    enum { OBJ_ROOT, ID_ROOT, VAL_ROOT };
+    jsval roots[3];
+    JSTempValueRooter tvr;
     JSXML *xml, *vxml, *rxml, *kid, *attr, *parent, *copy, *kid2, *match;
     JSObject *vobj, *nameobj, *attrobj, *parentobj, *kidobj, *copyobj;
     JSXMLQName *targetprop, *nameqn, *attrqn;
@@ -4202,6 +4300,10 @@ PutProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
     ok = js_EnterLocalRootScope(cx);
     if (!ok)
         return JS_FALSE;
+    roots[OBJ_ROOT] = OBJECT_TO_JSVAL(obj);
+    roots[ID_ROOT] = id;
+    roots[VAL_ROOT] = *vp;
+    JS_PUSH_TEMP_ROOT(cx, 3, roots, &tvr);
 
     if (xml->xml_class == JSXML_CLASS_LIST) {
         /* ECMA-357 9.2.1.2. */
@@ -4229,6 +4331,8 @@ PutProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
                         if (rxml->xml_kids.length != 1)
                             goto out;
                         rxml = XMLARRAY_MEMBER(&rxml->xml_kids, 0, JSXML);
+                        if (!rxml)
+                            goto out;
                         ok = js_GetXMLObject(cx, rxml) != NULL;
                         if (!ok)
                             goto out;
@@ -4318,8 +4422,7 @@ PutProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
                         kidobj = js_GetXMLObject(cx, kid);
                         if (!kidobj)
                             goto bad;
-                        ok = Insert(cx, rxml, INT_TO_JSVAL(j + 1),
-                                    OBJECT_TO_JSVAL(kidobj));
+                        ok = Insert(cx, rxml, j + 1, OBJECT_TO_JSVAL(kidobj));
                         if (!ok)
                             goto out;
                     }
@@ -4349,10 +4452,13 @@ PutProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
                 ok = JS_ConvertValue(cx, *vp, JSTYPE_STRING, vp);
                 if (!ok)
                     goto out;
+                roots[VAL_ROOT] = *vp;
             }
 
             /* 2(e). */
             kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
+            if (!kid)
+                goto out;
             parent = kid->parent;
             if (kid->xml_class == JSXML_CLASS_ATTRIBUTE) {
                 nameobj = js_GetAttributeNameObject(cx, kid->name);
@@ -4360,20 +4466,22 @@ PutProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
                     goto bad;
                 id = OBJECT_TO_JSVAL(nameobj);
 
-                /* 2(e)(i). */
-                parentobj = parent->object;
-                ok = PutProperty(cx, parentobj, id, vp);
-                if (!ok)
-                    goto out;
+                if (parent) {
+                    /* 2(e)(i). */
+                    parentobj = parent->object;
+                    ok = PutProperty(cx, parentobj, id, vp);
+                    if (!ok)
+                        goto out;
 
-                /* 2(e)(ii). */
-                ok = GetProperty(cx, parentobj, id, vp);
-                if (!ok)
-                    goto out;
-                attr = (JSXML *) JS_GetPrivate(cx, JSVAL_TO_OBJECT(*vp));
+                    /* 2(e)(ii). */
+                    ok = GetProperty(cx, parentobj, id, vp);
+                    if (!ok)
+                        goto out;
+                    attr = (JSXML *) JS_GetPrivate(cx, JSVAL_TO_OBJECT(*vp));
 
-                /* 2(e)(iii). */
-                xml->xml_kids.vector[i] = attr->xml_kids.vector[0];
+                    /* 2(e)(iii). */
+                    xml->xml_kids.vector[i] = attr->xml_kids.vector[0];
+                }
             }
 
             /* 2(f). */
@@ -4445,7 +4553,9 @@ PutProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
                         goto out;
 
                     vxml = XMLARRAY_MEMBER(&parent->xml_kids, q, JSXML);
-                    *vp = OBJECT_TO_JSVAL(vxml->object);
+                    if (!vxml)
+                        goto out;
+                    roots[VAL_ROOT] = *vp = OBJECT_TO_JSVAL(vxml->object);
                 }
 
                 /*
@@ -4463,7 +4573,7 @@ PutProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
                     vobj = ToXML(cx, *vp);
                     if (!vobj)
                         goto bad;
-                    *vp = OBJECT_TO_JSVAL(vobj);
+                    roots[VAL_ROOT] = *vp = OBJECT_TO_JSVAL(vobj);
                     vxml = (JSXML *) JS_GetPrivate(cx, vobj);
                 }
                 XMLARRAY_SET_MEMBER(&xml->xml_kids, i, vxml);
@@ -4500,6 +4610,8 @@ PutProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
             }
             JS_ASSERT(JSXML_LENGTH(xml) == 1);
             kid = XMLARRAY_MEMBER(&xml->xml_kids, 0, JSXML);
+            if (!kid)
+                goto out;
             kidobj = js_GetXMLObject(cx, kid);
             if (!kidobj)
                 goto bad;
@@ -4544,6 +4656,7 @@ PutProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
             vxml = rxml;
             *vp = OBJECT_TO_JSVAL(vxml->object);
         }
+        roots[VAL_ROOT] = *vp;
 
         /*
          * 6.
@@ -4581,18 +4694,21 @@ PutProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
                             goto bad;
                     }
 
-                    *vp = STRING_TO_JSVAL(left);
+                    roots[VAL_ROOT] = *vp = STRING_TO_JSVAL(left);
                 }
             } else {
                 ok = JS_ConvertValue(cx, *vp, JSTYPE_STRING, vp);
                 if (!ok)
                     goto out;
+                roots[VAL_ROOT] = *vp;
             }
 
             /* 7(d-e). */
             match = NULL;
             for (i = 0, n = xml->xml_attrs.length; i < n; i++) {
                 attr = XMLARRAY_MEMBER(&xml->xml_attrs, i, JSXML);
+                if (!attr)
+                    continue;
                 attrqn = attr->name;
                 if (js_EqualStrings(attrqn->localName, nameqn->localName) &&
                     (!nameqn->uri ||
@@ -4669,7 +4785,7 @@ PutProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
         while (k != 0) {
             --k;
             kid = XMLARRAY_MEMBER(&xml->xml_kids, k, JSXML);
-            if (MatchElemName(nameqn, kid)) {
+            if (kid && MatchElemName(nameqn, kid)) {
                 if (!JSVAL_IS_VOID(id)) {
                     ok = DeleteByIndex(cx, xml, id, &junk);
                     if (!ok)
@@ -4749,22 +4865,28 @@ PutProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
 
         /* 14. */
         if (primitiveAssign) {
+            JSXMLArrayCursor cursor;
+
             js_IdIsIndex(id, &index);
-            kid = XMLARRAY_MEMBER(&xml->xml_kids, index, JSXML);
+            XMLArrayCursorInit(&cursor, &xml->xml_kids);
+            cursor.index = index;
+            kid = (JSXML *) XMLArrayCursorItem(&cursor);
             if (JSXML_HAS_KIDS(kid)) {
                 XMLArrayFinish(cx, &kid->xml_kids);
                 ok = XMLArrayInit(cx, &kid->xml_kids, 1);
-                if (!ok)
-                    goto out;
             }
 
             /* 14(b-c). */
             /* XXXbe Erratum? redundant w.r.t. 7(b-c) else clause above */
-            ok = JS_ConvertValue(cx, *vp, JSTYPE_STRING, vp);
-            if (!ok)
-                goto out;
-            if (!IS_EMPTY(JSVAL_TO_STRING(*vp)))
-                ok = Replace(cx, kid, JSVAL_ZERO, *vp);
+            if (ok) {
+                ok = JS_ConvertValue(cx, *vp, JSTYPE_STRING, vp);
+                if (ok && !IS_EMPTY(JSVAL_TO_STRING(*vp))) {
+                    roots[VAL_ROOT] = *vp;
+                    if ((JSXML *) XMLArrayCursorItem(&cursor) == kid)
+                        ok = Replace(cx, kid, JSVAL_ZERO, *vp);
+                }
+            }
+            XMLArrayCursorFinish(&cursor);
         } else {
             /* 15(a). */
             ok = Replace(cx, xml, id, *vp);
@@ -4772,6 +4894,7 @@ PutProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
     }
 
 out:
+    JS_POP_TEMP_ROOT(cx, &tvr);
     js_LeaveLocalRootScope(cx);
     return ok;
 
@@ -4869,12 +4992,13 @@ HasProperty(JSContext *cx, JSObject *obj, jsval id, JSObject **objp,
             JSProperty **propp)
 {
     JSXML *xml, *kid;
-    uint32 i, n;
+    JSXMLArrayCursor cursor;
     JSObject *kidobj;
     JSXMLQName *qn;
     jsid funid;
     JSXMLArray *array;
     JSXMLNameMatcher matcher;
+    uint32 i, n;
 
     *objp = NULL;
     *propp = NULL;
@@ -4888,16 +5012,19 @@ HasProperty(JSContext *cx, JSObject *obj, jsval id, JSObject **objp,
             return JS_TRUE;
         }
 
-        for (i = 0; i < n; i++) {
-            kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
+        XMLArrayCursorInit(&cursor, &xml->xml_kids);
+        while ((kid = (JSXML *) XMLArrayCursorNext(&cursor)) != NULL) {
             if (kid->xml_class == JSXML_CLASS_ELEMENT) {
                 kidobj = js_GetXMLObject(cx, kid);
                 if (!kidobj || !HasProperty(cx, kidobj, id, objp, propp))
-                    return JS_FALSE;
+                    break;
                 if (*propp)
-                    return JS_TRUE;
+                    break;
             }
         }
+        XMLArrayCursorFinish(&cursor);
+        if (kid)
+            return *propp != NULL;
     } else {
         if (xml->xml_class == JSXML_CLASS_ELEMENT && js_IdIsIndex(id, &i)) {
             if (i == 0)
@@ -4923,7 +5050,7 @@ HasProperty(JSContext *cx, JSObject *obj, jsval id, JSObject **objp,
         }
         for (i = 0, n = array->length; i < n; i++) {
             kid = XMLARRAY_MEMBER(array, i, JSXML);
-            if (matcher(qn, kid)) {
+            if (kid && matcher(qn, kid)) {
                 *propp = FOUND_XML_PROPERTY;
                 return JS_TRUE;
             }
@@ -5231,15 +5358,17 @@ again:
             return JS_TRUE;
         if (xml->xml_kids.length == 1) {
             kid = XMLARRAY_MEMBER(&xml->xml_kids, 0, JSXML);
-            xml = kid;
-            goto again;
+            if (kid) {
+                xml = kid;
+                goto again;
+            }
         }
         /* FALL THROUGH */
       default:
         simple = JS_TRUE;
         for (i = 0, n = JSXML_LENGTH(xml); i < n; i++) {
             kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
-            if (kid->xml_class == JSXML_CLASS_ELEMENT) {
+            if (kid && kid->xml_class == JSXML_CLASS_ELEMENT) {
                 simple = JS_FALSE;
                 break;
             }
@@ -5275,11 +5404,13 @@ xml_getMethod(JSContext *cx, JSObject *obj, jsid id, jsval *vp)
         if (xml->xml_class == JSXML_CLASS_LIST) {
             if (xml->xml_kids.length == 1) {
                 xml = XMLARRAY_MEMBER(&xml->xml_kids, 0, JSXML);
-                obj = js_GetXMLObject(cx, xml);
-                if (!obj)
-                    goto bad;
-                roots[OBJ_ROOT] = OBJECT_TO_JSVAL(obj);
-                goto retry;
+                if (xml) {
+                    obj = js_GetXMLObject(cx, xml);
+                    if (!obj)
+                        goto bad;
+                    roots[OBJ_ROOT] = OBJECT_TO_JSVAL(obj);
+                    goto retry;
+                }
             }
         } else if (HasSimpleContent(xml)) {
             JSString *str;
@@ -5353,7 +5484,10 @@ xml_enumerateValues(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
       case JSENUMERATE_NEXT:
         cursor = JSVAL_TO_PRIVATE(*statep);
         if (cursor && cursor->array && (index = cursor->index) < length) {
-            kid = XMLARRAY_MEMBER(&xml->xml_kids, index, JSXML);
+            while (!(kid = XMLARRAY_MEMBER(&xml->xml_kids, index, JSXML))) {
+                if (++index == length)
+                    goto destroy;
+            }
             kidobj = js_GetXMLObject(cx, kid);
             if (!kidobj)
                 return JS_FALSE;
@@ -5368,6 +5502,7 @@ xml_enumerateValues(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
       case JSENUMERATE_DESTROY:
         cursor = JSVAL_TO_PRIVATE(*statep);
         if (cursor) {
+      destroy:
             XMLArrayCursorFinish(cursor);
             JS_free(cx, cursor);
         }
@@ -5679,10 +5814,14 @@ xml_child_helper(JSContext *cx, JSObject *obj, JSXML *xml, jsval name,
             *rval = JSVAL_VOID;
         } else {
             kid = XMLARRAY_MEMBER(&xml->xml_kids, index, JSXML);
-            kidobj = js_GetXMLObject(cx, kid);
-            if (!kidobj)
-                return JS_FALSE;
-            *rval = OBJECT_TO_JSVAL(kidobj);
+            if (!kid) {
+                *rval = JSVAL_NULL;
+            } else {
+                kidobj = js_GetXMLObject(cx, kid);
+                if (!kidobj)
+                    return JS_FALSE;
+                *rval = OBJECT_TO_JSVAL(kidobj);
+            }
         }
         return JS_TRUE;
     }
@@ -5695,8 +5834,8 @@ static JSBool
 xml_child(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
     JSXML *xml, *list, *kid, *vxml;
+    JSXMLArrayCursor cursor;
     jsval name, v;
-    uint32 i, n;
     JSObject *kidobj;
 
     XML_METHOD_PROLOG;
@@ -5707,13 +5846,13 @@ xml_child(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         if (!list)
             return JS_FALSE;
 
-        for (i = 0, n = xml->xml_kids.length; i < n; i++) {
-            kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
+        XMLArrayCursorInit(&cursor, &xml->xml_kids);
+        while ((kid = (JSXML *) XMLArrayCursorNext(&cursor)) != NULL) {
             kidobj = js_GetXMLObject(cx, kid);
             if (!kidobj)
-                return JS_FALSE;
+                break;
             if (!xml_child_helper(cx, kidobj, kid, name, &v))
-                return JS_FALSE;
+                break;
             if (JSVAL_IS_VOID(v)) {
                 /* The property didn't exist in this kid. */
                 continue;
@@ -5723,10 +5862,11 @@ xml_child(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
             vxml = (JSXML *) JS_GetPrivate(cx, JSVAL_TO_OBJECT(v));
             if ((!JSXML_HAS_KIDS(vxml) || vxml->xml_kids.length != 0) &&
                 !Append(cx, list, vxml)) {
-                return JS_FALSE;
+                break;
             }
         }
-        return JS_TRUE;
+        XMLArrayCursorFinish(&cursor);
+        return !kid;
     }
 
     /* ECMA-357 Edition 2 13.3.4.6 (note 13.3, not 13.4 as in Edition 1). */
@@ -5791,7 +5931,7 @@ xml_comments(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
         /* 13.5.4.6 Step 2. */
         for (i = 0, n = JSXML_LENGTH(xml); i < n; i++) {
             kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
-            if (kid->xml_class == JSXML_CLASS_ELEMENT) {
+            if (kid && kid->xml_class == JSXML_CLASS_ELEMENT) {
                 ok = js_EnterLocalRootScope(cx);
                 if (!ok)
                     break;
@@ -5817,7 +5957,7 @@ xml_comments(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
         /* 13.4.4.9 Step 2. */
         for (i = 0, n = JSXML_LENGTH(xml); i < n; i++) {
             kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
-            if (kid->xml_class == JSXML_CLASS_COMMENT) {
+            if (kid && kid->xml_class == JSXML_CLASS_COMMENT) {
                 ok = Append(cx, list, kid);
                 if (!ok)
                     break;
@@ -5836,21 +5976,24 @@ xml_contains(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     JSXML *xml, *kid;
     jsval value;
     JSBool eq;
+    JSXMLArrayCursor cursor;
     JSObject *kidobj;
-    uint32 i, n;
 
     XML_METHOD_PROLOG;
     value = argv[0];
     if (xml->xml_class == JSXML_CLASS_LIST) {
         eq = JS_FALSE;
-        for (i = 0, n = xml->xml_kids.length; i < n; i++) {
-            kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
+        XMLArrayCursorInit(&cursor, &xml->xml_kids);
+        while ((kid = (JSXML *) XMLArrayCursorNext(&cursor)) != NULL) {
             kidobj = js_GetXMLObject(cx, kid);
             if (!kidobj || !xml_equality(cx, kidobj, value, &eq))
-                return JS_FALSE;
+                break;
             if (eq)
                 break;
         }
+        XMLArrayCursorFinish(&cursor);
+        if (!eq)
+            return JS_FALSE;
     } else {
         if (!xml_equality(cx, obj, value, &eq))
             return JS_FALSE;
@@ -5900,8 +6043,9 @@ xml_elements(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     JSXMLQName *nameqn;
     jsid funid;
     JSBool ok;
-    uint32 i, n;
+    JSXMLArrayCursor cursor;
     JSObject *kidobj;
+    uint32 i, n;
 
     XML_METHOD_PROLOG;
     name = (argc == 0) ? ATOM_KEY(cx->runtime->atomState.starAtom) : argv[0];
@@ -5921,8 +6065,8 @@ xml_elements(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
 
     if (xml->xml_class == JSXML_CLASS_LIST) {
         /* 13.5.4.6 */
-        for (i = 0, n = JSXML_LENGTH(xml); i < n; i++) {
-            kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
+        XMLArrayCursorInit(&cursor, &xml->xml_kids);
+        while ((kid = (JSXML *) XMLArrayCursorNext(&cursor)) != NULL) {
             if (kid->xml_class == JSXML_CLASS_ELEMENT) {
                 ok = js_EnterLocalRootScope(cx);
                 if (!ok)
@@ -5945,10 +6089,11 @@ xml_elements(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 }
             }
         }
+        XMLArrayCursorFinish(&cursor);
     } else {
         for (i = 0, n = JSXML_LENGTH(xml); i < n; i++) {
             kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
-            if (kid->xml_class == JSXML_CLASS_ELEMENT &&
+            if (kid && kid->xml_class == JSXML_CLASS_ELEMENT &&
                 MatchElemName(nameqn, kid)) {
                 ok = Append(cx, list, kid);
                 if (!ok)
@@ -6007,19 +6152,21 @@ again:
             *rval = JSVAL_TRUE;
         } else if (xml->xml_kids.length == 1) {
             kid = XMLARRAY_MEMBER(&xml->xml_kids, 0, JSXML);
-            kidobj = js_GetXMLObject(cx, kid);
-            if (!kidobj)
-                return JS_FALSE;
-            obj = kidobj;
-            xml = (JSXML *) JS_GetPrivate(cx, obj);
-            goto again;
+            if (kid) {
+                kidobj = js_GetXMLObject(cx, kid);
+                if (!kidobj)
+                    return JS_FALSE;
+                obj = kidobj;
+                xml = (JSXML *) JS_GetPrivate(cx, obj);
+                goto again;
+            }
         }
         /* FALL THROUGH */
       default:
         *rval = JSVAL_FALSE;
         for (i = 0, n = xml->xml_kids.length; i < n; i++) {
             kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
-            if (kid->xml_class == JSXML_CLASS_ELEMENT) {
+            if (kid && kid->xml_class == JSXML_CLASS_ELEMENT) {
                 *rval = JSVAL_TRUE;
                 break;
             }
@@ -6055,6 +6202,7 @@ mark_temp_ns_array(JSContext *cx, JSTempValueRooter *tvr)
     namespace_mark_vector(cx,
                           (JSXMLNamespace **)tmp->array.vector,
                           tmp->array.length);
+    XMLArrayCursorMark(cx, tmp->array.cursors);
     if (JSVAL_IS_GCTHING(tmp->value))
         GC_MARK(cx, JSVAL_TO_GCTHING(tmp->value), """"temp_ns_array_value"""");
 }
@@ -6076,9 +6224,8 @@ FinishTempNSArray(JSContext *cx, JSTempRootedNSArray *tmp)
 }
 
 /*
- * Populate a new JS array with elements of JSTempRootetNSArray.array
- * and place the result into rval.
- * rval must point to a rooted location.
+ * Populate a new JS array with elements of JSTempRootedNSArray.array and
+ * place the result into rval.  rval must point to a rooted location.
  */
 static JSBool
 TempNSArrayToJSArray(JSContext *cx, JSTempRootedNSArray *tmp, jsval *rval)
@@ -6094,6 +6241,8 @@ TempNSArrayToJSArray(JSContext *cx, JSTempRootedNSArray *tmp, jsval *rval)
     *rval = OBJECT_TO_JSVAL(arrayobj);
     for (i = 0, n = tmp->array.length; i < n; i++) {
         ns = XMLARRAY_MEMBER(&tmp->array, i, JSXMLNamespace);
+        if (!ns)
+            continue;
         nsobj = js_GetXMLNamespaceObject(cx, ns);
         if (!nsobj)
             return JS_FALSE;
@@ -6116,12 +6265,15 @@ FindInScopeNamespaces(JSContext *cx, JSXML *xml, JSXMLArray *nsarray)
             continue;
         for (i = 0, n = xml->xml_namespaces.length; i < n; i++) {
             ns = XMLARRAY_MEMBER(&xml->xml_namespaces, i, JSXMLNamespace);
+            if (!ns)
+                continue;
 
             for (j = 0; j < length; j++) {
                 ns2 = XMLARRAY_MEMBER(nsarray, j, JSXMLNamespace);
-                if ((ns2->prefix && ns->prefix)
-                    ? js_EqualStrings(ns2->prefix, ns->prefix)
-                    : js_EqualStrings(ns2->uri, ns->uri)) {
+                if (ns2 &&
+                    ((ns2->prefix && ns->prefix)
+                     ? js_EqualStrings(ns2->prefix, ns->prefix)
+                     : js_EqualStrings(ns2->uri, ns->uri))) {
                     break;
                 }
             }
@@ -6184,7 +6336,7 @@ xml_insertChildAfter(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     xml = CHECK_COPY_ON_WRITE(cx, xml, obj);
     if (!xml)
         return JS_FALSE;
-    if (!Insert(cx, xml, INT_TO_JSID(i), argv[1]))
+    if (!Insert(cx, xml, i, argv[1]))
         return JS_FALSE;
     *rval = OBJECT_TO_JSVAL(obj);
     return JS_TRUE;
@@ -6218,7 +6370,7 @@ xml_insertChildBefore(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     xml = CHECK_COPY_ON_WRITE(cx, xml, obj);
     if (!xml)
         return JS_FALSE;
-    if (!Insert(cx, xml, INT_TO_JSID(i), argv[1]))
+    if (!Insert(cx, xml, i, argv[1]))
         return JS_FALSE;
     *rval = OBJECT_TO_JSVAL(obj);
     return JS_TRUE;
@@ -6315,7 +6467,7 @@ xml_namespace(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
         ns = NULL;
         for (i = 0, length = inScopeNSes.array.length; i < length; i++) {
             ns = XMLARRAY_MEMBER(&inScopeNSes.array, i, JSXMLNamespace);
-            if (ns->prefix && js_EqualStrings(ns->prefix, prefix))
+            if (ns && ns->prefix && js_EqualStrings(ns->prefix, prefix))
                 break;
             ns = NULL;
         }
@@ -6361,7 +6513,8 @@ xml_namespaceDeclarations(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
         JS_ASSERT(yml->xml_class == JSXML_CLASS_ELEMENT);
         for (i = 0, n = yml->xml_namespaces.length; i < n; i++) {
             ns = XMLARRAY_MEMBER(&yml->xml_namespaces, i, JSXMLNamespace);
-            if (!XMLARRAY_HAS_MEMBER(&ancestors.array, ns, namespace_match)) {
+            if (ns &&
+                !XMLARRAY_HAS_MEMBER(&ancestors.array, ns, namespace_match)) {
                 ok = XMLARRAY_APPEND(cx, &ancestors.array, ns);
                 if (!ok)
                     goto out;
@@ -6371,6 +6524,8 @@ xml_namespaceDeclarations(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
 
     for (i = 0, n = xml->xml_namespaces.length; i < n; i++) {
         ns = XMLARRAY_MEMBER(&xml->xml_namespaces, i, JSXMLNamespace);
+        if (!ns)
+            continue;
         if (!ns->declared)
             continue;
         if (!XMLARRAY_HAS_MEMBER(&ancestors.array, ns, namespace_match)) {
@@ -6468,14 +6623,16 @@ xml_normalize(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
 
     for (i = 0, n = xml->xml_kids.length; i < n; i++) {
         kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
+        if (!kid)
+            continue;
         if (kid->xml_class == JSXML_CLASS_ELEMENT) {
             kidobj = js_GetXMLObject(cx, kid);
             if (!kidobj || !xml_normalize(cx, kidobj, argc, argv, &junk))
                 return JS_FALSE;
         } else if (kid->xml_class == JSXML_CLASS_TEXT) {
             while (i + 1 < n &&
-                   (kid2 = XMLARRAY_MEMBER(&xml->xml_kids, i + 1, JSXML))
-                   ->xml_class == JSXML_CLASS_TEXT) {
+                   (kid2 = XMLARRAY_MEMBER(&xml->xml_kids, i + 1, JSXML)) &&
+                   kid2->xml_class == JSXML_CLASS_TEXT) {
                 str = js_ConcatStrings(cx, kid->xml_value, kid2->xml_value);
                 if (!str)
                     return JS_FALSE;
@@ -6513,10 +6670,12 @@ xml_parent(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
             return JS_TRUE;
 
         kid = XMLARRAY_MEMBER(&xml->xml_kids, 0, JSXML);
+        if (!kid)
+            return JS_TRUE;
         parent = kid->parent;
         for (i = 1; i < n; i++) {
             kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
-            if (kid->parent != parent)
+            if (kid && kid->parent != parent)
                 return JS_TRUE;
         }
     }
@@ -6543,8 +6702,9 @@ xml_processingInstructions(JSContext *cx, JSObject *obj, uintN argc,
     JSXMLQName *nameqn;
     jsid funid;
     JSBool ok;
-    uint32 i, n;
+    JSXMLArrayCursor cursor;
     JSObject *kidobj;
+    uint32 i, n;
 
     XML_METHOD_PROLOG;
     name = (argc == 0) ? ATOM_KEY(cx->runtime->atomState.starAtom) : argv[0];
@@ -6564,8 +6724,8 @@ xml_processingInstructions(JSContext *cx, JSObject *obj, uintN argc,
 
     if (xml->xml_class == JSXML_CLASS_LIST) {
         /* 13.5.4.17 Step 4 (misnumbered 9 -- Erratum?). */
-        for (i = 0, n = JSXML_LENGTH(xml); i < n; i++) {
-            kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
+        XMLArrayCursorInit(&cursor, &xml->xml_kids);
+        while ((kid = (JSXML *) XMLArrayCursorNext(&cursor)) != NULL) {
             if (kid->xml_class == JSXML_CLASS_ELEMENT) {
                 ok = js_EnterLocalRootScope(cx);
                 if (!ok)
@@ -6588,11 +6748,12 @@ xml_processingInstructions(JSContext *cx, JSObject *obj, uintN argc,
                 }
             }
         }
+        XMLArrayCursorFinish(&cursor);
     } else {
         /* 13.4.4.28 Step 4. */
         for (i = 0, n = JSXML_LENGTH(xml); i < n; i++) {
             kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
-            if (kid->xml_class == JSXML_CLASS_PROCESSING_INSTRUCTION &&
+            if (kid && kid->xml_class == JSXML_CLASS_PROCESSING_INSTRUCTION &&
                 (IS_STAR(nameqn->localName) ||
                  js_EqualStrings(nameqn->localName, kid->name->localName))) {
                 ok = Append(cx, list, kid);
@@ -6616,7 +6777,7 @@ xml_prependChild(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     if (!xml)
         return JS_FALSE;
     *rval = OBJECT_TO_JSVAL(obj);
-    return Insert(cx, xml, JSVAL_ZERO, argv[0]);
+    return Insert(cx, xml, 0, argv[0]);
 }
 
 /* XML and XMLList */
@@ -6670,6 +6831,8 @@ xml_removeNamespace_helper(JSContext *cx, JSXML *xml, JSXMLNamespace *ns)
 
     for (i = 0, n = xml->xml_attrs.length; i < n; i++) {
         attr = XMLARRAY_MEMBER(&xml->xml_attrs, i, JSXML);
+        if (!attr)
+            continue;
         attrns = GetNamespace(cx, attr->name, &xml->xml_namespaces);
         JS_ASSERT(attrns);
         if (attrns == ns)
@@ -6682,7 +6845,7 @@ xml_removeNamespace_helper(JSContext *cx, JSXML *xml, JSXMLNamespace *ns)
 
     for (i = 0, n = xml->xml_kids.length; i < n; i++) {
         kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
-        if (kid->xml_class == JSXML_CLASS_ELEMENT) {
+        if (kid && kid->xml_class == JSXML_CLASS_ELEMENT) {
             if (!xml_removeNamespace_helper(cx, kid, ns))
                 return JS_FALSE;
         }
@@ -6765,7 +6928,7 @@ xml_replace(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     while (index != 0) {
         --index;
         kid = XMLARRAY_MEMBER(&xml->xml_kids, index, JSXML);
-        if (MatchElemName(nameqn, kid)) {
+        if (kid && MatchElemName(nameqn, kid)) {
             if (!JSVAL_IS_VOID(id) && !DeleteByIndex(cx, xml, id, &junk))
                 return JS_FALSE;
             if (!IndexToIdVal(cx, index, &id))
@@ -6912,7 +7075,7 @@ xml_setName(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         nsarray = &nsowner->xml_namespaces;
         for (i = 0, n = nsarray->length; i < n; i++) {
             ns = XMLARRAY_MEMBER(nsarray, i, JSXMLNamespace);
-            if (js_EqualStrings(ns->uri, nameqn->uri)) {
+            if (ns && js_EqualStrings(ns->uri, nameqn->uri)) {
                 nameqn->prefix = ns->prefix;
                 return JS_TRUE;
             }
@@ -6992,7 +7155,7 @@ xml_text(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         ok = JS_TRUE;
         for (i = 0, n = xml->xml_kids.length; i < n; i++) {
             kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
-            if (kid->xml_class == JSXML_CLASS_ELEMENT) {
+            if (kid && kid->xml_class == JSXML_CLASS_ELEMENT) {
                 ok = js_EnterLocalRootScope(cx);
                 if (!ok)
                     break;
@@ -7014,8 +7177,10 @@ xml_text(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     } else {
         for (i = 0, n = JSXML_LENGTH(xml); i < n; i++) {
             kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
-            if (kid->xml_class == JSXML_CLASS_TEXT && !Append(cx, list, kid))
-                return JS_FALSE;
+            if (kid && kid->xml_class == JSXML_CLASS_TEXT) {
+                if (!Append(cx, list, kid))
+                    return JS_FALSE;
+            }
         }
     }
     return JS_TRUE;
@@ -7041,7 +7206,7 @@ xml_toString_helper(JSContext *cx, JSXML *xml)
 {
     JSString *str, *kidstr;
     JSXML *kid;
-    uint32 i, n;
+    JSXMLArrayCursor cursor;
 
     if (xml->xml_class == JSXML_CLASS_ATTRIBUTE ||
         xml->xml_class == JSXML_CLASS_TEXT) {
@@ -7053,8 +7218,8 @@ xml_toString_helper(JSContext *cx, JSXML *xml)
 
     str = cx->runtime->emptyString;
     js_EnterLocalRootScope(cx);
-    for (i = 0, n = xml->xml_kids.length; i < n; i++) {
-        kid = XMLARRAY_MEMBER(&xml->xml_kids, i, JSXML);
+    XMLArrayCursorInit(&cursor, &xml->xml_kids);
+    while ((kid = (JSXML *) XMLArrayCursorNext(&cursor)) != NULL) {
         if (kid->xml_class != JSXML_CLASS_COMMENT &&
             kid->xml_class != JSXML_CLASS_PROCESSING_INSTRUCTION) {
             kidstr = xml_toString_helper(cx, kid);
@@ -7067,6 +7232,7 @@ xml_toString_helper(JSContext *cx, JSXML *xml)
                 break;
         }
     }
+    XMLArrayCursorFinish(&cursor);
     js_LeaveLocalRootScopeWithResult(cx, STRING_TO_JSVAL(str));
     return str;
 }
@@ -7375,6 +7541,7 @@ js_MarkXML(JSContext *cx, JSXML *xml)
     xml_mark_vector(cx,
                     (JSXML **) xml->xml_kids.vector,
                     xml->xml_kids.length);
+    XMLArrayCursorMark(cx, xml->xml_kids.cursors);
     XMLArrayTrim(&xml->xml_kids);
 
     if (xml->xml_class == JSXML_CLASS_LIST) {
@@ -7386,11 +7553,13 @@ js_MarkXML(JSContext *cx, JSXML *xml)
         namespace_mark_vector(cx,
                               (JSXMLNamespace **) xml->xml_namespaces.vector,
                               xml->xml_namespaces.length);
+        XMLArrayCursorMark(cx, xml->xml_namespaces.cursors);
         XMLArrayTrim(&xml->xml_namespaces);
 
         xml_mark_vector(cx,
                         (JSXML **) xml->xml_attrs.vector,
                         xml->xml_attrs.length);
+        XMLArrayCursorMark(cx, xml->xml_attrs.cursors);
         XMLArrayTrim(&xml->xml_attrs);
     }
 }
@@ -8046,9 +8215,10 @@ js_FilterXMLList(JSContext *cx, JSObject *obj, jsbytecode *pc, jsval *vp)
 {
     JSBool ok, match;
     JSStackFrame *fp;
-    uint32 flags, i, n;
+    uint32 flags;
     JSObject *scobj, *listobj, *resobj, *withobj, *kidobj;
     JSXML *xml, *list, *result, *kid;
+    JSXMLArrayCursor cursor;
 
     ok = js_EnterLocalRootScope(cx);
     if (!ok)
@@ -8090,21 +8260,23 @@ js_FilterXMLList(JSContext *cx, JSObject *obj, jsbytecode *pc, jsval *vp)
         goto bad;
     fp->scopeChain = withobj;
 
-    for (i = 0, n = list->xml_kids.length; i < n; i++) {
-        kid = XMLARRAY_MEMBER(&list->xml_kids, i, JSXML);
+    XMLArrayCursorInit(&cursor, &list->xml_kids);
+    while ((kid = (JSXML *) XMLArrayCursorNext(&cursor)) != NULL) {
         kidobj = js_GetXMLObject(cx, kid);
         if (!kidobj)
-            goto bad;
+            break;
         OBJ_SET_PROTO(cx, withobj, kidobj);
         ok = js_Interpret(cx, pc, vp) && js_ValueToBoolean(cx, *vp, &match);
-        if (!ok)
-            goto out;
-        if (match) {
+        if (ok && match)
             ok = Append(cx, result, kid);
-            if (!ok)
-                goto out;
-        }
+        if (!ok)
+            break;
     }
+    XMLArrayCursorFinish(&cursor);
+    if (!ok)
+        goto out;
+    if (kid)
+        goto bad;
 
     *vp = OBJECT_TO_JSVAL(resobj);
 
diff --git a/js/src/jsxml.h b/js/src/jsxml.h
index 39e2260..71e591a 100644
--- a/js/src/jsxml.h
+++ b/js/src/jsxml.h
@@ -125,6 +125,7 @@ struct JSXMLArrayCursor {
     uint32              index;
     JSXMLArrayCursor    *next;
     JSXMLArrayCursor    **prevp;
+    void                *root;
 };
 
 /*"""
8bd38531d5b2c57f0cd868e27ed9143bdafdf7c6,109561,319872,bclary%bclary.com,"JavaScript Tests - add tests for bugs 319872, 324422 to slow tests, bug 354923
",1160253470,"""diff --git a/js/tests/slow-n.tests b/js/tests/slow-n.tests
index c4b0c354..0d34303 100644
--- a/js/tests/slow-n.tests
+++ b/js/tests/slow-n.tests
@@ -1,6 +1,8 @@
 e4x/GC/regress-324278.js
+e4x/Regress/regress-319872.js 
 e4x/Regress/regress-350238.js
 e4x/Regress/regress-350531.js
+e4x/XML/regress-324422-2.js
 e4x/XML/regress-324688.js
 ecma_3/Array/regress-322135-02.js
 ecma_3/Array/regress-322135-03.js"""
3cf1933328a3b4ab73e9acb929eedacb283fcdb5,109821,354924,brendan%mozilla.org,"Fix 354924, r=igor.
",1159645968,"""diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index 58b3914..cac6460 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -1730,7 +1730,9 @@ ImportProperty(JSContext *cx, JSObject *obj, jsid id)
             ok = OBJ_SET_PROPERTY(cx, target, id, &value);
         } else {
             ok = OBJ_DEFINE_PROPERTY(cx, target, id, value, NULL, NULL,
-                                     attrs & ~JSPROP_EXPORTED,
+                                     attrs & ~(JSPROP_EXPORTED |
+                                               JSPROP_GETTER |
+                                               JSPROP_SETTER),
                                      NULL);
         }
         if (prop)"""
b7ead1dc196fc88f7981220416b7f4b9b59d7fe0,109866,354766,rbs%maths.uq.edu.au,"<mathml:mtd> with border-collapse <html:table> crashes [@ nsRuleNode::GetStyleData] [@ nsCachedStyleData::GetStyleData], b=354766, r=bernd, sr=bzbarsky
",1159551621,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index cf0855b..5ce30fe 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -1845,7 +1845,16 @@ nsMathMLmtableCreator::CreateTableRowFrame(nsStyleContext* aStyleContext)
 nsIFrame*
 nsMathMLmtableCreator::CreateTableCellFrame(nsIFrame* aParentFrame, nsStyleContext* aStyleContext)
 {
-  NS_ASSERTION(!IsBorderCollapse(aParentFrame), """"not implemented"""");
+  // <mtable> is border separate in mathml.css and the MathML code doesn't implement
+  // border collapse. For those users who style <mtable> with border collapse,
+  // give them the default non-MathML table frames that understand border collpase.
+  // This won't break us because MathML table frames are all subclasses of the default
+  // table code, and so we can freely mix <mtable> with <mtr> or <tr>, <mtd> or <td>.
+  // What will happen is just that non-MathML frames won't understand MathML attributes
+  // and will therefore miss the special handling that the MathML code does.
+  if (IsBorderCollapse(aParentFrame))
+    return NS_NewTableCellFrame(mPresShell, aStyleContext, PR_TRUE);
+
   return NS_NewMathMLmtdFrame(mPresShell, aStyleContext);
 }
 """
f1055ce61a11e99ba3bed17c5cc2bc5d8ce3a21d,110260,354151,igor.bukanov%gmail.com,"Re-factoring namespace-access methods to use XMLArrays, not JS Array instances for temporaries for faster and smaller code. bug=354151 r=brendan
",1159304312,"""diff --git a/js/src/jsxml.c b/js/src/jsxml.c
index 4d8260f..58739fe 100644
--- a/js/src/jsxml.c
+++ b/js/src/jsxml.c
@@ -6038,23 +6038,76 @@ xml_hasSimpleContent(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     return JS_TRUE;
 }
 
+typedef struct JSTempRootedNSArray {
+    JSTempValueRooter   tvr;
+    JSXMLArray          array;
+    jsval               value;  /* extra root for temporaries */
+} JSTempRootedNSArray;
+
+JS_STATIC_DLL_CALLBACK(void)
+mark_temp_ns_array(JSContext *cx, JSTempValueRooter *tvr)
+{
+    JSTempRootedNSArray *tmp = (JSTempRootedNSArray *)tvr;
+
+    namespace_mark_vector(cx,
+                          (JSXMLNamespace **)tmp->array.vector,
+                          tmp->array.length);
+    if (JSVAL_IS_GCTHING(tmp->value))
+        GC_MARK(cx, JSVAL_TO_GCTHING(tmp->value), """"temp_ns_array_value"""");
+}
+
+static void
+InitTempNSArray(JSContext *cx, JSTempRootedNSArray *tmp)
+{
+    XMLArrayInit(cx, &tmp->array, 0);
+    tmp->value = JSVAL_NULL;
+    JS_PUSH_TEMP_ROOT_MARKER(cx, mark_temp_ns_array, &tmp->tvr);
+}
+
+static void
+FinishTempNSArray(JSContext *cx, JSTempRootedNSArray *tmp)
+{
+    JS_ASSERT(tmp->tvr.u.marker == mark_temp_ns_array);
+    JS_POP_TEMP_ROOT(cx, &tmp->tvr);
+    XMLArrayFinish(cx, &tmp->array);
+}
+
+/*
+ * Populate a new JS array with elements of JSTempRootetNSArray.array
+ * and place the result into rval.
+ * rval must point to a rooted location.
+ */
 static JSBool
-xml_inScopeNamespaces(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
-                      jsval *rval)
+TempNSArrayToJSArray(JSContext *cx, JSTempRootedNSArray *tmp, jsval *rval)
 {
-    JSObject *arrayobj, *nsobj;
-    JSXML *xml;
-    uint32 length, i, j, n;
-    JSXMLNamespace *ns, *ns2;
-    jsval v;
+    JSObject *arrayobj;
+    uint32 i, n;
+    JSXMLNamespace *ns;
+    JSObject *nsobj;
 
     arrayobj = js_NewArrayObject(cx, 0, NULL);
     if (!arrayobj)
         return JS_FALSE;
     *rval = OBJECT_TO_JSVAL(arrayobj);
-    length = 0;
+    for (i = 0, n = tmp->array.length; i < n; i++) {
+        ns = XMLARRAY_MEMBER(&tmp->array, i, JSXMLNamespace);
+        nsobj = js_GetXMLNamespaceObject(cx, ns);
+        if (!nsobj)
+            return JS_FALSE;
+        tmp->value = OBJECT_TO_JSVAL(nsobj);
+        if (!OBJ_SET_PROPERTY(cx, arrayobj, INT_TO_JSID(i), &tmp->value))
+            return JS_FALSE;
+    }
+    return JS_TRUE;
+}
 
-    XML_METHOD_PROLOG;
+static JSBool
+FindInScopeNamespaces(JSContext *cx, JSXML *xml, JSXMLArray *nsarray)
+{
+    uint32 length, i, j, n;
+    JSXMLNamespace *ns, *ns2;
+
+    length = nsarray->length;
     do {
         if (xml->xml_class != JSXML_CLASS_ELEMENT)
             continue;
@@ -6062,10 +6115,7 @@ xml_inScopeNamespaces(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
             ns = XMLARRAY_MEMBER(&xml->xml_namespaces, i, JSXMLNamespace);
 
             for (j = 0; j < length; j++) {
-                if (!JS_GetElement(cx, arrayobj, j, &v))
-                    return JS_FALSE;
-                nsobj = JSVAL_TO_OBJECT(v);
-                ns2 = (JSXMLNamespace *) JS_GetPrivate(cx, nsobj);
+                ns2 = XMLARRAY_MEMBER(nsarray, j, JSXMLNamespace);
                 if ((ns2->prefix && ns->prefix)
                     ? js_EqualStrings(ns2->prefix, ns->prefix)
                     : js_EqualStrings(ns2->uri, ns->uri)) {
@@ -6074,20 +6124,35 @@ xml_inScopeNamespaces(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
             }
 
             if (j == length) {
-                nsobj = js_GetXMLNamespaceObject(cx, ns);
-                if (!nsobj)
-                    return JS_FALSE;
-                v = OBJECT_TO_JSVAL(nsobj);
-                if (!JS_SetElement(cx, arrayobj, length, &v))
+                if (!XMLARRAY_APPEND(cx, nsarray, ns))
                     return JS_FALSE;
                 ++length;
             }
         }
     } while ((xml = xml->parent) != NULL);
+    JS_ASSERT(length == nsarray->length);
+
     return JS_TRUE;
 }
 
 static JSBool
+xml_inScopeNamespaces(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
+                      jsval *rval)
+{
+    JSXML *xml;
+    JSTempRootedNSArray namespaces;
+    JSBool ok;
+
+    XML_METHOD_PROLOG;
+
+    InitTempNSArray(cx, &namespaces);
+    ok = FindInScopeNamespaces(cx, xml, &namespaces.array) &&
+         TempNSArrayToJSArray(cx, &namespaces, rval);
+    FinishTempNSArray(cx, &namespaces);
+    return ok;
+}
+
+static JSBool
 xml_insertChildAfter(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                      jsval *rval)
 {
@@ -6206,13 +6271,12 @@ xml_namespace(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
               jsval *rval)
 {
     JSXML *xml;
-    JSObject *arrayobj;
+    JSString *prefix;
+    JSTempRootedNSArray inScopeNSes;
     JSBool ok;
     jsuint i, length;
-    jsval v;
-    JSXMLArray inScopeNSes;
     JSXMLNamespace *ns;
-    JSString *prefix;
+    JSObject *nsobj;
 
     XML_METHOD_PROLOG;
     if (argc == 0 &&
@@ -6223,49 +6287,50 @@ xml_namespace(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
         return JS_TRUE;
     }
 
-    if (!xml_inScopeNamespaces(cx, obj, 0, NULL, rval))
-        return JS_FALSE;
-    arrayobj = JSVAL_TO_OBJECT(*rval);
-    ok = js_GetLengthProperty(cx, arrayobj, &length);
-    if (!ok)
-        return JS_FALSE;
-
     if (argc == 0) {
-        if (!XMLArrayInit(cx, &inScopeNSes, length))
-            return JS_FALSE;
-
-        for (i = 0; i < length; i++) {
-            ok = OBJ_GET_PROPERTY(cx, arrayobj, INT_TO_JSID(i), &v);
-            if (!ok)
-                break;
-            JS_ASSERT(!JSVAL_IS_PRIMITIVE(v));
-            ns = (JSXMLNamespace *) JS_GetPrivate(cx, JSVAL_TO_OBJECT(v));
-            XMLARRAY_SET_MEMBER(&inScopeNSes, i, ns);
-        }
-
-        ns = ok ? GetNamespace(cx, xml->name, &inScopeNSes) : NULL;
-        XMLArrayFinish(cx, &inScopeNSes);
-        if (!ns)
-            return JS_FALSE;
-
-        *rval = OBJECT_TO_JSVAL(ns->object);
+        prefix = NULL;
     } else {
         prefix = js_ValueToString(cx, argv[0]);
         if (!prefix)
             return JS_FALSE;
         argv[0] = STRING_TO_JSVAL(prefix);      /* local root */
+    }
 
-        for (i = 0; i < length; i++) {
-            if (!OBJ_GET_PROPERTY(cx, arrayobj, INT_TO_JSID(i), &v))
-                return JS_FALSE;
-            JS_ASSERT(!JSVAL_IS_PRIMITIVE(v));
-            ns = (JSXMLNamespace *) JS_GetPrivate(cx, JSVAL_TO_OBJECT(v));
+    /* After this point the control must flow through label out. */
+    InitTempNSArray(cx, &inScopeNSes);
+    ok = FindInScopeNamespaces(cx, xml, &inScopeNSes.array);
+    if (!ok)
+        goto out;
+
+    if (!prefix) {
+        ns = GetNamespace(cx, xml->name, &inScopeNSes.array);
+        if (!ns) {
+            ok = JS_FALSE;
+            goto out;
+        }
+    } else {
+        ns = NULL;
+        for (i = 0, length = inScopeNSes.array.length; i < length; i++) {
+            ns = XMLARRAY_MEMBER(&inScopeNSes.array, i, JSXMLNamespace);
             if (ns->prefix && js_EqualStrings(ns->prefix, prefix))
                 break;
+            ns = NULL;
         }
-
-        *rval = (i < length) ? OBJECT_TO_JSVAL(ns->object) : JSVAL_VOID;
     }
+    
+    if (!ns) {
+        *rval = JSVAL_VOID;
+    } else {
+        nsobj = js_GetXMLNamespaceObject(cx, ns);
+        if (!nsobj) {
+            ok = JS_FALSE;
+            goto out;
+        }
+        *rval = OBJECT_TO_JSVAL(nsobj);
+    }
+
+  out:
+    FinishTempNSArray(cx, &inScopeNSes);
     return JS_TRUE;
 }
 
@@ -6273,18 +6338,11 @@ static JSBool
 xml_namespaceDeclarations(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                           jsval *rval)
 {
-    JSObject *arrayobj, *nsobj;
     JSXML *xml, *yml;
     JSBool ok;
-    JSXMLArray ancestors, declared;
+    JSTempRootedNSArray ancestors, declared;
     uint32 i, n;
     JSXMLNamespace *ns;
-    jsval v;
-
-    arrayobj = js_NewArrayObject(cx, 0, NULL);
-    if (!arrayobj)
-        return JS_FALSE;
-    *rval = OBJECT_TO_JSVAL(arrayobj);
 
     XML_METHOD_PROLOG;
     if (JSXML_HAS_VALUE(xml) || xml->xml_class == JSXML_CLASS_LIST)
@@ -6292,16 +6350,16 @@ xml_namespaceDeclarations(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
 
     /* From here, control flow must goto out to finish these arrays. */
     ok = JS_TRUE;
-    XMLArrayInit(cx, &ancestors, 0);
-    XMLArrayInit(cx, &declared, 0);
+    InitTempNSArray(cx, &ancestors);
+    InitTempNSArray(cx, &declared);
     yml = xml;
 
     while ((yml = yml->parent) != NULL) {
         JS_ASSERT(yml->xml_class == JSXML_CLASS_ELEMENT);
         for (i = 0, n = yml->xml_namespaces.length; i < n; i++) {
             ns = XMLARRAY_MEMBER(&yml->xml_namespaces, i, JSXMLNamespace);
-            if (!XMLARRAY_HAS_MEMBER(&ancestors, ns, namespace_match)) {
-                ok = XMLARRAY_APPEND(cx, &ancestors, ns);
+            if (!XMLARRAY_HAS_MEMBER(&ancestors.array, ns, namespace_match)) {
+                ok = XMLARRAY_APPEND(cx, &ancestors.array, ns);
                 if (!ok)
                     goto out;
             }
@@ -6312,29 +6370,19 @@ xml_namespaceDeclarations(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
         ns = XMLARRAY_MEMBER(&xml->xml_namespaces, i, JSXMLNamespace);
         if (!ns->declared)
             continue;
-        if (!XMLARRAY_HAS_MEMBER(&ancestors, ns, namespace_match)) {
-            ok = XMLARRAY_APPEND(cx, &declared, ns);
+        if (!XMLARRAY_HAS_MEMBER(&ancestors.array, ns, namespace_match)) {
+            ok = XMLARRAY_APPEND(cx, &declared.array, ns);
             if (!ok)
                 goto out;
         }
     }
 
-    for (i = 0, n = declared.length; i < n; i++) {
-        ns = XMLARRAY_MEMBER(&declared, i, JSXMLNamespace);
-        nsobj = js_GetXMLNamespaceObject(cx, ns);
-        if (!nsobj) {
-            ok = JS_FALSE;
-            goto out;
-        }
-        v = OBJECT_TO_JSVAL(nsobj);
-        ok = OBJ_SET_PROPERTY(cx, arrayobj, INT_TO_JSID(i), &v);
-        if (!ok)
-            goto out;
-    }
+    ok = TempNSArrayToJSArray(cx, &declared, rval);
 
 out:
-    XMLArrayFinish(cx, &ancestors);
-    XMLArrayFinish(cx, &declared);
+    /* Finishing must be in reverse order of initialization to follow LIFO. */
+    FinishTempNSArray(cx, &declared);
+    FinishTempNSArray(cx, &ancestors);
     return ok;
 }
 """
3961fcdb53649e40c49829c8dcc71a0cb773a518,110397,351370,jst%mozilla.jstenback.com,"Fixing bug 351370. Make javascript: URLs evaluate in a sandbox when principals don't match. r=mrbkap@gmail.com, sr=bzbarsky@mit.edu.
",1159031218,"""diff --git a/dom/src/jsurl/Makefile.in b/dom/src/jsurl/Makefile.in
index 85a9862..c886c96 100644
--- a/dom/src/jsurl/Makefile.in
+++ b/dom/src/jsurl/Makefile.in
@@ -62,6 +62,8 @@ REQUIRES	= xpcom \
 		  jsconsole \
 		  uconv \
 		  docshell \
+		  content \
+		  pref \
 		  $(NULL)
 
 XPIDLSRCS	= \
@@ -72,6 +74,10 @@ CPPSRCS		= nsJSProtocolHandler.cpp
 
 EXPORTS		= $(srcdir)/nsJSProtocolHandler.h
 
+LOCAL_INCLUDES += \
+		-I$(srcdir) \
+		-I$(srcdir)/../base \
+
 EXTRA_DSO_LDOPTS = \
 		$(MOZ_COMPONENT_LIBS) \
 		$(MOZ_JS_LIBS) \
diff --git a/dom/src/jsurl/nsJSProtocolHandler.cpp b/dom/src/jsurl/nsJSProtocolHandler.cpp
index 171d041..431512a 100644
--- a/dom/src/jsurl/nsJSProtocolHandler.cpp
+++ b/dom/src/jsurl/nsJSProtocolHandler.cpp
@@ -69,6 +69,9 @@
 #include """"nsIWebNavigation.h""""
 #include """"nsIDocShell.h""""
 #include """"nsIContentViewer.h""""
+#include """"nsIXPConnect.h""""
+#include """"nsContentUtils.h""""
+#include """"nsJSUtils.h""""
 
 
 class nsJSThunk : public nsIInputStream
@@ -194,6 +197,8 @@ nsresult nsJSThunk::EvaluateScript(nsIChannel *aChannel)
     if (NS_FAILED(rv))
         return rv;
 
+    PRBool useSandbox = PR_TRUE;
+
     if (owner) {
         principal = do_QueryInterface(owner, &rv);
         NS_ASSERTION(principal, """"Channel's owner is not a principal"""");
@@ -215,49 +220,84 @@ nsresult nsJSThunk::EvaluateScript(nsIChannel *aChannel)
         if (principal != systemPrincipal) {
             rv = securityManager->CheckSameOriginPrincipal(principal,
                                                            objectPrincipal);
-            if (NS_FAILED(rv)) {
-                nsCOMPtr<nsIConsoleService> console =
-                    do_GetService(""""@mozilla.org/consoleservice;1"""");
-                if (console) {
-                    // XXX Localize me!
-                    console->LogStringMessage(
-                        NS_LITERAL_STRING(""""Attempt to load a javascript: URL from one host\nin a window displaying content from another host\nwas blocked by the security manager."""").get());
-                }
-
-                return NS_ERROR_DOM_RETVAL_UNDEFINED;
+            if (NS_SUCCEEDED(rv)) {
+                useSandbox = PR_FALSE;
             }
-        }
-    }
-    else {
-        // No owner from channel, use the null principal for lack of anything
-        // better.  Note that we do not use the object principal here because
-        // that would give the javascript: URL the principals of whatever page
-        // we might be remotely associated with, which is a good recipe for XSS
-        // issues.
-        principal = do_CreateInstance(""""@mozilla.org/nullprincipal;1"""", &rv);
-
-        if (NS_FAILED(rv) || !principal) {
-            return NS_ERROR_FAILURE;
+        } else {
+            useSandbox = PR_FALSE;
         }
     }
 
-    // Finally, we have everything needed to evaluate the expression.
     nsString result;
-    PRBool bIsUndefined;
+    PRBool isUndefined;
+
+    // Finally, we have everything needed to evaluate the expression.
+
+    if (useSandbox) {
+        // No owner from channel, or we have a principal
+        // mismatch. Evaluate the javascript URL in a sandbox to
+        // prevent it from accessing data it doesn't have permissions
+        // to access.
+
+        nsIXPConnect *xpc = nsContentUtils::XPConnect();
+
+        JSContext *cx = (JSContext*)scriptContext->GetNativeContext();
+        nsCOMPtr<nsIXPConnectJSObjectHolder> sandbox;
+        rv = xpc->CreateSandbox(cx, principal, getter_AddRefs(sandbox));
+        NS_ENSURE_SUCCESS(rv, rv);
+
+        jsval rval = JSVAL_VOID;
+        nsAutoGCRoot root(&rval, &rv);
+        if (NS_FAILED(rv)) {
+            return rv;
+        }
+
+        rv = xpc->EvalInSandboxObject(NS_ConvertUTF8toUTF16(script), cx,
+                                      sandbox, &rval);
+
+        // Propagate and report exceptions that happened in the
+        // sandbox.
+        if (JS_IsExceptionPending(cx)) {
+            JS_ReportPendingException(cx);
+        }
+
+        isUndefined = rval == JSVAL_VOID;
 
-    rv = scriptContext->EvaluateString(NS_ConvertUTF8toUTF16(script),
-                                       globalJSObject, // obj
-                                       principal,
-                                       url.get(),      // url
-                                       1,              // line no
-                                       nsnull,
-                                       &result,
-                                       &bIsUndefined);
+        if (!isUndefined && NS_SUCCEEDED(rv)) {
+            JSAutoRequest ar(cx);
+
+            JSString *str = JS_ValueToString(cx, rval);
+            if (!str) {
+                // Report any pending exceptions.
+                if (JS_IsExceptionPending(cx)) {
+                    JS_ReportPendingException(cx);
+                }
+
+                // We don't know why this failed, so just use a
+                // generic error code. It'll be translated to a
+                // different one below anyways.
+                rv = NS_ERROR_FAILURE;
+            } else {
+                result = nsDependentJSString(str);
+            }
+        }
+    } else {
+        // No need to use the sandbox, evaluate the script directly in
+        // the given scope.
+        rv = scriptContext->EvaluateString(NS_ConvertUTF8toUTF16(script),
+                                           globalJSObject, // obj
+                                           principal,
+                                           url.get(),      // url
+                                           1,              // line no
+                                           nsnull,
+                                           &result,
+                                           &isUndefined);
+    }
 
     if (NS_FAILED(rv)) {
         rv = NS_ERROR_MALFORMED_URI;
     }
-    else if (bIsUndefined) {
+    else if (isUndefined) {
         rv = NS_ERROR_DOM_RETVAL_UNDEFINED;
     }
     else {
@@ -270,6 +310,7 @@ nsresult nsJSThunk::EvaluateScript(nsIChannel *aChannel)
         else
             rv = NS_ERROR_OUT_OF_MEMORY;
     }
+
     return rv;
 }
 
diff --git a/js/src/xpconnect/idl/nsIXPConnect.idl b/js/src/xpconnect/idl/nsIXPConnect.idl
index 47e2b07..d6840d0 100644
--- a/js/src/xpconnect/idl/nsIXPConnect.idl
+++ b/js/src/xpconnect/idl/nsIXPConnect.idl
@@ -147,12 +147,7 @@ interface nsIXPConnect;
 interface nsIXPConnectWrappedNative;
 interface nsIInterfaceInfo;
 interface nsIXPCSecurityManager;
-
-%{C++
-#ifndef XPCONNECT_STANDALONE
-class nsIPrincipal;
-#endif
-%}
+interface nsIPrincipal;
 
 /***************************************************************************/
 [uuid(8916a320-d118-11d3-8f3a-0010a4e73d9a)]
@@ -464,7 +459,7 @@ interface nsIXPCFunctionThisTranslator : nsISupports
     { 0xbd, 0xd6, 0x0, 0x0, 0x64, 0x65, 0x73, 0x74 } }
 %}
 
-[uuid(038ce87f-c178-4d3a-9824-f71effc63aef)]
+[uuid(0f2f96c2-0a66-4677-a3d8-ebb907e9b780)]
 interface nsIXPConnect : nsISupports
 {
 %{ C++
@@ -705,4 +700,32 @@ interface nsIXPConnect : nsISupports
                                        in JSObjectPtr  aScope,
                                        in nsIClassInfo aClassInfo,
                                        in nsIXPConnectJSObjectHolder aPrototype);
+
+    /**
+     * Create a sandbox for evaluating code in isolation using
+     * evalInSandboxObject().
+     *
+     * @param cx A context to use when creating the sandbox object.
+     * @param principal The principal (or NULL to use the null principal)
+     *                  to use when evaluating code in this sandbox.
+     */
+    [noscript] nsIXPConnectJSObjectHolder createSandbox(in JSContextPtr cx,
+                                                        in nsIPrincipal principal);
+
+    /**
+     * Evaluate script in a sandbox, completely isolated from all
+     * other running scripts.
+     *
+     * @param source The source of the script to evaluate.
+     * @param cx The context to use when setting up the evaluation of
+     *           the script. The actual evaluation will happen on a new
+     *           temporary context.
+     * @param sandbox The sandbox object to evaluate the script in.
+     * @return The result of the evaluation as a jsval. If the caller
+     *         intends to use the return value from this call the caller
+     *         is responsible for rooting the jsval before making a call
+     *         to this method.
+     */
+    [noscript] JSVal evalInSandboxObject(in AString source, in JSContextPtr cx,
+                                         in nsIXPConnectJSObjectHolder sandbox);
 };
diff --git a/js/src/xpconnect/src/nsXPConnect.cpp b/js/src/xpconnect/src/nsXPConnect.cpp
index 9a30787..aa07bdf 100644
--- a/js/src/xpconnect/src/nsXPConnect.cpp
+++ b/js/src/xpconnect/src/nsXPConnect.cpp
@@ -1182,6 +1182,57 @@ nsXPConnect::RestoreWrappedNativePrototype(JSContext * aJSContext,
     return NS_OK;
 }
 
+NS_IMETHODIMP
+nsXPConnect::CreateSandbox(JSContext *cx, nsIPrincipal *principal,
+                           nsIXPConnectJSObjectHolder **_retval)
+{
+#ifdef XPCONNECT_STANDALONE
+    return NS_ERROR_NOT_AVAILABLE;
+#else /* XPCONNECT_STANDALONE */
+    XPCCallContext ccx(NATIVE_CALLER, cx);
+    if(!ccx.IsValid())
+        return UnexpectedFailure(NS_ERROR_FAILURE);
+
+    *_retval = nsnull;
+
+    jsval rval = JSVAL_VOID;
+    AUTO_MARK_JSVAL(ccx, &rval);
+
+    nsresult rv = xpc_CreateSandboxObject(cx, &rval, principal);
+    NS_ASSERTION(NS_FAILED(rv) || !JSVAL_IS_PRIMITIVE(rval),
+                 """"Bad return value from xpc_CreateSandboxObject()!"""");
+
+    if (NS_SUCCEEDED(rv) && !JSVAL_IS_PRIMITIVE(rval)) {
+        *_retval = XPCJSObjectHolder::newHolder(cx, JSVAL_TO_OBJECT(rval));
+        NS_ENSURE_TRUE(*_retval, NS_ERROR_OUT_OF_MEMORY);
+
+        NS_ADDREF(*_retval);
+    }
+
+    return rv;
+#endif /* XPCONNECT_STANDALONE */
+}
+
+NS_IMETHODIMP
+nsXPConnect::EvalInSandboxObject(const nsAString& source, JSContext *cx,
+                                 nsIXPConnectJSObjectHolder *sandbox,
+                                 jsval *rval)
+{
+#ifdef XPCONNECT_STANDALONE
+    return NS_ERROR_NOT_AVAILABLE;
+#else /* XPCONNECT_STANDALONE */
+    if (!sandbox)
+        return NS_ERROR_INVALID_ARG;
+
+    JSObject *obj;
+    nsresult rv = sandbox->GetJSObject(&obj);
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    return xpc_EvalInSandbox(cx, obj, source,
+                             NS_ConvertUTF16toUTF8(source).get(), 1, rval);
+#endif /* XPCONNECT_STANDALONE */
+}
+
 /* nsIXPConnectJSObjectHolder getWrappedNativePrototype (in JSContextPtr aJSContext, in JSObjectPtr aScope, in nsIClassInfo aClassInfo); */
 NS_IMETHODIMP 
 nsXPConnect::GetWrappedNativePrototype(JSContext * aJSContext, 
diff --git a/js/src/xpconnect/src/xpccomponents.cpp b/js/src/xpconnect/src/xpccomponents.cpp
index 0596476..67232eb 100644
--- a/js/src/xpconnect/src/xpccomponents.cpp
+++ b/js/src/xpconnect/src/xpccomponents.cpp
@@ -2666,6 +2666,9 @@ public:
     virtual ~nsXPCComponents_utils_Sandbox();
 
 private:
+    // XXXjst: This method (and other CallOrConstruct()'s in this
+    // file) doesn't need to be virtual, could even be a static
+    // method!
     NS_METHOD CallOrConstruct(nsIXPConnectWrappedNative *wrapper,
                               JSContext * cx, JSObject * obj,
                               PRUint32 argc, jsval * argv,
@@ -3145,6 +3148,77 @@ NS_IMPL_THREADSAFE_RELEASE(nsXPCComponents_utils_Sandbox)
 #define XPC_MAP_FLAGS               0
 #include """"xpc_map_end.h"""" /* This #undef's the above. */
 
+#ifndef XPCONNECT_STANDALONE
+nsresult
+xpc_CreateSandboxObject(JSContext * cx, jsval * vp, nsISupports *prinOrSop)
+{
+    // Create the sandbox global object
+    nsresult rv;
+    nsCOMPtr<nsIXPConnect> xpc(do_GetService(nsIXPConnect::GetCID(), &rv));
+    if(NS_FAILED(rv))
+        return NS_ERROR_XPC_UNEXPECTED;
+
+    XPCAutoJSContext tempcx(JS_NewContext(JS_GetRuntime(cx), 1024), PR_FALSE);
+    if (!tempcx)
+        return NS_ERROR_OUT_OF_MEMORY;
+
+    AutoJSRequestWithNoCallContext req(tempcx);
+    JSObject *sandbox = JS_NewObject(tempcx, &SandboxClass, nsnull, nsnull);
+    if (!sandbox)
+        return NS_ERROR_XPC_UNEXPECTED;
+
+    JS_SetGlobalObject(tempcx, sandbox);
+
+    nsCOMPtr<nsIScriptObjectPrincipal> sop(do_QueryInterface(prinOrSop));
+
+    if (!sop) {
+        nsCOMPtr<nsIPrincipal> principal(do_QueryInterface(prinOrSop));
+
+        if (!principal) {
+            principal = do_CreateInstance(""""@mozilla.org/nullprincipal;1"""", &rv);
+            NS_ASSERTION(NS_FAILED(rv) || principal,
+                         """"Bad return from do_CreateInstance"""");
+
+            if (!principal || NS_FAILED(rv)) {
+                if (NS_SUCCEEDED(rv))
+                    rv = NS_ERROR_FAILURE;
+                
+                return rv;
+            }
+        }
+
+        sop = new PrincipalHolder(principal);
+        if (!sop)
+            return NS_ERROR_OUT_OF_MEMORY;
+    }
+
+    // Pass on ownership of sop to |sandbox|.
+
+    {
+        nsIScriptObjectPrincipal *tmp = sop;
+
+        if (!JS_SetPrivate(cx, sandbox, tmp)) {
+            return NS_ERROR_XPC_UNEXPECTED;
+        }
+
+        NS_ADDREF(tmp);
+    }
+
+    rv = xpc->InitClasses(cx, sandbox);
+    if (NS_SUCCEEDED(rv) &&
+        !JS_DefineFunctions(cx, sandbox, SandboxFunctions)) {
+        rv = NS_ERROR_FAILURE;
+    }
+    if (NS_FAILED(rv))
+        return NS_ERROR_XPC_UNEXPECTED;
+
+    if (vp)
+        *vp = OBJECT_TO_JSVAL(sandbox);
+
+    return NS_OK;
+}
+#endif /* !XPCONNECT_STANDALONE */
+
 /* PRBool call(in nsIXPConnectWrappedNative wrapper,
                in JSContextPtr cx,
                in JSObjectPtr obj,
@@ -3191,29 +3265,16 @@ nsXPCComponents_utils_Sandbox::CallOrConstruct(nsIXPConnectWrappedNative *wrappe
 {
 #ifdef XPCONNECT_STANDALONE
     return NS_ERROR_NOT_AVAILABLE;
-#else
+#else /* XPCONNECT_STANDALONE */
     if (argc < 1)
         return ThrowAndFail(NS_ERROR_XPC_NOT_ENOUGH_ARGS, cx, _retval);
 
-    // Create the sandbox global object
     nsresult rv;
-    nsCOMPtr<nsIXPConnect> xpc(do_GetService(nsIXPConnect::GetCID(), &rv));
-    if(NS_FAILED(rv))
-        return ThrowAndFail(NS_ERROR_XPC_UNEXPECTED, cx, _retval);
-
-    XPCAutoJSContext tempcx(JS_NewContext(JS_GetRuntime(cx), 1024), PR_FALSE);
-    if (!tempcx)
-        return ThrowAndFail(NS_ERROR_OUT_OF_MEMORY, cx, _retval);
-
-    AutoJSRequestWithNoCallContext req(tempcx);
-    JSObject *sandbox = JS_NewObject(tempcx, &SandboxClass, nsnull, nsnull);
-    if (!sandbox)
-        return ThrowAndFail(NS_ERROR_XPC_UNEXPECTED, cx, _retval);
-
-    JS_SetGlobalObject(tempcx, sandbox);
 
     // Make sure to set up principals on the sandbox before initing classes
-    nsIScriptObjectPrincipal *sop = nsnull;
+    nsCOMPtr<nsIScriptObjectPrincipal> sop;
+    nsCOMPtr<nsIPrincipal> principal;
+    nsISupports *prinOrSop = nsnull;
     if (JSVAL_IS_STRING(argv[0])) {
         JSString *codebasestr = JSVAL_TO_STRING(argv[0]);
         nsCAutoString codebase(JS_GetStringBytes(codebasestr),
@@ -3224,13 +3285,12 @@ nsXPCComponents_utils_Sandbox::CallOrConstruct(nsIXPConnectWrappedNative *wrappe
         if (!stdUrl ||
             NS_FAILED(rv = stdUrl->Init(nsIStandardURL::URLTYPE_STANDARD, 80,
                                         codebase, nsnull, nsnull)) ||
-           !(iURL = do_QueryInterface(stdUrl, &rv))) {
+            !(iURL = do_QueryInterface(stdUrl, &rv))) {
             if (NS_SUCCEEDED(rv))
                 rv = NS_ERROR_FAILURE;
             return ThrowAndFail(rv, cx, _retval);
         }
-        
-        nsCOMPtr<nsIPrincipal> principal;
+
         nsCOMPtr<nsIScriptSecurityManager> secman =
             do_GetService(kScriptSecurityManagerContractID);
         if (!secman ||
@@ -3241,52 +3301,37 @@ nsXPCComponents_utils_Sandbox::CallOrConstruct(nsIXPConnectWrappedNative *wrappe
             return ThrowAndFail(rv, cx, _retval);
         }
 
-        sop = new PrincipalHolder(principal);
-        if (!sop)
-            return ThrowAndFail(NS_ERROR_OUT_OF_MEMORY, cx, _retval);
-
-        NS_ADDREF(sop);
+        prinOrSop = principal;
     } else {
         if (!JSVAL_IS_PRIMITIVE(argv[0])) {
+            nsCOMPtr<nsIXPConnect> xpc(do_GetService(nsIXPConnect::GetCID()));
+            if(!xpc)
+                return NS_ERROR_XPC_UNEXPECTED;
             nsCOMPtr<nsIXPConnectWrappedNative> wrapper;
             xpc->GetWrappedNativeOfJSObject(cx, JSVAL_TO_OBJECT(argv[0]),
                                             getter_AddRefs(wrapper));
 
             if (wrapper) {
-                nsCOMPtr<nsIDOMWindow> win = do_QueryWrappedNative(wrapper);
-                if (win)
-                    CallQueryInterface(win, &sop);
+                sop = do_QueryWrappedNative(wrapper);
+
+                prinOrSop = sop;
             }
         }
 
-        if (!sop)
+        if (!prinOrSop)
             return ThrowAndFail(NS_ERROR_INVALID_ARG, cx, _retval);
-
-        // Note: if we're here, then sop has been AddRef'd by CallQueryInterface
-    }
-
-    if (!JS_SetPrivate(cx, sandbox, sop)) {
-        NS_RELEASE(sop);
-        return ThrowAndFail(NS_ERROR_XPC_UNEXPECTED, cx, _retval);
     }
 
-    // After this point |sop| will be released when |sandbox| is
-    // finalized, so no need to worry about it from now on.
+    rv = xpc_CreateSandboxObject(cx, vp, prinOrSop);
 
-    rv = xpc->InitClasses(cx, sandbox);
-    if (NS_SUCCEEDED(rv) &&
-        !JS_DefineFunctions(cx, sandbox, SandboxFunctions)) {
-        rv = NS_ERROR_FAILURE;
+    if (NS_FAILED(rv)) {
+        return ThrowAndFail(rv, cx, _retval);
     }
-    if (NS_FAILED(rv))
-        return ThrowAndFail(NS_ERROR_XPC_UNEXPECTED, cx, _retval);
 
-    if (vp)
-        *vp = OBJECT_TO_JSVAL(sandbox);
+    *_retval = PR_TRUE;
 
-    *_retval = JS_TRUE;
-    return NS_OK;
-#endif
+    return rv;
+#endif /* XPCONNECT_STANDALONE */
 }
 
 class ContextHolder : public nsISupports
@@ -3327,7 +3372,7 @@ nsXPCComponents_Utils::EvalInSandbox(const nsAString &source)
 {
 #ifdef XPCONNECT_STANDALONE
     return NS_ERROR_NOT_AVAILABLE;
-#else
+#else /* XPCONNECT_STANDALONE */
     nsresult rv;
 
     nsCOMPtr<nsIXPConnect> xpc(do_GetService(nsIXPConnect::GetCID(), &rv));
@@ -3369,6 +3414,38 @@ nsXPCComponents_Utils::EvalInSandbox(const nsAString &source)
     if (JSVAL_IS_PRIMITIVE(argv[1]))
         return NS_ERROR_INVALID_ARG;
     JSObject *sandbox = JSVAL_TO_OBJECT(argv[1]);
+
+    // Get the current source info from xpc.
+    nsXPIDLCString filename;
+    PRInt32 lineNo = 0;
+    {
+        nsCOMPtr<nsIStackFrame> frame;
+        xpc->GetCurrentJSStack(getter_AddRefs(frame));
+        if (frame) {
+            frame->GetFilename(getter_Copies(filename));
+            frame->GetLineNumber(&lineNo);
+        }
+    }
+
+    rv = xpc_EvalInSandbox(cx, sandbox, source, filename.get(), lineNo, rval);
+
+    if (NS_SUCCEEDED(rv)) {
+        if (JS_IsExceptionPending(cx)) {
+            cc->SetExceptionWasThrown(PR_TRUE);
+        } else {
+            cc->SetReturnValueWasSet(PR_TRUE);
+        }
+    }
+
+    return rv;
+#endif /* XPCONNECT_STANDALONE */
+}
+
+#ifndef XPCONNECT_STANDALONE
+nsresult
+xpc_EvalInSandbox(JSContext *cx, JSObject *sandbox, const nsAString& source,
+                  const char *filename, PRInt32 lineNo, jsval *rval)
+{
     if (JS_GetClass(cx, sandbox) != &SandboxClass)
         return NS_ERROR_INVALID_ARG;
 
@@ -3393,8 +3470,7 @@ nsXPCComponents_Utils::EvalInSandbox(const nsAString &source)
     }
 
     XPCPerThreadData *data = XPCPerThreadData::GetData();
-    XPCJSContextStack *stack;
-    PRBool popContext = PR_FALSE;
+    XPCJSContextStack *stack = nsnull;
     if (data && (stack = data->GetJSContextStack())) {
         if (NS_FAILED(stack->Push(sandcx->GetJSContext()))) {
             JS_ReportError(cx,
@@ -3402,55 +3478,44 @@ nsXPCComponents_Utils::EvalInSandbox(const nsAString &source)
             JSPRINCIPALS_DROP(cx, jsPrincipals);
             return NS_ERROR_FAILURE;
         }
-
-        popContext = PR_TRUE;
     }
 
-    // Get the current source info from xpc. Use the codebase as a fallback,
-    // though.
-    nsXPIDLCString filename;
-    PRInt32 lineNo = 0;
-    {
-        nsCOMPtr<nsIStackFrame> frame;
-        xpc->GetCurrentJSStack(getter_AddRefs(frame));
-        if (frame) {
-            frame->GetFilename(getter_Copies(filename));
-            frame->GetLineNumber(&lineNo);
-        } else {
-            filename.Assign(jsPrincipals->codebase);
-            lineNo = 1;
-        }
+    if (!filename) {
+        // Default the filename to the codebase.
+        filename = jsPrincipals->codebase;
+        lineNo = 1;
     }
 
+    nsresult rv = NS_OK;
+
     AutoJSRequestWithNoCallContext req(sandcx->GetJSContext());
     if (!JS_EvaluateUCScriptForPrincipals(sandcx->GetJSContext(), sandbox,
                                           jsPrincipals,
                                           NS_REINTERPRET_CAST(const jschar *,
                                               PromiseFlatString(source).get()),
-                                          source.Length(), filename.get(),
-                                          lineNo, rval)) {
+                                          source.Length(), filename, lineNo,
+                                          rval)) {
         jsval exn;
         if (JS_GetPendingException(sandcx->GetJSContext(), &exn)) {
             AutoJSSuspendRequestWithNoCallContext sus(sandcx->GetJSContext());
             AutoJSRequestWithNoCallContext cxreq(cx);
 
             JS_SetPendingException(cx, exn);
-            cc->SetExceptionWasThrown(PR_TRUE);
         } else {
             rv = NS_ERROR_OUT_OF_MEMORY;
         }
-    } else {
-        cc->SetReturnValueWasSet(PR_TRUE);
     }
 
-    if (popContext) {
+    if (stack) {
         stack->Pop(nsnull);
     }
 
     JSPRINCIPALS_DROP(cx, jsPrincipals);
+
     return rv;
-#endif /* !XPCONNECT_STANDALONE */
 }
+#endif /* !XPCONNECT_STANDALONE */
+
 
 #ifdef XPC_USE_SECURITY_CHECKED_COMPONENT
 /* string canCreateWrapper (in nsIIDPtr iid); */
diff --git a/js/src/xpconnect/src/xpcprivate.h b/js/src/xpconnect/src/xpcprivate.h
index bd0ee5e..3dddfa6 100644
--- a/js/src/xpconnect/src/xpcprivate.h
+++ b/js/src/xpconnect/src/xpcprivate.h
@@ -3615,6 +3615,31 @@ JSBool xpc_IsReportableErrorCode(nsresult code);
 JSObject* xpc_CloneJSFunction(XPCCallContext &ccx, JSObject *funobj,
                               JSObject *parent);
 
+#ifndef XPCONNECT_STANDALONE
+
+// Helper for creating a sandbox object to use for evaluating
+// untrusted code completely separated from all other code in the
+// system using xpc_EvalInSandbox(). Takes the JSContext on which to
+// do setup etc on, puts the sandbox object in *vp (which must be
+// rooted by the caller), and uses the principal that's either
+// directly passed in prinOrSop or indirectly as an
+// nsIScriptObjectPrincipal holding the principal. If no principal is
+// reachable through prinOrSop, a new null principal will be created
+// and used.
+nsresult
+xpc_CreateSandboxObject(JSContext * cx, jsval * vp, nsISupports *prinOrSop);
+
+// Helper for evaluating scripts in a sandbox object created with
+// xpc_CreateSandboxObject(). The caller is responsible of ensuring
+// that *rval doesn't get collected during the call or usage after the
+// call. This helper will use filename and lineNo for error reporting,
+// and if no filename is provided it will use the codebase from the
+// principal and line number 1 as a fallback.
+nsresult
+xpc_EvalInSandbox(JSContext *cx, JSObject *sandbox, const nsAString& source,
+                  const char *filename, PRInt32 lineNo, jsval *rval);
+#endif /* !XPCONNECT_STANDALONE */
+
 /***************************************************************************/
 // Inlined utilities.
 """
cf45aae705d237197f7ad4b82c24cc2c240d86d9,110550,353165,igor.bukanov%gmail.com,"fix for bug=353165, r=brendan
",1158700416,"""diff --git a/js/src/jsxml.c b/js/src/jsxml.c
index 37d67b7..4d8260f 100644
--- a/js/src/jsxml.c
+++ b/js/src/jsxml.c
@@ -3930,26 +3930,24 @@ out:
 static JSBool
 GetFunction(JSContext *cx, JSObject *obj, JSXML *xml, jsid id, jsval *vp)
 {
-    jsval fval;
     JSFunction *fun;
 
     do {
         /* XXXbe really want a separate scope for function::*. */
-        if (!js_GetProperty(cx, obj, id, &fval))
+        if (!js_GetProperty(cx, obj, id, vp))
             return JS_FALSE;
-        if (VALUE_IS_FUNCTION(cx, fval)) {
+        if (VALUE_IS_FUNCTION(cx, *vp)) {
             if (xml && OBJECT_IS_XML(cx, obj)) {
-                fun = (JSFunction *) JS_GetPrivate(cx, JSVAL_TO_OBJECT(fval));
+                fun = (JSFunction *) JS_GetPrivate(cx, JSVAL_TO_OBJECT(*vp));
                 if (!FUN_INTERPRETED(fun) && fun->u.n.spare &&
                     (fun->u.n.spare & CLASS_TO_MASK(xml->xml_class)) == 0) {
                     /* XML method called on XMLList or vice versa. */
-                    fval = JSVAL_VOID;
+                    *vp = JSVAL_VOID;
                 }
             }
             break;
         }
     } while ((obj = OBJ_GET_PROTO(cx, obj)) != NULL);
-    *vp = fval;
     return JS_TRUE;
 }
 
@@ -5250,45 +5248,70 @@ again:
     }
 }
 
+/*
+ * 11.2.2.1 Step 3(d) onward.
+ */
 static JSObject *
 xml_getMethod(JSContext *cx, JSObject *obj, jsid id, jsval *vp)
 {
     JSXML *xml;
-    jsval fval;
+    JSTempValueRooter tvr;
+    jsval roots[2];
+    enum {
+        FUN_ROOT = 0,
+        OBJ_ROOT = 1
+    };
 
     JS_ASSERT(JS_InstanceOf(cx, obj, &js_XMLClass, NULL));
     xml = (JSXML *) JS_GetPrivate(cx, obj);
+    memset(roots, 0, sizeof(roots));
+    JS_PUSH_TEMP_ROOT(cx, JS_ARRAY_LENGTH(roots), roots, &tvr);
 
-retry:
-    /* 11.2.2.1 Step 3(d) onward. */
-    if (!GetFunction(cx, obj, xml, id, &fval))
-        return NULL;
-
-    if (JSVAL_IS_VOID(fval) && OBJECT_IS_XML(cx, obj)) {
+    /* From this point the control must flow through out: or bad: */
+  retry:
+    if (!GetFunction(cx, obj, xml, id, &roots[FUN_ROOT]))
+        goto bad;
+    if (JSVAL_IS_VOID(roots[FUN_ROOT]) && OBJECT_IS_XML(cx, obj)) {
         if (xml->xml_class == JSXML_CLASS_LIST) {
             if (xml->xml_kids.length == 1) {
                 xml = XMLARRAY_MEMBER(&xml->xml_kids, 0, JSXML);
                 obj = js_GetXMLObject(cx, xml);
                 if (!obj)
-                    return NULL;
+                    goto bad;
+                roots[OBJ_ROOT] = OBJECT_TO_JSVAL(obj);
                 goto retry;
             }
         } else if (HasSimpleContent(xml)) {
             JSString *str;
-            JSObject *tmp;
 
             str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));
-            if (!str || !js_ValueToObject(cx, STRING_TO_JSVAL(str), &tmp))
-                return NULL;
-            if (!js_GetProperty(cx, tmp, id, &fval))
-                return NULL;
-            if (!JSVAL_IS_VOID(fval))
-                obj = tmp;
+            if (!str)
+                goto bad;
+            if (!js_ValueToObject(cx, STRING_TO_JSVAL(str), &obj))
+                goto bad;
+            roots[OBJ_ROOT] = OBJECT_TO_JSVAL(obj);
+            if (!js_GetProperty(cx, obj, id, &roots[FUN_ROOT]))
+                goto bad;
         }
     }
-
-    *vp = fval;
+  out:
+    *vp = roots[FUN_ROOT];
+    if (obj) {
+        /*
+         * If we just POP tvr, then it is possible that nothing roots obj, see
+         * bug 353165. To allow our callers to assume at least weakly rooting
+         * of the result, we root obj via newborn array. Similarly we root the
+         * value of roots[FUNCTION] since getMethod callers have a bad habit
+         * of passing a pointer to unrooted local value as vp.
+         */
+        cx->newborn[GCX_OBJECT] = (JSGCThing *)obj;
+        cx->lastInternalResult = roots[FUN_ROOT];
+    }
+    JS_POP_TEMP_ROOT(cx, &tvr);
     return obj;
+  bad:
+    obj = NULL;
+    goto out;
 }
 
 static JSBool"""
a539bef51f57ae3791f1a767a2ca2ea40f15a25f,110563,352064,pedemont%us.ibm.com,"Bug 352064 - Error finalizing JS objects causes LiveConnect crash. patch by smichaud, r=jhpedemonte, sr=brendan.
",1158692209,"""diff --git a/js/src/liveconnect/jsj_JavaObject.c b/js/src/liveconnect/jsj_JavaObject.c
index 5cd0ae3..85cb2bd 100644
--- a/js/src/liveconnect/jsj_JavaObject.c
+++ b/js/src/liveconnect/jsj_JavaObject.c
@@ -99,7 +99,8 @@ static JSBool JS_DLL_CALLBACK jsj_GC_callback(JSContext *cx, JSGCStatus status)
             JavaObjectWrapper* java_wrapper = deferred_wrappers;
             while (java_wrapper) {
                 deferred_wrappers = java_wrapper->u.next;
-                (*jEnv)->DeleteGlobalRef(jEnv, java_wrapper->java_obj);
+                if (java_wrapper->java_obj)
+                    (*jEnv)->DeleteGlobalRef(jEnv, java_wrapper->java_obj);
                 jsj_ReleaseJavaClassDescriptor(cx, jEnv, java_wrapper->class_descriptor);
                 JS_free(cx, java_wrapper);
                 java_wrapper = deferred_wrappers;
@@ -300,10 +301,6 @@ JavaObject_finalize(JSContext *cx, JSObject *obj)
         return;
     java_obj = java_wrapper->java_obj;
 
-    jsj_env = jsj_EnterJava(cx, &jEnv);
-    if (!jEnv)
-        return;
-
     if (java_obj) {
         remove_java_obj_reflection_from_hashtable(java_obj, java_wrapper->u.hash_code);
 
@@ -311,11 +308,16 @@ JavaObject_finalize(JSContext *cx, JSObject *obj)
         java_wrapper->u.next = deferred_wrappers;
         deferred_wrappers = java_wrapper;
     } else {
-        jsj_ReleaseJavaClassDescriptor(cx, jEnv, java_wrapper->class_descriptor);
-        JS_free(cx, java_wrapper);
+        jsj_env = jsj_EnterJava(cx, &jEnv);
+        if (jEnv) {
+            jsj_ReleaseJavaClassDescriptor(cx, jEnv, java_wrapper->class_descriptor);
+            JS_free(cx, java_wrapper);
+            jsj_ExitJava(jsj_env);
+        } else {
+            java_wrapper->u.next = deferred_wrappers;
+            deferred_wrappers = java_wrapper;
+        }
     }
-
-    jsj_ExitJava(jsj_env);
 }
 
 /* Trivial helper for jsj_DiscardJavaObjReflections(), below */"""
03e85752133bc6429cb094b331fdc8de4631f826,110594,352846,igor.bukanov%gmail.com,"making sure thta TryMethod deals xml objects properly. bug=352846 r=brendan
",1158648505,"""diff --git a/js/src/js.c b/js/src/js.c
index d1dd954..54cc05d 100644
--- a/js/src/js.c
+++ b/js/src/js.c
@@ -706,10 +706,6 @@ Quit(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     return JS_FALSE;
 }
 
-#ifdef GC_MARK_DEBUG
-extern JS_FRIEND_DATA(FILE *) js_DumpGCHeap;
-#endif
-
 static JSBool
 GC(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
diff --git a/js/src/jsarray.c b/js/src/jsarray.c
index 5c632dd..338cdaa 100644
--- a/js/src/jsarray.c
+++ b/js/src/jsarray.c
@@ -164,24 +164,28 @@ ValueIsLength(JSContext *cx, jsval v, jsuint *lengthp)
 JSBool
 js_GetLengthProperty(JSContext *cx, JSObject *obj, jsuint *lengthp)
 {
+    JSTempValueRooter tvr;
     jsid id;
+    JSBool ok;
     jsint i;
-    jsval v;
 
+    JS_PUSH_SINGLE_TEMP_ROOT(cx, JSVAL_NULL, &tvr);
     id = ATOM_TO_JSID(cx->runtime->atomState.lengthAtom);
-    if (!OBJ_GET_PROPERTY(cx, obj, id, &v))
-        return JS_FALSE;
-
-    /* Short-circuit, because js_ValueToECMAUint32 fails when
-     * called during init time.
-     */
-    if (JSVAL_IS_INT(v)) {
-        i = JSVAL_TO_INT(v);
-        /* jsuint cast does ToUint32. */
-        *lengthp = (jsuint)i;
-        return JS_TRUE;
+    ok = OBJ_GET_PROPERTY(cx, obj, id, &tvr.u.value);
+    if (ok) {
+        /*
+         * Short-circuit, because js_ValueToECMAUint32 fails when called
+         * during init time.
+         */
+        if (JSVAL_IS_INT(tvr.u.value)) {
+            i = JSVAL_TO_INT(tvr.u.value);
+            *lengthp = (jsuint)i;       /* jsuint cast does ToUint32 */
+        } else {
+            ok = js_ValueToECMAUint32(cx, tvr.u.value, (uint32 *)lengthp);
+        }
     }
-    return js_ValueToECMAUint32(cx, v, (uint32 *)lengthp);
+    JS_POP_TEMP_ROOT(cx, &tvr);
+    return ok;
 }
 
 static JSBool
@@ -345,17 +349,19 @@ JSBool
 js_HasLengthProperty(JSContext *cx, JSObject *obj, jsuint *lengthp)
 {
     JSErrorReporter older;
+    JSTempValueRooter tvr;
     jsid id;
     JSBool ok;
-    jsval v;
 
     older = JS_SetErrorReporter(cx, NULL);
+    JS_PUSH_SINGLE_TEMP_ROOT(cx, JSVAL_NULL, &tvr);
     id = ATOM_TO_JSID(cx->runtime->atomState.lengthAtom);
-    ok = OBJ_GET_PROPERTY(cx, obj, id, &v);
+    ok = OBJ_GET_PROPERTY(cx, obj, id, &tvr.u.value);
     JS_SetErrorReporter(cx, older);
-    if (!ok)
-        return JS_FALSE;
-    return ValueIsLength(cx, v, lengthp);
+    if (ok)
+        ok = ValueIsLength(cx, tvr.u.value, lengthp);
+    JS_POP_TEMP_ROOT(cx, &tvr);
+    return ok;
 }
 
 JSBool
@@ -491,7 +497,8 @@ array_join_sub(JSContext *cx, JSObject *obj, enum ArrayToStringOp op,
     const jschar *sepstr;
     JSString *str;
     JSHashEntry *he;
-    JSObject *obj2;
+    JSTempValueRooter tvr;
+    JSAtom *atom;
     int stackDummy;
 
     if (!JS_CHECK_STACK_SIZE(cx, stackDummy)) {
@@ -592,14 +599,14 @@ array_join_sub(JSContext *cx, JSObject *obj, enum ArrayToStringOp op,
             str = cx->runtime->emptyString;
         } else {
             if (op == TO_LOCALE_STRING) {
-                if (!js_ValueToObject(cx, v, &obj2) ||
-                    !js_TryMethod(cx, obj2,
-                                  cx->runtime->atomState.toLocaleStringAtom,
-                                  0, NULL, &v)) {
-                    str = NULL;
-                } else {
-                    str = js_ValueToString(cx, v);
-                }
+                atom = cx->runtime->atomState.toLocaleStringAtom;
+                JS_PUSH_TEMP_ROOT_OBJECT(cx, NULL, &tvr);
+                ok = js_ValueToObject(cx, v, &tvr.u.object) &&
+                     js_TryMethod(cx, tvr.u.object, atom, 0, NULL, &v);
+                JS_POP_TEMP_ROOT(cx, &tvr);
+                if (!ok)
+                    goto done;
+                str = js_ValueToString(cx, v);
             } else if (op == TO_STRING) {
                 str = js_ValueToString(cx, v);
             } else {
@@ -967,15 +974,15 @@ sort_compare(void *arg, const void *a, const void *b, int *result)
         }
     } else {
         jsdouble cmp;
-        jsval rval, argv[2];
+        jsval argv[2];
 
         argv[0] = av;
         argv[1] = bv;
         ok = js_InternalCall(cx,
                              OBJ_GET_PARENT(cx, JSVAL_TO_OBJECT(fval)),
-                             fval, 2, argv, &rval);
+                             fval, 2, argv, ca->localroot);
         if (ok) {
-            ok = js_ValueToNumber(cx, rval, &cmp);
+            ok = js_ValueToNumber(cx, *ca->localroot, &cmp);
 
             /* Clamp cmp to -1, 0, 1. */
             if (ok) {
diff --git a/js/src/jscntxt.h b/js/src/jscntxt.h
index c5f0902..ce6b475 100644
--- a/js/src/jscntxt.h
+++ b/js/src/jscntxt.h
@@ -475,14 +475,27 @@ typedef struct JSTempValueRooter JSTempValueRooter;
 typedef void
 (* JS_DLL_CALLBACK JSTempValueMarker)(JSContext *cx, JSTempValueRooter *tvr);
 
+typedef union JSTempValueUnion {
+    jsval               value;
+    JSObject            *object;
+    JSTempValueMarker   marker;
+    jsval               *array;
+} JSTempValueUnion;
+
+/*
+ * The following allows to reinterpret JSTempValueUnion.object as jsval using
+ * the tagging property of a generic jsval described below.
+ */
+JS_STATIC_ASSERT(sizeof(JSTempValueUnion) == sizeof(jsval));
+JS_STATIC_ASSERT(sizeof(JSTempValueUnion) == sizeof(JSObject *));
+
 /*
  * Context-linked stack of temporary GC roots.
  *
- * If count is -1, then u.value contains the single value to root. If count is
- * -2, then u.marker holds a mark hook that is executed to mark the values.
- * Otherwise u.array points to a stack-allocated vector of jsvals.  Note that
- * the vector may have length 0 or 1 for full generality, so we need -1 to
- * discriminate the union.
+ * If count is -1, then u.value contains the single value to root.
+ * If count is -2, then u.marker holds a mark hook that is executed to mark
+ * the values.
+ * If count >= 0, then u.array points to a stack-allocated vector of jsvals.
  *
  * To root a single GC-thing pointer, which need not be tagged and stored as a
  * jsval, use JS_PUSH_SINGLE_TEMP_ROOT.  The (jsval)(val) cast works because a
@@ -498,16 +511,11 @@ typedef void
  * internal API (see further below) instead.
  */
 struct JSTempValueRooter {
-    JSTempValueRooter       *down;
-    jsint                   count;
-    union {
-        jsval               value;
-        jsval               *array;
-        JSTempValueMarker   marker;
-    } u;
+    JSTempValueRooter   *down;
+    ptrdiff_t           count;
+    JSTempValueUnion    u;
 };
 
-
 #define JS_PUSH_TEMP_ROOT_COMMON(cx,tvr)                                      \
     JS_BEGIN_MACRO                                                            \
         JS_ASSERT((cx)->tempValueRooters != (tvr));                           \
@@ -525,7 +533,8 @@ struct JSTempValueRooter {
 #define JS_PUSH_TEMP_ROOT(cx,cnt,arr,tvr)                                     \
     JS_BEGIN_MACRO                                                            \
         JS_PUSH_TEMP_ROOT_COMMON(cx, tvr);                                    \
-        (tvr)->count = (cnt);                                                 \
+        JS_ASSERT((ptrdiff_t)(cnt) >= 0);                                     \
+        (tvr)->count = (ptrdiff_t)(cnt);                                      \
         (tvr)->u.array = (arr);                                               \
     JS_END_MACRO
 
@@ -536,6 +545,13 @@ struct JSTempValueRooter {
         (tvr)->u.marker = (marker_);                                          \
     JS_END_MACRO
 
+#define JS_PUSH_TEMP_ROOT_OBJECT(cx,obj,tvr)                                  \
+    JS_BEGIN_MACRO                                                            \
+        JS_PUSH_TEMP_ROOT_COMMON(cx, tvr);                                    \
+        (tvr)->count = -3;                                                    \
+        (tvr)->u.object = (obj);                                              \
+    JS_END_MACRO
+
 #define JS_POP_TEMP_ROOT(cx,tvr)                                              \
     JS_BEGIN_MACRO                                                            \
         JS_ASSERT((cx)->tempValueRooters == (tvr));                           \
diff --git a/js/src/jsgc.c b/js/src/jsgc.c
index 83a2fb5..e478852 100644
--- a/js/src/jsgc.c
+++ b/js/src/jsgc.c
@@ -2816,6 +2816,7 @@ restart:
             } else if (tvr->count == -2) {
                 tvr->u.marker(cx, tvr);
             } else {
+                JS_ASSERT(tvr->count >= 0);
                 GC_MARK_JSVALS(cx, tvr->count, tvr->u.array, """"tvr->u.array"""");
             }
         }
diff --git a/js/src/jsgc.h b/js/src/jsgc.h
index 0d0c120..e53253e 100644
--- a/js/src/jsgc.h
+++ b/js/src/jsgc.h
@@ -228,6 +228,9 @@ js_MarkGCThing(JSContext *cx, void *thing);
 extern void
 js_MarkNamedGCThing(JSContext *cx, void *thing, const char *name);
 
+extern JS_FRIEND_DATA(FILE *) js_DumpGCHeap;
+JS_EXTERN_DATA(void *) js_LiveThingToFind;
+
 #else
 
 # define GC_MARK(cx, thing, name) js_MarkGCThing(cx, thing)
diff --git a/js/src/jsstr.c b/js/src/jsstr.c
index 4cf256b..950053d 100644
--- a/js/src/jsstr.c
+++ b/js/src/jsstr.c
@@ -2698,6 +2698,9 @@ js_ValueToString(JSContext *cx, jsval v)
 JS_FRIEND_API(JSString *)
 js_ValueToSource(JSContext *cx, jsval v)
 {
+    JSTempValueRooter tvr;
+    JSString *str;
+
     if (JSVAL_IS_STRING(v))
         return js_QuoteString(cx, JSVAL_TO_STRING(v), '""""');
     if (JSVAL_IS_PRIMITIVE(v)) {
@@ -2708,14 +2711,19 @@ js_ValueToSource(JSContext *cx, jsval v)
 
             return js_NewStringCopyN(cx, js_negzero_ucNstr, 2, 0);
         }
+        return js_ValueToString(cx, v);
+    }
+
+    JS_PUSH_SINGLE_TEMP_ROOT(cx, JSVAL_NULL, &tvr);
+    if (!js_TryMethod(cx, JSVAL_TO_OBJECT(v),
+                      cx->runtime->atomState.toSourceAtom,
+                      0, NULL, &tvr.u.value)) {
+        str = NULL;
     } else {
-        if (!js_TryMethod(cx, JSVAL_TO_OBJECT(v),
-                          cx->runtime->atomState.toSourceAtom,
-                          0, NULL, &v)) {
-            return NULL;
-        }
+        str = js_ValueToString(cx, tvr.u.value);
     }
-    return js_ValueToString(cx, v);
+    JS_POP_TEMP_ROOT(cx, &tvr);
+    return str;
 }
 
 JSHashNumber"""
b032f72afaa821a76849b114a35c53aa8852f0ed,110830,352606,brendan%mozilla.org,"Use PUSH to initialize scanned stack space (352606, r=mrbkap).
",1158214668,"""diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index e8ac8a4..69c58ff 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -3691,7 +3691,8 @@ interrupt:
                      * or decrement result, if converted to a jsdouble from
                      * a non-number value, from GC nesting in the setter.
                      */
-                    vp = sp++;
+                    vp = sp;
+                    PUSH(JSVAL_VOID);
                     SAVE_SP(fp);
                     --i;
                 }"""
8d8589dbfdb01dbc43cd4b78b0dbab0e971cf785,110939,329521,neil%parkwaycc.co.uk,"Don't dismiss the context menu so eagerly for subframe loads b=329521 r+sr=jag
",1158214225,"""diff --git a/suite/browser/nsBrowserStatusHandler.js b/suite/browser/nsBrowserStatusHandler.js
index 7ade733..54b69ff 100644
--- a/suite/browser/nsBrowserStatusHandler.js
+++ b/suite/browser/nsBrowserStatusHandler.js
@@ -261,7 +261,21 @@ nsBrowserStatusHandler.prototype =
 
   onLocationChange : function(aWebProgress, aRequest, aLocation)
   {
-    document.getElementById(""""contentAreaContextMenu"""").hidePopup();
+    if (gContextMenu) {
+      // Optimise for the common case
+      if (aWebProgress.DOMWindow == content)
+        gContextMenu.menu.hidePopup();
+      else {
+        for (var contextWindow = gContextMenu.target.ownerDocument.defaultView;
+             contextWindow != contextWindow.parent;
+             contextWindow = contextWindow.parent) {
+          if (contextWindow == aWebProgress.DOMWindow) {
+            gContextMenu.menu.hidePopup();
+            break;
+          }
+        }
+      }
+    }
 
     // XXX temporary hack for bug 104532.
     // Depends heavily on setOverLink implementation"""
3ef4a7c5155ff1c3512a9fd2beec7352aa296cc5,110940,329521,neil%parkwaycc.co.uk,"Dismiss the context menu when a new page loads b=329521 r=jag sr=bz
",1158214224,"""diff --git a/suite/browser/nsBrowserStatusHandler.js b/suite/browser/nsBrowserStatusHandler.js
index 495ad55..7ade733 100644
--- a/suite/browser/nsBrowserStatusHandler.js
+++ b/suite/browser/nsBrowserStatusHandler.js
@@ -261,6 +261,8 @@ nsBrowserStatusHandler.prototype =
 
   onLocationChange : function(aWebProgress, aRequest, aLocation)
   {
+    document.getElementById(""""contentAreaContextMenu"""").hidePopup();
+
     // XXX temporary hack for bug 104532.
     // Depends heavily on setOverLink implementation
     if (!aRequest)"""
e2856157cfea87088617281ad4db3ebf50ba2990,112391,348304,Olli.Pettay%helsinki.fi,"Additional patch for Bug 348304, use nsWeakFrame, not nsIContent, r+sr=dbaron
",1158174908,"""diff --git a/layout/xul/base/src/nsMenuFrame.cpp b/layout/xul/base/src/nsMenuFrame.cpp
index 3af9d2e..4885c32 100644
--- a/layout/xul/base/src/nsMenuFrame.cpp
+++ b/layout/xul/base/src/nsMenuFrame.cpp
@@ -170,31 +170,24 @@ nsMenuFrame::SetParent(const nsIFrame* aParent)
 class nsASyncMenuInitialization : public nsRunnable
 {
 public:
-  nsASyncMenuInitialization(nsIContent* aContent)
-    : mContent(aContent)
+  nsASyncMenuInitialization(nsIFrame* aFrame)
+    : mWeakFrame(aFrame)
   {
   }
 
   NS_IMETHOD Run() {
-    nsIDocument* doc = mContent ? mContent->GetCurrentDoc() : nsnull;
-    NS_ENSURE_TRUE(doc, NS_OK);
-
-    nsIPresShell* shell = doc->GetShellAt(0);
-    NS_ENSURE_TRUE(shell, NS_OK);
-
-    nsIFrame* frame = shell->GetPrimaryFrameFor(mContent);
-    NS_ENSURE_TRUE(frame, NS_OK);
-
-    nsIMenuFrame* imenu = nsnull;
-    CallQueryInterface(frame, &imenu);
-    NS_ENSURE_TRUE(imenu, NS_OK);
-
-    nsMenuFrame* menu = NS_STATIC_CAST(nsMenuFrame*, imenu);
-    menu->UpdateMenuType(menu->GetPresContext());
+    if (mWeakFrame.IsAlive()) {
+      nsIMenuFrame* imenu = nsnull;
+      CallQueryInterface(mWeakFrame.GetFrame(), &imenu);
+      if (imenu) {
+        nsMenuFrame* menu = NS_STATIC_CAST(nsMenuFrame*, imenu);
+        menu->UpdateMenuType(menu->GetPresContext());
+      }
+    }
     return NS_OK;
   }
 
-  nsCOMPtr<nsIContent> mContent;
+  nsWeakFrame mWeakFrame;
 };
 
 NS_IMETHODIMP
@@ -253,7 +246,7 @@ nsMenuFrame::Init(nsIContent*      aContent,
 
   BuildAcceleratorText();
   nsCOMPtr<nsIRunnable> ev =
-    new nsASyncMenuInitialization(GetContent());
+    new nsASyncMenuInitialization(this);
   NS_DispatchToCurrentThread(ev);
   return rv;
 }
@@ -1951,18 +1944,18 @@ nsMenuFrame::AppendFrames(nsIAtom*        aListName,
 class nsASyncMenuGeneration : public nsRunnable
 {
 public:
-  nsASyncMenuGeneration(nsIContent* aContent)
-    : mContent(aContent), mDocument(aContent ? aContent->GetCurrentDoc() : nsnull)
+  nsASyncMenuGeneration(nsIFrame* aFrame)
+    : mWeakFrame(aFrame)
   {
+    nsIContent* content = aFrame ? aFrame->GetContent() : nsnull;
+    mDocument = content ? content->GetCurrentDoc() : nsnull;
     if (mDocument) {
       mDocument->BlockOnload();
     }
   }
 
   NS_IMETHOD Run() {
-    nsIDocument* doc = mContent ? mContent->GetCurrentDoc() : nsnull;
-    nsIPresShell* shell = doc ? doc->GetShellAt(0) : nsnull;
-    nsIFrame* frame = shell ? shell->GetPrimaryFrameFor(mContent) : nsnull;
+    nsIFrame* frame = mWeakFrame.GetFrame();
     if (frame) {
       PRBool collapsed = PR_FALSE;
       nsBoxLayoutState state(frame->GetPresContext());
@@ -1975,14 +1968,13 @@ public:
         }
       }
     }
-
     if (mDocument) {
       mDocument->UnblockOnload(PR_FALSE);
     }
     return NS_OK;
   }
 
-  nsCOMPtr<nsIContent>  mContent;
+  nsWeakFrame           mWeakFrame;
   nsCOMPtr<nsIDocument> mDocument;
 };
 
@@ -2005,7 +1997,7 @@ nsMenuFrame::SizeToPopup(nsBoxLayoutState& aState, nsSize& aSize)
             !nsContentUtils::HasNonEmptyAttr(child, kNameSpaceID_None,
                                              nsXULAtoms::menugenerated)) {
           nsCOMPtr<nsIRunnable> ev =
-            new nsASyncMenuGeneration(GetContent());
+            new nsASyncMenuGeneration(this);
           NS_DispatchToCurrentThread(ev);
         }
         return PR_FALSE;"""
dfec8c2a6685758a70bfb636a94a565e6bf280fe,112423,307809,dbaron%dbaron.org,"Simpler fix for bugs 307809 and 314502.  b=352449  r+sr=bzbarsky
",1158130395,"""diff --git a/layout/xul/base/src/grid/nsGrid.cpp b/layout/xul/base/src/grid/nsGrid.cpp
index e01b789..2bab8c0 100644
--- a/layout/xul/base/src/grid/nsGrid.cpp
+++ b/layout/xul/base/src/grid/nsGrid.cpp
@@ -1466,7 +1466,7 @@ nsGrid::GetScrolledBox(nsIBox* aChild)
       if (scrollFrame) {
          nsIFrame* scrolledFrame = scrollFrame->GetScrolledFrame();
          NS_ASSERTION(scrolledFrame,""""Error no scroll frame!!"""");
-         return scrolledFrame->IsBoxFrame() ? scrolledFrame : nsnull;
+         return scrolledFrame;
       }
 
       return aChild;
diff --git a/layout/xul/base/src/grid/nsGridRowGroupLayout.cpp b/layout/xul/base/src/grid/nsGridRowGroupLayout.cpp
index 25b6037..f34a37a 100644
--- a/layout/xul/base/src/grid/nsGridRowGroupLayout.cpp
+++ b/layout/xul/base/src/grid/nsGridRowGroupLayout.cpp
@@ -206,11 +206,7 @@ nsGridRowGroupLayout::DirtyRows(nsIBox* aBox, nsBoxLayoutState& aState)
 
       // walk into other monuments
       nsCOMPtr<nsIBoxLayout> layout;
-      // deepChild might be null if child is a scrollframe around a non-box.
-      // But in that case there's nothing to do here, really.
-      if (deepChild) {
-        deepChild->GetLayoutManager(getter_AddRefs(layout));
-      }
+      deepChild->GetLayoutManager(getter_AddRefs(layout));
       if (layout) {
         nsCOMPtr<nsIGridPart> monument( do_QueryInterface(layout) );
         if (monument) 
@@ -240,12 +236,7 @@ nsGridRowGroupLayout::CountRowsColumns(nsIBox* aBox, PRInt32& aRowCount, PRInt32
       nsIBox* deepChild = nsGrid::GetScrolledBox(child);
 
       nsCOMPtr<nsIBoxLayout> layout;
-      // deepChild might be null if child is a scrollframe around a non-box.
-      // But in that case I guess we can count this as a single grid row.  Or
-      // something.
-      if (deepChild) {
-        deepChild->GetLayoutManager(getter_AddRefs(layout));
-      }
+      deepChild->GetLayoutManager(getter_AddRefs(layout));
       if (layout) {
         nsCOMPtr<nsIGridPart> monument( do_QueryInterface(layout) );
         if (monument) {
@@ -299,11 +290,7 @@ nsGridRowGroupLayout::BuildRows(nsIBox* aBox, nsGridRow* aRows, PRInt32* aCount)
       nsIBox* deepChild = nsGrid::GetScrolledBox(child);
 
       nsCOMPtr<nsIBoxLayout> layout;
-      // deepChild might be null if child is a scrollframe around a non-box.
-      // But in that case there's nothing special that needs doing there.
-      if (deepChild) {
-        deepChild->GetLayoutManager(getter_AddRefs(layout));
-      }
+      deepChild->GetLayoutManager(getter_AddRefs(layout));
       if (layout) {
         nsCOMPtr<nsIGridPart> monument( do_QueryInterface(layout) );
         if (monument) {
diff --git a/layout/xul/base/src/grid/nsGridRowLayout.cpp b/layout/xul/base/src/grid/nsGridRowLayout.cpp
index 2670c6e..b487acf 100644
--- a/layout/xul/base/src/grid/nsGridRowLayout.cpp
+++ b/layout/xul/base/src/grid/nsGridRowLayout.cpp
@@ -135,12 +135,7 @@ nsGridRowLayout::GetGrid(nsIBox* aBox, nsGrid** aList, PRInt32* aIndex, nsGridRo
      nsIBox* childBox = nsGrid::GetScrolledBox(child);
 
      nsCOMPtr<nsIBoxLayout> layout;
-     // childBox might be null if child is a scrollframe around a non-box.  But
-     // in that case I guess we can count this as a single grid row.  Or
-     // something.
-     if (childBox) {
-       childBox->GetLayoutManager(getter_AddRefs(layout));
-     }
+     childBox->GetLayoutManager(getter_AddRefs(layout));
      
      // find our requester
      nsCOMPtr<nsIGridPart> gridRow = do_QueryInterface(layout, &rv);"""
ff09cb7f798020db6517c59b32b510d008c468da,112483,351848,wtchang%redhat.com,"Change DecryptSigBlock to return the parsed DigestInfo's length, so
the caller can check it.  Fixed a memory leak on error. r=nelson,rrelyea
bug 351848.
",1158081200,"""diff --git a/security/nss/lib/cryptohi/secvfy.c b/security/nss/lib/cryptohi/secvfy.c
index 00f1273..37a7a05 100644
--- a/security/nss/lib/cryptohi/secvfy.c
+++ b/security/nss/lib/cryptohi/secvfy.c
@@ -37,7 +37,7 @@
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
-/* $Id: secvfy.c,v 1.19 2006-09-05 09:45:46 nelson%bolyard.com Exp $ */
+/* $Id: secvfy.c,v 1.20 2006-09-12 17:13:20 wtchang%redhat.com Exp $ */
 
 #include <stdio.h>
 #include """"cryptohi.h""""
@@ -54,10 +54,12 @@
 ** Decrypt signature block using public key
 ** Store the hash algorithm oid tag in *tagp
 ** Store the digest in the digest buffer
+** Store the digest length in *digestlen
 ** XXX this is assuming that the signature algorithm has WITH_RSA_ENCRYPTION
 */
 static SECStatus
-DecryptSigBlock(SECOidTag *tagp, unsigned char *digest, unsigned int len,
+DecryptSigBlock(SECOidTag *tagp, unsigned char *digest,
+		unsigned int *digestlen, unsigned int maxdigestlen,
 		SECKEYPublicKey *key, const SECItem *sig, char *wincx)
 {
     SGNDigestInfo *di   = NULL;
@@ -93,12 +95,13 @@ DecryptSigBlock(SECOidTag *tagp, unsigned char *digest, unsigned int len,
     if (di->digestAlgorithm.parameters.len > 2) {
 	goto sigloser;
     }
-    if (di->digest.len > len) {
+    if (di->digest.len > maxdigestlen) {
 	PORT_SetError(SEC_ERROR_OUTPUT_LEN);
 	goto loser;
     }
     PORT_Memcpy(digest, di->digest.data, di->digest.len);
     *tagp = tag;
+    *digestlen = di->digest.len;
     goto done;
 
   sigloser:
@@ -116,7 +119,7 @@ DecryptSigBlock(SECOidTag *tagp, unsigned char *digest, unsigned int len,
 
 
 struct VFYContextStr {
-    SECOidTag alg;  /* the hash algorithm */
+    SECOidTag hashAlg;  /* the hash algorithm */
     SECKEYPublicKey *key;
     /*
      * This buffer holds either the digest or the full signature
@@ -137,6 +140,7 @@ struct VFYContextStr {
 	/* the full ECDSA signature */
 	unsigned char ecdsasig[2 * MAX_ECKEY_LEN];
     } u;
+    unsigned int rsadigestlen;
     void * wincx;
     void *hashcx;
     const SECHashObject *hashobj;
@@ -200,7 +204,7 @@ const SEC_ASN1Template hashParameterTemplate[] =
  * Pulls the hash algorithm, signing algorithm, and key type out of a
  * composite algorithm.
  *
- * alg: the composite algorithm to dissect.
+ * sigAlg: the composite algorithm to dissect.
  * hashalg: address of a SECOidTag which will be set with the hash algorithm.
  * encalg: address of a SECOidTag which will be set with the signing alg.
  *
@@ -369,7 +373,6 @@ vfy_CreateContext(const SECKEYPublicKey *key, const SECItem *sig,
     VFYContext *cx;
     SECStatus rv;
     unsigned int sigLen;
-    SECOidTag hashid = SEC_OID_UNKNOWN;
     KeyType type;
 
     /* make sure the encryption algorithm matches the key type */
@@ -387,20 +390,18 @@ vfy_CreateContext(const SECKEYPublicKey *key, const SECItem *sig,
     cx->wincx = wincx;
     cx->hasSignature = (sig != NULL);
     cx->encAlg = encAlg;
-    cx->alg = hashAlg;
+    cx->hashAlg = hashAlg;
     cx->key = SECKEY_CopyPublicKey(key);
     rv = SECSuccess;
     if (sig) {
 	switch (key->keyType) {
 	case rsaKey:
-	    rv = DecryptSigBlock(&hashid, cx->u.buffer,
+	    rv = DecryptSigBlock(&cx->hashAlg, cx->u.buffer, &cx->rsadigestlen,
 			HASH_LENGTH_MAX, cx->key, sig, (char*)wincx);
-	    if (cx->alg != SEC_OID_UNKNOWN && cx->alg != hashid) {
+	    if (cx->hashAlg != hashAlg && hashAlg != SEC_OID_UNKNOWN) {
 		PORT_SetError(SEC_ERROR_BAD_SIGNATURE);
 		rv = SECFailure;	
-		break;
 	    }
-	    cx->alg = hashid;
 	    break;
 	case dsaKey:
 	case ecKey:
@@ -422,13 +423,13 @@ vfy_CreateContext(const SECKEYPublicKey *key, const SECItem *sig,
     if (rv) goto loser;
 
     /* check hash alg again, RSA may have changed it.*/
-    if (HASH_GetHashTypeByOidTag(cx->alg) == HASH_AlgNULL) {
+    if (HASH_GetHashTypeByOidTag(cx->hashAlg) == HASH_AlgNULL) {
 	/* error set by HASH_GetHashTypeByOidTag */
-	return NULL;
+	goto loser;
     }
 
     if (hash) {
-	*hash = cx->alg;
+	*hash = cx->hashAlg;
     }
     return cx;
 
@@ -498,7 +499,7 @@ VFY_Begin(VFYContext *cx)
 	cx->hashcx = NULL;
     }
 
-    cx->hashobj = HASH_GetHashObjectByOidTag(cx->alg);
+    cx->hashobj = HASH_GetHashObjectByOidTag(cx->hashAlg);
     if (!cx->hashobj) 
 	return SECFailure;	/* error code is set */
 
@@ -565,14 +566,15 @@ VFY_EndWithSignature(VFYContext *cx, SECItem *sig)
       case rsaKey:
 	if (sig) {
 	    SECOidTag hashid = SEC_OID_UNKNOWN;
-	    rv = DecryptSigBlock(&hashid, cx->u.buffer, 
+	    rv = DecryptSigBlock(&hashid, cx->u.buffer, &cx->rsadigestlen,
 		    HASH_LENGTH_MAX, cx->key, sig, (char*)cx->wincx);
-	    if ((rv != SECSuccess) || (hashid != cx->alg)) {
+	    if ((rv != SECSuccess) || (hashid != cx->hashAlg)) {
 		PORT_SetError(SEC_ERROR_BAD_SIGNATURE);
 		return SECFailure;
 	    }
 	}
-	if (PORT_Memcmp(final, cx->u.buffer, part)) {
+	if ((part != cx->rsadigestlen) ||
+	    PORT_Memcmp(final, cx->u.buffer, part)) {
 	    PORT_SetError(SEC_ERROR_BAD_SIGNATURE);
 	    return SECFailure;
 	}
@@ -609,7 +611,8 @@ vfy_VerifyDigest(const SECItem *digest, const SECKEYPublicKey *key,
     if (cx != NULL) {
 	switch (key->keyType) {
 	case rsaKey:
-	    if (PORT_Memcmp(digest->data, cx->u.buffer, digest->len)) {
+	    if ((digest->len != cx->rsadigestlen) ||
+		PORT_Memcmp(digest->data, cx->u.buffer, digest->len)) {
 		PORT_SetError(SEC_ERROR_BAD_SIGNATURE);
 	    } else {
 		rv = SECSuccess;"""
56c7a8980852487f254dc457c58055359e48808d,112494,348304,Olli.Pettay%helsinki.fi,"Additional patch for Bug 348304 to fix Bug 351909 r+sr=bz
",1158046058,"""diff --git a/layout/xul/base/src/nsMenuFrame.cpp b/layout/xul/base/src/nsMenuFrame.cpp
index 3291333..3af9d2e 100644
--- a/layout/xul/base/src/nsMenuFrame.cpp
+++ b/layout/xul/base/src/nsMenuFrame.cpp
@@ -1952,34 +1952,38 @@ class nsASyncMenuGeneration : public nsRunnable
 {
 public:
   nsASyncMenuGeneration(nsIContent* aContent)
-    : mContent(aContent)
+    : mContent(aContent), mDocument(aContent ? aContent->GetCurrentDoc() : nsnull)
   {
+    if (mDocument) {
+      mDocument->BlockOnload();
+    }
   }
 
   NS_IMETHOD Run() {
     nsIDocument* doc = mContent ? mContent->GetCurrentDoc() : nsnull;
-    NS_ENSURE_TRUE(doc, NS_OK);
-
-    nsIPresShell* shell = doc->GetShellAt(0);
-    NS_ENSURE_TRUE(shell, NS_OK);
-
-    nsIFrame* frame = shell->GetPrimaryFrameFor(mContent);
-    NS_ENSURE_TRUE(frame, NS_OK);
-
-    PRBool collapsed = PR_FALSE;
-    nsBoxLayoutState state(frame->GetPresContext());
-    frame->IsCollapsed(state, collapsed);
-    if (collapsed) {
-      return NS_OK;
+    nsIPresShell* shell = doc ? doc->GetShellAt(0) : nsnull;
+    nsIFrame* frame = shell ? shell->GetPrimaryFrameFor(mContent) : nsnull;
+    if (frame) {
+      PRBool collapsed = PR_FALSE;
+      nsBoxLayoutState state(frame->GetPresContext());
+      frame->IsCollapsed(state, collapsed);
+      if (!collapsed) {
+        nsIMenuFrame* imenu = nsnull;
+        CallQueryInterface(frame, &imenu);
+        if (imenu) {
+          imenu->MarkAsGenerated();
+        }
+      }
     }
-    nsIMenuFrame* imenu = nsnull;
-    CallQueryInterface(frame, &imenu);
-    NS_ENSURE_TRUE(imenu, NS_OK);
 
-    return imenu->MarkAsGenerated();
+    if (mDocument) {
+      mDocument->UnblockOnload(PR_FALSE);
+    }
+    return NS_OK;
   }
 
-  nsCOMPtr<nsIContent> mContent;
+  nsCOMPtr<nsIContent>  mContent;
+  nsCOMPtr<nsIDocument> mDocument;
 };
 
 PRBool"""
6bedc0603c7bea9fcadc84e7f15974885c310536,112502,352271,mrbkap%gmail.com,"Fully initialize the newly-created parse node. bug 352271, r=brendan
",1158037198,"""diff --git a/js/src/jsparse.c b/js/src/jsparse.c
index d620869..1cbb8a7 100644
--- a/js/src/jsparse.c
+++ b/js/src/jsparse.c
@@ -4251,6 +4251,9 @@ MemberExpr(JSContext *cx, JSTokenStream *ts, JSTreeContext *tc,
             pn2->pn_arity = PN_UNARY;
             pn2->pn_kid = pn;
             pn2->pn_next = NULL;
+#if JS_HAS_XML_SUPPORT
+            pn2->pn_ts = ts;
+#endif
             pn = pn2;
         }
     }"""
3deb00d06685d7e14d9c794d40b493ffc519ee8b,112557,351328,bmlk%gmx.de,"recover more gracefully from a error condition where cells are inserted into the cellmap after the last column bug 351328 r/sr=bzbarsky
",1157998688,"""diff --git a/layout/tables/nsCellMap.cpp b/layout/tables/nsCellMap.cpp
index d90c695..b5f119b 100644
--- a/layout/tables/nsCellMap.cpp
+++ b/layout/tables/nsCellMap.cpp
@@ -1571,10 +1571,11 @@ void nsCellMap::InsertCells(nsTableCellMap& aMap,
                             nsRect&         aDamageArea)
 {
   if (aCellFrames.Count() == 0) return;
+  NS_ASSERTION(aColIndexBefore >= -1, """"index out of range"""");
   PRInt32 numCols = aMap.GetColCount();
   if (aColIndexBefore >= numCols) {
-    NS_ASSERTION(PR_FALSE, """"bad arg in nsCellMap::InsertCellAt"""");
-    return;
+    NS_ERROR(""""Inserting instead of appending cells indicates a serious cellmap error"""");
+    aColIndexBefore = numCols - 1;
   }
 
   // get the starting col index of the 1st new cells """
cde829c661792d74e3fd4a10bc9ef1f25968ee36,112585,351973,igor.bukanov%gmail.com,"Make sure id array are GC-protected. bug=351973 r=mrbkap sr=brendan
",1157973425,"""diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index 8418c7f..6ed2e99 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -553,8 +553,10 @@ js_EnterSharpObject(JSContext *cx, JSObject *obj, JSIdArray **idap,
             return NULL;
         }
         map->table = table;
+        JS_KEEP_ATOMS(cx->runtime);
     }
 
+    /* From this point the control must flow either through out: or bad:. */
     ida = NULL;
     if (map->depth == 0) {
         he = MarkSharpObjects(cx, obj, &ida);
@@ -624,6 +626,7 @@ out:
 bad:
     /* Clean up the sharpObjectMap table on outermost error. */
     if (map->depth == 0) {
+        JS_UNKEEP_ATOMS(cx->runtime);
         map->sharpgen = 0;
         JS_HashTableDestroy(map->table);
         map->table = NULL;
@@ -640,6 +643,7 @@ js_LeaveSharpObject(JSContext *cx, JSIdArray **idap)
     map = &cx->sharpObjectMap;
     JS_ASSERT(map->depth > 0);
     if (--map->depth == 0) {
+        JS_UNKEEP_ATOMS(cx->runtime);
         map->sharpgen = 0;
         JS_HashTableDestroy(map->table);
         map->table = NULL;"""
bff8e4ac98d93008d5ff633063c0f8dd216d6823,112810,348304,Olli.Pettay%helsinki.fi,"Additional patch for bug 348304, fixes bug bug 351318, r+sr=dbaron
",1157620672,"""diff --git a/layout/xul/base/src/nsMenuFrame.cpp b/layout/xul/base/src/nsMenuFrame.cpp
index f2dfedf8..3291333 100644
--- a/layout/xul/base/src/nsMenuFrame.cpp
+++ b/layout/xul/base/src/nsMenuFrame.cpp
@@ -190,11 +190,7 @@ public:
     NS_ENSURE_TRUE(imenu, NS_OK);
 
     nsMenuFrame* menu = NS_STATIC_CAST(nsMenuFrame*, imenu);
-    nsWeakFrame weakFrame(frame);
     menu->UpdateMenuType(menu->GetPresContext());
-    NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
-
-    menu->BuildAcceleratorText();
     return NS_OK;
   }
 
@@ -255,6 +251,7 @@ nsMenuFrame::Init(nsIContent*      aContent,
     gModifierSeparator = new nsString(modifierSeparator);    
   }
 
+  BuildAcceleratorText();
   nsCOMPtr<nsIRunnable> ev =
     new nsASyncMenuInitialization(GetContent());
   NS_DispatchToCurrentThread(ev);
diff --git a/layout/xul/base/src/nsMenuFrame.h b/layout/xul/base/src/nsMenuFrame.h
index 4cf9902..2ea634e 100644
--- a/layout/xul/base/src/nsMenuFrame.h
+++ b/layout/xul/base/src/nsMenuFrame.h
@@ -225,7 +225,7 @@ protected:
   void GetMenuChildrenElement(nsIContent** aResult);
 
   // Examines the key node and builds the accelerator.
-  void BuildAcceleratorText(); // @see comment ***
+  void BuildAcceleratorText();
 
   // Called to execute our command handler.
   void Execute(nsGUIEvent *aEvent); // @see comment ***"""
fb5d72b2e031b23c0e450ced564dfced526dbce5,112812,348304,Olli.Pettay%helsinki.fi,"Additional patch for bug 348304, fixes bug 351323, r+sr=dbaron
",1157619589,"""diff --git a/layout/xul/base/src/nsMenuFrame.cpp b/layout/xul/base/src/nsMenuFrame.cpp
index bb5233f..f2dfedf8 100644
--- a/layout/xul/base/src/nsMenuFrame.cpp
+++ b/layout/xul/base/src/nsMenuFrame.cpp
@@ -1969,6 +1969,12 @@ public:
     nsIFrame* frame = shell->GetPrimaryFrameFor(mContent);
     NS_ENSURE_TRUE(frame, NS_OK);
 
+    PRBool collapsed = PR_FALSE;
+    nsBoxLayoutState state(frame->GetPresContext());
+    frame->IsCollapsed(state, collapsed);
+    if (collapsed) {
+      return NS_OK;
+    }
     nsIMenuFrame* imenu = nsnull;
     CallQueryInterface(frame, &imenu);
     NS_ENSURE_TRUE(imenu, NS_OK);"""
aed8ed3c98ab51e3626c175d20014dbd1867ec9d,112817,350238,brendan%mozilla.org,"Fix stack budget for postfix ++ and -- applied to property refs (350238, r=mrbkap).
",1157604443,"""diff --git a/js/src/jsemit.c b/js/src/jsemit.c
index c793bc1..eea0b2f 100644
--- a/js/src/jsemit.c
+++ b/js/src/jsemit.c
@@ -5336,6 +5336,20 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
         pn2 = pn->pn_kid;
         JS_ASSERT(pn2->pn_type != TOK_RP);
         op = pn->pn_op;
+
+        /*
+         * Allocate another stack slot for GC protection in case the initial
+         * value being post-incremented or -decremented is not a number, but
+         * converts to a jsdouble.  In the TOK_NAME cases, op has 0 operand
+         * uses and 1 definition, so we don't need an extra stack slot -- we
+         * can use the one allocated for the def.
+         */
+        if (pn2->pn_type != TOK_NAME &&
+            (js_CodeSpec[op].format & JOF_POST) &&
+            (uintN)++cg->stackDepth > cg->maxStackDepth) {
+            cg->maxStackDepth = cg->stackDepth;
+        }
+
         switch (pn2->pn_type) {
           case TOK_NAME:
             pn2->pn_op = op;
@@ -5391,18 +5405,8 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
             JS_ASSERT(0);
         }
 
-        /*
-         * Allocate another stack slot for GC protection in case the initial
-         * value being post-incremented or -decremented is not a number, but
-         * converts to a jsdouble.  In the TOK_NAME cases, op has 0 operand
-         * uses and 1 definition, so we don't need an extra stack slot -- we
-         * can use the one allocated for the def.
-         */
-        if (pn2->pn_type != TOK_NAME &&
-            (js_CodeSpec[op].format & JOF_POST) &&
-            (uintN)cg->stackDepth == cg->maxStackDepth) {
-            ++cg->maxStackDepth;
-        }
+        if (pn2->pn_type != TOK_NAME && (js_CodeSpec[op].format & JOF_POST))
+            --cg->stackDepth;
         break;
 
       case TOK_DELETE:"""
2eaa3b158e89c61d687fec54d711441e6d1b5bff,112918,351079,nelson%bolyard.com,"Improve the validity tests on the AlgorithmID when verifying a PKCS#1 v1.5
RSA signature.  Bug 351079. r=rrelyea,wtchang.
",1157449546,"""diff --git a/security/nss/lib/cryptohi/secvfy.c b/security/nss/lib/cryptohi/secvfy.c
index 4b0cf82..00f1273 100644
--- a/security/nss/lib/cryptohi/secvfy.c
+++ b/security/nss/lib/cryptohi/secvfy.c
@@ -37,7 +37,7 @@
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
-/* $Id: secvfy.c,v 1.18 2006-05-31 23:54:51 wtchang%redhat.com Exp $ */
+/* $Id: secvfy.c,v 1.19 2006-09-05 09:45:46 nelson%bolyard.com Exp $ */
 
 #include <stdio.h>
 #include """"cryptohi.h""""
@@ -85,7 +85,14 @@ DecryptSigBlock(SECOidTag *tagp, unsigned char *digest, unsigned int len,
     ** ID and the signature block
     */
     tag = SECOID_GetAlgorithmTag(&di->digestAlgorithm);
-    /* XXX Check that tag is an appropriate algorithm? */
+    /* Check that tag is an appropriate algorithm */
+    if (tag == SEC_OID_UNKNOWN) {
+	goto sigloser;
+    }
+    /* make sure the """"parameters"""" are not too bogus. */
+    if (di->digestAlgorithm.parameters.len > 2) {
+	goto sigloser;
+    }
     if (di->digest.len > len) {
 	PORT_SetError(SEC_ERROR_OUTPUT_LEN);
 	goto loser;
diff --git a/security/nss/lib/softoken/pkcs11c.c b/security/nss/lib/softoken/pkcs11c.c
index 007aabf..dc1dc67 100644
--- a/security/nss/lib/softoken/pkcs11c.c
+++ b/security/nss/lib/softoken/pkcs11c.c
@@ -2157,12 +2157,17 @@ RSA_HashCheckSign(SECOidTag hashOid, NSSLOWKEYPublicKey *key,
     if (SECOID_GetAlgorithmTag(&di->digestAlgorithm) != hashOid) {
 	goto loser;
     }
+    /* make sure the """"parameters"""" are not too bogus. */
+    if (di->digestAlgorithm.parameters.len > 2) {
+	goto loser;
+    }
     /* Now check the signature */
     if (PORT_Memcmp(digest, di->digest.data, di->digest.len) == 0) {
 	goto done;
     }
 
   loser:
+    PORT_SetError(SEC_ERROR_BAD_SIGNATURE);
     rv = SECFailure;
 
   done:"""
85f995487906ec5dc2235ff1753bd2cadf780a04,112956,348304,Olli.Pettay%helsinki.fi,"Bug 348304, @nsMenuFrame::HandleEvent, r=enndeakin, sr=dbaron
",1157315158,"""diff --git a/layout/xul/base/src/nsMenuBarFrame.cpp b/layout/xul/base/src/nsMenuBarFrame.cpp
index 5c94a41..0fb7e9c 100644
--- a/layout/xul/base/src/nsMenuBarFrame.cpp
+++ b/layout/xul/base/src/nsMenuBarFrame.cpp
@@ -360,11 +360,21 @@ nsMenuBarFrame::ShortcutNavigation(nsIDOMKeyEvent* aKeyEvent, PRBool& aHandledFl
   nsIMenuFrame* result = FindMenuWithShortcut(aKeyEvent);
   if (result) {
     // We got one!
+    nsWeakFrame weakFrame(this);
+    nsIFrame* frame = nsnull;
+    CallQueryInterface(result, &frame);
+    nsWeakFrame weakResult(frame);
     aHandledFlag = PR_TRUE;
     SetActive(PR_TRUE);
-    SetCurrentMenuItem(result);
-    result->OpenMenu(PR_TRUE);
-    result->SelectFirstItem();
+    if (weakFrame.IsAlive()) {
+      SetCurrentMenuItem(result);
+    }
+    if (weakResult.IsAlive()) {
+      result->OpenMenu(PR_TRUE);
+      if (weakResult.IsAlive()) {
+        result->SelectFirstItem();
+      }
+    }
   }
 
   return NS_OK;
@@ -377,7 +387,8 @@ nsMenuBarFrame::KeyboardNavigation(PRUint32 aKeyCode, PRBool& aHandledFlag)
   NS_DIRECTION_FROM_KEY_CODE(theDirection, aKeyCode);
   if (!mCurrentMenu)
     return NS_OK;
-  
+
+  nsWeakFrame weakFrame(this);
   PRBool isContainer = PR_FALSE;
   PRBool isOpen = PR_FALSE;
   mCurrentMenu->MenuIsContainer(isContainer);
@@ -399,8 +410,13 @@ nsMenuBarFrame::KeyboardNavigation(PRUint32 aKeyCode, PRBool& aHandledFlag)
                              GetNextMenuItem(mCurrentMenu) : 
                              GetPreviousMenuItem(mCurrentMenu);
 
-    SetCurrentMenuItem(nextItem);
+    nsIFrame* nextFrame = nsnull;
     if (nextItem) {
+      CallQueryInterface(nextItem, &nextFrame);
+    }
+    nsWeakFrame weakNext(nextFrame);
+    SetCurrentMenuItem(nextItem);
+    if (weakNext.IsAlive()) {
       PRBool nextIsOpen;
       nextItem->MenuIsOpen(nextIsOpen);
       if (nextIsOpen) {
@@ -410,9 +426,16 @@ nsMenuBarFrame::KeyboardNavigation(PRUint32 aKeyCode, PRBool& aHandledFlag)
     }
   }
   else if NS_DIRECTION_IS_BLOCK(theDirection) {
-    // Open the menu and select its first item.
-    mCurrentMenu->OpenMenu(PR_TRUE);
-    mCurrentMenu->SelectFirstItem();
+    NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
+    nsIFrame* frame = nsnull;
+    CallQueryInterface(mCurrentMenu, &frame);
+    nsWeakFrame weakCurrentMenu(frame);
+    nsIMenuFrame* currentMenu = mCurrentMenu;
+     // Open the menu and select its first item.
+    currentMenu->OpenMenu(PR_TRUE);
+    if (weakCurrentMenu.IsAlive()) {
+      currentMenu->SelectFirstItem();
+    }
   }
 
   return NS_OK;
@@ -537,18 +560,33 @@ NS_IMETHODIMP nsMenuBarFrame::SetCurrentMenuItem(nsIMenuFrame* aMenuItem)
   if (nsMenuFrame::GetContextMenu())
     return NS_OK;
 
+  nsWeakFrame weakFrame(this);
+
   // Unset the current child.
   if (mCurrentMenu) {
-    mCurrentMenu->MenuIsOpen(wasOpen);
-    mCurrentMenu->SelectMenu(PR_FALSE);
-    if (wasOpen)
-      mCurrentMenu->OpenMenu(PR_FALSE);
+    nsIFrame* frame = nsnull;
+    CallQueryInterface(mCurrentMenu, &frame);
+    nsWeakFrame weakCurrentMenu(frame);
+    nsIMenuFrame* currentMenu = mCurrentMenu;
+    currentMenu->MenuIsOpen(wasOpen);
+    currentMenu->SelectMenu(PR_FALSE);
+    if (wasOpen && weakCurrentMenu.IsAlive()) {
+      currentMenu->OpenMenu(PR_FALSE);
+    }
   }
 
+  NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
+
+
   // Set the new child.
   if (aMenuItem) {
+    nsIFrame* newMenu = nsnull;
+    CallQueryInterface(aMenuItem, &newMenu);
+    nsWeakFrame weakNewMenu(newMenu);
     aMenuItem->SelectMenu(PR_TRUE);
+    NS_ENSURE_TRUE(weakNewMenu.IsAlive(), NS_OK);
     aMenuItem->MarkAsGenerated(); // Have the menu building. Get it ready to be shown.
+    NS_ENSURE_TRUE(weakNewMenu.IsAlive(), NS_OK);
 
     PRBool isDisabled = PR_FALSE;
     aMenuItem->MenuIsDisabled(isDisabled);
@@ -557,6 +595,7 @@ NS_IMETHODIMP nsMenuBarFrame::SetCurrentMenuItem(nsIMenuFrame* aMenuItem)
     ClearRecentlyRolledUp();
   }
 
+  NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
   mCurrentMenu = aMenuItem;
 
   return NS_OK;
@@ -569,6 +608,7 @@ nsMenuBarFrame::Escape(PRBool& aHandledFlag)
   if (!mCurrentMenu)
     return NS_OK;
 
+  nsWeakFrame weakFrame(this);
   // See if our menu is open.
   PRBool isOpen = PR_FALSE;
   mCurrentMenu->MenuIsOpen(isOpen);
@@ -576,10 +616,12 @@ nsMenuBarFrame::Escape(PRBool& aHandledFlag)
     // Let the child menu handle this.
     aHandledFlag = PR_FALSE;
     mCurrentMenu->Escape(aHandledFlag);
+    NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
     if (!aHandledFlag) {
       // Close up this menu but keep our current menu item
       // designation.
       mCurrentMenu->OpenMenu(PR_FALSE);
+      NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
     }
     nsMenuDismissalListener::Shutdown();
     return NS_OK;
@@ -587,6 +629,7 @@ nsMenuBarFrame::Escape(PRBool& aHandledFlag)
 
   // Clear our current menu item if we've got one.
   SetCurrentMenuItem(nsnull);
+  NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
 
   SetActive(PR_FALSE);
 
@@ -676,8 +719,11 @@ nsMenuBarFrame::DismissChain()
 {
   // Stop capturing rollups
   nsMenuDismissalListener::Shutdown();
+  nsWeakFrame weakFrame(this);
   SetCurrentMenuItem(nsnull);
-  SetActive(PR_FALSE);
+  if (weakFrame.IsAlive()) {
+    SetActive(PR_FALSE);
+  }
   return NS_OK;
 }
 
diff --git a/layout/xul/base/src/nsMenuFrame.cpp b/layout/xul/base/src/nsMenuFrame.cpp
index 226b568..bb5233f 100644
--- a/layout/xul/base/src/nsMenuFrame.cpp
+++ b/layout/xul/base/src/nsMenuFrame.cpp
@@ -167,6 +167,40 @@ nsMenuFrame::SetParent(const nsIFrame* aParent)
   return NS_OK;
 }
 
+class nsASyncMenuInitialization : public nsRunnable
+{
+public:
+  nsASyncMenuInitialization(nsIContent* aContent)
+    : mContent(aContent)
+  {
+  }
+
+  NS_IMETHOD Run() {
+    nsIDocument* doc = mContent ? mContent->GetCurrentDoc() : nsnull;
+    NS_ENSURE_TRUE(doc, NS_OK);
+
+    nsIPresShell* shell = doc->GetShellAt(0);
+    NS_ENSURE_TRUE(shell, NS_OK);
+
+    nsIFrame* frame = shell->GetPrimaryFrameFor(mContent);
+    NS_ENSURE_TRUE(frame, NS_OK);
+
+    nsIMenuFrame* imenu = nsnull;
+    CallQueryInterface(frame, &imenu);
+    NS_ENSURE_TRUE(imenu, NS_OK);
+
+    nsMenuFrame* menu = NS_STATIC_CAST(nsMenuFrame*, imenu);
+    nsWeakFrame weakFrame(frame);
+    menu->UpdateMenuType(menu->GetPresContext());
+    NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
+
+    menu->BuildAcceleratorText();
+    return NS_OK;
+  }
+
+  nsCOMPtr<nsIContent> mContent;
+};
+
 NS_IMETHODIMP
 nsMenuFrame::Init(nsIContent*      aContent,
                   nsIFrame*        aParent,
@@ -187,9 +221,6 @@ nsMenuFrame::Init(nsIContent*      aContent,
     currFrame = currFrame->GetParent();
   }
 
-  // Do the type=""""checkbox"""" magic
-  UpdateMenuType(GetPresContext());
-
   //load the display strings for the keyboard accelerators, but only once
   if (gRefCnt++ == 0) {
     
@@ -223,9 +254,10 @@ nsMenuFrame::Init(nsIContent*      aContent,
     gControlText = new nsString(controlModifier);
     gModifierSeparator = new nsString(modifierSeparator);    
   }
-  
-  BuildAcceleratorText();
-  
+
+  nsCOMPtr<nsIRunnable> ev =
+    new nsASyncMenuInitialization(GetContent());
+  NS_DispatchToCurrentThread(ev);
   return rv;
 }
 
@@ -339,16 +371,19 @@ nsMenuFrame::Destroy()
   // doesn't try to interact with a deallocated frame.
   mTimerMediator->ClearFrame();
 
+  nsWeakFrame weakFrame(this);
   // are we our menu parent's current menu item?
   if (mMenuParent) {
     nsIMenuFrame *curItem = mMenuParent->GetCurrentMenuItem();
     if (curItem == this) {
       // yes; tell it that we're going away
       mMenuParent->SetCurrentMenuItem(nsnull);
+      ENSURE_TRUE(weakFrame.IsAlive());
     }
   }
 
   UngenerateMenu();
+  ENSURE_TRUE(weakFrame.IsAlive());
   DestroyPopupFrames(GetPresContext());
   nsBoxFrame::Destroy();
 }
@@ -374,6 +409,7 @@ nsMenuFrame::HandleEvent(nsPresContext* aPresContext,
                              nsEventStatus*  aEventStatus)
 {
   NS_ENSURE_ARG_POINTER(aEventStatus);
+  nsWeakFrame weakFrame(this);
   if (*aEventStatus == nsEventStatus_eIgnore)
     *aEventStatus = nsEventStatus_eConsumeDoDefault;
   
@@ -401,6 +437,7 @@ nsMenuFrame::HandleEvent(nsPresContext* aPresContext,
     // We have children.
     if ( isMenuBar || !mMenuParent ) {
       ToggleMenuState();
+      NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
 
       if (!IsOpen() && mMenuParent) {
         // We closed up. The menu bar should always be
@@ -488,6 +525,8 @@ nsMenuFrame::HandleEvent(nsPresContext* aPresContext,
 
     // Let the menu parent know we're the new item.
     mMenuParent->SetCurrentMenuItem(this);
+    NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
+    NS_ENSURE_TRUE(mMenuParent, NS_OK);
     
     // we need to check if we really became the current menu
     // item or not
@@ -519,9 +558,11 @@ nsMenuFrame::HandleEvent(nsPresContext* aPresContext,
 
 NS_IMETHODIMP
 nsMenuFrame::ToggleMenuState()
-{  
+{
+  nsWeakFrame weakFrame(this);
   if (mMenuOpen) {
     OpenMenu(PR_FALSE);
+    NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
   }
   else {
     PRBool justRolledUp = PR_FALSE;
@@ -533,21 +574,28 @@ nsMenuFrame::ToggleMenuState()
       // from the same click. Otherwise, the user can't click on
       // a menubar item to toggle its submenu closed.
       OpenMenu(PR_FALSE);
+      NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
       SelectMenu(PR_TRUE);
+      NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
+      NS_ENSURE_TRUE(mMenuParent, NS_OK);
       mMenuParent->SetActive(PR_FALSE);
     }
     else {
       if (mMenuParent) {
         mMenuParent->SetActive(PR_TRUE);
+        NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
       }
       OpenMenu(PR_TRUE);
     }
   }
+  NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
 
   if (mMenuParent) {
     // Make sure the current menu which is being toggled on
     // the menubar is highlighted
     mMenuParent->SetCurrentMenuItem(this);
+    NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
+    NS_ENSURE_TRUE(mMenuParent, NS_OK);
     // We've successfully prevented the same click from both
     // dismissing and reopening this menu. 
     // Clear the recent rollup state so we don't prevent
@@ -567,6 +615,7 @@ nsMenuFrame::SelectMenu(PRBool aActivateFlag)
 
   nsAutoString domEventToFire;
 
+  nsWeakFrame weakFrame(this);
   if (aActivateFlag) {
     if (mMenuParent) {
       nsIMenuParent* ancestor = nsnull;
@@ -587,7 +636,9 @@ nsMenuFrame::SelectMenu(PRBool aActivateFlag)
     domEventToFire.AssignLiteral(""""DOMMenuItemInactive"""");
   }
 
-  FireDOMEventSynch(domEventToFire);
+  if (weakFrame.IsAlive()) {
+    FireDOMEventSynch(domEventToFire);
+  }
   return NS_OK;
 }
 
@@ -674,7 +725,10 @@ nsMenuFrame::ActivateMenu(PRBool aActivateFlag)
 
   } else {
     if (mMenuOpen) {
+      nsWeakFrame weakFrame(this);
+      nsWeakFrame weakPopup(menuPopup);
       FireDOMEventSynch(NS_LITERAL_STRING(""""DOMMenuInactive""""), menuPopup->GetContent());
+      NS_ENSURE_TRUE(weakFrame.IsAlive() && weakPopup.IsAlive(), NS_OK);
     }
     nsIView* view = menuPopup->GetView();
     NS_ASSERTION(view, """"View is gone, looks like someone forgot to rollup the popup!"""");
@@ -720,15 +774,22 @@ nsMenuFrame::OpenMenu(PRBool aActivateFlag)
   if (!mContent)
     return NS_OK;
 
+  nsWeakFrame weakFrame(this);
   if (aActivateFlag) {
     // Now that the menu is opened, we should have a menupopup child built.
     // Mark it as generated, which ensures a frame gets built.
     MarkAsGenerated();
+    NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
 
     mContent->SetAttr(kNameSpaceID_None, nsXULAtoms::open, NS_LITERAL_STRING(""""true""""), PR_TRUE);
+    NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
     FireDOMEventSynch(NS_LITERAL_STRING(""""DOMMenuItemActive""""));
   }
-  else mContent->UnsetAttr(kNameSpaceID_None, nsXULAtoms::open, PR_TRUE);
+  else {
+    mContent->UnsetAttr(kNameSpaceID_None, nsXULAtoms::open, PR_TRUE);
+  }
+
+  NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
   OpenMenuInternal(aActivateFlag);
 
   return NS_OK;
@@ -743,10 +804,11 @@ nsMenuFrame::OpenMenuInternal(PRBool aActivateFlag)
     return;
 
   nsPresContext* presContext = GetPresContext();
-  
+  nsWeakFrame weakFrame(this);
+
   if (aActivateFlag) {
     // Execute the oncreate handler
-    if (!OnCreate())
+    if (!OnCreate() || !weakFrame.IsAlive())
       return;
 
     mCreateHandlerSucceeded = PR_TRUE;
@@ -757,6 +819,7 @@ nsMenuFrame::OpenMenuInternal(PRBool aActivateFlag)
     
     // XXX Only have this here because of RDF-generated content.
     MarkAsGenerated();
+    ENSURE_TRUE(weakFrame.IsAlive());
 
     nsIFrame* frame = mPopupFrames.FirstChild();
     nsMenuPopupFrame* menuPopup = (nsMenuPopupFrame*)frame;
@@ -765,11 +828,13 @@ nsMenuFrame::OpenMenuInternal(PRBool aActivateFlag)
     mMenuOpen = PR_TRUE;
 
     if (menuPopup) {
+      nsWeakFrame weakMenuPopup(frame);
       // inherit whether or not we're a context menu from the parent
       if ( mMenuParent ) {
         PRBool parentIsContextMenu = PR_FALSE;
         mMenuParent->GetIsContextMenu(parentIsContextMenu);
         menuPopup->SetIsContextMenu(parentIsContextMenu);
+        ENSURE_TRUE(weakFrame.IsAlive());
       }
 
       // Install a keyboard navigation listener if we're the root of the menu chain.
@@ -779,12 +844,16 @@ nsMenuFrame::OpenMenuInternal(PRBool aActivateFlag)
 
       if (mMenuParent && onMenuBar)
         mMenuParent->InstallKeyboardNavigator();
-      else if (!mMenuParent)
+      else if (!mMenuParent) {
+        ENSURE_TRUE(weakMenuPopup.IsAlive());
         menuPopup->InstallKeyboardNavigator();
+      }
       
       // Tell the menu bar we're active.
-      if (mMenuParent)
+      if (mMenuParent) {
         mMenuParent->SetActive(PR_TRUE);
+        ENSURE_TRUE(weakFrame.IsAlive());
+      }
 
       nsIContent* menuPopupContent = menuPopup->GetContent();
 
@@ -841,6 +910,7 @@ nsMenuFrame::OpenMenuInternal(PRBool aActivateFlag)
       }
 
       ActivateMenu(PR_TRUE);
+      ENSURE_TRUE(weakFrame.IsAlive());
 
       nsIMenuParent *childPopup = nsnull;
       CallQueryInterface(frame, &childPopup);
@@ -850,6 +920,7 @@ nsMenuFrame::OpenMenuInternal(PRBool aActivateFlag)
         listener->SetCurrentMenuParent(childPopup);
 
       OnCreated();
+      ENSURE_TRUE(weakFrame.IsAlive());
     }
 
     // Set the focus back to our view's widget.
@@ -861,7 +932,7 @@ nsMenuFrame::OpenMenuInternal(PRBool aActivateFlag)
 
     // Close the menu. 
     // Execute the ondestroy handler, but only if we're actually open
-    if ( !mCreateHandlerSucceeded || !OnDestroy() )
+    if ( !mCreateHandlerSucceeded || !OnDestroy() || !weakFrame.IsAlive())
       return;
 
     // Set the focus back to our view's widget.
@@ -876,6 +947,7 @@ nsMenuFrame::OpenMenuInternal(PRBool aActivateFlag)
     // Make sure we clear out our own items.
     if (menuPopup) {
       menuPopup->SetCurrentMenuItem(nsnull);
+      ENSURE_TRUE(weakFrame.IsAlive());
       menuPopup->KillCloseTimer();
 
       PRBool onMenuBar = PR_TRUE;
@@ -901,6 +973,7 @@ nsMenuFrame::OpenMenuInternal(PRBool aActivateFlag)
     }
 
     ActivateMenu(PR_FALSE);
+    ENSURE_TRUE(weakFrame.IsAlive());
     // XXX hack: ensure that mMenuOpen is set to false, in case where
     // there is actually no popup. because ActivateMenu() will return 
     // early without setting it. It could be that mMenuOpen is true
@@ -911,6 +984,7 @@ nsMenuFrame::OpenMenuInternal(PRBool aActivateFlag)
     mMenuOpen = PR_FALSE;
 
     OnDestroyed();
+    ENSURE_TRUE(weakFrame.IsAlive());
 
     if (nsMenuDismissalListener::sInstance)
       nsMenuDismissalListener::sInstance->EnableListener(PR_TRUE);
@@ -1333,9 +1407,12 @@ nsMenuFrame::UpdateMenuType(nsPresContext* aPresContext)
       break;
 
     default:
-      if (mType != eMenuType_Normal)
+      if (mType != eMenuType_Normal) {
+        nsWeakFrame weakFrame(this);
         mContent->UnsetAttr(kNameSpaceID_None, nsHTMLAtoms::checked,
                             PR_TRUE);
+        ENSURE_TRUE(weakFrame.IsAlive());
+      }
       mType = eMenuType_Normal;
       break;
   }
@@ -1440,7 +1517,9 @@ nsMenuFrame::BuildAcceleratorText()
   AddStateBits(NS_STATE_ACCELTEXT_IS_DERIVED);
 
   // If anything below fails, just leave the accelerator text blank.
+  nsWeakFrame weakFrame(this);
   mContent->UnsetAttr(kNameSpaceID_None, nsXULAtoms::acceltext, PR_FALSE);
+  ENSURE_TRUE(weakFrame.IsAlive());
 
   // See if we have a key node and use that instead.
   nsAutoString keyValue;
@@ -1564,6 +1643,7 @@ nsMenuFrame::BuildAcceleratorText()
 void
 nsMenuFrame::Execute(nsGUIEvent *aEvent)
 {
+  nsWeakFrame weakFrame(this);
   // flip """"checked"""" state if we're a checkbox menu, or an un-checked radio menu
   if (mType == eMenuType_Checkbox || (mType == eMenuType_Radio && !mChecked)) {
     if (!mContent->AttrValueIs(kNameSpaceID_None, nsHTMLAtoms::autocheck,
@@ -1571,10 +1651,12 @@ nsMenuFrame::Execute(nsGUIEvent *aEvent)
       if (mChecked) {
         mContent->UnsetAttr(kNameSpaceID_None, nsHTMLAtoms::checked,
                             PR_TRUE);
+        ENSURE_TRUE(weakFrame.IsAlive());
       }
       else {
         mContent->SetAttr(kNameSpaceID_None, nsHTMLAtoms::checked, NS_LITERAL_STRING(""""true""""),
                           PR_TRUE);
+        ENSURE_TRUE(weakFrame.IsAlive());
       }        
       /* the AttributeChanged code will update all the internal state */
     }
@@ -1592,6 +1674,7 @@ nsMenuFrame::Execute(nsGUIEvent *aEvent)
 
   // Deselect ourselves.
   SelectMenu(PR_FALSE);
+  ENSURE_TRUE(weakFrame.IsAlive());
 
   // Now hide all of the open menus.
   if (mMenuParent) {
@@ -1628,24 +1711,15 @@ nsMenuFrame::Execute(nsGUIEvent *aEvent)
   // See bug 54233.
   nsPresContext* presContext = GetPresContext();
   nsCOMPtr<nsIViewManager> kungFuDeathGrip = presContext->GetViewManager();
-  // keep a reference so we can safely use this after dispatching the DOM event
   nsCOMPtr<nsIPresShell> shell = presContext->GetPresShell();
-  nsIFrame* me = this;
   if (shell) {
     shell->HandleDOMEventWithTarget(mContent, &event, &status);
-    // shell may no longer be alive, don't use it here unless you keep a ref
+    ENSURE_TRUE(weakFrame.IsAlive());
   }
 
-  // XXX HACK. Just gracefully exit if the node has been removed, e.g., window.close()
-  // was executed.
-  nsIFrame* primary = nsnull;
-  if (shell) primary = shell->GetPrimaryFrameFor(content);
-
-  // Now properly close them all up.
-  if (content->GetDocument() &&     // <-- HACK IS HERE. ICK.
-      (primary == me) && mMenuParent)
+  if (mMenuParent) {
     mMenuParent->DismissChain();
-  // END HACK
+  }
 
   // Re-enable rollup events on this menu.
   if ( nsMenuDismissalListener::sInstance ) {
@@ -1688,7 +1762,7 @@ nsMenuFrame::OnCreate()
 
     PRUint32 count = child->GetChildCount();
     for (PRUint32 i = 0; i < count; i++) {
-      nsIContent *grandChild = child->GetChildAt(i);
+      nsCOMPtr<nsIContent> grandChild = child->GetChildAt(i);
 
       if (grandChild->Tag() == nsXULAtoms::menuitem) {
         // See if we have a command attribute.
@@ -1877,6 +1951,34 @@ nsMenuFrame::AppendFrames(nsIAtom*        aListName,
   return rv;
 }
 
+class nsASyncMenuGeneration : public nsRunnable
+{
+public:
+  nsASyncMenuGeneration(nsIContent* aContent)
+    : mContent(aContent)
+  {
+  }
+
+  NS_IMETHOD Run() {
+    nsIDocument* doc = mContent ? mContent->GetCurrentDoc() : nsnull;
+    NS_ENSURE_TRUE(doc, NS_OK);
+
+    nsIPresShell* shell = doc->GetShellAt(0);
+    NS_ENSURE_TRUE(shell, NS_OK);
+
+    nsIFrame* frame = shell->GetPrimaryFrameFor(mContent);
+    NS_ENSURE_TRUE(frame, NS_OK);
+
+    nsIMenuFrame* imenu = nsnull;
+    CallQueryInterface(frame, &imenu);
+    NS_ENSURE_TRUE(imenu, NS_OK);
+
+    return imenu->MarkAsGenerated();
+  }
+
+  nsCOMPtr<nsIContent> mContent;
+};
+
 PRBool
 nsMenuFrame::SizeToPopup(nsBoxLayoutState& aState, nsSize& aSize)
 {
@@ -1890,10 +1992,16 @@ nsMenuFrame::SizeToPopup(nsBoxLayoutState& aState, nsSize& aSize)
     if (tmpSize.width == -1 && flex == 0) {
       nsIFrame* frame = mPopupFrames.FirstChild();
       if (!frame) {
-        MarkAsGenerated();
-        frame = mPopupFrames.FirstChild();
-        // No child - just return
-        if (!frame) return PR_FALSE;
+        nsCOMPtr<nsIContent> child;
+        GetMenuChildrenElement(getter_AddRefs(child));
+        if (child &&
+            !nsContentUtils::HasNonEmptyAttr(child, kNameSpaceID_None,
+                                             nsXULAtoms::menugenerated)) {
+          nsCOMPtr<nsIRunnable> ev =
+            new nsASyncMenuGeneration(GetContent());
+          NS_DispatchToCurrentThread(ev);
+        }
+        return PR_FALSE;
       }
 
       NS_ASSERTION(frame->IsBoxFrame(), """"popupChild is not box!!"""");
diff --git a/layout/xul/base/src/nsMenuFrame.h b/layout/xul/base/src/nsMenuFrame.h
index af6e283..4cf9902 100644
--- a/layout/xul/base/src/nsMenuFrame.h
+++ b/layout/xul/base/src/nsMenuFrame.h
@@ -92,6 +92,12 @@ private:
   nsMenuFrame* mFrame;
 };
 
+/**
+ * @note *** Methods marked with '@see comment ***' may cause the frame to be
+ *           deleted during the method call. Be careful whenever using those
+ *           methods.
+ */
+
 class nsMenuFrame : public nsBoxFrame, 
                     public nsIMenuFrame,
                     public nsIScrollableViewProvider
@@ -123,7 +129,7 @@ public:
   NS_IMETHOD SetInitialChildList(nsIAtom*        aListName,
                                  nsIFrame*       aChildList);
   virtual nsIAtom* GetAdditionalChildListName(PRInt32 aIndex) const;
-  virtual void Destroy();
+  virtual void Destroy(); // @see comment ***
 
   // Overridden to prevent events from going to children of the menu.
   NS_IMETHOD BuildDisplayListForChildren(nsDisplayListBuilder*   aBuilder,
@@ -132,7 +138,7 @@ public:
                                          
   NS_IMETHOD HandleEvent(nsPresContext* aPresContext, 
                          nsGUIEvent*     aEvent,
-                         nsEventStatus*  aEventStatus);
+                         nsEventStatus*  aEventStatus); // @see comment ***
 
   NS_IMETHOD  AppendFrames(nsIAtom*        aListName,
                            nsIFrame*       aFrameList);
@@ -146,9 +152,9 @@ public:
 
   // nsIMenuFrame Interface
 
-  NS_IMETHOD ActivateMenu(PRBool aActivateFlag);
-  NS_IMETHOD SelectMenu(PRBool aActivateFlag);
-  NS_IMETHOD OpenMenu(PRBool aActivateFlag);
+  NS_IMETHOD ActivateMenu(PRBool aActivateFlag); // @see comment ***
+  NS_IMETHOD SelectMenu(PRBool aActivateFlag); // @see comment ***
+  NS_IMETHOD OpenMenu(PRBool aActivateFlag); // @see comment ***
 
   NS_IMETHOD MenuIsOpen(PRBool& aResult) { aResult = IsOpen(); return NS_OK; }
   NS_IMETHOD MenuIsContainer(PRBool& aResult) { aResult = IsMenu(); return NS_OK; }
@@ -156,16 +162,16 @@ public:
   NS_IMETHOD MenuIsDisabled(PRBool& aResult) { aResult = IsDisabled(); return NS_OK; }
   
   NS_IMETHOD GetActiveChild(nsIDOMElement** aResult);
-  NS_IMETHOD SetActiveChild(nsIDOMElement* aChild);
+  NS_IMETHOD SetActiveChild(nsIDOMElement* aChild); // @see comment ***
 
-  NS_IMETHOD UngenerateMenu();
+  NS_IMETHOD UngenerateMenu(); // @see comment ***
 
-  NS_IMETHOD SelectFirstItem();
+  NS_IMETHOD SelectFirstItem(); // @see comment ***
 
-  NS_IMETHOD Escape(PRBool& aHandledFlag);
-  NS_IMETHOD Enter();
-  NS_IMETHOD ShortcutNavigation(nsIDOMKeyEvent* aKeyEvent, PRBool& aHandledFlag);
-  NS_IMETHOD KeyboardNavigation(PRUint32 aKeyCode, PRBool& aHandledFlag);
+  NS_IMETHOD Escape(PRBool& aHandledFlag); // @see comment ***
+  NS_IMETHOD Enter(); // @see comment ***
+  NS_IMETHOD ShortcutNavigation(nsIDOMKeyEvent* aKeyEvent, PRBool& aHandledFlag); // @see comment ***
+  NS_IMETHOD KeyboardNavigation(PRUint32 aKeyCode, PRBool& aHandledFlag); // @see comment ***
 
   NS_IMETHOD SetParent(const nsIFrame* aParent);
 
@@ -188,7 +194,7 @@ public:
   PRBool IsMenu();
   PRBool IsDisabled();
   PRBool IsGenerated();
-  NS_IMETHOD ToggleMenuState();
+  NS_IMETHOD ToggleMenuState(); // @see comment ***
 
   void SetIsMenu(PRBool aIsMenu) { mIsMenu = aIsMenu; };
 
@@ -211,33 +217,34 @@ protected:
   void
   ConvertPosition(nsIContent* aPopupElt, nsString& aAnchor, nsString& aAlign);
 
-  void UpdateMenuType(nsPresContext* aPresContext);
-  void UpdateMenuSpecialState(nsPresContext* aPresContext);
+  friend class nsASyncMenuInitialization;
+  void UpdateMenuType(nsPresContext* aPresContext); // @see comment ***
+  void UpdateMenuSpecialState(nsPresContext* aPresContext); // @see comment ***
 
-  void OpenMenuInternal(PRBool aActivateFlag);
+  void OpenMenuInternal(PRBool aActivateFlag); // @see comment ***
   void GetMenuChildrenElement(nsIContent** aResult);
 
   // Examines the key node and builds the accelerator.
-  void BuildAcceleratorText();
+  void BuildAcceleratorText(); // @see comment ***
 
   // Called to execute our command handler.
-  void Execute(nsGUIEvent *aEvent);
+  void Execute(nsGUIEvent *aEvent); // @see comment ***
 
   // Called as a hook just before the menu gets opened.
-  PRBool OnCreate();
+  PRBool OnCreate(); // @see comment ***
 
   // Called as a hook just after the menu gets opened.
-  PRBool OnCreated();
+  PRBool OnCreated(); // @see comment ***
 
   // Called as a hook just before the menu goes away.
-  PRBool OnDestroy();
+  PRBool OnDestroy(); // @see comment ***
 
   // Called as a hook just after the menu goes away.
-  PRBool OnDestroyed();
+  PRBool OnDestroyed(); // @see comment ***
 
   NS_IMETHOD AttributeChanged(PRInt32 aNameSpaceID,
                               nsIAtom* aAttribute,
-                              PRInt32 aModType);
+                              PRInt32 aModType); // @see comment ***
   virtual ~nsMenuFrame();
 
   PRBool SizeToPopup(nsBoxLayoutState& aState, nsSize& aSize);
diff --git a/layout/xul/base/src/nsMenuPopupFrame.cpp b/layout/xul/base/src/nsMenuPopupFrame.cpp
index 718b83f..48f1b2c 100644
--- a/layout/xul/base/src/nsMenuPopupFrame.cpp
+++ b/layout/xul/base/src/nsMenuPopupFrame.cpp
@@ -740,7 +740,28 @@ nsMenuPopupFrame::MovePopupToOtherSideOfParent ( PRBool inFlushAboveBelow, PRInt
 
 } // MovePopupToOtherSideOfParent
 
+class nsASyncMenuActivation : public nsRunnable
+{
+public:
+  nsASyncMenuActivation(nsIContent* aContent)
+    : mContent(aContent)
+  {
+  }
+
+  NS_IMETHOD Run() {
+    if (mContent &&
+        !mContent->AttrValueIs(kNameSpaceID_None, nsXULAtoms::menuactive,
+                               nsXULAtoms::_true, eCaseMatters) &&
+        mContent->AttrValueIs(kNameSpaceID_None, nsXULAtoms::menutobedisplayed,
+                              nsXULAtoms::_true, eCaseMatters)) {
+      mContent->SetAttr(kNameSpaceID_None, nsXULAtoms::menuactive,
+                        NS_LITERAL_STRING(""""true""""), PR_TRUE);
+    }
+    return NS_OK;
+  }
 
+  nsCOMPtr<nsIContent> mContent;
+};
 
 nsresult 
 nsMenuPopupFrame::SyncViewWithFrame(nsPresContext* aPresContext,
@@ -1123,7 +1144,9 @@ nsMenuPopupFrame::SyncViewWithFrame(nsPresContext* aPresContext,
                              nsXULAtoms::_true, eCaseMatters) &&
       mContent->AttrValueIs(kNameSpaceID_None, nsXULAtoms::menutobedisplayed,
                             nsXULAtoms::_true, eCaseMatters)) {
-      mContent->SetAttr(kNameSpaceID_None, nsXULAtoms::menuactive, NS_LITERAL_STRING(""""true""""), PR_TRUE);
+    nsCOMPtr<nsIRunnable> ev =
+      new nsASyncMenuActivation(mContent);
+    NS_DispatchToCurrentThread(ev);
   }
 
   return NS_OK;
@@ -1666,10 +1689,14 @@ nsMenuPopupFrame::ShortcutNavigation(nsIDOMKeyEvent* aKeyEvent, PRBool& aHandled
   nsIMenuFrame* result = FindMenuWithShortcut(aKeyEvent, action);
   if (result) {
     // We got one!
+    nsIFrame* frame = nsnull;
+    CallQueryInterface(result, &frame);
+    nsWeakFrame weakResult(frame);
     aHandledFlag = PR_TRUE;
     SetCurrentMenuItem(result);
-    if (action)
+    if (action && weakResult.IsAlive()) {
       result->Enter();
+    }
   }
 
   return NS_OK;
@@ -1705,6 +1732,7 @@ nsMenuPopupFrame::KeyboardNavigation(PRUint32 aKeyCode, PRBool& aHandledFlag)
   PRBool isContainer = PR_FALSE;
   PRBool isOpen = PR_FALSE;
   PRBool isDisabled = PR_FALSE;
+  nsWeakFrame weakFrame(this);
   if (mCurrentMenu) {
     mCurrentMenu->MenuIsContainer(isContainer);
     mCurrentMenu->MenuIsOpen(isOpen);
@@ -1713,13 +1741,19 @@ nsMenuPopupFrame::KeyboardNavigation(PRUint32 aKeyCode, PRBool& aHandledFlag)
     if (isOpen) {
       // Give our child a shot.
       mCurrentMenu->KeyboardNavigation(aKeyCode, aHandledFlag);
+      NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
     }
     else if (theDirection == eNavigationDirection_End &&
              isContainer && !isDisabled) {
       // The menu is not yet open. Open it and select the first item.
       aHandledFlag = PR_TRUE;
+      nsIFrame* frame = nsnull;
+      CallQueryInterface(mCurrentMenu, &frame);
+      nsWeakFrame weakCurrentFrame(frame);
       mCurrentMenu->OpenMenu(PR_TRUE);
+      NS_ENSURE_TRUE(weakCurrentFrame.IsAlive(), NS_OK);
       mCurrentMenu->SelectFirstItem();
+      NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
     }
   }
 
@@ -1750,6 +1784,7 @@ nsMenuPopupFrame::KeyboardNavigation(PRUint32 aKeyCode, PRBool& aHandledFlag)
     if (theDirection == eNavigationDirection_Start) {
       // Close it up.
       mCurrentMenu->OpenMenu(PR_FALSE);
+      NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
       // SelectMenu() so DOMMenuItemActive is fired for accessibility
       mCurrentMenu->SelectMenu(PR_TRUE);
       aHandledFlag = PR_TRUE;
@@ -1789,6 +1824,7 @@ nsMenuPopupFrame::HideChain()
   
   nsIFrame* frame = GetParent();
   if (frame) {
+    nsWeakFrame weakMenu(frame);
     nsIMenuFrame* menuFrame;
     if (NS_FAILED(CallQueryInterface(frame, &menuFrame))) {
       nsIPopupSetFrame* popupSetFrame = GetPopupSetFrame(GetPresContext());
@@ -1799,7 +1835,9 @@ nsMenuPopupFrame::HideChain()
     }
    
     menuFrame->ActivateMenu(PR_FALSE);
+    NS_ENSURE_TRUE(weakMenu.IsAlive(), NS_OK);
     menuFrame->SelectMenu(PR_FALSE);
+    NS_ENSURE_TRUE(weakMenu.IsAlive(), NS_OK);
 
     // Get the parent.
     nsIMenuParent *menuParent = menuFrame->GetMenuParent();
@@ -1965,8 +2003,9 @@ nsMenuPopupFrame::MoveToAttributePosition()
   xPos = left.ToInteger(&err1);
   yPos = top.ToInteger(&err2);
 
-  if (NS_SUCCEEDED(err1) && NS_SUCCEEDED(err2))
-    MoveTo(xPos, yPos);
+  if (NS_SUCCEEDED(err1) && NS_SUCCEEDED(err2)) {
+    MoveToInternal(xPos, yPos);
+  }
 }
 
 
@@ -2102,9 +2141,22 @@ nsMenuPopupFrame::MoveTo(PRInt32 aLeft, PRInt32 aTop)
   left.AppendInt(aLeft);
   top.AppendInt(aTop);
 
+  nsWeakFrame weakFrame(this);
   mContent->SetAttr(kNameSpaceID_None, nsXULAtoms::left, left, PR_FALSE);
+  if (!weakFrame.IsAlive()) {
+    return;
+  }
   mContent->SetAttr(kNameSpaceID_None, nsXULAtoms::top, top, PR_FALSE);
+  if (!weakFrame.IsAlive()) {
+    return;
+  }
 
+  MoveToInternal(aLeft, aTop);
+}
+
+void
+nsMenuPopupFrame::MoveToInternal(PRInt32 aLeft, PRInt32 aTop)
+{
   nsIView* view = GetView();
   NS_ASSERTION(view->GetParent(), """"Must have parent!"""");
   
diff --git a/layout/xul/base/src/nsMenuPopupFrame.h b/layout/xul/base/src/nsMenuPopupFrame.h
index 76e78f0..c5df8be 100644
--- a/layout/xul/base/src/nsMenuPopupFrame.h
+++ b/layout/xul/base/src/nsMenuPopupFrame.h
@@ -197,6 +197,8 @@ public:
 
   void EnsureMenuItemIsVisible(nsIMenuFrame* aMenuFrame);
 
+  // This sets 'left' and 'top' attributes.
+  // May kill the frame.
   void MoveTo(PRInt32 aLeft, PRInt32 aTop);
 
   void GetAutoPosition(PRBool* aShouldAutoPosition);
@@ -210,6 +212,9 @@ protected:
   friend class nsMenuPopupTimerMediator;
   NS_HIDDEN_(nsresult) Notify(nsITimer* aTimer);
 
+  // Move without updating attributes.
+  void MoveToInternal(PRInt32 aLeft, PRInt32 aTop);
+
   // redefine to tell the box system not to move the
   // views.
   virtual void GetLayoutFlags(PRUint32& aFlags);
diff --git a/layout/xul/base/src/nsPopupBoxObject.cpp b/layout/xul/base/src/nsPopupBoxObject.cpp
index ee71099..42723c4 100644
--- a/layout/xul/base/src/nsPopupBoxObject.cpp
+++ b/layout/xul/base/src/nsPopupBoxObject.cpp
@@ -165,9 +165,10 @@ nsPopupBoxObject::SizeTo(PRInt32 aWidth, PRInt32 aHeight)
   nsAutoString width, height;
   width.AppendInt(aWidth);
   height.AppendInt(aHeight);
-  
-  mContent->SetAttr(kNameSpaceID_None, nsHTMLAtoms::width, width, PR_FALSE);
-  mContent->SetAttr(kNameSpaceID_None, nsHTMLAtoms::height, height, PR_TRUE);
+
+  nsCOMPtr<nsIContent> content = mContent;
+  content->SetAttr(kNameSpaceID_None, nsHTMLAtoms::width, width, PR_FALSE);
+  content->SetAttr(kNameSpaceID_None, nsHTMLAtoms::height, height, PR_TRUE);
 
   return NS_OK;
 }
diff --git a/layout/xul/base/src/nsPopupSetFrame.cpp b/layout/xul/base/src/nsPopupSetFrame.cpp
index 7206c18..53fc8d5 100644
--- a/layout/xul/base/src/nsPopupSetFrame.cpp
+++ b/layout/xul/base/src/nsPopupSetFrame.cpp
@@ -667,7 +667,7 @@ nsPopupSetFrame::OnCreate(PRInt32 aX, PRInt32 aY, nsIContent* aPopupContent)
 
     PRUint32 count = aPopupContent->GetChildCount();
     for (PRUint32 i = 0; i < count; i++) {
-      nsIContent *grandChild = aPopupContent->GetChildAt(i);
+      nsCOMPtr<nsIContent> grandChild = aPopupContent->GetChildAt(i);
 
       if (grandChild->Tag() == nsXULAtoms::menuitem) {
         // See if we have a command attribute.
diff --git a/layout/xul/base/src/nsProgressMeterFrame.cpp b/layout/xul/base/src/nsProgressMeterFrame.cpp
index 24324ac..36f891d 100644
--- a/layout/xul/base/src/nsProgressMeterFrame.cpp
+++ b/layout/xul/base/src/nsProgressMeterFrame.cpp
@@ -98,6 +98,8 @@ nsProgressMeterFrame::AttributeChanged(PRInt32 aNameSpaceID,
     if (!barChild) return NS_OK;
     nsIFrame* remainderChild = barChild->GetNextSibling();
     if (!remainderChild) return NS_OK;
+    nsCOMPtr<nsIContent> remainderContent = remainderChild->GetContent();
+    if (!remainderContent) return NS_OK;
 
     nsAutoString value;
     mContent->GetAttr(kNameSpaceID_None, nsHTMLAtoms::value, value);
@@ -112,11 +114,14 @@ nsProgressMeterFrame::AttributeChanged(PRInt32 aNameSpaceID,
     nsAutoString leftFlex, rightFlex;
     leftFlex.AppendInt(flex);
     rightFlex.AppendInt(remainder);
+    nsWeakFrame weakFrame(this);
     barChild->GetContent()->SetAttr(kNameSpaceID_None, nsXULAtoms::flex, leftFlex, PR_TRUE);
-    remainderChild->GetContent()->SetAttr(kNameSpaceID_None, nsXULAtoms::flex, rightFlex, PR_TRUE);
+    remainderContent->SetAttr(kNameSpaceID_None, nsXULAtoms::flex, rightFlex, PR_TRUE);
 
-    nsBoxLayoutState state(GetPresContext());
-    MarkDirty(state);
+    if (weakFrame.IsAlive()) {
+      nsBoxLayoutState state(GetPresContext());
+      MarkDirty(state);
+    }
   }
   return NS_OK;
 }
diff --git a/layout/xul/base/src/nsScrollbarButtonFrame.cpp b/layout/xul/base/src/nsScrollbarButtonFrame.cpp
index da7b9a8..2deec28 100644
--- a/layout/xul/base/src/nsScrollbarButtonFrame.cpp
+++ b/layout/xul/base/src/nsScrollbarButtonFrame.cpp
@@ -180,9 +180,12 @@ nsScrollbarButtonFrame::HandleButtonPress(nsPresContext* aPresContext,
       return PR_FALSE;
   }
   // set this attribute so we can style it later
+  nsWeakFrame weakFrame(this);
   mContent->SetAttr(kNameSpaceID_None, nsXULAtoms::active, NS_LITERAL_STRING(""""true""""), PR_TRUE);
 
-  DoButtonAction(smoothScroll);
+  if (weakFrame.IsAlive()) {
+    DoButtonAction(smoothScroll);
+  }
   if (repeat)
     nsRepeatService::GetInstance()->Start(this);
   return PR_TRUE;
@@ -226,7 +229,7 @@ nsScrollbarButtonFrame::DoButtonAction(PRBool aSmoothScroll)
     return;
 
   // get the scrollbars content node
-  nsIContent* content = scrollbar->GetContent();
+  nsCOMPtr<nsIContent> content = scrollbar->GetContent();
 
   // get the current pos
   PRInt32 curpos = nsSliderFrame::GetCurrentPosition(content);
diff --git a/layout/xul/base/src/nsSplitterFrame.cpp b/layout/xul/base/src/nsSplitterFrame.cpp
index 68302e9..a9ffa0f 100644
--- a/layout/xul/base/src/nsSplitterFrame.cpp
+++ b/layout/xul/base/src/nsSplitterFrame.cpp
@@ -564,12 +564,13 @@ nsSplitterFrameInner::MouseDrag(nsPresContext* aPresContext, nsGUIEvent* aEvent)
           //printf(""""Collapse right\n"""");
           if (supportsAfter) 
           {
-            mOuter->mContent->SetAttr(kNameSpaceID_None, nsXULAtoms::substate,
-                                      NS_LITERAL_STRING(""""after""""),
-                                      PR_TRUE);
-            mOuter->mContent->SetAttr(kNameSpaceID_None, nsXULAtoms::state,
-                                      NS_LITERAL_STRING(""""collapsed""""),
-                                      PR_TRUE);
+            nsCOMPtr<nsIContent> outer = mOuter->mContent;
+            outer->SetAttr(kNameSpaceID_None, nsXULAtoms::substate,
+                           NS_LITERAL_STRING(""""after""""),
+                           PR_TRUE);
+            outer->SetAttr(kNameSpaceID_None, nsXULAtoms::state,
+                           NS_LITERAL_STRING(""""collapsed""""),
+                           PR_TRUE);
           }
 
         } else if (oldPos < 0 && oldPos < pos)
@@ -577,12 +578,13 @@ nsSplitterFrameInner::MouseDrag(nsPresContext* aPresContext, nsGUIEvent* aEvent)
           //printf(""""Collapse left\n"""");
           if (supportsBefore)
           {
-            mOuter->mContent->SetAttr(kNameSpaceID_None, nsXULAtoms::substate,
-                                      NS_LITERAL_STRING(""""before""""),
-                                      PR_TRUE);
-            mOuter->mContent->SetAttr(kNameSpaceID_None, nsXULAtoms::state,
-                                      NS_LITERAL_STRING(""""collapsed""""),
-                                      PR_TRUE);
+            nsCOMPtr<nsIContent> outer = mOuter->mContent;
+            outer->SetAttr(kNameSpaceID_None, nsXULAtoms::substate,
+                           NS_LITERAL_STRING(""""before""""),
+                           PR_TRUE);
+            outer->SetAttr(kNameSpaceID_None, nsXULAtoms::state,
+                           NS_LITERAL_STRING(""""collapsed""""),
+                           PR_TRUE);
           }
         }
       }
@@ -962,7 +964,7 @@ nsSplitterFrameInner::UpdateState()
                                             (newState == CollapsedBefore ||
                                              mState == CollapsedBefore));
     if (splitterSibling) {
-      nsIContent* sibling = splitterSibling->GetContent();
+      nsCOMPtr<nsIContent> sibling = splitterSibling->GetContent();
       if (sibling) {
         if (mState == CollapsedBefore || mState == CollapsedAfter) {
           // CollapsedBefore -> Open
@@ -1108,7 +1110,9 @@ nsSplitterFrameInner::SetPreferredSize(nsBoxLayoutState& aState, nsIBox* aChildB
                            prefValue, eCaseMatters))
      return;
 
+  nsWeakFrame weakBox(aChildBox);
   content->SetAttr(kNameSpaceID_None, attribute, prefValue, PR_TRUE);
+  ENSURE_TRUE(weakBox.IsAlive());
   aChildBox->MarkDirty(aState);
 }
 
diff --git a/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp b/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
index 0281be3..6f645d7 100644
--- a/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
+++ b/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
@@ -800,6 +800,9 @@ nsTreeBodyFrame::UpdateScrollbars(const ScrollParts& aParts)
   float t2p = GetPresContext()->TwipsToPixels();
   nscoord rowHeightAsPixels = NSToCoordRound((float)mRowHeight*t2p);
 
+  // Keep strong ref.
+  nsCOMPtr<nsIContent> hScroll = aParts.mHScrollbarContent;
+
   if (aParts.mVScrollbar) {
     nsAutoString curPos;
     curPos.AppendInt(mTopRowIndex*rowHeightAsPixels);
@@ -809,7 +812,7 @@ nsTreeBodyFrame::UpdateScrollbars(const ScrollParts& aParts)
   if (aParts.mHScrollbar) {
     nsAutoString curPos;
     curPos.AppendInt(mHorzPosition);
-    aParts.mHScrollbarContent->SetAttr(kNameSpaceID_None, nsXULAtoms::curpos, curPos, PR_TRUE);
+    hScroll->SetAttr(kNameSpaceID_None, nsXULAtoms::curpos, curPos, PR_TRUE);
   }
 }
 
@@ -877,12 +880,13 @@ nsTreeBodyFrame::InvalidateScrollbars(const ScrollParts& aParts)
 {
   if (mUpdateBatchNest || !mView)
     return;
-
+  nsWeakFrame weakFrame(this);
   nsPresContext* presContext = GetPresContext();
 
+  nsCOMPtr<nsIContent> vScrollbar = aParts.mVScrollbarContent;
+  nsCOMPtr<nsIContent> hScrollbar = aParts.mHScrollbarContent;
   if (aParts.mVScrollbar) {
     // Do Vertical Scrollbar 
-    nsIContent* scrollbar = aParts.mVScrollbarContent;
     nsAutoString maxposStr;
   
     float t2p = presContext->TwipsToPixels();
@@ -890,31 +894,34 @@ nsTreeBodyFrame::InvalidateScrollbars(const ScrollParts& aParts)
   
     PRInt32 size = rowHeightAsPixels * (mRowCount > mPageLength ? mRowCount - mPageLength : 0);
     maxposStr.AppendInt(size);
-    scrollbar->SetAttr(kNameSpaceID_None, nsXULAtoms::maxpos, maxposStr, PR_TRUE);
-  
+    vScrollbar->SetAttr(kNameSpaceID_None, nsXULAtoms::maxpos, maxposStr, PR_TRUE);
+    ENSURE_TRUE(weakFrame.IsAlive());
+
     // Also set our page increment and decrement.
     nscoord pageincrement = mPageLength*rowHeightAsPixels;
     nsAutoString pageStr;
     pageStr.AppendInt(pageincrement);
-    scrollbar->SetAttr(kNameSpaceID_None, nsXULAtoms::pageincrement, pageStr, PR_TRUE);
+    vScrollbar->SetAttr(kNameSpaceID_None, nsXULAtoms::pageincrement, pageStr, PR_TRUE);
+    ENSURE_TRUE(weakFrame.IsAlive());
   }
 
   if (aParts.mHScrollbar && aParts.mColumnsScrollableView) {
     // And now Horizontal scrollbar
     nsRect bounds = aParts.mColumnsScrollableView->View()->GetBounds();
-    nsIContent* scrollbar = aParts.mHScrollbarContent;
     nsAutoString maxposStr;
 
     maxposStr.AppendInt(mHorzWidth > bounds.width ? mHorzWidth - bounds.width : 0);
-    scrollbar->SetAttr(kNameSpaceID_None, nsXULAtoms::maxpos, maxposStr, PR_TRUE);
+    hScrollbar->SetAttr(kNameSpaceID_None, nsXULAtoms::maxpos, maxposStr, PR_TRUE);
+    ENSURE_TRUE(weakFrame.IsAlive());
   
     nsAutoString pageStr;
     pageStr.AppendInt(bounds.width);
-    scrollbar->SetAttr(kNameSpaceID_None, nsXULAtoms::pageincrement, pageStr, PR_TRUE);
+    hScrollbar->SetAttr(kNameSpaceID_None, nsXULAtoms::pageincrement, pageStr, PR_TRUE);
+    ENSURE_TRUE(weakFrame.IsAlive());
   
     pageStr.Truncate();
     pageStr.AppendInt(NSIntPixelsToTwips(16, presContext->PixelsToTwips()));
-    scrollbar->SetAttr(kNameSpaceID_None, nsXULAtoms::increment, pageStr, PR_TRUE);
+    hScrollbar->SetAttr(kNameSpaceID_None, nsXULAtoms::increment, pageStr, PR_TRUE);
   }
 }
 
@@ -3835,7 +3842,7 @@ nsTreeBodyFrame::ScrollHorzInternal(const ScrollParts& aParts, PRInt32 aPosition
   PRInt32 delta = aPosition - mHorzPosition;
   mHorzPosition = aPosition;
 
-  nsPresContext* presContext = GetPresContext();
+  nsRefPtr<nsPresContext> presContext = GetPresContext();
   float t2p = presContext->TwipsToPixels();
 
   // See if we have a background image.  If we do, then we cannot blit.
@@ -3853,9 +3860,10 @@ nsTreeBodyFrame::ScrollHorzInternal(const ScrollParts& aParts, PRInt32 aPosition
   // Reflect the change in the scrollbar 
   nsAutoString curPos;
   curPos.AppendInt(aPosition);
+  nsWeakFrame weakFrame(this);
   aParts.mHScrollbarContent->SetAttr(kNameSpaceID_None,
                                      nsXULAtoms::curpos, curPos, PR_TRUE);
-
+  NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
   // Update the column scroll view
   aParts.mColumnsScrollableView->ScrollTo(mHorzPosition, 0, 0);
 
@@ -3881,6 +3889,7 @@ nsTreeBodyFrame::ScrollbarButtonPressed(nsISupports* aScrollbar, PRInt32 aOldInd
 
   ScrollParts parts = GetScrollParts();
 
+  nsWeakFrame weakFrame(this);
   if (sf == parts.mVScrollbar) {
     if (aNewIndex > aOldIndex)
       ScrollToRowInternal(parts, mTopRowIndex+1);
@@ -3890,6 +3899,7 @@ nsTreeBodyFrame::ScrollbarButtonPressed(nsISupports* aScrollbar, PRInt32 aOldInd
     ScrollHorzInternal(parts, aNewIndex);
   }
 
+  NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
   UpdateScrollbars(parts);
 
   return NS_OK;
@@ -3915,7 +3925,9 @@ nsTreeBodyFrame::PositionChanged(nsISupports* aScrollbar, PRInt32 aOldIndex, PRI
     nscoord rh = NSToCoordRound((float)mRowHeight*t2p);
 
     nscoord newrow = aNewIndex/rh;
+    nsWeakFrame weakFrame(this);
     ScrollInternal(parts, newrow);
+    NS_ENSURE_TRUE(weakFrame.IsAlive(), NS_OK);
 
     // Go exactly where we're supposed to
     // Update the scrollbar.
diff --git a/layout/xul/base/src/tree/src/nsTreeUtils.cpp b/layout/xul/base/src/tree/src/nsTreeUtils.cpp
index 4a83dd1..89e4639 100644
--- a/layout/xul/base/src/tree/src/nsTreeUtils.cpp
+++ b/layout/xul/base/src/tree/src/nsTreeUtils.cpp
@@ -137,13 +137,13 @@ nsTreeUtils::UpdateSortIndicators(nsIContent* aColumn, const nsAString& aDirecti
   aColumn->SetAttr(kNameSpaceID_None, nsXULAtoms::sortActive, NS_LITERAL_STRING(""""true""""), PR_TRUE);
 
   // Unset sort attribute(s) on the other columns
-  nsIContent* parentContent = aColumn->GetParent();
+  nsCOMPtr<nsIContent> parentContent = aColumn->GetParent();
   if (parentContent &&
       parentContent->NodeInfo()->Equals(nsXULAtoms::treecols,
                                         kNameSpaceID_XUL)) {
     PRUint32 i, numChildren = parentContent->GetChildCount();
     for (i = 0; i < numChildren; ++i) {
-      nsIContent *childContent = parentContent->GetChildAt(i);
+      nsCOMPtr<nsIContent> childContent = parentContent->GetChildAt(i);
 
       if (childContent &&
           childContent != aColumn &&"""
d0ee46c2d6b24f47cf81648a39751d5a74b74444,112973,351116,bclary%bclary.com,"JavaScript Test - regression test for bug 351116, by Jesse Ruderman
",1157244542,"""diff --git a/js/tests/js1_5/Regress/regress-351116.js b/js/tests/js1_5/Regress/regress-351116.js
new file mode 100755
index 0000000..577fc27
--- /dev/null
+++ b/js/tests/js1_5/Regress/regress-351116.js
@@ -0,0 +1,63 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Jesse Ruderman
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 351116;
+var summary = 'formal parameter and inner function have same name';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  var f = function (s) { function s() { } }
+
+  if (typeof window != 'undefined')
+  {
+    window.open('javascript:function (s) { function s() { } }');
+  }
+
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
cc1d04808b4898493e839c0f9ef2512777e88dcd,112985,351116,brendan%mozilla.org,"Fix local function shadowing argument decompilation (351116, r=mrbkap).
",1157229222,"""diff --git a/js/src/jsopcode.c b/js/src/jsopcode.c
index 0cc664f..810856c 100644
--- a/js/src/jsopcode.c
+++ b/js/src/jsopcode.c
@@ -3224,6 +3224,8 @@ js_DecompileFunction(JSPrinter *jp, JSFunction *fun)
     js_puts(jp, """"("""");
 
     if (FUN_INTERPRETED(fun) && fun->object) {
+        size_t paramsize;
+
         /*
          * Print the parameters.
          *
@@ -3237,12 +3239,13 @@ js_DecompileFunction(JSPrinter *jp, JSFunction *fun)
         cx = jp->sprinter.context;
         nargs = fun->nargs;
         mark = JS_ARENA_MARK(&cx->tempPool);
-        JS_ARENA_ALLOCATE_CAST(params, JSAtom **, &cx->tempPool,
-                               nargs * sizeof(JSAtom *));
+        paramsize = nargs * sizeof(JSAtom *);
+        JS_ARENA_ALLOCATE_CAST(params, JSAtom **, &cx->tempPool, paramsize);
         if (!params) {
             JS_ReportOutOfMemory(cx);
             return JS_FALSE;
         }
+        memset(params, 0, paramsize);
         scope = OBJ_SCOPE(fun->object);
         for (sprop = SCOPE_LAST_PROP(scope); sprop; sprop = sprop->parent) {
             if (sprop->getter != js_GetArgument)
diff --git a/js/src/jsparse.c b/js/src/jsparse.c
index 2acb5e0..3b52df1 100644
--- a/js/src/jsparse.c
+++ b/js/src/jsparse.c
@@ -1103,12 +1103,14 @@ FunctionDef(JSContext *cx, JSTokenStream *ts, JSTreeContext *tc,
          * local variable to bind its name to its value, and not an activation
          * object property (it might also need the activation property, if the
          * outer function contains with statements, e.g., but the stack slot
-         * wins when jsemit.c's LookupArgOrVar can optimize a JSOP_NAME into a
+         * wins when jsemit.c's BindNameToSlot can optimize a JSOP_NAME into a
          * JSOP_GETVAR bytecode).
          */
         if (AT_TOP_LEVEL(tc) && (tc->flags & TCF_IN_FUNCTION)) {
+            JSScopeProperty *sprop;
+
             /*
-             * Define a property on the outer function so that LookupArgOrVar
+             * Define a property on the outer function so that BindNameToSlot
              * can properly optimize accesses.
              */
             JS_ASSERT(OBJ_GET_CLASS(cx, varobj) == &js_FunctionClass);
@@ -1119,16 +1121,26 @@ FunctionDef(JSContext *cx, JSTokenStream *ts, JSTreeContext *tc,
             }
             if (prop)
                 OBJ_DROP_PROPERTY(cx, pobj, prop);
+            sprop = NULL;
             if (!prop ||
                 pobj != varobj ||
-                ((JSScopeProperty *)prop)->getter != js_GetLocalVariable) {
+                (sprop = (JSScopeProperty *)prop,
+                 sprop->getter != js_GetLocalVariable)) {
+                uintN sflags;
+
+                /*
+                 * Use SPROP_IS_DUPLICATE if there is a formal argument of the
+                 * same name, so the decompiler can find the parameter name.
+                 */
+                sflags = (sprop && sprop->getter == js_GetArgument)
+                         ? SPROP_IS_DUPLICATE | SPROP_HAS_SHORTID
+                         : SPROP_HAS_SHORTID;
                 if (!js_AddHiddenProperty(cx, varobj, ATOM_TO_JSID(funAtom),
                                           js_GetLocalVariable,
                                           js_SetLocalVariable,
                                           SPROP_INVALID_SLOT,
                                           JSPROP_PERMANENT | JSPROP_SHARED,
-                                          SPROP_HAS_SHORTID,
-                                          fp->fun->u.i.nvars)) {
+                                          sflags, fp->fun->u.i.nvars)) {
                     return NULL;
                 }
                 if (fp->fun->u.i.nvars == JS_BITMASK(16)) {"""
fc224dfa9225eeb3adbc4358c6b49c098fbceb43,113103,350640,nelson%bolyard.com,"When verifying a signed digest, ensure that the digest is DER encoded and
that there is no extra stuff after the DER encoded digest.  Bug 350640.
r=julien.pierre,rrelyea
",1156996488,"""diff --git a/security/nss/lib/util/secdig.c b/security/nss/lib/util/secdig.c
index 8f118c6..ade3bf9 100644
--- a/security/nss/lib/util/secdig.c
+++ b/security/nss/lib/util/secdig.c
@@ -33,7 +33,7 @@
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
-/* $Id: secdig.c,v 1.6 2006-08-15 01:34:38 wtchang%redhat.com Exp $ */
+/* $Id: secdig.c,v 1.7 2006-08-31 03:54:48 nelson%bolyard.com Exp $ */
 #include """"secdig.h""""
 
 #include """"secoid.h""""
@@ -166,20 +166,25 @@ SGN_DecodeDigestInfo(SECItem *didata)
     PRArenaPool *arena;
     SGNDigestInfo *di;
     SECStatus rv = SECFailure;
+    SECItem      diCopy   = {siBuffer, NULL, 0};
 
     arena = PORT_NewArena(SEC_ASN1_DEFAULT_ARENA_SIZE);
     if(arena == NULL)
 	return NULL;
 
+    rv = SECITEM_CopyItem(arena, &diCopy, didata);
+    if (rv != SECSuccess) {
+	PORT_FreeArena(arena, PR_FALSE);
+    	return NULL;
+    }
+
     di = (SGNDigestInfo *)PORT_ArenaZAlloc(arena, sizeof(SGNDigestInfo));
-    if(di != NULL)
-    {
+    if (di != NULL) {
 	di->arena = arena;
-	rv = SEC_ASN1DecodeItem(arena, di, sgn_DigestInfoTemplate, didata);
+	rv = SEC_QuickDERDecodeItem(arena, di, sgn_DigestInfoTemplate, &diCopy);
     }
 	
-    if((di == NULL) || (rv != SECSuccess))
-    {
+    if ((di == NULL) || (rv != SECSuccess)) {
 	PORT_FreeArena(arena, PR_FALSE);
 	di = NULL;
     }"""
d95a636109551b52d01f55af02c80aa8324d6687,113180,350312,brendan%mozilla.org,"Fix try/catch/finally code generation (350312, r=igor/shaver).
",1156893322,"""diff --git a/content/xul/document/public/nsIXULPrototypeCache.h b/content/xul/document/public/nsIXULPrototypeCache.h
index c8f3265..40f29d5 100644
--- a/content/xul/document/public/nsIXULPrototypeCache.h
+++ b/content/xul/document/public/nsIXULPrototypeCache.h
@@ -129,7 +129,7 @@ const char XUL_FASTLOAD_FILE_BASENAME[] = """"XUL"""";
 // Increase the subtractor when changing version, say when changing the
 // (opaque to FastLoad code) format of JS script, function, regexp, etc.
 // XDR serializations.
-#define XUL_FASTLOAD_FILE_VERSION       (0xfeedbeef - 16)
+#define XUL_FASTLOAD_FILE_VERSION       (0xfeedbeef - 18)
 
 #define XUL_SERIALIZATION_BUFFER_SIZE   (64 * 1024)
 #define XUL_DESERIALIZATION_BUFFER_SIZE (8 * 1024)
diff --git a/js/src/jsbool.h b/js/src/jsbool.h
index 552bdef..8dbd218 100644
--- a/js/src/jsbool.h
+++ b/js/src/jsbool.h
@@ -45,6 +45,18 @@
 
 JS_BEGIN_EXTERN_C
 
+/*
+ * Crypto-booleans, not visible to script but used internally by the engine.
+ *
+ * JSVAL_HOLE is a useful value for identifying a hole in an array.  It's also
+ * used in the interpreter to represent """"no exception pending"""".  In general it
+ * can be used to represent """"no value"""".
+ *
+ * JSVAL_ARETURN is used to throw asynchronous return for generator.close().
+ */
+#define JSVAL_HOLE      BOOLEAN_TO_JSVAL(2)
+#define JSVAL_ARETURN   BOOLEAN_TO_JSVAL(3)
+
 extern JSClass js_BooleanClass;
 
 extern JSObject *
diff --git a/js/src/jsemit.c b/js/src/jsemit.c
index 25cfa0e..b572618 100644
--- a/js/src/jsemit.c
+++ b/js/src/jsemit.c
@@ -329,11 +329,10 @@ ReportStatementTooLarge(JSContext *cx, JSCodeGenerator *cg)
   Note that backpatch chains would present a problem for BuildSpanDepTable,
   which inspects bytecode to build cg->spanDeps on demand, when the first
   short jump offset overflows.  To solve this temporary problem, we emit a
-  proxy bytecode (JSOP_BACKPATCH; JSOP_BACKPATCH_PUSH for jumps that push a
-  result on the interpreter's stack, namely JSOP_GOSUB; or JSOP_BACKPATCH_POP
-  for branch ops) whose nuses/ndefs counts help keep the stack balanced, but
-  whose opcode format distinguishes its backpatch delta immediate operand from
-  a normal jump offset.
+  proxy bytecode (JSOP_BACKPATCH; JSOP_BACKPATCH_POP for branch ops) whose
+  nuses/ndefs counts help keep the stack balanced, but whose opcode format
+  distinguishes its backpatch delta immediate operand from a normal jump
+  offset.
  */
 static int
 BalanceJumpTargets(JSJumpTarget **jtp)
@@ -1352,7 +1351,7 @@ EmitNonLocalJumpFixup(JSContext *cx, JSCodeGenerator *cg, JSStmtInfo *toStmt,
           case STMT_FINALLY:
             if (js_NewSrcNote(cx, cg, SRC_HIDDEN) < 0)
                 return JS_FALSE;
-            jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH_PUSH, &GOSUBS(*stmt));
+            jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH, &GOSUBS(*stmt));
             if (jmp < 0)
                 return JS_FALSE;
             break;
@@ -4379,8 +4378,7 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
         if (pn->pn_kid3) {
             if (js_NewSrcNote(cx, cg, SRC_HIDDEN) < 0)
                 return JS_FALSE;
-            jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH_PUSH,
-                                  &GOSUBS(stmtInfo));
+            jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH, &GOSUBS(stmtInfo));
             if (jmp < 0)
                 return JS_FALSE;
 
@@ -4420,7 +4418,7 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
              *
              * If there's no catch block without a catchguard, the last
              * <offset to next catch block> points to rethrow code.  This
-             * code will GOSUB to the finally code if appropriate, and is
+             * code will [gosub] to the finally code if appropriate, and is
              * also used for the catch-all trynote for capturing exceptions
              * thrown from catch{} blocks.
              */
@@ -4438,6 +4436,10 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
                     /* Fix up and clean up previous catch block. */
                     CHECK_AND_SET_JUMP_OFFSET_AT(cx, cg, guardJump);
 
+                    /* Set cx->throwing to protect cx->exception from the GC. */
+                    if (!js_Emit1(cx, cg, JSOP_THROWING) < 0)
+                        return JS_FALSE;
+
                     /*
                      * Emit an unbalanced [leaveblock] for the previous catch,
                      * whose block object count is saved below.
@@ -4472,12 +4474,11 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
 
                 /* gosub <finally>, if required */
                 if (pn->pn_kid3) {
-                    jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH_PUSH,
+                    jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH,
                                           &GOSUBS(stmtInfo));
                     if (jmp < 0)
                         return JS_FALSE;
-                    JS_ASSERT(cg->stackDepth == depth + 1);
-                    cg->stackDepth = depth;
+                    JS_ASSERT(cg->stackDepth == depth);
                 }
 
                 /*
@@ -4499,64 +4500,62 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
         }
 
         /*
-         * We emit a [setsp, exception, gosub, throw] block for rethrowing
-         * when there's no unguarded catch, and also for running finally code
-         * while letting an uncaught exception pass through.
+         * We emit a [setsp][gosub] sequence for running finally code while
+         * letting an uncaught exception pass thrown from within the try in a
+         * try-finally.  The [gosub] and [retsub] opcodes will take care of
+         * stacking and rethrowing any exception pending across the finally.
+         *
+         * For rethrowing after a try-catch(guard)-finally, we have a problem:
+         * all the guards have mismatched, leaving cx->exception still set but
+         * cx->throwing clear, so that no exception appears to be pending for
+         * [gosub] to stack and [retsub] to rethrow.  We must emit a special
+         * [throwing] opcode in front of the [setsp][gosub] finally sequence.
+         * This opcode will restore cx->throwing to true before running the
+         * finally.
+         * 
+         * For rethrowing after a try-catch(guard) without a finally, we emit
+         * [throwing] before the [setsp][exception][throw] rethrow sequence.
          */
         if (pn->pn_kid3 || (lastCatch && lastCatch->pn_kid2)) {
             /*
-             * Emit another stack fixup, because the catch could itself
-             * throw an exception in an unbalanced state, and the finally
-             * may need to call functions.  If there is no finally, only
-             * guarded catches, the rethrow code below nevertheless needs
-             * stack fixup.
-             */
-            finallyCatch = CG_OFFSET(cg);
-
-            /*
              * Last catch guard jumps to the rethrow code sequence if none
              * of the guards match.  Target guardJump at the beginning of the
              * rethrow sequence, just in case a guard expression throws and
              * leaves the stack unbalanced.
-             *
-             * What's more, we must jump to the front of the rethrow sequence
-             * for a second reason: to re-sample the pending exception via the
-             * [exception] opcode, so that it can be saved across the [gosub].
-             * See below for case 2 in the comment describing finally clause
-             * stack budget.
              */
-            if (lastCatch && lastCatch->pn_kid2)
+            if (lastCatch && lastCatch->pn_kid2) {
                 CHECK_AND_SET_JUMP_OFFSET_AT(cx, cg, GUARDJUMP(stmtInfo));
+                if (pn->pn_kid3 && !js_Emit1(cx, cg, JSOP_THROWING) < 0)
+                    return JS_FALSE;
+            }
 
+            /*
+             * Emit another stack fixup, because the catch could itself
+             * throw an exception in an unbalanced state, and the finally
+             * may need to call functions.  If there is no finally, only
+             * guarded catches, the rethrow code below nevertheless needs
+             * stack fixup.
+             */
+            finallyCatch = CG_OFFSET(cg);
             EMIT_UINT16_IMM_OP(JSOP_SETSP, (jsatomid)depth);
             cg->stackDepth = depth;
 
-            if (js_NewSrcNote(cx, cg, SRC_HIDDEN) < 0 ||
-                js_Emit1(cx, cg, JSOP_EXCEPTION) < 0) {
-                return JS_FALSE;
-            }
-
             if (pn->pn_kid3) {
-                jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH_PUSH,
+                jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH,
                                       &GOSUBS(stmtInfo));
                 if (jmp < 0)
                     return JS_FALSE;
 
-                /*
-                 * Exception and retsub pc index are modeled as on the stack.
-                 * Decrease cg->stackDepth by one to account for JSOP_RETSUB
-                 * popping the pc index.
-                 */
-                JS_ASSERT(cg->stackDepth == depth + 2);
-                JS_ASSERT((uintN)cg->stackDepth <= cg->maxStackDepth);
-                cg->stackDepth = depth + 1;
-            }
-
-            if (js_NewSrcNote(cx, cg, SRC_HIDDEN) < 0 ||
-                js_Emit1(cx, cg, JSOP_THROW) < 0) {
-                return JS_FALSE;
+                JS_ASSERT(cg->stackDepth == depth);
+                JS_ASSERT((uintN)depth <= cg->maxStackDepth);
+            } else {
+                if (js_NewSrcNote(cx, cg, SRC_HIDDEN) < 0 ||
+                    js_Emit1(cx, cg, JSOP_EXCEPTION) < 0 ||
+                    js_NewSrcNote(cx, cg, SRC_HIDDEN) < 0 ||
+                    js_Emit1(cx, cg, JSOP_THROW) < 0) {
+                    return JS_FALSE;
+                }
             }
-            JS_ASSERT(cg->stackDepth == depth);
         }
 
         /*
@@ -4568,30 +4567,10 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
                 return JS_FALSE;
 
             /*
-             * The stack budget must be balanced at this point.  There are
-             * three cases:
-             *
-             * 1.  try-finally: we need two more slots for the saved exception
-             *     and the JSOP_RETSUB's return pc index that was pushed by
-             *     the JSOP_GOSUB opcode that called this finally clause.
-             *
-             * 2.  try-catch(guard)...-catch(guard)-finally: we can't know at
-             *     compile time whether a guarded catch caught the exception,
-             *     so we may need to propagate it via re-throw bytecode when
-             *     the finally returns.  In this case, if no guard expression
-             *     evaluates to true, we will jump to the rethrow sequence,
-             *     which re-samples cx->exception using JSOP_EXCEPTION, then
-             *     calls the finally subroutine.  So in this case as well as
-             *     in case 1, two more slots will already be on the stack.
-             *
-             * 3.  try-catch-finally or try-catch(guard)...-catch-finally:
-             *     we need one slot for the JSOP_RETSUB's return pc index.
-             *     The unguarded catch is guaranteed to pop the exception,
-             *     i.e., to """"catch the exception"""" -- so we do not need to
-             *     stack it across the finally in order to propagate it --
-             *     unless the catch block explicitly re-throws it!  We can't
-             *     know whether this will happen by static analysis, so we
-             *     must always budget for two slots.
+             * The stack budget must be balanced at this point.  All [gosub]
+             * calls emitted before this point will push two stack slots, one
+             * for the pending exception (or JSVAL_HOLE if there is no pending
+             * exception) and one for the [retsub] pc-index.
              */
             JS_ASSERT(cg->stackDepth == depth);
             cg->stackDepth += 2;
@@ -4609,7 +4588,7 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
             }
 
             /* Restore stack depth budget to its balanced state. */
-            JS_ASSERT(cg->stackDepth == depth + 1);
+            JS_ASSERT(cg->stackDepth == depth + 2);
             cg->stackDepth = depth;
         }
         if (!js_PopStatementCG(cx, cg))
@@ -6390,40 +6369,3 @@ js_FinishTakingTryNotes(JSContext *cx, JSCodeGenerator *cg, JSTryNote *notes)
     notes[count].length = CG_OFFSET(cg);
     notes[count].catchStart = 0;
 }
-
-#if JS_HAS_GENERATORS
-
-jsbytecode *
-js_FindFinallyHandler(JSScript *script, jsbytecode *pc)
-{
-    JSTryNote *tn;
-    ptrdiff_t off;
-
-    tn = script->trynotes;
-    if (!tn)
-        return NULL;
-
-    off = pc - script->main;
-    if (off < 0)
-        return NULL;
-
-    JS_ASSERT(tn->catchStart != 0);
-    do {
-        if ((jsuword)(off - tn->start) < (jsuword)tn->length) {
-            /*
-             * We have a handler, is it finally?
-             *
-             * Catch bytecode begins with:   JSOP_SETSP JSOP_ENTERBLOCK
-             * Finally bytecode begins with: JSOP_SETSP JSOP_EXCEPTION
-             */
-            pc = script->main + tn->catchStart;
-            JS_ASSERT(*pc == JSOP_SETSP);
-            if (pc[js_CodeSpec[JSOP_SETSP].length] == JSOP_EXCEPTION)
-                return pc;
-            JS_ASSERT(pc[js_CodeSpec[JSOP_SETSP].length] == JSOP_ENTERBLOCK);
-        }
-    } while ((++tn)->catchStart != 0);
-    return NULL;
-}
-
-#endif
diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index 6a69667..3dc22e0 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -5452,12 +5452,18 @@ interrupt:
           END_CASE(JSOP_SETSP)
 
           BEGIN_CASE(JSOP_GOSUB)
+            JS_ASSERT(cx->exception != JSVAL_HOLE);
+            lval = cx->throwing ? cx->exception : JSVAL_HOLE;
+            PUSH(lval);
             i = PTRDIFF(pc, script->main, jsbytecode) + JSOP_GOSUB_LENGTH;
             len = GET_JUMP_OFFSET(pc);
             PUSH(INT_TO_JSVAL(i));
           END_VARLEN_CASE
 
           BEGIN_CASE(JSOP_GOSUBX)
+            JS_ASSERT(cx->exception != JSVAL_HOLE);
+            lval = cx->throwing ? cx->exception : JSVAL_HOLE;
+            PUSH(lval);
             i = PTRDIFF(pc, script->main, jsbytecode) + JSOP_GOSUBX_LENGTH;
             len = GET_JUMPX_OFFSET(pc);
             PUSH(INT_TO_JSVAL(i));
@@ -5466,6 +5472,19 @@ interrupt:
           BEGIN_CASE(JSOP_RETSUB)
             rval = POP();
             JS_ASSERT(JSVAL_IS_INT(rval));
+            lval = POP();
+            if (lval != JSVAL_HOLE) {
+                /*
+                 * Exception was pending during finally, throw it *before* we
+                 * adjust pc, because pc indexes into script->trynotes.  This
+                 * turns out not to be necessary, but it seems clearer.  And
+                 * it points out a FIXME: 350509, due to Igor Bukanov.
+                 */
+                cx->throwing = JS_TRUE;
+                cx->exception = lval;
+                ok = JS_FALSE;
+                goto out;
+            }
             len = JSVAL_TO_INT(rval);
             pc = script->main;
           END_VARLEN_CASE
@@ -5475,6 +5494,11 @@ interrupt:
             cx->throwing = JS_FALSE;
           END_CASE(JSOP_EXCEPTION)
 
+          BEGIN_CASE(JSOP_THROWING)
+            JS_ASSERT(!cx->throwing);
+            cx->throwing = JS_TRUE;
+          END_CASE(JSOP_THROWING)
+
           BEGIN_CASE(JSOP_THROW)
             cx->throwing = JS_TRUE;
             cx->exception = POP_OPND();
@@ -6108,7 +6132,6 @@ interrupt:
 
 #ifdef JS_THREADED_INTERP
           L_JSOP_BACKPATCH:
-          L_JSOP_BACKPATCH_PUSH:
           L_JSOP_BACKPATCH_POP:
 #else
           default:
diff --git a/js/src/jsiter.h b/js/src/jsiter.h
index b7f4158..f1e312a 100644
--- a/js/src/jsiter.h
+++ b/js/src/jsiter.h
@@ -123,14 +123,6 @@ js_NewGenerator(JSContext *cx, JSStackFrame *fp);
 extern JSBool
 js_CloseGeneratorObject(JSContext *cx, JSGenerator *gen);
 
-
-/*
- * Special unique value to implement asynchronous return for
- * generator.close(). Scripts never see it.
- */
-
-#define JSVAL_ARETURN   BOOLEAN_TO_JSVAL(JS_TRUE + 1)
-
 #endif
 
 extern JSClass          js_GeneratorClass;
diff --git a/js/src/jsopcode.c b/js/src/jsopcode.c
index 02e447b..a3b76c7 100644
--- a/js/src/jsopcode.c
+++ b/js/src/jsopcode.c
@@ -937,7 +937,8 @@ Decompile(SprintStack *ss, jsbytecode *pc, intN nb)
     jsval val;
     int stackDummy;
 
-    static const char finally_cookie[]   = """"/*FINALLY*/"""";
+    static const char exception_cookie[] = """"/*EXCEPTION*/"""";
+    static const char retsub_pc_cookie[] = """"/*RETSUB_PC*/"""";
     static const char iter_cookie[]      = """"/*ITER*/"""";
     static const char with_cookie[]      = """"/*WITH*/"""";
     static const char dot_format[]       = """"%s.%s"""";
@@ -1238,12 +1239,17 @@ Decompile(SprintStack *ss, jsbytecode *pc, intN nb)
                  * address, popped by JSOP_RETSUB and counted by script->depth
                  * but not by ss->top (see JSOP_SETSP, below).
                  */
-                todo = Sprint(&ss->sprinter, finally_cookie);
+                todo = Sprint(&ss->sprinter, exception_cookie);
+                if (todo < 0 || !PushOff(ss, todo, op))
+                    return JS_FALSE;
+                todo = Sprint(&ss->sprinter, retsub_pc_cookie);
                 break;
 
               case JSOP_RETSUB:
                 rval = POP_STR();
-                LOCAL_ASSERT(strcmp(rval, finally_cookie) == 0);
+                LOCAL_ASSERT(strcmp(rval, retsub_pc_cookie) == 0);
+                lval = POP_STR();
+                LOCAL_ASSERT(strcmp(lval, exception_cookie) == 0);
                 todo = -2;
                 break;
 
@@ -1639,6 +1645,10 @@ Decompile(SprintStack *ss, jsbytecode *pc, intN nb)
               }
 #endif
 
+              case JSOP_THROWING:
+                todo = -2;
+                break;
+
               case JSOP_THROW:
                 sn = js_GetSrcNote(jp->script, pc);
                 todo = -2;
diff --git a/js/src/jsopcode.tbl b/js/src/jsopcode.tbl
index 0d09d2d..1dd8e19 100644
--- a/js/src/jsopcode.tbl
+++ b/js/src/jsopcode.tbl
@@ -226,8 +226,8 @@ OPDEF(JSOP_INSTANCEOF,112,js_instanceof_str,js_instanceof_str,1,2,1,6,JOF_BYTE|J
 OPDEF(JSOP_DEBUGGER,  113,""""debugger"""",   NULL,         1,  0,  0,  0,  JOF_BYTE)
 
 /* gosub/retsub for finally handling */
-OPDEF(JSOP_GOSUB,     114,""""gosub"""",      NULL,         3,  0,  1,  0,  JOF_JUMP)
-OPDEF(JSOP_RETSUB,    115,""""retsub"""",     NULL,         1,  1,  0,  0,  JOF_BYTE)
+OPDEF(JSOP_GOSUB,     114,""""gosub"""",      NULL,         3,  0,  0,  0,  JOF_JUMP)
+OPDEF(JSOP_RETSUB,    115,""""retsub"""",     NULL,         1,  0,  0,  0,  JOF_BYTE)
 
 /* More exception handling ops. */
 OPDEF(JSOP_EXCEPTION, 116,""""exception"""",  NULL,         1,  0,  1,  0,  JOF_BYTE)
@@ -319,7 +319,7 @@ OPDEF(JSOP_IFEQX,         140,""""ifeqx"""",    NULL,       5,  1,  0,  0,  JOF_JUMPX|
 OPDEF(JSOP_IFNEX,         141,""""ifnex"""",    NULL,       5,  1,  0,  0,  JOF_JUMPX)
 OPDEF(JSOP_ORX,           142,""""orx"""",      NULL,       5,  1,  0,  0,  JOF_JUMPX|JOF_DETECTING)
 OPDEF(JSOP_ANDX,          143,""""andx"""",     NULL,       5,  1,  0,  0,  JOF_JUMPX|JOF_DETECTING)
-OPDEF(JSOP_GOSUBX,        144,""""gosubx"""",   NULL,       5,  0,  1,  0,  JOF_JUMPX)
+OPDEF(JSOP_GOSUBX,        144,""""gosubx"""",   NULL,       5,  0,  0,  0,  JOF_JUMPX)
 OPDEF(JSOP_CASEX,         145,""""casex"""",    NULL,       5,  1,  0,  0,  JOF_JUMPX)
 OPDEF(JSOP_DEFAULTX,      146,""""defaultx"""", NULL,       5,  1,  0,  0,  JOF_JUMPX)
 OPDEF(JSOP_TABLESWITCHX,  147,""""tableswitchx"""",NULL,   -1,  1,  0,  0,  JOF_TABLESWITCHX|JOF_DETECTING)
@@ -328,7 +328,9 @@ OPDEF(JSOP_LOOKUPSWITCHX, 148,""""lookupswitchx"""",NULL,  -1,  1,  0,  0,  JOF_LOOKUP
 /* Placeholders for a real jump opcode set during backpatch chain fixup. */
 OPDEF(JSOP_BACKPATCH,     149,""""backpatch"""",NULL,       3,  0,  0,  0,  JOF_JUMP|JOF_BACKPATCH)
 OPDEF(JSOP_BACKPATCH_POP, 150,""""backpatch_pop"""",NULL,   3,  1,  0,  0,  JOF_JUMP|JOF_BACKPATCH)
-OPDEF(JSOP_BACKPATCH_PUSH,151,""""backpatch_push"""",NULL,  3,  0,  1,  0,  JOF_JUMP|JOF_BACKPATCH)
+
+/* Set cx->throwing where cx->exception was already set, to trigger rethrow. */
+OPDEF(JSOP_THROWING,      151,""""throwing"""", NULL,       1,  0,  0,  0,  JOF_BYTE)
 
 /* Set and get return value pseudo-register in stack frame. */
 OPDEF(JSOP_SETRVAL,       152,""""setrval"""",  NULL,       1,  1,  0,  0,  JOF_BYTE)
diff --git a/js/src/jsscript.c b/js/src/jsscript.c
index a4d3b6a..ec1bf04 100644
--- a/js/src/jsscript.c
+++ b/js/src/jsscript.c
@@ -1515,3 +1515,43 @@ js_GetScriptLineExtent(JSScript *script)
     }
     return 1 + lineno - script->lineno;
 }
+
+#if JS_HAS_GENERATORS
+
+jsbytecode *
+js_FindFinallyHandler(JSScript *script, jsbytecode *pc)
+{
+    JSTryNote *tn;
+    ptrdiff_t off;
+    JSOp op2;
+
+    tn = script->trynotes;
+    if (!tn)
+        return NULL;
+
+    off = pc - script->main;
+    if (off < 0)
+        return NULL;
+
+    JS_ASSERT(tn->catchStart != 0);
+    do {
+        if ((jsuword)(off - tn->start) < (jsuword)tn->length) {
+            /*
+             * We have a handler: is it the finally one, or a catch handler?
+             *
+             * Catch bytecode begins with:   JSOP_SETSP JSOP_ENTERBLOCK
+             * Finally bytecode begins with: JSOP_SETSP JSOP_(GOSUB|EXCEPTION)
+             */
+            pc = script->main + tn->catchStart;
+            JS_ASSERT(*pc == JSOP_SETSP);
+            op2 = pc[JSOP_SETSP_LENGTH];
+            if (op2 != JSOP_ENTERBLOCK) {
+                JS_ASSERT(op2 == JSOP_GOSUB || op2 == JSOP_EXCEPTION);
+                return pc;
+            }
+        }
+    } while ((++tn)->catchStart != 0);
+    return NULL;
+}
+
+#endif"""
a57acaa2470a30087a732c30bfee355bfd10d116,113224,349527,igor.bukanov%gmail.com,"Bug 349527: More fixes for bugs that I added in the optimization patch. r=brendan
",1156868142,"""diff --git a/js/src/jsexn.c b/js/src/jsexn.c
index 076b40f..27ae055 100644
--- a/js/src/jsexn.c
+++ b/js/src/jsexn.c
@@ -119,7 +119,7 @@ CopyErrorReport(JSContext *cx, JSErrorReport *report)
 
 #define JS_CHARS_SIZE(jschars) ((js_strlen(jschars) + 1) * sizeof(jschar))
 
-    filenameSize = strlen(report->filename) + 1;
+    filenameSize = report->filename ? strlen(report->filename) + 1 : 0;
     linebufSize = report->linebuf ? strlen(report->linebuf) + 1 : 0;
     uclinebufSize = report->uclinebuf ? JS_CHARS_SIZE(report->uclinebuf) : 0;
     ucmessageSize = 0;
@@ -190,8 +190,10 @@ CopyErrorReport(JSContext *cx, JSErrorReport *report)
         }
     }
 
-    copy->filename = (const char *)cursor;
-    memcpy(cursor, report->filename, filenameSize);
+    if (report->filename) {
+        copy->filename = (const char *)cursor;
+        memcpy(cursor, report->filename, filenameSize);
+    }
     JS_ASSERT(cursor + filenameSize == (uint8 *)copy + mallocSize);
 
     /* Copy non-pointer members. */
@@ -234,8 +236,11 @@ exn_finalize(JSContext *cx, JSObject *obj)
 
     if (!JSVAL_IS_VOID(privateValue)) {
         privateData = (JSExnPrivate*) JSVAL_TO_PRIVATE(privateValue);
-        if (privateData && privateData->errorReport)
-            JS_free(cx, privateData->errorReport);
+        if (privateData) {
+            if (privateData->errorReport)
+                JS_free(cx, privateData->errorReport);
+            JS_free(cx, privateData);
+        }
     }
 }
 """
07b6672e0bfc1995ffd8fa2b5c983380183d1fdb,113237,350312,bclary%bclary.com,"JavaScript Test - update test for bug 350312
",1156806094,"""diff --git a/js/tests/js1_5/Regress/regress-350312.js b/js/tests/js1_5/Regress/regress-350312.js
index f0b64d9..a60a361 100755
--- a/js/tests/js1_5/Regress/regress-350312.js
+++ b/js/tests/js1_5/Regress/regress-350312.js
@@ -66,21 +66,40 @@ function test()
     { 
       try
       { 
+        actual += 'finally,';
         throw 42;
       } 
       catch(e2) 
       { 
+        actual += e2;
         writeLineToLog(e2); 
       } 
     } 
+    return 'returned';
   }
 
-  expect = 42;
+  expect = 'finally,42';
+  actual = '';
 
-  actual = f(2, 1);
+  try
+  {
+    writeLineToLog('test 1');
+    f(2, 1);
+  }
+  catch(ex)
+  {
+  }
   reportCompare(expect, actual, summary);
 
-  actual = f(2, 0);
+  actual = '';
+  try
+  {
+    writeLineToLog('test 2');
+    f(2, 0);
+  }
+  catch(ex)
+  {
+  }
   reportCompare(expect, actual, summary);
 
   exitFunc ('test');"""
a770c8e90c2789ffebfcbc8b84c48d90cc3e0b08,113239,350312,bclary%bclary.com,"JavaScript Test - regression test for bug 350312, by Brendan Eich
",1156802581,"""diff --git a/js/tests/js1_5/Regress/regress-350312.js b/js/tests/js1_5/Regress/regress-350312.js
new file mode 100755
index 0000000..f0b64d9
--- /dev/null
+++ b/js/tests/js1_5/Regress/regress-350312.js
@@ -0,0 +1,87 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Brendan Eich
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 350312;
+var summary = 'Accessing wrong stack slot with nested catch/finally';
+var actual = '';
+var expect = '';
+
+
+//-----------------------------------------------------------------------------
+test();
+//-----------------------------------------------------------------------------
+
+function test()
+{
+  enterFunc ('test');
+  printBugNumber (bug);
+  printStatus (summary);
+  
+  function f(x,y) { 
+
+    try 
+    { 
+      throw x;
+    } 
+    catch(e) 
+    { 
+      if (y) 
+        throw e;
+    } 
+    finally 
+    { 
+      try
+      { 
+        throw 42;
+      } 
+      catch(e2) 
+      { 
+        writeLineToLog(e2); 
+      } 
+    } 
+  }
+
+  expect = 42;
+
+  actual = f(2, 1);
+  reportCompare(expect, actual, summary);
+
+  actual = f(2, 0);
+  reportCompare(expect, actual, summary);
+
+  exitFunc ('test');
+}"""
7c821b66e7ff9a25df9b8e71bea41f0803e91d96,113275,350370,mats.palmgren%bredband.net,"Don't iterate past the beginning line (crash fix). b=350370 r+sr=bzbarsky
",1156750201,"""diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
index d8cb4d9..cea8d8f 100644
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -1657,12 +1657,22 @@ nsBlockFrame::RetargetInlineIncrementalReflow(nsReflowPath::iterator &aTarget,
   // Now fix the iterator, keeping track of how many lines we walk
   // back through.
   PRInt32 lineCount = 0;
+  const line_iterator begin = begin_lines();
   do {
     // XXX this might happen if the block is split; e.g.,
-    // printing or print preview. For now, panic.
-    NS_ASSERTION(aLine != begin_lines(),
-                 """"ran out of lines before we ran out of prev-in-flows"""");
-
+    // printing or print preview.
+    if (aLine == begin) {
+#ifdef NS_DEBUG
+      if (GetParent() == aPrevInFlow->GetParent()) {
+        NS_ERROR(""""ran out of lines before we ran out of prev-in-flows"""");
+      }
+      else {
+        NS_ERROR(""""not yet implemented: retarget incremental reflow to""""
+                 """" prev-in-flow with different parent"""");
+      }
+#endif
+      break;
+    }
     // Is the previous line a ``hard'' break? If so, stop: these
     // continuations will be preserved during an unconstrained reflow.
     // XXXwaterson should this be `!= NS_STYLE_CLEAR_NONE'?"""
1e0492eebd94f7144375343fe3d02d0cd7f1c059,113278,349527,igor.bukanov%gmail.com,"Bug 349527: Fix for GCC warning introduced by the previous optimization. r=brendan
",1156744636,"""diff --git a/js/src/jsexn.c b/js/src/jsexn.c
index 37a7e88..076b40f 100644
--- a/js/src/jsexn.c
+++ b/js/src/jsexn.c
@@ -161,7 +161,7 @@ CopyErrorReport(JSContext *cx, JSErrorReport *report)
             cursor += argSize;
         }
         copy->messageArgs[i] = NULL;
-        JS_ASSERT(argsCopySize == cursor - (uint8 *)copy->messageArgs[0]);
+        JS_ASSERT(cursor == (uint8 *)copy->messageArgs[0] + argsCopySize);
     }
 
     if (report->ucmessage) {"""
2e4fb1a0d3d6a9fca121433e99ee990f6f740195,113293,350312,brendan%mozilla.org,"Always need two more slots in the model stack for finally clause codegen (350312, r=shaver).
",1156701529,"""diff --git a/js/src/jsemit.c b/js/src/jsemit.c
index 1dd2aee..e380ceb 100644
--- a/js/src/jsemit.c
+++ b/js/src/jsemit.c
@@ -4588,10 +4588,13 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
              *     we need one slot for the JSOP_RETSUB's return pc index.
              *     The unguarded catch is guaranteed to pop the exception,
              *     i.e., to """"catch the exception"""" -- so we do not need to
-             *     stack it across the finally in order to propagate it.
+             *     stack it across the finally in order to propagate it --
+             *     unless the catch block explicitly re-throws it!  We can't
+             *     know whether this will happen by static analysis, so we
+             *     must always budget for two slots.
              */
             JS_ASSERT(cg->stackDepth == depth);
-            cg->stackDepth += (lastCatch && !lastCatch->pn_kid2) ? 1 : 2;
+            cg->stackDepth += 2;
             if ((uintN)cg->stackDepth > cg->maxStackDepth)
                 cg->maxStackDepth = cg->stackDepth;
 
@@ -4606,10 +4609,8 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
             }
 
             /* Restore stack depth budget to its balanced state. */
-            if (cg->stackDepth != depth) {
-                JS_ASSERT(cg->stackDepth == depth + 1);
-                cg->stackDepth = depth;
-            }
+            JS_ASSERT(cg->stackDepth == depth + 1);
+            cg->stackDepth = depth;
         }
         if (!js_PopStatementCG(cx, cg))
             return JS_FALSE;"""
8017140ec14f13ca49982e0149c0abaa97daac45,113337,349527,igor.bukanov%gmail.com,"Bug 349527: Using a single malloc block for a full copy of JSErrorReport. r=brendan
",1156578278,"""diff --git a/js/src/jsexn.c b/js/src/jsexn.c
index cea84bf..37a7e88 100644
--- a/js/src/jsexn.c
+++ b/js/src/jsexn.c
@@ -89,34 +89,120 @@ typedef struct JSExnPrivate {
     JSErrorReport *errorReport;
 } JSExnPrivate;
 
-/*
- * Undo all the damage done by exn_newPrivate.
- */
-static void
-exn_destroyPrivate(JSContext *cx, JSExnPrivate *privateData)
+static JSErrorReport *
+CopyErrorReport(JSContext *cx, JSErrorReport *report)
 {
-    JSErrorReport *report;
-    const jschar **args;
-
-    if (!privateData)
-        return;
-    report = privateData->errorReport;
-    if (report) {
-        if (report->uclinebuf)
-            JS_free(cx, (void *)report->uclinebuf);
-        if (report->filename)
-            JS_free(cx, (void *)report->filename);
-        if (report->ucmessage)
-            JS_free(cx, (void *)report->ucmessage);
+    /*
+     * We use a single malloc block to make a deep copy of JSErrorReport with
+     * the following layout:
+     *   JSErrorReport
+     *   array of copies of report->messageArgs
+     *   jschar array with characters for all messageArgs
+     *   jschar array with characters for ucmessage
+     *   jschar array with characters for uclinebuf and uctokenptr
+     *   char array with characters for linebuf and tokenptr
+     *   char array with characters for filename
+     * Such layout together with the properties enforced by the following
+     * asserts does not need any extra alignment padding.
+     */
+    JS_STATIC_ASSERT(sizeof(JSErrorReport) % sizeof(const char *) == 0);
+    JS_STATIC_ASSERT(sizeof(const char *) % sizeof(jschar) == 0);
+
+    size_t filenameSize;
+    size_t linebufSize;
+    size_t uclinebufSize;
+    size_t ucmessageSize;
+    size_t i, argsArraySize, argsCopySize, argSize;
+    size_t mallocSize;
+    JSErrorReport *copy;
+    uint8 *cursor;
+
+#define JS_CHARS_SIZE(jschars) ((js_strlen(jschars) + 1) * sizeof(jschar))
+
+    filenameSize = strlen(report->filename) + 1;
+    linebufSize = report->linebuf ? strlen(report->linebuf) + 1 : 0;
+    uclinebufSize = report->uclinebuf ? JS_CHARS_SIZE(report->uclinebuf) : 0;
+    ucmessageSize = 0;
+    argsArraySize = 0;
+    argsCopySize = 0;
+    if (report->ucmessage) {
+        ucmessageSize = JS_CHARS_SIZE(report->ucmessage);
         if (report->messageArgs) {
-            args = report->messageArgs;
-            while (*args)
-                JS_free(cx, (void *)*args++);
-            JS_free(cx, (void *)report->messageArgs);
+            for (i = 0; report->messageArgs[i]; ++i)
+                argsCopySize += JS_CHARS_SIZE(report->messageArgs[i]);
+
+            /* Non-null messageArgs should have at least one non-null arg. */
+            JS_ASSERT(i != 0);
+            argsArraySize = (i + 1) * sizeof(const jschar *);
+        }
+    }
+
+    /*
+     * The mallocSize can not overflow since it represents the sum of the
+     * sizes of already allocated objects.
+     */
+    mallocSize = sizeof(JSErrorReport) + argsArraySize + argsCopySize +
+                 ucmessageSize + uclinebufSize + linebufSize + filenameSize;
+    cursor = (uint8 *)JS_malloc(cx, mallocSize);
+    if (!cursor)
+        return NULL;
+
+    copy = (JSErrorReport *)cursor;
+    memset(cursor, 0, sizeof(JSErrorReport));
+    cursor += sizeof(JSErrorReport);
+
+    if (argsArraySize != 0) {
+        copy->messageArgs = (const jschar **)cursor;
+        cursor += argsArraySize;
+        for (i = 0; report->messageArgs[i]; ++i) {
+            copy->messageArgs[i] = (const jschar *)cursor;
+            argSize = JS_CHARS_SIZE(report->messageArgs[i]);
+            memcpy(cursor, report->messageArgs[i], argSize);
+            cursor += argSize;
+        }
+        copy->messageArgs[i] = NULL;
+        JS_ASSERT(argsCopySize == cursor - (uint8 *)copy->messageArgs[0]);
+    }
+
+    if (report->ucmessage) {
+        copy->ucmessage = (const jschar *)cursor;
+        memcpy(cursor, report->ucmessage, ucmessageSize);
+        cursor += ucmessageSize;
+    }
+
+    if (report->uclinebuf) {
+        copy->uclinebuf = (const jschar *)cursor;
+        memcpy(cursor, report->uclinebuf, uclinebufSize);
+        cursor += uclinebufSize;
+        if (report->uctokenptr) {
+            copy->uctokenptr = copy->uclinebuf + (report->uctokenptr -
+                                                  report->uclinebuf);
         }
-        JS_free(cx, report);
     }
-    JS_free(cx, privateData);
+
+    if (report->linebuf) {
+        copy->linebuf = (const char *)cursor;
+        memcpy(cursor, report->linebuf, linebufSize);
+        cursor += linebufSize;
+        if (report->tokenptr) {
+            copy->tokenptr = copy->linebuf + (report->tokenptr -
+                                              report->linebuf);
+        }
+    }
+
+    copy->filename = (const char *)cursor;
+    memcpy(cursor, report->filename, filenameSize);
+    JS_ASSERT(cursor + filenameSize == (uint8 *)copy + mallocSize);
+
+    /* Copy non-pointer members. */
+    copy->lineno = report->lineno;
+    copy->errorNumber = report->errorNumber;
+
+    /* Note that this is before it gets flagged with JSREPORT_EXCEPTION */
+    copy->flags = report->flags;
+
+#undef JS_CHARS_SIZE
+    return copy;
 }
 
 /*
@@ -125,99 +211,17 @@ exn_destroyPrivate(JSContext *cx, JSExnPrivate *privateData)
 static JSExnPrivate *
 exn_newPrivate(JSContext *cx, JSErrorReport *report)
 {
-    intN i;
     JSExnPrivate *newPrivate;
-    JSErrorReport *newReport;
-    size_t capacity;
 
     newPrivate = (JSExnPrivate *)JS_malloc(cx, sizeof (JSExnPrivate));
     if (!newPrivate)
         return NULL;
-    memset(newPrivate, 0, sizeof (JSExnPrivate));
-
-    /* Copy the error report */
-    newReport = (JSErrorReport *)JS_malloc(cx, sizeof (JSErrorReport));
-    if (!newReport)
-        goto error;
-    memset(newReport, 0, sizeof (JSErrorReport));
-    newPrivate->errorReport = newReport;
-
-    if (report->filename) {
-        newReport->filename = JS_strdup(cx, report->filename);
-        if (!newReport->filename)
-            goto error;
-    } else {
-        newReport->filename = NULL;
-    }
-
-    newReport->lineno = report->lineno;
-
-    /*
-     * We don't need to copy linebuf and tokenptr, because they
-     * point into the deflated string cache.  (currently?)
-     */
-    newReport->linebuf = report->linebuf;
-    newReport->tokenptr = report->tokenptr;
-
-    /*
-     * But we do need to copy uclinebuf, uctokenptr, because they're
-     * pointers into internal tokenstream structs, and may go away.
-     */
-    if (report->uclinebuf) {
-        capacity = js_strlen(report->uclinebuf) + 1;
-        newReport->uclinebuf =
-            (const jschar *)JS_malloc(cx, capacity * sizeof(jschar));
-        if (!newReport->uclinebuf)
-            goto error;
-        js_strncpy((jschar *)newReport->uclinebuf, report->uclinebuf, capacity);
-        newReport->uctokenptr = newReport->uclinebuf + (report->uctokenptr -
-                                                        report->uclinebuf);
-    } else {
-        newReport->uclinebuf = newReport->uctokenptr = NULL;
-    }
-
-    if (report->ucmessage) {
-        capacity = js_strlen(report->ucmessage) + 1;
-        newReport->ucmessage = (const jschar *)
-            JS_malloc(cx, capacity * sizeof(jschar));
-        if (!newReport->ucmessage)
-            goto error;
-        js_strncpy((jschar *)newReport->ucmessage, report->ucmessage, capacity);
-
-        if (report->messageArgs) {
-            for (i = 0; report->messageArgs[i]; i++)
-                continue;
-            JS_ASSERT(i);
-            newReport->messageArgs =
-                (const jschar **)JS_malloc(cx, (i + 1) * sizeof(jschar *));
-            if (!newReport->messageArgs)
-                goto error;
-            for (i = 0; report->messageArgs[i]; i++) {
-                capacity = js_strlen(report->messageArgs[i]) + 1;
-                newReport->messageArgs[i] =
-                    (const jschar *)JS_malloc(cx, capacity * sizeof(jschar));
-                if (!newReport->messageArgs[i])
-                    goto error;
-                js_strncpy((jschar *)(newReport->messageArgs[i]),
-                           report->messageArgs[i], capacity);
-            }
-            newReport->messageArgs[i] = NULL;
-        } else {
-            newReport->messageArgs = NULL;
-        }
-    } else {
-        newReport->ucmessage = NULL;
-        newReport->messageArgs = NULL;
+    newPrivate->errorReport = CopyErrorReport(cx, report);
+    if (!newPrivate->errorReport) {
+        JS_free(cx, newPrivate);
+        return NULL;
     }
-    newReport->errorNumber = report->errorNumber;
-
-    /* Note that this is before it gets flagged with JSREPORT_EXCEPTION */
-    newReport->flags = report->flags;
-
     return newPrivate;
-error:
-    exn_destroyPrivate(cx, newPrivate);
-    return NULL;
 }
 
 static void
@@ -230,8 +234,8 @@ exn_finalize(JSContext *cx, JSObject *obj)
 
     if (!JSVAL_IS_VOID(privateValue)) {
         privateData = (JSExnPrivate*) JSVAL_TO_PRIVATE(privateValue);
-        if (privateData)
-            exn_destroyPrivate(cx, privateData);
+        if (privateData && privateData->errorReport)
+            JS_free(cx, privateData->errorReport);
     }
 }
 """
7a066fad5beeae15aed4e5e99aa8d353a37d81d4,113377,340198,darin%meer.net,"fixes bug 340198, r=biesi, sr=dveditz
",1156535769,"""diff --git a/toolkit/mozapps/update/src/nsUpdateService.js.in b/toolkit/mozapps/update/src/nsUpdateService.js.in
index badf14c..45d01d3 100644
--- a/toolkit/mozapps/update/src/nsUpdateService.js.in
+++ b/toolkit/mozapps/update/src/nsUpdateService.js.in
@@ -137,6 +137,28 @@ function LOG(module, string) {
 }
 
 /**
+ * Only allow built-in certs for HTTPS connections.  See bug 340198.
+ */
+function checkCert(channel) {
+  if (!channel.originalURI.schemeIs(""""https""""))  // bypass
+    return;
+
+  const Ci = Components.interfaces;  
+  var cert =
+      channel.securityInfo.QueryInterface(Ci.nsISSLStatusProvider).
+      SSLStatus.QueryInterface(Ci.nsISSLStatus).serverCert;
+
+  var issuer = cert.issuer;
+  while (issuer && !cert.equals(issuer)) {
+    cert = issuer;
+    issuer = cert.issuer;
+  }
+
+  if (!issuer || issuer.tokenName != """"Builtin Object Token"""")
+    throw """"cert issuer is not built-in"""";
+}
+
+/**
  * Convert a string containing binary values to hex.
  */
 function binaryToHex(input) {
@@ -1719,10 +1741,20 @@ BadCertHandler.prototype = {
   },
 
   /**
+   * See nsIChannelEventSink
+   */
+  onChannelRedirect: function(oldChannel, newChannel, flags) {
+    // make sure the certificate of the old channel checks out before we follow
+    // a redirect from it.  See bug 340198.
+    checkCert(oldChannel);
+  },
+
+  /**
    * See nsIInterfaceRequestor
    */
   getInterface: function(iid) {
-    if (iid.equals(Components.interfaces.nsIBadCertListener))
+    if (iid.equals(Components.interfaces.nsIBadCertListener) ||
+        iid.equals(Components.interfaces.nsIChannelEventSink))
       return this;
 
     Components.returnCode = Components.results.NS_ERROR_NO_INTERFACE;
@@ -1734,6 +1766,7 @@ BadCertHandler.prototype = {
    */
   QueryInterface: function(iid) {
     if (!iid.equals(Components.interfaces.nsIBadCertListener) &&
+        !iid.equals(Components.interfaces.nsIChannelEventSink) &&
         !iid.equals(Components.interfaces.nsIInterfaceRequestor) &&
         !iid.equals(Components.interfaces.nsISupports))
       throw Components.results.NS_ERROR_NO_INTERFACE;
@@ -1881,8 +1914,10 @@ Checker.prototype = {
   onLoad: function(event) {
     LOG(""""Checker"""", """"onLoad: request completed downloading document"""");
     
-    // Analyze the resulting DOM and determine the set of updates to install
     try {
+      checkCert(this._request.channel);
+
+      // Analyze the resulting DOM and determine the set of updates to install
       var updates = this._updates;
       
       LOG(""""Checker"""", """"Updates available: """" + updates.length);"""
f922b83b0530e79774b924bcf4eda0b94a094327,113389,348062,jst%mozilla.jstenback.com,"Fixing bug 348062. Making nsContentList hold strong references to the nodes in the list. r+sr=bzbarsky@mit.edu
",1156527925,"""diff --git a/content/base/src/nsContentList.cpp b/content/base/src/nsContentList.cpp
index 321bc69..5e5f3cd 100644
--- a/content/base/src/nsContentList.cpp
+++ b/content/base/src/nsContentList.cpp
@@ -77,8 +77,6 @@ nsBaseContentList::nsBaseContentList()
 
 nsBaseContentList::~nsBaseContentList()
 {
-  // mElements only has weak references to the content objects so we
-  // don't need to do any cleanup here.
 }
 
 
@@ -105,8 +103,8 @@ nsBaseContentList::GetLength(PRUint32* aLength)
 NS_IMETHODIMP
 nsBaseContentList::Item(PRUint32 aIndex, nsIDOMNode** aReturn)
 {
-  nsISupports *tmp = NS_REINTERPRET_CAST(nsISupports *,
-                                         mElements.SafeElementAt(aIndex));
+  nsISupports *tmp = mElements.SafeObjectAt(aIndex);
+
   if (!tmp) {
     *aReturn = nsnull;
 
@@ -119,15 +117,13 @@ nsBaseContentList::Item(PRUint32 aIndex, nsIDOMNode** aReturn)
 void
 nsBaseContentList::AppendElement(nsIContent *aContent)
 {
-  // Shouldn't hold a reference since we'll be told when the content
-  // leaves the root or the root will be destroyed.
-  mElements.AppendElement(aContent);
+  mElements.AppendObject(aContent);
 }
 
 void
 nsBaseContentList::RemoveElement(nsIContent *aContent)
 {
-  mElements.RemoveElement(aContent);
+  mElements.RemoveObject(aContent);
 }
 
 PRInt32
@@ -175,47 +171,6 @@ nsFormContentList::nsFormContentList(nsIDOMHTMLFormElement *aForm,
   }
 }
 
-nsFormContentList::~nsFormContentList()
-{
-  Reset();
-}
-
-void
-nsFormContentList::AppendElement(nsIContent *aContent)
-{
-  NS_ADDREF(aContent);
-
-  nsBaseContentList::AppendElement(aContent);
-}
-
-void
-nsFormContentList::RemoveElement(nsIContent *aContent)
-{
-  PRInt32 i = mElements.IndexOf(aContent);
-
-  if (i >= 0) {
-    nsIContent *content = NS_STATIC_CAST(nsIContent *, mElements.ElementAt(i));
-
-    NS_RELEASE(content);
-
-    mElements.RemoveElementAt(i);
-  }
-}
-
-void
-nsFormContentList::Reset()
-{
-  PRInt32 i, length = mElements.Count();
-
-  for (i = 0; i < length; i++) {
-    nsIContent *content = NS_STATIC_CAST(nsIContent *, mElements.ElementAt(i));
-
-    NS_RELEASE(content);
-  }
-
-  nsBaseContentList::Reset();
-}
-
 // Hashtable for storing nsContentLists
 static PLDHashTable gContentListHashTable;
 
@@ -439,7 +394,7 @@ nsContentList::Item(PRUint32 aIndex, PRBool aDoFlush)
   NS_ASSERTION(!mRootNode || mState != LIST_DIRTY,
                """"PopulateSelf left the list in a dirty (useless) state!"""");
 
-  return NS_STATIC_CAST(nsIContent *, mElements.SafeElementAt(aIndex));
+  return mElements.SafeObjectAt(aIndex);
 }
 
 nsIContent *
@@ -454,8 +409,7 @@ nsContentList::NamedItem(const nsAString& aName, PRBool aDoFlush)
   NS_ENSURE_TRUE(name, nsnull);
 
   for (i = 0; i < count; i++) {
-    nsIContent *content = NS_STATIC_CAST(nsIContent *,
-                                         mElements.ElementAt(i));
+    nsIContent *content = mElements[i];
     // XXX Should this pass eIgnoreCase?
     if (content &&
         (content->AttrValueIs(kNameSpaceID_None, nsHTMLAtoms::name,
@@ -494,6 +448,21 @@ nsContentList::NodeWillBeDestroyed(const nsINode* aNode)
   Reset();
 }
 
+// static
+void
+nsContentList::OnDocumentDestroy(nsIDocument *aDocument)
+{
+  // If our content list cache holds a list used for a document that's
+  // now being destroyed, free the cache to prevent the list from
+  // staying around until the next use of content lists ends up
+  // replacing what's in the cache.
+
+  if (gCachedContentList && gCachedContentList->mRootNode &&
+      gCachedContentList->mRootNode->GetOwnerDoc() == aDocument) {
+    NS_RELEASE(gCachedContentList);
+  }
+}
+
 NS_IMETHODIMP
 nsContentList::GetLength(PRUint32* aLength)
 {
@@ -553,10 +522,11 @@ nsContentList::AttributeChanged(nsIDocument *aDocument, nsIContent* aContent,
       mState = LIST_DIRTY;
     }
   } else {
-    // We no longer match aContent.  Remove it from our list.  If
-    // it's already not there, this is a no-op, which is fine.
-    // Either way, no change of mState is required here.
-    mElements.RemoveElement(aContent);
+    // We no longer match aContent.  Remove it from our list.  If it's
+    // already not there, this is a no-op (though a potentially
+    // expensive one).  Either way, no change of mState is required
+    // here.
+    mElements.RemoveObject(aContent);
   }
 }
 
@@ -593,8 +563,7 @@ nsContentList::ContentAppended(nsIDocument *aDocument, nsIContent* aContainer,
     if (ourCount == 0) {
       appendToList = PR_TRUE;
     } else {
-      nsIContent* ourLastContent =
-        NS_STATIC_CAST(nsIContent*, mElements.ElementAt(ourCount - 1));
+      nsIContent* ourLastContent = mElements[ourCount - 1];
       /*
        * We want to append instead of invalidating if the first thing
        * that got appended comes after ourLastContent.
@@ -748,7 +717,7 @@ nsContentList::PopulateWith(nsIContent *aContent, PRUint32& aElementsToAppend)
                   """"We should never be trying to match mRootNode"""");
 
   if (Match(aContent)) {
-    mElements.AppendElement(aContent);
+    mElements.AppendObject(aContent);
     --aElementsToAppend;
     if (aElementsToAppend == 0)
       return;
@@ -838,8 +807,7 @@ nsContentList::PopulateSelf(PRUint32 aNeededLength)
 
   // If we already have nodes start searching at the last one, otherwise
   // start searching at the root.
-  nsINode* startRoot = count == 0 ? mRootNode :
-    NS_STATIC_CAST(nsIContent*, mElements.ElementAt(count - 1));
+  nsINode* startRoot = count == 0 ? mRootNode : mElements[count - 1];
 
   PopulateWithStartingAfter(startRoot, nsnull, elementsToAppend);
   NS_ASSERTION(elementsToAppend + mElements.Count() == invariant,
diff --git a/content/base/src/nsContentList.h b/content/base/src/nsContentList.h
index 7a29005..f0b509a 100644
--- a/content/base/src/nsContentList.h
+++ b/content/base/src/nsContentList.h
@@ -45,7 +45,7 @@
 #define nsContentList_h___
 
 #include """"nsISupports.h""""
-#include """"nsVoidArray.h""""
+#include """"nsCOMArray.h""""
 #include """"nsString.h""""
 #include """"nsIDOMHTMLCollection.h""""
 #include """"nsIDOMNodeList.h""""
@@ -89,7 +89,7 @@ public:
   static void Shutdown();
 
 protected:
-  nsAutoVoidArray mElements;
+  nsCOMArray<nsIContent> mElements;
 };
 
 
@@ -101,12 +101,6 @@ class nsFormContentList : public nsBaseContentList
 public:
   nsFormContentList(nsIDOMHTMLFormElement *aForm,
                     nsBaseContentList& aContentList);
-  virtual ~nsFormContentList();
-
-  virtual void AppendElement(nsIContent *aContent);
-  virtual void RemoveElement(nsIContent *aContent);
-
-  virtual void Reset();
 };
 
 /**
@@ -236,6 +230,8 @@ public:
                               nsIContent* aChild, PRInt32 aIndexInContainer);
   virtual void NodeWillBeDestroyed(const nsINode *aNode);
 
+  static void OnDocumentDestroy(nsIDocument *aDocument);
+
 protected:
   /**
    * Returns whether the content element matches our criterion
diff --git a/content/base/src/nsDocument.cpp b/content/base/src/nsDocument.cpp
index 6cd6a76..cde4f3e 100644
--- a/content/base/src/nsDocument.cpp
+++ b/content/base/src/nsDocument.cpp
@@ -4347,7 +4347,8 @@ nsDocument::DispatchEvent(nsIDOMEvent* aEvent, PRBool *_retval)
   nsEventStatus status = nsEventStatus_eIgnore;
   nsresult rv =
     nsEventDispatcher::DispatchDOMEvent(NS_STATIC_CAST(nsINode*, this),
-                                        nsnull, aEvent, context, &status);
+                                        nsnull, aEvent, context, &status,
+                                        PR_FALSE);
 
   *_retval = (status != nsEventStatus_eConsumeNoDefault);
   return rv;
@@ -5151,6 +5152,8 @@ nsDocument::Destroy()
   }
 
   mLayoutHistoryState = nsnull;
+
+  nsContentList::OnDocumentDestroy(this);
 }
 
 already_AddRefed<nsILayoutHistoryState>
diff --git a/content/base/src/nsGenericDOMDataNode.cpp b/content/base/src/nsGenericDOMDataNode.cpp
index 3a716a1..57980f0 100644
--- a/content/base/src/nsGenericDOMDataNode.cpp
+++ b/content/base/src/nsGenericDOMDataNode.cpp
@@ -428,7 +428,8 @@ nsGenericDOMDataNode::AppendData(const nsAString& aData)
     mutation.mPrevAttrValue = oldValue;
     mutation.mNewAttrValue = GetCurrentValueAtom();
 
-    nsEventDispatcher::Dispatch(this, nsnull, &mutation);
+    nsEventDispatcher::Dispatch(this, nsnull, &mutation, nsnull, nsnull, nsnull,
+                                PR_FALSE, PR_FALSE);
   }
 
   // Notify observers
@@ -1000,7 +1001,8 @@ nsGenericDOMDataNode::SetText(const PRUnichar* aBuffer,
         do_GetAtom(Substring(aBuffer, aBuffer + aLength));
     }
 
-    nsEventDispatcher::Dispatch(this, nsnull, &mutation);
+    nsEventDispatcher::Dispatch(this, nsnull, &mutation, nsnull, nsnull, nsnull,
+                                PR_FALSE, PR_FALSE);
   }
 
   // Trigger a reflow
diff --git a/content/base/src/nsGenericElement.cpp b/content/base/src/nsGenericElement.cpp
index a57ef6c..a857d99 100644
--- a/content/base/src/nsGenericElement.cpp
+++ b/content/base/src/nsGenericElement.cpp
@@ -2422,7 +2422,8 @@ nsGenericElement::doInsertChildAt(nsIContent* aKid, PRUint32 aIndex,
           NS_EVENT_BITS_MUTATION_NODEINSERTED)) {
       nsMutationEvent mutation(PR_TRUE, NS_MUTATION_NODEINSERTED);
       mutation.mRelatedNode = do_QueryInterface(container);
-      nsEventDispatcher::Dispatch(aKid, nsnull, &mutation);
+      nsEventDispatcher::Dispatch(aKid, nsnull, &mutation, nsnull, nsnull,
+                                  nsnull, PR_FALSE, PR_FALSE);
     }
   }
 
@@ -2471,7 +2472,8 @@ nsGenericElement::doRemoveChildAt(PRUint32 aIndex, PRBool aNotify,
         NS_EVENT_BITS_MUTATION_NODEREMOVED)) {
     nsMutationEvent mutation(PR_TRUE, NS_MUTATION_NODEREMOVED);
     mutation.mRelatedNode = do_QueryInterface(container);
-    nsEventDispatcher::Dispatch(aKid, nsnull, &mutation);
+    nsEventDispatcher::Dispatch(aKid, nsnull, &mutation, nsnull, nsnull,
+                                nsnull, PR_FALSE, PR_FALSE);
   }
 
   // Someone may have removed the kid or any of its siblings while that event
@@ -3411,7 +3413,8 @@ nsGenericElement::SetAttrAndNotify(PRInt32 aNamespaceID,
       mutation.mPrevAttrValue = do_GetAtom(aOldValue);
     }
     mutation.mAttrChange = modType;
-    nsEventDispatcher::Dispatch(this, nsnull, &mutation);
+    nsEventDispatcher::Dispatch(this, nsnull, &mutation, nsnull, nsnull,
+                                nsnull, PR_FALSE, PR_FALSE);
   }
 
   if (aNotify) {
@@ -3611,7 +3614,8 @@ nsGenericElement::UnsetAttr(PRInt32 aNameSpaceID, nsIAtom* aName,
       mutation.mPrevAttrValue = do_GetAtom(value);
     mutation.mAttrChange = nsIDOMMutationEvent::REMOVAL;
 
-    nsEventDispatcher::Dispatch(this, nsnull, &mutation);
+    nsEventDispatcher::Dispatch(this, nsnull, &mutation, nsnull, nsnull, nsnull,
+                                PR_FALSE, PR_FALSE);
   }
 
   // Clear binding to nsIDOMNamedNodeMap
diff --git a/xpcom/glue/nsCOMArray.cpp b/xpcom/glue/nsCOMArray.cpp
index fa07084..f870d62 100644
--- a/xpcom/glue/nsCOMArray.cpp
+++ b/xpcom/glue/nsCOMArray.cpp
@@ -64,7 +64,6 @@ nsCOMArray_base::~nsCOMArray_base()
 
 PRInt32
 nsCOMArray_base::IndexOfObject(nsISupports* aObject) const {
-    NS_ENSURE_TRUE(aObject, -1);
     nsCOMPtr<nsISupports> supports = do_QueryInterface(aObject);
     NS_ENSURE_TRUE(supports, -1);
 """
c62427bd3529388f4ff9147b4c3572d144d5b255,113411,348887,mats.palmgren%bredband.net,"Don't steal floats from descendant float containing blocks. b=348887 (patch B) r+sr=roc
",1156479461,"""diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
index 42e86b8..d8cb4d9 100644
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -4871,10 +4871,10 @@ nsBlockFrame::HandleOverflowPlaceholdersForPulledFrame(
   nsBlockReflowState& aState, nsIFrame* aFrame)
 {
   if (nsLayoutAtoms::placeholderFrame != aFrame->GetType()) {
-    // Check the in-flow inline children. We should encounter only
-    // first-in-flow placeholders, so the frame subtree rooted at
-    // aFrame should not change.
-    if (!aFrame->GetStyleDisplay()->IsBlockLevel()) {
+    // Descend into children that are not float containing blocks.
+    // We should encounter only first-in-flow placeholders, so the
+    // frame subtree rooted at aFrame should not change.
+    if (!aFrame->IsFloatContainingBlock()) {
       for (nsIFrame* f = aFrame->GetFirstChild(nsnull); f; f = f->GetNextSibling()) {
 #ifdef DEBUG
         PRBool changed ="""
76d0d089f4e9d12a19ad124070b79763c28625fb,113478,337419,mats.palmgren%bredband.net,"1. Make scroll frames non-splittable.
2. Make a placeholder splittable only if the out-of-flow is.
3. If a float placeholder is not splittable then place it immediately
   instead of failing to reflow it because it can't be split.
b=337419 (Patch B) r+sr=roc
",1156396936,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index b35397d..dadfee4 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -10984,6 +10984,13 @@ nsCSSFrameConstructor::CreateContinuingFrame(nsPresContext* aPresContext,
   nsIAtom* frameType = aFrame->GetType();
   nsIContent* content = aFrame->GetContent();
 
+#ifdef NS_DEBUG
+    nsSplittableType splitType;
+    aFrame->IsSplittable(splitType);
+    NS_ASSERTION(splitType != NS_FRAME_NOT_SPLITTABLE,
+                 """"why CreateContinuingFrame for a non-splittable frame?"""");
+#endif
+  
   if (nsLayoutAtoms::textFrame == frameType) {
     newFrame = NS_NewContinuingTextFrame(shell, styleContext);
 
diff --git a/layout/generic/nsBlockReflowState.cpp b/layout/generic/nsBlockReflowState.cpp
index 91a5e81..7ee8bb4 100644
--- a/layout/generic/nsBlockReflowState.cpp
+++ b/layout/generic/nsBlockReflowState.cpp
@@ -24,6 +24,7 @@
  *   Steve Clark <buster@netscape.com>
  *   Robert O'Callahan <roc+moz@cs.cmu.edu>
  *   L. David Baron <dbaron@dbaron.org>
+ *   Mats Palmgren <mats.palmgren@bredband.net>
  *
  * Alternatively, the contents of this file may be used under the terms of
  * either of the GNU General Public License Version 2 or later (the """"GPL""""),
@@ -656,9 +657,19 @@ nsBlockReflowState::AddFloat(nsLineLayout&       aLineLayout,
       // prevent the placeholders being torn down. We will destroy any
       // placeholders later if PlaceBelowCurrentLineFloats finds the
       // float is complete.
-      aReflowStatus = NS_FRAME_NOT_COMPLETE;
+      nsSplittableType splitType;
+      aPlaceholder->IsSplittable(splitType);
+      if (splitType == NS_FRAME_NOT_SPLITTABLE) {
+        placed = PR_FALSE;
+      }
+      else {
+        placed = PR_TRUE;
+        aReflowStatus = NS_FRAME_NOT_COMPLETE;
+      }
+    }
+    else {
+      placed = PR_TRUE;
     }
-    placed = PR_TRUE;
   }
   return placed;
 }
diff --git a/layout/generic/nsGfxScrollFrame.cpp b/layout/generic/nsGfxScrollFrame.cpp
index f1f1caa..17be6ab 100644
--- a/layout/generic/nsGfxScrollFrame.cpp
+++ b/layout/generic/nsGfxScrollFrame.cpp
@@ -213,6 +213,12 @@ nsHTMLScrollFrame::RemoveFrame(nsIAtom*  aListName,
   return NS_OK;
 }
 
+NS_IMETHODIMP
+nsHTMLScrollFrame::IsSplittable(nsSplittableType& aIsSplittable) const
+{
+  aIsSplittable = NS_FRAME_NOT_SPLITTABLE;
+  return NS_OK;
+}
 
 PRIntn
 nsHTMLScrollFrame::GetSkipSides() const
@@ -1047,6 +1053,12 @@ nsXULScrollFrame::RemoveFrame(nsIAtom*        aListName,
   return rv;
 }
 
+NS_IMETHODIMP
+nsXULScrollFrame::IsSplittable(nsSplittableType& aIsSplittable) const
+{
+  aIsSplittable = NS_FRAME_NOT_SPLITTABLE;
+  return NS_OK;
+}
 
 NS_IMETHODIMP
 nsXULScrollFrame::GetPadding(nsMargin& aMargin)
diff --git a/layout/generic/nsGfxScrollFrame.h b/layout/generic/nsGfxScrollFrame.h
index 394eaa7..94ccc44 100644
--- a/layout/generic/nsGfxScrollFrame.h
+++ b/layout/generic/nsGfxScrollFrame.h
@@ -277,6 +277,7 @@ public:
 
   virtual PRBool NeedsView() { return PR_TRUE; }
   virtual PRBool DoesClipChildren() { return PR_TRUE; }
+  NS_IMETHOD IsSplittable(nsSplittableType& aIsSplittable) const;
 
   virtual nsPoint GetPositionOfChildIgnoringScrolling(nsIFrame* aChild)
   { nsPoint pt = aChild->GetPosition();
@@ -424,6 +425,7 @@ public:
 
   virtual PRBool NeedsView() { return PR_TRUE; }
   virtual PRBool DoesClipChildren() { return PR_TRUE; }
+  NS_IMETHOD IsSplittable(nsSplittableType& aIsSplittable) const;
 
   virtual nsPoint GetPositionOfChildIgnoringScrolling(nsIFrame* aChild)
   { nsPoint pt = aChild->GetPosition();
diff --git a/layout/generic/nsPlaceholderFrame.cpp b/layout/generic/nsPlaceholderFrame.cpp
index 3bf3b18..022cb10 100644
--- a/layout/generic/nsPlaceholderFrame.cpp
+++ b/layout/generic/nsPlaceholderFrame.cpp
@@ -92,6 +92,13 @@ nsPlaceholderFrame::Destroy()
   nsSplittableFrame::Destroy();
 }
 
+NS_IMETHODIMP
+nsPlaceholderFrame::IsSplittable(nsSplittableType& aIsSplittable) const
+{
+  NS_ASSERTION(mOutOfFlowFrame, """"IsSplittable called at the wrong time"""");
+  return mOutOfFlowFrame->IsSplittable(aIsSplittable);
+}
+
 nsIAtom*
 nsPlaceholderFrame::GetType() const
 {
diff --git a/layout/generic/nsPlaceholderFrame.h b/layout/generic/nsPlaceholderFrame.h
index cf81de9..7e7505a 100644
--- a/layout/generic/nsPlaceholderFrame.h
+++ b/layout/generic/nsPlaceholderFrame.h
@@ -72,6 +72,7 @@ public:
                     nsReflowStatus& aStatus);
 
   virtual void Destroy();
+  NS_IMETHOD IsSplittable(nsSplittableType& aIsSplittable) const;
 
   // nsIFrame overrides
 #ifdef DEBUG"""
4c62cf70f695d31eaa282b33eb1bb9fc08bd1b65,113582,348887,mats.palmgren%bredband.net,"Don't steal floats from descendant float containing blocks. b=348887 r+sr=roc
",1156215858,"""diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
index 7263fda..42e86b8 100644
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -7135,13 +7135,13 @@ nsBlockFrame::ReflowBullet(nsBlockReflowState& aState,
 
 // This is used to scan frames for any float placeholders, add their
 // floats to the list represented by aHead and aTail, and remove the
-// floats from whatever list they might be in. We only search the
-// inline descendants. The floats must be children of 'this'.
+// floats from whatever list they might be in. We don't search descendants
+// that are float containing blocks. The floats must be children of 'this'.
 void nsBlockFrame::CollectFloats(nsIFrame* aFrame, nsFrameList& aList, nsIFrame** aTail,
                                  PRBool aFromOverflow) {
   while (aFrame) {
-    // Don't descend into block children
-    if (!aFrame->GetStyleDisplay()->IsBlockLevel()) {
+    // Don't descend into float containing blocks.
+    if (!aFrame->IsFloatContainingBlock()) {
       nsIFrame *outOfFlowFrame = nsLayoutUtils::GetFloatFromPlaceholder(aFrame);
       if (outOfFlowFrame) {
         // Make sure that its parent is us. Otherwise we don't want"""
602cf781cd2ecffe24044f235d43a7e60c10f4d4,113585,337419,mats.palmgren%bredband.net,"Improve error handling in nsCSSFrameConstructor::CreateContinuingFrame() and its callers. b=337419 r+sr=roc
",1156210426,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index 795dfe2..25d82bc 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -10864,7 +10864,13 @@ nsCSSFrameConstructor::CreateContinuingOuterTableFrame(nsIPresShell*    aPresShe
     nsIFrame* childFrame = aFrame->GetFirstChild(nsnull);
     if (childFrame) {
       nsIFrame* continuingTableFrame;
-      CreateContinuingFrame(aPresContext, childFrame, newFrame, &continuingTableFrame);
+      nsresult rv = CreateContinuingFrame(aPresContext, childFrame, newFrame,
+                                          &continuingTableFrame);
+      if (NS_FAILED(rv)) {
+        newFrame->Destroy();
+        *aContinuingFrame = nsnull;
+        return rv;
+      }
       newChildFrames.AddChild(continuingTableFrame);
       
       NS_ASSERTION(!childFrame->GetNextSibling(),""""there can be only one inner table frame"""");
@@ -11064,8 +11070,15 @@ nsCSSFrameConstructor::CreateContinuingFrame(nsPresContext* aPresContext,
         // See if it's a table cell frame
         if (IS_TABLE_CELL(cellFrame->GetType())) {
           nsIFrame* continuingCellFrame;
-
-          CreateContinuingFrame(aPresContext, cellFrame, newFrame, &continuingCellFrame);
+          rv = CreateContinuingFrame(aPresContext, cellFrame, newFrame,
+                                     &continuingCellFrame);
+          if (NS_FAILED(rv)) {
+            nsFrameList tmp(newChildList.childList);
+            tmp.DestroyFrames();
+            newFrame->Destroy();
+            *aContinuingFrame = nsnull;
+            return NS_ERROR_OUT_OF_MEMORY;
+          }
           newChildList.AddChild(continuingCellFrame);
         }
         cellFrame = cellFrame->GetNextSibling();
@@ -11086,7 +11099,13 @@ nsCSSFrameConstructor::CreateContinuingFrame(nsPresContext* aPresContext,
       // Create a continuing area frame
       nsIFrame* continuingAreaFrame;
       nsIFrame* areaFrame = aFrame->GetFirstChild(nsnull);
-      CreateContinuingFrame(aPresContext, areaFrame, newFrame, &continuingAreaFrame);
+      rv = CreateContinuingFrame(aPresContext, areaFrame, newFrame,
+                                 &continuingAreaFrame);
+      if (NS_FAILED(rv)) {
+        newFrame->Destroy();
+        *aContinuingFrame = nsnull;
+        return rv;
+      }
 
       // Set the table cell's initial child list
       newFrame->SetInitialChildList(nsnull, continuingAreaFrame);
@@ -11120,15 +11139,20 @@ nsCSSFrameConstructor::CreateContinuingFrame(nsPresContext* aPresContext,
     // create a continuing out of flow frame
     nsIFrame* oofFrame = nsPlaceholderFrame::GetRealFrameForPlaceholder(aFrame);
     nsIFrame* oofContFrame;
-    CreateContinuingFrame(aPresContext, oofFrame, aParentFrame, &oofContFrame);
-    if (!oofContFrame) 
-      return NS_ERROR_NULL_POINTER;
+    rv = CreateContinuingFrame(aPresContext, oofFrame, aParentFrame, &oofContFrame);
+    if (NS_FAILED(rv)) {
+      *aContinuingFrame = nsnull;
+      return rv;
+    }
     // create a continuing placeholder frame
-    CreatePlaceholderFrameFor(shell, aPresContext,
-                              shell->FrameManager(), content, 
-                              oofContFrame, styleContext, aParentFrame, &newFrame);
-    if (!newFrame) 
-      return NS_ERROR_NULL_POINTER;
+    rv = CreatePlaceholderFrameFor(shell, aPresContext, shell->FrameManager(),
+                                   content, oofContFrame, styleContext,
+                                   aParentFrame, &newFrame);
+    if (NS_FAILED(rv)) {
+      oofContFrame->Destroy();
+      *aContinuingFrame = nsnull;
+      return rv;
+    }
     newFrame->Init(content, aParentFrame, aFrame);
   } else if (nsLayoutAtoms::fieldSetFrame == frameType) {
     newFrame = NS_NewFieldSetFrame(shell, styleContext);
@@ -11143,13 +11167,19 @@ nsCSSFrameConstructor::CreateContinuingFrame(nsPresContext* aPresContext,
       // XXXbz we really shouldn't have to do this by hand!
       nsIFrame* continuingAreaFrame;
       nsIFrame* areaFrame = GetFieldSetAreaFrame(aFrame);
-      CreateContinuingFrame(aPresContext, areaFrame, newFrame, &continuingAreaFrame);
-
+      rv = CreateContinuingFrame(aPresContext, areaFrame, newFrame,
+                                 &continuingAreaFrame);
+      if (NS_FAILED(rv)) {
+        newFrame->Destroy();
+        *aContinuingFrame = nsnull;
+        return rv;
+      }
       // Set the fieldset's initial child list
       newFrame->SetInitialChildList(nsnull, continuingAreaFrame);
     }
   } else {
-    NS_ASSERTION(PR_FALSE, """"unexpected frame type"""");
+    NS_NOTREACHED(""""unexpected frame type"""");
+    *aContinuingFrame = nsnull;
     return NS_ERROR_UNEXPECTED;
   }
 
@@ -11194,6 +11224,8 @@ nsCSSFrameConstructor::CreateContinuingFrame(nsPresContext* aPresContext,
   nsIFrame* pageFrame = aParentFrame->GetParent();
   if (!pageFrame) {
     NS_ERROR(""""pageContentFrame does not have parent!"""");
+    newFrame->Destroy();
+    *aContinuingFrame = nsnull;
     return NS_ERROR_UNEXPECTED;
   }
 
@@ -11207,6 +11239,8 @@ nsCSSFrameConstructor::CreateContinuingFrame(nsPresContext* aPresContext,
   nsIFrame* prevPageContentFrame = prevPage->GetFirstChild(nsnull);
 
   if (!prevPageContentFrame) {
+    newFrame->Destroy();
+    *aContinuingFrame = nsnull;
     return NS_ERROR_UNEXPECTED;
   }
   
@@ -11224,8 +11258,11 @@ nsCSSFrameConstructor::CreateContinuingFrame(nsPresContext* aPresContext,
   for (nsIFrame* fixed = firstFixed; fixed; fixed = fixed->GetNextSibling()) {
     rv = ConstructFrame(state, fixed->GetContent(),
                         newFrame, fixedPlaceholders);
-    if (NS_FAILED(rv))
+    if (NS_FAILED(rv)) {
+      newFrame->Destroy();
+      *aContinuingFrame = nsnull;
       return rv;
+    }
   }
 
   // Add the placeholders to our primary child list.
@@ -12220,6 +12257,7 @@ nsCSSFrameConstructor::CreateFloatingLetterFrame(
   nsFrameItems& aResult)
 {
   // Create the first-letter-frame
+  nsresult rv;
   nsIFrame* letterFrame;
   nsStyleSet *styleSet = mPresShell->StyleSet();
 
@@ -12247,9 +12285,12 @@ nsCSSFrameConstructor::CreateFloatingLetterFrame(
   nsIFrame* nextTextFrame = nsnull;
   if (NeedFirstLetterContinuation(aTextContent)) {
     // Create continuation
-    CreateContinuingFrame(aState.mPresContext, aTextFrame, aParentFrame,
-                          &nextTextFrame);
-
+    rv = CreateContinuingFrame(aState.mPresContext, aTextFrame, aParentFrame,
+                               &nextTextFrame);
+    if (NS_FAILED(rv)) {
+      letterFrame->Destroy();
+      return;
+    }
     // Repair the continuations style context
     nsStyleContext* parentStyleContext = aStyleContext->GetParent();
     if (parentStyleContext) {
@@ -12264,10 +12305,9 @@ nsCSSFrameConstructor::CreateFloatingLetterFrame(
   NS_ASSERTION(aResult.childList == nsnull,
                """"aResult should be an empty nsFrameItems!"""");
 
-  nsresult rv = aState.AddChild(letterFrame, aResult,
-                                letterFrame->GetStyleDisplay(),
-                                aTextContent, aStyleContext, aParentFrame,
-                                PR_FALSE, PR_TRUE);
+  rv = aState.AddChild(letterFrame, aResult, letterFrame->GetStyleDisplay(),
+                       aTextContent, aStyleContext, aParentFrame, PR_FALSE,
+                       PR_TRUE);
 
   if (nextTextFrame) {
     if (NS_FAILED(rv)) {
diff --git a/layout/generic/nsHTMLContainerFrame.cpp b/layout/generic/nsHTMLContainerFrame.cpp
index 0c8f20d..d5995f0 100644
--- a/layout/generic/nsHTMLContainerFrame.cpp
+++ b/layout/generic/nsHTMLContainerFrame.cpp
@@ -348,17 +348,16 @@ nsHTMLContainerFrame::CreateNextInFlow(nsPresContext* aPresContext,
     // into our lines child list.
     nsIFrame* nextFrame = aFrame->GetNextSibling();
 
-    aPresContext->PresShell()->FrameConstructor()->
+    nsresult rv = aPresContext->PresShell()->FrameConstructor()->
       CreateContinuingFrame(aPresContext, aFrame, aOuterFrame, &nextInFlow);
-
-    if (nsnull == nextInFlow) {
-      return NS_ERROR_OUT_OF_MEMORY;
+    if (NS_FAILED(rv)) {
+      return rv;
     }
     aFrame->SetNextSibling(nextInFlow);
     nextInFlow->SetNextSibling(nextFrame);
 
     NS_FRAME_LOG(NS_FRAME_TRACE_NEW_FRAMES,
-       (""""nsHTMLContainerFrame::MaybeCreateNextInFlow: frame=%p nextInFlow=%p"""",
+       (""""nsHTMLContainerFrame::CreateNextInFlow: frame=%p nextInFlow=%p"""",
         aFrame, nextInFlow));
 
     aNextInFlowResult = nextInFlow;
diff --git a/layout/generic/nsPageFrame.cpp b/layout/generic/nsPageFrame.cpp
index 0897a90..fe54122 100644
--- a/layout/generic/nsPageFrame.cpp
+++ b/layout/generic/nsPageFrame.cpp
@@ -108,10 +108,12 @@ NS_IMETHODIMP nsPageFrame::Reflow(nsPresContext*          aPresContext,
     // Create a continuing child of the previous page's last child
     nsIFrame*     newFrame;
 
-    aPresContext->PresShell()->FrameConstructor()->
+    nsresult rv = aPresContext->PresShell()->FrameConstructor()->
       CreateContinuingFrame(aPresContext, prevLastChild,
                             contentPage, &newFrame);
-
+    if (NS_FAILED(rv)) {
+      return rv;
+    }
     // Make the new area frame the 1st child of the page content frame. There may already be
     // children placeholders which don't get reflowed but must not be destroyed until the 
     // page content frame is destroyed.
diff --git a/layout/generic/nsSimplePageSequence.cpp b/layout/generic/nsSimplePageSequence.cpp
index becfa92..f7cee71 100644
--- a/layout/generic/nsSimplePageSequence.cpp
+++ b/layout/generic/nsSimplePageSequence.cpp
@@ -328,9 +328,12 @@ nsSimplePageSequenceFrame::Reflow(nsPresContext*          aPresContext,
       } else if (nsnull == kidNextInFlow) {
         // The page isn't complete and it doesn't have a next-in-flow, so
         // create a continuing page
-        nsIFrame*     continuingPage;
-        CreateContinuingPageFrame(aPresContext, kidFrame, &continuingPage);
-
+        nsIFrame* continuingPage;
+        nsresult rv = CreateContinuingPageFrame(aPresContext, kidFrame,
+                                                &continuingPage);
+        if (NS_FAILED(rv)) {
+          break;
+        }
         // Add it to our child list
         kidFrame->SetNextSibling(continuingPage);
         reflowReason = eReflowReason_Initial;
diff --git a/layout/tables/nsTableFrame.cpp b/layout/tables/nsTableFrame.cpp
index ca6da14..4a375f8 100644
--- a/layout/tables/nsTableFrame.cpp
+++ b/layout/tables/nsTableFrame.cpp
@@ -22,6 +22,7 @@
  *
  * Contributor(s):
  *   Pierre Phaneuf <pp@ludusdesign.com>
+ *   Mats Palmgren <mats.palmgren@bredband.net>
  *
  * Alternatively, the contents of this file may be used under the terms of
  * either of the GNU General Public License Version 2 or later (the """"GPL""""),
@@ -3289,10 +3290,13 @@ nsTableFrame::ReflowChildren(nsTableReflowState& aReflowState,
             // frame. This hooks the child into the flow
             nsIFrame*     continuingFrame;
 
-            presContext->PresShell()->FrameConstructor()->
+            rv = presContext->PresShell()->FrameConstructor()->
               CreateContinuingFrame(presContext, kidFrame, this,
                                     &continuingFrame);
-  
+            if (NS_FAILED(rv)) {
+              aStatus = NS_FRAME_COMPLETE;
+              break;
+            }
             // Add the continuing frame to the sibling list
             continuingFrame->SetNextSibling(kidFrame->GetNextSibling());
             kidFrame->SetNextSibling(continuingFrame);
diff --git a/layout/tables/nsTableRowGroupFrame.cpp b/layout/tables/nsTableRowGroupFrame.cpp
index fd3a466..e6dace8 100644
--- a/layout/tables/nsTableRowGroupFrame.cpp
+++ b/layout/tables/nsTableRowGroupFrame.cpp
@@ -20,6 +20,7 @@
  * the Initial Developer. All Rights Reserved.
  *
  * Contributor(s):
+ *   Mats Palmgren <mats.palmgren@bredband.net>
  *
  * Alternatively, the contents of this file may be used under the terms of
  * either of the GNU General Public License Version 2 or later (the """"GPL""""),
@@ -883,9 +884,12 @@ nsTableRowGroupFrame::CreateContinuingRowFrame(nsPresContext& aPresContext,
   // XXX what is the row index?
   if (!aContRowFrame) {NS_ASSERTION(PR_FALSE, """"bad call""""); return;}
   // create the continuing frame which will create continuing cell frames
-  aPresContext.PresShell()->FrameConstructor()->
+  nsresult rv = aPresContext.PresShell()->FrameConstructor()->
     CreateContinuingFrame(&aPresContext, &aRowFrame, this, aContRowFrame);
-  if (!*aContRowFrame) return;
+  if (NS_FAILED(rv)) {
+    *aContRowFrame = nsnull;
+    return;
+  }
 
   // Add the continuing row frame to the child list
   nsIFrame* nextRow;"""
b5e9afc9a0f5a95a42fbe65f0826549ccc9f3d23,113663,349201,Olli.Pettay%helsinki.fi,"Bug 349201, r=enndeakin, sr=bz
",1156143220,"""diff --git a/content/xul/content/src/nsXULPopupListener.cpp b/content/xul/content/src/nsXULPopupListener.cpp
index 920b0a8..e805d63 100644
--- a/content/xul/content/src/nsXULPopupListener.cpp
+++ b/content/xul/content/src/nsXULPopupListener.cpp
@@ -128,7 +128,6 @@ protected:
 
     virtual nsresult LaunchPopup(nsIDOMEvent* anEvent);
     virtual nsresult LaunchPopup(PRInt32 aClientX, PRInt32 aClientY) ;
-    virtual void ClosePopup();
 
 private:
 
@@ -139,7 +138,7 @@ private:
     nsIDOMElement* mElement;               // Weak ref. The element will go away first.
 
     // The popup that is getting shown on top of mElement.
-    nsIDOMElement* mPopupContent; 
+    nsCOMPtr<nsIPopupBoxObject> mPopup;
 
     // The type of the popup
     XULPopupType popupType;
@@ -149,13 +148,15 @@ private:
 ////////////////////////////////////////////////////////////////////////
       
 XULPopupListenerImpl::XULPopupListenerImpl(void)
-  : mElement(nsnull), mPopupContent(nsnull)
+  : mElement(nsnull)
 {
 }
 
 XULPopupListenerImpl::~XULPopupListenerImpl(void)
 {
-  ClosePopup();
+  if (mPopup) {
+    mPopup->HidePopup();
+  }
   
 #ifdef DEBUG_REFS
     --gInstanceCount;
@@ -389,30 +390,6 @@ XULPopupListenerImpl::FireFocusOnTargetContent(nsIDOMNode* aTargetNode)
 }
 
 //
-// ClosePopup
-//
-// Do everything needed to shut down the popup.
-//
-// NOTE: This routine is safe to call even if the popup is already closed.
-//
-void
-XULPopupListenerImpl :: ClosePopup ( )
-{
-  if ( mPopupContent ) {
-    nsCOMPtr<nsIDOMXULElement> popupElement(do_QueryInterface(mPopupContent));
-    nsCOMPtr<nsIBoxObject> boxObject;
-    if (popupElement)
-      popupElement->GetBoxObject(getter_AddRefs(boxObject));
-    nsCOMPtr<nsIPopupBoxObject> popupObject(do_QueryInterface(boxObject));
-    if (popupObject)
-      popupObject->HidePopup();
-
-    mPopupContent = nsnull;  // release the popup
-  }
-
-} // ClosePopup
-
-//
 // LaunchPopup
 //
 nsresult
@@ -607,28 +584,28 @@ XULPopupListenerImpl::LaunchPopup(PRInt32 aClientX, PRInt32 aClientY)
 
   if (domWindow) {
     // Find out if we're anchored.
-    mPopupContent = popupContent.get();
-
     nsAutoString anchorAlignment;
-    mPopupContent->GetAttribute(NS_LITERAL_STRING(""""popupanchor""""), anchorAlignment);
+    popupContent->GetAttribute(NS_LITERAL_STRING(""""popupanchor""""), anchorAlignment);
 
     nsAutoString popupAlignment;
-    mPopupContent->GetAttribute(NS_LITERAL_STRING(""""popupalign""""), popupAlignment);
+    popupContent->GetAttribute(NS_LITERAL_STRING(""""popupalign""""), popupAlignment);
 
     PRInt32 xPos = aClientX, yPos = aClientY;
 
-    ConvertPosition(mPopupContent, anchorAlignment, popupAlignment, yPos);
+    ConvertPosition(popupContent, anchorAlignment, popupAlignment, yPos);
     if (!anchorAlignment.IsEmpty() && !popupAlignment.IsEmpty())
       xPos = yPos = -1;
 
     nsCOMPtr<nsIBoxObject> popupBox;
-    nsCOMPtr<nsIDOMXULElement> xulPopupElt(do_QueryInterface(mPopupContent));
+    nsCOMPtr<nsIDOMXULElement> xulPopupElt(do_QueryInterface(popupContent));
     xulPopupElt->GetBoxObject(getter_AddRefs(popupBox));
     nsCOMPtr<nsIPopupBoxObject> popupBoxObject(do_QueryInterface(popupBox));
-    if (popupBoxObject)
-      popupBoxObject->ShowPopup(mElement, mPopupContent, xPos, yPos, 
+    if (popupBoxObject) {
+      mPopup = popupBoxObject;
+      popupBoxObject->ShowPopup(mElement, popupContent, xPos, yPos, 
                                 type.get(), anchorAlignment.get(), 
                                 popupAlignment.get());
+    }
   }
 
   return NS_OK;"""
fa90e30e557eb121e9d4289c628377e6e6a93a1e,113719,348062,mrbkap%gmail.com,"Enforce a semicolon after ASSERT_IN_SYNC in builds without DEBUG_CONTENT_LIST defined. NPTOB, idea from bz (bug 348062)
",1155943535,"""diff --git a/content/base/src/nsContentList.cpp b/content/base/src/nsContentList.cpp
index 187b97e..321bc69 100644
--- a/content/base/src/nsContentList.cpp
+++ b/content/base/src/nsContentList.cpp
@@ -65,7 +65,7 @@ nsresult
 NS_NewPreContentIterator(nsIContentIterator** aInstancePtrResult);
 #define ASSERT_IN_SYNC AssertInSync()
 #else
-#define ASSERT_IN_SYNC
+#define ASSERT_IN_SYNC PR_BEGIN_MACRO PR_END_MACRO
 #endif
 
 """
da4a20a23d045e5a5276481566011a277618c977,113815,348688,mats.palmgren%bredband.net,"Leave the placeholder's pointer to the out-of-flow intact because the float cache depends on it later on. b=348688 r=bzbarsky sr=roc
",1155820526,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index f206e09..795dfe2 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -9772,7 +9772,8 @@ DoDeletingFrameSubtree(nsFrameManager* aFrameManager,
   
         // Remove the mapping from the out-of-flow frame to its placeholder.
         aFrameManager->UnregisterPlaceholderFrame((nsPlaceholderFrame*)childFrame);
-        ((nsPlaceholderFrame*)childFrame)->SetOutOfFlowFrame(nsnull);
+        // Don't SetOutOfFlowFrame(nsnull) here because the float cache depends
+        // on it when the float is removed later on, see bug 348688 comment 6.
         
         // Queue the out-of-flow frame to be destroyed only if aRemovedFrame is _not_
         // one of its ancestor frames or if it is a popup frame. 
diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
index 06855fb..7263fda 100644
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -5879,12 +5879,6 @@ found_frame:;
     printf("""" prevSibling=%p deletedNextContinuation=%p\n"""", prevSibling, deletedNextContinuation);
 #endif
 
-    if (!aDeletedFrame->IsFloatContainingBlock()) {
-      // Clear the float cache from placeholders that are descendants
-      // of aDeletedFrame (bug 337883).
-      line->RemovePlaceholderDescendantsOf(aDeletedFrame);
-    }
-
     if (aDestroyFrames) {
       aDeletedFrame->Destroy();
     } else {
diff --git a/layout/generic/nsLineBox.cpp b/layout/generic/nsLineBox.cpp
index 731dacd..3e075b7 100644
--- a/layout/generic/nsLineBox.cpp
+++ b/layout/generic/nsLineBox.cpp
@@ -524,34 +524,6 @@ nsLineBox::RemoveFloat(nsIFrame* aFrame)
 }
 
 void
-nsLineBox::RemovePlaceholderDescendantsOf(nsIFrame* aFrame)
-{
-  if (IsInline() && mInlineData) {
-    nsFloatCache* fc = mInlineData->mFloats.Head();
-    while (fc) {
-      nsIFrame* frame = fc->mPlaceholder;
-      while (frame && frame != aFrame) {
-        if (frame->IsFloatContainingBlock()) {
-          frame = nsnull;
-          break;
-        }
-        frame = frame->GetParent();
-      }
-      if (NS_UNLIKELY(frame != nsnull)) {
-        nsFloatCache* next = fc->Next();
-        mInlineData->mFloats.Remove(fc);
-        delete fc;
-        MaybeFreeData();
-        fc = next;
-      }
-      else {
-        fc = fc->Next();
-      }
-    }
-  }
-}
-
-void
 nsLineBox::SetCombinedArea(const nsRect& aCombinedArea)
 {  
   NS_ASSERTION(aCombinedArea.width >= 0, """"illegal width for combined area"""");
diff --git a/layout/generic/nsLineBox.h b/layout/generic/nsLineBox.h
index f495736..5ab6474 100644
--- a/layout/generic/nsLineBox.h
+++ b/layout/generic/nsLineBox.h
@@ -402,7 +402,6 @@ public:
   void FreeFloats(nsFloatCacheFreeList& aFreeList);
   void AppendFloats(nsFloatCacheFreeList& aFreeList);
   PRBool RemoveFloat(nsIFrame* aFrame);
-  void RemovePlaceholderDescendantsOf(nsIFrame* aFrame);
 
   // Combined area is the area of the line that should influence the
   // overflow area of its parent block.  The combined area should be"""
828176cb30d236752c53980dfd453927fcfb56a2,113908,345071,roc+%cs.cmu.edu,"Bug 345071. Fix PrepareUnicodeText to handle words in the current textnode that extend past the end of the frame. r=smontagu,sr=rbs
",1155693426,"""diff --git a/layout/generic/nsTextFrame.cpp b/layout/generic/nsTextFrame.cpp
index 279b757..353128d 100644
--- a/layout/generic/nsTextFrame.cpp
+++ b/layout/generic/nsTextFrame.cpp
@@ -2192,12 +2192,9 @@ nsTextFrame::PrepareUnicodeText(nsTextTransformer& aTX,
     aTX.GetNextWord(PR_FALSE, &wordLen, &contentLen, &isWhitespace, &wasTransformed);
     // we trip this assertion in bug 31053, but I think it's unnecessary
     //NS_ASSERTION(isWhitespace, """"mState and content are out of sync"""");
-#ifdef IBMBIDI
-    if (mState & NS_FRAME_IS_BIDI
-        && contentLen > mContentLength) {
-      contentLen = mContentLength;
+    if (contentLen > n) {
+      contentLen = n;
     }
-#endif // IBMBIDI
 
     if (isWhitespace) {
       if (nsnull != indexp) {
@@ -2246,16 +2243,14 @@ nsTextFrame::PrepareUnicodeText(nsTextTransformer& aTX,
       }
       break;
     }
-    // for ::first-letter or bidi, the content may be chopped
-    if (mState & (TEXT_FIRST_LETTER | NS_FRAME_IS_BIDI)) {
-      // XXX: doesn't support the case where the first-letter expands, e.g.,
-      // with text-transform:capitalize, the German szlig; becomes SS.
-      if (contentLen > n) {
-        contentLen = n;
-      }
-      if (wordLen > n) {
-        wordLen = n;
-      }
+    // the frame may not map the entire word
+    // XXX: doesn't support the case where the first-letter expands, e.g.,
+    // with text-transform:capitalize, the German szlig; becomes SS.
+    if (contentLen > n) {
+      contentLen = n;
+    }
+    if (wordLen > n) {
+      wordLen = n;
     }
     inWord = PR_FALSE;
     if (isWhitespace) {"""
168c1f7fc57277738200dee1be8660b1a4006dd7,113927,348729,bzbarsky%mit.edu,"Don't clobber the parentFrame we need to recover letter frames on.  Bug 348729, r+sr=roc
",1155680762,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index cd6ff66..f206e09 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -10068,9 +10068,9 @@ nsCSSFrameConstructor::ContentRemoved(nsIContent*     aContainer,
 
       // Remove the placeholder frame first (XXX second for now) (so
       // that it doesn't retain a dangling pointer to memory)
-      parentFrame = placeholderFrame->GetParent();
+      nsIFrame* placeholderParent = placeholderFrame->GetParent();
       ::DeletingFrameSubtree(frameManager, placeholderFrame);
-      rv |= frameManager->RemoveFrame(parentFrame,
+      rv |= frameManager->RemoveFrame(placeholderParent,
                                       nsnull, placeholderFrame);
     } else {
       // Notify the parent frame that it should delete the frame
@@ -10091,9 +10091,11 @@ nsCSSFrameConstructor::ContentRemoved(nsIContent*     aContainer,
     }
 
     if (haveFLS && mInitialContainingBlock) {
+      NS_ASSERTION(containingBlock == GetFloatContainingBlock(parentFrame),
+                   """"What happened here?"""");
       nsFrameConstructorState state(mPresShell, mFixedContainingBlock,
                                     GetAbsoluteContainingBlock(parentFrame),
-                                    GetFloatContainingBlock(parentFrame));
+                                    containingBlock);
       RecoverLetterFrames(state, containingBlock);
     }
 """
fc5805aba9257ad2fb95b547d210106935995b7d,113972,348492,rbs%maths.uq.edu.au,"Frames not destroyed with <mmultiscripts> and <mtd>, b=348492, r+sr=bzbarsky
",1155617383,"""diff --git a/content/base/src/nsGkAtomList.h b/content/base/src/nsGkAtomList.h
index cd0dcca..8b804fd 100755
--- a/content/base/src/nsGkAtomList.h
+++ b/content/base/src/nsGkAtomList.h
@@ -1348,15 +1348,6 @@ GK_ATOM(svgTextPathFrame, """"SVGTextPathFrame"""")
 GK_ATOM(svgTSpanFrame, """"SVGTSpanFrame"""")
 GK_ATOM(svgUseFrame, """"SVGUseFrame"""")
 #endif
-#ifdef MOZ_MATHML
-GK_ATOM(ordinaryMathMLFrame, """"OrdinaryMathMLFrame"""")
-GK_ATOM(operatorOrdinaryMathMLFrame, """"OperatorOrdinaryMathMLFrame"""")
-GK_ATOM(operatorInvisibleMathMLFrame, """"OperatorInvisibleMathMLFrame"""")
-GK_ATOM(operatorUserDefinedMathMLFrame, """"OperatorUserDefinedMathMLFrame"""")
-GK_ATOM(innerMathMLFrame, """"InnerMathMLFrame"""") // 'inner' in TeX
-GK_ATOM(italicIdentifierMathMLFrame, """"ItalicIdentifierMathMLFrame"""")
-GK_ATOM(uprightIdentifierMathMLFrame, """"UprightIdentifierMathMLFrame"""")
-#endif
 
 // Frame property names
 GK_ATOM(boxMetricsProperty, """"BoxMetricsProperty"""") // nsBoxLayoutMetrics*
diff --git a/layout/mathml/base/src/nsIMathMLFrame.h b/layout/mathml/base/src/nsIMathMLFrame.h
index 314dc64..71eb6ad 100644
--- a/layout/mathml/base/src/nsIMathMLFrame.h
+++ b/layout/mathml/base/src/nsIMathMLFrame.h
@@ -45,14 +45,27 @@ struct nsPresentationData;
 struct nsEmbellishData;
 struct nsHTMLReflowMetrics;
 
-// IID for the nsIMathMLFrame interface (the IID was taken from IIDS.h) 
-/* a6cf9113-15b3-11d2-932e-00805f8add32 */
-#define NS_IMATHMLFRAME_IID   \
-{ 0xa6cf9113, 0x15b3, 0x11d2, \
-  { 0x93, 0x2e, 0x00, 0x80, 0x5f, 0x8a, 0xdd, 0x32 } }
+// a781ed45-4338-43cb-9739-a7a8f8418ff3
+#define NS_IMATHMLFRAME_IID \
+{ 0xa781ed45, 0x4338, 0x43cb, \
+  { 0x97, 0x39, 0xa7, 0xa8, 0xf8, 0x41, 0x8f, 0xf3 } }
 
 static NS_DEFINE_IID(kIMathMLFrameIID, NS_IMATHMLFRAME_IID);
 
+// For MathML, this 'type' will be used to determine the spacing between frames
+// Subclasses can return a 'type' that will give them a particular spacing
+enum eMathMLFrameType {
+  eMathMLFrameType_UNKNOWN = -1,
+  eMathMLFrameType_Ordinary,
+  eMathMLFrameType_OperatorOrdinary,
+  eMathMLFrameType_OperatorInvisible,
+  eMathMLFrameType_OperatorUserDefined,
+  eMathMLFrameType_Inner,
+  eMathMLFrameType_ItalicIdentifier,
+  eMathMLFrameType_UprightIdentifier,
+  eMathMLFrameType_COUNT
+};
+
 // Abstract base class that provides additional methods for MathML frames
 class nsIMathMLFrame : public nsISupports {
 public:
@@ -81,6 +94,7 @@ public:
   NS_IMETHOD
   SetReference(const nsPoint& aReference) = 0;
 
+  virtual eMathMLFrameType GetMathMLFrameType() = 0;
 
  /* SUPPORT FOR STRETCHY ELEMENTS */
  /*====================================================================*/
diff --git a/layout/mathml/base/src/nsMathMLContainerFrame.cpp b/layout/mathml/base/src/nsMathMLContainerFrame.cpp
index b9965f6..201a14e 100644
--- a/layout/mathml/base/src/nsMathMLContainerFrame.cpp
+++ b/layout/mathml/base/src/nsMathMLContainerFrame.cpp
@@ -171,7 +171,8 @@ void nsDisplayMathMLError::Paint(nsDisplayListBuilder* aBuilder,
 void
 nsMathMLContainerFrame::GetReflowAndBoundingMetricsFor(nsIFrame*            aFrame,
                                                        nsHTMLReflowMetrics& aReflowMetrics,
-                                                       nsBoundingMetrics&   aBoundingMetrics)
+                                                       nsBoundingMetrics&   aBoundingMetrics,
+                                                       eMathMLFrameType*    aMathMLFrameType)
 {
   NS_PRECONDITION(aFrame, """"null arg"""");
 
@@ -185,18 +186,25 @@ nsMathMLContainerFrame::GetReflowAndBoundingMetricsFor(nsIFrame*            aFra
   aReflowMetrics.width   = rect.width;
   aReflowMetrics.height  = rect.height;
 
-  aBoundingMetrics.Clear();
-  nsIMathMLFrame* mathMLFrame;
-  aFrame->QueryInterface(NS_GET_IID(nsIMathMLFrame), (void**)&mathMLFrame);
-  if (mathMLFrame) {
-    mathMLFrame->GetBoundingMetrics(aBoundingMetrics);
-  }
-  else { // aFrame is not a MathML frame, just return the reflow metrics
-    aBoundingMetrics.descent = aReflowMetrics.descent;
-    aBoundingMetrics.ascent  = aReflowMetrics.ascent;
-    aBoundingMetrics.width   = aReflowMetrics.width;
-    aBoundingMetrics.rightBearing = aReflowMetrics.width;
+  if (aFrame->IsFrameOfType(nsIFrame::eMathML)) {
+    nsIMathMLFrame* mathMLFrame;
+    CallQueryInterface(aFrame, &mathMLFrame);
+    if (mathMLFrame) {
+      mathMLFrame->GetBoundingMetrics(aBoundingMetrics);
+      if (aMathMLFrameType)
+        *aMathMLFrameType = mathMLFrame->GetMathMLFrameType();
+
+      return;
+    }
   }
+
+ // aFrame is not a MathML frame, just return the reflow metrics
+ aBoundingMetrics.descent = aReflowMetrics.descent;
+ aBoundingMetrics.ascent  = aReflowMetrics.ascent;
+ aBoundingMetrics.width   = aReflowMetrics.width;
+ aBoundingMetrics.rightBearing = aReflowMetrics.width;
+ if (aMathMLFrameType)
+   *aMathMLFrameType = eMathMLFrameType_UNKNOWN;
 }
 
 // helper to get the preferred size that a container frame should use to fire
@@ -1133,44 +1141,12 @@ printf(""""\n"""");
   return NS_OK;
 }
 
-// For MathML, the 'type' will be used to determine the spacing between frames
-// Subclasses can override this method to return a 'type' that will give
-// them a particular spacing
-nsIAtom*
-nsMathMLContainerFrame::GetType() const
-{
-  // see if this is an embellished operator (mapped to 'Op' in TeX)
-  if (mEmbellishData.coreFrame) {
-    return mEmbellishData.coreFrame->GetType();
-  }
-
-  // if it has a prescribed base, just fetch the type from there
-  if (mPresentationData.baseFrame) {
-    return mPresentationData.baseFrame->GetType();
-  }
-
-  // everything else is treated as ordinary (mapped to 'Ord' in TeX)
-  return nsMathMLAtoms::ordinaryMathMLFrame;
-}
-
 PRBool
 nsMathMLContainerFrame::IsFrameOfType(PRUint32 aFlags) const
 {
   return !(aFlags & ~nsIFrame::eMathML);
 }
 
-enum eMathMLFrameType {
-  eMathMLFrameType_UNKNOWN = -1,
-  eMathMLFrameType_Ordinary,
-  eMathMLFrameType_OperatorOrdinary,
-  eMathMLFrameType_OperatorInvisible,
-  eMathMLFrameType_OperatorUserDefined,
-  eMathMLFrameType_Inner,
-  eMathMLFrameType_ItalicIdentifier,
-  eMathMLFrameType_UprightIdentifier,
-  eMathMLFrameType_COUNT
-};
-
 // see spacing table in Chapter 18, TeXBook (p.170)
 // Our table isn't quite identical to TeX because operators have 
 // built-in values for lspace & rspace in the Operator Dictionary.
@@ -1202,24 +1178,6 @@ static PRInt32 kInterFrameSpacingTable[eMathMLFrameType_COUNT][eMathMLFrameType_
       : space_ & 0x0F;                                                  \
   }                                                                     \
 
-#define MAP_FRAMETYPE(atomtype_, enumtype_)                             \
-  if (atomtype_ == nsMathMLAtoms::ordinaryMathMLFrame)                  \
-    enumtype_ = eMathMLFrameType_Ordinary;                              \
-  else if (atomtype_ == nsMathMLAtoms::operatorOrdinaryMathMLFrame)     \
-    enumtype_ = eMathMLFrameType_OperatorOrdinary;                      \
-  else if (atomtype_ == nsMathMLAtoms::operatorInvisibleMathMLFrame)    \
-    enumtype_ = eMathMLFrameType_OperatorInvisible;                     \
-  else if (atomtype_ == nsMathMLAtoms::operatorUserDefinedMathMLFrame)  \
-    enumtype_ = eMathMLFrameType_OperatorUserDefined;                   \
-  else if (atomtype_ == nsMathMLAtoms::innerMathMLFrame)                \
-    enumtype_ = eMathMLFrameType_Inner;                                 \
-  else if (atomtype_ == nsMathMLAtoms::italicIdentifierMathMLFrame)     \
-    enumtype_ = eMathMLFrameType_ItalicIdentifier;                      \
-  else if (atomtype_ == nsMathMLAtoms::uprightIdentifierMathMLFrame)    \
-    enumtype_ = eMathMLFrameType_UprightIdentifier;                     \
-  else                                                                  \
-    enumtype_ = eMathMLFrameType_UNKNOWN;
-
 // This function computes the inter-space between two frames. However, 
 // since invisible operators need special treatment, the inter-space may
 // be delayed when an invisible operator is encountered. In this case,
@@ -1232,14 +1190,13 @@ static PRInt32 kInterFrameSpacingTable[eMathMLFrameType_COUNT][eMathMLFrameType_
 // delayed -- and thus has no effect since the frame is invisible anyway).
 static nscoord
 GetInterFrameSpacing(PRInt32           aScriptLevel,
-                     nsIAtom*          aFirstFrameType,
-                     nsIAtom*          aSecondFrameType,
+                     eMathMLFrameType  aFirstFrameType,
+                     eMathMLFrameType  aSecondFrameType,
                      eMathMLFrameType* aFromFrameType, // IN/OUT
                      PRInt32*          aCarrySpace)    // IN/OUT
 {
-  eMathMLFrameType firstType, secondType;
-  MAP_FRAMETYPE(aFirstFrameType, firstType);
-  MAP_FRAMETYPE(aSecondFrameType, secondType);
+  eMathMLFrameType firstType = aFirstFrameType;
+  eMathMLFrameType secondType = aSecondFrameType;
 
   PRInt32 space;
   GET_INTERSPACE(aScriptLevel, firstType, secondType, space);
@@ -1312,16 +1269,16 @@ nsMathMLContainerFrame::Place(nsIRenderingContext& aRenderingContext,
 
   PRInt32 count = 0;
   PRInt32 carrySpace = 0;
-  eMathMLFrameType fromFrameType = eMathMLFrameType_UNKNOWN;
   nsHTMLReflowMetrics childSize (nsnull);
   nsBoundingMetrics bmChild;
   nscoord leftCorrection = 0, italicCorrection = 0;
-  nsIAtom* prevFrameType = nsnull;
+  eMathMLFrameType fromFrameType = eMathMLFrameType_UNKNOWN;
+  eMathMLFrameType prevFrameType = eMathMLFrameType_UNKNOWN;
+  eMathMLFrameType childFrameType;
 
   nsIFrame* childFrame = mFrames.FirstChild();
   while (childFrame) {
-    nsIAtom* childFrameType = childFrame->GetType();
-    GetReflowAndBoundingMetricsFor(childFrame, childSize, bmChild);
+    GetReflowAndBoundingMetricsFor(childFrame, childSize, bmChild, &childFrameType);
     GetItalicCorrection(bmChild, leftCorrection, italicCorrection);
     if (0 == count) {
       aDesiredSize.ascent = childSize.ascent;
@@ -1379,8 +1336,7 @@ nsMathMLContainerFrame::Place(nsIRenderingContext& aRenderingContext,
     fromFrameType = eMathMLFrameType_UNKNOWN;
     childFrame = mFrames.FirstChild();
     while (childFrame) {
-      nsIAtom* childFrameType = childFrame->GetType();
-      GetReflowAndBoundingMetricsFor(childFrame, childSize, bmChild);
+      GetReflowAndBoundingMetricsFor(childFrame, childSize, bmChild, &childFrameType);
       GetItalicCorrection(bmChild, leftCorrection, italicCorrection);
       dy = aDesiredSize.ascent - childSize.ascent;
       if (0 == count) {
@@ -1424,12 +1380,12 @@ GetInterFrameSpacingFor(PRInt32         aScriptLevel,
 
   PRInt32 carrySpace = 0;
   eMathMLFrameType fromFrameType = eMathMLFrameType_UNKNOWN;
-  nsIAtom* childFrameType = childFrame->GetType();
-  nsIAtom* prevFrameType = nsnull;
+  eMathMLFrameType prevFrameType = eMathMLFrameType_UNKNOWN;
+  eMathMLFrameType childFrameType = nsMathMLFrame::GetMathMLFrameTypeFor(childFrame);
   childFrame = childFrame->GetNextSibling();
   while (childFrame) {
     prevFrameType = childFrameType;
-    childFrameType = childFrame->GetType();
+    childFrameType = nsMathMLFrame::GetMathMLFrameTypeFor(childFrame);
     nscoord space = GetInterFrameSpacing(aScriptLevel,
       prevFrameType, childFrameType, &fromFrameType, &carrySpace);
     if (aChildFrame == childFrame) {
diff --git a/layout/mathml/base/src/nsMathMLContainerFrame.h b/layout/mathml/base/src/nsMathMLContainerFrame.h
index 6071eb2..468a35f 100644
--- a/layout/mathml/base/src/nsMathMLContainerFrame.h
+++ b/layout/mathml/base/src/nsMathMLContainerFrame.h
@@ -116,7 +116,6 @@ public:
   // --------------------------------------------------------------------------
   // Overloaded nsHTMLContainerFrame methods -- see documentation in nsIFrame.h
 
-  virtual nsIAtom* GetType() const;
   virtual PRBool IsFrameOfType(PRUint32 aFlags) const;
 
   NS_IMETHOD
@@ -245,14 +244,17 @@ public:
   FinalizeReflow(nsIRenderingContext& aRenderingContext,
                  nsHTMLReflowMetrics& aDesiredSize);
 
-  // helper method to facilitate getting the reflow and bounding metrics
+  // helper method to facilitate getting the reflow and bounding metrics.
+  // The argument aMathMLFrameType, when non null, will return the 'type' of
+  // the frame, which is used to determine the inter-frame spacing.
   // IMPORTANT: This function is only meant to be called in Place() methods 
   // where it is assumed that the frame's rect is still acting as place holder
   // for the frame's ascent and descent information
   static void
   GetReflowAndBoundingMetricsFor(nsIFrame*            aFrame,
                                  nsHTMLReflowMetrics& aReflowMetrics,
-                                 nsBoundingMetrics&   aBoundingMetrics);
+                                 nsBoundingMetrics&   aBoundingMetrics,
+                                 eMathMLFrameType*    aMathMLFrameType = nsnull);
 
   // helper to let the scriptstyle re-resolution pass through
   // a subtree that may contain non-MathML container frames
diff --git a/layout/mathml/base/src/nsMathMLFrame.cpp b/layout/mathml/base/src/nsMathMLFrame.cpp
index 0c35b26..80dc338 100644
--- a/layout/mathml/base/src/nsMathMLFrame.cpp
+++ b/layout/mathml/base/src/nsMathMLFrame.cpp
@@ -65,6 +65,21 @@ static NS_DEFINE_CID(kCSSStyleSheetCID, NS_CSS_STYLESHEET_CID);
 
 NS_IMPL_QUERY_INTERFACE1(nsMathMLFrame, nsIMathMLFrame)
 
+eMathMLFrameType
+nsMathMLFrame::GetMathMLFrameType()
+{
+  // see if it is an embellished operator (mapped to 'Op' in TeX)
+  if (mEmbellishData.coreFrame)
+    return GetMathMLFrameTypeFor(mEmbellishData.coreFrame);
+
+  // if it has a prescribed base, fetch the type from there
+  if (mPresentationData.baseFrame)
+    return GetMathMLFrameTypeFor(mPresentationData.baseFrame);
+
+  // everything else is treated as ordinary (mapped to 'Ord' in TeX)
+  return eMathMLFrameType_Ordinary;  
+}
+
 NS_IMETHODIMP
 nsMathMLFrame::InheritAutomaticData(nsIFrame* aParent) 
 {
@@ -155,9 +170,9 @@ nsMathMLFrame::GetEmbellishDataFrom(nsIFrame*        aFrame,
   aEmbellishData.leftSpace = 0;
   aEmbellishData.rightSpace = 0;
 
-  if (aFrame) {
+  if (aFrame && aFrame->IsFrameOfType(nsIFrame::eMathML)) {
     nsIMathMLFrame* mathMLFrame;
-    aFrame->QueryInterface(NS_GET_IID(nsIMathMLFrame), (void**)&mathMLFrame);
+    CallQueryInterface(aFrame, &mathMLFrame);
     if (mathMLFrame) {
       mathMLFrame->GetEmbellishData(aEmbellishData);
     }
@@ -179,11 +194,13 @@ nsMathMLFrame::GetPresentationDataFrom(nsIFrame*           aFrame,
 
   nsIFrame* frame = aFrame;
   while (frame) {
-    nsIMathMLFrame* mathMLFrame;
-    frame->QueryInterface(NS_GET_IID(nsIMathMLFrame), (void**)&mathMLFrame);
-    if (mathMLFrame) {
-      mathMLFrame->GetPresentationData(aPresentationData);
-      break;
+    if (frame->IsFrameOfType(nsIFrame::eMathML)) {
+      nsIMathMLFrame* mathMLFrame;
+      CallQueryInterface(frame, &mathMLFrame);
+      if (mathMLFrame) {
+        mathMLFrame->GetPresentationData(aPresentationData);
+        break;
+      }
     }
     // stop if the caller doesn't want to lookup beyond the frame
     if (!aClimbTree) {
@@ -232,7 +249,7 @@ nsMathMLFrame::GetAttribute(nsIContent* aContent,
 
   if (mstyleParent) {
     nsIMathMLFrame* mathMLFrame;
-    mstyleParent->QueryInterface(NS_GET_IID(nsIMathMLFrame), (void**)&mathMLFrame);
+    CallQueryInterface(mstyleParent, &mathMLFrame);
     if (mathMLFrame) {
       mathMLFrame->GetPresentationData(mstyleParentData);
     }
diff --git a/layout/mathml/base/src/nsMathMLFrame.h b/layout/mathml/base/src/nsMathMLFrame.h
index 7259e34..7230b33 100644
--- a/layout/mathml/base/src/nsMathMLFrame.h
+++ b/layout/mathml/base/src/nsMathMLFrame.h
@@ -95,6 +95,8 @@ public:
     return NS_OK;
   }
 
+  virtual eMathMLFrameType GetMathMLFrameType();
+
   NS_IMETHOD
   Stretch(nsIRenderingContext& aRenderingContext,
           nsStretchDirection   aStretchDirection,
@@ -228,6 +230,18 @@ public:
                        nsString&   aString,
                        nsCSSValue& aCSSValue);
 
+  static eMathMLFrameType
+  GetMathMLFrameTypeFor(nsIFrame* aFrame)
+  {
+    if (aFrame->IsFrameOfType(nsIFrame::eMathML)) {
+      nsIMathMLFrame* mathMLFrame;
+      CallQueryInterface(aFrame, &mathMLFrame);
+      if (mathMLFrame)
+        return mathMLFrame->GetMathMLFrameType();
+    }
+    return eMathMLFrameType_UNKNOWN;
+  }
+
   // estimate of the italic correction
   static void
   GetItalicCorrection(nsBoundingMetrics& aBoundingMetrics,
diff --git a/layout/mathml/base/src/nsMathMLTokenFrame.cpp b/layout/mathml/base/src/nsMathMLTokenFrame.cpp
index 212b784..3983722 100644
--- a/layout/mathml/base/src/nsMathMLTokenFrame.cpp
+++ b/layout/mathml/base/src/nsMathMLTokenFrame.cpp
@@ -62,20 +62,20 @@ nsMathMLTokenFrame::~nsMathMLTokenFrame()
 {
 }
 
-nsIAtom*
-nsMathMLTokenFrame::GetType() const
+eMathMLFrameType
+nsMathMLTokenFrame::GetMathMLFrameType()
 {
   // treat everything other than <mi> as ordinary...
   if (mContent->Tag() != nsMathMLAtoms::mi_) {
-    return nsMathMLAtoms::ordinaryMathMLFrame;
+    return eMathMLFrameType_Ordinary;
   }
 
   // for <mi>, distinguish between italic and upright...
   // treat invariant the same as italic to inherit its inter-space properties
   return mContent->AttrValueIs(kNameSpaceID_None, nsMathMLAtoms::MOZfontstyle,
                                nsMathMLAtoms::normal, eCaseMatters)
-    ? nsMathMLAtoms::uprightIdentifierMathMLFrame
-    : nsMathMLAtoms::italicIdentifierMathMLFrame;
+    ? eMathMLFrameType_UprightIdentifier
+    : eMathMLFrameType_ItalicIdentifier;
 }
 
 static void
diff --git a/layout/mathml/base/src/nsMathMLTokenFrame.h b/layout/mathml/base/src/nsMathMLTokenFrame.h
index fb282d7..fdbc360 100644
--- a/layout/mathml/base/src/nsMathMLTokenFrame.h
+++ b/layout/mathml/base/src/nsMathMLTokenFrame.h
@@ -49,7 +49,7 @@ class nsMathMLTokenFrame : public nsMathMLContainerFrame {
 public:
   friend nsIFrame* NS_NewMathMLTokenFrame(nsIPresShell* aPresShell, nsStyleContext* aContext);
 
-  virtual nsIAtom* GetType() const;
+  virtual eMathMLFrameType GetMathMLFrameType();
 
   NS_IMETHOD
   Init(nsIContent*      aContent,
diff --git a/layout/mathml/base/src/nsMathMLmfracFrame.cpp b/layout/mathml/base/src/nsMathMLmfracFrame.cpp
index b0ff8b8..791fd2d 100644
--- a/layout/mathml/base/src/nsMathMLmfracFrame.cpp
+++ b/layout/mathml/base/src/nsMathMLmfracFrame.cpp
@@ -115,11 +115,11 @@ nsMathMLmfracFrame::Init(nsIContent*      aContent,
   return rv;
 }
 
-nsIAtom*
-nsMathMLmfracFrame::GetType() const
+eMathMLFrameType
+nsMathMLmfracFrame::GetMathMLFrameType()
 {
   // frac is """"inner"""" in TeXBook, Appendix G, rule 15e. See also page 170.
-  return nsMathMLAtoms::innerMathMLFrame;
+  return eMathMLFrameType_Inner;
 }
 
 NS_IMETHODIMP
diff --git a/layout/mathml/base/src/nsMathMLmfracFrame.h b/layout/mathml/base/src/nsMathMLmfracFrame.h
index 5afb013..a468b67 100644
--- a/layout/mathml/base/src/nsMathMLmfracFrame.h
+++ b/layout/mathml/base/src/nsMathMLmfracFrame.h
@@ -93,7 +93,7 @@ public:
   virtual nsStyleContext*
   GetAdditionalStyleContext(PRInt32 aIndex) const;
 
-  virtual nsIAtom* GetType() const;
+  virtual eMathMLFrameType GetMathMLFrameType();
 
   NS_IMETHOD
   AttributeChanged(PRInt32         aNameSpaceID,
diff --git a/layout/mathml/base/src/nsMathMLmoFrame.cpp b/layout/mathml/base/src/nsMathMLmoFrame.cpp
index f9190b0..6154023 100644
--- a/layout/mathml/base/src/nsMathMLmoFrame.cpp
+++ b/layout/mathml/base/src/nsMathMLmoFrame.cpp
@@ -73,12 +73,12 @@ static const PRUnichar kApplyFunction  = PRUnichar(0x2061);
 static const PRUnichar kInvisibleTimes = PRUnichar(0x2062);
 static const PRUnichar kNullCh         = PRUnichar('\0');
 
-nsIAtom*
-nsMathMLmoFrame::GetType() const
+eMathMLFrameType
+nsMathMLmoFrame::GetMathMLFrameType()
 {
   return NS_MATHML_OPERATOR_IS_INVISIBLE(mFlags)
-    ? nsMathMLAtoms::operatorInvisibleMathMLFrame
-    : nsMathMLAtoms::operatorOrdinaryMathMLFrame;
+    ? eMathMLFrameType_OperatorInvisible
+    : eMathMLFrameType_OperatorOrdinary;
 }
 
 // since a mouse click implies selection, we cannot just rely on the
diff --git a/layout/mathml/base/src/nsMathMLmoFrame.h b/layout/mathml/base/src/nsMathMLmoFrame.h
index 025bc5e..9b90a1f 100644
--- a/layout/mathml/base/src/nsMathMLmoFrame.h
+++ b/layout/mathml/base/src/nsMathMLmoFrame.h
@@ -51,7 +51,7 @@ class nsMathMLmoFrame : public nsMathMLTokenFrame {
 public:
   friend nsIFrame* NS_NewMathMLmoFrame(nsIPresShell* aPresShell, nsStyleContext* aContext);
 
-  virtual nsIAtom* GetType() const;
+  virtual eMathMLFrameType GetMathMLFrameType();
 
   virtual void
   SetAdditionalStyleContext(PRInt32          aIndex, """
3d28c6e38cb127fafa45c32ef71538fbe5e3ac0e,113978,348049,bzbarsky%mit.edu,"Use the right insertion frame for insertion points.  Bug 348049, r+sr=roc
",1155605872,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index d83b5f3..cd6ff66 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -11535,14 +11535,9 @@ nsCSSFrameConstructor::GetInsertionPoint(nsIFrame*     aParentFrame,
     }
     nsIFrame* insertionPoint = mPresShell->GetPrimaryFrameFor(insertionElement);
     if (insertionPoint) {
-      // If the insertion point is a scrollable, then walk ``through''
-      // it to get the scrolled frame.
-      nsIScrollableFrame* scroll = nsnull;
-      CallQueryInterface(insertionPoint, &scroll);
-      if (scroll)
-        insertionPoint = scroll->GetScrolledFrame();
-
-      if (insertionPoint != aParentFrame) 
+      // Use the content insertion frame of the insertion point.
+      insertionPoint = insertionPoint->GetContentInsertionFrame();
+      if (insertionPoint && insertionPoint != aParentFrame) 
         GetInsertionPoint(insertionPoint, aChildContent, aInsertionPoint, aMultiple);
     }
     else {"""
d2b7567aa3701f96831630f2815b81078007e55d,114004,348532,igor.bukanov%gmail.com,"Bug 348532: Limit the length of errorInstance.stack. r=brendan
",1155585690,"""diff --git a/js/src/jsexn.c b/js/src/jsexn.c
index 2310da6..cea84bf 100644
--- a/js/src/jsexn.c
+++ b/js/src/jsexn.c
@@ -361,10 +361,15 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,
     stacklen = stackmax = 0;
     ok = JS_TRUE;
 
+/* Limit the stackbuf length to a reasonable value to avoid overflow checks. */
+#define STACK_LENGTH_LIMIT JS_BIT(20)
+
 #define APPEND_CHAR_TO_STACK(c)                                               \
     JS_BEGIN_MACRO                                                            \
         if (stacklen == stackmax) {                                           \
             void *ptr_;                                                       \
+            if (stackmax >= STACK_LENGTH_LIMIT)                               \
+                goto done;                                                    \
             stackmax = stackmax ? 2 * stackmax : 64;                          \
             ptr_ = JS_realloc(cx, stackbuf, (stackmax+1) * sizeof(jschar));   \
             if (!ptr_) {                                                      \
@@ -380,8 +385,12 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,
     JS_BEGIN_MACRO                                                            \
         JSString *str_ = str;                                                 \
         size_t length_ = JSSTRING_LENGTH(str_);                               \
-        if (stacklen + length_ > stackmax) {                                  \
+        if (length_ > stackmax - stacklen) {                                  \
             void *ptr_;                                                       \
+            if (stackmax >= STACK_LENGTH_LIMIT ||                             \
+                length_ >= STACK_LENGTH_LIMIT - stacklen) {                   \
+                goto done;                                                    \
+            }                                                                 \
             stackmax = JS_BIT(JS_CeilingLog2(stacklen + length_));            \
             ptr_ = JS_realloc(cx, stackbuf, (stackmax+1) * sizeof(jschar));   \
             if (!ptr_) {                                                      \
@@ -471,6 +480,7 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,
 
 #undef APPEND_CHAR_TO_STACK
 #undef APPEND_STRING_TO_STACK
+#undef STACK_LENGTH_LIMIT
 
 done:
     if (ok)"""
4d7051c30f2ab1dbb9a9292daf8287db2f51f9a9,114045,348532,igor.bukanov%gmail.com,"Bug 348532: taking out the previous commit.
",1155539952,"""diff --git a/js/src/jsexn.c b/js/src/jsexn.c
index 0407d69..2310da6 100644
--- a/js/src/jsexn.c
+++ b/js/src/jsexn.c
@@ -361,18 +361,11 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,
     stacklen = stackmax = 0;
     ok = JS_TRUE;
 
-/* Limit the stackbuf length to a reasonable value to avoid overflow checks. */
-#define STACK_LENGTH_LIMIT JS_BIT(20)
-
 #define APPEND_CHAR_TO_STACK(c)                                               \
     JS_BEGIN_MACRO                                                            \
         if (stacklen == stackmax) {                                           \
             void *ptr_;                                                       \
-            if (stackmax >= STACK_LENGTH_LIMIT)                               \
-                goto done;                                                    \
             stackmax = stackmax ? 2 * stackmax : 64;                          \
-            if (stackmax >= STACK_LENGTH_LIMIT)                               \
-                goto done;                                                    \
             ptr_ = JS_realloc(cx, stackbuf, (stackmax+1) * sizeof(jschar));   \
             if (!ptr_) {                                                      \
                 ok = JS_FALSE;                                                \
@@ -387,15 +380,9 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,
     JS_BEGIN_MACRO                                                            \
         JSString *str_ = str;                                                 \
         size_t length_ = JSSTRING_LENGTH(str_);                               \
-        if (length_ > stackmax - stacklen) {                                  \
-            if (stackmax >= STACK_LENGTH_LIMIT ||                             \
-                length_ >= STACK_LENGTH_LIMIT) {                              \
-                goto done;                                                    \
-            }                                                                 \
+        if (stacklen + length_ > stackmax) {                                  \
             void *ptr_;                                                       \
             stackmax = JS_BIT(JS_CeilingLog2(stacklen + length_));            \
-            if (stackmax >= STACK_LENGTH_LIMIT)                               \
-                goto done;                                                    \
             ptr_ = JS_realloc(cx, stackbuf, (stackmax+1) * sizeof(jschar));   \
             if (!ptr_) {                                                      \
                 ok = JS_FALSE;                                                \
@@ -484,7 +471,6 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,
 
 #undef APPEND_CHAR_TO_STACK
 #undef APPEND_STRING_TO_STACK
-#undef STACK_LENGTH_LIMIT
 
 done:
     if (ok)"""
68fb0bc6e152271ff904dc0c1daa0069886a4161,114046,348532,igor.bukanov%gmail.com,"Bug 348532: Limit the length of errorInstance.stack. r=brendan
",1155534194,"""diff --git a/js/src/jsexn.c b/js/src/jsexn.c
index 2310da6..0407d69 100644
--- a/js/src/jsexn.c
+++ b/js/src/jsexn.c
@@ -361,11 +361,18 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,
     stacklen = stackmax = 0;
     ok = JS_TRUE;
 
+/* Limit the stackbuf length to a reasonable value to avoid overflow checks. */
+#define STACK_LENGTH_LIMIT JS_BIT(20)
+
 #define APPEND_CHAR_TO_STACK(c)                                               \
     JS_BEGIN_MACRO                                                            \
         if (stacklen == stackmax) {                                           \
             void *ptr_;                                                       \
+            if (stackmax >= STACK_LENGTH_LIMIT)                               \
+                goto done;                                                    \
             stackmax = stackmax ? 2 * stackmax : 64;                          \
+            if (stackmax >= STACK_LENGTH_LIMIT)                               \
+                goto done;                                                    \
             ptr_ = JS_realloc(cx, stackbuf, (stackmax+1) * sizeof(jschar));   \
             if (!ptr_) {                                                      \
                 ok = JS_FALSE;                                                \
@@ -380,9 +387,15 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,
     JS_BEGIN_MACRO                                                            \
         JSString *str_ = str;                                                 \
         size_t length_ = JSSTRING_LENGTH(str_);                               \
-        if (stacklen + length_ > stackmax) {                                  \
+        if (length_ > stackmax - stacklen) {                                  \
+            if (stackmax >= STACK_LENGTH_LIMIT ||                             \
+                length_ >= STACK_LENGTH_LIMIT) {                              \
+                goto done;                                                    \
+            }                                                                 \
             void *ptr_;                                                       \
             stackmax = JS_BIT(JS_CeilingLog2(stacklen + length_));            \
+            if (stackmax >= STACK_LENGTH_LIMIT)                               \
+                goto done;                                                    \
             ptr_ = JS_realloc(cx, stackbuf, (stackmax+1) * sizeof(jschar));   \
             if (!ptr_) {                                                      \
                 ok = JS_FALSE;                                                \
@@ -471,6 +484,7 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,
 
 #undef APPEND_CHAR_TO_STACK
 #undef APPEND_STRING_TO_STACK
+#undef STACK_LENGTH_LIMIT
 
 done:
     if (ok)"""
4ceae5b9b2b4c07621c80c9c47e1197049bdc5a5,114056,348511,peterv%propagandism.org,"Fix for bug 348511. r/sr=bz.
",1155499803,"""diff --git a/content/xslt/src/xslt/txMozillaXSLTProcessor.cpp b/content/xslt/src/xslt/txMozillaXSLTProcessor.cpp
index bcaa929..b71bb4e 100644
--- a/content/xslt/src/xslt/txMozillaXSLTProcessor.cpp
+++ b/content/xslt/src/xslt/txMozillaXSLTProcessor.cpp
@@ -891,7 +891,8 @@ txMozillaXSLTProcessor::SetParameter(const nsAString & aNamespaceURI,
 
                 if (NS_FAILED(rv)) {
                     while (i < count) {
-                        NS_RELEASE(values[i++]);
+                        NS_RELEASE(values[i]);
+                        ++i;
                     }
                     nsMemory::Free(array);
 
@@ -1435,7 +1436,8 @@ txVariable::Convert(nsIVariant *aValue, txAExprResult** aResult)
                     txXPathNativeNode::createXPathNode(node));
                 if (!xpathNode) {
                     while (i < count) {
-                        NS_RELEASE(values[i++]);
+                        NS_RELEASE(values[i]);
+                        ++i;
                     }
                     nsMemory::Free(array);
 """
0287ac78325b60504ceb7014dfb136cd87e33cc7,114091,347355,rbs%maths.uq.edu.au,"'Pseudo' frames from <mtd> and <mtr>outside <mtable> were not added to the flow, and thus were not destroyed at tear down, b=347355, r+sr=bzbarsky
",1155368789,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index e1243b3..4daa386 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -7131,8 +7131,6 @@ nsCSSFrameConstructor::ConstructMathMLFrame(nsFrameConstructorState& aState,
   PRBool    isReplaced = PR_FALSE;
   PRBool    ignoreInterTagWhitespace = PR_TRUE;
 
-  // XXXbz somewhere here we should process pseudo frames if !aHasPseudoParent
-
   NS_ASSERTION(aTag != nsnull, """"null MathML tag"""");
   if (aTag == nsnull)
     return NS_OK;
@@ -7143,6 +7141,17 @@ nsCSSFrameConstructor::ConstructMathMLFrame(nsFrameConstructorState& aState,
   // Make sure to keep IsSpecialContent in synch with this code
   const nsStyleDisplay* disp = aStyleContext->GetStyleDisplay();
 
+  // Leverage IsSpecialContent to check if one of the |if aTag| below will
+  // surely match (knowing that aNameSpaceID == kNameSpaceID_MathML here)
+  if (IsSpecialContent(aContent, aTag, aNameSpaceID, aStyleContext) ||
+      (aTag == nsMathMLAtoms::mtable_ && 
+       disp->mDisplay == NS_STYLE_DISPLAY_TABLE)) {
+    // process pending pseudo frames
+    if (!aHasPseudoParent && !aState.mPseudoFrames.IsEmpty()) {
+      ProcessPseudoFrames(aState, aFrameItems); 
+    }
+  }
+
   if (aTag == nsMathMLAtoms::mi_ ||
       aTag == nsMathMLAtoms::mn_ ||
       aTag == nsMathMLAtoms::ms_ ||
diff --git a/layout/mathml/content/src/mathml.css b/layout/mathml/content/src/mathml.css
index 9fdaf2c..a3c0e17 100644
--- a/layout/mathml/content/src/mathml.css
+++ b/layout/mathml/content/src/mathml.css
@@ -298,6 +298,11 @@ mtd {
   white-space: nowrap;
 }
 
+// Don't support mtr without mtable, nor mtd without mtr
+:not(mtable) > mtr,
+:not(mtr) > mtd {
+  display: none !important;
+}
 
 /***********************/
 /* -- mtd: columnalign */"""
0ac7acda8d9ee9d3e86e1a4e93c079175b5eabce,114179,348062,mrbkap%gmail.com,"Checking in some debug code to verify sanity. bug 348062, r+sr=sicking
",1155236317,"""diff --git a/content/base/src/nsContentList.cpp b/content/base/src/nsContentList.cpp
index b82e0e4..187b97e 100644
--- a/content/base/src/nsContentList.cpp
+++ b/content/base/src/nsContentList.cpp
@@ -1,4 +1,5 @@
 /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=2 sw=2 et tw=78: */
 /* ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
  *
@@ -58,6 +59,15 @@
 
 #include """"pldhash.h""""
 
+#ifdef DEBUG_CONTENT_LIST
+#include """"nsIContentIterator.h""""
+nsresult
+NS_NewPreContentIterator(nsIContentIterator** aInstancePtrResult);
+#define ASSERT_IN_SYNC AssertInSync()
+#else
+#define ASSERT_IN_SYNC
+#endif
+
 
 static nsContentList *gCachedContentList;
 
@@ -425,6 +435,7 @@ nsContentList::Item(PRUint32 aIndex, PRBool aDoFlush)
   if (mState != LIST_UP_TO_DATE)
     PopulateSelf(aIndex+1);
 
+  ASSERT_IN_SYNC;
   NS_ASSERTION(!mRootNode || mState != LIST_DIRTY,
                """"PopulateSelf left the list in a dirty (useless) state!"""");
 
@@ -608,6 +619,7 @@ nsContentList::ContentAppended(nsIDocument *aDocument, nsIContent* aContainer,
         }
       }
  
+      ASSERT_IN_SYNC;
       return;
     }
 
@@ -628,6 +640,8 @@ nsContentList::ContentAppended(nsIDocument *aDocument, nsIContent* aContainer,
       PRUint32 limit = PRUint32(-1);
       PopulateWith(aContainer->GetChildAt(i), limit);
     }
+
+    ASSERT_IN_SYNC;
   }
 }
 
@@ -646,6 +660,8 @@ nsContentList::ContentInserted(nsIDocument *aDocument,
       MatchSelf(aChild)) {
     mState = LIST_DIRTY;
   }
+
+  ASSERT_IN_SYNC;
 }
  
 void
@@ -663,6 +679,8 @@ nsContentList::ContentRemoved(nsIDocument *aDocument,
       MatchSelf(aChild)) {
     mState = LIST_DIRTY;
   }
+
+  ASSERT_IN_SYNC;
 }
 
 PRBool
@@ -803,6 +821,8 @@ nsContentList::PopulateSelf(PRUint32 aNeededLength)
     return;
   }
 
+  ASSERT_IN_SYNC;
+
   if (mState == LIST_DIRTY) {
     Reset();
   }
@@ -829,6 +849,8 @@ nsContentList::PopulateSelf(PRUint32 aNeededLength)
     mState = LIST_UP_TO_DATE;
   else
     mState = LIST_LAZY;
+
+  ASSERT_IN_SYNC;
 }
 
 void
@@ -867,6 +889,7 @@ nsContentList::BringSelfUpToDate(PRBool aDoFlush)
   if (mState != LIST_UP_TO_DATE)
     PopulateSelf(PRUint32(-1));
     
+  ASSERT_IN_SYNC;
   NS_ASSERTION(!mRootNode || mState == LIST_UP_TO_DATE,
                """"PopulateSelf dod not bring content list up to date!"""");
 }
@@ -917,3 +940,61 @@ nsContentList::IsContentAnonymous(nsIContent* aContent)
   return NS_STATIC_CAST(nsIContent*, mRootNode)->GetBindingParent() !=
          aContent->GetBindingParent();
 }
+
+#ifdef DEBUG_CONTENT_LIST
+void
+nsContentList::AssertInSync()
+{
+  if (mState == LIST_DIRTY) {
+    return;
+  }
+
+  if (!mRootNode) {
+    NS_ASSERTION(mElements.Count() == 0 && mState == LIST_DIRTY,
+                 """"Empty iterator isn't quite empty?"""");
+    return;
+  }
+
+  // XXX This code will need to change if nsContentLists can ever match
+  // elements that are outside of the document element.
+  nsIContent *root;
+  if (mRootNode->IsNodeOfType(nsINode::eDOCUMENT)) {
+    root = NS_STATIC_CAST(nsIDocument*, mRootNode)->GetRootContent();
+  }
+  else {
+    root = NS_STATIC_CAST(nsIContent*, mRootNode);
+  }
+
+  nsCOMPtr<nsIContentIterator> iter;
+  if (mDeep) {
+    NS_NewPreContentIterator(getter_AddRefs(iter));
+    iter->Init(root);
+    iter->First();
+  }
+
+  PRInt32 cnt = 0, index = 0;
+  while (PR_TRUE) {
+    if (cnt == mElements.Count() && mState == LIST_LAZY) {
+      break;
+    }
+
+    nsIContent *cur = mDeep ? iter->GetCurrentNode() :
+                              mRootNode->GetChildAt(index++);
+    if (!cur) {
+      break;
+    }
+
+    if (Match(cur)) {
+      NS_ASSERTION(cnt < mElements.Count() && mElements[cnt] == cur,
+                   """"Elements is out of sync"""");
+      ++cnt;
+    }
+
+    if (mDeep) {
+      iter->Next();
+    }
+  }
+
+  NS_ASSERTION(cnt == mElements.Count(), """"Too few elements"""");
+}
+#endif
diff --git a/content/base/src/nsContentList.h b/content/base/src/nsContentList.h
index 0599127..7a29005 100644
--- a/content/base/src/nsContentList.h
+++ b/content/base/src/nsContentList.h
@@ -349,6 +349,10 @@ protected:
    * attributes.
    */
   PRPackedBool mFuncMayDependOnAttr;
+
+#ifdef DEBUG_CONTENT_LIST
+  void AssertInSync();
+#endif
 };
 
 /**"""
646bf6ad1d386e4e295e3d5e219d9de39be95242,114489,343087,bmlk%gmx.de,"take special care when tfoot are manipulated and the cellmap changes rather drastical bug 343087 r/sr=bzbarsky
",1154718950,"""diff --git a/layout/tables/nsTableFrame.cpp b/layout/tables/nsTableFrame.cpp
index bf47ebf..d8ea98a 100644
--- a/layout/tables/nsTableFrame.cpp
+++ b/layout/tables/nsTableFrame.cpp
@@ -643,42 +643,50 @@ void nsTableFrame::AdjustRowIndices(PRInt32         aRowIndex,
   for (PRUint32 rgX = 0; rgX < numRowGroups; rgX++) {
     nsIFrame* kidFrame = (nsIFrame*)rowGroups.ElementAt(rgX);
     nsTableRowGroupFrame* rgFrame = GetRowGroupFrame(kidFrame);
-    AdjustRowIndices(rgFrame, aRowIndex, aAdjustment);
+    rgFrame->AdjustRowIndices(aRowIndex, aAdjustment);
   }
 }
 
-NS_IMETHODIMP nsTableFrame::AdjustRowIndices(nsIFrame*       aRowGroup,
-                                             PRInt32         aRowIndex,
-                                             PRInt32         anAdjustment)
-{
-  nsresult rv = NS_OK;
-  nsIFrame* rowFrame = aRowGroup->GetFirstChild(nsnull);
-  for ( ; rowFrame; rowFrame = rowFrame->GetNextSibling()) {
-    if (NS_STYLE_DISPLAY_TABLE_ROW==rowFrame->GetStyleDisplay()->mDisplay) {
-      PRInt32 index = ((nsTableRowFrame*)rowFrame)->GetRowIndex();
-      if (index >= aRowIndex)
-        ((nsTableRowFrame *)rowFrame)->SetRowIndex(index+anAdjustment);
-    }
-  }
-  return rv;
-}
 
-void nsTableFrame::ResetRowIndices(void)
+void nsTableFrame::ResetRowIndices(nsIFrame* aFirstRowGroupFrame,
+                                   nsIFrame* aLastRowGroupFrame)
 {
-  // Iterate over the row groups and adjust the row indices of all rows 
+  // Iterate over the row groups and adjust the row indices of all rows
+  // omit the rowgroups that will be inserted later
   nsAutoVoidArray rowGroups;
   PRUint32 numRowGroups;
   OrderRowGroups(rowGroups, numRowGroups, nsnull);
 
   PRInt32 rowIndex = 0;
+  nsTableRowGroupFrame* newRgFrame = nsnull;
+  nsIFrame* omitRgFrame = aFirstRowGroupFrame;
+  if (omitRgFrame) {
+    newRgFrame = GetRowGroupFrame(omitRgFrame);
+    if (omitRgFrame == aLastRowGroupFrame)
+      omitRgFrame = nsnull;
+  }
+
   for (PRUint32 rgX = 0; rgX < numRowGroups; rgX++) {
     nsIFrame* kidFrame = (nsIFrame*)rowGroups.ElementAt(rgX);
     nsTableRowGroupFrame* rgFrame = GetRowGroupFrame(kidFrame);
-    nsIFrame* rowFrame = rgFrame->GetFirstChild(nsnull);
-    for ( ; rowFrame; rowFrame = rowFrame->GetNextSibling()) {
-      if (NS_STYLE_DISPLAY_TABLE_ROW==rowFrame->GetStyleDisplay()->mDisplay) {
-        ((nsTableRowFrame *)rowFrame)->SetRowIndex(rowIndex);
-        rowIndex++;
+    if (rgFrame == newRgFrame) {
+      // omit the new rowgroup
+      if (omitRgFrame) {
+        omitRgFrame = omitRgFrame->GetNextSibling();
+        if (omitRgFrame) {
+          newRgFrame  = GetRowGroupFrame(omitRgFrame);
+          if (omitRgFrame == aLastRowGroupFrame)
+            omitRgFrame = nsnull;
+        }
+      }
+    }
+    else {
+      nsIFrame* rowFrame = rgFrame->GetFirstChild(nsnull);
+      for ( ; rowFrame; rowFrame = rowFrame->GetNextSibling()) {
+        if (NS_STYLE_DISPLAY_TABLE_ROW==rowFrame->GetStyleDisplay()->mDisplay) {
+          ((nsTableRowFrame *)rowFrame)->SetRowIndex(rowIndex);
+          rowIndex++;
+        }
       }
     }
   }
@@ -1025,6 +1033,13 @@ void nsTableFrame::InsertCells(nsVoidArray&    aCellFrames,
       // this sets the child list, updates the col cache and cell map
       CreateAnonymousColFrames(numColsToAdd, eColAnonymousCell, PR_TRUE);
     }
+    if (numColsToAdd < 0) {
+      PRInt32 numColsNotRemoved = DestroyAnonymousColFrames(-numColsToAdd);
+      // if the cell map has fewer cols than the cache, correct it
+      if (numColsNotRemoved > 0) {
+        cellMap->AddColsAtEnd(numColsNotRemoved);
+      }
+    }
     if (IsBorderCollapse()) {
       SetBCDamageArea(damageArea);
     }
@@ -1319,6 +1334,29 @@ nsTableFrame::InsertRowGroups(nsIFrame* aFirstRowGroupFrame,
             ? nsnull : GetRowGroupFrame((nsIFrame*)orderedRowGroups.ElementAt(rgIndex - 1)); 
           // create and add the cell map for the row group
           cellMap->InsertGroupCellMap(*rgFrame, priorRG);
+        
+          break;
+        }
+        else {
+          if (kidFrame == aLastRowGroupFrame) {
+            break;
+          }
+          kidFrame = kidFrame->GetNextSibling();
+        }
+      }
+    }
+    cellMap->Synchronize(this);
+    ResetRowIndices(aFirstRowGroupFrame, aLastRowGroupFrame);
+
+    //now that the cellmaps are reordered too insert the rows
+    for (PRUint32 rgIndex = 0; rgIndex < numRowGroups; rgIndex++) {
+      nsIFrame* kidFrame = aFirstRowGroupFrame;
+      while (kidFrame) {
+        nsTableRowGroupFrame* rgFrame = GetRowGroupFrame(kidFrame);
+
+        if (GetRowGroupFrame((nsIFrame*)orderedRowGroups.ElementAt(rgIndex)) == rgFrame) {
+          nsTableRowGroupFrame* priorRG = (0 == rgIndex)
+            ? nsnull : GetRowGroupFrame((nsIFrame*)orderedRowGroups.ElementAt(rgIndex - 1)); 
           // collect the new row frames in an array and add them to the table
           PRInt32 numRows = CollectRows(kidFrame, rows);
           if (numRows > 0) {
@@ -1339,9 +1377,8 @@ nsTableFrame::InsertRowGroups(nsIFrame* aFirstRowGroupFrame,
           kidFrame = kidFrame->GetNextSibling();
         }
       }
-    }
-    cellMap->Synchronize(this);
-    ResetRowIndices();
+    }    
+    
   }
 #ifdef DEBUG_TABLE_CELLMAP
   printf(""""=== insertRowGroupsAfter\n"""");
@@ -2599,6 +2636,17 @@ nsTableFrame::RemoveFrame(nsIAtom*        aListName,
       if (cellMap) {
         cellMap->RemoveGroupCellMap(rgFrame);
       }
+
+       // remove the row group frame from the sibling chain
+      mFrames.DestroyFrame(aOldFrame);
+     
+      if (cellMap) {
+        cellMap->Synchronize(this);
+        ResetRowIndices();
+        nsRect damageArea;
+        cellMap->RebuildConsideringCells(nsnull, nsnull, 0, 0, PR_FALSE, damageArea);
+      }
+
       // only remove cols that are of type eTypeAnonymous cell (they are at the end)
       PRInt32 numColsInMap = GetColCount(); // cell map's notion of num cols
       PRInt32 numColsInCache = mColFrames.Count();
@@ -2610,14 +2658,6 @@ nsTableFrame::RemoveFrame(nsIAtom*        aListName,
         }
       }
       else NS_ASSERTION(numColsInCache == numColsInMap, """"cell map has too many cols"""");
-
-      AdjustRowIndices(startRowIndex, -numRows);
-      // remove the row group frame from the sibling chain
-      mFrames.DestroyFrame(aOldFrame);
-      if (cellMap) {
-        cellMap->Synchronize(this);
-        ResetRowIndices();
-      }
       // XXX This could probably be optimized with much effort
       SetNeedStrategyInit(PR_TRUE);
       AppendDirtyReflowCommand(this);
diff --git a/layout/tables/nsTableFrame.h b/layout/tables/nsTableFrame.h
index 4f320d9..3d915cc 100644
--- a/layout/tables/nsTableFrame.h
+++ b/layout/tables/nsTableFrame.h
@@ -506,8 +506,17 @@ public:
                           PRInt32          aNumRowsToRemove,
                           PRBool           aConsiderSpans);
 
+  /** Insert multiple rowgroups into the table cellmap handling
+    * @param aFirstRowGroupFrame - first row group to be inserted all siblings
+    *                              will be appended too.
+    */
   void AppendRowGroups(nsIFrame* aFirstRowGroupFrame);
 
+  /** Insert multiple rowgroups into the table cellmap handling
+    * @param aFirstRowGroupFrame - first row group to be inserted
+    * @param aLastRowGroupFrame  - when inserting the siblings of 
+    *                              aFirstRowGroupFrame stop at this row group
+    */
   void InsertRowGroups(nsIFrame*       aFirstRowGroupFrame,
                        nsIFrame*       aLastRowGroupFrame);
 
@@ -765,20 +774,25 @@ public:
     * Only the firstInFlow has a legit cell map
     */
   virtual nsTableCellMap* GetCellMap() const;
-    
+
+  /** Iterate over the row groups and adjust the row indices of all rows 
+    * whose index is >= aRowIndex.  
+    * @param aRowIndex   - start adjusting with this index
+    * @param aAdjustment - shift the row index by this amount
+    */
   void AdjustRowIndices(PRInt32 aRowIndex,
                         PRInt32 aAdjustment);
 
-  NS_IMETHOD AdjustRowIndices(nsIFrame* aRowGroup,
-                              PRInt32   aRowIndex,
-                              PRInt32   anAdjustment);
-  /** Reset the rowindices of all rows as they might have changed due to rowgroup
-    * reordering
+  /** Reset the rowindices of all rows as they might have changed due to 
+    * rowgroup reordering, exclude new row group frames that show in the
+    * reordering but are not yet inserted into the cellmap
+    * @param aFirstRowGroupFrame - first row group to be excluded
+    * @param aLastRowGroupFrame  - last sibling of aFirstRowGroupFrame that
+    *                              should be excluded when reseting the row
+    *                              indices.
     */
-  void ResetRowIndices(void);
-
-  // Remove cell borders which aren't bordering row and/or col groups 
-  void ProcessGroupRules(nsPresContext* aPresContext);
+  void ResetRowIndices(nsIFrame* aFirstRowGroupFrame = nsnull,
+                       nsIFrame* aLastRowGroupFrame = nsnull);
 
   nsVoidArray& GetColCache();
 
diff --git a/layout/tables/nsTableRowGroupFrame.cpp b/layout/tables/nsTableRowGroupFrame.cpp
index 374f292..fd3a466 100644
--- a/layout/tables/nsTableRowGroupFrame.cpp
+++ b/layout/tables/nsTableRowGroupFrame.cpp
@@ -153,6 +153,18 @@ PRInt32 nsTableRowGroupFrame::GetStartRowIndex()
   return result;
 }
 
+void  nsTableRowGroupFrame::AdjustRowIndices(PRInt32 aRowIndex,
+                                             PRInt32 anAdjustment)
+{
+  nsIFrame* rowFrame = GetFirstChild(nsnull);
+  for ( ; rowFrame; rowFrame = rowFrame->GetNextSibling()) {
+    if (NS_STYLE_DISPLAY_TABLE_ROW==rowFrame->GetStyleDisplay()->mDisplay) {
+      PRInt32 index = ((nsTableRowFrame*)rowFrame)->GetRowIndex();
+      if (index >= aRowIndex)
+        ((nsTableRowFrame *)rowFrame)->SetRowIndex(index+anAdjustment);
+    }
+  }
+}
 nsresult
 nsTableRowGroupFrame::InitRepeatedFrame(nsPresContext*       aPresContext,
                                         nsTableRowGroupFrame* aHeaderFooterFrame)
diff --git a/layout/tables/nsTableRowGroupFrame.h b/layout/tables/nsTableRowGroupFrame.h
index d2e4a49..de19ec3 100644
--- a/layout/tables/nsTableRowGroupFrame.h
+++ b/layout/tables/nsTableRowGroupFrame.h
@@ -167,6 +167,13 @@ public:
     */
   PRInt32 GetStartRowIndex();
 
+  /** Adjust the row indices of all rows  whose index is >= aRowIndex.  
+    * @param aRowIndex   - start adjusting with this index
+    * @param aAdjustment - shift the row index by this amount
+    */
+  void AdjustRowIndices(PRInt32   aRowIndex,
+                        PRInt32   anAdjustment);
+
   /**
    * Used for header and footer row group frames that are repeated when
    * splitting a table frame."""
02c70a6b8256aeba94b40feb0d3f8eb48a9d9b61,114630,339246,bmlk%gmx.de,"fix a coding error in the patch for bug 339246    bug 343588 r/sr=bzbarsky
",1154520157,"""diff --git a/layout/tables/nsCellMap.cpp b/layout/tables/nsCellMap.cpp
index aba8724..545f8af 100644
--- a/layout/tables/nsCellMap.cpp
+++ b/layout/tables/nsCellMap.cpp
@@ -770,7 +770,7 @@ nsTableCellMap::RebuildConsideringRows(nsCellMap*      aCellMap,
   PRInt32 rowCount = 0;
   while (cellMap) {
     if (cellMap == aCellMap) {
-      cellMap->RebuildConsideringRows(*this, numOrigCols, aStartRowIndex, aRowsToInsert, aNumRowsToRemove, aDamageArea);
+      cellMap->RebuildConsideringRows(*this, aStartRowIndex, aRowsToInsert, aNumRowsToRemove, aDamageArea);
     }
     else {
       cellMap->RebuildConsideringCells(*this, numOrigCols, nsnull, -1, 0, PR_FALSE, aDamageArea);
@@ -2025,7 +2025,6 @@ void nsCellMap::ShrinkWithoutCell(nsTableCellMap&   aMap,
 
 void
 nsCellMap::RebuildConsideringRows(nsTableCellMap& aMap,
-                                  PRInt32         aNumOrigCols,
                                   PRInt32         aStartRowIndex,
                                   nsVoidArray*    aRowsToInsert,
                                   PRBool          aNumRowsToRemove,
@@ -2061,7 +2060,7 @@ nsCellMap::RebuildConsideringRows(nsTableCellMap& aMap,
   for (rowX = 0; rowX < copyEndRowIndex; rowX++) {
     nsVoidArray* row = (nsVoidArray *)origRows[rowX];
     PRInt32 numCols = row->Count();
-    for (colX = 0; colX < aNumOrigCols; colX++) {
+    for (colX = 0; colX < numCols; colX++) {
       // put in the original cell from the cell map
       CellData* data = (CellData*) row->ElementAt(colX);
       if (data && data->IsOrig()) {
diff --git a/layout/tables/nsCellMap.h b/layout/tables/nsCellMap.h
index 81b9a76..6d61081 100644
--- a/layout/tables/nsCellMap.h
+++ b/layout/tables/nsCellMap.h
@@ -416,7 +416,6 @@ protected:
                          nsRect&           aDamageArea);
 
   void RebuildConsideringRows(nsTableCellMap& aMap,
-                              PRInt32         aNumOrigCols,
                               PRInt32         aStartRowIndex,
                               nsVoidArray*    aRowsToInsert,
                               PRInt32         aNumRowsToRemove,"""
c2b31566c17416b6012f9af1558e3112d89bbf72,114631,344000,bmlk%gmx.de,"fix cellmap errors with the num of rows in the cellmap vs the num of rows in the content bug 344000 r/sr=bzbarsky
",1154519868,"""diff --git a/layout/tables/nsCellMap.cpp b/layout/tables/nsCellMap.cpp
index 6ec64c5..aba8724 100644
--- a/layout/tables/nsCellMap.cpp
+++ b/layout/tables/nsCellMap.cpp
@@ -808,7 +808,7 @@ nsTableCellMap::Dump(char* aString) const
     nsColInfo* colInfo = (nsColInfo *)mCols.ElementAt(colX);
     printf (""""%d=%d/%d """", colX, colInfo->mNumCellsOrig, colInfo->mNumCellsSpan);
   }
-  printf("""" cols in cache %d"""", mTableFrame.GetColCache().Count());
+  printf("""" cols in cache %d\n"""", mTableFrame.GetColCache().Count());
   nsCellMap* cellMap = mFirstMap;
   while (cellMap) {
     cellMap->Dump(nsnull != mBCInfo);
@@ -1253,7 +1253,7 @@ nsCellMap::InsertRows(nsTableCellMap& aMap,
                       nsRect&         aDamageArea)
 {
   PRInt32 numCols = aMap.GetColCount();
-
+  NS_ASSERTION(aFirstRowIndex >= 0, """"nsCellMap::InsertRows called with negative rowIndex"""");
   if (aFirstRowIndex > mRowCount) {
     // create (aFirstRowIndex - mRowCount) empty rows up to aFirstRowIndex
     PRInt32 numEmptyRows = aFirstRowIndex - mRowCount;
@@ -1298,6 +1298,10 @@ nsCellMap::RemoveRows(nsTableCellMap& aMap,
   PRInt32 numCols = aMap.GetColCount();
 
   if (aFirstRowIndex >= numRows) {
+    // reduce the content based row count based on the function arguments
+    // as they are known to be real rows even if the cell map did not create
+    // rows for them before.
+    mRowCount -= aNumRowsToRemove;
     return;
   }
   if (!aConsiderSpans) {
@@ -1503,6 +1507,21 @@ PRBool nsCellMap::CellsSpanInOrOut(nsTableCellMap& aMap,
                                    PRInt32         aStartColIndex, 
                                    PRInt32         aEndColIndex)
 {
+  /*
+   * this routine will watch the cells adjacent to the region or at the edge
+   * they are marked with *. The routine will verify whether they span in or
+   * are spanned out.
+   *
+   *                           startCol          endCol
+   *             r1c1   r1c2   r1c3      r1c4    r1c5    r1rc6  r1c7
+   *  startrow   r2c1   r2c2  *r2c3     *r2c4   *r2c5   *r2rc6  r2c7
+   *  endrow     r3c1   r3c2  *r3c3      r3c4    r3c5   *r3rc6  r3c7
+   *             r4c1   r4c2  *r4c3     *r4c4   *r4c5    r4rc6  r4c7
+   *             r5c1   r5c2   r5c3      r5c4    r5c5    r5rc6  r5c7  
+   */
+
+  PRInt32 numRows = mRows.Count(); // use the cellmap rows to determine the 
+                                   // current cellmap extent.
   for (PRInt32 colX = aStartColIndex; colX <= aEndColIndex; colX++) {
     CellData* cellData;
     if (aStartRowIndex > 0) {
@@ -1511,12 +1530,18 @@ PRBool nsCellMap::CellsSpanInOrOut(nsTableCellMap& aMap,
         return PR_TRUE; // there is a row span into the region
       }
     }
-    if (aEndRowIndex < mRowCount - 1) {
+    if (aEndRowIndex < numRows - 1) { // is there anything below aEndRowIndex
       cellData = GetDataAt(aMap, aEndRowIndex + 1, colX, PR_TRUE);
       if ((cellData) && (cellData->IsRowSpan())) {
         return PR_TRUE; // there is a row span out of the region
       }
     }
+    else {
+      cellData = GetDataAt(aMap, aEndRowIndex, colX, PR_TRUE);
+      if ((cellData) && (cellData->IsRowSpan()) && (mRowCount < numRows)) {
+        return PR_TRUE; // this cell might be the cause of a dead row
+      }
+    }
   }
   if (aStartColIndex > 0) {
     for (PRInt32 rowX = aStartRowIndex; rowX <= aEndRowIndex; rowX++) {
@@ -2028,8 +2053,12 @@ nsCellMap::RebuildConsideringRows(nsTableCellMap& aMap,
     Grow(aMap, numOrigRows); 
   }
 
+  // aStartRowIndex might be after all existing rows so we should limit the
+  // copy to the amount of exisiting rows
+  PRInt32 copyEndRowIndex = PR_MIN(numOrigRows, aStartRowIndex);
+
   // put back the rows before the affected ones just as before
-  for (rowX = 0; rowX < aStartRowIndex; rowX++) {
+  for (rowX = 0; rowX < copyEndRowIndex; rowX++) {
     nsVoidArray* row = (nsVoidArray *)origRows[rowX];
     PRInt32 numCols = row->Count();
     for (colX = 0; colX < aNumOrigCols; colX++) {
@@ -2063,8 +2092,7 @@ nsCellMap::RebuildConsideringRows(nsTableCellMap& aMap,
     copyStartRowIndex = aStartRowIndex + aNumRowsToRemove;
   }
   // put back the rows after the affected ones just as before
-  PRInt32 copyEndRowIndex = numOrigRows - 1;
-  for (PRInt32 copyRowX = copyStartRowIndex; copyRowX <= copyEndRowIndex; copyRowX++) {
+  for (PRInt32 copyRowX = copyStartRowIndex; copyRowX < numOrigRows; copyRowX++) {
     nsVoidArray* row = (nsVoidArray *)origRows[copyRowX];
     PRInt32 numCols = row->Count();
     for (colX = 0; colX < numCols; colX++) {
@@ -2116,8 +2144,6 @@ void nsCellMap::RebuildConsideringCells(nsTableCellMap& aMap,
   // reinitialize data members
   mRows.Clear();
   mRowCount = 0;
-  
-  Grow(aMap, numOrigRows);
 
   PRInt32 numNewCells = (aCellFrames) ? aCellFrames->Count() : 0;
   
@@ -2149,7 +2175,15 @@ void nsCellMap::RebuildConsideringCells(nsTableCellMap& aMap,
       }
     }
   }
-
+  if (aInsert && numOrigRows <= aRowIndex) { // append the new cells below the last original row
+    NS_ASSERTION (numOrigRows == aRowIndex, """"Appending cells far beyond the last row"""");
+    for (PRInt32 cellX = 0; cellX < numNewCells; cellX++) {
+      nsTableCellFrame* cell = (nsTableCellFrame*)aCellFrames->ElementAt(cellX);
+      if (cell) {
+        AppendCell(aMap, cell, aRowIndex, PR_FALSE, aDamageArea);
+      }
+    }
+  } 
   // For cell deletion, since the row is not being deleted, 
   // keep mRowCount the same as before. 
   mRowCount = PR_MAX(mRowCount, mRowCountOrig);
diff --git a/layout/tables/nsCellMap.h b/layout/tables/nsCellMap.h
index f19f74a..81b9a76 100644
--- a/layout/tables/nsCellMap.h
+++ b/layout/tables/nsCellMap.h
@@ -431,7 +431,19 @@ protected:
                                nsRect&         aDamageArea);
 
   PRBool CellsSpanOut(nsVoidArray&    aNewRows);
-
+ 
+  /** If a cell spans out of the area defined by aStartRowIndex, aEndRowIndex
+    * and aStartColIndex, aEndColIndex the cellmap changes are more severe so
+    * the corresponding routines needs to be called. This is also necessary if
+    * cells outside spans into this region.
+    * @param aMap - the whole table cellmap
+    * @aStartRowIndex       - y start index
+    * @aEndRowIndex         - y end index
+    * @param aStartColIndex - x start index
+    * @param aEndColIndex   - x end index
+    * @return               - true if a cell span crosses the border of the
+                              region
+    */
   PRBool CellsSpanInOrOut(nsTableCellMap& aMap,
                           PRInt32         aStartRowIndex, 
                           PRInt32         aEndRowIndex,
@@ -472,8 +484,10 @@ protected:
     * row spans extending beyond the table */
   nsAutoVoidArray mRows; 
 
-  /** the number of rows in the table which is <= the number of rows in the cell map
-    * due to row spans extending beyond the end of the table (dead rows) */
+  /** the number of rows in the table (content) which is not indentical to the
+    * number of rows in the cell map due to row spans extending beyond the end
+    * of thetable (dead rows) or empty tr tags 
+    */
   PRInt32 mRowCount;
 
   // the row group that corresponds to this map"""
500599454e4f928c8bc41cc7a8aa583ffb890c69,114661,343168,mrbkap%gmail.com,"Protect document.open and document.close against some potential problems. bug 343168, r+sr=bzbarsky
",1154468883,"""diff --git a/content/html/document/src/nsHTMLDocument.cpp b/content/html/document/src/nsHTMLDocument.cpp
index fdb6dc9..db35549 100644
--- a/content/html/document/src/nsHTMLDocument.cpp
+++ b/content/html/document/src/nsHTMLDocument.cpp
@@ -1915,6 +1915,19 @@ nsHTMLDocument::OpenCommon(const nsACString& aContentType, PRBool aReplace)
     return NS_ERROR_DOM_NOT_SUPPORTED_ERR;
   }
 
+  nsresult rv = NS_OK;
+
+  nsPIDOMWindow *win = GetWindow();
+  if (win) {
+    nsCOMPtr<nsIDOMElement> frameElement;
+    rv = win->GetFrameElement(getter_AddRefs(frameElement));
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    if (frameElement && !nsContentUtils::CanCallerAccess(frameElement)) {
+      return NS_ERROR_DOM_SECURITY_ERR;
+    }
+  }
+
   // If we already have a parser we ignore the document.open call.
   if (mParser) {
 
@@ -1927,8 +1940,6 @@ nsHTMLDocument::OpenCommon(const nsACString& aContentType, PRBool aReplace)
     return NS_ERROR_DOM_NOT_SUPPORTED_ERR;
   }
 
-  nsresult rv = NS_OK;
-
   // Note: We want to use GetDocumentFromContext here because this document
   // should inherit the security information of the document that's opening us,
   // (since if it's secure, then it's presumeably trusted).
@@ -2008,7 +2019,7 @@ nsHTMLDocument::OpenCommon(const nsACString& aContentType, PRBool aReplace)
 
   nsPIDOMWindow *window = GetInnerWindow();
   if (window) {
-    // Rememer the old scope in case the call to SetNewDocument changes it.
+    // Remember the old scope in case the call to SetNewDocument changes it.
     nsCOMPtr<nsIScriptGlobalObject> oldScope(do_QueryReferent(mScopeObject));
 
     rv = window->SetNewDocument(this, nsnull, PR_FALSE);
diff --git a/modules/libpref/src/init/all.js b/modules/libpref/src/init/all.js
index 83b3c94..7e30aac 100644
--- a/modules/libpref/src/init/all.js
+++ b/modules/libpref/src/init/all.js
@@ -279,7 +279,6 @@ pref(""""capability.policy.default.History.next"""", """"UniversalBrowserRead"""");
 pref(""""capability.policy.default.History.previous"""", """"UniversalBrowserRead"""");
 pref(""""capability.policy.default.History.toString"""", """"UniversalBrowserRead"""");
 
-pref(""""capability.policy.default.HTMLDocument.close.get"""", """"allAccess"""");
 pref(""""capability.policy.default.HTMLDocument.open.get"""", """"allAccess"""");
 
 pref(""""capability.policy.default.Location.hash.set"""", """"allAccess"""");"""
215aa44edfcf82cdc866908cd8f0f3f419f8b390,114864,344557,mats.palmgren%bredband.net,"Don't make a frame on the overflow line list a sibling to a frame on the principal line list. b=344557 r+sr=roc
",1154165915,"""diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
index d1accbc..c37becd 100644
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -5964,9 +5964,18 @@ found_frame:;
           // We have advanced to the next *normal* line but the next-in-flow
           // is not there - force a switch to the overflow line list.
           line = line_end;
-          prevSibling = nsnull;
         }
+
+        PRBool wasSearchingOverflowList = searchingOverflowList;
         TryAllLines(&line, &line_end, &searchingOverflowList);
+        if (NS_UNLIKELY(searchingOverflowList && !wasSearchingOverflowList &&
+                        prevSibling)) {
+          // We switched to the overflow line list and we have a prev sibling
+          // (in the main list), in this case we don't want to pick up any
+          // sibling list from the deceased frames (bug 344557).
+          prevSibling->SetNextSibling(nsnull);
+          prevSibling = nsnull;
+        }
 #ifdef NOISY_REMOVE_FRAME
         printf(""""DoRemoveFrame: now on %s line=%p prevSibling=%p\n"""",
                searchingOverflowList?""""overflow"""":""""normal"""", line.get(),"""
9169d23f50e288be3d93acbd89141951b52ddb57,115817,344085,neil%parkwaycc.co.uk,"Store the tree view as a member rather than a property b=344085 r+sr=roc
",1154116635,"""diff --git a/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp b/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
index a94093d..0281be3 100644
--- a/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
+++ b/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp
@@ -374,11 +374,8 @@ nsTreeBodyFrame::EnsureView()
     EnsureBoxObject();
     nsCOMPtr<nsIBoxObject> box = do_QueryInterface(mTreeBoxObject);
     if (box) {
-      nsCOMPtr<nsISupports> suppView;
-      box->GetPropertyAsSupports(NS_LITERAL_STRING(""""view"""").get(),
-                                 getter_AddRefs(suppView));
-      nsCOMPtr<nsITreeView> treeView(do_QueryInterface(suppView));
-
+      nsCOMPtr<nsITreeView> treeView;
+      mTreeBoxObject->GetView(getter_AddRefs(treeView));
       if (treeView) {
         nsXPIDLString rowStr;
         box->GetProperty(NS_LITERAL_STRING(""""topRow"""").get(),
@@ -399,35 +396,6 @@ nsTreeBodyFrame::EnsureView()
         box->RemoveProperty(NS_LITERAL_STRING(""""topRow"""").get());
       }
     }
-
-    if (!mView) {
-      // If we don't have a box object yet, or no view was set on it,
-      // look for a XULTreeBuilder or create a content view.
-      
-      nsCOMPtr<nsIDOMXULElement> xulele = do_QueryInterface(mContent->GetParent());
-      if (xulele) {
-        nsCOMPtr<nsITreeView> view;
-
-        // See if there is a XUL tree builder associated with
-        // the parent element.
-        nsCOMPtr<nsIXULTemplateBuilder> builder;
-        xulele->GetBuilder(getter_AddRefs(builder));
-        if (builder)
-          view = do_QueryInterface(builder);
-
-        if (!view) {
-          // No tree builder, create a tree content view.
-          nsCOMPtr<nsITreeContentView> contentView;
-          NS_NewTreeContentView(getter_AddRefs(contentView));
-          if (contentView)
-            view = do_QueryInterface(contentView);
-        }
-
-        // Hook up the view.
-        if (view)
-          SetView(view);
-      }
-    }
   }
 }
 
@@ -495,9 +463,6 @@ NS_IMETHODIMP nsTreeBodyFrame::SetView(nsITreeView * aView)
 {
   // First clear out the old view.
   EnsureBoxObject();
-  nsCOMPtr<nsIBoxObject> box = do_QueryInterface(mTreeBoxObject);
-  
-  NS_NAMED_LITERAL_STRING(view, """"view"""");
   
   if (mView) {
     nsCOMPtr<nsITreeSelection> sel;
@@ -505,9 +470,6 @@ NS_IMETHODIMP nsTreeBodyFrame::SetView(nsITreeView * aView)
     if (sel)
       sel->SetTree(nsnull);
     mView->SetTree(nsnull);
-    mView = nsnull;
-    if (box)
-      box->RemoveProperty(view.get());
 
     // Only reset the top row index and delete the columns if we had an old non-null view.
     mTopRowIndex = 0;
@@ -542,9 +504,6 @@ NS_IMETHODIMP nsTreeBodyFrame::SetView(nsITreeView * aView)
     mView->SetTree(mTreeBoxObject);
     mView->GetRowCount(&mRowCount);
  
-    if (box)
-      box->SetPropertyAsSupports(view.get(), mView);
-
     ScrollParts parts = GetScrollParts();
     // The scrollbar will need to be updated.
     InvalidateScrollbars(parts);
diff --git a/layout/xul/base/src/tree/src/nsTreeBoxObject.cpp b/layout/xul/base/src/tree/src/nsTreeBoxObject.cpp
index 4f26547..43e84c8 100644
--- a/layout/xul/base/src/tree/src/nsTreeBoxObject.cpp
+++ b/layout/xul/base/src/tree/src/nsTreeBoxObject.cpp
@@ -40,6 +40,9 @@
 #include """"nsCOMPtr.h""""
 #include """"nsPresContext.h""""
 #include """"nsIPresShell.h""""
+#include """"nsIDOMXULElement.h""""
+#include """"nsIXULTemplateBuilder.h""""
+#include """"nsTreeContentView.h""""
 #include """"nsITreeView.h""""
 #include """"nsITreeSelection.h""""
 #include """"nsBoxObject.h""""
@@ -62,15 +65,13 @@ public:
 
   nsITreeBoxObject* GetTreeBody();
 
-  // Override SetPropertyAsSupports for security check
-  NS_IMETHOD SetPropertyAsSupports(const PRUnichar* aPropertyName, nsISupports* aValue);
-
   //NS_PIBOXOBJECT interfaces
   virtual void Clear();
   virtual void ClearCachedValues();
 
 protected:
   nsITreeBoxObject* mTreeBody;
+  nsCOMPtr<nsITreeView> mView;
 };
 
 /* Implementation file */
@@ -83,19 +84,14 @@ nsTreeBoxObject::Clear()
   ClearCachedValues();
 
   // Drop the view's ref to us.
-  NS_NAMED_LITERAL_STRING(viewString, """"view"""");
-  nsCOMPtr<nsISupports> suppView;
-  GetPropertyAsSupports(viewString.get(), getter_AddRefs(suppView));
-  nsCOMPtr<nsITreeView> treeView(do_QueryInterface(suppView));
-  if (treeView) {
+  if (mView) {
     nsCOMPtr<nsITreeSelection> sel;
-    treeView->GetSelection(getter_AddRefs(sel));
+    mView->GetSelection(getter_AddRefs(sel));
     if (sel)
       sel->SetTree(nsnull);
-    treeView->SetTree(nsnull); // Break the circular ref between the view and us.
+    mView->SetTree(nsnull); // Break the circular ref between the view and us.
   }
-
-  SetPropertyAsSupports(viewString.get(), nsnull);
+  mView = nsnull;
 
   nsBoxObject::Clear();
 }
@@ -165,9 +161,22 @@ nsTreeBoxObject::GetTreeBody()
 
 NS_IMETHODIMP nsTreeBoxObject::GetView(nsITreeView * *aView)
 {
-  nsITreeBoxObject* body = GetTreeBody();
-  if (body)
-    return body->GetView(aView);
+  if (!mView && GetTreeBody()) {
+    nsCOMPtr<nsIDOMXULElement> xulele = do_QueryInterface(mContent);
+    if (xulele) {
+      // See if there is a XUL tree builder associated with the element
+      nsCOMPtr<nsIXULTemplateBuilder> builder;
+      xulele->GetBuilder(getter_AddRefs(builder));
+      if (builder)
+        mView = do_QueryInterface(builder);
+      else // No tree builder, create a tree content view.
+        NS_NewTreeContentView(getter_AddRefs(mView));
+      NS_ENSURE_TRUE(mView, NS_ERROR_UNEXPECTED);
+
+      mTreeBody->SetView(mView);
+    }
+  }
+  NS_IF_ADDREF(*aView = mView);
   return NS_OK;
 }
 
@@ -185,40 +194,15 @@ CanTrustView(nsISupports* aValue)
   return PR_TRUE;
 }
 
-NS_IMETHODIMP
-nsTreeBoxObject::SetPropertyAsSupports(const PRUnichar* aPropertyName, nsISupports* aValue)
-{
-  NS_ENSURE_ARG(aPropertyName);
-  
-  if (nsDependentString(aPropertyName).EqualsLiteral(""""view"""") &&
-      !CanTrustView(aValue))
-    return NS_ERROR_DOM_SECURITY_ERR;
-
-  return nsBoxObject::SetPropertyAsSupports(aPropertyName, aValue);
-}
-
 NS_IMETHODIMP nsTreeBoxObject::SetView(nsITreeView * aView)
 {
   if (!CanTrustView(aView))
     return NS_ERROR_DOM_SECURITY_ERR;
   
+  mView = aView;
   nsITreeBoxObject* body = GetTreeBody();
-  if (body) {
+  if (body)
     body->SetView(aView);
-  
-    // only return if the body frame was able to store the view,
-    // else we need to cache the property below
-    nsCOMPtr<nsITreeView> view;
-    body->GetView(getter_AddRefs(view));
-    if (view)
-      return NS_OK;
-  }
-  
-  nsCOMPtr<nsISupports> suppView(do_QueryInterface(aView));
-  if (suppView)
-    SetPropertyAsSupports(NS_LITERAL_STRING(""""view"""").get(), suppView);
-  else
-    RemoveProperty(NS_LITERAL_STRING(""""view"""").get());
 
   return NS_OK;
 }
diff --git a/layout/xul/base/src/tree/src/nsTreeContentView.cpp b/layout/xul/base/src/tree/src/nsTreeContentView.cpp
index f100191..975ef21 100644
--- a/layout/xul/base/src/tree/src/nsTreeContentView.cpp
+++ b/layout/xul/base/src/tree/src/nsTreeContentView.cpp
@@ -150,7 +150,7 @@ nsTreeContentView::~nsTreeContentView(void)
 }
 
 nsresult
-NS_NewTreeContentView(nsITreeContentView** aResult)
+NS_NewTreeContentView(nsITreeView** aResult)
 {
   *aResult = new nsTreeContentView;
   if (! *aResult)
diff --git a/layout/xul/base/src/tree/src/nsTreeContentView.h b/layout/xul/base/src/tree/src/nsTreeContentView.h
index 76b817e..90411a8 100644
--- a/layout/xul/base/src/tree/src/nsTreeContentView.h
+++ b/layout/xul/base/src/tree/src/nsTreeContentView.h
@@ -48,7 +48,7 @@
 #include """"nsITreeContentView.h""""
 #include """"nsITreeSelection.h""""
 
-nsresult NS_NewTreeContentView(nsITreeContentView** aResult);
+nsresult NS_NewTreeContentView(nsITreeView** aResult);
 
 class nsTreeContentView : public nsINativeTreeView,
                           public nsITreeContentView,
@@ -59,8 +59,6 @@ class nsTreeContentView : public nsINativeTreeView,
 
     ~nsTreeContentView(void);
 
-    friend nsresult NS_NewTreeContentView(nsITreeContentView** aResult);
-
     NS_DECL_ISUPPORTS
 
     NS_DECL_NSITREEVIEW"""
76f0ad3201c618ddb7c9d81a8463aeedb6ae7f62,117046,345967,igor.bukanov%gmail.com,"Bug 345967: ensure proper id rooting in array_unshift. r=mrbkap,sr=brendan
",1153949576,"""diff --git a/js/src/jsarray.c b/js/src/jsarray.c
index f928089..92bd530 100644
--- a/js/src/jsarray.c
+++ b/js/src/jsarray.c
@@ -1224,7 +1224,12 @@ array_shift(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
             }
         }
 
-        /* Delete the only or last element. */
+        /*
+         * Delete the only or the last element. We recreate id when it is an
+         * atom to protect against a nested GC during the last iteration.
+         */
+        if (length > JSVAL_INT_MAX && !IndexToId(cx, length, &id))
+            return JS_FALSE;
         if (!OBJ_DELETE_PROPERTY(cx, obj, id, &junk))
             return JS_FALSE;
     }"""
a305a33478da7fb0d64036a0b3455a615134b585,117404,344759,mrbkap%gmail.com,"Protect the newborn function object from being collected because of a GC callback displacing it from its newborn root. bug 344759, r=brendan
",1153334273,"""diff --git a/js/src/jsfun.c b/js/src/jsfun.c
index 2857532..9353587 100644
--- a/js/src/jsfun.c
+++ b/js/src/jsfun.c
@@ -2066,6 +2066,7 @@ js_NewFunction(JSContext *cx, JSObject *funobj, JSNative native, uintN nargs,
                uintN flags, JSObject *parent, JSAtom *atom)
 {
     JSFunction *fun;
+    JSTempValueRooter tvr;
 
     /* If funobj is null, allocate an object for it. */
     if (funobj) {
@@ -2076,13 +2077,16 @@ js_NewFunction(JSContext *cx, JSObject *funobj, JSNative native, uintN nargs,
             return NULL;
     }
 
+    /* Protect fun from any potential GC callback. */
+    JS_PUSH_SINGLE_TEMP_ROOT(cx, OBJECT_TO_JSVAL(funobj), &tvr);
+
     /*
      * Allocate fun after allocating funobj so slot allocation in js_NewObject
      * does not wipe out fun from cx->newborn[GCX_PRIVATE].
      */
     fun = (JSFunction *) js_NewGCThing(cx, GCX_PRIVATE, sizeof(JSFunction));
     if (!fun)
-        return NULL;
+        goto out;
 
     /* Initialize all function members. */
     fun->object = NULL;
@@ -2097,8 +2101,11 @@ js_NewFunction(JSContext *cx, JSObject *funobj, JSNative native, uintN nargs,
     /* Link fun to funobj and vice versa. */
     if (!js_LinkFunctionObject(cx, fun, funobj)) {
         cx->newborn[GCX_OBJECT] = NULL;
-        return NULL;
+        fun = NULL;
     }
+
+out:
+    JS_POP_TEMP_ROOT(cx, &tvr);
     return fun;
 }
 """
1f678fe83f2618c9b1e9940ae65e27eca93f877d,117502,344960,jst%mozilla.jstenback.com,"Fixing bug 344960. Cap the length of ActiveX contract id argument to prevent windows from crashing in bstr code due to OOM. r=mrbkap@gmail.com, sr=bugmail@sicking.cc
",1153251908,"""diff --git a/js/src/xpconnect/src/XPCIDispatchExtension.cpp b/js/src/xpconnect/src/XPCIDispatchExtension.cpp
index 2a749f3..ab516b1 100644
--- a/js/src/xpconnect/src/XPCIDispatchExtension.cpp
+++ b/js/src/xpconnect/src/XPCIDispatchExtension.cpp
@@ -38,6 +38,8 @@
 
 static const char* const IDISPATCH_NAME = """"IDispatch"""";
 
+#define XPC_IDISPATCH_CTOR_MAX_ARG_LEN 2000
+
 PRBool XPCIDispatchExtension::mIsEnabled = PR_TRUE;
 
 static JSBool
@@ -76,10 +78,21 @@ CommonConstructor(JSContext *cx, int name, JSObject *obj, uintN argc,
         XPCThrower::Throw(NS_ERROR_XPC_COM_INVALID_CLASS_ID, ccx);
         return JS_FALSE;
     }
-    PRUint32 len;
-    jschar * className = xpc_JSString2String(ccx, argv[0], &len);
+
+    JSString* str = JSVAL_TO_STRING(argv[0]);
+    PRUint32 len = JS_GetStringLength(str);
+
+    // Cap constructor argument length to keep from crashing in string
+    // code.
+    if(len > XPC_IDISPATCH_CTOR_MAX_ARG_LEN)
+    {
+      XPCThrower::Throw(NS_ERROR_XPC_COM_INVALID_CLASS_ID, ccx);
+      return JS_FALSE;
+    }
+
+    jschar * className = JS_GetStringChars(str);
     CComBSTR bstrClassName(len, NS_REINTERPRET_CAST(const WCHAR *, className));
-    if(!className)
+    if(!bstrClassName)
     {
         XPCThrower::Throw(NS_ERROR_XPC_COM_INVALID_CLASS_ID, ccx);
         return JS_FALSE;"""
ca8253fbafa518eec2866e679c64d22763c24400,118122,343175,jst%mozilla.jstenback.com,"Fixing bug 343175. Make the popup blocker events point to the window on which the popup open was attempted rather than that window's top window. r=mrbkap@gmail.com, sr=bzbarsky@mit.edu
",1153233711,"""diff --git a/dom/src/base/nsGlobalWindow.cpp b/dom/src/base/nsGlobalWindow.cpp
index 913998d..75ea5b5 100644
--- a/dom/src/base/nsGlobalWindow.cpp
+++ b/dom/src/base/nsGlobalWindow.cpp
@@ -4214,7 +4214,8 @@ nsGlobalWindow::FireAbuseEvents(PRBool aBlocked, PRBool aWindow,
 
   nsCOMPtr<nsIURI> requestingURI;
   nsCOMPtr<nsIURI> popupURI;
-  nsCOMPtr<nsIWebNavigation> webNav(do_GetInterface(topWindow));
+  nsCOMPtr<nsIWebNavigation> webNav =
+    do_GetInterface((nsIScriptGlobalObject *)this);
   if (webNav)
     webNav->GetCurrentURI(getter_AddRefs(requestingURI));
 """
bb8d6c38e9eb40a44c6e268884e6d821e02b2817,118450,343457,Olli.Pettay%helsinki.fi,"Bug 343457, Adding nsWeakFrame, r+sr=roc
",1152690071,"""diff --git a/layout/base/nsIPresShell.h b/layout/base/nsIPresShell.h
index 3b97086..2db6f51 100644
--- a/layout/base/nsIPresShell.h
+++ b/layout/base/nsIPresShell.h
@@ -94,12 +94,14 @@ class nsIStyleSheet;
 class nsCSSFrameConstructor;
 class nsISelection;
 template<class E> class nsCOMArray;
+class nsWeakFrame;
 
 typedef short SelectionType;
 
 #define NS_IPRESSHELL_IID     \
-{ 0xa736d2fd, 0x0191, 0x42ea, \
-  { 0xb1, 0xb0, 0x80, 0x45, 0x1d, 0xfa, 0x03, 0x53 } }
+{ 0x67880b18, 0xaf91, 0x431b, \
+  { 0x89, 0x69, 0xfa, 0xd9, 0x2b, 0x3c, 0x33, 0x32 } }
+
 
 // Constants uses for ScrollFrameIntoView() function
 #define NS_PRESSHELL_SCROLL_TOP      0
@@ -749,6 +751,8 @@ public:
                              nscolor aBackgroundColor,
                              nsIRenderingContext** aRenderedContext) = 0;
 
+  void AddWeakFrame(nsWeakFrame* aWeakFrame);
+  void RemoveWeakFrame(nsWeakFrame* aWeakFrame);
 protected:
   // IMPORTANT: The ownership implicit in the following member variables
   // has been explicitly checked.  If you add any members to this class,
@@ -779,7 +783,10 @@ protected:
 
   // Set to true when the accessibility service is being used to mirror
   // the dom/layout trees
-  PRPackedBool mIsAccessibilityActive;
+  PRPackedBool              mIsAccessibilityActive;
+
+  // A list of weak frames. This is a pointer to the last item in the list.
+  nsWeakFrame*              mWeakFrames;
 };
 
 /**
diff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp
index c0a9b1a..6456e07 100644
--- a/layout/base/nsPresShell.cpp
+++ b/layout/base/nsPresShell.cpp
@@ -1603,6 +1603,32 @@ nsIPresShell::GetVerifyReflowFlags()
 #endif
 }
 
+void
+nsIPresShell::AddWeakFrame(nsWeakFrame* aWeakFrame)
+{
+  if (aWeakFrame->GetFrame()) {
+    aWeakFrame->GetFrame()->AddStateBits(NS_FRAME_EXTERNAL_REFERENCE);
+  }
+  aWeakFrame->SetPreviousWeakFrame(mWeakFrames);
+  mWeakFrames = aWeakFrame;
+}
+
+void
+nsIPresShell::RemoveWeakFrame(nsWeakFrame* aWeakFrame)
+{
+  if (mWeakFrames == aWeakFrame) {
+    mWeakFrames = aWeakFrame->GetPreviousWeakFrame();
+    return;
+  }
+  nsWeakFrame* nextWeak = mWeakFrames;
+  while (nextWeak && nextWeak->GetPreviousWeakFrame() != aWeakFrame) {
+    nextWeak = nextWeak->GetPreviousWeakFrame();
+  }
+  if (nextWeak) {
+    nextWeak->SetPreviousWeakFrame(aWeakFrame->GetPreviousWeakFrame());
+  }
+}
+
 //----------------------------------------------------------------------
 
 nsresult
@@ -1931,6 +1957,11 @@ PresShell::Destroy()
   mFrameConstructor->WillDestroyFrameTree();
   FrameManager()->Destroy();
 
+  NS_WARN_IF_FALSE(!mWeakFrames, """"Weak frames alive after destroying FrameManager"""");
+  while (mWeakFrames) {
+    mWeakFrames->Clear(this);
+  }
+
   // Let the style set do its cleanup.
   mStyleSet->Shutdown(mPresContext);
 
@@ -3940,6 +3971,16 @@ PresShell::ClearFrameRefs(nsIFrame* aFrame)
     }
   }
 
+  nsWeakFrame* weakFrame = mWeakFrames;
+  while (weakFrame) {
+    nsWeakFrame* prev = weakFrame->GetPreviousWeakFrame();
+    if (weakFrame->GetFrame() == aFrame) {
+      // This removes weakFrame from mWeakFrames.
+      weakFrame->Clear(this);
+    }
+    weakFrame = prev;
+  }
+
   return NS_OK;
 }
 
diff --git a/layout/generic/nsIFrame.h b/layout/generic/nsIFrame.h
index 05f5fe5..5e69ca1 100644
--- a/layout/generic/nsIFrame.h
+++ b/layout/generic/nsIFrame.h
@@ -1690,6 +1690,64 @@ private:
   NS_IMETHOD_(nsrefcnt) Release(void) = 0;
 };
 
+//----------------------------------------------------------------------
+
+/**
+ * nsWeakFrame can be used to keep a reference to a nsIFrame in a safe way.
+ * Whenever an nsIFrame object is deleted, the nsWeakFrames pointing
+ * to it will be cleared.
+ *
+ * Create nsWeakFrame object when it is sure that nsIFrame object
+ * is alive and after some operations which may destroy the nsIFrame
+ * (for example any DOM modifications) use IsAlive() or GetFrame() methods to
+ * check whether it is safe to continue to use the nsIFrame object.
+ *
+ * @note The usage of this class should be kept to a minimum.
+ */
+
+class nsWeakFrame {
+public:
+  nsWeakFrame(nsIFrame* aFrame)
+  {
+    mPrev = nsnull;
+    mFrame = aFrame;
+    if (mFrame) {
+      nsIPresShell* shell = mFrame->GetPresContext()->GetPresShell();
+      NS_WARN_IF_FALSE(shell, """"Null PresShell in nsWeakFrame!"""");
+      if (shell) {
+        shell->AddWeakFrame(this);
+      } else {
+        mFrame = nsnull;
+      }
+    }
+  }
+
+  void Clear(nsIPresShell* aShell) {
+    if (aShell) {
+      aShell->RemoveWeakFrame(this);
+    }
+    mFrame = nsnull;
+    mPrev = nsnull;
+  }
+
+  PRBool IsAlive() { return !!mFrame; }
+
+  nsIFrame* GetFrame() { return mFrame; }
+
+  nsWeakFrame* GetPreviousWeakFrame() { return mPrev; }
+
+  void SetPreviousWeakFrame(nsWeakFrame* aPrev) { mPrev = aPrev; }
+
+  ~nsWeakFrame()
+  {
+    Clear(mFrame ? mFrame->GetPresContext()->GetPresShell() : nsnull);
+  }
+private:
+  nsWeakFrame*  mPrev;
+  nsIFrame*     mFrame;
+};
+
+
 NS_DEFINE_STATIC_IID_ACCESSOR(nsIFrame, NS_IFRAME_IID)
 
 #endif /* nsIFrame_h___ */
diff --git a/layout/xul/base/src/nsPopupBoxObject.cpp b/layout/xul/base/src/nsPopupBoxObject.cpp
index 181e3df..56bbe33 100644
--- a/layout/xul/base/src/nsPopupBoxObject.cpp
+++ b/layout/xul/base/src/nsPopupBoxObject.cpp
@@ -110,8 +110,11 @@ nsPopupBoxObject::HidePopup()
   nsIPopupSetFrame *popupSet = GetPopupSetFrame();
   nsIFrame *ourFrame = GetFrame(PR_FALSE);
   if (ourFrame && popupSet) {
+    nsWeakFrame weakFrame(ourFrame);
     popupSet->HidePopup(ourFrame);
-    popupSet->DestroyPopup(ourFrame, PR_TRUE);
+    if (weakFrame.IsAlive()) {
+      popupSet->DestroyPopup(ourFrame, PR_TRUE);
+    }
   }
 
   return NS_OK;
diff --git a/layout/xul/base/src/nsPopupSetFrame.cpp b/layout/xul/base/src/nsPopupSetFrame.cpp
index 7db5c58..abbab3f 100644
--- a/layout/xul/base/src/nsPopupSetFrame.cpp
+++ b/layout/xul/base/src/nsPopupSetFrame.cpp
@@ -321,8 +321,9 @@ nsPopupSetFrame::ShowPopup(nsIContent* aElementContent, nsIContent* aPopupConten
                            const nsString& aPopupType, const nsString& anAnchorAlignment,
                            const nsString& aPopupAlignment)
 {
+  nsWeakFrame weakFrame(this);
   // First fire the popupshowing event.
-  if (!OnCreate(aXPos, aYPos, aPopupContent))
+  if (!OnCreate(aXPos, aYPos, aPopupContent) || !weakFrame.IsAlive())
     return NS_OK;
         
   // See if we already have an entry in our list.  We must create a new one on a miss.
@@ -348,6 +349,7 @@ nsPopupSetFrame::ShowPopup(nsIContent* aElementContent, nsIContent* aPopupConten
   entry->mPopupFrame = GetPresContext()->PresShell()
     ->GetPrimaryFrameFor(aPopupContent);
 
+  nsWeakFrame weakPopupFrame(entry->mPopupFrame);
 #ifdef DEBUG_PINK
   printf(""""X Pos: %d\n"""", mXPos);
   printf(""""Y Pos: %d\n"""", mYPos);
@@ -356,18 +358,26 @@ nsPopupSetFrame::ShowPopup(nsIContent* aElementContent, nsIContent* aPopupConten
   // Generate the popup.
   entry->mCreateHandlerSucceeded = PR_TRUE;
   entry->mIsOpen = PR_TRUE;
+  // This may destroy entry->mPopupFrame
   MarkAsGenerated(aPopupContent);
 
   // determine if this menu is a context menu and flag it
-  nsIFrame* activeChild = entry->mPopupFrame;
   nsIMenuParent* childPopup = nsnull;
-  if (activeChild)
-    CallQueryInterface(activeChild, &childPopup);
+  if (weakPopupFrame.IsAlive())
+    CallQueryInterface(weakPopupFrame.GetFrame(), &childPopup);
   if ( childPopup && aPopupType.EqualsLiteral(""""context"""") )
     childPopup->SetIsContextMenu(PR_TRUE);
 
+  if (!weakFrame.IsAlive()) {
+    return NS_OK;
+  }
+
   // Now open the popup.
   OpenPopup(entry, PR_TRUE);
+  
+  if (!weakFrame.IsAlive()) {
+    return NS_OK;
+  }
 
   // Now fire the popupshown event.
   OnCreated(aXPos, aYPos, aPopupContent);
@@ -416,34 +426,37 @@ nsPopupSetFrame::DestroyPopup(nsIFrame* aPopup, PRBool aDestroyEntireChain)
   nsPopupFrameList* entry = mPopupList->GetEntryByFrame(aPopup);
 
   if (entry && entry->mCreateHandlerSucceeded) {    // ensure the popup was created before we try to destroy it
+    nsWeakFrame weakFrame(this);
     OpenPopup(entry, PR_FALSE);
-    entry->mPopupType.SetLength(0);
-  
-    if (aDestroyEntireChain && entry->mElementContent && entry->mPopupType.EqualsLiteral(""""context"""")) {
-      // If we are a context menu, and if we are attached to a
-      // menupopup, then destroying us should also dismiss the parent
-      // menu popup.
-      if (entry->mElementContent->Tag() == nsXULAtoms::menupopup) {
-        nsIFrame* popupFrame = GetPresContext()->PresShell()
-          ->GetPrimaryFrameFor(entry->mElementContent);
-        if (popupFrame) {
-          nsIMenuParent *menuParent;
-          if (NS_SUCCEEDED(CallQueryInterface(popupFrame, &menuParent))) {
-            menuParent->DismissChain();
+    nsCOMPtr<nsIContent> popupContent = entry->mPopupContent;
+    if (weakFrame.IsAlive()) {
+      entry->mPopupType.SetLength(0);
+    
+      if (aDestroyEntireChain && entry->mElementContent && entry->mPopupType.EqualsLiteral(""""context"""")) {
+        // If we are a context menu, and if we are attached to a
+        // menupopup, then destroying us should also dismiss the parent
+        // menu popup.
+        if (entry->mElementContent->Tag() == nsXULAtoms::menupopup) {
+          nsIFrame* popupFrame = GetPresContext()->PresShell()
+            ->GetPrimaryFrameFor(entry->mElementContent);
+          if (popupFrame) {
+            nsIMenuParent *menuParent;
+            if (NS_SUCCEEDED(CallQueryInterface(popupFrame, &menuParent))) {
+              menuParent->DismissChain();
+            }
           }
         }
       }
+  
+      // clear things out for next time
+      entry->mCreateHandlerSucceeded = PR_FALSE;
+      entry->mElementContent = nsnull;
+      entry->mXPos = entry->mYPos = 0;
+      entry->mLastPref.width = -1;
+      entry->mLastPref.height = -1;
     }
-
-    // clear things out for next time
-    entry->mCreateHandlerSucceeded = PR_FALSE;
-    entry->mElementContent = nsnull;
-    entry->mXPos = entry->mYPos = 0;
-    entry->mLastPref.width = -1;
-    entry->mLastPref.height = -1;
-
     // ungenerate the popup.
-    entry->mPopupContent->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menugenerated, PR_TRUE);
+    popupContent->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menugenerated, PR_TRUE);
   }
 
   return NS_OK;
@@ -465,21 +478,26 @@ nsPopupSetFrame::MarkAsGenerated(nsIContent* aPopupContent)
 void
 nsPopupSetFrame::OpenPopup(nsPopupFrameList* aEntry, PRBool aActivateFlag)
 {
+  nsWeakFrame weakFrame(this);
+  nsIFrame* activeChild = aEntry->mPopupFrame;
+  nsWeakFrame weakPopupFrame(activeChild);
+  nsCOMPtr<nsIContent> popupContent = aEntry->mPopupContent;
+  PRBool createHandlerSucceeded = aEntry->mCreateHandlerSucceeded;
+  nsAutoString popupType = aEntry->mPopupType;
   if (aActivateFlag) {
     ActivatePopup(aEntry, PR_TRUE);
 
     // register the rollup listeners, etc, but not if we're a tooltip
-    if (!aEntry->mPopupType.EqualsLiteral(""""tooltip"""")) {
-      nsIFrame* activeChild = aEntry->mPopupFrame;
+    if (!popupType.EqualsLiteral(""""tooltip"""")) {
       nsIMenuParent* childPopup = nsnull;
-      if (activeChild)
+      if (weakPopupFrame.IsAlive())
         CallQueryInterface(activeChild, &childPopup);
 
       // Tooltips don't get keyboard navigation
       if (childPopup && !nsMenuDismissalListener::sInstance) {
         // First check and make sure this popup wants keyboard navigation
-        if (!aEntry->mPopupContent->AttrValueIs(kNameSpaceID_None, nsXULAtoms::ignorekeys,
-                                                nsXULAtoms::_true, eCaseMatters))
+        if (!popupContent->AttrValueIs(kNameSpaceID_None, nsXULAtoms::ignorekeys,
+                                       nsXULAtoms::_true, eCaseMatters))
           childPopup->InstallKeyboardNavigator();
       }
 
@@ -489,28 +507,32 @@ nsPopupSetFrame::OpenPopup(nsPopupFrameList* aEntry, PRBool aActivateFlag)
     }
   }
   else {
-    if (aEntry->mCreateHandlerSucceeded && !OnDestroy(aEntry->mPopupContent))
+    if (createHandlerSucceeded && !OnDestroy(aEntry->mPopupContent))
       return;
 
     // Unregister, but not if we're a tooltip
-    if (!aEntry->mPopupType.EqualsLiteral(""""tooltip"""") ) {
+    if (!popupType.EqualsLiteral(""""tooltip"""") ) {
       nsMenuDismissalListener::Shutdown();
     }
     
     // Remove any keyboard navigators
     nsIMenuParent* childPopup = nsnull;
-    if (aEntry->mPopupFrame)
-      CallQueryInterface(aEntry->mPopupFrame, &childPopup);
+    if (weakPopupFrame.IsAlive())
+      CallQueryInterface(activeChild, &childPopup);
     if (childPopup)
       childPopup->RemoveKeyboardNavigator();
 
+    nsRefPtr<nsPresContext> presContext = GetPresContext();
+    nsCOMPtr<nsIContent> content = aEntry->mPopupContent;
     ActivatePopup(aEntry, PR_FALSE);
 
-    OnDestroyed(aEntry->mPopupContent);
+    OnDestroyed(presContext, content);
   }
 
-  nsBoxLayoutState state(GetPresContext());
-  MarkDirtyChildren(state); // Mark ourselves dirty.
+  if (weakFrame.IsAlive()) {
+    nsBoxLayoutState state(GetPresContext());
+    MarkDirtyChildren(state); // Mark ourselves dirty.
+  }
 }
 
 void
@@ -524,23 +546,25 @@ nsPopupSetFrame::ActivatePopup(nsPopupFrameList* aEntry, PRBool aActivateFlag)
       // XXXben hook in |width| and |height| usage here? 
       aEntry->mPopupContent->SetAttr(kNameSpaceID_None, nsXULAtoms::menutobedisplayed, NS_LITERAL_STRING(""""true""""), PR_TRUE);
     else {
-      aEntry->mPopupContent->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menuactive, PR_TRUE);
-      aEntry->mPopupContent->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menutobedisplayed, PR_TRUE);
+      nsWeakFrame weakFrame(this);
+      nsWeakFrame weakActiveChild(aEntry->mPopupFrame);
+      nsCOMPtr<nsIContent> content = aEntry->mPopupContent;
+      content->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menuactive, PR_TRUE);
+      content->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menutobedisplayed, PR_TRUE);
 
       // get rid of the reflows we just created. If we leave them hanging around, we
       // can get into trouble if a dialog with a modal event loop comes along and
       // processes the reflows before we get to call DestroyChain(). Processing the
       // reflow will cause the popup to show itself again. (bug 71219)
-      nsIDocument* doc = aEntry->mPopupContent->GetDocument();
+      nsIDocument* doc = content->GetDocument();
       if (doc)
         doc->FlushPendingNotifications(Flush_OnlyReflow);
-         
+
       // make sure we hide the popup. We can't assume that we'll have a view
       // since we could be cleaning up after someone that didn't correctly 
       // destroy the popup.
-      nsIFrame* activeChild = aEntry->mPopupFrame;
-      if (activeChild) {
-        nsIView* view = activeChild->GetView();
+      if (weakFrame.IsAlive() && weakActiveChild.IsAlive()) {
+        nsIView* view = weakActiveChild.GetFrame()->GetView();
         NS_ASSERTION(view, """"View is gone, looks like someone forgot to roll up the popup!"""");
         if (view) {
           nsIViewManager* viewManager = view->GetViewManager();
@@ -549,7 +573,7 @@ nsPopupSetFrame::ActivatePopup(nsPopupFrameList* aEntry, PRBool aActivateFlag)
           viewManager->ResizeView(view, r);
           if (aEntry->mIsOpen) {
             aEntry->mIsOpen = PR_FALSE;
-            FireDOMEventSynch(NS_LITERAL_STRING(""""DOMMenuInactive""""), aEntry->mPopupContent);
+            FireDOMEventSynch(NS_LITERAL_STRING(""""DOMMenuInactive""""), content);
           }
         }
       }
@@ -570,6 +594,7 @@ nsPopupSetFrame::OnCreate(PRInt32 aX, PRInt32 aY, nsIContent* aPopupContent)
   event.refPoint.y = aY;
 
   if (aPopupContent) {
+    nsCOMPtr<nsIContent> kungFuDeathGrip(aPopupContent);
     nsIPresShell *shell = GetPresContext()->GetPresShell();
     if (shell) {
       nsresult rv = shell->HandleDOMEventWithTarget(aPopupContent, &event,
@@ -672,14 +697,15 @@ nsPopupSetFrame::OnDestroy(nsIContent* aPopupContent)
 }
 
 PRBool
-nsPopupSetFrame::OnDestroyed(nsIContent* aPopupContent)
+nsPopupSetFrame::OnDestroyed(nsPresContext* aPresContext,
+                             nsIContent* aPopupContent)
 {
   nsEventStatus status = nsEventStatus_eIgnore;
   nsMouseEvent event(PR_TRUE, NS_XUL_POPUP_HIDDEN, nsnull,
                      nsMouseEvent::eReal);
 
-  if (aPopupContent) {
-    nsIPresShell *shell = GetPresContext()->GetPresShell();
+  if (aPopupContent && aPresContext) {
+    nsIPresShell *shell = aPresContext->GetPresShell();
     if (shell) {
       nsresult rv = shell->HandleDOMEventWithTarget(aPopupContent, &event,
                                                     &status);
diff --git a/layout/xul/base/src/nsPopupSetFrame.h b/layout/xul/base/src/nsPopupSetFrame.h
index d6e917c..68bd16a 100644
--- a/layout/xul/base/src/nsPopupSetFrame.h
+++ b/layout/xul/base/src/nsPopupSetFrame.h
@@ -117,7 +117,8 @@ public:
   PRBool OnCreate(PRInt32 aX, PRInt32 aY, nsIContent* aPopupContent);
   PRBool OnDestroy(nsIContent* aPopupContent);
   PRBool OnCreated(PRInt32 aX, PRInt32 aY, nsIContent* aPopupContent);
-  PRBool OnDestroyed(nsIContent* aPopupContent);
+  static PRBool OnDestroyed(nsPresContext* aPresContext,
+                            nsIContent* aPopupContent);
 
   void ActivatePopup(nsPopupFrameList* aEntry, PRBool aActivateFlag);
   void OpenPopup(nsPopupFrameList* aEntry, PRBool aOpenFlag);"""
4f027292633d67ebbc8430932912dc698e6f7787,118474,343457,Olli.Pettay%helsinki.fi,"backing out Bug 343457 too see if it caused btek tp regression
",1152649087,"""diff --git a/layout/base/nsIPresShell.h b/layout/base/nsIPresShell.h
index 2db6f51..3b97086 100644
--- a/layout/base/nsIPresShell.h
+++ b/layout/base/nsIPresShell.h
@@ -94,14 +94,12 @@ class nsIStyleSheet;
 class nsCSSFrameConstructor;
 class nsISelection;
 template<class E> class nsCOMArray;
-class nsWeakFrame;
 
 typedef short SelectionType;
 
 #define NS_IPRESSHELL_IID     \
-{ 0x67880b18, 0xaf91, 0x431b, \
-  { 0x89, 0x69, 0xfa, 0xd9, 0x2b, 0x3c, 0x33, 0x32 } }
-
+{ 0xa736d2fd, 0x0191, 0x42ea, \
+  { 0xb1, 0xb0, 0x80, 0x45, 0x1d, 0xfa, 0x03, 0x53 } }
 
 // Constants uses for ScrollFrameIntoView() function
 #define NS_PRESSHELL_SCROLL_TOP      0
@@ -751,8 +749,6 @@ public:
                              nscolor aBackgroundColor,
                              nsIRenderingContext** aRenderedContext) = 0;
 
-  void AddWeakFrame(nsWeakFrame* aWeakFrame);
-  void RemoveWeakFrame(nsWeakFrame* aWeakFrame);
 protected:
   // IMPORTANT: The ownership implicit in the following member variables
   // has been explicitly checked.  If you add any members to this class,
@@ -783,10 +779,7 @@ protected:
 
   // Set to true when the accessibility service is being used to mirror
   // the dom/layout trees
-  PRPackedBool              mIsAccessibilityActive;
-
-  // A list of weak frames. This is a pointer to the last item in the list.
-  nsWeakFrame*              mWeakFrames;
+  PRPackedBool mIsAccessibilityActive;
 };
 
 /**
diff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp
index 1af65ea..c0a9b1a 100644
--- a/layout/base/nsPresShell.cpp
+++ b/layout/base/nsPresShell.cpp
@@ -1603,29 +1603,6 @@ nsIPresShell::GetVerifyReflowFlags()
 #endif
 }
 
-void
-nsIPresShell::AddWeakFrame(nsWeakFrame* aWeakFrame)
-{
-  aWeakFrame->SetPreviousWeakFrame(mWeakFrames);
-  mWeakFrames = aWeakFrame;
-}
-
-void
-nsIPresShell::RemoveWeakFrame(nsWeakFrame* aWeakFrame)
-{
-  if (mWeakFrames == aWeakFrame) {
-    mWeakFrames = aWeakFrame->GetPreviousWeakFrame();
-    return;
-  }
-  nsWeakFrame* nextWeak = mWeakFrames;
-  while (nextWeak && nextWeak->GetPreviousWeakFrame() != aWeakFrame) {
-    nextWeak = nextWeak->GetPreviousWeakFrame();
-  }
-  if (nextWeak) {
-    nextWeak->SetPreviousWeakFrame(aWeakFrame->GetPreviousWeakFrame());
-  }
-}
-
 //----------------------------------------------------------------------
 
 nsresult
@@ -1954,11 +1931,6 @@ PresShell::Destroy()
   mFrameConstructor->WillDestroyFrameTree();
   FrameManager()->Destroy();
 
-  NS_WARN_IF_FALSE(!mWeakFrames, """"Weak frames alive after destroying FrameManager"""");
-  while (mWeakFrames) {
-    mWeakFrames->Clear(this);
-  }
-
   // Let the style set do its cleanup.
   mStyleSet->Shutdown(mPresContext);
 
@@ -3200,16 +3172,6 @@ PresShell::NotifyDestroyingFrame(nsIFrame* aFrame)
     mPresContext->PropertyTable()->DeleteAllPropertiesFor(aFrame);
   }
 
-  nsWeakFrame* weakFrame = mWeakFrames;
-  while (weakFrame) {
-    nsWeakFrame* prev = weakFrame->GetPreviousWeakFrame();
-    if (weakFrame->GetFrame() == aFrame) {
-      // This removes weakFrame from mWeakFrames.
-      weakFrame->Clear(this);
-    }
-    weakFrame = prev;
-  }
-
   return NS_OK;
 }
 
diff --git a/layout/generic/nsIFrame.h b/layout/generic/nsIFrame.h
index 5e69ca1..05f5fe5 100644
--- a/layout/generic/nsIFrame.h
+++ b/layout/generic/nsIFrame.h
@@ -1690,64 +1690,6 @@ private:
   NS_IMETHOD_(nsrefcnt) Release(void) = 0;
 };
 
-//----------------------------------------------------------------------
-
-/**
- * nsWeakFrame can be used to keep a reference to a nsIFrame in a safe way.
- * Whenever an nsIFrame object is deleted, the nsWeakFrames pointing
- * to it will be cleared.
- *
- * Create nsWeakFrame object when it is sure that nsIFrame object
- * is alive and after some operations which may destroy the nsIFrame
- * (for example any DOM modifications) use IsAlive() or GetFrame() methods to
- * check whether it is safe to continue to use the nsIFrame object.
- *
- * @note The usage of this class should be kept to a minimum.
- */
-
-class nsWeakFrame {
-public:
-  nsWeakFrame(nsIFrame* aFrame)
-  {
-    mPrev = nsnull;
-    mFrame = aFrame;
-    if (mFrame) {
-      nsIPresShell* shell = mFrame->GetPresContext()->GetPresShell();
-      NS_WARN_IF_FALSE(shell, """"Null PresShell in nsWeakFrame!"""");
-      if (shell) {
-        shell->AddWeakFrame(this);
-      } else {
-        mFrame = nsnull;
-      }
-    }
-  }
-
-  void Clear(nsIPresShell* aShell) {
-    if (aShell) {
-      aShell->RemoveWeakFrame(this);
-    }
-    mFrame = nsnull;
-    mPrev = nsnull;
-  }
-
-  PRBool IsAlive() { return !!mFrame; }
-
-  nsIFrame* GetFrame() { return mFrame; }
-
-  nsWeakFrame* GetPreviousWeakFrame() { return mPrev; }
-
-  void SetPreviousWeakFrame(nsWeakFrame* aPrev) { mPrev = aPrev; }
-
-  ~nsWeakFrame()
-  {
-    Clear(mFrame ? mFrame->GetPresContext()->GetPresShell() : nsnull);
-  }
-private:
-  nsWeakFrame*  mPrev;
-  nsIFrame*     mFrame;
-};
-
-
 NS_DEFINE_STATIC_IID_ACCESSOR(nsIFrame, NS_IFRAME_IID)
 
 #endif /* nsIFrame_h___ */
diff --git a/layout/xul/base/src/nsPopupBoxObject.cpp b/layout/xul/base/src/nsPopupBoxObject.cpp
index 56bbe33..181e3df 100644
--- a/layout/xul/base/src/nsPopupBoxObject.cpp
+++ b/layout/xul/base/src/nsPopupBoxObject.cpp
@@ -110,11 +110,8 @@ nsPopupBoxObject::HidePopup()
   nsIPopupSetFrame *popupSet = GetPopupSetFrame();
   nsIFrame *ourFrame = GetFrame(PR_FALSE);
   if (ourFrame && popupSet) {
-    nsWeakFrame weakFrame(ourFrame);
     popupSet->HidePopup(ourFrame);
-    if (weakFrame.IsAlive()) {
-      popupSet->DestroyPopup(ourFrame, PR_TRUE);
-    }
+    popupSet->DestroyPopup(ourFrame, PR_TRUE);
   }
 
   return NS_OK;
diff --git a/layout/xul/base/src/nsPopupSetFrame.cpp b/layout/xul/base/src/nsPopupSetFrame.cpp
index abbab3f..7db5c58 100644
--- a/layout/xul/base/src/nsPopupSetFrame.cpp
+++ b/layout/xul/base/src/nsPopupSetFrame.cpp
@@ -321,9 +321,8 @@ nsPopupSetFrame::ShowPopup(nsIContent* aElementContent, nsIContent* aPopupConten
                            const nsString& aPopupType, const nsString& anAnchorAlignment,
                            const nsString& aPopupAlignment)
 {
-  nsWeakFrame weakFrame(this);
   // First fire the popupshowing event.
-  if (!OnCreate(aXPos, aYPos, aPopupContent) || !weakFrame.IsAlive())
+  if (!OnCreate(aXPos, aYPos, aPopupContent))
     return NS_OK;
         
   // See if we already have an entry in our list.  We must create a new one on a miss.
@@ -349,7 +348,6 @@ nsPopupSetFrame::ShowPopup(nsIContent* aElementContent, nsIContent* aPopupConten
   entry->mPopupFrame = GetPresContext()->PresShell()
     ->GetPrimaryFrameFor(aPopupContent);
 
-  nsWeakFrame weakPopupFrame(entry->mPopupFrame);
 #ifdef DEBUG_PINK
   printf(""""X Pos: %d\n"""", mXPos);
   printf(""""Y Pos: %d\n"""", mYPos);
@@ -358,26 +356,18 @@ nsPopupSetFrame::ShowPopup(nsIContent* aElementContent, nsIContent* aPopupConten
   // Generate the popup.
   entry->mCreateHandlerSucceeded = PR_TRUE;
   entry->mIsOpen = PR_TRUE;
-  // This may destroy entry->mPopupFrame
   MarkAsGenerated(aPopupContent);
 
   // determine if this menu is a context menu and flag it
+  nsIFrame* activeChild = entry->mPopupFrame;
   nsIMenuParent* childPopup = nsnull;
-  if (weakPopupFrame.IsAlive())
-    CallQueryInterface(weakPopupFrame.GetFrame(), &childPopup);
+  if (activeChild)
+    CallQueryInterface(activeChild, &childPopup);
   if ( childPopup && aPopupType.EqualsLiteral(""""context"""") )
     childPopup->SetIsContextMenu(PR_TRUE);
 
-  if (!weakFrame.IsAlive()) {
-    return NS_OK;
-  }
-
   // Now open the popup.
   OpenPopup(entry, PR_TRUE);
-  
-  if (!weakFrame.IsAlive()) {
-    return NS_OK;
-  }
 
   // Now fire the popupshown event.
   OnCreated(aXPos, aYPos, aPopupContent);
@@ -426,37 +416,34 @@ nsPopupSetFrame::DestroyPopup(nsIFrame* aPopup, PRBool aDestroyEntireChain)
   nsPopupFrameList* entry = mPopupList->GetEntryByFrame(aPopup);
 
   if (entry && entry->mCreateHandlerSucceeded) {    // ensure the popup was created before we try to destroy it
-    nsWeakFrame weakFrame(this);
     OpenPopup(entry, PR_FALSE);
-    nsCOMPtr<nsIContent> popupContent = entry->mPopupContent;
-    if (weakFrame.IsAlive()) {
-      entry->mPopupType.SetLength(0);
-    
-      if (aDestroyEntireChain && entry->mElementContent && entry->mPopupType.EqualsLiteral(""""context"""")) {
-        // If we are a context menu, and if we are attached to a
-        // menupopup, then destroying us should also dismiss the parent
-        // menu popup.
-        if (entry->mElementContent->Tag() == nsXULAtoms::menupopup) {
-          nsIFrame* popupFrame = GetPresContext()->PresShell()
-            ->GetPrimaryFrameFor(entry->mElementContent);
-          if (popupFrame) {
-            nsIMenuParent *menuParent;
-            if (NS_SUCCEEDED(CallQueryInterface(popupFrame, &menuParent))) {
-              menuParent->DismissChain();
-            }
+    entry->mPopupType.SetLength(0);
+  
+    if (aDestroyEntireChain && entry->mElementContent && entry->mPopupType.EqualsLiteral(""""context"""")) {
+      // If we are a context menu, and if we are attached to a
+      // menupopup, then destroying us should also dismiss the parent
+      // menu popup.
+      if (entry->mElementContent->Tag() == nsXULAtoms::menupopup) {
+        nsIFrame* popupFrame = GetPresContext()->PresShell()
+          ->GetPrimaryFrameFor(entry->mElementContent);
+        if (popupFrame) {
+          nsIMenuParent *menuParent;
+          if (NS_SUCCEEDED(CallQueryInterface(popupFrame, &menuParent))) {
+            menuParent->DismissChain();
           }
         }
       }
-  
-      // clear things out for next time
-      entry->mCreateHandlerSucceeded = PR_FALSE;
-      entry->mElementContent = nsnull;
-      entry->mXPos = entry->mYPos = 0;
-      entry->mLastPref.width = -1;
-      entry->mLastPref.height = -1;
     }
+
+    // clear things out for next time
+    entry->mCreateHandlerSucceeded = PR_FALSE;
+    entry->mElementContent = nsnull;
+    entry->mXPos = entry->mYPos = 0;
+    entry->mLastPref.width = -1;
+    entry->mLastPref.height = -1;
+
     // ungenerate the popup.
-    popupContent->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menugenerated, PR_TRUE);
+    entry->mPopupContent->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menugenerated, PR_TRUE);
   }
 
   return NS_OK;
@@ -478,26 +465,21 @@ nsPopupSetFrame::MarkAsGenerated(nsIContent* aPopupContent)
 void
 nsPopupSetFrame::OpenPopup(nsPopupFrameList* aEntry, PRBool aActivateFlag)
 {
-  nsWeakFrame weakFrame(this);
-  nsIFrame* activeChild = aEntry->mPopupFrame;
-  nsWeakFrame weakPopupFrame(activeChild);
-  nsCOMPtr<nsIContent> popupContent = aEntry->mPopupContent;
-  PRBool createHandlerSucceeded = aEntry->mCreateHandlerSucceeded;
-  nsAutoString popupType = aEntry->mPopupType;
   if (aActivateFlag) {
     ActivatePopup(aEntry, PR_TRUE);
 
     // register the rollup listeners, etc, but not if we're a tooltip
-    if (!popupType.EqualsLiteral(""""tooltip"""")) {
+    if (!aEntry->mPopupType.EqualsLiteral(""""tooltip"""")) {
+      nsIFrame* activeChild = aEntry->mPopupFrame;
       nsIMenuParent* childPopup = nsnull;
-      if (weakPopupFrame.IsAlive())
+      if (activeChild)
         CallQueryInterface(activeChild, &childPopup);
 
       // Tooltips don't get keyboard navigation
       if (childPopup && !nsMenuDismissalListener::sInstance) {
         // First check and make sure this popup wants keyboard navigation
-        if (!popupContent->AttrValueIs(kNameSpaceID_None, nsXULAtoms::ignorekeys,
-                                       nsXULAtoms::_true, eCaseMatters))
+        if (!aEntry->mPopupContent->AttrValueIs(kNameSpaceID_None, nsXULAtoms::ignorekeys,
+                                                nsXULAtoms::_true, eCaseMatters))
           childPopup->InstallKeyboardNavigator();
       }
 
@@ -507,32 +489,28 @@ nsPopupSetFrame::OpenPopup(nsPopupFrameList* aEntry, PRBool aActivateFlag)
     }
   }
   else {
-    if (createHandlerSucceeded && !OnDestroy(aEntry->mPopupContent))
+    if (aEntry->mCreateHandlerSucceeded && !OnDestroy(aEntry->mPopupContent))
       return;
 
     // Unregister, but not if we're a tooltip
-    if (!popupType.EqualsLiteral(""""tooltip"""") ) {
+    if (!aEntry->mPopupType.EqualsLiteral(""""tooltip"""") ) {
       nsMenuDismissalListener::Shutdown();
     }
     
     // Remove any keyboard navigators
     nsIMenuParent* childPopup = nsnull;
-    if (weakPopupFrame.IsAlive())
-      CallQueryInterface(activeChild, &childPopup);
+    if (aEntry->mPopupFrame)
+      CallQueryInterface(aEntry->mPopupFrame, &childPopup);
     if (childPopup)
       childPopup->RemoveKeyboardNavigator();
 
-    nsRefPtr<nsPresContext> presContext = GetPresContext();
-    nsCOMPtr<nsIContent> content = aEntry->mPopupContent;
     ActivatePopup(aEntry, PR_FALSE);
 
-    OnDestroyed(presContext, content);
+    OnDestroyed(aEntry->mPopupContent);
   }
 
-  if (weakFrame.IsAlive()) {
-    nsBoxLayoutState state(GetPresContext());
-    MarkDirtyChildren(state); // Mark ourselves dirty.
-  }
+  nsBoxLayoutState state(GetPresContext());
+  MarkDirtyChildren(state); // Mark ourselves dirty.
 }
 
 void
@@ -546,25 +524,23 @@ nsPopupSetFrame::ActivatePopup(nsPopupFrameList* aEntry, PRBool aActivateFlag)
       // XXXben hook in |width| and |height| usage here? 
       aEntry->mPopupContent->SetAttr(kNameSpaceID_None, nsXULAtoms::menutobedisplayed, NS_LITERAL_STRING(""""true""""), PR_TRUE);
     else {
-      nsWeakFrame weakFrame(this);
-      nsWeakFrame weakActiveChild(aEntry->mPopupFrame);
-      nsCOMPtr<nsIContent> content = aEntry->mPopupContent;
-      content->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menuactive, PR_TRUE);
-      content->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menutobedisplayed, PR_TRUE);
+      aEntry->mPopupContent->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menuactive, PR_TRUE);
+      aEntry->mPopupContent->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menutobedisplayed, PR_TRUE);
 
       // get rid of the reflows we just created. If we leave them hanging around, we
       // can get into trouble if a dialog with a modal event loop comes along and
       // processes the reflows before we get to call DestroyChain(). Processing the
       // reflow will cause the popup to show itself again. (bug 71219)
-      nsIDocument* doc = content->GetDocument();
+      nsIDocument* doc = aEntry->mPopupContent->GetDocument();
       if (doc)
         doc->FlushPendingNotifications(Flush_OnlyReflow);
-
+         
       // make sure we hide the popup. We can't assume that we'll have a view
       // since we could be cleaning up after someone that didn't correctly 
       // destroy the popup.
-      if (weakFrame.IsAlive() && weakActiveChild.IsAlive()) {
-        nsIView* view = weakActiveChild.GetFrame()->GetView();
+      nsIFrame* activeChild = aEntry->mPopupFrame;
+      if (activeChild) {
+        nsIView* view = activeChild->GetView();
         NS_ASSERTION(view, """"View is gone, looks like someone forgot to roll up the popup!"""");
         if (view) {
           nsIViewManager* viewManager = view->GetViewManager();
@@ -573,7 +549,7 @@ nsPopupSetFrame::ActivatePopup(nsPopupFrameList* aEntry, PRBool aActivateFlag)
           viewManager->ResizeView(view, r);
           if (aEntry->mIsOpen) {
             aEntry->mIsOpen = PR_FALSE;
-            FireDOMEventSynch(NS_LITERAL_STRING(""""DOMMenuInactive""""), content);
+            FireDOMEventSynch(NS_LITERAL_STRING(""""DOMMenuInactive""""), aEntry->mPopupContent);
           }
         }
       }
@@ -594,7 +570,6 @@ nsPopupSetFrame::OnCreate(PRInt32 aX, PRInt32 aY, nsIContent* aPopupContent)
   event.refPoint.y = aY;
 
   if (aPopupContent) {
-    nsCOMPtr<nsIContent> kungFuDeathGrip(aPopupContent);
     nsIPresShell *shell = GetPresContext()->GetPresShell();
     if (shell) {
       nsresult rv = shell->HandleDOMEventWithTarget(aPopupContent, &event,
@@ -697,15 +672,14 @@ nsPopupSetFrame::OnDestroy(nsIContent* aPopupContent)
 }
 
 PRBool
-nsPopupSetFrame::OnDestroyed(nsPresContext* aPresContext,
-                             nsIContent* aPopupContent)
+nsPopupSetFrame::OnDestroyed(nsIContent* aPopupContent)
 {
   nsEventStatus status = nsEventStatus_eIgnore;
   nsMouseEvent event(PR_TRUE, NS_XUL_POPUP_HIDDEN, nsnull,
                      nsMouseEvent::eReal);
 
-  if (aPopupContent && aPresContext) {
-    nsIPresShell *shell = aPresContext->GetPresShell();
+  if (aPopupContent) {
+    nsIPresShell *shell = GetPresContext()->GetPresShell();
     if (shell) {
       nsresult rv = shell->HandleDOMEventWithTarget(aPopupContent, &event,
                                                     &status);
diff --git a/layout/xul/base/src/nsPopupSetFrame.h b/layout/xul/base/src/nsPopupSetFrame.h
index 68bd16a..d6e917c 100644
--- a/layout/xul/base/src/nsPopupSetFrame.h
+++ b/layout/xul/base/src/nsPopupSetFrame.h
@@ -117,8 +117,7 @@ public:
   PRBool OnCreate(PRInt32 aX, PRInt32 aY, nsIContent* aPopupContent);
   PRBool OnDestroy(nsIContent* aPopupContent);
   PRBool OnCreated(PRInt32 aX, PRInt32 aY, nsIContent* aPopupContent);
-  static PRBool OnDestroyed(nsPresContext* aPresContext,
-                            nsIContent* aPopupContent);
+  PRBool OnDestroyed(nsIContent* aPopupContent);
 
   void ActivatePopup(nsPopupFrameList* aEntry, PRBool aActivateFlag);
   void OpenPopup(nsPopupFrameList* aEntry, PRBool aOpenFlag);"""
95420825d3ec027c4f230fe21bc0bc26b49b7b23,118492,343457,Olli.Pettay%helsinki.fi,"Bug 343457, Add nsWeakFrame, r+sr=roc
",1152622867,"""diff --git a/layout/base/nsIPresShell.h b/layout/base/nsIPresShell.h
index 3b97086..2db6f51 100644
--- a/layout/base/nsIPresShell.h
+++ b/layout/base/nsIPresShell.h
@@ -94,12 +94,14 @@ class nsIStyleSheet;
 class nsCSSFrameConstructor;
 class nsISelection;
 template<class E> class nsCOMArray;
+class nsWeakFrame;
 
 typedef short SelectionType;
 
 #define NS_IPRESSHELL_IID     \
-{ 0xa736d2fd, 0x0191, 0x42ea, \
-  { 0xb1, 0xb0, 0x80, 0x45, 0x1d, 0xfa, 0x03, 0x53 } }
+{ 0x67880b18, 0xaf91, 0x431b, \
+  { 0x89, 0x69, 0xfa, 0xd9, 0x2b, 0x3c, 0x33, 0x32 } }
+
 
 // Constants uses for ScrollFrameIntoView() function
 #define NS_PRESSHELL_SCROLL_TOP      0
@@ -749,6 +751,8 @@ public:
                              nscolor aBackgroundColor,
                              nsIRenderingContext** aRenderedContext) = 0;
 
+  void AddWeakFrame(nsWeakFrame* aWeakFrame);
+  void RemoveWeakFrame(nsWeakFrame* aWeakFrame);
 protected:
   // IMPORTANT: The ownership implicit in the following member variables
   // has been explicitly checked.  If you add any members to this class,
@@ -779,7 +783,10 @@ protected:
 
   // Set to true when the accessibility service is being used to mirror
   // the dom/layout trees
-  PRPackedBool mIsAccessibilityActive;
+  PRPackedBool              mIsAccessibilityActive;
+
+  // A list of weak frames. This is a pointer to the last item in the list.
+  nsWeakFrame*              mWeakFrames;
 };
 
 /**
diff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp
index c0a9b1a..1af65ea 100644
--- a/layout/base/nsPresShell.cpp
+++ b/layout/base/nsPresShell.cpp
@@ -1603,6 +1603,29 @@ nsIPresShell::GetVerifyReflowFlags()
 #endif
 }
 
+void
+nsIPresShell::AddWeakFrame(nsWeakFrame* aWeakFrame)
+{
+  aWeakFrame->SetPreviousWeakFrame(mWeakFrames);
+  mWeakFrames = aWeakFrame;
+}
+
+void
+nsIPresShell::RemoveWeakFrame(nsWeakFrame* aWeakFrame)
+{
+  if (mWeakFrames == aWeakFrame) {
+    mWeakFrames = aWeakFrame->GetPreviousWeakFrame();
+    return;
+  }
+  nsWeakFrame* nextWeak = mWeakFrames;
+  while (nextWeak && nextWeak->GetPreviousWeakFrame() != aWeakFrame) {
+    nextWeak = nextWeak->GetPreviousWeakFrame();
+  }
+  if (nextWeak) {
+    nextWeak->SetPreviousWeakFrame(aWeakFrame->GetPreviousWeakFrame());
+  }
+}
+
 //----------------------------------------------------------------------
 
 nsresult
@@ -1931,6 +1954,11 @@ PresShell::Destroy()
   mFrameConstructor->WillDestroyFrameTree();
   FrameManager()->Destroy();
 
+  NS_WARN_IF_FALSE(!mWeakFrames, """"Weak frames alive after destroying FrameManager"""");
+  while (mWeakFrames) {
+    mWeakFrames->Clear(this);
+  }
+
   // Let the style set do its cleanup.
   mStyleSet->Shutdown(mPresContext);
 
@@ -3172,6 +3200,16 @@ PresShell::NotifyDestroyingFrame(nsIFrame* aFrame)
     mPresContext->PropertyTable()->DeleteAllPropertiesFor(aFrame);
   }
 
+  nsWeakFrame* weakFrame = mWeakFrames;
+  while (weakFrame) {
+    nsWeakFrame* prev = weakFrame->GetPreviousWeakFrame();
+    if (weakFrame->GetFrame() == aFrame) {
+      // This removes weakFrame from mWeakFrames.
+      weakFrame->Clear(this);
+    }
+    weakFrame = prev;
+  }
+
   return NS_OK;
 }
 
diff --git a/layout/generic/nsIFrame.h b/layout/generic/nsIFrame.h
index 05f5fe5..5e69ca1 100644
--- a/layout/generic/nsIFrame.h
+++ b/layout/generic/nsIFrame.h
@@ -1690,6 +1690,64 @@ private:
   NS_IMETHOD_(nsrefcnt) Release(void) = 0;
 };
 
+//----------------------------------------------------------------------
+
+/**
+ * nsWeakFrame can be used to keep a reference to a nsIFrame in a safe way.
+ * Whenever an nsIFrame object is deleted, the nsWeakFrames pointing
+ * to it will be cleared.
+ *
+ * Create nsWeakFrame object when it is sure that nsIFrame object
+ * is alive and after some operations which may destroy the nsIFrame
+ * (for example any DOM modifications) use IsAlive() or GetFrame() methods to
+ * check whether it is safe to continue to use the nsIFrame object.
+ *
+ * @note The usage of this class should be kept to a minimum.
+ */
+
+class nsWeakFrame {
+public:
+  nsWeakFrame(nsIFrame* aFrame)
+  {
+    mPrev = nsnull;
+    mFrame = aFrame;
+    if (mFrame) {
+      nsIPresShell* shell = mFrame->GetPresContext()->GetPresShell();
+      NS_WARN_IF_FALSE(shell, """"Null PresShell in nsWeakFrame!"""");
+      if (shell) {
+        shell->AddWeakFrame(this);
+      } else {
+        mFrame = nsnull;
+      }
+    }
+  }
+
+  void Clear(nsIPresShell* aShell) {
+    if (aShell) {
+      aShell->RemoveWeakFrame(this);
+    }
+    mFrame = nsnull;
+    mPrev = nsnull;
+  }
+
+  PRBool IsAlive() { return !!mFrame; }
+
+  nsIFrame* GetFrame() { return mFrame; }
+
+  nsWeakFrame* GetPreviousWeakFrame() { return mPrev; }
+
+  void SetPreviousWeakFrame(nsWeakFrame* aPrev) { mPrev = aPrev; }
+
+  ~nsWeakFrame()
+  {
+    Clear(mFrame ? mFrame->GetPresContext()->GetPresShell() : nsnull);
+  }
+private:
+  nsWeakFrame*  mPrev;
+  nsIFrame*     mFrame;
+};
+
+
 NS_DEFINE_STATIC_IID_ACCESSOR(nsIFrame, NS_IFRAME_IID)
 
 #endif /* nsIFrame_h___ */
diff --git a/layout/xul/base/src/nsPopupBoxObject.cpp b/layout/xul/base/src/nsPopupBoxObject.cpp
index 181e3df..56bbe33 100644
--- a/layout/xul/base/src/nsPopupBoxObject.cpp
+++ b/layout/xul/base/src/nsPopupBoxObject.cpp
@@ -110,8 +110,11 @@ nsPopupBoxObject::HidePopup()
   nsIPopupSetFrame *popupSet = GetPopupSetFrame();
   nsIFrame *ourFrame = GetFrame(PR_FALSE);
   if (ourFrame && popupSet) {
+    nsWeakFrame weakFrame(ourFrame);
     popupSet->HidePopup(ourFrame);
-    popupSet->DestroyPopup(ourFrame, PR_TRUE);
+    if (weakFrame.IsAlive()) {
+      popupSet->DestroyPopup(ourFrame, PR_TRUE);
+    }
   }
 
   return NS_OK;
diff --git a/layout/xul/base/src/nsPopupSetFrame.cpp b/layout/xul/base/src/nsPopupSetFrame.cpp
index 7db5c58..abbab3f 100644
--- a/layout/xul/base/src/nsPopupSetFrame.cpp
+++ b/layout/xul/base/src/nsPopupSetFrame.cpp
@@ -321,8 +321,9 @@ nsPopupSetFrame::ShowPopup(nsIContent* aElementContent, nsIContent* aPopupConten
                            const nsString& aPopupType, const nsString& anAnchorAlignment,
                            const nsString& aPopupAlignment)
 {
+  nsWeakFrame weakFrame(this);
   // First fire the popupshowing event.
-  if (!OnCreate(aXPos, aYPos, aPopupContent))
+  if (!OnCreate(aXPos, aYPos, aPopupContent) || !weakFrame.IsAlive())
     return NS_OK;
         
   // See if we already have an entry in our list.  We must create a new one on a miss.
@@ -348,6 +349,7 @@ nsPopupSetFrame::ShowPopup(nsIContent* aElementContent, nsIContent* aPopupConten
   entry->mPopupFrame = GetPresContext()->PresShell()
     ->GetPrimaryFrameFor(aPopupContent);
 
+  nsWeakFrame weakPopupFrame(entry->mPopupFrame);
 #ifdef DEBUG_PINK
   printf(""""X Pos: %d\n"""", mXPos);
   printf(""""Y Pos: %d\n"""", mYPos);
@@ -356,18 +358,26 @@ nsPopupSetFrame::ShowPopup(nsIContent* aElementContent, nsIContent* aPopupConten
   // Generate the popup.
   entry->mCreateHandlerSucceeded = PR_TRUE;
   entry->mIsOpen = PR_TRUE;
+  // This may destroy entry->mPopupFrame
   MarkAsGenerated(aPopupContent);
 
   // determine if this menu is a context menu and flag it
-  nsIFrame* activeChild = entry->mPopupFrame;
   nsIMenuParent* childPopup = nsnull;
-  if (activeChild)
-    CallQueryInterface(activeChild, &childPopup);
+  if (weakPopupFrame.IsAlive())
+    CallQueryInterface(weakPopupFrame.GetFrame(), &childPopup);
   if ( childPopup && aPopupType.EqualsLiteral(""""context"""") )
     childPopup->SetIsContextMenu(PR_TRUE);
 
+  if (!weakFrame.IsAlive()) {
+    return NS_OK;
+  }
+
   // Now open the popup.
   OpenPopup(entry, PR_TRUE);
+  
+  if (!weakFrame.IsAlive()) {
+    return NS_OK;
+  }
 
   // Now fire the popupshown event.
   OnCreated(aXPos, aYPos, aPopupContent);
@@ -416,34 +426,37 @@ nsPopupSetFrame::DestroyPopup(nsIFrame* aPopup, PRBool aDestroyEntireChain)
   nsPopupFrameList* entry = mPopupList->GetEntryByFrame(aPopup);
 
   if (entry && entry->mCreateHandlerSucceeded) {    // ensure the popup was created before we try to destroy it
+    nsWeakFrame weakFrame(this);
     OpenPopup(entry, PR_FALSE);
-    entry->mPopupType.SetLength(0);
-  
-    if (aDestroyEntireChain && entry->mElementContent && entry->mPopupType.EqualsLiteral(""""context"""")) {
-      // If we are a context menu, and if we are attached to a
-      // menupopup, then destroying us should also dismiss the parent
-      // menu popup.
-      if (entry->mElementContent->Tag() == nsXULAtoms::menupopup) {
-        nsIFrame* popupFrame = GetPresContext()->PresShell()
-          ->GetPrimaryFrameFor(entry->mElementContent);
-        if (popupFrame) {
-          nsIMenuParent *menuParent;
-          if (NS_SUCCEEDED(CallQueryInterface(popupFrame, &menuParent))) {
-            menuParent->DismissChain();
+    nsCOMPtr<nsIContent> popupContent = entry->mPopupContent;
+    if (weakFrame.IsAlive()) {
+      entry->mPopupType.SetLength(0);
+    
+      if (aDestroyEntireChain && entry->mElementContent && entry->mPopupType.EqualsLiteral(""""context"""")) {
+        // If we are a context menu, and if we are attached to a
+        // menupopup, then destroying us should also dismiss the parent
+        // menu popup.
+        if (entry->mElementContent->Tag() == nsXULAtoms::menupopup) {
+          nsIFrame* popupFrame = GetPresContext()->PresShell()
+            ->GetPrimaryFrameFor(entry->mElementContent);
+          if (popupFrame) {
+            nsIMenuParent *menuParent;
+            if (NS_SUCCEEDED(CallQueryInterface(popupFrame, &menuParent))) {
+              menuParent->DismissChain();
+            }
           }
         }
       }
+  
+      // clear things out for next time
+      entry->mCreateHandlerSucceeded = PR_FALSE;
+      entry->mElementContent = nsnull;
+      entry->mXPos = entry->mYPos = 0;
+      entry->mLastPref.width = -1;
+      entry->mLastPref.height = -1;
     }
-
-    // clear things out for next time
-    entry->mCreateHandlerSucceeded = PR_FALSE;
-    entry->mElementContent = nsnull;
-    entry->mXPos = entry->mYPos = 0;
-    entry->mLastPref.width = -1;
-    entry->mLastPref.height = -1;
-
     // ungenerate the popup.
-    entry->mPopupContent->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menugenerated, PR_TRUE);
+    popupContent->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menugenerated, PR_TRUE);
   }
 
   return NS_OK;
@@ -465,21 +478,26 @@ nsPopupSetFrame::MarkAsGenerated(nsIContent* aPopupContent)
 void
 nsPopupSetFrame::OpenPopup(nsPopupFrameList* aEntry, PRBool aActivateFlag)
 {
+  nsWeakFrame weakFrame(this);
+  nsIFrame* activeChild = aEntry->mPopupFrame;
+  nsWeakFrame weakPopupFrame(activeChild);
+  nsCOMPtr<nsIContent> popupContent = aEntry->mPopupContent;
+  PRBool createHandlerSucceeded = aEntry->mCreateHandlerSucceeded;
+  nsAutoString popupType = aEntry->mPopupType;
   if (aActivateFlag) {
     ActivatePopup(aEntry, PR_TRUE);
 
     // register the rollup listeners, etc, but not if we're a tooltip
-    if (!aEntry->mPopupType.EqualsLiteral(""""tooltip"""")) {
-      nsIFrame* activeChild = aEntry->mPopupFrame;
+    if (!popupType.EqualsLiteral(""""tooltip"""")) {
       nsIMenuParent* childPopup = nsnull;
-      if (activeChild)
+      if (weakPopupFrame.IsAlive())
         CallQueryInterface(activeChild, &childPopup);
 
       // Tooltips don't get keyboard navigation
       if (childPopup && !nsMenuDismissalListener::sInstance) {
         // First check and make sure this popup wants keyboard navigation
-        if (!aEntry->mPopupContent->AttrValueIs(kNameSpaceID_None, nsXULAtoms::ignorekeys,
-                                                nsXULAtoms::_true, eCaseMatters))
+        if (!popupContent->AttrValueIs(kNameSpaceID_None, nsXULAtoms::ignorekeys,
+                                       nsXULAtoms::_true, eCaseMatters))
           childPopup->InstallKeyboardNavigator();
       }
 
@@ -489,28 +507,32 @@ nsPopupSetFrame::OpenPopup(nsPopupFrameList* aEntry, PRBool aActivateFlag)
     }
   }
   else {
-    if (aEntry->mCreateHandlerSucceeded && !OnDestroy(aEntry->mPopupContent))
+    if (createHandlerSucceeded && !OnDestroy(aEntry->mPopupContent))
       return;
 
     // Unregister, but not if we're a tooltip
-    if (!aEntry->mPopupType.EqualsLiteral(""""tooltip"""") ) {
+    if (!popupType.EqualsLiteral(""""tooltip"""") ) {
       nsMenuDismissalListener::Shutdown();
     }
     
     // Remove any keyboard navigators
     nsIMenuParent* childPopup = nsnull;
-    if (aEntry->mPopupFrame)
-      CallQueryInterface(aEntry->mPopupFrame, &childPopup);
+    if (weakPopupFrame.IsAlive())
+      CallQueryInterface(activeChild, &childPopup);
     if (childPopup)
       childPopup->RemoveKeyboardNavigator();
 
+    nsRefPtr<nsPresContext> presContext = GetPresContext();
+    nsCOMPtr<nsIContent> content = aEntry->mPopupContent;
     ActivatePopup(aEntry, PR_FALSE);
 
-    OnDestroyed(aEntry->mPopupContent);
+    OnDestroyed(presContext, content);
   }
 
-  nsBoxLayoutState state(GetPresContext());
-  MarkDirtyChildren(state); // Mark ourselves dirty.
+  if (weakFrame.IsAlive()) {
+    nsBoxLayoutState state(GetPresContext());
+    MarkDirtyChildren(state); // Mark ourselves dirty.
+  }
 }
 
 void
@@ -524,23 +546,25 @@ nsPopupSetFrame::ActivatePopup(nsPopupFrameList* aEntry, PRBool aActivateFlag)
       // XXXben hook in |width| and |height| usage here? 
       aEntry->mPopupContent->SetAttr(kNameSpaceID_None, nsXULAtoms::menutobedisplayed, NS_LITERAL_STRING(""""true""""), PR_TRUE);
     else {
-      aEntry->mPopupContent->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menuactive, PR_TRUE);
-      aEntry->mPopupContent->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menutobedisplayed, PR_TRUE);
+      nsWeakFrame weakFrame(this);
+      nsWeakFrame weakActiveChild(aEntry->mPopupFrame);
+      nsCOMPtr<nsIContent> content = aEntry->mPopupContent;
+      content->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menuactive, PR_TRUE);
+      content->UnsetAttr(kNameSpaceID_None, nsXULAtoms::menutobedisplayed, PR_TRUE);
 
       // get rid of the reflows we just created. If we leave them hanging around, we
       // can get into trouble if a dialog with a modal event loop comes along and
       // processes the reflows before we get to call DestroyChain(). Processing the
       // reflow will cause the popup to show itself again. (bug 71219)
-      nsIDocument* doc = aEntry->mPopupContent->GetDocument();
+      nsIDocument* doc = content->GetDocument();
       if (doc)
         doc->FlushPendingNotifications(Flush_OnlyReflow);
-         
+
       // make sure we hide the popup. We can't assume that we'll have a view
       // since we could be cleaning up after someone that didn't correctly 
       // destroy the popup.
-      nsIFrame* activeChild = aEntry->mPopupFrame;
-      if (activeChild) {
-        nsIView* view = activeChild->GetView();
+      if (weakFrame.IsAlive() && weakActiveChild.IsAlive()) {
+        nsIView* view = weakActiveChild.GetFrame()->GetView();
         NS_ASSERTION(view, """"View is gone, looks like someone forgot to roll up the popup!"""");
         if (view) {
           nsIViewManager* viewManager = view->GetViewManager();
@@ -549,7 +573,7 @@ nsPopupSetFrame::ActivatePopup(nsPopupFrameList* aEntry, PRBool aActivateFlag)
           viewManager->ResizeView(view, r);
           if (aEntry->mIsOpen) {
             aEntry->mIsOpen = PR_FALSE;
-            FireDOMEventSynch(NS_LITERAL_STRING(""""DOMMenuInactive""""), aEntry->mPopupContent);
+            FireDOMEventSynch(NS_LITERAL_STRING(""""DOMMenuInactive""""), content);
           }
         }
       }
@@ -570,6 +594,7 @@ nsPopupSetFrame::OnCreate(PRInt32 aX, PRInt32 aY, nsIContent* aPopupContent)
   event.refPoint.y = aY;
 
   if (aPopupContent) {
+    nsCOMPtr<nsIContent> kungFuDeathGrip(aPopupContent);
     nsIPresShell *shell = GetPresContext()->GetPresShell();
     if (shell) {
       nsresult rv = shell->HandleDOMEventWithTarget(aPopupContent, &event,
@@ -672,14 +697,15 @@ nsPopupSetFrame::OnDestroy(nsIContent* aPopupContent)
 }
 
 PRBool
-nsPopupSetFrame::OnDestroyed(nsIContent* aPopupContent)
+nsPopupSetFrame::OnDestroyed(nsPresContext* aPresContext,
+                             nsIContent* aPopupContent)
 {
   nsEventStatus status = nsEventStatus_eIgnore;
   nsMouseEvent event(PR_TRUE, NS_XUL_POPUP_HIDDEN, nsnull,
                      nsMouseEvent::eReal);
 
-  if (aPopupContent) {
-    nsIPresShell *shell = GetPresContext()->GetPresShell();
+  if (aPopupContent && aPresContext) {
+    nsIPresShell *shell = aPresContext->GetPresShell();
     if (shell) {
       nsresult rv = shell->HandleDOMEventWithTarget(aPopupContent, &event,
                                                     &status);
diff --git a/layout/xul/base/src/nsPopupSetFrame.h b/layout/xul/base/src/nsPopupSetFrame.h
index d6e917c..68bd16a 100644
--- a/layout/xul/base/src/nsPopupSetFrame.h
+++ b/layout/xul/base/src/nsPopupSetFrame.h
@@ -117,7 +117,8 @@ public:
   PRBool OnCreate(PRInt32 aX, PRInt32 aY, nsIContent* aPopupContent);
   PRBool OnDestroy(nsIContent* aPopupContent);
   PRBool OnCreated(PRInt32 aX, PRInt32 aY, nsIContent* aPopupContent);
-  PRBool OnDestroyed(nsIContent* aPopupContent);
+  static PRBool OnDestroyed(nsPresContext* aPresContext,
+                            nsIContent* aPopupContent);
 
   void ActivatePopup(nsPopupFrameList* aEntry, PRBool aActivateFlag);
   void OpenPopup(nsPopupFrameList* aEntry, PRBool aOpenFlag);"""
1c28781a91cc9c895f615f1e636aa729896a6838,118753,342960,mrbkap%gmail.com,"Protect against overly-large reallocations. bug 342960, r=brendan a=dveditz
",1151809506,"""diff --git a/js/src/jsarena.h b/js/src/jsarena.h
index 36e6ac5..5370f8f 100644
--- a/js/src/jsarena.h
+++ b/js/src/jsarena.h
@@ -150,7 +150,7 @@ struct JSArenaPool {
         if (_a->avail == (jsuword)(p) + JS_ARENA_ALIGN(pool, size)) {         \
             size_t _nb = (size) + (incr);                                     \
             _nb = JS_ARENA_ALIGN(pool, _nb);                                  \
-            if ((jsuword)(p) <= _a->limit - _nb) {                            \
+            if (_a->limit >= _nb && (jsuword)(p) <= _a->limit - _nb) {        \
                 _a->avail = (jsuword)(p) + _nb;                               \
                 JS_ArenaCountInplaceGrowth(pool, size, incr);                 \
             } else if ((jsuword)(p) == _a->base) {                            \"""
2317062306f21a7f3a69546b0d443e69dbe0e97d,118767,341956,igor.bukanov%gmail.com,"Bug 341956: Reorder id allocation to avoid delays with their access. r=mrbkap,sr=brendan
",1151782174,"""diff --git a/js/src/jsarray.c b/js/src/jsarray.c
index 55bb0db..2169a62 100644
--- a/js/src/jsarray.c
+++ b/js/src/jsarray.c
@@ -682,12 +682,23 @@ array_reverse(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     jsuint len, half, i;
     jsid id, id2;
     jsval *tmproot, *tmproot2;
-    JSBool idexists, id2exists;
+    JSBool idexists, id2exists, ok;
 
     if (!js_GetLengthProperty(cx, obj, &len))
         return JS_FALSE;
 
     /*
+     * When len > JSVAL_INT_MAX + 1 the loop below accesses indexes greater
+     * than JSVAL_INT_MAX. For such indexes the corresponding ids are atoms.
+     * We use JS_KEEP_ATOMS to protect them against GC since OBJ_GET_PROPERTY
+     * can potentially execute an arbitrary script. See bug 341956.
+     *
+     * After this point control must flow through label out: to exit.
+     */
+    if (len > JSVAL_INT_MAX + 1)
+        JS_KEEP_ATOMS(cx->runtime);
+
+    /*
      * Use argv[argc] and argv[argc + 1] as local roots to hold temporarily
      * array elements for GC-safe swap.
      */
@@ -695,44 +706,51 @@ array_reverse(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     tmproot2 = argv + argc + 1;
     half = len / 2;
     for (i = 0; i < half; i++) {
-        if (!IndexToId(cx, i, &id))
-            return JS_FALSE;
-        if (!IndexToId(cx, len - i - 1, &id2))
-            return JS_FALSE;
-
-        /* Check for holes to make sure they don't get filled. */
-        if (!PropertyExists(cx, obj, id, &idexists) ||
-            !PropertyExists(cx, obj, id2, &id2exists)) {
-            return JS_FALSE;
-        }
-
         /*
-         * Get both of the values now. Note that we don't use v, or v2 based on
-         * idexists and id2exists.
+         * Get both values while checking for holes to make sure they don't
+         * get filled.
          */
-        if (!OBJ_GET_PROPERTY(cx, obj, id, tmproot) ||
-            !OBJ_GET_PROPERTY(cx, obj, id2, tmproot2)) {
-            return JS_FALSE;
-        }
+        if (!IndexToId(cx, i, &id))
+            goto bad;
+        if (!PropertyExists(cx, obj, id, &idexists))
+            goto bad;
+        if (idexists && !OBJ_GET_PROPERTY(cx, obj, id, tmproot))
+            goto bad;
+
+        if (!IndexToId(cx, len - i - 1, &id2))
+            goto bad;
+        if (!PropertyExists(cx, obj, id2, &id2exists))
+            goto bad;
+        if (id2exists && !OBJ_GET_PROPERTY(cx, obj, id2, tmproot2))
+            goto bad;
 
+        /* Exchange the values. */
         if (idexists) {
             if (!OBJ_SET_PROPERTY(cx, obj, id2, tmproot))
-                return JS_FALSE;
+                goto bad;
         } else {
             if (!OBJ_DELETE_PROPERTY(cx, obj, id2, tmproot))
-                return JS_FALSE;
+                goto bad;
         }
         if (id2exists) {
             if (!OBJ_SET_PROPERTY(cx, obj, id, tmproot2))
-                return JS_FALSE;
+                goto bad;
         } else {
             if (!OBJ_DELETE_PROPERTY(cx, obj, id, tmproot2))
-                return JS_FALSE;
+                goto bad;
         }
     }
+    ok = JS_TRUE;
 
+  out:
+    if (len > JSVAL_INT_MAX + 1)
+        JS_UNKEEP_ATOMS(cx->runtime);
     *rval = OBJECT_TO_JSVAL(obj);
-    return JS_TRUE;
+    return ok;
+
+  bad:
+    ok = JS_FALSE;
+    goto out;
 }
 
 typedef struct HSortArgs {
@@ -1109,20 +1127,26 @@ array_pop(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
     jsuint index;
     jsid id;
+    JSBool ok;
     jsval junk;
 
     if (!js_GetLengthProperty(cx, obj, &index))
         return JS_FALSE;
     if (index > 0) {
         index--;
-        if (!IndexToId(cx, index, &id))
-            return JS_FALSE;
 
         /* Get the to-be-deleted property's value into rval. */
-        if (!OBJ_GET_PROPERTY(cx, obj, id, rval))
+        if (!IndexToId(cx, index, &id))
             return JS_FALSE;
 
-        if (!OBJ_DELETE_PROPERTY(cx, obj, id, &junk))
+        /* See comments in array_reverse. */
+        if (index > JSVAL_INT_MAX)
+            JS_KEEP_ATOMS(cx->runtime);
+        ok = OBJ_GET_PROPERTY(cx, obj, id, rval) &&
+             OBJ_DELETE_PROPERTY(cx, obj, id, &junk);
+        if (index > JSVAL_INT_MAX)
+            JS_UNKEEP_ATOMS(cx->runtime);
+        if (!ok)
             return JS_FALSE;
     }
     return js_SetLengthProperty(cx, obj, index);
@@ -1152,10 +1176,12 @@ array_shift(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
             for (i = 1; i <= length; i++) {
                 if (!IndexToId(cx, i, &id))
                     return JS_FALSE;
-                if (!IndexToId(cx, i - 1, &id2))
-                    return JS_FALSE;
                 if (!OBJ_GET_PROPERTY(cx, obj, id, &argv[0]))
                     return JS_FALSE;
+
+                /* Get id after value to avoid nested GC hazards. */
+                if (!IndexToId(cx, i - 1, &id2))
+                    return JS_FALSE;
                 if (!OBJ_SET_PROPERTY(cx, obj, id2, &argv[0]))
                     return JS_FALSE;
             }
@@ -1187,16 +1213,21 @@ array_unshift(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
             while (last--) {
                 if (!IndexToExistingId(cx, obj, last, &id))
                     return JS_FALSE;
+                if (id != JSID_HOLE) {
+                    if (!OBJ_GET_PROPERTY(cx, obj, id, vp))
+                        return JS_FALSE;
+                }
+
+                /* Get id after value to avoid nested GC hazards. */
                 if (!IndexToId(cx, last + argc, &id2))
                     return JS_FALSE;
                 if (id == JSID_HOLE) {
-                    OBJ_DELETE_PROPERTY(cx, obj, id2, &junk);
-                    continue;
+                    if (!OBJ_DELETE_PROPERTY(cx, obj, id2, &junk))
+                        return JS_FALSE;
+                } else {
+                    if (!OBJ_SET_PROPERTY(cx, obj, id2, vp))
+                        return JS_FALSE;
                 }
-                if (!OBJ_GET_PROPERTY(cx, obj, id, vp))
-                    return JS_FALSE;
-                if (!OBJ_SET_PROPERTY(cx, obj, id2, vp))
-                    return JS_FALSE;
             }
         }
 
@@ -1291,6 +1322,8 @@ array_splice(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
                 continue;       /* don't fill holes in the new array */
             if (!OBJ_GET_PROPERTY(cx, obj, id, vp))
                 return JS_FALSE;
+
+            /* Get id after value to avoid nested GC hazards. */
             if (!IndexToId(cx, last - begin, &id2))
                 return JS_FALSE;
             if (!OBJ_SET_PROPERTY(cx, obj2, id2, vp))
@@ -1309,11 +1342,15 @@ array_splice(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         while (last-- > end) {
             if (!IndexToExistingId(cx, obj, last, &id))
                 return JS_FALSE;
-            if (!IndexToId(cx, last + delta, &id2))
-                return JS_FALSE;
             if (id != JSID_HOLE) {
                 if (!OBJ_GET_PROPERTY(cx, obj, id, vp))
                     return JS_FALSE;
+            }
+
+            /* Get id after value to avoid nested GC hazards. */
+            if (!IndexToId(cx, last + delta, &id2))
+                return JS_FALSE;
+            if (id != JSID_HOLE) {
                 if (!OBJ_SET_PROPERTY(cx, obj, id2, vp))
                     return JS_FALSE;
             } else {
@@ -1327,11 +1364,15 @@ array_splice(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         for (last = end; last < length; last++) {
             if (!IndexToExistingId(cx, obj, last, &id))
                 return JS_FALSE;
-            if (!IndexToId(cx, last - delta, &id2))
-                return JS_FALSE;
             if (id != JSID_HOLE) {
                 if (!OBJ_GET_PROPERTY(cx, obj, id, vp))
                     return JS_FALSE;
+            }
+
+            /* Get id after value to avoid nested GC hazards. */
+            if (!IndexToId(cx, last - delta, &id2))
+                return JS_FALSE;
+            if (id != JSID_HOLE) {
                 if (!OBJ_SET_PROPERTY(cx, obj, id2, vp))
                     return JS_FALSE;
             } else {
@@ -1406,6 +1447,8 @@ array_concat(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
                     }
                     if (!OBJ_GET_PROPERTY(cx, aobj, id, vp))
                         return JS_FALSE;
+
+                    /* Get id after value to avoid nested GC hazards. */
                     if (!IndexToId(cx, length + slot, &id2))
                         return JS_FALSE;
                     if (!OBJ_SET_PROPERTY(cx, nobj, id2, vp))
@@ -1488,6 +1531,8 @@ array_slice(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
             continue;
         if (!OBJ_GET_PROPERTY(cx, obj, id, vp))
             return JS_FALSE;
+
+        /* Get id after value to avoid nested GC hazards. */
         if (!IndexToId(cx, slot - begin, &id2))
             return JS_FALSE;
         if (!OBJ_SET_PROPERTY(cx, nobj, id2, vp))
@@ -1704,6 +1749,15 @@ array_extra(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval,
           case FOREACH:
             break;
           case MAP:
+            /*
+             * We reconstruct id once again when it is a GC thing since scripts
+             * can trigger GC that collects it. See bug 341956.
+             */
+            if (i > JSVAL_INT_MAX) {
+                ok = IndexToId(cx, i, &id);
+                if (!ok)
+                    goto out;
+            }
             ok = OBJ_SET_PROPERTY(cx, newarr, id, &rval2);
             if (!ok)
                 goto out;"""
c577944ee70d316510a1cf620c6e0c234be092b8,118970,339246,bmlk%gmx.de,"reset column info for all cellmaps if they need to be reset, bug 339246 r/sr=bzbarsky
",1151520970,"""diff --git a/layout/tables/nsCellMap.cpp b/layout/tables/nsCellMap.cpp
index 23d4e2d..6ec64c5 100644
--- a/layout/tables/nsCellMap.cpp
+++ b/layout/tables/nsCellMap.cpp
@@ -507,6 +507,26 @@ nsTableCellMap::RemoveColsAtEnd()
   }
 }
 
+void 
+nsTableCellMap::ClearCols()
+{
+  PRInt32 numCols = GetColCount();
+  for (PRInt32 colX = numCols - 1; (colX >= 0);colX--) {
+    nsColInfo* colInfo = (nsColInfo*)mCols.ElementAt(colX);  
+    delete colInfo;
+    mCols.RemoveElementAt(colX);
+    if (mBCInfo) { 
+      PRInt32 count = mBCInfo->mBottomBorders.Count();
+      if (colX < count) {
+        BCData* bcData = (BCData*)mBCInfo->mBottomBorders.ElementAt(colX);
+        if (bcData) {
+              delete bcData;
+        }
+        mBCInfo->mBottomBorders.RemoveElementAt(colX);
+      }
+    }
+  }
+}
 void
 nsTableCellMap::InsertRows(nsTableRowGroupFrame& aParent,
                            nsVoidArray&          aRows,
@@ -698,6 +718,69 @@ nsTableCellMap::RemoveCell(nsTableCellFrame* aCellFrame,
   NS_ERROR(""""nsTableCellMap::RemoveCell - could not remove cell"""");
 }
 
+void
+SetDamageArea(PRInt32 aXOrigin,
+              PRInt32 aYOrigin,
+              PRInt32 aWidth,
+              PRInt32 aHeight,
+              nsRect& aDamageArea)
+{
+  aDamageArea.x      = aXOrigin;
+  aDamageArea.y      = aYOrigin;
+  aDamageArea.width  = PR_MAX(1, aWidth);
+  aDamageArea.height = PR_MAX(1, aHeight);
+}
+
+void 
+nsTableCellMap::RebuildConsideringCells(nsCellMap*      aCellMap,
+                                        nsVoidArray*    aCellFrames,
+                                        PRInt32         aRowIndex,
+                                        PRInt32         aColIndex,
+                                        PRBool          aInsert,
+                                        nsRect&         aDamageArea)
+{
+  PRInt32 numOrigCols = GetColCount();
+  ClearCols();
+  nsCellMap* cellMap = mFirstMap;
+  PRInt32 rowCount = 0;
+  while (cellMap) {
+    if (cellMap == aCellMap) {
+      cellMap->RebuildConsideringCells(*this, numOrigCols, aCellFrames, aRowIndex, aColIndex, aInsert, aDamageArea);
+      
+    }
+    else {
+      cellMap->RebuildConsideringCells(*this, numOrigCols, nsnull, -1, 0, PR_FALSE, aDamageArea);
+    }
+    rowCount += cellMap->GetRowCount();
+    cellMap = cellMap->GetNextSibling();
+  }
+  SetDamageArea(0, 0, GetColCount(), rowCount, aDamageArea);
+}
+
+void 
+nsTableCellMap::RebuildConsideringRows(nsCellMap*      aCellMap,
+                                       PRInt32         aStartRowIndex,
+                                       nsVoidArray*    aRowsToInsert,
+                                       PRBool          aNumRowsToRemove,
+                                       nsRect&         aDamageArea)
+{
+  PRInt32 numOrigCols = GetColCount();
+  ClearCols();
+  nsCellMap* cellMap = mFirstMap;
+  PRInt32 rowCount = 0;
+  while (cellMap) {
+    if (cellMap == aCellMap) {
+      cellMap->RebuildConsideringRows(*this, numOrigCols, aStartRowIndex, aRowsToInsert, aNumRowsToRemove, aDamageArea);
+    }
+    else {
+      cellMap->RebuildConsideringCells(*this, numOrigCols, nsnull, -1, 0, PR_FALSE, aDamageArea);
+    }
+    rowCount += cellMap->GetRowCount();
+    cellMap = cellMap->GetNextSibling();
+  }
+  SetDamageArea(0, 0, GetColCount(), rowCount, aDamageArea);
+}
+
 PRInt32 
 nsTableCellMap::GetNumCellsOriginatingInCol(PRInt32 aColIndex) const
 {
@@ -1197,7 +1280,7 @@ nsCellMap::InsertRows(nsTableCellMap& aMap,
   }
 
   if (spansCauseRebuild) {
-    RebuildConsideringRows(aMap, aFirstRowIndex, &aRows, 0, aDamageArea);
+    aMap.RebuildConsideringRows(this, aFirstRowIndex, &aRows, 0, aDamageArea);
   }
   else {
     ExpandWithRows(aMap, aRows, aFirstRowIndex, aDamageArea);
@@ -1230,25 +1313,14 @@ nsCellMap::RemoveRows(nsTableCellMap& aMap,
                                               0, numCols - 1);
 
   if (spansCauseRebuild) {
-    RebuildConsideringRows(aMap, aFirstRowIndex, nsnull, aNumRowsToRemove, aDamageArea);
+    aMap.RebuildConsideringRows(this, aFirstRowIndex, nsnull, aNumRowsToRemove, aDamageArea);
   }
   else {
     ShrinkWithoutRows(aMap, aFirstRowIndex, aNumRowsToRemove, aDamageArea);
   }
 }
 
-void
-SetDamageArea(PRInt32 aXOrigin,
-              PRInt32 aYOrigin,
-              PRInt32 aWidth,
-              PRInt32 aHeight,
-              nsRect& aDamageArea)
-{
-  aDamageArea.x      = aXOrigin;
-  aDamageArea.y      = aYOrigin;
-  aDamageArea.width  = PR_MAX(1, aWidth);
-  aDamageArea.height = PR_MAX(1, aHeight);
-}
+
 
 
 CellData* 
@@ -1298,7 +1370,7 @@ nsCellMap::AppendCell(nsTableCellMap&   aMap,
   if (aRebuildIfNecessary && (aRowIndex < mRowCount - 1) && (rowSpan > 1)) {
     nsAutoVoidArray newCellArray;
     newCellArray.AppendElement(aCellFrame);
-    RebuildConsideringCells(aMap, &newCellArray, aRowIndex, startColIndex, PR_TRUE, aDamageArea);
+    aMap.RebuildConsideringCells(this, &newCellArray, aRowIndex, startColIndex, PR_TRUE, aDamageArea);
     return origData;
   }
   mRowCount = PR_MAX(mRowCount, aRowIndex + 1);
@@ -1519,7 +1591,7 @@ void nsCellMap::InsertCells(nsTableCellMap& aMap,
   }
 
   if (spansCauseRebuild) {
-    RebuildConsideringCells(aMap, &aCellFrames, aRowIndex, startColIndex, PR_TRUE, aDamageArea);
+    aMap.RebuildConsideringCells(this, &aCellFrames, aRowIndex, startColIndex, PR_TRUE, aDamageArea);
   }
   else {
     ExpandWithCells(aMap, aCellFrames, aRowIndex, startColIndex, rowSpan, zeroRowSpan, aDamageArea);
@@ -1928,6 +2000,7 @@ void nsCellMap::ShrinkWithoutCell(nsTableCellMap&   aMap,
 
 void
 nsCellMap::RebuildConsideringRows(nsTableCellMap& aMap,
+                                  PRInt32         aNumOrigCols,
                                   PRInt32         aStartRowIndex,
                                   nsVoidArray*    aRowsToInsert,
                                   PRBool          aNumRowsToRemove,
@@ -1936,7 +2009,6 @@ nsCellMap::RebuildConsideringRows(nsTableCellMap& aMap,
   NS_ASSERTION(!!aMap.mBCInfo == mIsBC, """"BC state mismatch"""");
   // copy the old cell map into a new array
   PRInt32 numOrigRows = mRows.Count();
-  PRInt32 numOrigCols = aMap.GetColCount();
   void** origRows = new void*[numOrigRows];
   if (!origRows) return;
   PRInt32 rowX, colX;
@@ -1945,10 +2017,7 @@ nsCellMap::RebuildConsideringRows(nsTableCellMap& aMap,
     nsVoidArray* row = (nsVoidArray *)mRows.ElementAt(rowX);
     origRows[rowX] = row;
   }
-  for (colX = 0; colX < numOrigCols; colX++) {
-    nsColInfo* colInfo = aMap.GetColInfoAt(colX);
-    colInfo->mNumCellsOrig = 0;
-  }
+  
 
   mRows.Clear();
   // adjust mRowCount based on the function arguments as they are known to
@@ -1963,7 +2032,7 @@ nsCellMap::RebuildConsideringRows(nsTableCellMap& aMap,
   for (rowX = 0; rowX < aStartRowIndex; rowX++) {
     nsVoidArray* row = (nsVoidArray *)origRows[rowX];
     PRInt32 numCols = row->Count();
-    for (colX = 0; colX < numCols; colX++) {
+    for (colX = 0; colX < aNumOrigCols; colX++) {
       // put in the original cell from the cell map
       CellData* data = (CellData*) row->ElementAt(colX);
       if (data && data->IsOrig()) {
@@ -2024,6 +2093,7 @@ nsCellMap::RebuildConsideringRows(nsTableCellMap& aMap,
 }
 
 void nsCellMap::RebuildConsideringCells(nsTableCellMap& aMap,
+                                        PRInt32         aNumOrigCols,
                                         nsVoidArray*    aCellFrames,
                                         PRInt32         aRowIndex,
                                         PRInt32         aColIndex,
@@ -2034,7 +2104,7 @@ void nsCellMap::RebuildConsideringCells(nsTableCellMap& aMap,
   // copy the old cell map into a new array
   PRInt32 mRowCountOrig = mRowCount;
   PRInt32 numOrigRows   = mRows.Count();
-  PRInt32 numOrigCols   = aMap.GetColCount();
+ 
   void** origRows = new void*[numOrigRows];
   if (!origRows) return;
   PRInt32 rowX;
@@ -2052,8 +2122,8 @@ void nsCellMap::RebuildConsideringCells(nsTableCellMap& aMap,
   PRInt32 numNewCells = (aCellFrames) ? aCellFrames->Count() : 0;
   
   // the new cells might extend the previous column number
-  NS_ASSERTION(numOrigCols >= aColIndex, """"Appending cells far beyond cellmap data?!"""");
-  PRInt32 numCols = aInsert ? PR_MAX(numOrigCols, aColIndex + 1) : numOrigCols;  
+  NS_ASSERTION(aNumOrigCols >= aColIndex, """"Appending cells far beyond cellmap data?!"""");
+  PRInt32 numCols = aInsert ? PR_MAX(aNumOrigCols, aColIndex + 1) : aNumOrigCols;  
   
   // build the new cell map 
   for (rowX = 0; rowX < numOrigRows; rowX++) {
@@ -2094,9 +2164,7 @@ void nsCellMap::RebuildConsideringCells(nsTableCellMap& aMap,
     }
     delete row;
   }
-  delete [] origRows;
-
-  SetDamageArea(0, 0, aMap.GetColCount(), GetRowCount(), aDamageArea); 
+  delete [] origRows; 
 }
 
 void nsCellMap::RemoveCell(nsTableCellMap&   aMap,
@@ -2133,7 +2201,7 @@ void nsCellMap::RemoveCell(nsTableCellMap&   aMap,
     spansCauseRebuild = PR_TRUE;
 
   if (spansCauseRebuild) {
-    RebuildConsideringCells(aMap, nsnull, aRowIndex, startColIndex, PR_FALSE, aDamageArea);
+    aMap.RebuildConsideringCells(this, nsnull, aRowIndex, startColIndex, PR_FALSE, aDamageArea);
   }
   else {
     ShrinkWithoutCell(aMap, *aCellFrame, aRowIndex, startColIndex, aDamageArea);
diff --git a/layout/tables/nsCellMap.h b/layout/tables/nsCellMap.h
index 1b949a3..f19f74a 100644
--- a/layout/tables/nsCellMap.h
+++ b/layout/tables/nsCellMap.h
@@ -124,7 +124,8 @@ public:
   void RemoveCell(nsTableCellFrame* aCellFrame,
                   PRInt32           aRowIndex,
                   nsRect&           aDamageArea);
-
+  /** Remove the previously gathered column information */
+  void ClearCols();
   void InsertRows(nsTableRowGroupFrame& aRowGroup,
                   nsVoidArray&          aRows,
                   PRInt32               aFirstRowIndex,
@@ -165,6 +166,18 @@ public:
 
   PRBool RowIsSpannedInto(PRInt32 aRowIndex, PRInt32 aNumEffCols);
   PRBool RowHasSpanningCells(PRInt32 aRowIndex, PRInt32 aNumEffCols);
+  void RebuildConsideringCells(nsCellMap*      aCellMap,
+                               nsVoidArray*    aCellFrames,
+                               PRInt32         aRowIndex,
+                               PRInt32         aColIndex,
+                               PRBool          aInsert,
+                               nsRect&         aDamageArea);
+  void RebuildConsideringRows(nsCellMap*      aCellMap,
+                              PRInt32         aStartRowIndex,
+                              nsVoidArray*    aRowsToInsert,
+                              PRBool          aNumRowsToRemove,
+                              nsRect&         aDamageArea);
+
   PRBool ColIsSpannedInto(PRInt32 aColIndex);
   PRBool ColHasSpanningCells(PRInt32 aColIndex);
 
@@ -403,12 +416,14 @@ protected:
                          nsRect&           aDamageArea);
 
   void RebuildConsideringRows(nsTableCellMap& aMap,
+                              PRInt32         aNumOrigCols,
                               PRInt32         aStartRowIndex,
                               nsVoidArray*    aRowsToInsert,
                               PRInt32         aNumRowsToRemove,
                               nsRect&         aDamageArea);
 
   void RebuildConsideringCells(nsTableCellMap& aMap,
+                               PRInt32         aNumOrigCols,
                                nsVoidArray*    aCellFrames,
                                PRInt32         aRowIndex,
                                PRInt32         aColIndex,"""
2c27f29b83179d93b9983afbe6d09195d6d40905,119068,340107,dveditz%cruzio.com,"bug 340107 save wasted cycles checking permissions if we're just going to deny access anyway. r=mrbkap, sr=sicking
",1151369801,"""diff --git a/caps/src/nsScriptSecurityManager.cpp b/caps/src/nsScriptSecurityManager.cpp
index fad1c51..326702e 100644
--- a/caps/src/nsScriptSecurityManager.cpp
+++ b/caps/src/nsScriptSecurityManager.cpp
@@ -942,6 +942,12 @@ nsScriptSecurityManager::CheckSameOriginDOMProp(nsIPrincipal* aSubject,
         return NS_OK;
 
     /*
+    * Content can't ever touch chrome (we check for UniversalXPConnect later)
+    */
+    if (aObject == mSystemPrincipal)
+        return NS_ERROR_DOM_PROP_ACCESS_DENIED;
+
+    /*
     * If we failed the origin tests it still might be the case that we
     * are a signed script and have permissions to do this operation.
     * Check for that here.
diff --git a/content/base/src/nsContentUtils.cpp b/content/base/src/nsContentUtils.cpp
index 15f6c09..abd8c82 100644
--- a/content/base/src/nsContentUtils.cpp
+++ b/content/base/src/nsContentUtils.cpp
@@ -747,8 +747,17 @@ nsContentUtils::CanCallerAccess(nsIDOMNode *aNode)
   nsCOMPtr<nsINode> node = do_QueryInterface(aNode);
   NS_ENSURE_TRUE(node, PR_FALSE);
 
+  nsIPrincipal* nodePrincipal = node->NodePrincipal();
+  if (nodePrincipal == systemPrincipal) {
+    // we already know subjectPrincipal isn't the systemPrincipal so if
+    // the object principal is they cannot match. Bail out now to
+    // avoid wasting time in CheckSameOriginPrincipal
+
+    return PR_FALSE;
+  }
+
   nsresult rv = sSecurityManager->
-    CheckSameOriginPrincipal(subjectPrincipal, node->NodePrincipal());
+    CheckSameOriginPrincipal(subjectPrincipal, nodePrincipal);
   if (NS_SUCCEEDED(rv)) {
     return PR_TRUE;
   }"""
44c4148643a74739b506539ad304d0e5dc4708b5,119165,337462,mrbkap%gmail.com,"Keep a strong reference to the context that we're operating on. This involves
giving the sandbox context an nsISupports private data that controls its
lifetime. bug 337462, r+sr=jst
",1151123604,"""diff --git a/js/src/xpconnect/src/xpccomponents.cpp b/js/src/xpconnect/src/xpccomponents.cpp
index 3b34c86..5ccd59c 100644
--- a/js/src/xpconnect/src/xpccomponents.cpp
+++ b/js/src/xpconnect/src/xpccomponents.cpp
@@ -2394,6 +2394,36 @@ nsXPCComponents_utils_Sandbox::CallOrConstruct(nsIXPConnectWrappedNative *wrappe
 #endif
 }
 
+class ContextHolder : public nsISupports
+{
+public:
+    ContextHolder(JSContext *aOuterCx, JSObject *aSandbox);
+
+    JSContext * GetJSContext()
+    {
+        return mJSContext;
+    }
+
+    NS_DECL_ISUPPORTS
+
+private:
+    XPCAutoJSContext mJSContext;
+};
+
+NS_IMPL_ISUPPORTS0(ContextHolder)
+
+ContextHolder::ContextHolder(JSContext *aOuterCx, JSObject *aSandbox)
+    : mJSContext(JS_NewContext(JS_GetRuntime(aOuterCx), 1024), JS_FALSE)
+{
+    if (mJSContext) {
+        JS_SetOptions(mJSContext,
+                      JSOPTION_DONT_REPORT_UNCAUGHT |
+                      JSOPTION_PRIVATE_IS_NSISUPPORTS);
+        JS_SetGlobalObject(mJSContext, aSandbox);
+        JS_SetContextPrivate(mJSContext, this);
+    }
+}
+
 /***************************************************************************/
 
 /* void evalInSandbox(in AString source, in nativeobj sandbox); */
@@ -2460,21 +2490,18 @@ nsXPCComponents_Utils::EvalInSandbox(const nsAString &source)
         return NS_ERROR_FAILURE;
     }
 
-    XPCAutoJSContext sandcx(JS_NewContext(JS_GetRuntime(cx), 1024), false);
-    if(!sandcx) {
+    nsRefPtr<ContextHolder> sandcx = new ContextHolder(cx, sandbox);
+    if(!sandcx || !sandcx->GetJSContext()) {
         JS_ReportError(cx, """"Can't prepare context for evalInSandbox"""");
         JSPRINCIPALS_DROP(cx, jsPrincipals);
         return NS_ERROR_OUT_OF_MEMORY;
     }
 
-    JS_SetOptions(sandcx, JSOPTION_DONT_REPORT_UNCAUGHT);
-    JS_SetGlobalObject(sandcx, sandbox);
-
     XPCPerThreadData *data = XPCPerThreadData::GetData();
     XPCJSContextStack *stack;
     PRBool popContext = PR_FALSE;
     if (data && (stack = data->GetJSContextStack())) {
-        if (NS_FAILED(stack->Push(sandcx))) {
+        if (NS_FAILED(stack->Push(sandcx->GetJSContext()))) {
             JS_ReportError(cx,
                     """"Unable to initialize XPConnect with the sandbox context"""");
             JSPRINCIPALS_DROP(cx, jsPrincipals);
@@ -2500,15 +2527,16 @@ nsXPCComponents_Utils::EvalInSandbox(const nsAString &source)
         }
     }
 
-    AutoJSRequestWithNoCallContext req(sandcx);
-    if (!JS_EvaluateUCScriptForPrincipals(sandcx, sandbox, jsPrincipals,
+    AutoJSRequestWithNoCallContext req(sandcx->GetJSContext());
+    if (!JS_EvaluateUCScriptForPrincipals(sandcx->GetJSContext(), sandbox,
+                                          jsPrincipals,
                                           NS_REINTERPRET_CAST(const jschar *,
                                               PromiseFlatString(source).get()),
                                           source.Length(), filename.get(),
                                           lineNo, rval)) {
         jsval exn;
-        if (JS_GetPendingException(sandcx, &exn)) {
-            AutoJSSuspendRequestWithNoCallContext sus(sandcx);
+        if (JS_GetPendingException(sandcx->GetJSContext(), &exn)) {
+            AutoJSSuspendRequestWithNoCallContext sus(sandcx->GetJSContext());
             AutoJSRequestWithNoCallContext cxreq(cx);
 
             JS_SetPendingException(cx, exn);
diff --git a/security/manager/ssl/src/nsCrypto.cpp b/security/manager/ssl/src/nsCrypto.cpp
index a92a99e..c5002f0 100644
--- a/security/manager/ssl/src/nsCrypto.cpp
+++ b/security/manager/ssl/src/nsCrypto.cpp
@@ -155,6 +155,7 @@ class nsCryptoRunArgs : public nsISupports {
 public:
   nsCryptoRunArgs();
   virtual ~nsCryptoRunArgs();
+  nsCOMPtr<nsISupports> m_kungFuDeathGrip;
   JSContext *m_cx;
   JSObject  *m_scope;
   nsCOMPtr<nsIPrincipal> m_principals;
@@ -1413,7 +1414,15 @@ loser:
   return nsnull;;
 }
 
-                                                 
+static nsISupports *
+GetISupportsFromContext(JSContext *cx)
+{
+    if (JS_GetOptions(cx) & JSOPTION_PRIVATE_IS_NSISUPPORTS)
+        return NS_STATIC_CAST(nsISupports *, JS_GetContextPrivate(cx));
+
+    return nsnull;
+}
+
 //The top level method which is a member of nsIDOMCrypto
 //for generate a base64 encoded CRMF request.
 NS_IMETHODIMP
@@ -1620,6 +1629,7 @@ nsCrypto::GenerateCRMFRequest(nsIDOMCRMFObject** aReturn)
     return NS_ERROR_OUT_OF_MEMORY;
 
   args->m_cx         = cx;
+  args->m_kungFuDeathGrip = GetISupportsFromContext(cx);
   args->m_scope      = JS_GetParent(cx, script_obj);
   args->m_jsCallback.Adopt(jsCallback ? nsCRT::strdup(jsCallback) : 0);
   args->m_principals = principals;"""
678560af200f9939abdaeb997ca0abad07b859f0,119201,342267,mrbkap%gmail.com,"Some style cleanups, and add some paranoia checking. bug 342267, r=dveditz sr=jst
",1151086689,"""diff --git a/js/src/liveconnect/jsj.c b/js/src/liveconnect/jsj.c
index 889654f..334b3b7 100644
--- a/js/src/liveconnect/jsj.c
+++ b/js/src/liveconnect/jsj.c
@@ -869,7 +869,7 @@ JSJ_ConvertJavaObjectToJSValue(JSContext *cx, jobject java_obj, jsval *vp)
 JS_EXPORT_API(JSBool)
 JSJ_ConvertJSValueToJavaObject(JSContext *cx, jsval v, jobject *vp)
 {
-    if (JSVAL_IS_OBJECT(v)) {
+    if (!JSVAL_IS_PRIMITIVE(v)) {
         JSObject *js_obj = JSVAL_TO_OBJECT(v);
         JavaObjectWrapper *java_wrapper = JS_GetPrivate(cx, js_obj);
         *vp = java_wrapper->java_obj;
diff --git a/modules/oji/src/ProxyClassLoader.cpp b/modules/oji/src/ProxyClassLoader.cpp
index 10868e6..7413ac5 100644
--- a/modules/oji/src/ProxyClassLoader.cpp
+++ b/modules/oji/src/ProxyClassLoader.cpp
@@ -1,4 +1,5 @@
 /* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* vim: set ts=4 sw=4 et tw=78: */
 /* ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
  *
@@ -62,35 +63,57 @@ static nsresult getScriptClassLoader(JNIEnv* env, jobject* classloader)
 {
     // get the current JSContext from the context stack service.
     nsresult rv;
-    nsCOMPtr<nsIJSContextStack> contexts = do_GetService(""""@mozilla.org/js/xpc/ContextStack;1"""", &rv);
+    nsCOMPtr<nsIJSContextStack> contexts =
+        do_GetService(""""@mozilla.org/js/xpc/ContextStack;1"""", &rv);
     if (NS_FAILED(rv)) return rv;
     JSContext* cx;
     rv = contexts->Peek(&cx);
     if (NS_FAILED(rv)) return rv;
     
-    // lookup """"window.navigator.javaclasses"""", if it exists, this is the class loader bound
-    // to this page.
+    // lookup """"window.navigator.javaclasses"""", if it exists, this is the class
+    // loader bound to this page.
     JSObject* window = JS_GetGlobalObject(cx);
     if (!window) return NS_ERROR_FAILURE;
 
-    jsval navigator;
-    if (!JS_GetProperty(cx, window, """"navigator"""", &navigator)) return NS_ERROR_FAILURE;
+    jsval navigator = JSVAL_NULL;
+    if (!JS_LookupProperty(cx, window, """"navigator"""", &navigator))
+        return NS_ERROR_FAILURE;
     
-    jsval javaclasses;
-    if (JS_GetProperty(cx, JSVAL_TO_OBJECT(navigator), """"javaclasses"""", &javaclasses)) {
-        // unwrap this, the way LiveConnect does it.
+    jsval javaclasses = JSVAL_NULL;
+    if (!JSVAL_IS_PRIMITIVE(navigator)) {
+        uintN attrs;
+        JSBool found;
+
+        // Make sure that we pull out the correct javaclasses object that we
+        // set.  Since content can't spoof READONLY or PERMANANT properties,
+        // their presence on this property indicates that this truely is the
+        // correct object.
+        JSObject *obj = JSVAL_TO_OBJECT(navigator);
+        if (!JS_GetPropertyAttributes(cx, obj, """"javaclasses"""", &attrs, &found))
+            return NS_ERROR_FAILURE;
+        if ((~attrs & (JSPROP_READONLY | JSPROP_PERMANENT)) == 0 &&
+            !JS_GetProperty(cx, obj, """"javaclasses"""", &javaclasses)) {
+            return NS_ERROR_FAILURE;
+        }
+
+        // Unwrap this, the way LiveConnect does it. Note that this function
+        // checks if javaclasses is primitive or not.
         if (JSJ_ConvertJSValueToJavaObject(cx, javaclasses, classloader))
             return NS_OK;
     }
 
-    // use default netscape.oji.ProxyClassLoaderFactory (which is no longer supported in recent JRE) as the classloader
-    jclass netscape_oji_ProxyClassLoaderFac = env->FindClass(""""netscape/oji/ProxyClassLoaderFactory"""");
+    // use default netscape.oji.ProxyClassLoaderFactory (which is no longer
+    // supported in recent JRE) as the classloader
+    jclass netscape_oji_ProxyClassLoaderFac =
+        env->FindClass(""""netscape/oji/ProxyClassLoaderFactory"""");
     if (!netscape_oji_ProxyClassLoaderFac) {
         env->ExceptionClear();
         return NS_ERROR_FAILURE;
     }
-    jmethodID staticMethodID = env->GetStaticMethodID(netscape_oji_ProxyClassLoaderFac, """"createClassLoader"""",
-						      """"(Ljava/lang/String;)Ljava/lang/ClassLoader;"""");
+    jmethodID staticMethodID =
+        env->GetStaticMethodID(netscape_oji_ProxyClassLoaderFac,
+                               """"createClassLoader"""",
+                               """"(Ljava/lang/String;)Ljava/lang/ClassLoader;"""");
     if (!staticMethodID) {
         env->ExceptionClear();
         return NS_ERROR_FAILURE;
@@ -130,18 +153,20 @@ static nsresult getScriptClassLoader(JNIEnv* env, jobject* classloader)
         return NS_ERROR_FAILURE;
     }
 
-    // In order to have permission to create classloader, we need to grant enough permission
+    // In order to have permission to create classloader, we need to grant
+    // enough permission
     nsISecurityContext* origContext = nsnull;
     if (NS_FAILED(GetSecurityContext(env, &origContext))) {
-	return NS_ERROR_FAILURE;
+        return NS_ERROR_FAILURE;
     }
     nsCOMPtr<nsISecurityContext> nullContext(new nsCNullSecurityContext());
     if (!nullContext) {
-	return NS_ERROR_OUT_OF_MEMORY;
+        return NS_ERROR_OUT_OF_MEMORY;
     }
     
     SetSecurityContext(env, nullContext);
-    *classloader = env->CallStaticObjectMethod(netscape_oji_ProxyClassLoaderFac, staticMethodID, jspec);
+    *classloader = env->CallStaticObjectMethod(netscape_oji_ProxyClassLoaderFac,
+                                               staticMethodID, jspec);
     SetSecurityContext(env, origContext);
     if (!*classloader) {
         env->ExceptionClear();
@@ -152,8 +177,12 @@ static nsresult getScriptClassLoader(JNIEnv* env, jobject* classloader)
     env->DeleteLocalRef(netscape_oji_ProxyClassLoaderFac);
     
     // now, cache the class loader in """"window.navigator.javaclasses""""
-    if (JSJ_ConvertJavaObjectToJSValue(cx, *classloader, &javaclasses)) {
-        JS_SetProperty(cx, JSVAL_TO_OBJECT(navigator), """"javaclasses"""", &javaclasses);
+    if (!JSVAL_IS_PRIMITIVE(navigator) &&
+        JSJ_ConvertJavaObjectToJSValue(cx, *classloader, &javaclasses) &&
+        !JS_DefineProperty(cx, JSVAL_TO_OBJECT(navigator), """"javaclasses"""",
+                           javaclasses, NULL, NULL, JSPROP_ENUMERATE |
+                           JSPROP_READONLY | JSPROP_PERMANENT)) {
+        return NS_ERROR_FAILURE;
     }
     
     return NS_OK;"""
15221921f79d03d72a618a80bfe30a3eeef0f750,119248,338391,cvshook%sicking.cc,"Bug 338391: Properly check if IndexOf returned -1. Patch by dveditz, r/sr=sicking
",1151013920,"""diff --git a/content/base/src/nsGenericElement.cpp b/content/base/src/nsGenericElement.cpp
index 93680a8..5a0a395 100644
--- a/content/base/src/nsGenericElement.cpp
+++ b/content/base/src/nsGenericElement.cpp
@@ -2483,7 +2483,7 @@ nsGenericElement::doRemoveChildAt(PRUint32 aIndex, PRBool aNotify,
   // was processing.
   if (guard.Mutated(0)) {
     aIndex = container->IndexOf(aKid);
-    if (aIndex < 0) {
+    if (NS_STATIC_CAST(PRInt32, aIndex) < 0) {
       return NS_OK;
     }
   }"""
d0918e8b8f808332246b3d8cc54bc85150c5ded9,119295,339130,bmlk%gmx.de,"reorder cellmaps if the rowgroup order might have changed bug 339130 r7sr=bzbarsky
",1150949976,"""diff --git a/layout/tables/nsCellMap.cpp b/layout/tables/nsCellMap.cpp
index b743d18..23d4e2d 100644
--- a/layout/tables/nsCellMap.cpp
+++ b/layout/tables/nsCellMap.cpp
@@ -81,7 +81,6 @@ nsTableCellMap::nsTableCellMap(nsTableFrame&   aTableFrame,
   nsAutoVoidArray orderedRowGroups;
   PRUint32 numRowGroups;
   aTableFrame.OrderRowGroups(orderedRowGroups, numRowGroups);
-  NS_ASSERTION(orderedRowGroups.Count() == (PRInt32) numRowGroups,""""problem in OrderRowGroups"""");
 
   for (PRUint32 rgX = 0; rgX < numRowGroups; rgX++) {
     nsTableRowGroupFrame* rgFrame =
@@ -299,6 +298,44 @@ nsTableCellMap::GetMapFor(nsTableRowGroupFrame& aRowGroup)
   return nsnull;
 }
 
+void
+nsTableCellMap::Synchronize(nsTableFrame* aTableFrame)
+{
+  nsAutoVoidArray orderedRowGroups;
+  nsAutoVoidArray maps;
+  PRUint32 numRowGroups;
+  PRInt32 mapIndex;
+
+  maps.Clear();
+  aTableFrame->OrderRowGroups(orderedRowGroups, numRowGroups);
+  if (!numRowGroups) {
+    return;
+  }
+
+  for (PRUint32 rgX = 0; rgX < numRowGroups; rgX++) {
+    nsTableRowGroupFrame* rgFrame =
+      nsTableFrame::GetRowGroupFrame((nsIFrame*)orderedRowGroups.ElementAt(rgX));
+    if (rgFrame) {
+      nsCellMap* map = GetMapFor(*rgFrame);
+      if (map) {
+        if (!maps.AppendElement(map)) {
+          delete map;
+          NS_WARNING(""""Could not AppendElement"""");
+        }
+      }
+    }
+  }
+  mapIndex = maps.Count() - 1;
+  nsCellMap* nextMap = (nsCellMap*) maps.ElementAt(mapIndex);
+  nextMap->SetNextSibling(nsnull);
+  for (mapIndex-- ; mapIndex >= 0; mapIndex--) {
+    nsCellMap* map = (nsCellMap*) maps.ElementAt(mapIndex);
+    map->SetNextSibling(nextMap);
+    nextMap = map;
+  }
+  mFirstMap = nextMap;
+}
+
 PRBool
 nsTableCellMap::HasMoreThanOneCell(PRInt32 aRowIndex)
 {
diff --git a/layout/tables/nsCellMap.h b/layout/tables/nsCellMap.h
index a2cc1d1..1b949a3 100644
--- a/layout/tables/nsCellMap.h
+++ b/layout/tables/nsCellMap.h
@@ -94,6 +94,9 @@ public:
 
   nsCellMap* GetMapFor(nsTableRowGroupFrame& aRowGroup);
 
+  /** synchronize the cellmaps with the rowgroups again **/
+  void Synchronize(nsTableFrame* aTableFrame);
+
   nsTableCellFrame* GetCellFrame(PRInt32   aRowIndex,
                                  PRInt32   aColIndex,
                                  CellData& aData,
diff --git a/layout/tables/nsTableFrame.cpp b/layout/tables/nsTableFrame.cpp
index f7b00a7..fc2c5e0 100644
--- a/layout/tables/nsTableFrame.cpp
+++ b/layout/tables/nsTableFrame.cpp
@@ -418,6 +418,8 @@ nsTableFrame::SetInitialChildList(nsIAtom*        aListName,
     }
     else if (NS_STYLE_DISPLAY_TABLE_COLUMN_GROUP == childDisplay->mDisplay)
     {
+      NS_ASSERTION(nsLayoutAtoms::tableColGroupFrame == childFrame->GetType(),
+                   """"This is not a colgroup"""");
       if (mColGroups.IsEmpty())
         mColGroups.SetFrames(childFrame);
       else
@@ -1110,7 +1112,7 @@ nsTableFrame::InsertRows(nsTableRowGroupFrame& aRowGroupFrame,
                          PRBool                aConsiderSpans)
 {
 #ifdef DEBUG_TABLE_CELLMAP
-  printf(""""insertRowsBefore firstRow=%d \n"""", aRowIndex);
+  printf(""""=== insertRowsBefore firstRow=%d \n"""", aRowIndex);
   Dump(PR_TRUE, PR_FALSE, PR_TRUE);
 #endif
 
@@ -1142,7 +1144,7 @@ nsTableFrame::InsertRows(nsTableRowGroupFrame& aRowGroupFrame,
     }
   }
 #ifdef DEBUG_TABLE_CELLMAP
-  printf(""""insertRowsAfter \n"""");
+  printf(""""=== insertRowsAfter \n"""");
   Dump(PR_TRUE, PR_FALSE, PR_TRUE);
 #endif
 
@@ -1172,7 +1174,7 @@ void nsTableFrame::RemoveRows(nsTableRowFrame& aFirstRowFrame,
 
   PRInt32 firstRowIndex = aFirstRowFrame.GetRowIndex();
 #ifdef DEBUG_TABLE_CELLMAP
-  printf(""""removeRowsBefore firstRow=%d numRows=%d\n"""", firstRowIndex, aNumRowsToRemove);
+  printf(""""=== removeRowsBefore firstRow=%d numRows=%d\n"""", firstRowIndex, aNumRowsToRemove);
   Dump(PR_TRUE, PR_FALSE, PR_TRUE);
 #endif
   nsTableCellMap* cellMap = GetCellMap();
@@ -1203,8 +1205,8 @@ void nsTableFrame::RemoveRows(nsTableRowFrame& aFirstRowFrame,
   }
   AdjustRowIndices(firstRowIndex, -aNumRowsToRemove);
 #ifdef DEBUG_TABLE_CELLMAP
-  printf(""""removeRowsAfter\n"""");
-  Dump(PR_TRUE, PR_FALSE, PR_TRUE);
+  printf(""""=== removeRowsAfter\n"""");
+  Dump(PR_TRUE, PR_TRUE, PR_TRUE);
 #endif
 }
 
@@ -1275,7 +1277,7 @@ nsTableFrame::InsertRowGroups(nsIFrame* aFirstRowGroupFrame,
                               nsIFrame* aLastRowGroupFrame)
 {
 #ifdef DEBUG_TABLE_CELLMAP
-  printf(""""insertRowGroupsBefore"""");
+  printf(""""=== insertRowGroupsBefore\n"""");
   Dump(PR_TRUE, PR_FALSE, PR_TRUE);
 #endif
   nsTableCellMap* cellMap = GetCellMap();
@@ -1296,6 +1298,7 @@ nsTableFrame::InsertRowGroups(nsIFrame* aFirstRowGroupFrame,
             ? nsnull : GetRowGroupFrame((nsIFrame*)orderedRowGroups.ElementAt(rgIndex - 1)); 
           // create and add the cell map for the row group
           cellMap->InsertGroupCellMap(*rgFrame, priorRG);
+          cellMap->Synchronize(this);
           // collect the new row frames in an array and add them to the table
           PRInt32 numRows = CollectRows(kidFrame, rows);
           if (numRows > 0) {
@@ -1319,8 +1322,8 @@ nsTableFrame::InsertRowGroups(nsIFrame* aFirstRowGroupFrame,
     }
   }
 #ifdef DEBUG_TABLE_CELLMAP
-  printf(""""insertRowGroupsAfter"""");
-  Dump(PR_TRUE, PR_FALSE, PR_TRUE);
+  printf(""""=== insertRowGroupsAfter\n"""");
+  Dump(PR_TRUE, PR_TRUE, PR_TRUE);
 #endif
 }
 
@@ -2452,7 +2455,7 @@ nsTableFrame::AppendFrames(nsIAtom*        aListName,
   }
 
 #ifdef DEBUG_TABLE_CELLMAP
-  printf(""""TableFrame::AppendFrames"""");
+  printf(""""=== TableFrame::AppendFrames\n"""");
   Dump(PR_TRUE, PR_TRUE, PR_TRUE);
 #endif
   SetNeedStrategyInit(PR_TRUE); // XXX assume the worse
@@ -2508,7 +2511,10 @@ nsTableFrame::InsertFrames(nsIAtom*        aListName,
   }
 
   AppendDirtyReflowCommand(this);
-
+#ifdef DEBUG_TABLE_CELLMAP
+  printf(""""=== TableFrame::InsertFrames\n"""");
+  Dump(PR_TRUE, PR_TRUE, PR_TRUE);
+#endif
   return NS_OK;
 }
 
@@ -2570,7 +2576,9 @@ nsTableFrame::RemoveFrame(nsIAtom*        aListName,
       AdjustRowIndices(startRowIndex, -numRows);
       // remove the row group frame from the sibling chain
       mFrames.DestroyFrame(aOldFrame);
-
+      if (cellMap) {
+        cellMap->Synchronize(this);
+      }
       // XXX This could probably be optimized with much effort
       SetNeedStrategyInit(PR_TRUE);
       AppendDirtyReflowCommand(this);"""
e76b1c545ce6872c9e3d1162ea19bee68d676ed3,119325,336409,mrbkap%gmail.com,"Fix whitespace and style nits from brendan (bug 336409)
",1150913812,"""diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index a08cf2e..bff4cac 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -953,11 +953,12 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
 #endif
 
 #define SAFE_ADD(n)                                                          \
-            JS_BEGIN_MACRO                                                   \
-                curlen += (n);                                               \
-                if (curlen < (n))                                            \
-                    goto overflow;                                           \
-            JS_END_MACRO
+    JS_BEGIN_MACRO                                                           \
+        size_t n_ = (n);                                                     \
+        curlen += n_;                                                        \
+        if (curlen < n_)                                                     \
+            goto overflow;                                                   \
+    JS_END_MACRO
 
             curlen = nchars;
             if (comma)"""
c2eda3f750a9c77d2e6dfc9afb192ae993342a47,119338,341877,igor.bukanov%gmail.com,"Bug 341877: Infrastructure to root properly native iterator states. r=brendan
",1150881204,"""diff --git a/js/src/jscntxt.h b/js/src/jscntxt.h
index cc95ad1..34bb74b 100644
--- a/js/src/jscntxt.h
+++ b/js/src/jscntxt.h
@@ -108,6 +108,11 @@ typedef struct JSPropertyTreeEntry {
     JSScopeProperty     *child;
 } JSPropertyTreeEntry;
 
+/*
+ * Forward declaration for opaque JSRuntime.nativeIteratorStates.
+ */
+typedef struct JSNativeIteratorState JSNativeIteratorState;
+
 struct JSRuntime {
     /* Runtime state, synchronized by the stateChange/gcLock condvar/lock. */
     JSRuntimeState      state;
@@ -320,6 +325,12 @@ struct JSRuntime {
     JSObject            *anynameObject;
     JSObject            *functionNamespaceObject;
 
+    /*
+     * A helper list for the GC, so it can mark native iterator states. See
+     * js_MarkNativeIteratorStates for details.
+     */
+    JSNativeIteratorState *nativeIteratorStates;
+
 #ifdef DEBUG
     /* Function invocation metering. */
     jsrefcount          inlineCalls;
diff --git a/js/src/jsgc.c b/js/src/jsgc.c
index 81cff29..1fe2dd2 100644
--- a/js/src/jsgc.c
+++ b/js/src/jsgc.c
@@ -2381,6 +2381,7 @@ restart:
     js_MarkAtomState(&rt->atomState, gcflags, gc_mark_atom_key_thing, cx);
     js_MarkWatchPoints(rt);
     js_MarkScriptFilenames(rt, gcflags);
+    js_MarkNativeIteratorStates(cx);
 
     iter = NULL;
     while ((acx = js_ContextIterator(rt, JS_TRUE, &iter)) != NULL) {
diff --git a/js/src/jsiter.c b/js/src/jsiter.c
index eeb03f4..3020979 100644
--- a/js/src/jsiter.c
+++ b/js/src/jsiter.c
@@ -76,33 +76,6 @@ extern const char js_throw_str[]; /* from jsscan.h */
 #error JS_INITIAL_NSLOTS must be greater than JSSLOT_ITER_FLAGS.
 #endif
 
-static uint32
-iterator_mark(JSContext *cx, JSObject *obj, void *arg)
-{
-    jsval state, parent;
-    JSObject *iterable;
-
-    /* Avoid double work if js_CloseNativeIterator was called on obj. */
-    state = obj->slots[JSSLOT_ITER_STATE];
-    if (JSVAL_IS_VOID(state))
-        return 0;
-
-    parent = obj->slots[JSSLOT_PARENT];
-    if (!JSVAL_IS_NULL(state) && !JSVAL_IS_PRIMITIVE(parent)) {
-        iterable = JSVAL_TO_OBJECT(parent);
-#if JS_HAS_XML_SUPPORT
-        if ((JSVAL_TO_INT(obj->slots[JSSLOT_ITER_FLAGS]) & JSITER_FOREACH) &&
-            OBJECT_IS_XML(cx, iterable)) {
-            ((JSXMLObjectOps *) iterable->map->ops)->
-                enumerateValues(cx, iterable, JSENUMERATE_MARK, &state,
-                                NULL, NULL);
-        } else
-#endif
-            OBJ_ENUMERATE(cx, iterable, JSENUMERATE_MARK, &state, NULL);
-    }
-    return 0;
-}
-
 static void
 iterator_close(JSContext *cx, JSObject *obj)
 {
@@ -137,8 +110,7 @@ JSExtendedClass js_IteratorClass = {
     JSCLASS_HAS_CACHED_PROTO(JSProto_Iterator),
     JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,
     JS_EnumerateStub, JS_ResolveStub,   JS_ConvertStub,   JS_FinalizeStub,
-    NULL,             NULL,             NULL,             NULL,
-    NULL,             NULL,             iterator_mark,    NULL },
+    JSCLASS_NO_OPTIONAL_MEMBERS },
     NULL,             NULL,             NULL,             iterator_close,
     JSCLASS_NO_RESERVED_MEMBERS
 };
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index e968b3a..a08cf2e 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -3696,10 +3696,12 @@ js_SetIdArrayLength(JSContext *cx, JSIdArray *ida, jsint length)
 }
 
 /* Private type used to iterate over all properties of a native JS object */
-typedef struct JSNativeIteratorState {
-    jsint next_index;   /* index into jsid array */
-    JSIdArray *ida;     /* all property ids in enumeration */
-} JSNativeIteratorState;
+struct JSNativeIteratorState {
+    jsint                   next_index; /* index into jsid array */
+    JSIdArray               *ida;       /* all property ids in enumeration */
+    JSNativeIteratorState   *next;      /* double-linked list support */
+    JSNativeIteratorState   **prevp;
+};
 
 /*
  * This function is used to enumerate the properties of native JSObjects
@@ -3710,6 +3712,7 @@ JSBool
 js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
              jsval *statep, jsid *idp)
 {
+    JSRuntime *rt;
     JSObject *proto;
     JSClass *clasp;
     JSEnumerateOp enumerate;
@@ -3719,6 +3722,7 @@ js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
     JSIdArray *ida;
     JSNativeIteratorState *state;
 
+    rt = cx->runtime;
     clasp = OBJ_GET_CLASS(cx, obj);
     enumerate = clasp->enumerate;
     if (clasp->flags & JSCLASS_NEW_ENUMERATE)
@@ -3795,6 +3799,15 @@ js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
         }
         state->ida = ida;
         state->next_index = 0;
+
+        JS_LOCK_RUNTIME(rt);
+        state->next = rt->nativeIteratorStates;
+        if (state->next)
+            state->next->prevp = &state->next;
+        state->prevp = &rt->nativeIteratorStates;
+        *state->prevp = state;
+        JS_UNLOCK_RUNTIME(rt);
+
         *statep = PRIVATE_TO_JSVAL(state);
         if (idp)
             *idp = INT_TO_JSVAL(length);
@@ -3812,28 +3825,48 @@ js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
 
       case JSENUMERATE_DESTROY:
         state = (JSNativeIteratorState *) JSVAL_TO_PRIVATE(*statep);
+
+        JS_LOCK_RUNTIME(rt);
+        JS_ASSERT(rt->nativeIteratorStates);
+        JS_ASSERT(*state->prevp == state);
+        if (state->next) {
+            JS_ASSERT(state->next->prevp == &state->next);
+            state->next->prevp = state->prevp;
+        }
+        *state->prevp = state->next;
+        JS_UNLOCK_RUNTIME(rt);
+
         JS_DestroyIdArray(cx, state->ida);
         JS_free(cx, state);
         *statep = JSVAL_NULL;
         break;
+    }
+    return JS_TRUE;
+}
 
-      case JSENUMERATE_MARK:
-        state = (JSNativeIteratorState *) JSVAL_TO_PRIVATE(*statep);
-        ida = state->ida;
-        length = ida->length;
-        for (i = 0; i < length; i++) {
-            jsid id;
+void
+js_MarkNativeIteratorStates(JSContext *cx)
+{
+    JSNativeIteratorState *state;
+    jsid *cursor, *end, id;
 
-            id = ida->vector[i];
+    state = cx->runtime->nativeIteratorStates;
+    if (!state)
+        return;
+
+    do {
+        JS_ASSERT(*state->prevp == state);
+        cursor = state->ida->vector;
+        end = cursor + state->ida->length;
+        for (; cursor != end; ++cursor) {
+            id = *cursor;
             if (JSID_IS_ATOM(id)) {
                 GC_MARK_ATOM(cx, JSID_TO_ATOM(id));
             } else if (JSID_IS_OBJECT(id)) {
                 GC_MARK(cx, JSID_TO_OBJECT(id), """"ida->vector[i]"""");
             }
         }
-        break;
-    }
-    return JS_TRUE;
+    } while ((state = state->next) != NULL);
 }
 
 JSBool
diff --git a/js/src/jsobj.h b/js/src/jsobj.h
index e0226dc..5615cd3 100644
--- a/js/src/jsobj.h
+++ b/js/src/jsobj.h
@@ -498,6 +498,9 @@ extern JSBool
 js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
              jsval *statep, jsid *idp);
 
+extern void
+js_MarkNativeIteratorStates(JSContext *cx);
+
 extern JSBool
 js_CheckAccess(JSContext *cx, JSObject *obj, jsid id, JSAccessMode mode,
                jsval *vp, uintN *attrsp);
diff --git a/js/src/jspubtd.h b/js/src/jspubtd.h
index 6fb0abd..e6e0871 100644
--- a/js/src/jspubtd.h
+++ b/js/src/jspubtd.h
@@ -119,8 +119,7 @@ typedef enum JSAccessMode {
 typedef enum JSIterateOp {
     JSENUMERATE_INIT,       /* Create new iterator state */
     JSENUMERATE_NEXT,       /* Iterate once */
-    JSENUMERATE_DESTROY,    /* Destroy iterator state */
-    JSENUMERATE_MARK        /* mark opaque iterator state */
+    JSENUMERATE_DESTROY     /* Destroy iterator state */
 } JSIterateOp;
 
 /* Struct typedefs. */
diff --git a/js/src/jsxml.c b/js/src/jsxml.c
index 868f8ef..ff97665 100644
--- a/js/src/jsxml.c
+++ b/js/src/jsxml.c
@@ -5151,9 +5151,6 @@ xml_enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
         }
         *statep = JSVAL_NULL;
         break;
-
-      case JSENUMERATE_MARK:
-        break;
     }
     return JS_TRUE;
 }
@@ -5313,9 +5310,6 @@ xml_enumerateValues(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
         }
         *statep = JSVAL_NULL;
         break;
-
-      case JSENUMERATE_MARK:
-        break;
     }
     return JS_TRUE;
 }"""
c3ae1f60b7ac68eb649a1896e16782507e044def,119342,338523,mrbkap%gmail.com,"Don't allow getting standard classes through XPCNativeWrapper. bug 338523, r=jst sr=bzbarsky
",1150853324,"""diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index 8ea1817..7c76285 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -6022,7 +6022,10 @@ nsWindowSH::NewResolve(nsIXPConnectWrappedNative *wrapper, JSContext *cx,
 
     JSAutoRequest ar(my_cx);
 
-    JSBool ok = ::JS_ResolveStandardClass(my_cx, obj, id, &did_resolve);
+    // Don't resolve standard classes on XPCNativeWrapper.
+    JSBool ok = !ObjectIsNativeWrapper(cx, obj) ?
+                ::JS_ResolveStandardClass(my_cx, obj, id, &did_resolve) :
+                JS_TRUE;
 
     sDoSecurityCheckInAddProperty = doSecurityCheckInAddProperty;
 """
9aed286cff7fc3900bbd550a6fdc22c4e30a7aff,119348,336409,mrbkap%gmail.com,"Be safer in doing these additions. bug 336409, r=igor
",1150850524,"""diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index aa94cdd..e968b3a 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -696,7 +696,7 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     JSIdArray *ida;
     jschar *chars, *ochars, *vsharp;
     const jschar *idstrchars, *vchars;
-    size_t nchars, idstrlength, gsoplength, vlength, vsharplength;
+    size_t nchars, idstrlength, gsoplength, vlength, vsharplength, curlen;
     char *comma;
     jsint i, j, length, valcnt;
     jsid id;
@@ -952,14 +952,31 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
             }
 #endif
 
+#define SAFE_ADD(n)                                                          \
+            JS_BEGIN_MACRO                                                   \
+                curlen += (n);                                               \
+                if (curlen < (n))                                            \
+                    goto overflow;                                           \
+            JS_END_MACRO
+
+            curlen = nchars;
+            if (comma)
+                SAFE_ADD(2);
+            SAFE_ADD(idstrlength + 1);
+            if (gsop[j])
+                SAFE_ADD(JSSTRING_LENGTH(gsop[j]) + 1);
+            SAFE_ADD(vsharplength);
+            SAFE_ADD(vlength);
+            /* Account for the trailing null. */
+            SAFE_ADD((outermost ? 2 : 1) + 1);
+#undef SAFE_ADD
+
+            if (curlen > (size_t)-1 / sizeof(jschar))
+                goto overflow;
+
             /* Allocate 1 + 1 at end for closing brace and terminating 0. */
             chars = (jschar *)
-                realloc((ochars = chars),
-                        (nchars + (comma ? 2 : 0) +
-                         idstrlength + 1 +
-                         (gsop[j] ? 1 + JSSTRING_LENGTH(gsop[j]) : 0) +
-                         vsharplength + vlength +
-                         (outermost ? 2 : 1) + 1) * sizeof(jschar));
+                realloc((ochars = chars), curlen * sizeof(jschar));
             if (!chars) {
                 /* Save code space on error: let JS_free ignore null vsharp. */
                 JS_free(cx, vsharp);
@@ -1037,6 +1054,12 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     }
     *rval = STRING_TO_JSVAL(str);
     return JS_TRUE;
+
+  overflow:
+    JS_free(cx, vsharp);
+    free(chars);
+    chars = NULL;
+    goto error;
 }
 #endif /* JS_HAS_TOSOURCE */
 """
6c8d1b05e519f2da45fee29b7c63a2f886493a90,119371,338288,mrbkap%gmail.com,"Hold a true weak reference to the location's docshell since the window won't
always be able to clear the docshell out. bug 338288, r=jst sr=bzbarsky
",1150829763,"""diff --git a/dom/src/base/nsGlobalWindow.cpp b/dom/src/base/nsGlobalWindow.cpp
index 195ba53..a8e1ad4 100644
--- a/dom/src/base/nsGlobalWindow.cpp
+++ b/dom/src/base/nsGlobalWindow.cpp
@@ -1001,11 +1001,6 @@ WindowStateHolder::~WindowStateHolder()
 
     JSAutoRequest ar(cx);
     mInnerWindow->FreeInnerObjects(GetScriptContextFromJSContext(cx));
-
-    if (mLocation) {
-      // Don't leave the weak reference to the docshell lying around.
-      mLocation->SetDocShell(nsnull);
-    }
   }
 }
 
diff --git a/dom/src/base/nsGlobalWindow.h b/dom/src/base/nsGlobalWindow.h
index a7a03c1..dbc842d 100644
--- a/dom/src/base/nsGlobalWindow.h
+++ b/dom/src/base/nsGlobalWindow.h
@@ -747,10 +747,7 @@ public:
   NS_DECL_ISUPPORTS
 
   void SetDocShell(nsIDocShell *aDocShell);
-  nsIDocShell *GetDocShell()
-  {
-    return mDocShell;
-  }
+  nsIDocShell *GetDocShell();
 
   // nsIDOMLocation
   NS_DECL_NSIDOMLOCATION
@@ -777,7 +774,7 @@ protected:
   nsresult CheckURL(nsIURI *url, nsIDocShellLoadInfo** aLoadInfo);
   nsresult FindUsableBaseURI(nsIURI * aBaseURI, nsIDocShell * aParent, nsIURI ** aUsableURI);
 
-  nsIDocShell *mDocShell; // Weak Reference
+  nsWeakPtr mDocShell;
 };
 
 /* factory function */
diff --git a/dom/src/base/nsLocation.cpp b/dom/src/base/nsLocation.cpp
index 54a724f..f20d7d8 100644
--- a/dom/src/base/nsLocation.cpp
+++ b/dom/src/base/nsLocation.cpp
@@ -139,7 +139,7 @@ GetDocumentCharacterSetForURI(const nsAString& aHref, nsACString& aCharset)
 
 nsLocation::nsLocation(nsIDocShell *aDocShell)
 {
-  mDocShell = aDocShell; // Weak Reference
+  mDocShell = do_GetWeakReference(aDocShell);
 }
 
 nsLocation::~nsLocation()
@@ -162,7 +162,14 @@ NS_IMPL_RELEASE(nsLocation)
 void
 nsLocation::SetDocShell(nsIDocShell *aDocShell)
 {
-   mDocShell = aDocShell; // Weak Reference
+   mDocShell = do_GetWeakReference(aDocShell);
+}
+
+nsIDocShell *
+nsLocation::GetDocShell()
+{
+  nsCOMPtr<nsIDocShell> docshell(do_QueryReferent(mDocShell));
+  return docshell;
 }
 
 nsresult
@@ -170,6 +177,11 @@ nsLocation::CheckURL(nsIURI* aURI, nsIDocShellLoadInfo** aLoadInfo)
 {
   *aLoadInfo = nsnull;
 
+  nsCOMPtr<nsIDocShell> docShell(do_QueryReferent(mDocShell));
+  if (!docShell) {
+    return NS_ERROR_NOT_AVAILABLE;
+  }
+
   nsresult result;
   // Get JSContext from stack.
   nsCOMPtr<nsIJSContextStack>
@@ -218,7 +230,7 @@ nsLocation::CheckURL(nsIURI* aURI, nsIDocShellLoadInfo** aLoadInfo)
 
   // Create load info
   nsCOMPtr<nsIDocShellLoadInfo> loadInfo;
-  mDocShell->CreateLoadInfo(getter_AddRefs(loadInfo));
+  docShell->CreateLoadInfo(getter_AddRefs(loadInfo));
   NS_ENSURE_TRUE(loadInfo, NS_ERROR_FAILURE);
 
   loadInfo->SetOwner(owner);
@@ -298,8 +310,8 @@ nsLocation::GetURI(nsIURI** aURI, PRBool aGetInnermostURI)
   *aURI = nsnull;
 
   nsresult rv;
-
-  nsCOMPtr<nsIWebNavigation> webNav(do_QueryInterface(mDocShell, &rv));
+  nsCOMPtr<nsIDocShell> docShell(do_QueryReferent(mDocShell));
+  nsCOMPtr<nsIWebNavigation> webNav(do_QueryInterface(docShell, &rv));
   if (NS_FAILED(rv)) {
     return rv;
   }
@@ -348,9 +360,10 @@ nsLocation::GetWritableURI(nsIURI** aURI)
 nsresult
 nsLocation::SetURI(nsIURI* aURI, PRBool aReplace)
 {
-  if (mDocShell) {
+  nsCOMPtr<nsIDocShell> docShell(do_QueryReferent(mDocShell));
+  if (docShell) {
     nsCOMPtr<nsIDocShellLoadInfo> loadInfo;
-    nsCOMPtr<nsIWebNavigation> webNav(do_QueryInterface(mDocShell));
+    nsCOMPtr<nsIWebNavigation> webNav(do_QueryInterface(docShell));
 
     if(NS_FAILED(CheckURL(aURI, getter_AddRefs(loadInfo))))
       return NS_ERROR_FAILURE;
@@ -361,8 +374,8 @@ nsLocation::SetURI(nsIURI* aURI, PRBool aReplace)
       loadInfo->SetLoadType(nsIDocShellLoadInfo::loadStopContent);
     }
 
-    return mDocShell->LoadURI(aURI, loadInfo,
-                              nsIWebNavigation::LOAD_FLAGS_NONE, PR_TRUE);
+    return docShell->LoadURI(aURI, loadInfo,
+                             nsIWebNavigation::LOAD_FLAGS_NONE, PR_TRUE);
   }
 
   return NS_OK;
@@ -590,8 +603,10 @@ nsLocation::SetHrefWithBase(const nsAString& aHref, nsIURI* aBase,
   nsresult result;
   nsCOMPtr<nsIURI> newUri, baseURI;
 
+  nsCOMPtr<nsIDocShell> docShell(do_QueryReferent(mDocShell));
+
   // Try to make sure the base url is something that will be useful. 
-  result = FindUsableBaseURI(aBase,  mDocShell, getter_AddRefs(baseURI));
+  result = FindUsableBaseURI(aBase,  docShell, getter_AddRefs(baseURI));
   if (!baseURI)  {
     // If nothing useful was found, just use what you have.
     baseURI = aBase;
@@ -631,7 +646,7 @@ nsLocation::SetHrefWithBase(const nsAString& aHref, nsIURI* aBase,
             // Now check to make sure that the script is running in our window,
             // since we only want to replace if the location is set by a
             // <script> tag in the same window.  See bug 178729.
-            nsCOMPtr<nsIScriptGlobalObject> ourGlobal(do_GetInterface(mDocShell));
+            nsCOMPtr<nsIScriptGlobalObject> ourGlobal(do_GetInterface(docShell));
             inScriptTag = (ourGlobal == scriptContext->GetGlobalObject());
           }
         }  
@@ -828,7 +843,8 @@ NS_IMETHODIMP
 nsLocation::Reload(PRBool aForceget)
 {
   nsresult rv;
-  nsCOMPtr<nsIWebNavigation> webNav(do_QueryInterface(mDocShell));
+  nsCOMPtr<nsIDocShell> docShell(do_QueryReferent(mDocShell));
+  nsCOMPtr<nsIWebNavigation> webNav(do_QueryInterface(docShell));
 
   if (webNav) {
     PRUint32 reloadFlags = nsIWebNavigation::LOAD_FLAGS_NONE;
@@ -845,7 +861,6 @@ nsLocation::Reload(PRBool aForceget)
       rv = NS_OK;
     }
   } else {
-    NS_ASSERTION(0, """"nsIWebNavigation interface is not available!"""");
     rv = NS_ERROR_FAILURE;
   }
 
@@ -863,7 +878,8 @@ nsLocation::Reload()
   if (!ncc)
     return NS_ERROR_NOT_AVAILABLE;
 
-  nsCOMPtr<nsPIDOMWindow> window(do_GetInterface(mDocShell));
+  nsCOMPtr<nsIDocShell> docShell(do_QueryReferent(mDocShell));
+  nsCOMPtr<nsPIDOMWindow> window(do_GetInterface(docShell));
 
   if (window && window->IsHandlingResizeEvent()) {
     // location.reload() was called on a window that is handling a"""
f7a9d3e68bf0ca542e8c2f734779c92030145402,119391,340733,bzbarsky%mit.edu,"Make document observers QI to nsIDocumentObserver.  Fixes fallout (tree orange)
from bug 340733; reviews pending.
",1150784957,"""diff --git a/content/base/src/nsContentList.cpp b/content/base/src/nsContentList.cpp
index 451eac2..1cf22a1 100644
--- a/content/base/src/nsContentList.cpp
+++ b/content/base/src/nsContentList.cpp
@@ -400,6 +400,7 @@ nsContentList::~nsContentList()
 // QueryInterface implementation for nsContentList
 NS_INTERFACE_MAP_BEGIN(nsContentList)
   NS_INTERFACE_MAP_ENTRY(nsIDOMHTMLCollection)
+  NS_INTERFACE_MAP_ENTRY(nsIDocumentObserver)
   NS_INTERFACE_MAP_ENTRY_CONTENT_CLASSINFO(ContentList)
 NS_INTERFACE_MAP_END_INHERITING(nsBaseContentList)
 
diff --git a/content/xul/templates/src/nsXULTemplateBuilder.cpp b/content/xul/templates/src/nsXULTemplateBuilder.cpp
index e118a9f..f557add 100644
--- a/content/xul/templates/src/nsXULTemplateBuilder.cpp
+++ b/content/xul/templates/src/nsXULTemplateBuilder.cpp
@@ -236,6 +236,7 @@ NS_IMPL_RELEASE(nsXULTemplateBuilder)
 
 NS_INTERFACE_MAP_BEGIN(nsXULTemplateBuilder)
   NS_INTERFACE_MAP_ENTRY(nsIXULTemplateBuilder)
+  NS_INTERFACE_MAP_ENTRY(nsIDocumentObserver)
   NS_INTERFACE_MAP_ENTRY_AMBIGUOUS(nsISupports, nsIXULTemplateBuilder)
   NS_INTERFACE_MAP_ENTRY_DOM_CLASSINFO(XULTemplateBuilder)
 NS_INTERFACE_MAP_END"""
f48c94d81486b72b0a26ccb631b21ffd3d8e8cc3,119405,340733,bzbarsky%mit.edu,"Use iterators that deal with observers being removed to iterate the observers array when notifying  Bug 340733, r+sr+branch181=sicking
",1150765375,"""diff --git a/content/base/src/nsDocument.cpp b/content/base/src/nsDocument.cpp
index a246fb2..3e45c15 100644
--- a/content/base/src/nsDocument.cpp
+++ b/content/base/src/nsDocument.cpp
@@ -631,6 +631,73 @@ nsDOMImplementation::Init(nsIURI* aDocumentURI, nsIURI* aBaseURI,
   return NS_OK;
 }
 
+PRBool
+nsDocumentObserverList::PrependElement(nsIDocumentObserver* aObserver)
+{
+  PRBool prepended = mObservers.InsertElementAt(aObserver, 0);
+
+  // This introduces an inconsistency -- forward iterators will not see the new
+  // element, while backwards ones will.  That's kinda inherent in the
+  // different iteration orders, though.
+  if (prepended) {
+    for (Iterator* iter = mIterators; iter; iter = iter->mNext) {
+      iter->mPosition++;
+    }
+  }
+
+  return prepended;
+}
+
+PRBool
+nsDocumentObserverList::RemoveElement(nsIDocumentObserver* aElement)
+{
+  PRInt32 index = mObservers.IndexOf(aElement);
+  if (index == -1) {
+    return PR_FALSE;
+  }
+
+#ifdef DEBUG
+  PRBool removed =
+#endif
+    mObservers.RemoveElementAt(index);
+  NS_ASSERTION(removed, """"How could we fail to remove by index?"""");
+
+  for (Iterator* iter = mIterators; iter; iter = iter->mNext) {
+    // If iter->mPosition == index then forward iterators are safe, since in
+    // that case the position is not affected by the removal; all that's
+    // affected is what element is at that position.  Backward iterators,
+    // however, need to decrement mPosition in that case.
+    if (iter->mPosition > index ||
+        (iter->mPosition == index && iter->mStep < 0)) {
+      iter->mPosition--;
+    }
+  }
+  
+  return PR_TRUE;
+}
+
+void
+nsDocumentObserverList::Clear()
+{
+  mObservers.Clear(); 
+
+  // Reset all iterators to a bogus position so they don't return
+  // anything next time they're called.
+  for (Iterator* iter = mIterators; iter; iter = iter->mNext) {
+    iter->mPosition = -1;
+  }
+}
+
+nsIDocumentObserver*
+nsDocumentObserverList::Iterator::GetNext()
+{
+  nsIDocumentObserver* ret =
+    NS_STATIC_CAST(nsIDocumentObserver*,
+                   mList.mObservers.SafeElementAt(mPosition));
+  mPosition += mStep;
+  return ret;
+}
+
 // ==================================================================
 // =
 // ==================================================================
@@ -826,8 +893,7 @@ nsDocument::Init()
   mBindingManager = bindingManager;
 
   // The binding manager must always be the first observer of the document.
-  // (static cast to the correct interface pointer)
-  mObservers.InsertElementAt(NS_STATIC_CAST(nsIDocumentObserver*, bindingManager), 0);
+  mObservers.PrependElement(bindingManager);
 
   mOnloadBlocker = new nsOnloadBlocker();
   NS_ENSURE_TRUE(mOnloadBlocker, NS_ERROR_OUT_OF_MEMORY);
@@ -2113,7 +2179,7 @@ void
 nsDocument::AddObserver(nsIDocumentObserver* aObserver)
 {
   // XXX Make sure the observer isn't already in the list
-  if (mObservers.IndexOf(aObserver) == -1) {
+  if (!mObservers.Contains(aObserver)) {
     mObservers.AppendElement(aObserver);
   }
 }
@@ -2129,23 +2195,10 @@ nsDocument::RemoveObserver(nsIDocumentObserver* aObserver)
     return mObservers.RemoveElement(aObserver);
   }
 
-  return (mObservers.IndexOf(aObserver) != -1);
+  return mObservers.Contains(aObserver);
 }
 
 void
-nsDocument::CopyObserversTo(nsCOMArray<nsIDocumentObserver>& aDestination)
-{
-  PRInt32 count = mObservers.Count();
-  aDestination.SetCapacity(count);
-  // If we run out of memory, we just won't notify some of the observers.
-  for (PRInt32 i = 0; i < count; ++i) {
-    aDestination.AppendObject(
-      NS_STATIC_CAST(nsIDocumentObserver*,mObservers[i]));
-  }
-}
-
-
-void
 nsDocument::BeginUpdate(nsUpdateType aUpdateType)
 {
   NS_DOCUMENT_NOTIFY_OBSERVERS(BeginUpdate, (this, aUpdateType));
@@ -2325,11 +2378,9 @@ nsDocument::ContentAppended(nsIContent* aContainer,
   // observer list in a forward order
   // XXXldb So one should notify the other rather than both being
   // registered.
-  nsCOMArray<nsIDocumentObserver> observers;
-  CopyObserversTo(observers);
-  for (PRInt32 i = 0, i_end = observers.Count(); i < i_end; ++i) {
-    observers[i]->ContentAppended(this, aContainer, aNewIndexInContainer);
-  }
+  NS_DOCUMENT_FORWARD_NOTIFY_OBSERVERS(ContentAppended,
+                                       (this, aContainer,
+                                        aNewIndexInContainer));
 }
 
 void
@@ -2343,11 +2394,9 @@ nsDocument::ContentInserted(nsIContent* aContainer, nsIContent* aChild,
   // in a forward order
   // XXXldb So one should notify the other rather than both being
   // registered.
-  nsCOMArray<nsIDocumentObserver> observers;
-  CopyObserversTo(observers);
-  for (PRInt32 i = 0, i_end = observers.Count(); i < i_end; ++i) {
-    observers[i]->ContentInserted(this, aContainer, aChild, aIndexInContainer);
-  }
+  NS_DOCUMENT_FORWARD_NOTIFY_OBSERVERS(ContentInserted,
+                                       (this, aContainer, aChild,
+                                        aIndexInContainer));
 }
 
 void
@@ -2361,11 +2410,8 @@ nsDocument::ContentRemoved(nsIContent* aContainer, nsIContent* aChild,
   // observer list in a reverse order
   // XXXldb So one should notify the other rather than both being
   // registered.
-  nsCOMArray<nsIDocumentObserver> observers;
-  CopyObserversTo(observers);
-  for (PRInt32 i = observers.Count() - 1; i >= 0; --i) {
-    observers[i]->ContentRemoved(this, aContainer, aChild, aIndexInContainer);
-  }
+  NS_DOCUMENT_NOTIFY_OBSERVERS(ContentRemoved,
+                               (this, aContainer, aChild, aIndexInContainer));
 }
 
 void
diff --git a/content/base/src/nsDocument.h b/content/base/src/nsDocument.h
index be5ebe1..cdfcb60 100644
--- a/content/base/src/nsDocument.h
+++ b/content/base/src/nsDocument.h
@@ -262,6 +262,94 @@ private:
   ~nsOnloadBlocker() {}
 };
 
+/**
+ * nsDocumentObserverList is the list of nsIDocumentObservers for a document.
+ * It doesn't allow direct reading of the list; all access must take place
+ * through stack-allocated nsDocumentObserverList::ForwardIterator or
+ * nsDocumentObserverList::ReverseIterator objects.
+ */
+class nsDocumentObserverList
+{
+public:
+  nsDocumentObserverList() :
+    mIterators(nsnull)
+  {}
+
+  class Iterator;
+  friend class Iterator;
+
+  class Iterator
+  {
+  public:
+    nsIDocumentObserver* GetNext();
+
+  protected:
+    Iterator(PRInt32 aStep, nsDocumentObserverList& aList) :
+      mPosition(aStep > 0 ? 0 : aList.mObservers.Count() - 1),
+      mStep(aStep),
+      mList(aList),
+      mNext(aList.mIterators)
+    {
+      NS_ASSERTION(mStep == 1 || mStep == -1, """"Invalid step size"""");
+      aList.mIterators = this;
+    }
+
+    ~Iterator() {
+      NS_ASSERTION(mList.mIterators == this, """"Destroyed out of order?"""");
+      mList.mIterators = mNext;
+    }
+
+    friend class nsDocumentObserverList;
+
+    // Our current position in mObservers
+    PRInt32 mPosition;
+    
+  private:
+    // Which direction to move in
+    PRInt32 mStep;
+
+    // The observer array to work with
+    nsDocumentObserverList& mList;
+
+    // Our next iterator.
+    Iterator* mNext;
+  };
+
+  class ForwardIterator : public Iterator
+  {
+  public:
+    ForwardIterator(nsDocumentObserverList& aList) :
+      Iterator(1, aList)
+    {}
+  };
+
+  class ReverseIterator : public Iterator
+  {
+  public:
+    ReverseIterator(nsDocumentObserverList& aList) :
+      Iterator(-1, aList)
+    {}
+  };
+
+  PRBool PrependElement(nsIDocumentObserver* aObserver);
+
+  PRInt32 Contains(nsIDocumentObserver* aPossibleObserver) const {
+    return mObservers.IndexOf(aPossibleObserver) != -1;
+  }
+
+  PRBool AppendElement(nsIDocumentObserver* aElement) {
+    return mObservers.AppendElement(aElement);
+  }
+
+  PRBool RemoveElement(nsIDocumentObserver* aElement);
+
+  void Clear();
+
+private:
+  nsAutoVoidArray mObservers;
+  Iterator* mIterators;
+};
+
 // Base class for our document implementations.
 //
 // Note that this class *implements* nsIDOMXMLDocument, but it's not
@@ -682,19 +770,26 @@ protected:
   // Dispatch an event to the ScriptGlobalObject for this document
   void DispatchEventToWindow(nsEvent *aEvent);
 
-  // Copy |mObservers| to an nsCOMArray in preparation so we can notify
-  // the list of observers set up at one point in time.
-  void CopyObserversTo(nsCOMArray<nsIDocumentObserver>& aDestination);
-
+  // NS_DOCUMENT_NOTIFY_OBSERVERS goes backwards for now for backwards compat.
+  // If you change this, update ContentAppended/Inserted/Removed accordingly.
 #define NS_DOCUMENT_NOTIFY_OBSERVERS(func_, params_)                          \
   do {                                                                        \
-    nsCOMArray<nsIDocumentObserver> observers_;                               \
-    CopyObserversTo(observers_);                                              \
-    for (PRInt32 i_ = observers_.Count() - 1; i_ >= 0; --i_) {                \
-      observers_[i_] -> func_ params_ ;                                       \
+    nsDocumentObserverList::ReverseIterator iter_(mObservers);                \
+    nsCOMPtr<nsIDocumentObserver> obs_;                                       \
+    while ((obs_ = iter_.GetNext())) {                                        \
+      obs_ -> func_ params_ ;                                                 \
     }                                                                         \
   } while (0)
 
+#define NS_DOCUMENT_FORWARD_NOTIFY_OBSERVERS(func_, params_)                  \
+  do {                                                                        \
+    nsDocumentObserverList::ForwardIterator iter_(mObservers);                \
+    nsCOMPtr<nsIDocumentObserver> obs_;                                       \
+    while ((obs_ = iter_.GetNext())) {                                        \
+      obs_ -> func_ params_ ;                                                 \
+    }                                                                         \
+  } while (0)
+ 
 #ifdef DEBUG
   void VerifyRootContentState();
 #endif
@@ -720,7 +815,7 @@ protected:
   nsCOMArray<nsIStyleSheet> mCatalogSheets;
 
   // Basically always has at least 1 entry
-  nsAutoVoidArray mObservers;
+  nsDocumentObserverList mObservers;
 
   // The document's script global object, the object from which the
   // document can get its script context and scope. This is the"""
496b676b3515af497c7f35255b4fbb2f7acbb96c,119406,341877,igor.bukanov%gmail.com,"Bug 341877: Reverting the previous commit, the patch was broken.
",1150764617,"""diff --git a/js/src/jscntxt.h b/js/src/jscntxt.h
index 5d77173..cc95ad1 100644
--- a/js/src/jscntxt.h
+++ b/js/src/jscntxt.h
@@ -649,9 +649,6 @@ struct JSContext {
     /* Top of the GC mark stack. */
     void                *gcCurrentMarkNode;
 #endif
-
-    /* List of native iterator states, needed for marking id arrays. */
-    JSNativeIteratorState *nativeIteratorStates;
 };
 
 #define JS_THREAD_ID(cx)            ((cx)->thread ? (cx)->thread->id : 0)
diff --git a/js/src/jsgc.c b/js/src/jsgc.c
index 582d07a..81cff29 100644
--- a/js/src/jsgc.c
+++ b/js/src/jsgc.c
@@ -2449,9 +2449,6 @@ restart:
         if (acx->sharpObjectMap.depth > 0)
             js_GCMarkSharpMap(cx, &acx->sharpObjectMap);
 
-        if (acx->nativeIteratorStates)
-            js_MarkNativeIteratorStates(cx, acx->nativeIteratorStates);
-
         acx->cachedIterObj = NULL;
     }
 
diff --git a/js/src/jsiter.c b/js/src/jsiter.c
index 3020979..eeb03f4 100644
--- a/js/src/jsiter.c
+++ b/js/src/jsiter.c
@@ -76,6 +76,33 @@ extern const char js_throw_str[]; /* from jsscan.h */
 #error JS_INITIAL_NSLOTS must be greater than JSSLOT_ITER_FLAGS.
 #endif
 
+static uint32
+iterator_mark(JSContext *cx, JSObject *obj, void *arg)
+{
+    jsval state, parent;
+    JSObject *iterable;
+
+    /* Avoid double work if js_CloseNativeIterator was called on obj. */
+    state = obj->slots[JSSLOT_ITER_STATE];
+    if (JSVAL_IS_VOID(state))
+        return 0;
+
+    parent = obj->slots[JSSLOT_PARENT];
+    if (!JSVAL_IS_NULL(state) && !JSVAL_IS_PRIMITIVE(parent)) {
+        iterable = JSVAL_TO_OBJECT(parent);
+#if JS_HAS_XML_SUPPORT
+        if ((JSVAL_TO_INT(obj->slots[JSSLOT_ITER_FLAGS]) & JSITER_FOREACH) &&
+            OBJECT_IS_XML(cx, iterable)) {
+            ((JSXMLObjectOps *) iterable->map->ops)->
+                enumerateValues(cx, iterable, JSENUMERATE_MARK, &state,
+                                NULL, NULL);
+        } else
+#endif
+            OBJ_ENUMERATE(cx, iterable, JSENUMERATE_MARK, &state, NULL);
+    }
+    return 0;
+}
+
 static void
 iterator_close(JSContext *cx, JSObject *obj)
 {
@@ -110,7 +137,8 @@ JSExtendedClass js_IteratorClass = {
     JSCLASS_HAS_CACHED_PROTO(JSProto_Iterator),
     JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,
     JS_EnumerateStub, JS_ResolveStub,   JS_ConvertStub,   JS_FinalizeStub,
-    JSCLASS_NO_OPTIONAL_MEMBERS },
+    NULL,             NULL,             NULL,             NULL,
+    NULL,             NULL,             iterator_mark,    NULL },
     NULL,             NULL,             NULL,             iterator_close,
     JSCLASS_NO_RESERVED_MEMBERS
 };
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index 48ccae7..aa94cdd 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -3673,12 +3673,10 @@ js_SetIdArrayLength(JSContext *cx, JSIdArray *ida, jsint length)
 }
 
 /* Private type used to iterate over all properties of a native JS object */
-struct JSNativeIteratorState {
-    jsint                   next_index; /* index into jsid array */
-    JSIdArray               *ida;       /* all property ids in enumeration */
-    JSNativeIteratorState   *next;      /* double-linked list support */
-    JSNativeIteratorState   **prevp;
-};
+typedef struct JSNativeIteratorState {
+    jsint next_index;   /* index into jsid array */
+    JSIdArray *ida;     /* all property ids in enumeration */
+} JSNativeIteratorState;
 
 /*
  * This function is used to enumerate the properties of native JSObjects
@@ -3774,13 +3772,6 @@ js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
         }
         state->ida = ida;
         state->next_index = 0;
-
-        state->next = cx->nativeIteratorStates;
-        if (state->next)
-            state->next->prevp = &state->next;
-        state->prevp = &cx->nativeIteratorStates;
-        *state->prevp = state;
-
         *statep = PRIVATE_TO_JSVAL(state);
         if (idp)
             *idp = INT_TO_JSVAL(length);
@@ -3798,43 +3789,28 @@ js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
 
       case JSENUMERATE_DESTROY:
         state = (JSNativeIteratorState *) JSVAL_TO_PRIVATE(*statep);
-
-        JS_ASSERT(cx->nativeIteratorStates);
-        JS_ASSERT(*state->prevp == state);
-        if (state->next) {
-            JS_ASSERT(state->next->prevp == &state->next);
-            state->next->prevp = state->prevp;
-        }
-        *state->prevp = state->next;
-
         JS_DestroyIdArray(cx, state->ida);
         JS_free(cx, state);
         *statep = JSVAL_NULL;
         break;
-    }
-    return JS_TRUE;
-}
-
-void
-js_MarkNativeIteratorStates(JSContext *cx, JSNativeIteratorState *state)
-{
-    jsid *cursor, *end, id;
 
-    JS_ASSERT(state);
+      case JSENUMERATE_MARK:
+        state = (JSNativeIteratorState *) JSVAL_TO_PRIVATE(*statep);
+        ida = state->ida;
+        length = ida->length;
+        for (i = 0; i < length; i++) {
+            jsid id;
 
-    do {
-        JS_ASSERT(*state->prevp == state);
-        cursor = state->ida->vector;
-        end = cursor + state->ida->length;
-        for (; cursor != end; ++cursor) {
-            id = *cursor;
+            id = ida->vector[i];
             if (JSID_IS_ATOM(id)) {
                 GC_MARK_ATOM(cx, JSID_TO_ATOM(id));
             } else if (JSID_IS_OBJECT(id)) {
                 GC_MARK(cx, JSID_TO_OBJECT(id), """"ida->vector[i]"""");
             }
         }
-    } while ((state = state->next) != NULL);
+        break;
+    }
+    return JS_TRUE;
 }
 
 JSBool
diff --git a/js/src/jsobj.h b/js/src/jsobj.h
index 5bf34c8..e0226dc 100644
--- a/js/src/jsobj.h
+++ b/js/src/jsobj.h
@@ -498,14 +498,6 @@ extern JSBool
 js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
              jsval *statep, jsid *idp);
 
-/*
- * js_Enumerate uses this opaque structure to hold its state.
- */
-typedef struct JSNativeIteratorState JSNativeIteratorState;
-
-extern void
-js_MarkNativeIteratorStates(JSContext *cx, JSNativeIteratorState *state);
-
 extern JSBool
 js_CheckAccess(JSContext *cx, JSObject *obj, jsid id, JSAccessMode mode,
                jsval *vp, uintN *attrsp);
diff --git a/js/src/jspubtd.h b/js/src/jspubtd.h
index e6e0871..6fb0abd 100644
--- a/js/src/jspubtd.h
+++ b/js/src/jspubtd.h
@@ -119,7 +119,8 @@ typedef enum JSAccessMode {
 typedef enum JSIterateOp {
     JSENUMERATE_INIT,       /* Create new iterator state */
     JSENUMERATE_NEXT,       /* Iterate once */
-    JSENUMERATE_DESTROY     /* Destroy iterator state */
+    JSENUMERATE_DESTROY,    /* Destroy iterator state */
+    JSENUMERATE_MARK        /* mark opaque iterator state */
 } JSIterateOp;
 
 /* Struct typedefs. */
diff --git a/js/src/jsxml.c b/js/src/jsxml.c
index ff97665..868f8ef 100644
--- a/js/src/jsxml.c
+++ b/js/src/jsxml.c
@@ -5151,6 +5151,9 @@ xml_enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
         }
         *statep = JSVAL_NULL;
         break;
+
+      case JSENUMERATE_MARK:
+        break;
     }
     return JS_TRUE;
 }
@@ -5310,6 +5313,9 @@ xml_enumerateValues(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
         }
         *statep = JSVAL_NULL;
         break;
+
+      case JSENUMERATE_MARK:
+        break;
     }
     return JS_TRUE;
 }"""
278380aac4c42cd527f411ab4fb9037ec02dfac8,119423,341877,igor.bukanov%gmail.com,"Bug 341877: Infrastructure to properly mark native iterator state during GC without changing public API. r=brendan
",1150757631,"""diff --git a/js/src/jscntxt.h b/js/src/jscntxt.h
index ed02799..0372a79 100644
--- a/js/src/jscntxt.h
+++ b/js/src/jscntxt.h
@@ -649,6 +649,9 @@ struct JSContext {
     /* Top of the GC mark stack. */
     void                *gcCurrentMarkNode;
 #endif
+
+    /* List of native iterator states, needed for marking id arrays. */
+    JSNativeIteratorState *nativeIteratorStates;
 };
 
 #define JS_THREAD_ID(cx)            ((cx)->thread ? (cx)->thread->id : 0)
diff --git a/js/src/jsgc.c b/js/src/jsgc.c
index 81cff29..582d07a 100644
--- a/js/src/jsgc.c
+++ b/js/src/jsgc.c
@@ -2449,6 +2449,9 @@ restart:
         if (acx->sharpObjectMap.depth > 0)
             js_GCMarkSharpMap(cx, &acx->sharpObjectMap);
 
+        if (acx->nativeIteratorStates)
+            js_MarkNativeIteratorStates(cx, acx->nativeIteratorStates);
+
         acx->cachedIterObj = NULL;
     }
 
diff --git a/js/src/jsiter.c b/js/src/jsiter.c
index 7c29820..2c13d29 100644
--- a/js/src/jsiter.c
+++ b/js/src/jsiter.c
@@ -76,33 +76,6 @@ extern const char js_throw_str[]; /* from jsscan.h */
 #error JS_INITIAL_NSLOTS must be greater than JSSLOT_ITER_FLAGS.
 #endif
 
-static uint32
-iterator_mark(JSContext *cx, JSObject *obj, void *arg)
-{
-    jsval state, parent;
-    JSObject *iterable;
-
-    /* Avoid double work if js_CloseNativeIterator was called on obj. */
-    state = obj->slots[JSSLOT_ITER_STATE];
-    if (JSVAL_IS_VOID(state))
-        return 0;
-
-    parent = obj->slots[JSSLOT_PARENT];
-    if (!JSVAL_IS_NULL(state) && !JSVAL_IS_PRIMITIVE(parent)) {
-        iterable = JSVAL_TO_OBJECT(parent);
-#if JS_HAS_XML_SUPPORT
-        if ((JSVAL_TO_INT(obj->slots[JSSLOT_ITER_FLAGS]) & JSITER_FOREACH) &&
-            OBJECT_IS_XML(cx, iterable)) {
-            ((JSXMLObjectOps *) iterable->map->ops)->
-                enumerateValues(cx, iterable, JSENUMERATE_MARK, &state,
-                                NULL, NULL);
-        } else
-#endif
-            OBJ_ENUMERATE(cx, iterable, JSENUMERATE_MARK, &state, NULL);
-    }
-    return 0;
-}
-
 static void
 iterator_close(JSContext *cx, JSObject *obj)
 {
@@ -137,8 +110,7 @@ JSExtendedClass js_IteratorClass = {
     JSCLASS_HAS_CACHED_PROTO(JSProto_Iterator),
     JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,
     JS_EnumerateStub, JS_ResolveStub,   JS_ConvertStub,   JS_FinalizeStub,
-    NULL,             NULL,             NULL,             NULL,
-    NULL,             NULL,             iterator_mark,    NULL },
+    JSCLASS_NO_OPTIONAL_MEMBERS },
     NULL,             NULL,             NULL,             iterator_close,
     JSCLASS_NO_RESERVED_MEMBERS
 };
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index aa94cdd..48ccae7 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -3673,10 +3673,12 @@ js_SetIdArrayLength(JSContext *cx, JSIdArray *ida, jsint length)
 }
 
 /* Private type used to iterate over all properties of a native JS object */
-typedef struct JSNativeIteratorState {
-    jsint next_index;   /* index into jsid array */
-    JSIdArray *ida;     /* all property ids in enumeration */
-} JSNativeIteratorState;
+struct JSNativeIteratorState {
+    jsint                   next_index; /* index into jsid array */
+    JSIdArray               *ida;       /* all property ids in enumeration */
+    JSNativeIteratorState   *next;      /* double-linked list support */
+    JSNativeIteratorState   **prevp;
+};
 
 /*
  * This function is used to enumerate the properties of native JSObjects
@@ -3772,6 +3774,13 @@ js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
         }
         state->ida = ida;
         state->next_index = 0;
+
+        state->next = cx->nativeIteratorStates;
+        if (state->next)
+            state->next->prevp = &state->next;
+        state->prevp = &cx->nativeIteratorStates;
+        *state->prevp = state;
+
         *statep = PRIVATE_TO_JSVAL(state);
         if (idp)
             *idp = INT_TO_JSVAL(length);
@@ -3789,28 +3798,43 @@ js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
 
       case JSENUMERATE_DESTROY:
         state = (JSNativeIteratorState *) JSVAL_TO_PRIVATE(*statep);
+
+        JS_ASSERT(cx->nativeIteratorStates);
+        JS_ASSERT(*state->prevp == state);
+        if (state->next) {
+            JS_ASSERT(state->next->prevp == &state->next);
+            state->next->prevp = state->prevp;
+        }
+        *state->prevp = state->next;
+
         JS_DestroyIdArray(cx, state->ida);
         JS_free(cx, state);
         *statep = JSVAL_NULL;
         break;
+    }
+    return JS_TRUE;
+}
 
-      case JSENUMERATE_MARK:
-        state = (JSNativeIteratorState *) JSVAL_TO_PRIVATE(*statep);
-        ida = state->ida;
-        length = ida->length;
-        for (i = 0; i < length; i++) {
-            jsid id;
+void
+js_MarkNativeIteratorStates(JSContext *cx, JSNativeIteratorState *state)
+{
+    jsid *cursor, *end, id;
 
-            id = ida->vector[i];
+    JS_ASSERT(state);
+
+    do {
+        JS_ASSERT(*state->prevp == state);
+        cursor = state->ida->vector;
+        end = cursor + state->ida->length;
+        for (; cursor != end; ++cursor) {
+            id = *cursor;
             if (JSID_IS_ATOM(id)) {
                 GC_MARK_ATOM(cx, JSID_TO_ATOM(id));
             } else if (JSID_IS_OBJECT(id)) {
                 GC_MARK(cx, JSID_TO_OBJECT(id), """"ida->vector[i]"""");
             }
         }
-        break;
-    }
-    return JS_TRUE;
+    } while ((state = state->next) != NULL);
 }
 
 JSBool
diff --git a/js/src/jsobj.h b/js/src/jsobj.h
index e0226dc..5bf34c8 100644
--- a/js/src/jsobj.h
+++ b/js/src/jsobj.h
@@ -498,6 +498,14 @@ extern JSBool
 js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
              jsval *statep, jsid *idp);
 
+/*
+ * js_Enumerate uses this opaque structure to hold its state.
+ */
+typedef struct JSNativeIteratorState JSNativeIteratorState;
+
+extern void
+js_MarkNativeIteratorStates(JSContext *cx, JSNativeIteratorState *state);
+
 extern JSBool
 js_CheckAccess(JSContext *cx, JSObject *obj, jsid id, JSAccessMode mode,
                jsval *vp, uintN *attrsp);
diff --git a/js/src/jspubtd.h b/js/src/jspubtd.h
index 6fb0abd..e6e0871 100644
--- a/js/src/jspubtd.h
+++ b/js/src/jspubtd.h
@@ -119,8 +119,7 @@ typedef enum JSAccessMode {
 typedef enum JSIterateOp {
     JSENUMERATE_INIT,       /* Create new iterator state */
     JSENUMERATE_NEXT,       /* Iterate once */
-    JSENUMERATE_DESTROY,    /* Destroy iterator state */
-    JSENUMERATE_MARK        /* mark opaque iterator state */
+    JSENUMERATE_DESTROY     /* Destroy iterator state */
 } JSIterateOp;
 
 /* Struct typedefs. */
diff --git a/js/src/jsxml.c b/js/src/jsxml.c
index 868f8ef..ff97665 100644
--- a/js/src/jsxml.c
+++ b/js/src/jsxml.c
@@ -5151,9 +5151,6 @@ xml_enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
         }
         *statep = JSVAL_NULL;
         break;
-
-      case JSENUMERATE_MARK:
-        break;
     }
     return JS_TRUE;
 }
@@ -5313,9 +5310,6 @@ xml_enumerateValues(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
         }
         *statep = JSVAL_NULL;
         break;
-
-      case JSENUMERATE_MARK:
-        break;
     }
     return JS_TRUE;
 }"""
0869d265703dd414248b517d88d99b752cb410c1,119525,341877,brendan%mozilla.org,"Fix iterator to mark opaque state (341877, r=igor).
",1150596280,"""diff --git a/js/src/jsiter.c b/js/src/jsiter.c
index 2c13d29..7c29820 100644
--- a/js/src/jsiter.c
+++ b/js/src/jsiter.c
@@ -76,6 +76,33 @@ extern const char js_throw_str[]; /* from jsscan.h */
 #error JS_INITIAL_NSLOTS must be greater than JSSLOT_ITER_FLAGS.
 #endif
 
+static uint32
+iterator_mark(JSContext *cx, JSObject *obj, void *arg)
+{
+    jsval state, parent;
+    JSObject *iterable;
+
+    /* Avoid double work if js_CloseNativeIterator was called on obj. */
+    state = obj->slots[JSSLOT_ITER_STATE];
+    if (JSVAL_IS_VOID(state))
+        return 0;
+
+    parent = obj->slots[JSSLOT_PARENT];
+    if (!JSVAL_IS_NULL(state) && !JSVAL_IS_PRIMITIVE(parent)) {
+        iterable = JSVAL_TO_OBJECT(parent);
+#if JS_HAS_XML_SUPPORT
+        if ((JSVAL_TO_INT(obj->slots[JSSLOT_ITER_FLAGS]) & JSITER_FOREACH) &&
+            OBJECT_IS_XML(cx, iterable)) {
+            ((JSXMLObjectOps *) iterable->map->ops)->
+                enumerateValues(cx, iterable, JSENUMERATE_MARK, &state,
+                                NULL, NULL);
+        } else
+#endif
+            OBJ_ENUMERATE(cx, iterable, JSENUMERATE_MARK, &state, NULL);
+    }
+    return 0;
+}
+
 static void
 iterator_close(JSContext *cx, JSObject *obj)
 {
@@ -110,7 +137,8 @@ JSExtendedClass js_IteratorClass = {
     JSCLASS_HAS_CACHED_PROTO(JSProto_Iterator),
     JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,
     JS_EnumerateStub, JS_ResolveStub,   JS_ConvertStub,   JS_FinalizeStub,
-    JSCLASS_NO_OPTIONAL_MEMBERS },
+    NULL,             NULL,             NULL,             NULL,
+    NULL,             NULL,             iterator_mark,    NULL },
     NULL,             NULL,             NULL,             iterator_close,
     JSCLASS_NO_RESERVED_MEMBERS
 };
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index e658b5f..aa94cdd 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -3793,6 +3793,22 @@ js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
         JS_free(cx, state);
         *statep = JSVAL_NULL;
         break;
+
+      case JSENUMERATE_MARK:
+        state = (JSNativeIteratorState *) JSVAL_TO_PRIVATE(*statep);
+        ida = state->ida;
+        length = ida->length;
+        for (i = 0; i < length; i++) {
+            jsid id;
+
+            id = ida->vector[i];
+            if (JSID_IS_ATOM(id)) {
+                GC_MARK_ATOM(cx, JSID_TO_ATOM(id));
+            } else if (JSID_IS_OBJECT(id)) {
+                GC_MARK(cx, JSID_TO_OBJECT(id), """"ida->vector[i]"""");
+            }
+        }
+        break;
     }
     return JS_TRUE;
 }
diff --git a/js/src/jspubtd.h b/js/src/jspubtd.h
index e6e0871..6fb0abd 100644
--- a/js/src/jspubtd.h
+++ b/js/src/jspubtd.h
@@ -119,7 +119,8 @@ typedef enum JSAccessMode {
 typedef enum JSIterateOp {
     JSENUMERATE_INIT,       /* Create new iterator state */
     JSENUMERATE_NEXT,       /* Iterate once */
-    JSENUMERATE_DESTROY     /* Destroy iterator state */
+    JSENUMERATE_DESTROY,    /* Destroy iterator state */
+    JSENUMERATE_MARK        /* mark opaque iterator state */
 } JSIterateOp;
 
 /* Struct typedefs. */
diff --git a/js/src/jsxml.c b/js/src/jsxml.c
index ff97665..868f8ef 100644
--- a/js/src/jsxml.c
+++ b/js/src/jsxml.c
@@ -5151,6 +5151,9 @@ xml_enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
         }
         *statep = JSVAL_NULL;
         break;
+
+      case JSENUMERATE_MARK:
+        break;
     }
     return JS_TRUE;
 }
@@ -5310,6 +5313,9 @@ xml_enumerateValues(JSContext *cx, JSObject *obj, JSIterateOp enum_op,
         }
         *statep = JSVAL_NULL;
         break;
+
+      case JSENUMERATE_MARK:
+        break;
     }
     return JS_TRUE;
 }"""
4e5718a107256e676ac42b9177c766df0fb185eb,119650,320982,Olli.Pettay%helsinki.fi,"Bug 320982, Crash when browse this Site over top menu [@ nsGlobalWindow::RunTimeout], r=mrbkap, sr=bryner
",1150399191,"""diff --git a/dom/src/base/nsGlobalWindow.cpp b/dom/src/base/nsGlobalWindow.cpp
index 73d5574..afe1b46 100644
--- a/dom/src/base/nsGlobalWindow.cpp
+++ b/dom/src/base/nsGlobalWindow.cpp
@@ -336,6 +336,7 @@ nsGlobalWindow::nsGlobalWindow(nsGlobalWindow *aOuterWindow)
     mHavePendingClose(PR_FALSE),
     mHadOriginalOpener(PR_FALSE),
     mIsPopupSpam(PR_FALSE),
+    mFireOfflineStatusChangeEventOnThaw(PR_FALSE),
     mGlobalObjectOwner(nsnull),
     mTimeouts(nsnull),
     mTimeoutInsertionPoint(&mTimeouts),
@@ -5800,16 +5801,61 @@ nsGlobalWindow::Observe(nsISupports* aSubject, const char* aTopic,
   return NS_ERROR_FAILURE;
 }
 
+PR_STATIC_CALLBACK(PLDHashOperator)
+FirePendingStorageEvents(const nsAString& aKey, PRBool aData, void *userArg)
+{
+  nsGlobalWindow *win = NS_STATIC_CAST(nsGlobalWindow *, userArg);
+
+  nsCOMPtr<nsIDOMStorage> storage;
+  win->GetSessionStorage(getter_AddRefs(storage));
+
+  if (storage) {
+    win->Observe(storage, """"dom-storage-changed"""",
+                 aKey.IsEmpty() ? nsnull : PromiseFlatString(aKey).get());
+  }
+
+  return PL_DHASH_NEXT;
+}
+
 nsresult
 nsGlobalWindow::FireDelayedDOMEvents()
 {
   FORWARD_TO_INNER(FireDelayedDOMEvents, (), NS_ERROR_UNEXPECTED);
 
+  if (mPendingStorageEvents) {
+    // Fire pending storage events.
+    mPendingStorageEvents->EnumerateRead(FirePendingStorageEvents, this);
+
+    delete mPendingStorageEvents;
+    mPendingStorageEvents = nsnull;
+  }
+
   if (mFireOfflineStatusChangeEventOnThaw) {
     mFireOfflineStatusChangeEventOnThaw = PR_FALSE;
     FireOfflineStatusEvent();
   }
 
+  nsCOMPtr<nsIDocShellTreeNode> node =
+    do_QueryInterface(GetDocShell());
+  if (node) {
+    PRInt32 childCount = 0;
+    node->GetChildCount(&childCount);
+
+    for (PRInt32 i = 0; i < childCount; ++i) {
+      nsCOMPtr<nsIDocShellTreeItem> childShell;
+      node->GetChildAt(i, getter_AddRefs(childShell));
+      NS_ASSERTION(childShell, """"null child shell"""");
+
+      nsCOMPtr<nsPIDOMWindow> pWin = do_GetInterface(childShell);
+      if (pWin) {
+        nsGlobalWindow *win =
+          NS_STATIC_CAST(nsGlobalWindow*,
+                         NS_STATIC_CAST(nsPIDOMWindow*, pWin));
+        win->FireDelayedDOMEvents();
+      }
+    }
+  }
+
   return NS_OK;
 }
 
@@ -6976,6 +7022,13 @@ nsGlobalWindow::SaveWindowState(nsISupports **aState)
   nsGlobalWindow *inner = GetCurrentInnerWindowInternal();
   NS_ASSERTION(inner, """"No inner window to save"""");
 
+  // Don't do anything else to this inner window! After this point, all
+  // calls to SetTimeoutOrInterval will create entries in the timeout
+  // list that will only run after this window has come out of the bfcache.
+  // Also, while we're frozen, we won't dispatch online/offline events
+  // to the page.
+  inner->Freeze();
+
   // Remember the outer window's XPConnect prototype.
   nsCOMPtr<nsIClassInfo> ci =
     do_QueryInterface((nsIScriptGlobalObject *)this);
@@ -6996,29 +7049,10 @@ nsGlobalWindow::SaveWindowState(nsISupports **aState)
   printf(""""saving window state, state = %p\n"""", (void*)state);
 #endif
 
-  // Don't do anything else to this inner window!
-  inner->Freeze();
-
   state.swap(*aState);
   return NS_OK;
 }
 
-PR_STATIC_CALLBACK(PLDHashOperator)
-FirePendingStorageEvents(const nsAString& aKey, PRBool aData, void *userArg)
-{
-  nsGlobalWindow *win = NS_STATIC_CAST(nsGlobalWindow *, userArg);
-
-  nsCOMPtr<nsIDOMStorage> storage;
-  win->GetSessionStorage(getter_AddRefs(storage));
-
-  if (storage) {
-    win->Observe(storage, """"dom-storage-changed"""",
-                 aKey.IsEmpty() ? nsnull : PromiseFlatString(aKey).get());
-  }
-
-  return PL_DHASH_NEXT;
-}
-
 nsresult
 nsGlobalWindow::RestoreWindowState(nsISupports *aState)
 {
@@ -7082,15 +7116,6 @@ nsGlobalWindow::RestoreWindowState(nsISupports *aState)
 
   holder->DidRestoreWindow();
 
-  if (inner->mPendingStorageEvents) {
-    // Fire pending storage events.
-    inner->mPendingStorageEvents->EnumerateRead(FirePendingStorageEvents,
-                                                inner);
-
-    delete inner->mPendingStorageEvents;
-    inner->mPendingStorageEvents = nsnull;
-  }
-
   return NS_OK;
 }
 
@@ -7111,13 +7136,13 @@ nsGlobalWindow::SuspendTimeouts()
     if (t->mTimer) {
       t->mTimer->Cancel();
       t->mTimer = nsnull;
-    }
 
-    // Drop the reference that the timer's closure had on this timeout, we'll
-    // add it back in ResumeTimeouts. Note that it shouldn't matter that we're
-    // passing null for the context, since this shouldn't actually release this
-    // timeout.
-    t->Release();
+      // Drop the reference that the timer's closure had on this timeout, we'll
+      // add it back in ResumeTimeouts. Note that it shouldn't matter that we're
+      // passing null for the context, since this shouldn't actually release this
+      // timeout.
+      t->Release();
+    }
   }
 
   // Suspend our children as well.
@@ -7138,6 +7163,12 @@ nsGlobalWindow::SuspendTimeouts()
                          NS_STATIC_CAST(nsPIDOMWindow*, pWin));
 
         win->SuspendTimeouts();
+
+        NS_ASSERTION(win->IsOuterWindow(), """"Expected outer window"""");
+        nsGlobalWindow* inner = win->GetCurrentInnerWindowInternal();
+        if (inner) {
+          inner->Freeze();
+        }
       }
     }
   }
@@ -7195,6 +7226,12 @@ nsGlobalWindow::ResumeTimeouts()
           NS_STATIC_CAST(nsGlobalWindow*,
                          NS_STATIC_CAST(nsPIDOMWindow*, pWin));
 
+        NS_ASSERTION(win->IsOuterWindow(), """"Expected outer window"""");
+        nsGlobalWindow* inner = win->GetCurrentInnerWindowInternal();
+        if (inner) {
+          inner->Thaw();
+        }
+
         rv = win->ResumeTimeouts();
         NS_ENSURE_SUCCESS(rv, rv);
       }"""
a4da672f941d81556926b3fd8070fd810120ad68,119696,340129,igor.bukanov%gmail.com,"Bug 340129: Bulletproof rooting of objects during sharp graph construction/usage. r=mrbkap
",1150366482,"""diff --git a/js/src/jsgc.c b/js/src/jsgc.c
index e4ef056..a6c5ece 100644
--- a/js/src/jsgc.c
+++ b/js/src/jsgc.c
@@ -2289,6 +2289,9 @@ restart:
             }
         }
 
+        if (acx->sharpObjectMap.depth > 0)
+            js_GCMarkSharpMap(cx, &acx->sharpObjectMap);
+
         acx->cachedIterObj = NULL;
     }
 
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index 69b161d..e658b5f 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -648,6 +648,42 @@ js_LeaveSharpObject(JSContext *cx, JSIdArray **idap)
     }
 }
 
+JS_STATIC_DLL_CALLBACK(intN)
+gc_sharp_table_entry_marker(JSHashEntry *he, intN i, void *arg)
+{
+    GC_MARK((JSContext *)arg, (JSObject *)he->key, """"sharp table entry"""");
+    return JS_DHASH_NEXT;
+}
+
+void
+js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map)
+{
+    JS_ASSERT(map->depth > 0);
+    JS_ASSERT(map->table);
+
+    /*
+     * During recursive calls to MarkSharpObjects a non-native object or
+     * object with a custom getProperty method can potentially return an
+     * unrooted value or even cut from the object graph an argument of one of
+     * MarkSharpObjects recursive invocations. So we must protect map->table
+     * entries against GC.
+     *
+     * We can not simply use JSTempValueRooter to mark the obj argument of
+     * MarkSharpObjects during recursion as we have to protect *all* entries
+     * in JSSharpObjectMap including those that contains otherwise unreachable
+     * objects just allocated through custom getProperty. Otherwise newer
+     * allocations can re-use the address of an object stored in the hashtable
+     * confusing js_EnterSharpObject. So to address the problem we simply
+     * mark all objects from map->table.
+     *
+     * An alternative """"proper"""" solution is to use JSTempValueRooter in
+     * MarkSharpObjects with code to remove during finalization entries
+     * with otherwise unreachable objects. But this is way too complex
+     * to justify spending efforts.
+     */
+    JS_HashTableEnumerateEntries(map->table, gc_sharp_table_entry_marker, cx);
+}
+
 #define OBJ_TOSTRING_EXTRA      4       /* for 4 local GC roots */
 
 #if JS_HAS_TOSOURCE
diff --git a/js/src/jsobj.h b/js/src/jsobj.h
index 5f76eac..e0226dc 100644
--- a/js/src/jsobj.h
+++ b/js/src/jsobj.h
@@ -304,6 +304,13 @@ js_EnterSharpObject(JSContext *cx, JSObject *obj, JSIdArray **idap,
 extern void
 js_LeaveSharpObject(JSContext *cx, JSIdArray **idap);
 
+/*
+ * Mark objects stored in map if GC happens between js_EnterSharpObject
+ * and js_LeaveSharpObject. GC calls this when map->depth > 0.
+ */
+extern void
+js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map);
+
 extern JSBool
 js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 jsval *rval);"""
8fcfad6885b662fef2af482da9620ed78b1da011,119700,338129,Olli.Pettay%helsinki.fi,"Bug 338129, r=glazman, sr=neil
",1150356661,"""diff --git a/editor/libeditor/base/nsEditor.cpp b/editor/libeditor/base/nsEditor.cpp
index 7060d63..d03ef84 100644
--- a/editor/libeditor/base/nsEditor.cpp
+++ b/editor/libeditor/base/nsEditor.cpp
@@ -446,13 +446,6 @@ nsEditor::RemoveEventListeners()
                                     NS_GET_IID(nsIDOMDragListener));
     }
   }
-
-  mKeyListenerP = nsnull;
-  mMouseListenerP = nsnull;
-  mFocusListenerP = nsnull;
-  mTextListenerP = nsnull;
-  mCompositionListenerP = nsnull;
-  mDragListenerP = nsnull;
 }
 
 NS_IMETHODIMP
diff --git a/editor/libeditor/html/nsHTMLAbsPosition.cpp b/editor/libeditor/html/nsHTMLAbsPosition.cpp
index 4bc9421..7ca052d 100644
--- a/editor/libeditor/html/nsHTMLAbsPosition.cpp
+++ b/editor/libeditor/html/nsHTMLAbsPosition.cpp
@@ -316,9 +316,6 @@ nsHTMLEditor::HideGrabber()
   nsCOMPtr<nsIPresShell> ps = do_QueryReferent(mPresShellWeak);
   if (!ps) return NS_ERROR_NOT_INITIALIZED;
 
-  nsCOMPtr<nsIDocumentObserver> docObserver(do_QueryInterface(ps));
-  if (!docObserver) return NS_ERROR_FAILURE;
-
   // get the root content node.
 
   nsIDOMElement *rootElement = GetRoot();
@@ -326,9 +323,9 @@ nsHTMLEditor::HideGrabber()
   nsCOMPtr<nsIContent> rootContent = do_QueryInterface(rootElement);
   if (!rootContent) return NS_ERROR_NULL_POINTER;
 
-  DeleteRefToAnonymousNode(mGrabber, rootContent, docObserver);
+  DeleteRefToAnonymousNode(mGrabber, rootContent, ps);
   mGrabber = nsnull;
-  DeleteRefToAnonymousNode(mPositioningShadow, rootContent, docObserver);
+  DeleteRefToAnonymousNode(mPositioningShadow, rootContent, ps);
   mPositioningShadow = nsnull;
 
   return NS_OK;
@@ -425,9 +422,6 @@ nsHTMLEditor::EndMoving()
     nsCOMPtr<nsIPresShell> ps = do_QueryReferent(mPresShellWeak);
     if (!ps) return NS_ERROR_NOT_INITIALIZED;
 
-    nsCOMPtr<nsIDocumentObserver> docObserver(do_QueryInterface(ps));
-    if (!docObserver) return NS_ERROR_FAILURE;
-
     // get the root content node.
 
     nsIDOMElement *rootElement = GetRoot();
@@ -435,7 +429,7 @@ nsHTMLEditor::EndMoving()
     nsCOMPtr<nsIContent> rootContent( do_QueryInterface(rootElement) );
     if (!rootContent) return NS_ERROR_FAILURE;
 
-    DeleteRefToAnonymousNode(mPositioningShadow, rootContent, docObserver);
+    DeleteRefToAnonymousNode(mPositioningShadow, rootContent, ps);
     mPositioningShadow = nsnull;
   }
   nsCOMPtr<nsIDOMEventReceiver> erP = GetDOMEventReceiver();
diff --git a/editor/libeditor/html/nsHTMLAnonymousUtils.cpp b/editor/libeditor/html/nsHTMLAnonymousUtils.cpp
index a34208d..c65ff94 100644
--- a/editor/libeditor/html/nsHTMLAnonymousUtils.cpp
+++ b/editor/libeditor/html/nsHTMLAnonymousUtils.cpp
@@ -41,6 +41,7 @@
 #include """"nsIDocument.h""""
 #include """"nsIEditor.h""""
 #include """"nsIPresShell.h""""
+#include """"nsPresContext.h""""
 
 #include """"nsISelection.h""""
 
@@ -51,6 +52,7 @@
 
 #include """"nsIDOMHTMLElement.h""""
 #include """"nsIDOMNSHTMLElement.h""""
+#include """"nsIDOMEventTarget.h""""
 
 #include """"nsIDOMCSSValue.h""""
 #include """"nsIDOMCSSPrimitiveValue.h""""
@@ -165,11 +167,27 @@ nsHTMLEditor::CreateAnonymousElement(const nsAString & aTag, nsIDOMNode *  aPare
   return NS_OK;
 }
 
+// Removes event listener and calls DeleteRefToAnonymousNode.
+void
+nsHTMLEditor::RemoveListenerAndDeleteRef(const nsAString& aEvent,
+                                         nsIDOMEventListener* aListener,
+                                         PRBool aUseCapture,
+                                         nsIDOMElement* aElement,
+                                         nsIContent * aParentContent,
+                                         nsIPresShell* aShell)
+{
+  nsCOMPtr<nsIDOMEventTarget> evtTarget(do_QueryInterface(aElement));
+  if (evtTarget) {
+    evtTarget->RemoveEventListener(aEvent, aListener, aUseCapture);
+  }
+  DeleteRefToAnonymousNode(aElement, aParentContent, aShell);
+}
+
 // Deletes all references to an anonymous element
 void
 nsHTMLEditor::DeleteRefToAnonymousNode(nsIDOMElement* aElement,
-                                       nsIContent * aParentContent,
-                                       nsIDocumentObserver * aDocObserver)
+                                       nsIContent* aParentContent,
+                                       nsIPresShell* aShell)
 {
   // call ContentRemoved() for the anonymous content
   // node so its references get removed from the frame manager's
@@ -178,8 +196,17 @@ nsHTMLEditor::DeleteRefToAnonymousNode(nsIDOMElement* aElement,
   if (aElement) {
     nsCOMPtr<nsIContent> content = do_QueryInterface(aElement);
     if (content) {
-      aDocObserver->ContentRemoved(content->GetCurrentDoc(),
-				   aParentContent, content, -1);
+      // Need to check whether aShell has been destroyed (but not yet deleted).
+      // In that case presContext->GetPresShell() returns nsnull.
+      // See bug 338129.
+      if (aShell && aShell->GetPresContext() &&
+          aShell->GetPresContext()->GetPresShell() == aShell) {
+        nsCOMPtr<nsIDocumentObserver> docObserver = do_QueryInterface(aShell);
+        if (docObserver) {
+          docObserver->ContentRemoved(content->GetCurrentDoc(),
+                                      aParentContent, content, -1);
+        }
+      }
       content->UnbindFromTree();
     }
   }
diff --git a/editor/libeditor/html/nsHTMLEditor.h b/editor/libeditor/html/nsHTMLEditor.h
index 28d76c0..0f64db4 100644
--- a/editor/libeditor/html/nsHTMLEditor.h
+++ b/editor/libeditor/html/nsHTMLEditor.h
@@ -792,9 +792,15 @@ public:
 protected:
 
   /* ANONYMOUS UTILS */
+  void     RemoveListenerAndDeleteRef(const nsAString& aEvent,
+                                      nsIDOMEventListener* aListener,
+                                      PRBool aUseCapture,
+                                      nsIDOMElement* aElement,
+                                      nsIContent* aParentContent,
+                                      nsIPresShell* aShell);
   void     DeleteRefToAnonymousNode(nsIDOMElement* aElement,
                                     nsIContent * aParentContent,
-                                    nsIDocumentObserver * aDocObserver);
+                                    nsIPresShell* aShell);
   nsresult GetElementOrigin(nsIDOMElement * aElement, PRInt32 & aX, PRInt32 & aY);
   nsresult GetPositionAndDimensions(nsIDOMElement * aElement,
                                     PRInt32 & aX, PRInt32 & aY,
diff --git a/editor/libeditor/html/nsHTMLInlineTableEditor.cpp b/editor/libeditor/html/nsHTMLInlineTableEditor.cpp
index c0934d5..452ed45 100644
--- a/editor/libeditor/html/nsHTMLInlineTableEditor.cpp
+++ b/editor/libeditor/html/nsHTMLInlineTableEditor.cpp
@@ -122,9 +122,6 @@ nsHTMLEditor::HideInlineTableEditingUI()
   nsCOMPtr<nsIPresShell> ps = do_QueryReferent(mPresShellWeak);
   if (!ps) return NS_ERROR_NOT_INITIALIZED;
 
-  nsCOMPtr<nsIDocumentObserver> docObserver(do_QueryInterface(ps));
-  if (!docObserver) return NS_ERROR_FAILURE;
-
   // get the root content node.
 
   nsIDOMElement *bodyElement = GetRoot();
@@ -132,17 +129,17 @@ nsHTMLEditor::HideInlineTableEditingUI()
   nsCOMPtr<nsIContent> bodyContent( do_QueryInterface(bodyElement) );
   if (!bodyContent) return NS_ERROR_FAILURE;
 
-  DeleteRefToAnonymousNode(mAddColumnBeforeButton, bodyContent, docObserver);
+  DeleteRefToAnonymousNode(mAddColumnBeforeButton, bodyContent, ps);
   mAddColumnBeforeButton = nsnull;
-  DeleteRefToAnonymousNode(mRemoveColumnButton, bodyContent, docObserver);
+  DeleteRefToAnonymousNode(mRemoveColumnButton, bodyContent, ps);
   mRemoveColumnButton = nsnull;
-  DeleteRefToAnonymousNode(mAddColumnAfterButton, bodyContent, docObserver);
+  DeleteRefToAnonymousNode(mAddColumnAfterButton, bodyContent, ps);
   mAddColumnAfterButton = nsnull;
-  DeleteRefToAnonymousNode(mAddRowBeforeButton, bodyContent, docObserver);
+  DeleteRefToAnonymousNode(mAddRowBeforeButton, bodyContent, ps);
   mAddRowBeforeButton = nsnull;
-  DeleteRefToAnonymousNode(mRemoveRowButton, bodyContent, docObserver);
+  DeleteRefToAnonymousNode(mRemoveRowButton, bodyContent, ps);
   mRemoveRowButton = nsnull;
-  DeleteRefToAnonymousNode(mAddRowAfterButton, bodyContent, docObserver);
+  DeleteRefToAnonymousNode(mAddRowAfterButton, bodyContent, ps);
   mAddRowAfterButton = nsnull;
 
   return NS_OK;
diff --git a/editor/libeditor/html/nsHTMLObjectResizer.cpp b/editor/libeditor/html/nsHTMLObjectResizer.cpp
index 254914a..856c6e0 100644
--- a/editor/libeditor/html/nsHTMLObjectResizer.cpp
+++ b/editor/libeditor/html/nsHTMLObjectResizer.cpp
@@ -425,9 +425,6 @@ nsHTMLEditor::HideResizers(void)
   nsCOMPtr<nsIPresShell> ps = do_QueryReferent(mPresShellWeak);
   if (!ps) return NS_ERROR_NOT_INITIALIZED;
 
-  nsCOMPtr<nsIDocumentObserver> docObserver(do_QueryInterface(ps));
-  if (!docObserver) return NS_ERROR_FAILURE;
-
   // get the root content node.
 
   nsIDOMElement *bodyElement = GetRoot();
@@ -435,25 +432,46 @@ nsHTMLEditor::HideResizers(void)
   nsCOMPtr<nsIContent> bodyContent( do_QueryInterface(bodyElement) );
   if (!bodyContent) return NS_ERROR_FAILURE;
 
-  DeleteRefToAnonymousNode(mTopLeftHandle, bodyContent, docObserver);
+  NS_NAMED_LITERAL_STRING(mousedown, """"mousedown"""");
+  
+  RemoveListenerAndDeleteRef(mousedown, mMouseListenerP, PR_TRUE,
+                             mTopLeftHandle, bodyContent, ps);
   mTopLeftHandle = nsnull;
-  DeleteRefToAnonymousNode(mTopHandle, bodyContent, docObserver);
+
+  RemoveListenerAndDeleteRef(mousedown, mMouseListenerP, PR_TRUE,
+                             mTopHandle, bodyContent, ps);
   mTopHandle = nsnull;
-  DeleteRefToAnonymousNode(mTopRightHandle, bodyContent, docObserver);
+
+  RemoveListenerAndDeleteRef(mousedown, mMouseListenerP, PR_TRUE,
+                             mTopRightHandle, bodyContent, ps);
   mTopRightHandle = nsnull;
-  DeleteRefToAnonymousNode(mLeftHandle, bodyContent, docObserver);
+
+  RemoveListenerAndDeleteRef(mousedown, mMouseListenerP, PR_TRUE,
+                             mLeftHandle, bodyContent, ps);
   mLeftHandle = nsnull;
-  DeleteRefToAnonymousNode(mRightHandle, bodyContent, docObserver);
+
+  RemoveListenerAndDeleteRef(mousedown, mMouseListenerP, PR_TRUE,
+                             mRightHandle, bodyContent, ps);
   mRightHandle = nsnull;
-  DeleteRefToAnonymousNode(mBottomLeftHandle, bodyContent, docObserver);
+
+  RemoveListenerAndDeleteRef(mousedown, mMouseListenerP, PR_TRUE,
+                             mBottomLeftHandle, bodyContent, ps);
   mBottomLeftHandle = nsnull;
-  DeleteRefToAnonymousNode(mBottomHandle, bodyContent, docObserver);
+
+  RemoveListenerAndDeleteRef(mousedown, mMouseListenerP, PR_TRUE,
+                             mBottomHandle, bodyContent, ps);
   mBottomHandle = nsnull;
-  DeleteRefToAnonymousNode(mBottomRightHandle, bodyContent, docObserver);
+
+  RemoveListenerAndDeleteRef(mousedown, mMouseListenerP, PR_TRUE,
+                             mBottomRightHandle, bodyContent, ps);
   mBottomRightHandle = nsnull;
-  DeleteRefToAnonymousNode(mResizingShadow, bodyContent, docObserver);
+
+  RemoveListenerAndDeleteRef(mousedown, mMouseListenerP, PR_TRUE,
+                             mResizingShadow, bodyContent, ps);
   mResizingShadow = nsnull;
-  DeleteRefToAnonymousNode(mResizingInfo, bodyContent, docObserver);
+
+  RemoveListenerAndDeleteRef(mousedown, mMouseListenerP, PR_TRUE,
+                             mResizingInfo, bodyContent, ps);
   mResizingInfo = nsnull;
 
   // don't forget to remove the listeners !"""
6f58c8ac3774c7fd09a074b93807bf882727fbe4,119710,336410,mrbkap%gmail.com,"Add some sanity checks. bug 336410, r=igor
",1150341981,"""diff --git a/js/src/jsarray.c b/js/src/jsarray.c
index 2b368d0..73bd6ac 100644
--- a/js/src/jsarray.c
+++ b/js/src/jsarray.c
@@ -521,8 +521,17 @@ array_join_sub(JSContext *cx, JSObject *obj, enum ArrayToStringOp op,
 
       got_str:
         /* Allocate 1 at end for closing bracket and zero. */
-        growth = (nchars + JSSTRING_LENGTH(str) + seplen + extratail)
-                 * sizeof(jschar);
+        tmplen = JSSTRING_LENGTH(str);
+        growth = nchars + tmplen + seplen + extratail;
+        if (nchars > growth || tmplen > growth ||
+            growth > (size_t)-1 / sizeof(jschar)) {
+            if (chars) {
+                free(chars);
+                chars = NULL;
+            }
+            goto done;
+        }
+        growth *= sizeof(jschar);
         if (!chars) {
             chars = (jschar *) malloc(growth);
             if (!chars)
@@ -535,7 +544,6 @@ array_join_sub(JSContext *cx, JSObject *obj, enum ArrayToStringOp op,
             }
         }
 
-        tmplen = JSSTRING_LENGTH(str);
         js_strncpy(&chars[nchars], JSSTRING_CHARS(str), tmplen);
         nchars += tmplen;
 """
8c3f0278d7b219c658d678a32331ae960c9f681b,119714,331883,roc+%cs.cmu.edu,"Bug 331883. Restrict anonymous box selectors to agent/user style sheets. r+sr=dbaron/bzbarsky
",1150341619,"""diff --git a/chrome/src/nsChromeRegistry.cpp b/chrome/src/nsChromeRegistry.cpp
index ecafa7e..f3df284 100644
--- a/chrome/src/nsChromeRegistry.cpp
+++ b/chrome/src/nsChromeRegistry.cpp
@@ -952,7 +952,7 @@ nsresult nsChromeRegistry::RefreshWindow(nsIDOMWindowInternal* aWindow,
       if (IsChromeURI(uri)) {
         // Reload the sheet.
         nsCOMPtr<nsICSSStyleSheet> newSheet;
-        rv = aCSSLoader->LoadSheetSync(uri, getter_AddRefs(newSheet));
+        rv = aCSSLoader->LoadSheetSync(uri, PR_TRUE, getter_AddRefs(newSheet));
         if (NS_FAILED(rv)) return rv;
         if (newSheet) {
           rv = newAgentSheets.AppendObject(newSheet) ? NS_OK : NS_ERROR_FAILURE;
diff --git a/editor/libeditor/html/nsHTMLEditor.cpp b/editor/libeditor/html/nsHTMLEditor.cpp
index 39845a0..a25153e 100644
--- a/editor/libeditor/html/nsHTMLEditor.cpp
+++ b/editor/libeditor/html/nsHTMLEditor.cpp
@@ -3600,7 +3600,8 @@ nsHTMLEditor::AddOverrideStyleSheet(const nsAString& aURL)
   // XXXbz Except this will actually try to load remote files
   // synchronously, of course..
   nsCOMPtr<nsICSSStyleSheet> sheet;
-  rv = cssLoader->LoadSheetSync(uaURI, getter_AddRefs(sheet));
+  // Editor override style sheets may want to style Gecko anonymous boxes
+  rv = cssLoader->LoadSheetSync(uaURI, PR_TRUE, getter_AddRefs(sheet));
 
   // Synchronous loads should ALWAYS return completed
   if (!sheet)
diff --git a/layout/base/nsStyleSheetService.cpp b/layout/base/nsStyleSheetService.cpp
index ccfacfc..457d528 100644
--- a/layout/base/nsStyleSheetService.cpp
+++ b/layout/base/nsStyleSheetService.cpp
@@ -169,7 +169,9 @@ nsStyleSheetService::LoadAndRegisterSheetInternal(nsIURI *aSheetURI,
 
   nsCOMPtr<nsICSSLoader> loader = do_CreateInstance(kCSSLoaderCID);
   nsCOMPtr<nsICSSStyleSheet> sheet;
-  nsresult rv = loader->LoadSheetSync(aSheetURI, getter_AddRefs(sheet));
+  // Allow UA sheets, but not user sheets, to use unsafe rules
+  nsresult rv = loader->LoadSheetSync(aSheetURI, aSheetType == AGENT_SHEET,
+                                      getter_AddRefs(sheet));
   NS_ENSURE_SUCCESS(rv, rv);
 
   if (!mSheets[aSheetType].AppendObject(sheet)) {
diff --git a/layout/build/nsContentDLF.cpp b/layout/build/nsContentDLF.cpp
index 75970b7..694e65b 100644
--- a/layout/build/nsContentDLF.cpp
+++ b/layout/build/nsContentDLF.cpp
@@ -625,7 +625,7 @@ nsContentDLF::EnsureUAStyleSheet()
   NS_NewCSSLoader(getter_AddRefs(cssLoader));
   if (!cssLoader)
     return NS_ERROR_OUT_OF_MEMORY;
-  rv = cssLoader->LoadSheetSync(uri, &gUAStyleSheet);
+  rv = cssLoader->LoadSheetSync(uri, PR_TRUE, &gUAStyleSheet);
 #ifdef DEBUG
   if (NS_FAILED(rv))
     printf(""""*** open of %s failed: error=%x\n"""", UA_CSS_URL, rv);
diff --git a/layout/style/nsCSSLoader.cpp b/layout/style/nsCSSLoader.cpp
index 5d36849..c8c1a5b 100644
--- a/layout/style/nsCSSLoader.cpp
+++ b/layout/style/nsCSSLoader.cpp
@@ -164,6 +164,7 @@ SheetLoadData::SheetLoadData(CSSLoaderImpl* aLoader,
     mIsCancelled(PR_FALSE),
     mMustNotify(PR_FALSE),
     mWasAlternate(aIsAlternate),
+    mAllowUnsafeRules(PR_FALSE),
     mOwningElement(aOwningElement),
     mObserver(aObserver)
 {
@@ -191,6 +192,7 @@ SheetLoadData::SheetLoadData(CSSLoaderImpl* aLoader,
     mIsCancelled(PR_FALSE),
     mMustNotify(PR_FALSE),
     mWasAlternate(PR_FALSE),
+    mAllowUnsafeRules(PR_FALSE),
     mOwningElement(nsnull),
     mObserver(aObserver)
 {
@@ -201,6 +203,7 @@ SheetLoadData::SheetLoadData(CSSLoaderImpl* aLoader,
     NS_ADDREF(mParentData);
     mSyncLoad = mParentData->mSyncLoad;
     mIsNonDocumentSheet = mParentData->mIsNonDocumentSheet;
+    mAllowUnsafeRules = mParentData->mAllowUnsafeRules;
     ++(mParentData->mPendingChildren);
   }
 }
@@ -209,6 +212,7 @@ SheetLoadData::SheetLoadData(CSSLoaderImpl* aLoader,
                              nsIURI* aURI,
                              nsICSSStyleSheet* aSheet,
                              PRBool aSyncLoad,
+                             PRBool aAllowUnsafeRules,
                              nsICSSLoaderObserver* aObserver)
   : mLoader(aLoader),
     mParserToUnblock(nsnull),
@@ -224,6 +228,7 @@ SheetLoadData::SheetLoadData(CSSLoaderImpl* aLoader,
     mIsCancelled(PR_FALSE),
     mMustNotify(PR_FALSE),
     mWasAlternate(PR_FALSE),
+    mAllowUnsafeRules(aAllowUnsafeRules),
     mOwningElement(nsnull),
     mObserver(aObserver)
 {
@@ -1415,6 +1420,7 @@ CSSLoaderImpl::ParseSheet(nsIUnicharInputStream* aStream,
   aLoadData->mSheet->GetSheetURI(getter_AddRefs(sheetURI));
   aLoadData->mSheet->GetBaseURI(getter_AddRefs(baseURI));
   rv = parser->Parse(aStream, sheetURI, baseURI, aLoadData->mLineNumber,
+                     aLoadData->mAllowUnsafeRules,
                      *getter_AddRefs(dummySheet));
   mParsingDatas.RemoveElementAt(mParsingDatas.Count() - 1);
   RecycleParser(parser);
@@ -1842,21 +1848,23 @@ CSSLoaderImpl::LoadChildSheet(nsICSSStyleSheet* aParentSheet,
 }
 
 NS_IMETHODIMP
-CSSLoaderImpl::LoadSheetSync(nsIURI* aURL, nsICSSStyleSheet** aSheet)
+CSSLoaderImpl::LoadSheetSync(nsIURI* aURL, PRBool aAllowUnsafeRules,
+                             nsICSSStyleSheet** aSheet)
 {
   LOG((""""CSSLoaderImpl::LoadSheetSync""""));
-  return InternalLoadNonDocumentSheet(aURL, aSheet, nsnull);
+  return InternalLoadNonDocumentSheet(aURL, aAllowUnsafeRules, aSheet, nsnull);
 }
 
 NS_IMETHODIMP
 CSSLoaderImpl::LoadSheet(nsIURI* aURL, nsICSSLoaderObserver* aObserver)
 {
   LOG((""""CSSLoaderImpl::LoadSheet api call""""));
-  return InternalLoadNonDocumentSheet(aURL, nsnull, aObserver);
+  return InternalLoadNonDocumentSheet(aURL, PR_FALSE, nsnull, aObserver);
 }
 
 nsresult
 CSSLoaderImpl::InternalLoadNonDocumentSheet(nsIURI* aURL, 
+                                            PRBool aAllowUnsafeRules,
                                             nsICSSStyleSheet** aSheet,
                                             nsICSSLoaderObserver* aObserver)
 {
@@ -1898,7 +1906,8 @@ CSSLoaderImpl::InternalLoadNonDocumentSheet(nsIURI* aURL,
     return rv;
   }
 
-  SheetLoadData* data = new SheetLoadData(this, aURL, sheet, syncLoad, aObserver);
+  SheetLoadData* data =
+    new SheetLoadData(this, aURL, sheet, syncLoad, aAllowUnsafeRules, aObserver);
 
   if (!data) {
     sheet->SetComplete();
diff --git a/layout/style/nsCSSLoader.h b/layout/style/nsCSSLoader.h
index f721e7d..7f0f608 100644
--- a/layout/style/nsCSSLoader.h
+++ b/layout/style/nsCSSLoader.h
@@ -130,6 +130,7 @@ public:
                 nsIURI* aURI,
                 nsICSSStyleSheet* aSheet,
                 PRBool aSyncLoad,
+                PRBool aAllowUnsafeRules,
                 nsICSSLoaderObserver* aObserver);
 
   already_AddRefed<nsIURI> GetReferrerURI();
@@ -201,6 +202,10 @@ public:
   // created.
   PRPackedBool               mWasAlternate : 1;
   
+  // mAllowUnsafeRules is true if we should allow unsafe rules to be parsed
+  // in the loaded sheet.
+  PRPackedBool               mAllowUnsafeRules : 1;
+  
   // This is the element that imported the sheet.  Needed to get the
   // charset set on it.
   nsCOMPtr<nsIStyleSheetLinkingElement> mOwningElement;
@@ -273,7 +278,8 @@ public:
                             nsMediaList* aMedia,
                             nsICSSImportRule* aRule);
 
-  NS_IMETHOD LoadSheetSync(nsIURI* aURL, nsICSSStyleSheet** aSheet);
+  NS_IMETHOD LoadSheetSync(nsIURI* aURL, PRBool aAllowUnsafeRules,
+                           nsICSSStyleSheet** aSheet);
 
   NS_IMETHOD LoadSheet(nsIURI* aURL, nsICSSLoaderObserver* aObserver);
 
@@ -333,6 +339,7 @@ private:
                             nsICSSImportRule* aParentRule);
 
   nsresult InternalLoadNonDocumentSheet(nsIURI* aURL,
+                                        PRBool aAllowUnsafeRules,
                                         nsICSSStyleSheet** aSheet,
                                         nsICSSLoaderObserver* aObserver);
 
diff --git a/layout/style/nsCSSParser.cpp b/layout/style/nsCSSParser.cpp
index 4e9804b..9290092 100644
--- a/layout/style/nsCSSParser.cpp
+++ b/layout/style/nsCSSParser.cpp
@@ -109,6 +109,7 @@ public:
                    nsIURI*                aSheetURI,
                    nsIURI*                aBaseURI,
                    PRUint32               aLineNumber,
+                   PRBool                 aAllowUnsafeRules,
                    nsICSSStyleSheet*&     aResult);
 
   NS_IMETHOD ParseStyleAttribute(const nsAString&  aAttributeValue,
@@ -423,6 +424,9 @@ protected:
 
   // True if we are in quirks mode; false in standards or almost standards mode
   PRPackedBool  mNavQuirkMode : 1;
+  
+  // True if unsafe rules should be allowed
+  PRPackedBool mUnsafeRulesEnabled : 1;
 
 #ifdef MOZ_SVG
   // True if we are in SVG mode; false in """"normal"""" CSS
@@ -530,6 +534,7 @@ CSSParserImpl::CSSParserImpl()
     mNameSpaceMap(nsnull),
     mHavePushBack(PR_FALSE),
     mNavQuirkMode(PR_FALSE),
+    mUnsafeRulesEnabled(PR_FALSE),
 #ifdef MOZ_SVG
     mSVGMode(PR_FALSE),
 #endif
@@ -663,6 +668,7 @@ CSSParserImpl::Parse(nsIUnicharInputStream* aInput,
                      nsIURI*                aSheetURI,
                      nsIURI*                aBaseURI,
                      PRUint32               aLineNumber,
+                     PRBool                 aAllowUnsafeRules,
                      nsICSSStyleSheet*&     aResult)
 {
   NS_ASSERTION(nsnull != aBaseURI, """"need base URL"""");
@@ -719,6 +725,8 @@ CSSParserImpl::Parse(nsIUnicharInputStream* aInput,
     mSection = eCSSSection_Charset; // sheet is empty, any rules are fair
   }
 
+  mUnsafeRulesEnabled = aAllowUnsafeRules;
+
   nsCSSToken* tk = &mToken;
   for (;;) {
     // Get next non-whitespace token
@@ -740,6 +748,8 @@ CSSParserImpl::Parse(nsIUnicharInputStream* aInput,
   }
   ReleaseScanner();
 
+  mUnsafeRulesEnabled = PR_FALSE;
+
   aResult = mSheet;
   NS_ADDREF(aResult);
 
@@ -2433,7 +2443,9 @@ CSSParserImpl::ParsePseudoSelector(PRInt32&       aDataMask,
   nsCOMPtr<nsIAtom> pseudo = do_GetAtom(buffer);
 
   // stash away some info about this pseudo so we only have to get it once.
+  PRBool isTreePseudo = PR_FALSE;
 #ifdef MOZ_XUL
+  isTreePseudo = IsTreePseudoElement(pseudo);
   // If a tree pseudo-element is using the function syntax, it will
   // get isTree set here and will pass the check below that only
   // allows functions if they are in our list of things allowed to be
@@ -2441,11 +2453,13 @@ CSSParserImpl::ParsePseudoSelector(PRInt32&       aDataMask,
   // be false, and it will still pass that check.  So the tree
   // pseudo-elements are allowed to be either functions or not, as
   // desired.
-  PRBool isTree = (eCSSToken_Function == mToken.mType) &&
-                  IsTreePseudoElement(pseudo);
+  PRBool isTree = (eCSSToken_Function == mToken.mType) && isTreePseudo;
 #endif
   PRBool isPseudoElement = nsCSSPseudoElements::IsPseudoElement(pseudo);
-  PRBool isAnonBox = nsCSSAnonBoxes::IsAnonBox(pseudo);
+  // anonymous boxes are only allowed if they're the tree boxes or we have
+  // enabled unsafe rules
+  PRBool isAnonBox = nsCSSAnonBoxes::IsAnonBox(pseudo) &&
+    (mUnsafeRulesEnabled || isTreePseudo);
   PRBool isPseudoClass = nsCSSPseudoClasses::IsPseudoClass(pseudo);
 
   if (!isPseudoClass && !isPseudoElement && !isAnonBox) {
@@ -2523,7 +2537,7 @@ CSSParserImpl::ParsePseudoSelector(PRInt32&       aDataMask,
     if (!parsingPseudoElement &&
         !nsCSSPseudoElements::IsCSS2PseudoElement(pseudo)
 #ifdef MOZ_XUL
-        && !IsTreePseudoElement(pseudo)
+        && !isTreePseudo
 #endif
         ) {
       REPORT_UNEXPECTED_TOKEN(PEPseudoSelNewStyleOnly);
diff --git a/layout/style/nsICSSLoader.h b/layout/style/nsICSSLoader.h
index 1587d62..a7e95f3 100644
--- a/layout/style/nsICSSLoader.h
+++ b/layout/style/nsICSSLoader.h
@@ -60,7 +60,7 @@ class nsICSSImportRule;
 // IID for the nsICSSLoader interface
 // ff43802a-b355-41f2-919d-5c7ab3dbfb91
 #define NS_ICSS_LOADER_IID     \
-{0xff43802a, 0xb355, 0x41f2, {0x91, 0x9d, 0x5c, 0x7a, 0xb3, 0xdb, 0xfb, 0x91}}
+{0x8e8deacc, 0xdfe5, 0x4c61, {0x90, 0x14, 0x65, 0x2b, 0xa7, 0xe9, 0x7f, 0x2c}}
 
 typedef void (*nsCSSLoaderCallbackFunc)(nsICSSStyleSheet* aSheet, void *aData, PRBool aDidNotify);
 
@@ -177,6 +177,13 @@ public:
    *
    * @param aURL the URL of the sheet to load
    * @param [out] aSheet the loaded, complete sheet.
+   * @param aEnableUnsafeRules whether unsafe rules are enabled for this
+   * sheet load
+   * Unsafe rules are rules that can violate key Gecko invariants if misused.
+   * In particular, most anonymous box pseudoelements must be very carefully
+   * styled or we will have severe problems. Therefore unsafe rules should
+   * never be enabled for stylesheets controlled by untrusted sites; preferably
+   * unsafe rules should only be enabled for agent sheets.
    *
    * NOTE: At the moment, this method assumes the sheet will be UTF-8, but
    * ideally it would allow arbitrary encodings.  Callers should NOT depend on
@@ -186,7 +193,15 @@ public:
    * whether the data could be parsed as CSS and doesn't indicate anything
    * about the status of child sheets of the returned sheet.
    */
-  NS_IMETHOD LoadSheetSync(nsIURI* aURL, nsICSSStyleSheet** aSheet) = 0;
+  NS_IMETHOD LoadSheetSync(nsIURI* aURL, PRBool aEnableUnsafeRules,
+                           nsICSSStyleSheet** aSheet) = 0;
+
+  /**
+   * As above, but aEnableUnsafeRules is assumed false.
+   */
+  nsresult LoadSheetSync(nsIURI* aURL, nsICSSStyleSheet** aSheet) {
+    return LoadSheetSync(aURL, PR_FALSE, aSheet);
+  }
 
   /**
    * Asynchronously load the stylesheet at aURL.  If a successful result is
diff --git a/layout/style/nsICSSParser.h b/layout/style/nsICSSParser.h
index cc7a83b..c52eafa 100644
--- a/layout/style/nsICSSParser.h
+++ b/layout/style/nsICSSParser.h
@@ -56,8 +56,8 @@ class nsICSSRule;
 class nsMediaList;
 
 #define NS_ICSS_PARSER_IID    \
-{ 0x8f2705b6, 0x11ed, 0x47a0, \
-  {0xaf, 0x25, 0x04, 0x2e, 0x3d, 0x4a, 0x6f, 0xb7} }
+{ 0x2cb34728, 0x0f17, 0x4753, \
+  {0x8e, 0xad, 0xec, 0x73, 0xe5, 0x69, 0xcd, 0xcd} }
 
 // Rule processing function
 typedef void (*PR_CALLBACK RuleAppendFunc) (nsICSSRule* aRule, void* aData);
@@ -85,10 +85,15 @@ public:
   // Set loader to use for child sheets
   NS_IMETHOD SetChildLoader(nsICSSLoader* aChildLoader) = 0;
 
+  /**
+   * @param aAllowUnsafeRules see aEnableUnsafeRules in
+   * nsICSSLoader::LoadSheetSync
+   */
   NS_IMETHOD Parse(nsIUnicharInputStream* aInput,
                    nsIURI*                aSheetURL,
                    nsIURI*                aBaseURI,
                    PRUint32               aLineNumber,
+                   PRBool                 aAllowUnsafeRules,
                    nsICSSStyleSheet*&     aResult) = 0;
 
   // Parse HTML style attribute or its equivalent in other markup
diff --git a/layout/style/nsLayoutStylesheetCache.cpp b/layout/style/nsLayoutStylesheetCache.cpp
index 85e87cd..79198bd 100644
--- a/layout/style/nsLayoutStylesheetCache.cpp
+++ b/layout/style/nsLayoutStylesheetCache.cpp
@@ -86,8 +86,9 @@ nsLayoutStylesheetCache::ScrollbarsSheet()
               NS_LITERAL_CSTRING(""""chrome://global/skin/xulscrollbars.css""""));
 #endif
 
+    // Scrollbars don't need access to unsafe rules
     if (sheetURI)
-      LoadSheet(sheetURI, gStyleCache->mScrollbarsSheet);
+      LoadSheet(sheetURI, gStyleCache->mScrollbarsSheet, PR_FALSE);
 #ifdef XP_MACOSX
     NS_ASSERTION(gStyleCache->mScrollbarsSheet, """"Could not load nativescrollbars.css."""");
 #else
@@ -110,8 +111,9 @@ nsLayoutStylesheetCache::FormsSheet()
       NS_NewURI(getter_AddRefs(sheetURI),
                 NS_LITERAL_CSTRING(""""resource://gre/res/forms.css""""));
 
+    // forms.css needs access to unsafe rules
     if (sheetURI)
-      LoadSheet(sheetURI, gStyleCache->mFormsSheet);
+      LoadSheet(sheetURI, gStyleCache->mFormsSheet, PR_TRUE);
 
     NS_ASSERTION(gStyleCache->mFormsSheet, """"Could not load forms.css."""");
   }
@@ -213,11 +215,12 @@ nsLayoutStylesheetCache::LoadSheetFile(nsIFile* aFile, nsCOMPtr<nsICSSStyleSheet
   nsCOMPtr<nsIURI> uri;
   NS_NewFileURI(getter_AddRefs(uri), aFile);
 
-  LoadSheet(uri, aSheet);
+  LoadSheet(uri, aSheet, PR_FALSE);
 }
 
 void
-nsLayoutStylesheetCache::LoadSheet(nsIURI* aURI, nsCOMPtr<nsICSSStyleSheet> &aSheet)
+nsLayoutStylesheetCache::LoadSheet(nsIURI* aURI, nsCOMPtr<nsICSSStyleSheet> &aSheet,
+                                   PRBool aEnableUnsafeRules)
 {
   if (!aURI) {
     NS_ERROR(""""Null URI. Out of memory?"""");
@@ -227,8 +230,9 @@ nsLayoutStylesheetCache::LoadSheet(nsIURI* aURI, nsCOMPtr<nsICSSStyleSheet> &aSh
   if (!gCSSLoader)
     NS_NewCSSLoader(&gCSSLoader);
 
-  if (gCSSLoader)
-    gCSSLoader->LoadSheetSync(aURI, getter_AddRefs(aSheet));
+  if (gCSSLoader) {
+    gCSSLoader->LoadSheetSync(aURI, aEnableUnsafeRules, getter_AddRefs(aSheet));
+  }
 }  
 
 nsLayoutStylesheetCache*
diff --git a/layout/style/nsLayoutStylesheetCache.h b/layout/style/nsLayoutStylesheetCache.h
index fc9a00e..1ebb26f 100644
--- a/layout/style/nsLayoutStylesheetCache.h
+++ b/layout/style/nsLayoutStylesheetCache.h
@@ -65,7 +65,8 @@ private:
   static void EnsureGlobal();
   void InitFromProfile();
   static void LoadSheetFile(nsIFile* aFile, nsCOMPtr<nsICSSStyleSheet> &aSheet);
-  static void LoadSheet(nsIURI* aURI, nsCOMPtr<nsICSSStyleSheet> &aSheet);
+  static void LoadSheet(nsIURI* aURI, nsCOMPtr<nsICSSStyleSheet> &aSheet,
+                        PRBool aEnableUnsafeRules);
 
   static nsLayoutStylesheetCache* gStyleCache;
   static nsICSSLoader* gCSSLoader;
diff --git a/rdf/chrome/src/nsChromeRegistry.cpp b/rdf/chrome/src/nsChromeRegistry.cpp
index 61d9c93..5e4869b 100644
--- a/rdf/chrome/src/nsChromeRegistry.cpp
+++ b/rdf/chrome/src/nsChromeRegistry.cpp
@@ -1415,7 +1415,7 @@ nsresult nsChromeRegistry::RefreshWindow(nsIDOMWindowInternal* aWindow)
       if (IsChromeURI(uri)) {
         // Reload the sheet.
         nsCOMPtr<nsICSSStyleSheet> newSheet;
-        rv = LoadStyleSheetWithURL(uri, getter_AddRefs(newSheet));
+        rv = LoadStyleSheetWithURL(uri, PR_TRUE, getter_AddRefs(newSheet));
         if (NS_FAILED(rv)) return rv;
         if (newSheet) {
           rv = newAgentSheets.AppendObject(newSheet) ? NS_OK : NS_ERROR_FAILURE;
@@ -1467,7 +1467,7 @@ nsresult nsChromeRegistry::RefreshWindow(nsIDOMWindowInternal* aWindow)
       // XXX what about chrome sheets that have a title or are disabled?  This
       // only works by sheer dumb luck.
       // XXXbz this should really use the document's CSSLoader!
-      LoadStyleSheetWithURL(uri, getter_AddRefs(newSheet));
+      LoadStyleSheetWithURL(uri, PR_FALSE, getter_AddRefs(newSheet));
       // Even if it's null, we put in in there.
       newSheets.AppendObject(newSheet);
     }
@@ -2976,7 +2976,7 @@ nsChromeRegistry::AddToCompositeDataSource(PRBool aUseProfile)
   return NS_OK;
 }
 
-nsresult nsChromeRegistry::LoadStyleSheetWithURL(nsIURI* aURL, nsICSSStyleSheet** aSheet)
+nsresult nsChromeRegistry::LoadStyleSheetWithURL(nsIURI* aURL, PRBool aEnableUnsafeRules, nsICSSStyleSheet** aSheet)
 {
   *aSheet = nsnull;
 
@@ -2986,7 +2986,7 @@ nsresult nsChromeRegistry::LoadStyleSheetWithURL(nsIURI* aURL, nsICSSStyleSheet*
     NS_ENSURE_SUCCESS(rv, rv);
   }
 
-  return mCSSLoader->LoadSheetSync(aURL, aSheet);
+  return mCSSLoader->LoadSheetSync(aURL, aEnableUnsafeRules, aSheet);
 }
 
 nsresult nsChromeRegistry::LoadInstallDataSource()
diff --git a/rdf/chrome/src/nsChromeRegistry.h b/rdf/chrome/src/nsChromeRegistry.h
index 6e08a84..8aa31d3 100644
--- a/rdf/chrome/src/nsChromeRegistry.h
+++ b/rdf/chrome/src/nsChromeRegistry.h
@@ -121,7 +121,7 @@ protected:
                                  PRBool aIsOverlay, PRBool
                                  aUseProfile, PRBool aRemove);
  
-  nsresult LoadStyleSheetWithURL(nsIURI* aURL, nsICSSStyleSheet** aSheet);
+  nsresult LoadStyleSheetWithURL(nsIURI* aURL, PRBool aEnableUnsafeRules, nsICSSStyleSheet** aSheet);
 
   nsresult LoadInstallDataSource();
   nsresult LoadProfileDataSource();"""
87e6c2eed0798b7c9078903634d1cb82a2e1cb06,119720,325269,bclary%bclary.com,"JavaScript Test Library - regression test for bug 325269, by Igor Bukanov, a=bsmedberg for checkin to closed tree
",1150330623,"""diff --git a/js/tests/js1_5/GC/regress-325269.js b/js/tests/js1_5/GC/regress-325269.js
new file mode 100755
index 0000000..e69de29"""
78658a189b2f660f272f169f0bc40fddc997474e,119722,313938,bclary%bclary.com,"JavaScript Test Library - regression test for bug 313938, by Igor Bukanov, a=bsmedberg for checkin to closed tree
",1150330288,"""diff --git a/js/tests/js1_5/GC/regress-313938.js b/js/tests/js1_5/GC/regress-313938.js
new file mode 100755
index 0000000..e69de29"""
ac068153f1a4964c965ab4c1f140fac48b36cc8b,119723,313763,bclary%bclary.com,"JavaScript Test Library - regression test for bug 313763, by Igor Bukanov, a=bsmedberg for checkin to closed tree
",1150330122,"""diff --git a/js/tests/js1_5/GC/regress-313763.js b/js/tests/js1_5/GC/regress-313763.js
new file mode 100755
index 0000000..e69de29"""
86223c7e91b39ffc540875d3b94cee1abad2a92e,119725,313630,bclary%bclary.com,"JavaScript Test Library - regression test for bug 313630, by Igor Bukanov, a=bsmedberg for checkin to closed tree
",1150329951,"""diff --git a/js/tests/js1_5/GC/regress-313630.js b/js/tests/js1_5/GC/regress-313630.js
new file mode 100755
index 0000000..e69de29"""
cd0dc6e80addcfb59da4ded2a14100c9e2072ab6,119726,313479,bclary%bclary.com,"JavaScript Test Library - regression test for bug 313479, by Igor Bukanov, a=bsmedberg for checkin to closed tree
",1150329619,"""diff --git a/js/tests/js1_5/GC/regress-313479.js b/js/tests/js1_5/GC/regress-313479.js
new file mode 100755
index 0000000..c8722f1
--- /dev/null
+++ b/js/tests/js1_5/GC/regress-313479.js
@@ -0,0 +1,68 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2005
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 313479;
+var summary = 'Root access in jsnum.c';
+var actual = '';
+var expect = '';
+
+printBugNumber (bug);
+printStatus (summary);
+
+var prepared_string = String(1);
+String(2); // To remove prepared_string from newborn
+
+var likeString = {
+        toString: function() {
+                var tmp = prepared_string;
+                prepared_string = null;
+                return tmp;
+        }
+};
+
+var likeNumber = {
+        valueOf: function() {
+                gc();
+                return 10;
+        }
+}
+
+var expect = 1;
+var actual = parseInt(likeString, likeNumber);
+printStatus(""""expect=""""+expect+"""" actual=""""+actual);
+  
+reportCompare(expect, actual, summary);"""
ffe8f3663ea5d07325fff28a089cfe83b0a79a2a,119727,313276,bclary%bclary.com,"JavaScript Test Library - regression test for bug 313276, by Igor Bukanov, a=bsmedberg for checking to closed tree
",1150329460,"""diff --git a/js/tests/js1_5/GC/regress-313276.js b/js/tests/js1_5/GC/regress-313276.js
new file mode 100755
index 0000000..38db9bf
--- /dev/null
+++ b/js/tests/js1_5/GC/regress-313276.js
@@ -0,0 +1,71 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2005
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 313276;
+var summary = 'Root strings';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+  
+var obj = {
+	toString: function() {
+		return """"*TEST*"""".substr(1, 4);
+	}
+};
+
+var TMP = 1e200;
+
+var likeZero = {
+	valueOf: function() {
+		if (typeof gc == """"function"""") gc();
+		for (var i = 0; i != 40000; ++i) {
+			var tmp = 2 / TMP;
+			tmp = null;
+		}
+		return 0;	
+	}
+}
+
+expect = """"TEST"""";
+actual = String.prototype.substr.call(obj, likeZero);
+
+printStatus(""""Substring length: """"+actual.length);
+printStatus((expect === actual).toString());
+
+reportCompare(expect, actual, summary);"""
994621bcb6ad7e7fb3b5b2097e99c696a6f61371,119728,312278,bclary%bclary.com,"JavaScript Test Library - regression test for bug 312278, by Igor Bukanov, a=bsmedberg for checkin to closed tree
",1150329253,"""diff --git a/js/tests/js1_5/GC/regress-312278.js b/js/tests/js1_5/GC/regress-312278.js
new file mode 100755
index 0000000..e69de29"""
c772672ce2395053d1f96d15a053d7a80970f413,119730,311792,bclary%bclary.com,"JavaScript Test Library - regression test for bug 311792, by Igor Bukanov, a=bsmedberg for checkin to closed tree
",1150329075,"""diff --git a/js/tests/js1_5/GC/regress-311792-01.js b/js/tests/js1_5/GC/regress-311792-01.js
new file mode 100755
index 0000000..e69de29
diff --git a/js/tests/js1_5/GC/regress-311792-02.js b/js/tests/js1_5/GC/regress-311792-02.js
new file mode 100755
index 0000000..e69de29"""
f0ab0c3fa783428a24103b0d0400c12c617263b0,119731,311497,bclary%bclary.com,"JavaScript Test Library - regression test for bug 311497, by Igor Bukanov, a=bsmedberg for checkin to closed tree
",1150328888,"""diff --git a/js/tests/js1_5/GC/regress-311497.js b/js/tests/js1_5/GC/regress-311497.js
new file mode 100755
index 0000000..284c144
--- /dev/null
+++ b/js/tests/js1_5/GC/regress-311497.js
@@ -0,0 +1,92 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2005
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Igor Bukanov
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 311497;
+var summary = 'Root pivots in js_HeapSort';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+printBugNumber (bug);
+printStatus (summary);
+
+
+function force_gc()
+{
+    if (this.gc) gc();
+    for (var i = 0; i != 30000; ++i) {
+        var tmp = Math.sin(i);
+        tmp = null;
+    }
+}
+
+var array = new Array(10);
+for (var i = 0; i != array.length; ++i) {
+    array[i] = String.fromCharCode(i, i, i);
+}
+
+function cmp(a, b)
+{
+    for (var i = 0; i != array.length; ++i) {
+        array[i] = null;
+    }
+    force_gc();
+    return 0;
+}
+
+array.sort(cmp);
+
+// Verify that array contains either null or original strings
+
+var null_count = 0;
+var original_string_count = 0;
+for (var i = 0; i != array.length; ++i) {
+    var elem = array[i];
+    if (elem === null) {
+        ++null_count;
+    } else if (typeof elem == """"string"""" && elem.length == 3) {
+        var code = elem.charCodeAt(0);
+        if (0 <= code && code < array.length) {
+            if (code === elem.charCodeAt(1) && code == elem.charCodeAt(2))
+	            ++original_string_count;
+        }
+    }
+}
+
+var expect = array.length;
+var actual = null_count + original_string_count;
+
+reportCompare(expect, actual, summary);"""
9128520715c2bddbff80dd29b3d8fc58e636252f,119769,340129,igor.bukanov%gmail.com,"Bug 340129: Reverting all the commits as the tree IS CLOSED.
",1150239977,"""diff --git a/js/src/jsgc.c b/js/src/jsgc.c
index a6c5ece..e4ef056 100644
--- a/js/src/jsgc.c
+++ b/js/src/jsgc.c
@@ -2289,9 +2289,6 @@ restart:
             }
         }
 
-        if (acx->sharpObjectMap.depth > 0)
-            js_GCMarkSharpMap(cx, &acx->sharpObjectMap);
-
         acx->cachedIterObj = NULL;
     }
 
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index e658b5f..69b161d 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -648,42 +648,6 @@ js_LeaveSharpObject(JSContext *cx, JSIdArray **idap)
     }
 }
 
-JS_STATIC_DLL_CALLBACK(intN)
-gc_sharp_table_entry_marker(JSHashEntry *he, intN i, void *arg)
-{
-    GC_MARK((JSContext *)arg, (JSObject *)he->key, """"sharp table entry"""");
-    return JS_DHASH_NEXT;
-}
-
-void
-js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map)
-{
-    JS_ASSERT(map->depth > 0);
-    JS_ASSERT(map->table);
-
-    /*
-     * During recursive calls to MarkSharpObjects a non-native object or
-     * object with a custom getProperty method can potentially return an
-     * unrooted value or even cut from the object graph an argument of one of
-     * MarkSharpObjects recursive invocations. So we must protect map->table
-     * entries against GC.
-     *
-     * We can not simply use JSTempValueRooter to mark the obj argument of
-     * MarkSharpObjects during recursion as we have to protect *all* entries
-     * in JSSharpObjectMap including those that contains otherwise unreachable
-     * objects just allocated through custom getProperty. Otherwise newer
-     * allocations can re-use the address of an object stored in the hashtable
-     * confusing js_EnterSharpObject. So to address the problem we simply
-     * mark all objects from map->table.
-     *
-     * An alternative """"proper"""" solution is to use JSTempValueRooter in
-     * MarkSharpObjects with code to remove during finalization entries
-     * with otherwise unreachable objects. But this is way too complex
-     * to justify spending efforts.
-     */
-    JS_HashTableEnumerateEntries(map->table, gc_sharp_table_entry_marker, cx);
-}
-
 #define OBJ_TOSTRING_EXTRA      4       /* for 4 local GC roots */
 
 #if JS_HAS_TOSOURCE
diff --git a/js/src/jsobj.h b/js/src/jsobj.h
index e0226dc..5f76eac 100644
--- a/js/src/jsobj.h
+++ b/js/src/jsobj.h
@@ -304,13 +304,6 @@ js_EnterSharpObject(JSContext *cx, JSObject *obj, JSIdArray **idap,
 extern void
 js_LeaveSharpObject(JSContext *cx, JSIdArray **idap);
 
-/*
- * Mark objects stored in map if GC happens between js_EnterSharpObject
- * and js_LeaveSharpObject. GC calls this when map->depth > 0.
- */
-extern void
-js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map);
-
 extern JSBool
 js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 jsval *rval);"""
2f70b13be4b93e42acfc3b534d19e31af959c686,119772,340129,igor.bukanov%gmail.com,"Bug 340129: Bulletproof rooting of objects during sharp graph construction/usage. r=mrbkap
",1150237771,"""diff --git a/js/src/jsgc.c b/js/src/jsgc.c
index e4ef056..a6c5ece 100644
--- a/js/src/jsgc.c
+++ b/js/src/jsgc.c
@@ -2289,6 +2289,9 @@ restart:
             }
         }
 
+        if (acx->sharpObjectMap.depth > 0)
+            js_GCMarkSharpMap(cx, &acx->sharpObjectMap);
+
         acx->cachedIterObj = NULL;
     }
 
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index 69b161d..e658b5f 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -648,6 +648,42 @@ js_LeaveSharpObject(JSContext *cx, JSIdArray **idap)
     }
 }
 
+JS_STATIC_DLL_CALLBACK(intN)
+gc_sharp_table_entry_marker(JSHashEntry *he, intN i, void *arg)
+{
+    GC_MARK((JSContext *)arg, (JSObject *)he->key, """"sharp table entry"""");
+    return JS_DHASH_NEXT;
+}
+
+void
+js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map)
+{
+    JS_ASSERT(map->depth > 0);
+    JS_ASSERT(map->table);
+
+    /*
+     * During recursive calls to MarkSharpObjects a non-native object or
+     * object with a custom getProperty method can potentially return an
+     * unrooted value or even cut from the object graph an argument of one of
+     * MarkSharpObjects recursive invocations. So we must protect map->table
+     * entries against GC.
+     *
+     * We can not simply use JSTempValueRooter to mark the obj argument of
+     * MarkSharpObjects during recursion as we have to protect *all* entries
+     * in JSSharpObjectMap including those that contains otherwise unreachable
+     * objects just allocated through custom getProperty. Otherwise newer
+     * allocations can re-use the address of an object stored in the hashtable
+     * confusing js_EnterSharpObject. So to address the problem we simply
+     * mark all objects from map->table.
+     *
+     * An alternative """"proper"""" solution is to use JSTempValueRooter in
+     * MarkSharpObjects with code to remove during finalization entries
+     * with otherwise unreachable objects. But this is way too complex
+     * to justify spending efforts.
+     */
+    JS_HashTableEnumerateEntries(map->table, gc_sharp_table_entry_marker, cx);
+}
+
 #define OBJ_TOSTRING_EXTRA      4       /* for 4 local GC roots */
 
 #if JS_HAS_TOSOURCE
diff --git a/js/src/jsobj.h b/js/src/jsobj.h
index 5f76eac..e0226dc 100644
--- a/js/src/jsobj.h
+++ b/js/src/jsobj.h
@@ -304,6 +304,13 @@ js_EnterSharpObject(JSContext *cx, JSObject *obj, JSIdArray **idap,
 extern void
 js_LeaveSharpObject(JSContext *cx, JSIdArray **idap);
 
+/*
+ * Mark objects stored in map if GC happens between js_EnterSharpObject
+ * and js_LeaveSharpObject. GC calls this when map->depth > 0.
+ */
+extern void
+js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map);
+
 extern JSBool
 js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 jsval *rval);"""
2552cc8b152ef8d5487913480a893b777555b641,119773,340129,igor.bukanov%gmail.com,"Bug 340129: Reverting the commit, it was the wrong patch!
",1150237316,"""diff --git a/js/src/jsgc.c b/js/src/jsgc.c
index a6c5ece..e4ef056 100644
--- a/js/src/jsgc.c
+++ b/js/src/jsgc.c
@@ -2289,9 +2289,6 @@ restart:
             }
         }
 
-        if (acx->sharpObjectMap.depth > 0)
-            js_GCMarkSharpMap(cx, &acx->sharpObjectMap);
-
         acx->cachedIterObj = NULL;
     }
 
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index cc113ed..69b161d 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -648,42 +648,6 @@ js_LeaveSharpObject(JSContext *cx, JSIdArray **idap)
     }
 }
 
-JS_STATIC_DLL_CALLBACK(intN)
-gc_sharp_table_entry_marker(JSHashEntry *he, intN i, void *arg)
-{
-    GC_MARK((JSContext *)arg, (JSObject *)he->key, """"sharp table entry"""");
-    return JS_DHASH_NEXT;
-}
-
-void
-js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map)
-{
-    JS_ASSERT(map->depth > 0);
-    JS_ASSERT(map->table);
-
-    /*
-     * During recursive calls to MarkSharpObjects a non-native object or
-     * object with a custom getProperty method can potentially return an
-     * unrooted value or even cut from the object graph an argument of one of
-     * MarkSharpObjects recursive invocations. So we must protect map->table
-     * entries against GC.
-     *
-     * We can not simply use JSTempValueRoote to mark the obj argument of
-     * MarkSharpObjects during recursion as we have to protect *all* entries
-     * in JSSharpObjectMap including those that contains otherwise unreachable
-     * objects just allocated through custom getProperty. Otherwise newer
-     * allocations can re-use the address of an object stored in the hashtable
-     * confusing js_EnterSharpObject. So to address the problem we simply
-     * mark all objects from map->table.
-     *
-     * An alternative """"proper"""" solution is to use JSTempValueRoote in
-     * MarkSharpObjects with code to remove during finalization entries
-     * with otherwise unreachable objects. But this is way too complex
-     * to justify spending efforts.
-     */
-    JS_HashTableEnumerateEntries(map->table, gc_sharp_table_entry_marker, cx);
-}
-
 #define OBJ_TOSTRING_EXTRA      4       /* for 4 local GC roots */
 
 #if JS_HAS_TOSOURCE
diff --git a/js/src/jsobj.h b/js/src/jsobj.h
index e0226dc..5f76eac 100644
--- a/js/src/jsobj.h
+++ b/js/src/jsobj.h
@@ -304,13 +304,6 @@ js_EnterSharpObject(JSContext *cx, JSObject *obj, JSIdArray **idap,
 extern void
 js_LeaveSharpObject(JSContext *cx, JSIdArray **idap);
 
-/*
- * Mark objects stored in map if GC happens between js_EnterSharpObject
- * and js_LeaveSharpObject. GC calls this when map->depth > 0.
- */
-extern void
-js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map);
-
 extern JSBool
 js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 jsval *rval);"""
ca1497b5f0bb9878a3f58b02c950dc03d0c728ae,119774,340129,igor.bukanov%gmail.com,"Bug 340129: Bulletproof rooting of objects during sharp graph construction/usage. r=mrbkap
",1150237195,"""diff --git a/js/src/jsgc.c b/js/src/jsgc.c
index e4ef056..a6c5ece 100644
--- a/js/src/jsgc.c
+++ b/js/src/jsgc.c
@@ -2289,6 +2289,9 @@ restart:
             }
         }
 
+        if (acx->sharpObjectMap.depth > 0)
+            js_GCMarkSharpMap(cx, &acx->sharpObjectMap);
+
         acx->cachedIterObj = NULL;
     }
 
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index 69b161d..cc113ed 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -648,6 +648,42 @@ js_LeaveSharpObject(JSContext *cx, JSIdArray **idap)
     }
 }
 
+JS_STATIC_DLL_CALLBACK(intN)
+gc_sharp_table_entry_marker(JSHashEntry *he, intN i, void *arg)
+{
+    GC_MARK((JSContext *)arg, (JSObject *)he->key, """"sharp table entry"""");
+    return JS_DHASH_NEXT;
+}
+
+void
+js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map)
+{
+    JS_ASSERT(map->depth > 0);
+    JS_ASSERT(map->table);
+
+    /*
+     * During recursive calls to MarkSharpObjects a non-native object or
+     * object with a custom getProperty method can potentially return an
+     * unrooted value or even cut from the object graph an argument of one of
+     * MarkSharpObjects recursive invocations. So we must protect map->table
+     * entries against GC.
+     *
+     * We can not simply use JSTempValueRoote to mark the obj argument of
+     * MarkSharpObjects during recursion as we have to protect *all* entries
+     * in JSSharpObjectMap including those that contains otherwise unreachable
+     * objects just allocated through custom getProperty. Otherwise newer
+     * allocations can re-use the address of an object stored in the hashtable
+     * confusing js_EnterSharpObject. So to address the problem we simply
+     * mark all objects from map->table.
+     *
+     * An alternative """"proper"""" solution is to use JSTempValueRoote in
+     * MarkSharpObjects with code to remove during finalization entries
+     * with otherwise unreachable objects. But this is way too complex
+     * to justify spending efforts.
+     */
+    JS_HashTableEnumerateEntries(map->table, gc_sharp_table_entry_marker, cx);
+}
+
 #define OBJ_TOSTRING_EXTRA      4       /* for 4 local GC roots */
 
 #if JS_HAS_TOSOURCE
diff --git a/js/src/jsobj.h b/js/src/jsobj.h
index 5f76eac..e0226dc 100644
--- a/js/src/jsobj.h
+++ b/js/src/jsobj.h
@@ -304,6 +304,13 @@ js_EnterSharpObject(JSContext *cx, JSObject *obj, JSIdArray **idap,
 extern void
 js_LeaveSharpObject(JSContext *cx, JSIdArray **idap);
 
+/*
+ * Mark objects stored in map if GC happens between js_EnterSharpObject
+ * and js_LeaveSharpObject. GC calls this when map->depth > 0.
+ */
+extern void
+js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map);
+
 extern JSBool
 js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 jsval *rval);"""
cb6b69b58e5e04c4807a5ed55ddae509b42469e5,119889,340727,mrbkap%gmail.com,"Use a less complicated function to create the parent object. bug 340727, r=igor
",1149878456,"""diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index 0961523..64812d2 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -5024,8 +5024,7 @@ interrupt:
                 ok = JS_FALSE;
                 goto out;
             }
-            parent = js_ConstructObject(cx, &js_ObjectClass, NULL, obj2,
-                                        0, NULL);
+            parent = js_NewObject(cx, &js_ObjectClass, NULL, obj2);
             if (!parent) {
                 ok = JS_FALSE;
                 goto out;"""
da6ba65698f6b64e29d7a1a324db9788f4b03e33,120009,337389,mrbkap%gmail.com,"Add some additional evalInSandbox functionality for PAC and use it there. bug 337389, r=shaver sr=darin
",1149711700,"""diff --git a/js/src/jsapi.c b/js/src/jsapi.c
index fe498b9..acc3b08 100644
--- a/js/src/jsapi.c
+++ b/js/src/jsapi.c
@@ -3606,6 +3606,12 @@ JS_GetFunctionFlags(JSFunction *fun)
     return fun->flags;
 }
 
+JS_PUBLIC_API(uint16)
+JS_GetFunctionArity(JSFunction *fun)
+{
+    return fun->nargs;
+}
+
 JS_PUBLIC_API(JSBool)
 JS_ObjectIsFunction(JSContext *cx, JSObject *obj)
 {
diff --git a/js/src/jsapi.h b/js/src/jsapi.h
index 3c22d71..4b6fc9e 100644
--- a/js/src/jsapi.h
+++ b/js/src/jsapi.h
@@ -1512,6 +1512,12 @@ extern JS_PUBLIC_API(uintN)
 JS_GetFunctionFlags(JSFunction *fun);
 
 /*
+ * Return the arity (length) of fun.
+ */
+extern JS_PUBLIC_API(uint16)
+JS_GetFunctionArity(JSFunction *fun);
+
+/*
  * Infallible predicate to test whether obj is a function object (faster than
  * comparing obj's class name to """"Function"""", but equivalent unless someone has
  * overwritten the """"Function"""" identifier with a different constructor and then
diff --git a/js/src/xpconnect/src/xpccomponents.cpp b/js/src/xpconnect/src/xpccomponents.cpp
index b3cc9d3..0278f5c 100644
--- a/js/src/xpconnect/src/xpccomponents.cpp
+++ b/js/src/xpconnect/src/xpccomponents.cpp
@@ -2105,6 +2105,84 @@ SandboxDebug(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 }
 
 JS_STATIC_DLL_CALLBACK(JSBool)
+SandboxFunForwarder(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
+                    jsval *rval)
+{
+    jsval v;
+    if (!JS_GetReservedSlot(cx, JSVAL_TO_OBJECT(argv[-2]), 0, &v) ||
+        !JS_CallFunctionValue(cx, obj, v, argc, argv, rval)) {
+        return JS_FALSE;
+    }
+
+    if (JSVAL_IS_PRIMITIVE(*rval))
+        return JS_TRUE; // nothing more to do.
+    
+    XPCThrower::Throw(NS_ERROR_NOT_IMPLEMENTED, cx);
+    return JS_FALSE;
+}
+
+JS_STATIC_DLL_CALLBACK(JSBool)
+SandboxImport(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
+              jsval *rval)
+{
+    JSFunction *fun = JS_ValueToFunction(cx, argv[0]);
+    if (!fun) {
+        XPCThrower::Throw(NS_ERROR_INVALID_ARG, cx);
+        return JS_FALSE;
+    }
+
+    JSString *funname;
+    if (argc > 1) {
+        // Use the second parameter as the function name.
+        funname = JS_ValueToString(cx, argv[1]);
+        if (!funname)
+            return JS_FALSE;
+        argv[1] = STRING_TO_JSVAL(funname);
+    } else {
+        // Use the actual function name as the name.
+        funname = JS_GetFunctionId(fun);
+        if (!funname) {
+            XPCThrower::Throw(NS_ERROR_INVALID_ARG, cx);
+            return JS_FALSE;
+        }
+    }
+
+    nsresult rv = NS_ERROR_FAILURE;
+    JSObject *oldfunobj = JS_GetFunctionObject(fun);
+    nsXPConnect *xpc = nsXPConnect::GetXPConnect();
+
+    if (xpc && oldfunobj) {
+        nsIXPCSecurityManager *secman = xpc->GetDefaultSecurityManager();
+        if (secman) {
+            rv = secman->CanAccess(nsIXPCSecurityManager::ACCESS_CALL_METHOD,
+                                   nsnull, cx, oldfunobj, nsnull, nsnull,
+                                   STRING_TO_JSVAL(funname), nsnull);
+        }
+    }
+
+    if (NS_FAILED(rv)) {
+        if (rv == NS_ERROR_FAILURE)
+            XPCThrower::Throw(NS_ERROR_XPC_SECURITY_MANAGER_VETO, cx);
+        return JS_FALSE;
+    }
+
+    JSFunction *newfun = JS_DefineUCFunction(cx, obj,
+            JS_GetStringChars(funname), JS_GetStringLength(funname),
+            SandboxFunForwarder, JS_GetFunctionArity(fun), 0);
+
+    if (!newfun)
+        return JS_FALSE;
+
+    JSObject *newfunobj = JS_GetFunctionObject(newfun);
+    if (!newfunobj)
+        return JS_FALSE;
+
+    // Functions come with two extra reserved slots on them. Use the 0-th slot
+    // to communicate the wrapped function to our forwarder.
+    return JS_SetReservedSlot(cx, newfunobj, 0, argv[0]);
+}
+
+JS_STATIC_DLL_CALLBACK(JSBool)
 sandbox_enumerate(JSContext *cx, JSObject *obj)
 {
     return JS_EnumerateStandardClasses(cx, obj);
@@ -2135,6 +2213,7 @@ static JSClass SandboxClass = {
 static JSFunctionSpec SandboxFunctions[] = {
     {""""dump"""",    SandboxDump,    1,0,0},
     {""""debug"""",   SandboxDebug,   1,0,0},
+    {""""importFunction"""", SandboxImport, 1,0,0},
     {nsnull,nsnull,0,0,0}
 };
 
diff --git a/netwerk/base/src/nsProxyAutoConfig.js b/netwerk/base/src/nsProxyAutoConfig.js
index a5bb4c2..6a34044 100644
--- a/netwerk/base/src/nsProxyAutoConfig.js
+++ b/netwerk/base/src/nsProxyAutoConfig.js
@@ -81,15 +81,10 @@ nsProxyAutoConfig.prototype = {
         this._sandBox = new Components.utils.Sandbox(pacURI);
         Components.utils.evalInSandbox(pacUtils, this._sandBox);
 
-        // The PAC script doesn't need these.
-        myIpAddress.eval = dnsResolve.eval = proxyAlert.eval = null;
-        myIpAddress.call = dnsResolve.call = proxyAlert.call = null;
-        myIpAddress.apply = dnsResolve.apply = proxyAlert.apply = null;
-
         // add predefined functions to pac
-        this._sandBox.myIpAddress = myIpAddress;
-        this._sandBox.dnsResolve = dnsResolve;
-        this._sandBox.alert = proxyAlert;
+        this._sandBox.importFunction(myIpAddress);
+        this._sandBox.importFunction(dnsResolve);
+        this._sandBox.importFunction(proxyAlert, """"alert"""");
 
         // evaluate loaded js file
         Components.utils.evalInSandbox(pacText, this._sandBox);"""
2ee39179d346812c6f48ce1f84d09174338faf45,120260,337389,mrbkap%gmail.com,"Remove some functions that scripts don't need. bug 337389, r=darin sr=dveditz
",1149645531,"""diff --git a/netwerk/base/src/nsProxyAutoConfig.js b/netwerk/base/src/nsProxyAutoConfig.js
index c2a55ff..a5bb4c2 100644
--- a/netwerk/base/src/nsProxyAutoConfig.js
+++ b/netwerk/base/src/nsProxyAutoConfig.js
@@ -81,6 +81,11 @@ nsProxyAutoConfig.prototype = {
         this._sandBox = new Components.utils.Sandbox(pacURI);
         Components.utils.evalInSandbox(pacUtils, this._sandBox);
 
+        // The PAC script doesn't need these.
+        myIpAddress.eval = dnsResolve.eval = proxyAlert.eval = null;
+        myIpAddress.call = dnsResolve.call = proxyAlert.call = null;
+        myIpAddress.apply = dnsResolve.apply = proxyAlert.apply = null;
+
         // add predefined functions to pac
         this._sandBox.myIpAddress = myIpAddress;
         this._sandBox.dnsResolve = dnsResolve;"""
f9eee2880de551a920c8dc19550f9ee1a355b1d8,120278,339918,mrbkap%gmail.com,"Attempt to gain back some of the optimization that bug 339918 disabled. bug 340537, r+sr=bzbarsky
",1149631335,"""diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index 4d91d4f..e2ef94b 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -3784,6 +3784,8 @@ void InvalidateContextAndWrapperCache()
 // static helper that determines if a security manager check is needed
 // by checking if the callee's context is the same as the caller's
 // context
+// Note: See documentNeedsSecurityCheck for information about the control
+// flow in this function.
 
 static inline PRBool
 needsSecurityCheck(JSContext *cx, nsIXPConnectWrappedNative *wrapper)
@@ -3829,6 +3831,7 @@ needsSecurityCheck(JSContext *cx, nsIXPConnectWrappedNative *wrapper)
     fp = ::JS_FrameIterator(cx, &fp);
 
     if (!fp) {
+      cached_win_cx = nsnull;
       return cached_win_needs_check;
     }
 
@@ -7424,6 +7427,12 @@ documentNeedsSecurityCheck(JSContext *cx, nsIXPConnectWrappedNative *wrapper)
   do {
     fp = ::JS_FrameIterator(cx, &fp);
     if (!fp) {
+      // Clear cached_doc_cx so that we don't really cache this return
+      // value. If we hit this case, then we didn't really have enough
+      // information about the currently running code to make any long-term
+      // decisions.
+
+      cached_doc_cx = nsnull;
       return cached_doc_needs_check;
     }
 """
48b173775290f9f8a920e9433f957c62ffcbe343,120331,339918,mrbkap%gmail.com,"Just because there isn't a stack frame with a function object doesn't mean that code isn't running. bug 339918, r=jst sr=brendan
",1149540959,"""diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index f032ebd..ecfc137 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -3828,29 +3828,29 @@ needsSecurityCheck(JSContext *cx, nsIXPConnectWrappedNative *wrapper)
   JSStackFrame *fp = nsnull;
   JSObject *fp_obj = nsnull;
 
+  cached_win_needs_check = PR_FALSE;
+
   do {
     fp = ::JS_FrameIterator(cx, &fp);
 
-    if(!fp) {
-      break;
+    if (!fp) {
+      return cached_win_needs_check;
     }
 
     fp_obj = ::JS_GetFrameFunctionObject(cx, fp);
+    cached_win_needs_check = PR_TRUE;
   } while (!fp_obj);
 
-  if (fp_obj) {
-    JSObject *global = GetGlobalJSObject(cx, fp_obj);
+  JSObject *global = GetGlobalJSObject(cx, fp_obj);
 
-    JSObject *wrapper_obj = nsnull;
-    wrapper->GetJSObject(&wrapper_obj);
+  JSObject *wrapper_obj = nsnull;
+  wrapper->GetJSObject(&wrapper_obj);
 
-    if (global != wrapper_obj) {
-      return PR_TRUE;
-    }
+  if (global != wrapper_obj) {
+    return PR_TRUE;
   }
 
   cached_win_needs_check = PR_FALSE;
-
   return PR_FALSE;
 }
 
@@ -7385,7 +7385,6 @@ documentNeedsSecurityCheck(JSContext *cx, nsIXPConnectWrappedNative *wrapper)
 
   cached_doc_cx = cx;
   cached_doc_wrapper = wrapper;
-  cached_doc_needs_check = PR_TRUE;
   
   // Get the JS object from the wrapper
   JSObject *wrapper_obj = nsnull;
@@ -7412,26 +7411,27 @@ documentNeedsSecurityCheck(JSContext *cx, nsIXPConnectWrappedNative *wrapper)
   JSObject *function_obj = nsnull;
   JSStackFrame *fp = nsnull;
 
+  // Initialize to false to handle the case where there's no JS running
+  // on the current context (e.g., we're getting here from a property
+  // access from the JS API).  Since the scope chain is immutable, it's
+  // OK to keep skipping the check.
+
+  cached_doc_needs_check = PR_FALSE;
+
   do {
     fp = ::JS_FrameIterator(cx, &fp);
-
     if (!fp) {
-      if (!function_obj) {
-        // No JS is running (there's no frame on the JS stack with a
-        // function object), someone is just accessing properties on a
-        // JS object using the JS API, no need to do security checks
-        // then.
-
-        // Since the scope chain is immutable, it's OK to keep
-        // skipping the check
-        cached_doc_needs_check = PR_FALSE;
-        return PR_FALSE;
-      }
-
-      break;
+      return cached_doc_needs_check;
     }
 
     function_obj = ::JS_GetFrameFunctionObject(cx, fp);
+
+    // Since we're here, we know that there is some JS running. Now, we
+    // need to default to being paranoid, and can only skip the security
+    // check if we find that the currently-running function is from the
+    // same scope.
+
+    cached_doc_needs_check = PR_TRUE;
   } while (!function_obj);
 
   // Get the global object that the calling function comes from."""
02ca54c2d9d9e8ef77b33ab6abbb06a063cd84ab,120499,339785,igor.bukanov%gmail.com,"Bug 339785: When reporting errors about unknown entities in XML literals, do not include append an extra ';' to token buffer as it would not be included in the error message in any case.
",1149102712,"""diff --git a/js/src/jsscan.c b/js/src/jsscan.c
index bf498be..0474004 100644
--- a/js/src/jsscan.c
+++ b/js/src/jsscan.c
@@ -971,9 +971,8 @@ badncr:
     msg = JSMSG_BAD_XML_NCR;
 bad:
     /* No match: throw a TypeError per ECMA-357 10.3.2.1 step 8(a). */
-    FastAppendChar(&ts->tokenbuf, ';');
     bytes = js_DeflateString(cx, bp + 1,
-                             PTRDIFF(ts->tokenbuf.ptr, bp, jschar) - 2);
+                             PTRDIFF(ts->tokenbuf.ptr, bp, jschar) - 1);
     if (bytes) {
         js_ReportCompileErrorNumber(cx, ts, JSREPORT_TS | JSREPORT_ERROR,
                                     msg, bytes);"""
dd56cf634e473d05517eb62ea568eba767a492b8,120732,336999,leon.sha%sun.com,"Bugzilla Bug 336999 Crash involving XUL menus, position: fixed, position: absolute [@ nsIFrame::GetNextSibling] [@ nsCSSFrameConstructor::FindFrameWithContent].
Patch by alfred.peng@sun.com.
neil: review+
bzbarsky: superreview+
",1148529172,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index 3bbcace..d1a033c 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -10742,7 +10742,8 @@ nsCSSFrameConstructor::AttributeChanged(nsIContent* aContent,
   // when the menugenerated or menuactive attribute changes, so make
   // sure to process that immediately
   if (aNameSpaceID == kNameSpaceID_None &&
-      (aAttribute == nsXULAtoms::menugenerated ||
+      ((aAttribute == nsXULAtoms::menugenerated &&
+        aModType != nsIDOMMutationEvent::REMOVAL) ||
        aAttribute == nsXULAtoms::menuactive)) {
     PRInt32 namespaceID;
     nsCOMPtr<nsIAtom> tag;"""
d8797632254713ef729493015c9eb50cf425e18b,120734,337883,mats.palmgren%bredband.net,"Bustage fix (bug 337883)
",1148521680,"""diff --git a/layout/generic/nsLineBox.cpp b/layout/generic/nsLineBox.cpp
index b3e77b9..e09331e 100644
--- a/layout/generic/nsLineBox.cpp
+++ b/layout/generic/nsLineBox.cpp
@@ -515,7 +515,7 @@ nsLineBox::RemovePlaceholderDescendantsOf(nsIFrame* aFrame)
         }
         frame = frame->GetParent();
       }
-      if (NS_UNLIKELY(frame)) {
+      if (NS_UNLIKELY(frame != nsnull)) {
         nsFloatCache* next = fc->Next();
         mInlineData->mFloats.Remove(fc);
         delete fc;"""
ff9c475f5cd165d050c76bf284f2becfaca2b2b6,120735,337883,mats.palmgren%bredband.net,"Clear the float cache from placeholders that are descendants of the frame we remove. b=337883 r+sr=roc
",1148520634,"""diff --git a/layout/generic/nsBlockFrame.cpp b/layout/generic/nsBlockFrame.cpp
index e3e9c0f..02e0cf7 100644
--- a/layout/generic/nsBlockFrame.cpp
+++ b/layout/generic/nsBlockFrame.cpp
@@ -5573,10 +5573,10 @@ nsBlockFrame::RemoveFrame(nsIAtom*  aListName,
   nsresult rv = NS_OK;
 
 #ifdef NOISY_REFLOW_REASON
-    ListTag(stdout);
-    printf("""": remove """");
-    nsFrame::ListTag(stdout, aOldFrame);
-    printf(""""\n"""");
+  ListTag(stdout);
+  printf("""": remove """");
+  nsFrame::ListTag(stdout, aOldFrame);
+  printf(""""\n"""");
 #endif
 
   if (nsnull == aListName) {
@@ -5790,6 +5790,13 @@ found_frame:;
     nsFrame::ListTag(stdout, aDeletedFrame);
     printf("""" prevSibling=%p deletedNextContinuation=%p\n"""", prevSibling, deletedNextContinuation);
 #endif
+
+    if (!aDeletedFrame->IsFloatContainingBlock()) {
+      // Clear the float cache from placeholders that are descendants
+      // of aDeletedFrame (bug 337883).
+      line->RemovePlaceholderDescendantsOf(aDeletedFrame);
+    }
+
     if (aDestroyFrames) {
       aDeletedFrame->Destroy();
     } else {
diff --git a/layout/generic/nsLineBox.cpp b/layout/generic/nsLineBox.cpp
index 2536de3..b3e77b9 100644
--- a/layout/generic/nsLineBox.cpp
+++ b/layout/generic/nsLineBox.cpp
@@ -502,6 +502,34 @@ nsLineBox::RemoveFloat(nsIFrame* aFrame)
 }
 
 void
+nsLineBox::RemovePlaceholderDescendantsOf(nsIFrame* aFrame)
+{
+  if (IsInline() && mInlineData) {
+    nsFloatCache* fc = mInlineData->mFloats.Head();
+    while (fc) {
+      nsIFrame* frame = fc->mPlaceholder;
+      while (frame && frame != aFrame) {
+        if (frame->IsFloatContainingBlock()) {
+          frame = nsnull;
+          break;
+        }
+        frame = frame->GetParent();
+      }
+      if (NS_UNLIKELY(frame)) {
+        nsFloatCache* next = fc->Next();
+        mInlineData->mFloats.Remove(fc);
+        delete fc;
+        MaybeFreeData();
+        fc = next;
+      }
+      else {
+        fc = fc->Next();
+      }
+    }
+  }
+}
+
+void
 nsLineBox::SetCombinedArea(const nsRect& aCombinedArea)
 {  
   NS_ASSERTION(aCombinedArea.width >= 0, """"illegal width for combined area"""");
diff --git a/layout/generic/nsLineBox.h b/layout/generic/nsLineBox.h
index 3b64efb..e5a04e2 100644
--- a/layout/generic/nsLineBox.h
+++ b/layout/generic/nsLineBox.h
@@ -372,6 +372,7 @@ public:
   void FreeFloats(nsFloatCacheFreeList& aFreeList);
   void AppendFloats(nsFloatCacheFreeList& aFreeList);
   PRBool RemoveFloat(nsIFrame* aFrame);
+  void RemovePlaceholderDescendantsOf(nsIFrame* aFrame);
 
   // Combined area is the area of the line that should influence the
   // overflow area of its parent block.  The combined area should be"""
af96cb3ee126fb808b26f1e8ab35a87171973bec,120804,338804,igor%mir2.org,"Bug 338804: Making rooting bulletproof. r=mrbkap,sr=brendan
",1148370857,"""diff --git a/js/src/jsexn.c b/js/src/jsexn.c
index cd916a2..671c6ed 100644
--- a/js/src/jsexn.c
+++ b/js/src/jsexn.c
@@ -529,7 +529,6 @@ static JSBool
 Exception(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
     JSBool ok;
-    jsval pval;
     uint32 lineno;
     JSString *message, *filename;
     JSStackFrame *fp;
@@ -549,10 +548,10 @@ Exception(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         ok = OBJ_GET_PROPERTY(cx, JSVAL_TO_OBJECT(argv[-2]),
                               ATOM_TO_JSID(cx->runtime->atomState
                                            .classPrototypeAtom),
-                              &pval);
+                              rval);
         if (!ok)
             goto out;
-        obj = js_NewObject(cx, &js_ErrorClass, JSVAL_TO_OBJECT(pval), NULL);
+        obj = js_NewObject(cx, &js_ErrorClass, JSVAL_TO_OBJECT(*rval), NULL);
         if (!obj) {
             ok = JS_FALSE;
             goto out;
diff --git a/js/src/jsfile.c b/js/src/jsfile.c
index a3956f9..3735e84 100644
--- a/js/src/jsfile.c
+++ b/js/src/jsfile.c
@@ -2172,6 +2172,7 @@ file_constructor(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
         obj = JS_NewObject(cx, &file_class, NULL, NULL);
         if (!obj)
             return JS_FALSE;
+        *rval = OBJECT_TO_JSVAL(obj);
     }
 
     str = (argc == 0) 
@@ -2191,7 +2192,6 @@ file_constructor(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
 
     SECURITY_CHECK(cx, NULL, """"constructor"""", file);
 
-    *rval = OBJECT_TO_JSVAL(obj);
     return JS_TRUE;
 }
 
diff --git a/js/src/jsregexp.c b/js/src/jsregexp.c
index 47d5b24..f2574e9 100644
--- a/js/src/jsregexp.c
+++ b/js/src/jsregexp.c
@@ -4059,6 +4059,12 @@ RegExp(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         obj = js_NewObject(cx, &js_RegExpClass, NULL, NULL);
         if (!obj)
             return JS_FALSE;
+
+        /*
+         * regexp_compile does not use rval to root its temporaries
+         * so we can use it to root obj.
+         */
+        *rval = OBJECT_TO_JSVAL(obj);
     }
     return regexp_compile(cx, obj, argc, argv, rval);
 }
diff --git a/js/src/jsscript.c b/js/src/jsscript.c
index 9e0ba6a..3ecf460 100644
--- a/js/src/jsscript.c
+++ b/js/src/jsscript.c
@@ -878,6 +878,12 @@ Script(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         obj = js_NewObject(cx, &js_ScriptClass, NULL, NULL);
         if (!obj)
             return JS_FALSE;
+
+        /*
+         * script_compile does not use rval to root its temporaries
+         * so we can use it to root obj.
+         */
+        *rval = OBJECT_TO_JSVAL(obj);
     }
     return script_compile(cx, obj, argc, argv, rval);
 }"""
790a68c37b9467d56b006ae2d9f62f27f40f9f5a,120917,338037,benjamin%smedbergs.us,"Bug 338037 - fail earlier when resolving improperly formatted URLs, r=darin
",1148081569,"""diff --git a/chrome/src/nsChromeRegistry.cpp b/chrome/src/nsChromeRegistry.cpp
index af270dd..ecafa7e 100644
--- a/chrome/src/nsChromeRegistry.cpp
+++ b/chrome/src/nsChromeRegistry.cpp
@@ -675,8 +675,15 @@ nsChromeRegistry::Canonify(nsIURL* aChromeURL)
     }
     aChromeURL->SetPath(path);
   }
-  else if (path.Find(NS_LITERAL_CSTRING("""".."""")) != -1) {
-    return NS_ERROR_DOM_BAD_URI;
+  else {
+    nsCAutoString filePath;
+    rv = aChromeURL->GetFilePath(filePath);
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    if (filePath.Find(NS_LITERAL_CSTRING("""".."""")) != -1 ||
+        filePath.FindChar(':') != -1) {
+      return NS_ERROR_DOM_BAD_URI;
+    }
   }
 
   return NS_OK;"""
7887f047263367e77f093fad55aa21ffd464aee8,120998,338121,brendan%mozilla.org,"Beef up sanity checking (338121, r=mrbkap).
",1147972334,"""diff --git a/js/src/jsarena.c b/js/src/jsarena.c
index c7ea0c1..8f770a5 100644
--- a/js/src/jsarena.c
+++ b/js/src/jsarena.c
@@ -171,7 +171,8 @@ JS_ArenaAllocate(JSArenaPool *pool, size_t nb)
      * https://bugzilla.mozilla.org/show_bug.cgi?id=279273.
      */
     JS_ASSERT((nb & pool->mask) == 0);
-    for (a = pool->current; a->avail > a->limit - nb; pool->current = a) {
+    for (a = pool->current; nb > a->limit || a->avail > a->limit - nb;
+         pool->current = a) {
         ap = &a->next;
         if (!*ap) {
             /* Not enough space in pool -- try to reclaim a free arena. */
diff --git a/js/src/jsarena.h b/js/src/jsarena.h
index 394aa16..36e6ac5 100644
--- a/js/src/jsarena.h
+++ b/js/src/jsarena.h
@@ -113,10 +113,12 @@ struct JSArenaPool {
     JS_ARENA_ALLOCATE_CAST(p, void *, pool, nb)
 
 #define JS_ARENA_ALLOCATE_TYPE(p, type, pool)                                 \
-    JS_ARENA_ALLOCATE_CAST(p, type *, pool, sizeof(type))
+    JS_ARENA_ALLOCATE_COMMON(p, type *, pool, sizeof(type), 0)
+
+#define JS_ARENA_ALLOCATE_CAST(p, type, pool, nb)                             \
+    JS_ARENA_ALLOCATE_COMMON(p, type, pool, nb, _nb > _a->limit)
 
 /*
- *
  * NB: In JS_ARENA_ALLOCATE_CAST and JS_ARENA_GROW_CAST, always subtract _nb
  * from a->limit rather than adding _nb to _p, to avoid overflowing a 32-bit
  * address space (possible when running a 32-bit program on a 64-bit system
@@ -126,12 +128,12 @@ struct JSArenaPool {
  * Thanks to Juergen Kreileder <jk@blackdown.de>, who brought this up in
  * https://bugzilla.mozilla.org/show_bug.cgi?id=279273.
  */
-#define JS_ARENA_ALLOCATE_CAST(p, type, pool, nb)                             \
+#define JS_ARENA_ALLOCATE_COMMON(p, type, pool, nb, guard)                    \
     JS_BEGIN_MACRO                                                            \
         JSArena *_a = (pool)->current;                                        \
         size_t _nb = JS_ARENA_ALIGN(pool, nb);                                \
         jsuword _p = _a->avail;                                               \
-        if (_p > _a->limit - _nb)                                             \
+        if ((guard) || _p > _a->limit - _nb)                                  \
             _p = (jsuword)JS_ArenaAllocate(pool, _nb);                        \
         else                                                                  \
             _a->avail = _p + _nb;                                             \"""
a0ccaf6b0e20d0f923fc379b5158b57c6ef66a88,122200,338001,brendan%mozilla.org,"Add integer overflow checking (338001, r=mrbkap).
",1147771375,"""diff --git a/js/src/jsfun.c b/js/src/jsfun.c
index 1ee19f6..885cce9 100644
--- a/js/src/jsfun.c
+++ b/js/src/jsfun.c
@@ -1751,7 +1751,7 @@ Function(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     JSTokenStream *ts;
     JSPrincipals *principals;
     jschar *collected_args, *cp;
-    size_t arg_length, args_length;
+    size_t arg_length, args_length, old_args_length;
     JSTokenType tt;
     JSBool ok;
 
@@ -1828,10 +1828,27 @@ Function(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
             if (!arg)
                 return JS_FALSE;
             argv[i] = STRING_TO_JSVAL(arg);
-            args_length += JSSTRING_LENGTH(arg);
+
+            /*
+             * Check for overflow.  The < test works because the maximum
+             * JSString length fits in 2 fewer bits than size_t has.
+             */
+            old_args_length = args_length;
+            args_length = old_args_length + JSSTRING_LENGTH(arg);
+            if (args_length < old_args_length) {
+                JS_ReportOutOfMemory(cx);
+                return JS_FALSE;
+            }
+        }
+
+        /* Add 1 for each joining comma and check for overflow (two ways). */
+        old_args_length = args_length;
+        args_length = old_args_length + n - 1;
+        if (args_length < old_args_length ||
+            args_length >= ~(size_t)0 / sizeof(jschar)) {
+            JS_ReportOutOfMemory(cx);
+            return JS_FALSE;
         }
-        /* Add 1 for each joining comma. */
-        args_length += n - 1;
 
         /*
          * Allocate a string to hold the concatenated arguments, including room"""
5c53d1b0a625c390537a60d3af7da594677ace9d,122448,336830,bzbarsky%mit.edu,"Selection listeners and extra privileges go hand in hand. Bug 336830,
r=dveditz, sr=shaver
",1147363744,"""diff --git a/modules/libpref/src/init/all.js b/modules/libpref/src/init/all.js
index e7335fb..328a519 100644
--- a/modules/libpref/src/init/all.js
+++ b/modules/libpref/src/init/all.js
@@ -291,6 +291,9 @@ pref(""""capability.policy.default.Window.self.get"""", """"allAccess"""");
 pref(""""capability.policy.default.Window.top.get"""", """"allAccess"""");
 pref(""""capability.policy.default.Window.window.get"""", """"allAccess"""");
 
+pref(""""capability.policy.default.Selection.addSelectionListener"""", """"UniversalXPConnect"""");
+pref(""""capability.policy.default.Selection.removeSelectionListener"""", """"UniversalXPConnect"""");
+
 // Restrictions on the DOM for mail/news - see bugs 66938 and 84545
 pref(""""capability.policy.mailnews.sites"""", """"mailbox: imap: news:"""");
 """
52bff666660a5d79e7a2b0021ff40367f077159f,122596,336601,mrbkap%gmail.com,"Expand the checks to more cases. bug 336601, r+a181=brendan a=dveditz
",1146871777,"""diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index f1dfb3c..8ff1617 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -490,8 +490,6 @@ js_SetLocalVariable(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
 JSObject *
 js_ComputeThis(JSContext *cx, JSObject *thisp, jsval *argv)
 {
-    JSObject *parent;
-
     if (thisp && OBJ_GET_CLASS(cx, thisp) != &js_CallClass) {
         /* Some objects (e.g., With) delegate 'this' to another object. */
         thisp = OBJ_THIS_OBJECT(cx, thisp);
@@ -515,56 +513,28 @@ js_ComputeThis(JSContext *cx, JSObject *thisp, jsval *argv)
          * The alert should display """"true"""".
          */
         if (JSVAL_IS_PRIMITIVE(argv[-2]) ||
-            !(parent = OBJ_GET_PARENT(cx, JSVAL_TO_OBJECT(argv[-2])))) {
+            !OBJ_GET_PARENT(cx, JSVAL_TO_OBJECT(argv[-2]))) {
             thisp = cx->globalObject;
         } else {
-            /* walk up to find the top-level object */
-            thisp = parent;
-            while ((parent = OBJ_GET_PARENT(cx, thisp)) != NULL)
-                thisp = parent;
-        }
-    }
-    argv[-1] = OBJECT_TO_JSVAL(thisp);
-    return thisp;
-}
-
-/* Like js_ComputeThis, but with security checks. */
-JSObject *
-js_SafeComputeThis(JSContext *cx, JSObject *thisp, jsval *argv)
-{
-    jsid id;
-    jsval v;
-    uintN attrs;
-
-    /* N.B. This function closely mirrors the logic in js_ComputeThis. */
-    JS_ASSERT(thisp == JSVAL_TO_OBJECT(argv[-1]));
-
-    /*
-     * In this case, it is safe to simply return thisp and skip the
-     * OBJ_THIS_OBJECT, since all callers of js_SafeComputeThis call
-     * us first, and will always call js_ComputeThis afterwards.
-     */
-    if (thisp && OBJ_GET_CLASS(cx, thisp) != &js_CallClass)
-        return thisp;
-
-    JS_ASSERT(!JSVAL_IS_PRIMITIVE(argv[-2]));
-    thisp = OBJ_GET_PARENT(cx, JSVAL_TO_OBJECT(argv[-2]));
-    if (!thisp) {
-        thisp = cx->globalObject;
-    } else {
-        id = ATOM_TO_JSID(cx->runtime->atomState.parentAtom);
-        for (;;) {
-            if (!OBJ_CHECK_ACCESS(cx, thisp, id, JSACC_PARENT, &v, &attrs))
-                return NULL;
-            if (JSVAL_IS_NULL(v))
-                break;
-            if (JSVAL_IS_VOID(v))
-                v = OBJ_GET_SLOT(cx, thisp, JSSLOT_PARENT);
-            JS_ASSERT(JSVAL_IS_OBJECT(v));
-            thisp = JSVAL_TO_OBJECT(v);;
+            jsid id;
+            jsval v;
+            uintN attrs;
+
+            /* Walk up the parent chain. */
+            thisp = JSVAL_TO_OBJECT(argv[-2]);
+            id = ATOM_TO_JSID(cx->runtime->atomState.parentAtom);
+            for (;;) {
+                if (!OBJ_CHECK_ACCESS(cx, thisp, id, JSACC_PARENT, &v, &attrs))
+                    return NULL;
+                if (JSVAL_IS_VOID(v))
+                    v = OBJ_GET_SLOT(cx, thisp, JSSLOT_PARENT);
+                JS_ASSERT(JSVAL_TO_OBJECT(v) == OBJ_GET_PARENT(cx, thisp));
+                if (JSVAL_IS_NULL(v))
+                    break;
+                thisp = JSVAL_TO_OBJECT(v);
+            }
         }
     }
-
     argv[-1] = OBJECT_TO_JSVAL(thisp);
     return thisp;
 }"""
df21ae0e1e9fd65f54dedfb642bf604c64a1bd2f,122598,336601,mrbkap%gmail.com,"Expand the checks to more cases. bug 336601, r+a181=brendan a=dveditz
",1146871042,"""diff --git a/js/src/jsarray.c b/js/src/jsarray.c
index 4568e25..2b368d0 100644
--- a/js/src/jsarray.c
+++ b/js/src/jsarray.c
@@ -1642,14 +1642,6 @@ array_extra(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval,
     origsp = js_AllocStack(cx, 2 + 3 + 1, &mark);
     if (!origsp)
         return JS_FALSE;
-    origsp[0] = OBJECT_TO_JSVAL(callable);
-    origsp[1] = OBJECT_TO_JSVAL(thisp);
-
-    thisp = js_SafeComputeThis(cx, thisp, origsp + 2);
-    if (!thisp) {
-        ok = JS_FALSE;
-        goto out;
-    }
 
     /* Lift current frame to include our args. */
     fp = cx->fp;
diff --git a/js/src/jsfun.c b/js/src/jsfun.c
index 4882da3..99a007e 100644
--- a/js/src/jsfun.c
+++ b/js/src/jsfun.c
@@ -1543,12 +1543,6 @@ fun_call(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     for (i = 0; i < argc; i++)
         *sp++ = argv[i];
 
-    obj = js_SafeComputeThis(cx, obj, sp - argc);
-    if (!obj) {
-        ok = JS_FALSE;
-        goto out;
-    }
-
     /* Lift current frame to include the args and do the call. */
     fp = cx->fp;
     oldsp = fp->sp;
@@ -1558,7 +1552,6 @@ fun_call(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     /* Store rval and pop stack back to our frame's sp. */
     *rval = fp->sp[-1];
     fp->sp = oldsp;
-out:
     js_FreeStack(cx, mark);
     return ok;
 }
@@ -1639,12 +1632,6 @@ fun_apply(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         sp++;
     }
 
-    obj = js_SafeComputeThis(cx, obj, sp - argc);
-    if (!obj) {
-        ok = JS_FALSE;
-        goto out;
-    }
-
     /* Lift current frame to include the args and do the call. */
     fp = cx->fp;
     oldsp = fp->sp;
diff --git a/js/src/jsinterp.h b/js/src/jsinterp.h
index f2dfe8f..43c3992 100644
--- a/js/src/jsinterp.h
+++ b/js/src/jsinterp.h
@@ -269,9 +269,6 @@ extern void         js_DumpCallTable(JSContext *cx);
 extern JSObject *
 js_ComputeThis(JSContext *cx, JSObject *thisp, jsval *argv);
 
-extern JSObject *
-js_SafeComputeThis(JSContext *cx, JSObject *thisp, jsval *argv);
-
 /*
  * NB: js_Invoke requires that cx is currently running JS (i.e., that cx->fp
  * is non-null), and that the callee, |this| parameter, and actual arguments"""
36071ec9b8d0d69f5fa91a08f3d5ec61fcece9b3,122670,319263,mrbkap%gmail.com,"Create a safe version of js_ComputeThis that does access checks up the scope chain and bails if there's a failure. Use js_SafeComputeThis in places where its needed. bug 319263, r+a181=brendan
",1146725187,"""diff --git a/js/src/jsarray.c b/js/src/jsarray.c
index ae24983..4568e25 100644
--- a/js/src/jsarray.c
+++ b/js/src/jsarray.c
@@ -1635,16 +1635,21 @@ array_extra(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval,
             return JS_FALSE;
         argv[1] = OBJECT_TO_JSVAL(thisp);
     } else {
-        JSObject *tmp;
-        thisp = callable;
-        while ((tmp = OBJ_GET_PARENT(cx, thisp)) != NULL)
-            thisp = tmp;
+        thisp = NULL;
     }
 
     /* We call with 3 args (value, index, array), plus room for rval. */
     origsp = js_AllocStack(cx, 2 + 3 + 1, &mark);
     if (!origsp)
         return JS_FALSE;
+    origsp[0] = OBJECT_TO_JSVAL(callable);
+    origsp[1] = OBJECT_TO_JSVAL(thisp);
+
+    thisp = js_SafeComputeThis(cx, thisp, origsp + 2);
+    if (!thisp) {
+        ok = JS_FALSE;
+        goto out;
+    }
 
     /* Lift current frame to include our args. */
     fp = cx->fp;
@@ -1663,7 +1668,11 @@ array_extra(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval,
         if (!ok)
             break;
 
-        /* Push callable and 'this', then args. */
+        /*
+         * Push callable and 'this', then args. We must do this for every
+         * iteration around the loop since js_Invoke uses origsp[0] for rval
+         * storage and some native functions use origsp[1] for local rooting.
+         */
         sp = origsp;
         *sp++ = OBJECT_TO_JSVAL(callable);
         *sp++ = OBJECT_TO_JSVAL(thisp);
diff --git a/js/src/jsfun.c b/js/src/jsfun.c
index 6e98e24..4882da3 100644
--- a/js/src/jsfun.c
+++ b/js/src/jsfun.c
@@ -1501,7 +1501,6 @@ fun_call(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
     jsval fval, *sp, *oldsp;
     JSString *str;
-    JSObject *tmp;
     void *mark;
     uintN i;
     JSStackFrame *fp;
@@ -1524,8 +1523,7 @@ fun_call(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 
     if (argc == 0) {
         /* Call fun with its global object as the 'this' param if no args. */
-        while ((tmp = OBJ_GET_PARENT(cx, obj)) != NULL)
-            obj = tmp;
+        obj = NULL;
     } else {
         /* Otherwise convert the first arg to 'this' and skip over it. */
         if (!js_ValueToObject(cx, argv[0], &obj))
@@ -1545,6 +1543,12 @@ fun_call(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     for (i = 0; i < argc; i++)
         *sp++ = argv[i];
 
+    obj = js_SafeComputeThis(cx, obj, sp - argc);
+    if (!obj) {
+        ok = JS_FALSE;
+        goto out;
+    }
+
     /* Lift current frame to include the args and do the call. */
     fp = cx->fp;
     oldsp = fp->sp;
@@ -1554,6 +1558,7 @@ fun_call(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     /* Store rval and pop stack back to our frame's sp. */
     *rval = fp->sp[-1];
     fp->sp = oldsp;
+out:
     js_FreeStack(cx, mark);
     return ok;
 }
@@ -1634,6 +1639,12 @@ fun_apply(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         sp++;
     }
 
+    obj = js_SafeComputeThis(cx, obj, sp - argc);
+    if (!obj) {
+        ok = JS_FALSE;
+        goto out;
+    }
+
     /* Lift current frame to include the args and do the call. */
     fp = cx->fp;
     oldsp = fp->sp;
diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index 055f80a..9409c56 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -528,6 +528,46 @@ js_ComputeThis(JSContext *cx, JSObject *thisp, jsval *argv)
     return thisp;
 }
 
+/* Like js_ComputeThis, but with security checks. */
+JSObject *
+js_SafeComputeThis(JSContext *cx, JSObject *thisp, jsval *argv)
+{
+    jsid id;
+    jsval v;
+    uintN attrs;
+
+    /* N.B. This function closely mirrors the logic in js_ComputeThis. */
+    JS_ASSERT(thisp == JSVAL_TO_OBJECT(argv[-1]));
+
+    /*
+     * In this case, it is safe to simply return thisp and skip the
+     * OBJ_THIS_OBJECT, since all callers of js_SafeComputeThis call
+     * us first, and will always call js_ComputeThis afterwards.
+     */
+    if (thisp && OBJ_GET_CLASS(cx, thisp) != &js_CallClass)
+        return thisp;
+
+    JS_ASSERT(!JSVAL_IS_PRIMITIVE(argv[-2]));
+    thisp = OBJ_GET_PARENT(cx, JSVAL_TO_OBJECT(argv[-2]));
+    if (!thisp) {
+        thisp = cx->globalObject;
+    } else {
+        id = ATOM_TO_JSID(cx->runtime->atomState.parentAtom);
+        for (;;) {
+            if (!OBJ_CHECK_ACCESS(cx, thisp, id, JSACC_PARENT, &v, &attrs))
+                return NULL;
+            JS_ASSERT(JSVAL_IS_OBJECT(v));
+            if (JSVAL_IS_PRIMITIVE(v))
+                break;
+            JS_ASSERT(JSVAL_TO_OBJECT(v) == OBJ_GET_PARENT(cx, thisp));
+            thisp = JSVAL_TO_OBJECT(v);
+        }
+    }
+
+    argv[-1] = OBJECT_TO_JSVAL(thisp);
+    return thisp;
+}
+
 #if JS_HAS_NO_SUCH_METHOD
 
 static JSBool
diff --git a/js/src/jsinterp.h b/js/src/jsinterp.h
index 43c3992..f2dfe8f 100644
--- a/js/src/jsinterp.h
+++ b/js/src/jsinterp.h
@@ -269,6 +269,9 @@ extern void         js_DumpCallTable(JSContext *cx);
 extern JSObject *
 js_ComputeThis(JSContext *cx, JSObject *thisp, jsval *argv);
 
+extern JSObject *
+js_SafeComputeThis(JSContext *cx, JSObject *thisp, jsval *argv);
+
 /*
  * NB: js_Invoke requires that cx is currently running JS (i.e., that cx->fp
  * is non-null), and that the callee, |this| parameter, and actual arguments"""
e44b8c5b9dda9640069f56c49e0eab4232f3b62f,122700,336162,aaronleventhal%moonset.net,"Missed a file in the checkin for bug 336162
",1146678511,"""diff --git a/layout/xul/base/src/nsMenuFrame.cpp b/layout/xul/base/src/nsMenuFrame.cpp
index ac7b2ec..69fa9a5 100644
--- a/layout/xul/base/src/nsMenuFrame.cpp
+++ b/layout/xul/base/src/nsMenuFrame.cpp
@@ -680,7 +680,7 @@ nsMenuFrame::ActivateMenu(PRBool aActivateFlag)
 
   } else {
     if (mMenuOpen) {
-      menuPopup->FireDOMEvent(NS_LITERAL_STRING(""""DOMMenuInactive""""));
+      FireDOMEvent(NS_LITERAL_STRING(""""DOMMenuInactive""""), menuPopup->GetContent());
     }
     nsIView* view = menuPopup->GetView();
     NS_ASSERTION(view, """"View is gone, looks like someone forgot to rollup the popup!"""");"""
26291d471141e7c32d7e8d2642d2b156d3a43ca8,122705,336162,aaronleventhal%moonset.net,"Bug 336162. Don't fire DOM events from layout. r+sr=bz
",1146675757,"""diff --git a/layout/forms/nsListControlFrame.cpp b/layout/forms/nsListControlFrame.cpp
index 5e17ebb..52d6a53 100644
--- a/layout/forms/nsListControlFrame.cpp
+++ b/layout/forms/nsListControlFrame.cpp
@@ -2409,20 +2409,7 @@ nsListControlFrame::FireMenuItemActiveEvent()
     return;
   }
 
-  nsCOMPtr<nsIDOMEvent> event;
-  nsPresContext* presContext = GetPresContext();
-  nsEventDispatcher::CreateEvent(presContext, nsnull,
-                                 NS_LITERAL_STRING(""""Events""""),
-                                 getter_AddRefs(event));
-  if (event) {
-    event->InitEvent(NS_LITERAL_STRING(""""DOMMenuItemActive""""), PR_TRUE, PR_TRUE);
-
-    nsCOMPtr<nsIPrivateDOMEvent> privateEvent(do_QueryInterface(event));
-    privateEvent->SetTrusted(PR_TRUE);
-
-    nsEventDispatcher::DispatchDOMEvent(optionContent, nsnull, event, nsnull,
-                                        nsnull);
-  }
+  FireDOMEvent(NS_LITERAL_STRING(""""DOMMenuItemActive""""), optionContent);
 }
 #endif
 
diff --git a/layout/generic/nsFrame.cpp b/layout/generic/nsFrame.cpp
index f80c5ae..e71394b 100644
--- a/layout/generic/nsFrame.cpp
+++ b/layout/generic/nsFrame.cpp
@@ -59,6 +59,7 @@
 #include """"nsCRT.h""""
 #include """"nsGUIEvent.h""""
 #include """"nsIDOMEvent.h""""
+#include """"nsPLDOMEvent.h""""
 #include """"nsStyleConsts.h""""
 #include """"nsIPresShell.h""""
 #include """"prlog.h""""
@@ -1480,6 +1481,19 @@ nsFrame::GetContentForEvent(nsPresContext* aPresContext,
   return NS_OK;
 }
 
+void
+nsFrame::FireDOMEvent(const nsAString& aDOMEventName, nsIContent *aContent)
+{
+  nsCOMPtr<nsIDOMNode> domNode = do_QueryInterface(aContent ? aContent : mContent);
+  
+  if (domNode) {
+    nsPLDOMEvent *event = new nsPLDOMEvent(domNode, aDOMEventName);
+    if (event && NS_FAILED(event->PostDOMEvent())) {
+      PL_DestroyEvent(event);
+    }
+  }
+}
+
 /**
   *
  */
diff --git a/layout/generic/nsFrame.h b/layout/generic/nsFrame.h
index 1d70c42..67c7b07 100644
--- a/layout/generic/nsFrame.h
+++ b/layout/generic/nsFrame.h
@@ -531,6 +531,9 @@ protected:
   void InitBoxMetrics(PRBool aClear);
   nsBoxLayoutMetrics* BoxMetrics() const;
 
+  // Fire DOM event. If no aContent argument use frame's mContent.
+  void FireDOMEvent(const nsAString& aDOMEventName, nsIContent *aContent = nsnull);
+
 private:
   nsresult BoxReflow(nsBoxLayoutState& aState,
                      nsPresContext*    aPresContext,
diff --git a/layout/xul/base/src/nsBoxFrame.cpp b/layout/xul/base/src/nsBoxFrame.cpp
index dfa2dcd..daef2fd 100644
--- a/layout/xul/base/src/nsBoxFrame.cpp
+++ b/layout/xul/base/src/nsBoxFrame.cpp
@@ -2207,27 +2207,6 @@ nsBoxFrame::RegUnregAccessKey(PRBool aDoReg)
 }
 
 
-void
-nsBoxFrame::FireDOMEvent(const nsAString& aDOMEventName, nsIContent *aContent)
-{
-  nsIContent *content = aContent ? aContent : mContent;
-  nsPresContext *presContext = GetPresContext();
-  if (content && presContext) {
-    // Fire a DOM event
-    nsCOMPtr<nsIDOMEvent> event;
-    if (nsEventDispatcher::CreateEvent(presContext, nsnull,
-                                      NS_LITERAL_STRING(""""Events""""),
-                                      getter_AddRefs(event))) {
-      event->InitEvent(aDOMEventName, PR_TRUE, PR_TRUE);
-
-      nsCOMPtr<nsIPrivateDOMEvent> privateEvent(do_QueryInterface(event));
-      privateEvent->SetTrusted(PR_TRUE);
-      nsEventDispatcher::DispatchDOMEvent(content, nsnull, event, nsnull,
-                                          nsnull);
-    }
-  }
-}
-
 void 
 nsBoxFrame::CheckBoxOrder(nsBoxLayoutState& aState)
 {
diff --git a/layout/xul/base/src/nsBoxFrame.h b/layout/xul/base/src/nsBoxFrame.h
index eb8e1e5..1947c98 100644
--- a/layout/xul/base/src/nsBoxFrame.h
+++ b/layout/xul/base/src/nsBoxFrame.h
@@ -199,9 +199,6 @@ public:
 
   static nsresult LayoutChildAt(nsBoxLayoutState& aState, nsIBox* aBox, const nsRect& aRect);
 
-  // Fire DOM event. If no aContent argument use frame's mContent.
-  void FireDOMEvent(const nsAString& aDOMEventName, nsIContent *aContent = nsnull);
-  
   /**
    * Utility method to redirect events on descendants to this frame.
    * Supports 'allowevents' attribute on descendant elements to allow those
diff --git a/layout/xul/base/src/nsImageBoxFrame.cpp b/layout/xul/base/src/nsImageBoxFrame.cpp
index 87b8bc2..7fa1867 100644
--- a/layout/xul/base/src/nsImageBoxFrame.cpp
+++ b/layout/xul/base/src/nsImageBoxFrame.cpp
@@ -173,7 +173,7 @@ DestroyImagePLEvent(PLEvent* aEvent)
 // asynchronously.
 
 void
-FireDOMEvent(nsIContent* aContent, PRUint32 aMessage)
+FireImageDOMEvent(nsIContent* aContent, PRUint32 aMessage)
 {
   static NS_DEFINE_CID(kEventQueueServiceCID,   NS_EVENTQUEUESERVICE_CID);
 
@@ -638,13 +638,13 @@ NS_IMETHODIMP nsImageBoxFrame::OnStopDecode(imgIRequest *request,
 {
   if (NS_SUCCEEDED(aStatus))
     // Fire an onload DOM event.
-    FireDOMEvent(mContent, NS_IMAGE_LOAD);
+    FireImageDOMEvent(mContent, NS_IMAGE_LOAD);
   else {
     // Fire an onerror DOM event.
     mIntrinsicSize.SizeTo(0, 0);
     nsBoxLayoutState state(GetPresContext());
     MarkDirty(state);
-    FireDOMEvent(mContent, NS_IMAGE_ERROR);
+    FireImageDOMEvent(mContent, NS_IMAGE_ERROR);
   }
 
   return NS_OK;"""
ac3f75ff420e14898fd29a31c1a5dd8f5eebce56,122729,329468,gavin%gavinsharp.com,"Bug 329468: check url before showing frame, patch by Martijn Wargers <martijn.martijn@gmail.com>, r=dveditz
",1146616991,"""diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
index b8acd86..07031f5 100644
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -4559,7 +4559,14 @@ nsContextMenu.prototype = {
     },
     // Open clicked-in frame in the same window.
     showOnlyThisFrame : function () {
-        window.loadURI(this.target.ownerDocument.location.href, null, null, false);
+        try {
+          const secMan = Components.classes[""""@mozilla.org/scriptsecuritymanager;1""""]
+                         .getService(Components.interfaces.nsIScriptSecurityManager);
+          const nsIScriptSecMan = Components.interfaces.nsIScriptSecurityManager;
+          secMan.checkLoadURI(gBrowser.currentURI, makeURI(this.target.ownerDocument.location.href),
+                              nsIScriptSecMan.DISALLOW_SCRIPT);
+          window.loadURI(this.target.ownerDocument.location.href, null, null, false);
+        } catch(e) {}
     },
     // View Partial Source
     viewPartialSource : function ( context ) {"""
e0d55405783b56e83046a0ebf34ad84a7d760613,122730,329521,gavin%gavinsharp.com,"Bug 329521: check image url before viewing image, patch by Martijn Wargers <martijn.martijn@gmail.com>, r=mconnor
",1146616004,"""diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
index 182ddda..b8acd86 100644
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -4599,12 +4599,30 @@ nsContextMenu.prototype = {
     // Change current window to the URL of the image.
     viewImage : function (e) {
         urlSecurityCheck( this.imageURL, this.docURL );
-        openUILink( this.imageURL, e );
+        try {
+          if (this.docURL != gBrowser.currentURI) {
+            const secMan = Components.classes[""""@mozilla.org/scriptsecuritymanager;1""""]
+                           .getService(Components.interfaces.nsIScriptSecurityManager);
+            const nsIScriptSecMan = Components.interfaces.nsIScriptSecurityManager;
+            secMan.checkLoadURI(gBrowser.currentURI, makeURI(this.imageURL),
+                                nsIScriptSecMan.DISALLOW_SCRIPT);
+          }
+          openUILink( this.imageURL, e );
+        } catch(e) {}
     },
     // Change current window to the URL of the background image.
     viewBGImage : function (e) {
         urlSecurityCheck( this.bgImageURL, this.docURL );
-        openUILink( this.bgImageURL, e );
+        try {
+          if (this.docURL != gBrowser.currentURI) {
+            const secMan = Components.classes[""""@mozilla.org/scriptsecuritymanager;1""""]
+                           .getService(Components.interfaces.nsIScriptSecurityManager);
+            const nsIScriptSecMan = Components.interfaces.nsIScriptSecurityManager;
+            secMan.checkLoadURI(gBrowser.currentURI, makeURI(this.bgImageURL),
+                                nsIScriptSecMan.DISALLOW_SCRIPT);
+          }
+          openUILink( this.bgImageURL, e );
+        } catch(e) {}
     },
     disableSetDesktopBackground: function() {
         // Disable the Set as Desktop Background menu item if we're still trying"""
df9bd64f879de67f2678fdb63070c6a8d420250d,122732,336313,mrbkap%gmail.com,"Ensure that |this| is correct when calling FindProxyForURL. bug 336313, r=darin sr+a=dveditz
",1146615710,"""diff --git a/netwerk/base/src/nsProxyAutoConfig.js b/netwerk/base/src/nsProxyAutoConfig.js
index c56cfb7..c2a55ff 100644
--- a/netwerk/base/src/nsProxyAutoConfig.js
+++ b/netwerk/base/src/nsProxyAutoConfig.js
@@ -96,7 +96,7 @@ nsProxyAutoConfig.prototype = {
             return null;
 
         // Call the original function
-        return this._findProxyForURL(testURI, testHost);
+        return this._findProxyForURL.call(this._sandBox, testURI, testHost);
     }
 }
 """
3a9cefa8adf9f0c7f8257463334cab04c5aca8df,122777,334384,bienvenu%nventure.com,"fix oom handling when parsing base64 v-card data, sr=mscott, part of bug 334384
",1146525904,"""diff --git a/mailnews/addrbook/src/nsVCard.cpp b/mailnews/addrbook/src/nsVCard.cpp
index 3f20720..94b7183 100644
--- a/mailnews/addrbook/src/nsVCard.cpp
+++ b/mailnews/addrbook/src/nsVCard.cpp
@@ -979,7 +979,8 @@ static char * lexGetDataFromBase64()
 			bytes = (unsigned char*)PR_Realloc(bytes,bytesMax);
 			}
 			if (bytes == 0) {
-			mime_error(""""out of memory while processing BASE64 data\n"""");
+			  mime_error(""""out of memory while processing BASE64 data\n"""");
+                          break;
 			}
 		    }
 		if (bytes) {"""
b957dd795b203b5e446d5c42cc655d2d8b276f15,122819,335816,smontagu%smontagu.org,"Only suppress a BOM at the beginning of UTF-8 stream. Bug 335816, patch by Masatoshi Kimura (:emk) <VYV03354@nifty.ne.jp>, r=smontagu, sr=dbaron
",1146379429,"""diff --git a/intl/uconv/src/nsUTF8ToUnicode.cpp b/intl/uconv/src/nsUTF8ToUnicode.cpp
index 976cb1d..6563dbd 100644
--- a/intl/uconv/src/nsUTF8ToUnicode.cpp
+++ b/intl/uconv/src/nsUTF8ToUnicode.cpp
@@ -106,10 +106,12 @@ NS_IMETHODIMP nsUTF8ToUnicode::GetMaxLength(const char * aSrc,
 NS_IMETHODIMP nsUTF8ToUnicode::Reset()
 {
 
+  mUcs4  = 0;     // cached Unicode character
   mState = 0;     // cached expected number of octets after the current octet
                   // until the beginning of the next UTF8 character sequence
-  mUcs4  = 0;     // cached Unicode character
   mBytes = 1;     // cached expected number of octets in the current sequence
+  mFirst = PR_TRUE;
+
   return NS_OK;
 
 }
@@ -134,6 +136,11 @@ NS_IMETHODIMP nsUTF8ToUnicode::Convert(const char * aSrc,
 
   nsresult res = NS_OK; // conversion result
 
+  // Set mFirst to PR_FALSE now so we don't have to every time through the ASCII
+  // branch within the loop.
+  if (mFirst && aSrcLen && (0 == (0x80 & (*aSrc))))
+    mFirst = PR_FALSE;
+
   for (in = aSrc, out = aDest; ((in < inend) && (out < outend)); ++in) {
     if (0 == mState) {
       // When mState is zero we expect either a US-ASCII character or a
@@ -223,12 +230,15 @@ NS_IMETHODIMP nsUTF8ToUnicode::Convert(const char * aSrc,
             mUcs4 -= 0x00010000;
             *out++ = 0xD800 | (0x000003FF & (mUcs4 >> 10));
             *out++ = 0xDC00 | (0x000003FF & mUcs4);
-          } else if (UNICODE_BYTE_ORDER_MARK != mUcs4) {
-            // BOM is legal but we don't want to output it
+          } else if (UNICODE_BYTE_ORDER_MARK != mUcs4 || !mFirst) {
+            // Don't output the BOM only if it is the first character
             *out++ = mUcs4;
           }
           //initialize UTF8 cache
-          Reset();
+          mUcs4  = 0;
+          mState = 0;
+          mBytes = 1;
+          mFirst = PR_FALSE;
         }
       } else {
         /* ((0xC0 & (*in) != 0x80) && (mState != 0))
diff --git a/intl/uconv/src/nsUTF8ToUnicode.h b/intl/uconv/src/nsUTF8ToUnicode.h
index 4e5e7ba..07ce12c 100644
--- a/intl/uconv/src/nsUTF8ToUnicode.h
+++ b/intl/uconv/src/nsUTF8ToUnicode.h
@@ -71,9 +71,10 @@ public:
 
 protected:
 
-   PRUint32 mState;	// cached expected number of bytes per UTF8 character sequence
-   PRUint32 mUcs4;	// cached Unicode character
-   PRUint32 mBytes;
+  PRUint32 mUcs4; // cached Unicode character
+  PRUint8 mState; // cached expected number of bytes per UTF8 character sequence
+  PRUint8 mBytes;
+  PRPackedBool mFirst;
 
   //--------------------------------------------------------------------
   // Subclassing of nsDecoderSupport class [declaration]"""
9d0e7df1b149d282d043283ba32d3a099a05381d,122952,334515,cvshook%sicking.cc,"Bug 334515: Work with objects that don't support weak references. r/sr=dbaron
",1146096464,"""diff --git a/embedding/components/commandhandler/src/nsBaseCommandController.cpp b/embedding/components/commandhandler/src/nsBaseCommandController.cpp
index 63570f0..ff631fa 100644
--- a/embedding/components/commandhandler/src/nsBaseCommandController.cpp
+++ b/embedding/components/commandhandler/src/nsBaseCommandController.cpp
@@ -55,6 +55,7 @@ NS_INTERFACE_MAP_BEGIN(nsBaseCommandController)
 NS_INTERFACE_MAP_END
 
 nsBaseCommandController::nsBaseCommandController()
+  : mCommandContextRawPtr(nsnull)
 {
 }
 
@@ -78,7 +79,21 @@ nsBaseCommandController::Init(nsIControllerCommandTable *aCommandTable)
 NS_IMETHODIMP
 nsBaseCommandController::SetCommandContext(nsISupports *aCommandContext)
 {
-  mCommandContext = do_GetWeakReference(aCommandContext);
+  mCommandContextWeakPtr = nsnull;
+  mCommandContextRawPtr = nsnull;
+
+  if (aCommandContext) {
+    nsCOMPtr<nsISupportsWeakReference> weak = do_QueryInterface(aCommandContext);
+    if (weak) {
+      nsresult rv =
+        weak->GetWeakReference(getter_AddRefs(mCommandContextWeakPtr));
+      NS_ENSURE_SUCCESS(rv, rv);
+    }
+    else {
+      mCommandContextRawPtr = aCommandContext;
+    }
+  }
+
   return NS_OK;
 }
 
@@ -113,7 +128,13 @@ nsBaseCommandController::IsCommandEnabled(const char *aCommand,
   NS_ENSURE_ARG_POINTER(aCommand);
   NS_ENSURE_ARG_POINTER(aResult);
   NS_ENSURE_STATE(mCommandTable);
-  nsCOMPtr<nsISupports> context = do_QueryReferent(mCommandContext);
+
+  nsISupports* context = mCommandContextRawPtr;
+  nsCOMPtr<nsISupports> weak;
+  if (!context) {
+    weak = do_QueryReferent(mCommandContextWeakPtr);
+    context = weak;
+  }
   return mCommandTable->IsCommandEnabled(aCommand, context, aResult);
 }
 
@@ -123,7 +144,13 @@ nsBaseCommandController::SupportsCommand(const char *aCommand, PRBool *aResult)
   NS_ENSURE_ARG_POINTER(aCommand);
   NS_ENSURE_ARG_POINTER(aResult);
   NS_ENSURE_STATE(mCommandTable);
-  nsCOMPtr<nsISupports> context = do_QueryReferent(mCommandContext);
+
+  nsISupports* context = mCommandContextRawPtr;
+  nsCOMPtr<nsISupports> weak;
+  if (!context) {
+    weak = do_QueryReferent(mCommandContextWeakPtr);
+    context = weak;
+  }
   return mCommandTable->SupportsCommand(aCommand, context, aResult);
 }
 
@@ -132,7 +159,13 @@ nsBaseCommandController::DoCommand(const char *aCommand)
 {
   NS_ENSURE_ARG_POINTER(aCommand);
   NS_ENSURE_STATE(mCommandTable);
-  nsCOMPtr<nsISupports> context = do_QueryReferent(mCommandContext);
+
+  nsISupports* context = mCommandContextRawPtr;
+  nsCOMPtr<nsISupports> weak;
+  if (!context) {
+    weak = do_QueryReferent(mCommandContextWeakPtr);
+    context = weak;
+  }
   return mCommandTable->DoCommand(aCommand, context);
 }
 
@@ -142,7 +175,13 @@ nsBaseCommandController::DoCommandWithParams(const char *aCommand,
 {
   NS_ENSURE_ARG_POINTER(aCommand);
   NS_ENSURE_STATE(mCommandTable);
-  nsCOMPtr<nsISupports> context = do_QueryReferent(mCommandContext);
+
+  nsISupports* context = mCommandContextRawPtr;
+  nsCOMPtr<nsISupports> weak;
+  if (!context) {
+    weak = do_QueryReferent(mCommandContextWeakPtr);
+    context = weak;
+  }
   return mCommandTable->DoCommandParams(aCommand, aParams, context);
 }
 
@@ -152,7 +191,13 @@ nsBaseCommandController::GetCommandStateWithParams(const char *aCommand,
 {
   NS_ENSURE_ARG_POINTER(aCommand);
   NS_ENSURE_STATE(mCommandTable);
-  nsCOMPtr<nsISupports> context = do_QueryReferent(mCommandContext);
+
+  nsISupports* context = mCommandContextRawPtr;
+  nsCOMPtr<nsISupports> weak;
+  if (!context) {
+    weak = do_QueryReferent(mCommandContextWeakPtr);
+    context = weak;
+  }
   return mCommandTable->GetCommandState(aCommand, aParams, context);
 }
 
diff --git a/embedding/components/commandhandler/src/nsBaseCommandController.h b/embedding/components/commandhandler/src/nsBaseCommandController.h
index 0241ab5..c243364 100644
--- a/embedding/components/commandhandler/src/nsBaseCommandController.h
+++ b/embedding/components/commandhandler/src/nsBaseCommandController.h
@@ -81,7 +81,8 @@ public:
   
 private:
 
-   nsWeakPtr mCommandContext;
+   nsWeakPtr mCommandContextWeakPtr;
+   nsISupports* mCommandContextRawPtr;
    
    // Our reference to the command manager
    nsCOMPtr<nsIControllerCommandTable> mCommandTable;     """
45aba157167f8a60c9b98aa3c6f1129b7eecf023,122956,335535,mrbkap%gmail.com,"Protect against an overly-large length. Patch from brendan, bug 335535, r=mrbkap
",1146088013,"""diff --git a/js/src/jsstr.c b/js/src/jsstr.c
index 8604bf5..21e63e2 100644
--- a/js/src/jsstr.c
+++ b/js/src/jsstr.c
@@ -2066,6 +2066,11 @@ tagify(JSContext *cx, JSObject *obj, jsval *argv,
     endlen = strlen(end);
     taglen += JSSTRING_LENGTH(str) + 2 + endlen + 1;    /* 'str</end>' */
 
+    if (taglen >= ~(size_t)0 / sizeof(jschar)) {
+        JS_ReportOutOfMemory(cx);
+        return JS_FALSE;
+    }
+
     tagbuf = (jschar *) JS_malloc(cx, (taglen + 1) * sizeof(jschar));
     if (!tagbuf)
         return JS_FALSE;"""
ddc8d386085c7f3b11e26d0688bb5899f2ff055e,122974,326931,neil%parkwaycc.co.uk,"bustage fix b=326931
",1146056724,"""diff --git a/content/base/src/nsDocument.cpp b/content/base/src/nsDocument.cpp
index 375a6cf..19abea0 100644
--- a/content/base/src/nsDocument.cpp
+++ b/content/base/src/nsDocument.cpp
@@ -3244,8 +3244,8 @@ nsDocument::GetBoxObjectFor(nsIDOMElement* aElement, nsIBoxObject** aResult)
 
   PRInt32 namespaceID;
   nsCOMPtr<nsIAtom> tag;
-  nsCOMPtr<nsIXBLService> xblService =
-           do_GetService(""""@mozilla.org/xbl;1"""", &rv);
+  nsCOMPtr<nsIXBLService> xblService = do_GetService(""""@mozilla.org/xbl;1"""");
+  NS_ENSURE_TRUE(xblService, NS_ERROR_FAILURE);
   xblService->ResolveTag(content, &namespaceID, getter_AddRefs(tag));
 
   nsCAutoString contractID(""""@mozilla.org/layout/xul-boxobject"""");"""
de6fc340e9a0518ee9873827baba03fd99098fd3,122975,326931,neil%parkwaycc.co.uk,"Improve box object hashtable storage b=326931 r=jst sr=bz
",1146055369,"""diff --git a/content/base/public/nsIDocument.h b/content/base/public/nsIDocument.h
index ca2aecb..58fbc1d 100644
--- a/content/base/public/nsIDocument.h
+++ b/content/base/public/nsIDocument.h
@@ -91,8 +91,8 @@ class nsIDocumentObserver;
 
 // IID for the nsIDocument interface
 #define NS_IDOCUMENT_IID      \
-{ 0x3b3cb52f, 0xf604, 0x48d5, \
-  { 0xb5, 0x70, 0xf3, 0x25, 0xbb, 0x0a, 0x7a, 0x22 } }
+{ 0x726ce58e, 0x13ab, 0x4c91, \
+  { 0x80, 0x45, 0xa8, 0x7b, 0xfe, 0xd5, 0xfe, 0xcd } }
 
 
 // Flag for AddStyleSheet().
@@ -899,6 +899,13 @@ public:
   virtual void CopyUserData(const nsINode *aObject,
                             nsIDocument *aDestination) = 0;
 
+  /**
+   * Resets and removes a box object from the document's box object cache
+   *
+   * @param aElement canonical nsIContent pointer of the box object's element
+   */
+  virtual void ClearBoxObjectFor(nsIContent *aContent) = 0;
+
 protected:
   ~nsIDocument()
   {
diff --git a/content/base/src/nsDocument.cpp b/content/base/src/nsDocument.cpp
index 506587b..375a6cf 100644
--- a/content/base/src/nsDocument.cpp
+++ b/content/base/src/nsDocument.cpp
@@ -106,8 +106,6 @@
 #include """"nsPIDOMWindow.h""""
 #include """"nsIDOMElement.h""""
 
-#include """"nsIBoxObject.h""""
-#include """"nsPIBoxObject.h""""
 #include """"nsXULAtoms.h""""
 
 // for radio group stuff
@@ -3228,21 +3226,18 @@ nsDocument::GetBoxObjectFor(nsIDOMElement* aElement, nsIBoxObject** aResult)
   NS_ENSURE_TRUE(content->GetCurrentDoc() == this,
                  NS_ERROR_DOM_WRONG_DOCUMENT_ERR);
   
-  nsresult rv;
-
   *aResult = nsnull;
 
   if (!mBoxObjectTable) {
-    mBoxObjectTable = new nsSupportsHashtable;
+    mBoxObjectTable = new nsInterfaceHashtable<nsISupportsHashKey, nsPIBoxObject>;
+    if (mBoxObjectTable) {
+      mBoxObjectTable->Init(12);
+    }
   } else {
-    nsISupportsKey key(aElement);
-    nsCOMPtr<nsISupports> supports = dont_AddRef(mBoxObjectTable->Get(&key));
-
-    nsCOMPtr<nsIBoxObject> boxObject(do_QueryInterface(supports));
-    if (boxObject) {
-      *aResult = boxObject;
+    // Want to use Get(content, aResult); but it's the wrong type
+    *aResult = mBoxObjectTable->GetWeak(content);
+    if (*aResult) {
       NS_ADDREF(*aResult);
-
       return NS_OK;
     }
   }
@@ -3276,14 +3271,15 @@ nsDocument::GetBoxObjectFor(nsIDOMElement* aElement, nsIBoxObject** aResult)
   }
   contractID += """";1"""";
 
-  nsCOMPtr<nsIBoxObject> boxObject(do_CreateInstance(contractID.get()));
+  nsCOMPtr<nsPIBoxObject> boxObject(do_CreateInstance(contractID.get()));
   if (!boxObject)
     return NS_ERROR_FAILURE;
 
-  nsCOMPtr<nsPIBoxObject> privateBox(do_QueryInterface(boxObject));
-  privateBox->Init(content);
+  boxObject->Init(content);
 
-  SetBoxObjectFor(aElement, boxObject);
+  if (mBoxObjectTable) {
+    mBoxObjectTable->Put(content, boxObject.get());
+  }
 
   *aResult = boxObject;
   NS_ADDREF(*aResult);
@@ -3291,29 +3287,16 @@ nsDocument::GetBoxObjectFor(nsIDOMElement* aElement, nsIBoxObject** aResult)
   return NS_OK;
 }
 
-NS_IMETHODIMP
-nsDocument::SetBoxObjectFor(nsIDOMElement* aElement, nsIBoxObject* aBoxObject)
+void
+nsDocument::ClearBoxObjectFor(nsIContent* aContent)
 {
-  if (!mBoxObjectTable) {
-    if (!aBoxObject)
-      return NS_OK;
-    mBoxObjectTable = new nsSupportsHashtable(12);
-  }
-
-  nsISupportsKey key(aElement);
-
-  if (aBoxObject) {
-    mBoxObjectTable->Put(&key, aBoxObject);
-  } else {
-    nsCOMPtr<nsISupports> supp;
-    mBoxObjectTable->Remove(&key, getter_AddRefs(supp));
-    nsCOMPtr<nsPIBoxObject> boxObject(do_QueryInterface(supp));
+  if (mBoxObjectTable) {
+    nsPIBoxObject *boxObject = mBoxObjectTable->GetWeak(aContent);
     if (boxObject) {
       boxObject->Clear();
+      mBoxObjectTable->Remove(aContent);
     }
   }
-
-  return NS_OK;
 }
 
 struct DirTable {
diff --git a/content/base/src/nsDocument.h b/content/base/src/nsDocument.h
index 7a946f9..82d894d 100644
--- a/content/base/src/nsDocument.h
+++ b/content/base/src/nsDocument.h
@@ -77,6 +77,9 @@
 #include """"nsIDOM3DocumentEvent.h""""
 #include """"nsCOMArray.h""""
 #include """"nsHashtable.h""""
+#include """"nsInterfaceHashtable.h""""
+#include """"nsIBoxObject.h""""
+#include """"nsPIBoxObject.h""""
 #include """"nsIScriptObjectPrincipal.h""""
 #include """"nsIURI.h""""
 #include """"nsScriptLoader.h""""
@@ -673,6 +676,7 @@ public:
                                        nsIDOMNode *aDest);
   NS_HIDDEN_(void) CopyUserData(const nsINode *aObject,
                                 nsIDocument *aDestination);
+  NS_HIDDEN_(void) ClearBoxObjectFor(nsIContent* aContent);
 
 protected:
 
@@ -784,7 +788,7 @@ protected:
 
   PRUint8 mDefaultElementType;
 
-  nsSupportsHashtable* mBoxObjectTable;
+  nsInterfaceHashtable<nsISupportsHashKey, nsPIBoxObject> *mBoxObjectTable;
 
   // The channel that got passed to StartDocumentLoad(), if any
   nsCOMPtr<nsIChannel> mChannel;
diff --git a/content/base/src/nsGenericElement.cpp b/content/base/src/nsGenericElement.cpp
index 1f46be2..93e46d7 100644
--- a/content/base/src/nsGenericElement.cpp
+++ b/content/base/src/nsGenericElement.cpp
@@ -1850,12 +1850,7 @@ nsGenericElement::UnbindFromTree(PRBool aDeep, PRBool aNullParent)
       document->ForgetLink(this);
     }
 
-    nsCOMPtr<nsIDOMElement> domElement = do_QueryInterface(this);
-
-    if (domElement) {
-      nsCOMPtr<nsIDOMNSDocument> nsDoc = do_QueryInterface(document);
-      nsDoc->SetBoxObjectFor(domElement, nsnull);
-    }
+    document->ClearBoxObjectFor(this);
   }
 
   // Unset things in the reverse order from how we set them in BindToTree
diff --git a/content/xul/content/src/nsXULElement.cpp b/content/xul/content/src/nsXULElement.cpp
index 77d0b3d..a2d57a7 100644
--- a/content/xul/content/src/nsXULElement.cpp
+++ b/content/xul/content/src/nsXULElement.cpp
@@ -937,8 +937,7 @@ nsXULElement::UnbindFromTree(PRBool aDeep, PRBool aNullParent)
         // anonymous content that the document is changing.
         document->BindingManager()->ChangeDocumentFor(this, document, nsnull);
 
-        nsCOMPtr<nsIDOMNSDocument> nsDoc(do_QueryInterface(document));
-        nsDoc->SetBoxObjectFor(this, nsnull);
+        document->ClearBoxObjectFor(this);
     }
 
     // mControllers can own objects that are implemented
diff --git a/dom/public/idl/core/nsIDOMNSDocument.idl b/dom/public/idl/core/nsIDOMNSDocument.idl
index 28d6222..b26c5ac 100644
--- a/dom/public/idl/core/nsIDOMNSDocument.idl
+++ b/dom/public/idl/core/nsIDOMNSDocument.idl
@@ -43,7 +43,7 @@ interface nsIBoxObject;
 interface nsIDOMLocation;
 
 
-[scriptable, uuid(a6cf90cd-15b3-11d2-932e-00805f8add32)]
+[scriptable, uuid(170763c7-c94e-4db9-98be-e69ac3a02a41)]
 interface nsIDOMNSDocument : nsISupports
 {
   readonly attribute DOMString            characterSet;
@@ -58,6 +58,4 @@ interface nsIDOMNSDocument : nsISupports
   readonly attribute DOMString            referrer;
 
   nsIBoxObject              getBoxObjectFor(in nsIDOMElement elt);
-  void                      setBoxObjectFor(in nsIDOMElement elt,
-                                            in nsIBoxObject boxObject);
 };"""
a727022ef6e8db3ab8e7323ceb07f210be43b28f,123036,334977,cvshook%sicking.cc,"Bug 334977. Separate mFileName from mValue. r/sr=bz
",1145956722,"""diff --git a/content/html/content/public/Makefile.in b/content/html/content/public/Makefile.in
index 72e95bd..a6623ba 100644
--- a/content/html/content/public/Makefile.in
+++ b/content/html/content/public/Makefile.in
@@ -61,6 +61,7 @@ EXPORTS		= \
 		nsIRadioVisitor.h \
 		nsIRadioGroupContainer.h \
 		nsITextControlElement.h \
+		nsIFileControlElement.h \
 		nsIFormSubmission.h \
 		nsIFrameSetElement.h \
                 $(NULL)
diff --git a/content/html/content/public/nsIFileControlElement.h b/content/html/content/public/nsIFileControlElement.h
new file mode 100755
index 0000000..ad18f36
--- /dev/null
+++ b/content/html/content/public/nsIFileControlElement.h
@@ -0,0 +1,73 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is mozilla.org code.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s):
+ *   Jonas Sicking <jonas@sicking.cc> (Original author)
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+#ifndef nsIFileControlElement_h___
+#define nsIFileControlElement_h___
+
+#include """"nsISupports.h""""
+class nsAString;
+
+// IID for the nsIFileControl interface
+#define NS_IFILECONTROLELEMENT_IID \
+{ 0x1f6a32fd, 0x9cda, 0x43e9, \
+  { 0x90, 0xef, 0x18, 0x0a, 0xd5, 0xe6, 0xcd, 0xa9 } }
+
+/**
+ * This interface is used for the file control frame to store its value away
+ * into the content.
+ */
+class nsIFileControlElement : public nsISupports {
+public:
+
+  NS_DECLARE_STATIC_IID_ACCESSOR(NS_IFILECONTROLELEMENT_IID)
+
+  /**
+   * Gets filename to be uploaded when this control is submitted
+   */
+  virtual void GetFileName(nsAString& aFileName) = 0;
+
+  /**
+   * Sets filename to be uploaded when this control is submitted
+   */
+  virtual void SetFileName(const nsAString& aFileName) = 0;
+};
+
+NS_DEFINE_STATIC_IID_ACCESSOR(nsIFileControlElement,
+                              NS_IFILECONTROLELEMENT_IID)
+
+#endif // nsIFileControlElement_h___
diff --git a/content/html/content/src/nsHTMLInputElement.cpp b/content/html/content/src/nsHTMLInputElement.cpp
index 8a5b3aa..0d3f1cb 100644
--- a/content/html/content/src/nsHTMLInputElement.cpp
+++ b/content/html/content/src/nsHTMLInputElement.cpp
@@ -39,6 +39,7 @@
 #include """"nsIDOMHTMLInputElement.h""""
 #include """"nsIDOMNSHTMLInputElement.h""""
 #include """"nsITextControlElement.h""""
+#include """"nsIFileControlElement.h""""
 #include """"nsIDOMNSEditableElement.h""""
 #include """"nsIRadioControlElement.h""""
 #include """"nsIRadioVisitor.h""""
@@ -149,7 +150,8 @@ class nsHTMLInputElement : public nsGenericHTMLFormElement,
                            public nsITextControlElement,
                            public nsIRadioControlElement,
                            public nsIPhonetic,
-                           public nsIDOMNSEditableElement
+                           public nsIDOMNSEditableElement,
+                           public nsIFileControlElement
 {
 public:
   nsHTMLInputElement(nsINodeInfo *aNodeInfo, PRBool aFromParser);
@@ -217,6 +219,10 @@ public:
   // nsITextControlElement
   NS_IMETHOD TakeTextFrameValue(const nsAString& aValue);
   NS_IMETHOD SetValueChanged(PRBool aValueChanged);
+  
+  // nsIFileControlElement
+  virtual void GetFileName(nsAString& aFileName);
+  virtual void SetFileName(const nsAString& aFileName);
 
   // nsIRadioControlElement
   NS_IMETHOD RadioSetChecked(PRBool aNotify);
@@ -231,7 +237,6 @@ public:
    */
   virtual already_AddRefed<nsIRadioGroupContainer> GetRadioGroupContainer();
 
-
 protected:
   // Helper method
   nsresult SetValueInternal(const nsAString& aValue,
@@ -323,6 +328,17 @@ protected:
    * The current value of the input if it has been changed from the deafault
    */
   char*                    mValue;
+  /**
+   * The value of the input if it is a file input. This is the filename used
+   * when uploading a file. It is vital that this is kept separate from mValue
+   * so that it won't be possible to 'leak' the value from a text-input to a
+   * file-input. Additionally, the logic for this value is kept as simple as
+   * possible to avoid accidental errors where the wrong filename is used.
+   * Therefor the filename is always owned by this member, never by the frame.
+   * Whenever the frame wants to change the filename it has to call
+   * SetFileName to update this member.
+   */
+  nsAutoPtr<nsString>      mFileName;
 };
 
 //
@@ -361,6 +377,7 @@ NS_HTML_CONTENT_INTERFACE_MAP_BEGIN(nsHTMLInputElement,
   NS_INTERFACE_MAP_ENTRY(nsIDOMHTMLInputElement)
   NS_INTERFACE_MAP_ENTRY(nsIDOMNSHTMLInputElement)
   NS_INTERFACE_MAP_ENTRY(nsITextControlElement)
+  NS_INTERFACE_MAP_ENTRY(nsIFileControlElement)
   NS_INTERFACE_MAP_ENTRY(nsIRadioControlElement)
   NS_INTERFACE_MAP_ENTRY(nsIPhonetic)
   NS_INTERFACE_MAP_ENTRY(imgIDecoderObserver)
@@ -390,7 +407,6 @@ nsHTMLInputElement::Clone(nsINodeInfo *aNodeInfo, PRBool aDeep,
   switch (mType) {
     case NS_FORM_INPUT_TEXT:
     case NS_FORM_INPUT_PASSWORD:
-    case NS_FORM_INPUT_FILE:
       if (GET_BOOLBIT(mBitField, BF_VALUE_CHANGED)) {
         // We don't have our default value anymore.  Set our value on
         // the clone.
@@ -401,6 +417,11 @@ nsHTMLInputElement::Clone(nsINodeInfo *aNodeInfo, PRBool aDeep,
         it->SetValueInternal(value, nsnull);
       }
       break;
+    case NS_FORM_INPUT_FILE:
+      if (mFileName) {
+        it->mFileName = new nsString(*mFileName);
+      }
+      break;
     case NS_FORM_INPUT_RADIO:
     case NS_FORM_INPUT_CHECKBOX:
       if (GET_BOOLBIT(mBitField, BF_CHECKED_CHANGED)) {
@@ -621,8 +642,7 @@ nsHTMLInputElement::SetSize(PRUint32 aValue)
 NS_IMETHODIMP 
 nsHTMLInputElement::GetValue(nsAString& aValue)
 {
-  if (mType == NS_FORM_INPUT_TEXT || mType == NS_FORM_INPUT_PASSWORD ||
-      mType == NS_FORM_INPUT_FILE) {
+  if (mType == NS_FORM_INPUT_TEXT || mType == NS_FORM_INPUT_PASSWORD) {
     // No need to flush here, if there's no frame created for this
     // input yet, there won't be a value in it (that we don't already
     // have) even if we force it to be created
@@ -654,6 +674,17 @@ nsHTMLInputElement::GetValue(nsAString& aValue)
     return NS_OK;
   }
 
+  if (mType == NS_FORM_INPUT_FILE) {
+    if (mFileName) {
+      aValue = *mFileName;
+    }
+    else {
+      aValue.Truncate();
+    }
+    
+    return NS_OK;
+  }
+
   // Treat value == defaultValue for other input elements
   if (!GetAttr(kNameSpaceID_None, nsHTMLAtoms::value, aValue) &&
       (mType == NS_FORM_INPUT_RADIO || mType == NS_FORM_INPUT_CHECKBOX)) {
@@ -673,22 +704,28 @@ nsHTMLInputElement::SetValue(const nsAString& aValue)
 {
   // check security.  Note that setting the value to the empty string is always
   // OK and gives pages a way to clear a file input if necessary.
-  if (mType == NS_FORM_INPUT_FILE && !aValue.IsEmpty()) {
-    nsIScriptSecurityManager *securityManager =
-      nsContentUtils::GetSecurityManager();
+  if (mType == NS_FORM_INPUT_FILE) {
+    if (!aValue.IsEmpty()) {
+      nsIScriptSecurityManager *securityManager =
+        nsContentUtils::GetSecurityManager();
 
-    PRBool enabled;
-    nsresult rv =
-      securityManager->IsCapabilityEnabled(""""UniversalFileRead"""", &enabled);
-    NS_ENSURE_SUCCESS(rv, rv);
+      PRBool enabled;
+      nsresult rv =
+        securityManager->IsCapabilityEnabled(""""UniversalFileRead"""", &enabled);
+      NS_ENSURE_SUCCESS(rv, rv);
 
-    if (!enabled) {
-      // setting the value of a """"FILE"""" input widget requires the
-      // UniversalFileRead privilege
-      return NS_ERROR_DOM_SECURITY_ERR;
+      if (!enabled) {
+        // setting the value of a """"FILE"""" input widget requires the
+        // UniversalFileRead privilege
+        return NS_ERROR_DOM_SECURITY_ERR;
+      }
     }
+    SetFileName(aValue);
   }
-  SetValueInternal(aValue, nsnull);
+  else {
+    SetValueInternal(aValue, nsnull);
+  }
+
   return NS_OK;
 }
 
@@ -703,12 +740,34 @@ nsHTMLInputElement::TakeTextFrameValue(const nsAString& aValue)
   return NS_OK;
 }
 
+void
+nsHTMLInputElement::GetFileName(nsAString& aValue)
+{
+  if (mFileName) {
+    aValue = *mFileName;
+  }
+  else {
+    aValue.Truncate();
+  }
+}
+
+void
+nsHTMLInputElement::SetFileName(const nsAString& aValue)
+{
+  // No big deal if |new| fails, we simply won't submit the file
+  mFileName = aValue.IsEmpty() ? nsnull : new nsString(aValue);
+
+  SetValueChanged(PR_TRUE);
+}
+
 nsresult
 nsHTMLInputElement::SetValueInternal(const nsAString& aValue,
                                      nsITextControlFrame* aFrame)
 {
-  if (mType == NS_FORM_INPUT_TEXT || mType == NS_FORM_INPUT_PASSWORD ||
-      mType == NS_FORM_INPUT_FILE) {
+  NS_PRECONDITION(mType != NS_FORM_INPUT_FILE,
+                  """"Don't call SetValueInternal for file inputs"""");
+
+  if (mType == NS_FORM_INPUT_TEXT || mType == NS_FORM_INPUT_PASSWORD) {
 
     nsITextControlFrame* textControlFrame = aFrame;
     nsIFormControlFrame* formControlFrame = textControlFrame;
@@ -726,9 +785,6 @@ nsHTMLInputElement::SetValueInternal(const nsAString& aValue,
     // File frames always own the value (if the frame is there).
     // Text frames have a bit that says whether they own the value.
     PRBool frameOwnsValue = PR_FALSE;
-    if (mType == NS_FORM_INPUT_FILE && formControlFrame) {
-      frameOwnsValue = PR_TRUE;
-    }
     if (textControlFrame) {
       textControlFrame->OwnsValue(&frameOwnsValue);
     }
@@ -749,6 +805,10 @@ nsHTMLInputElement::SetValueInternal(const nsAString& aValue,
     return mValue ? NS_OK : NS_ERROR_OUT_OF_MEMORY;
   }
 
+  if (mType == NS_FORM_INPUT_FILE) {
+    return NS_ERROR_UNEXPECTED;
+  }
+
   // If the value of a hidden input was changed, we mark it changed so that we
   // will know we need to save / restore the value.  Yes, we are overloading
   // the meaning of ValueChanged just a teensy bit to save a measly byte of
@@ -1799,10 +1859,10 @@ nsHTMLInputElement::ParseAttribute(PRInt32 aNamespaceID,
       // process).
       PRInt8 newType = aResult.GetEnumValue();
       if (newType == NS_FORM_INPUT_FILE) {
-        // If the type is being changed to file, set the element value
-        // to the empty string. This is for security.
-        // Call SetValueInternal so that this doesn't accidentally get caught
-        // in the security checks in SetValue.
+        // These calls aren't strictly needed any more since we'll never
+        // confuse values and filenames. However they're there for backwards
+        // compat.
+        SetFileName(EmptyString());
         SetValueInternal(EmptyString(), nsnull);
       }
 
@@ -2136,7 +2196,7 @@ nsHTMLInputElement::Reset()
     case NS_FORM_INPUT_FILE:
     {
       // Resetting it to blank should not perform security check
-      rv = SetValueInternal(EmptyString(), nsnull);
+      SetFileName(EmptyString());
       break;
     }
     // Value is the same as defaultValue for hidden inputs
@@ -2274,22 +2334,23 @@ nsHTMLInputElement::SubmitNamesValues(nsIFormSubmission* aFormSubmission,
     //
     nsCOMPtr<nsIFile> file;
  
-    if (StringBeginsWith(value, NS_LITERAL_STRING(""""file:""""),
-                         nsCaseInsensitiveStringComparator())) {
-      // Converts the URL string into the corresponding nsIFile if possible.
-      // A local file will be created if the URL string begins with file://.
-      rv = NS_GetFileFromURLSpec(NS_ConvertUTF16toUTF8(value),
-                                 getter_AddRefs(file));
-    }
-
-    if (!file) {
-      // this is no """"file://"""", try as local file
-      nsCOMPtr<nsILocalFile> localFile;
-      rv = NS_NewLocalFile(value, PR_FALSE, getter_AddRefs(localFile));
-      file = localFile;
+    if (mFileName) {
+      if (StringBeginsWith(*mFileName, NS_LITERAL_STRING(""""file:""""),
+                           nsCaseInsensitiveStringComparator())) {
+        // Converts the URL string into the corresponding nsIFile if possible.
+        // A local file will be created if the URL string begins with file://.
+        rv = NS_GetFileFromURLSpec(NS_ConvertUTF16toUTF8(*mFileName),
+                                   getter_AddRefs(file));
+      }
+      if (!file) {
+        // this is no """"file://"""", try as local file
+        nsCOMPtr<nsILocalFile> localFile;
+        rv = NS_NewLocalFile(*mFileName, PR_FALSE, getter_AddRefs(localFile));
+        file = localFile;
+      }
     }
 
-    if (NS_SUCCEEDED(rv)) {
+    if (file) {
 
       //
       // Get the leaf path name (to be submitted as the value)
@@ -2359,7 +2420,7 @@ nsHTMLInputElement::SubmitNamesValues(nsIFormSubmission* aFormSubmission,
     // If we can't even make a truncated filename, submit empty string
     // rather than sending everything
     //
-    aFormSubmission->AddNameFilePair(this, name, value,
+    aFormSubmission->AddNameFilePair(this, name, EmptyString(),
         nsnull, NS_LITERAL_CSTRING(""""application/octet-stream""""),
         PR_FALSE);
     return rv;
@@ -2412,7 +2473,6 @@ nsHTMLInputElement::SaveState()
     case NS_FORM_INPUT_PASSWORD:
       break;
     case NS_FORM_INPUT_TEXT:
-    case NS_FORM_INPUT_FILE:
     case NS_FORM_INPUT_HIDDEN:
       {
         if (GET_BOOLBIT(mBitField, BF_VALUE_CHANGED)) {
@@ -2431,6 +2491,17 @@ nsHTMLInputElement::SaveState()
         }
         break;
       }
+    case NS_FORM_INPUT_FILE:
+      {
+        if (mFileName) {
+          rv = GetPrimaryPresState(this, &state);
+          if (state) {
+            rv = state->SetStateProperty(NS_LITERAL_STRING(""""f""""), *mFileName);
+            NS_ASSERTION(NS_SUCCEEDED(rv), """"value save failed!"""");
+          }
+        }
+        break;
+      }
   }
   
   if (GET_BOOLBIT(mBitField, BF_DISABLED_CHANGED)) {
@@ -2514,7 +2585,6 @@ nsHTMLInputElement::RestoreState(nsPresState* aState)
       }
 
     case NS_FORM_INPUT_TEXT:
-    case NS_FORM_INPUT_FILE:
     case NS_FORM_INPUT_HIDDEN:
       {
         nsAutoString value;
@@ -2525,6 +2595,16 @@ nsHTMLInputElement::RestoreState(nsPresState* aState)
         }
         break;
       }
+    case NS_FORM_INPUT_FILE:
+      {
+        nsAutoString value;
+        rv = aState->GetStateProperty(NS_LITERAL_STRING(""""f""""), value);
+        NS_ASSERTION(NS_SUCCEEDED(rv), """"value restore failed!"""");
+        if (rv == NS_STATE_PROPERTY_EXISTS) {
+          SetFileName(value);
+        }
+        break;
+      }
   }
   
   nsAutoString disabled;
diff --git a/layout/forms/nsFileControlFrame.cpp b/layout/forms/nsFileControlFrame.cpp
index 4ecb73d..90916ba 100644
--- a/layout/forms/nsFileControlFrame.cpp
+++ b/layout/forms/nsFileControlFrame.cpp
@@ -66,7 +66,7 @@
 #include """"nsINodeInfo.h""""
 #include """"nsIDOMEventReceiver.h""""
 #include """"nsILocalFile.h""""
-#include """"nsITextControlElement.h""""
+#include """"nsIFileControlElement.h""""
 #include """"nsNodeInfoManager.h""""
 #include """"nsContentCreatorFunctions.h""""
 #include """"nsContentUtils.h""""
@@ -85,8 +85,7 @@ NS_NewFileControlFrame(nsIPresShell* aPresShell, nsStyleContext* aContext)
 nsFileControlFrame::nsFileControlFrame(nsStyleContext* aContext):
   nsAreaFrame(aContext),
   mTextFrame(nsnull), 
-  mCachedState(nsnull),
-  mDidPreDestroy(PR_FALSE)
+  mCachedState(nsnull)
 {
     //Shrink the area around its contents
   SetFlags(NS_BLOCK_SHRINK_WRAP);
@@ -111,53 +110,12 @@ nsFileControlFrame::~nsFileControlFrame()
 }
 
 void
-nsFileControlFrame::PreDestroy()
-{
-  // Toss the value into the control from the anonymous content, which is about
-  // to get lost.  Note that if the page is being torn down then the anonymous
-  // content may no longer have access to its frame.  But _we_ can access that
-  // frame.  So if it's there, get the value from the frame
-  if (mTextContent) {
-    nsAutoString value;
-    if (mTextFrame) {
-      // Second arg doesn't really matter here...
-      mTextFrame->GetValue(value, PR_TRUE);
-    } else {
-      // Get from the content
-      nsCOMPtr<nsIDOMHTMLInputElement> input = do_QueryInterface(mTextContent);
-      input->GetValue(value);
-    }
-
-    // Have it take the value, just like when input type=text goes away
-    nsCOMPtr<nsITextControlElement> fileInput = do_QueryInterface(mContent);
-    fileInput->TakeTextFrameValue(value);
-  }
-  mDidPreDestroy = PR_TRUE;
-}
-
-void
 nsFileControlFrame::Destroy()
 {
-  if (!mDidPreDestroy) {
-    PreDestroy();
-  }
   mTextFrame = nsnull;
   nsAreaFrame::Destroy();
 }
 
-void
-nsFileControlFrame::RemovedAsPrimaryFrame()
-{
-  if (!mDidPreDestroy) {
-    PreDestroy();
-  }
-#ifdef DEBUG
-  else {
-    NS_ERROR(""""RemovedAsPrimaryFrame called after PreDestroy"""");
-  }
-#endif
-}
-
 NS_IMETHODIMP
 nsFileControlFrame::CreateAnonymousContent(nsPresContext* aPresContext,
                                            nsISupportsArray& aChildList)
@@ -177,18 +135,17 @@ nsFileControlFrame::CreateAnonymousContent(nsPresContext* aPresContext,
 
   content.swap(mTextContent);
 
-  nsCOMPtr<nsIDOMHTMLInputElement> fileContent = do_QueryInterface(mContent);
-
   if (mTextContent) {
     mTextContent->SetAttr(kNameSpaceID_None, nsHTMLAtoms::type, NS_LITERAL_STRING(""""text""""), PR_FALSE);
 
     nsCOMPtr<nsIDOMHTMLInputElement> textControl = do_QueryInterface(mTextContent);
     if (textControl) {
-      if (fileContent) {
+      nsCOMPtr<nsIFileControlElement> fileControl = do_QueryInterface(mContent);
+      if (fileControl) {
         // Initialize value when we create the content in case the value was set
         // before we got here
         nsAutoString value;
-        fileContent->GetValue(value);
+        fileControl->GetFileName(value);
         textControl->SetValue(value);
       }
       
@@ -211,6 +168,7 @@ nsFileControlFrame::CreateAnonymousContent(nsPresContext* aPresContext,
   mBrowse = do_QueryInterface(content);
   if (mBrowse) {
     mBrowse->SetAttr(kNameSpaceID_None, nsHTMLAtoms::type, NS_LITERAL_STRING(""""button""""), PR_FALSE);
+    nsCOMPtr<nsIDOMHTMLInputElement> fileContent = do_QueryInterface(mContent);
     nsCOMPtr<nsIDOMHTMLInputElement> browseControl = do_QueryInterface(mBrowse);
     if (fileContent && browseControl) {
       PRInt32 tabIndex;
@@ -361,6 +319,11 @@ nsFileControlFrame::MouseClick(nsIDOMEvent* aMouseEvent)
     result = localFile->GetPath(unicodePath);
     if (!unicodePath.IsEmpty()) {
       mTextFrame->SetFormProperty(nsHTMLAtoms::value, unicodePath);
+      nsCOMPtr<nsIFileControlElement> fileControl = do_QueryInterface(mContent);
+      if (fileControl) {
+        fileControl->SetFileName(unicodePath);
+      }
+      
       // May need to fire an onchange here
       mTextFrame->CheckFireOnChange();
       return NS_OK;
@@ -587,12 +550,10 @@ nsFileControlFrame::GetFormProperty(nsIAtom* aName, nsAString& aValue) const
     if (mCachedState) {
       aValue.Assign(*mCachedState);
     } else if (mTextContent) {
-      nsCOMPtr<nsIDOMHTMLInputElement> textControl =
-        do_QueryInterface(mTextContent);
-      NS_ASSERTION(textControl,
-                   """"<input> element not implementing nsIDOMHTMLInputElement?"""");
-
-      textControl->GetValue(aValue);
+      nsCOMPtr<nsIFileControlElement> fileControl = do_QueryInterface(mTextContent);
+      if (fileControl) {
+        fileControl->GetFileName(aValue);
+      }
     }
   }
   return NS_OK;
diff --git a/layout/forms/nsFileControlFrame.h b/layout/forms/nsFileControlFrame.h
index 54fc7e6..d183b26 100644
--- a/layout/forms/nsFileControlFrame.h
+++ b/layout/forms/nsFileControlFrame.h
@@ -75,8 +75,6 @@ public:
                     const nsHTMLReflowState& aReflowState,
                     nsReflowStatus&          aStatus);
 
-  virtual void RemovedAsPrimaryFrame();
-
   virtual void Destroy();
 
 #ifdef NS_DEBUG
@@ -193,16 +191,8 @@ private:
   void SyncAttr(PRInt32 aNameSpaceID, nsIAtom* aAttribute,
                 PRBool aWhichControls);
 
-  /**
-   * We call this when we are being destroyed or removed from the PFM.
-   * @param aPresContext the current pres context
-   */
-  void PreDestroy();
-
   NS_IMETHOD_(nsrefcnt) AddRef() { return 1; }
   NS_IMETHOD_(nsrefcnt) Release() { return 1; }
-
-  PRBool mDidPreDestroy; // has PreDestroy been called
 };
 
 #endif"""
050563b17fd2264e0a82e656c08cd779a7383541,123043,321299,jst%mozilla.jstenback.com,"Removing unused variable as pointed out by dbaron at https://bugzilla.mozilla.org/show_bug.cgi?id=321299#c29
",1145937867,"""diff --git a/content/base/src/nsContentUtils.cpp b/content/base/src/nsContentUtils.cpp
index 1e237f7..7da2b62 100644
--- a/content/base/src/nsContentUtils.cpp
+++ b/content/base/src/nsContentUtils.cpp
@@ -890,9 +890,6 @@ nsContentUtils::ReparentContentWrapper(nsIContent *aContent,
 
   NS_ENSURE_TRUE(sXPConnect, NS_ERROR_NOT_INITIALIZED);
 
-  nsISupports* new_parent = aNewParent ? (nsISupports*)aNewParent :
-    (nsISupports*)aNewDocument;
-
   // Make sure to get our hands on the right scope object, since
   // GetWrappedNativeOfNativeObject doesn't call PreCreate and hence won't get
   // the right scope if we pass in something bogus.  The right scope lives on"""
0488da364fd73cf4527de21bf9937f58e88a5eac,123046,334341,bzbarsky%mit.edu,"Deal with checkLoadURI better in the face of URI fixup.  Bug 334341, r=biesi, sr=dveditz
",1145935483,"""diff --git a/caps/src/nsScriptSecurityManager.cpp b/caps/src/nsScriptSecurityManager.cpp
index 4bf39b8..a347aad 100644
--- a/caps/src/nsScriptSecurityManager.cpp
+++ b/caps/src/nsScriptSecurityManager.cpp
@@ -83,6 +83,8 @@
 #include """"nsAutoPtr.h""""
 #include """"nsAboutProtocolUtils.h""""
 #include """"nsIClassInfo.h""""
+#include """"nsIURIFixup.h""""
+#include """"nsCDefaultURIFixup.h""""
 
 static NS_DEFINE_CID(kZipReaderCID, NS_ZIPREADER_CID);
 
@@ -1486,11 +1488,41 @@ nsScriptSecurityManager::CheckLoadURIStr(const nsACString& aSourceURIStr,
     nsresult rv = NS_NewURI(getter_AddRefs(source), aSourceURIStr,
                             nsnull, nsnull, sIOService);
     NS_ENSURE_SUCCESS(rv, rv);
+
     nsCOMPtr<nsIURI> target;
     rv = NS_NewURI(getter_AddRefs(target), aTargetURIStr,
                    nsnull, nsnull, sIOService);
     NS_ENSURE_SUCCESS(rv, rv);
-    return CheckLoadURI(source, target, aFlags);
+
+    rv = CheckLoadURI(source, target, aFlags);
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    // Now start testing fixup -- since aTargetURIStr is a string, not
+    // an nsIURI, we may well end up fixing it up before loading.
+    // Note: This needs to stay in sync with the nsIURIFixup api.
+    nsCOMPtr<nsIURIFixup> fixup = do_GetService(NS_URIFIXUP_CONTRACTID);
+    if (!fixup) {
+        return rv;
+    }
+
+    PRUint32 flags[] = {
+        nsIURIFixup::FIXUP_FLAG_NONE,
+        nsIURIFixup::FIXUP_FLAG_ALLOW_KEYWORD_LOOKUP,
+        nsIURIFixup::FIXUP_FLAGS_MAKE_ALTERNATE_URI,
+        nsIURIFixup::FIXUP_FLAG_ALLOW_KEYWORD_LOOKUP |
+        nsIURIFixup::FIXUP_FLAGS_MAKE_ALTERNATE_URI
+    };
+
+    for (PRUint32 i = 0; i < NS_ARRAY_LENGTH(flags); ++i) {
+        rv = fixup->CreateFixupURI(aTargetURIStr, flags[i],
+                                   getter_AddRefs(target));
+        NS_ENSURE_SUCCESS(rv, rv);
+
+        rv = CheckLoadURI(source, target, aFlags);
+        NS_ENSURE_SUCCESS(rv, rv);
+    }
+
+    return rv;
 }
 
 NS_IMETHODIMP
diff --git a/toolkit/content/contentAreaUtils.js b/toolkit/content/contentAreaUtils.js
index 0636f3e..9f245c6 100644
--- a/toolkit/content/contentAreaUtils.js
+++ b/toolkit/content/contentAreaUtils.js
@@ -117,14 +117,11 @@ function openNewWindowWith(href, sourceURL, postData, allowThirdPartyFixup)
  */
 function urlSecurityCheck(url, sourceURL)
 {
-  var sourceURI = makeURI(sourceURL);
-  var destURI = makeURI(url);
-
   const nsIScriptSecurityManager = Components.interfaces.nsIScriptSecurityManager;
   var secMan = Components.classes[""""@mozilla.org/scriptsecuritymanager;1""""]
                          .getService(nsIScriptSecurityManager);
   try {
-    secMan.checkLoadURI(sourceURI, destURI, nsIScriptSecurityManager.STANDARD);
+    secMan.checkLoadURIStr(sourceURL, url, nsIScriptSecurityManager.STANDARD);
   } catch (e) {
     throw """"Load of """" + url + """" from """" + sourceURL + """" denied."""";
   }"""
5a3bea34986f34af8268995415d38a73fb3c8c98,123053,334515,cvshook%sicking.cc,"Bug 334515: Use nsWeakPtr rather than raw pointers to avoid crashes. r/sr=dbaron
",1145925870,"""diff --git a/embedding/components/commandhandler/src/nsBaseCommandController.cpp b/embedding/components/commandhandler/src/nsBaseCommandController.cpp
index 808ad2b..63570f0 100644
--- a/embedding/components/commandhandler/src/nsBaseCommandController.cpp
+++ b/embedding/components/commandhandler/src/nsBaseCommandController.cpp
@@ -55,7 +55,6 @@ NS_INTERFACE_MAP_BEGIN(nsBaseCommandController)
 NS_INTERFACE_MAP_END
 
 nsBaseCommandController::nsBaseCommandController()
-: mCommandContext(nsnull)
 {
 }
 
@@ -79,7 +78,7 @@ nsBaseCommandController::Init(nsIControllerCommandTable *aCommandTable)
 NS_IMETHODIMP
 nsBaseCommandController::SetCommandContext(nsISupports *aCommandContext)
 {
-  mCommandContext = aCommandContext;     // no addref  
+  mCommandContext = do_GetWeakReference(aCommandContext);
   return NS_OK;
 }
 
@@ -114,7 +113,8 @@ nsBaseCommandController::IsCommandEnabled(const char *aCommand,
   NS_ENSURE_ARG_POINTER(aCommand);
   NS_ENSURE_ARG_POINTER(aResult);
   NS_ENSURE_STATE(mCommandTable);
-  return mCommandTable->IsCommandEnabled(aCommand, mCommandContext, aResult);
+  nsCOMPtr<nsISupports> context = do_QueryReferent(mCommandContext);
+  return mCommandTable->IsCommandEnabled(aCommand, context, aResult);
 }
 
 NS_IMETHODIMP
@@ -123,7 +123,8 @@ nsBaseCommandController::SupportsCommand(const char *aCommand, PRBool *aResult)
   NS_ENSURE_ARG_POINTER(aCommand);
   NS_ENSURE_ARG_POINTER(aResult);
   NS_ENSURE_STATE(mCommandTable);
-  return mCommandTable->SupportsCommand(aCommand, mCommandContext, aResult);
+  nsCOMPtr<nsISupports> context = do_QueryReferent(mCommandContext);
+  return mCommandTable->SupportsCommand(aCommand, context, aResult);
 }
 
 NS_IMETHODIMP
@@ -131,7 +132,8 @@ nsBaseCommandController::DoCommand(const char *aCommand)
 {
   NS_ENSURE_ARG_POINTER(aCommand);
   NS_ENSURE_STATE(mCommandTable);
-  return mCommandTable->DoCommand(aCommand, mCommandContext);
+  nsCOMPtr<nsISupports> context = do_QueryReferent(mCommandContext);
+  return mCommandTable->DoCommand(aCommand, context);
 }
 
 NS_IMETHODIMP
@@ -140,7 +142,8 @@ nsBaseCommandController::DoCommandWithParams(const char *aCommand,
 {
   NS_ENSURE_ARG_POINTER(aCommand);
   NS_ENSURE_STATE(mCommandTable);
-  return mCommandTable->DoCommandParams(aCommand, aParams, mCommandContext);
+  nsCOMPtr<nsISupports> context = do_QueryReferent(mCommandContext);
+  return mCommandTable->DoCommandParams(aCommand, aParams, context);
 }
 
 NS_IMETHODIMP
@@ -149,7 +152,8 @@ nsBaseCommandController::GetCommandStateWithParams(const char *aCommand,
 {
   NS_ENSURE_ARG_POINTER(aCommand);
   NS_ENSURE_STATE(mCommandTable);
-  return mCommandTable->GetCommandState(aCommand, aParams, mCommandContext);
+  nsCOMPtr<nsISupports> context = do_QueryReferent(mCommandContext);
+  return mCommandTable->GetCommandState(aCommand, aParams, context);
 }
 
 NS_IMETHODIMP
diff --git a/embedding/components/commandhandler/src/nsBaseCommandController.h b/embedding/components/commandhandler/src/nsBaseCommandController.h
index 2949be1..0241ab5 100644
--- a/embedding/components/commandhandler/src/nsBaseCommandController.h
+++ b/embedding/components/commandhandler/src/nsBaseCommandController.h
@@ -49,6 +49,8 @@
 #include """"nsIControllerContext.h""""
 #include """"nsIControllerCommandTable.h""""
 #include """"nsIInterfaceRequestor.h""""
+#include """"nsIWeakReference.h""""
+#include """"nsIWeakReferenceUtils.h""""
 
 // The base editor controller is used for both text widgets, 
 //   and all other text and html editing
@@ -79,7 +81,7 @@ public:
   
 private:
 
-   nsISupports *mCommandContext;
+   nsWeakPtr mCommandContext;
    
    // Our reference to the command manager
    nsCOMPtr<nsIControllerCommandTable> mCommandTable;     """
c3ce06f8865209cbc98275717eae980e3bd230b8,123145,331679,bmlk%gmx.de,"pseudo rowgroups might be wrapped in a scrollframe, bug 331679 r/sr=bzbarsky
",1145701693,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index d68735d..74bcd8e 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -2615,6 +2615,23 @@ ProcessPseudoFrame(nsPseudoFrameData& aPseudoData,
 }
 
 static nsresult 
+ProcessPseudoRowGroupFrame(nsPseudoFrameData& aPseudoData,
+                           nsIFrame*&         aParent)
+{
+  nsresult rv = NS_OK;
+
+  aParent = aPseudoData.mFrame;
+  nsTableRowGroupFrame* rgFrame = nsTableFrame::GetRowGroupFrame(aParent);
+  nsFrameItems* items = &aPseudoData.mChildList;
+  if (items && items->childList) {
+    rv = rgFrame->SetInitialChildList(nsnull, items->childList);
+    if (NS_FAILED(rv)) return rv;
+  }
+  aPseudoData.Reset();
+  return rv;
+}
+
+static nsresult 
 ProcessPseudoTableFrame(nsPseudoFrames& aPseudoFrames,
                         nsIFrame*&      aParent)
 {
@@ -2692,12 +2709,12 @@ ProcessPseudoFrames(nsFrameConstructorState& aState,
       if (nsLayoutAtoms::tableRowFrame == aHighestType) return rv;
     }
     if (pseudoFrames.mRowGroup.mFrame) {
-      rv = ProcessPseudoFrame(pseudoFrames.mRowGroup, aHighestFrame);
+      rv = ProcessPseudoRowGroupFrame(pseudoFrames.mRowGroup, aHighestFrame);
       if (nsLayoutAtoms::tableRowGroupFrame == aHighestType) return rv;
     }
   }
   else if (nsLayoutAtoms::tableRowGroupFrame == pseudoFrames.mLowestType) {
-    rv = ProcessPseudoFrame(pseudoFrames.mRowGroup, aHighestFrame);
+    rv = ProcessPseudoRowGroupFrame(pseudoFrames.mRowGroup, aHighestFrame);
     if (nsLayoutAtoms::tableRowGroupFrame == aHighestType) return rv;
     if (pseudoFrames.mColGroup.mFrame) {
       nsIFrame* colGroupHigh;
@@ -2730,7 +2747,7 @@ ProcessPseudoFrames(nsFrameConstructorState& aState,
     if (nsLayoutAtoms::tableRowFrame == aHighestType) return rv;
 
     if (pseudoFrames.mRowGroup.mFrame) {
-      rv = ProcessPseudoFrame(pseudoFrames.mRowGroup, aHighestFrame);
+      rv = ProcessPseudoRowGroupFrame(pseudoFrames.mRowGroup, aHighestFrame);
       if (nsLayoutAtoms::tableRowGroupFrame == aHighestType) return rv;
     }
     if (pseudoFrames.mColGroup.mFrame) {
@@ -2765,7 +2782,7 @@ ProcessPseudoFrames(nsFrameConstructorState& aState,
       if (nsLayoutAtoms::tableRowFrame == aHighestType) return rv;
     }
     if (pseudoFrames.mRowGroup.mFrame) {
-      rv = ProcessPseudoFrame(pseudoFrames.mRowGroup, aHighestFrame);
+      rv = ProcessPseudoRowGroupFrame(pseudoFrames.mRowGroup, aHighestFrame);
       if (nsLayoutAtoms::tableRowGroupFrame == aHighestType) return rv;
     }
     if (pseudoFrames.mColGroup.mFrame) {
@@ -3015,8 +3032,10 @@ nsCSSFrameConstructor::CreatePseudoRowFrame(nsTableCreator&          aTableCreat
 {
   nsresult rv = NS_OK;
 
-  nsIFrame* parentFrame = (aState.mPseudoFrames.mRowGroup.mFrame) 
-                          ? aState.mPseudoFrames.mRowGroup.mFrame : aParentFrameIn;
+  nsIFrame* parentFrame = aParentFrameIn;
+  if (aState.mPseudoFrames.mRowGroup.mFrame) {
+    parentFrame = (nsIFrame*) nsTableFrame::GetRowGroupFrame(aState.mPseudoFrames.mRowGroup.mFrame);
+  }
   if (!parentFrame) return rv;
 
   nsStyleContext *parentStyle;"""
4bac5968066e73f81649a4314cb15a2e15b55351,123177,329677,bzbarsky%mit.edu,"Fix bug 329677.  Sort service patch by Neil Rashbrook, r=ndeakin, sr=bzbarsky.
The rest of the patch by me, r=pike, sr=Neil Rashbrook.
",1145642481,"""diff --git a/content/xul/document/src/nsXULDocument.cpp b/content/xul/document/src/nsXULDocument.cpp
index 4fe3fed..82dfa05 100644
--- a/content/xul/document/src/nsXULDocument.cpp
+++ b/content/xul/document/src/nsXULDocument.cpp
@@ -2159,7 +2159,10 @@ nsXULDocument::ApplyPersistentAttributes()
             continue;
 
         nsAutoString id;
-        nsXULContentUtils::MakeElementID(this, NS_ConvertASCIItoUTF16(uri), id);
+        nsXULContentUtils::MakeElementID(this, nsDependentCString(uri), id);
+
+        if (id.IsEmpty())
+            continue;
 
         // This will clear the array if there are no elements.
         GetElementsForID(id, elements);
diff --git a/content/xul/templates/src/nsXULContentUtils.cpp b/content/xul/templates/src/nsXULContentUtils.cpp
index 5c3b747..ee6c2ce 100644
--- a/content/xul/templates/src/nsXULContentUtils.cpp
+++ b/content/xul/templates/src/nsXULContentUtils.cpp
@@ -233,6 +233,8 @@ nsXULContentUtils::GetElementResource(nsIContent* aElement, nsIRDFResource** aRe
     PRUnichar buf[128];
     nsFixedString id(buf, NS_ARRAY_LENGTH(buf), 0);
 
+    // Whoa.  Why the """"id"""" attribute?  What if it's not even a XUL
+    // element?  This is totally bogus!
     aElement->GetAttr(kNameSpaceID_None, nsXULAtoms::id, id);
     if (id.IsEmpty())
         return NS_ERROR_FAILURE;
@@ -323,44 +325,27 @@ nsXULContentUtils::GetTextForNode(nsIRDFNode* aNode, nsAString& aResult)
 }
 
 nsresult
-nsXULContentUtils::MakeElementURI(nsIDocument* aDocument, const nsAString& aElementID, nsCString& aURI)
+nsXULContentUtils::MakeElementURI(nsIDocument* aDocument,
+                                  const nsAString& aElementID,
+                                  nsCString& aURI)
 {
     // Convert an element's ID to a URI that can be used to refer to
     // the element in the XUL graph.
 
-    if (aElementID.FindChar(':') > 0) {
-        // Assume it's absolute already. Use as is.
-        CopyUTF16toUTF8(aElementID, aURI);
-    }
-    else {
-        nsIURI *docURL = aDocument->GetDocumentURI();
-
-        // XXX Urgh. This is so broken; I'd really just like to use
-        // NS_MakeAbsolueURI(). Unfortunatly, doing that breaks
-        // MakeElementID in some cases that I haven't yet been able to
-        // figure out.
-#define USE_BROKEN_RELATIVE_PARSING
-#ifdef USE_BROKEN_RELATIVE_PARSING
-        docURL->GetSpec(aURI);
-
-        if (aElementID.First() != '#') {
-            aURI.Append('#');
-        }
-        AppendUTF16toUTF8(aElementID, aURI);
-#else
-        nsXPIDLCString spec;
-        nsresult rv = NS_MakeAbsoluteURI(nsCAutoString(aElementID), docURL, getter_Copies(spec));
-        if (NS_SUCCEEDED(rv)) {
-            aURI = spec;
-        }
-        else {
-            NS_WARNING(""""MakeElementURI: NS_MakeAbsoluteURI failed"""");
-            aURI = aElementID;
-        }
-#endif
-    }
+    nsIURI *docURL = aDocument->GetDocumentURI();
+    NS_ENSURE_TRUE(docURL, NS_ERROR_UNEXPECTED);
 
-    return NS_OK;
+    nsCOMPtr<nsIURI> docURIClone;
+    nsresult rv = docURL->Clone(getter_AddRefs(docURIClone));
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    nsCOMPtr<nsIURL> mutableURL(do_QueryInterface(docURIClone));
+    NS_ENSURE_TRUE(mutableURL, NS_ERROR_NOT_AVAILABLE);
+
+    rv = mutableURL->SetRef(NS_ConvertUTF16toUTF8(aElementID));
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    return mutableURL->GetSpec(aURI);
 }
 
 
@@ -384,26 +369,24 @@ nsXULContentUtils::MakeElementResource(nsIDocument* aDocument, const nsAString&
 
 
 nsresult
-nsXULContentUtils::MakeElementID(nsIDocument* aDocument, const nsAString& aURI, nsAString& aElementID)
+nsXULContentUtils::MakeElementID(nsIDocument* aDocument,
+                                 const nsACString& aURI,
+                                 nsAString& aElementID)
 {
     // Convert a URI into an element ID that can be accessed from the
     // DOM APIs.
-    nsCAutoString spec;
-    aDocument->GetDocumentURI()->GetSpec(spec);
-
-    // XXX FIX ME to not do a copy
-    nsAutoString str(aURI);
-    if (str.Find(spec.get()) == 0) {
-#ifdef USE_BROKEN_RELATIVE_PARSING
-        static const PRInt32 kFudge = 1;  // XXX assume '#'
-#else
-        static const PRInt32 kFudge = 0;
-#endif
-        PRInt32 len = spec.Length();
-        aElementID = Substring(aURI, len + kFudge, aURI.Length() - (len + kFudge));
-    }
-    else {
-        aElementID = aURI;
+    nsCOMPtr<nsIURI> uri;
+    nsresult rv = NS_NewURI(getter_AddRefs(uri), aURI,
+                            aDocument->GetDocumentCharacterSet().get());
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    nsCOMPtr<nsIURL> url = do_QueryInterface(uri);
+    if (url) {
+        nsCAutoString ref;
+        url->GetRef(ref);
+        CopyUTF8toUTF16(ref, aElementID);
+    } else {
+        aElementID.Truncate();
     }
 
     return NS_OK;
diff --git a/content/xul/templates/src/nsXULContentUtils.h b/content/xul/templates/src/nsXULContentUtils.h
index caa1f33..ff336f8 100644
--- a/content/xul/templates/src/nsXULContentUtils.h
+++ b/content/xul/templates/src/nsXULContentUtils.h
@@ -98,14 +98,24 @@ public:
     static nsresult
     GetTextForNode(nsIRDFNode* aNode, nsAString& aResult);
 
+    /**
+     * Construct a URI from the element ID given.  This uses aElement as the
+     * ref and aDocument's document URI as the base.  If aDocument's document
+     * URI does not support refs, this will throw NS_ERROR_NOT_AVAILABLE.
+     */
     static nsresult
     MakeElementURI(nsIDocument* aDocument, const nsAString& aElementID, nsCString& aURI);
 
     static nsresult
     MakeElementResource(nsIDocument* aDocument, const nsAString& aElementID, nsIRDFResource** aResult);
 
+    /**
+     * Extract the element ID from aURI.  Note that aURI must be an absolute
+     * URI string in UTF8; the element ID is the ref from the URI.  If the
+     * scheme does not support refs, then the ID will be empty.
+     */
     static nsresult
-    MakeElementID(nsIDocument* aDocument, const nsAString& aURI, nsAString& aElementID);
+    MakeElementID(nsIDocument* aDocument, const nsACString& aURI, nsAString& aElementID);
 
     static nsresult
     GetResource(PRInt32 aNameSpaceID, nsIAtom* aAttribute, nsIRDFResource** aResult);
diff --git a/content/xul/templates/src/nsXULSortService.cpp b/content/xul/templates/src/nsXULSortService.cpp
index 1f160c8..643092f 100644
--- a/content/xul/templates/src/nsXULSortService.cpp
+++ b/content/xul/templates/src/nsXULSortService.cpp
@@ -1099,7 +1099,8 @@ XULSortServiceImpl::SortContainer(nsIContent *container, sortPtr sortInfo,
         --currentElement;
 
         nsCOMPtr<nsIRDFResource>  resource;
-        nsXULContentUtils::GetElementResource(child, getter_AddRefs(resource));
+        nsCOMPtr<nsIDOMXULElement> xulElement(do_QueryInterface(child));
+        xulElement->GetResource(getter_AddRefs(resource));
         contentSortInfo *contentInfo = CreateContentSortInfo(child, resource);
         if (contentInfo)
           contentSortInfoArray[currentElement] = contentInfo;
@@ -1345,17 +1346,7 @@ XULSortServiceImpl::InsertContainerNode(nsIRDFCompositeDataSource *db, nsRDFSort
   if (sortInfo.db && sortInfo.naturalOrderSort) {
     // walk up the content model to find the REAL
     // parent container to determine if its a RDF_Seq
-    nsCOMPtr<nsIContent> parent = do_QueryInterface(container, &rv);
-    nsCOMPtr<nsIContent> aContent;
-
-    nsCOMPtr<nsIDocument> doc;
-    if (NS_SUCCEEDED(rv) && parent) {
-      doc = parent->GetDocument();
-      if (!doc)
-        parent = nsnull;
-    }
-
-    if (parent) {
+    if (container) {
       nsAutoString id;
 
       trueParent->GetAttr(kNameSpaceID_None, nsXULAtoms::ref, id);
@@ -1364,7 +1355,7 @@ XULSortServiceImpl::InsertContainerNode(nsIRDFCompositeDataSource *db, nsRDFSort
 
       if (!id.IsEmpty()) {
         nsCOMPtr<nsIRDFResource> containerRes;
-        rv = nsXULContentUtils::MakeElementResource(doc, id, getter_AddRefs(containerRes));
+        gRDFService->GetUnicodeResource(id, getter_AddRefs(containerRes));
         if (NS_SUCCEEDED(rv))
           rv = gRDFC->IsSeq(sortInfo.db, containerRes,  &isContainerRDFSeq);
       }"""
a09a3aec8c2effeddf975469c032c2ca4d95e120,123529,319872,bclary%bclary.com,"JavaScript Test Library - Regression test for bug 319872, by Georgi Guninski
",1145415389,"""diff --git a/js/tests/e4x/Regress/regress-319872.js b/js/tests/e4x/Regress/regress-319872.js
new file mode 100755
index 0000000..58f0770
--- /dev/null
+++ b/js/tests/e4x/Regress/regress-319872.js
@@ -0,0 +1,65 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the """"License""""); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an """"AS IS"""" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is JavaScript Engine testing utilities.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2006
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s): Georgi Guninski
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the """"GPL""""), or
+ * the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+//-----------------------------------------------------------------------------
+var bug = 319872;
+var summary = 'Do not Crash in jsxml.c';
+var actual = 'No Crash';
+var expect = 'No Crash';
+
+
+printBugNumber (bug);
+printStatus (summary);
+printStatus (""""Expect out of memory error"""");
+expectExitCode(3);
+
+var i,m,str;
+str=""""<a xmlns:v=\"""""""";
+m="""""""";
+
+for (i=0;i<(1024*1024)/2;i++) 
+  m += """"\n"""";
+
+for(i=0;i<500;i++) 
+  str += m ;
+
+str += """"\"""">f00k</a>"""";
+
+var xx = new XML(str);
+
+printStatus(xx.toXMLString());
+  
+TEST(1, expect, actual);"""
e2979a9e4d74645b4bed48d857ef3ab40397ae7e,123530,316885,bclary%bclary.com,"JavaScript Test Library - Regression test for bug 316885, by Igor Bukanov
",1145415218,"""diff --git a/js/tests/js1_5/Regress/regress-316885-01.js b/js/tests/js1_5/Regress/regress-316885-01.js
new file mode 100755
index 0000000..e69de29
diff --git a/js/tests/js1_5/Regress/regress-316885-02.js b/js/tests/js1_5/Regress/regress-316885-02.js
new file mode 100755
index 0000000..e69de29
diff --git a/js/tests/js1_5/Regress/regress-316885-03.js b/js/tests/js1_5/Regress/regress-316885-03.js
new file mode 100755
index 0000000..e69de29"""
f426f7dd0a8cbe1f8b6451b1c49cbc6bba558fa4,123616,334384,bienvenu%nventure.com,"fix some v-card error handling, sr=mscott 334384
",1145308118,"""diff --git a/mailnews/addrbook/src/nsVCard.cpp b/mailnews/addrbook/src/nsVCard.cpp
index 7616621..3f20720 100644
--- a/mailnews/addrbook/src/nsVCard.cpp
+++ b/mailnews/addrbook/src/nsVCard.cpp
@@ -940,8 +940,10 @@ static char * lexGetDataFromBase64()
 	    } else if ((c == ' ') || (c == '\t')) {
 		continue;
 	    } else { /* error condition */
-		PR_FREEIF (bytes);
-		PR_FREEIF(oldBytes);
+                if (bytes)
+		  PR_Free (bytes);
+                else if (oldBytes)
+		  PR_Free (oldBytes);
 		/* error recovery: skip until 2 adjacent newlines. */
 		DBG_((""""db: invalid character 0x%x '%c'\n"""", c,c));
 		if (c != EOF)  {"""
3820cfcf55798c16a379601262f6bb1868639a84,123886,321299,jst%mozilla.jstenback.com,"Fixing bug 321299. Make sure XPConnect wrappers get properly reparented when moving nodes from document to document. r=mrbkap@gmail.com, sr=bzbarsky@mit.edu
",1144727384,"""diff --git a/content/base/public/nsContentUtils.h b/content/base/public/nsContentUtils.h
index aad4459..56ae056 100644
--- a/content/base/public/nsContentUtils.h
+++ b/content/base/public/nsContentUtils.h
@@ -102,7 +102,7 @@ public:
   // the actual ownerDocument of aContent may not yet be aNewDocument.
   // XXXbz but then if it gets wrapped after we do this call but before its
   // ownerDocument actually changes, things will break...
-  static nsresult ReparentContentWrapper(nsIContent *aContent,
+  static nsresult ReparentContentWrapper(nsIContent *aNode,
                                          nsIContent *aNewParent,
                                          nsIDocument *aNewDocument,
                                          nsIDocument *aOldDocument);
@@ -790,7 +790,7 @@ private:
   static nsresult doReparentContentWrapper(nsIContent *aChild,
                                            JSContext *cx,
                                            JSObject *aOldGlobal,
-                                           JSObject *parent_obj);
+                                           JSObject *aNewGlobal);
 
   static nsresult EnsureStringBundle(PropertiesFile aFile);
 
diff --git a/content/base/public/nsIDocument.h b/content/base/public/nsIDocument.h
index 0ba873e..2253932 100644
--- a/content/base/public/nsIDocument.h
+++ b/content/base/public/nsIDocument.h
@@ -91,8 +91,9 @@ class nsIDocumentObserver;
 
 // IID for the nsIDocument interface
 #define NS_IDOCUMENT_IID      \
-{ 0xb657335d, 0x43db, 0x41f3, \
-  { 0x8c, 0xc0, 0xe2, 0x29, 0x88, 0xb5, 0x99, 0x69 } }
+{ 0xfa567fd5, 0x5220, 0x436c, \
+  { 0xbe, 0x76, 0xdd, 0x1a, 0x78, 0xfb, 0x8c, 0x1a } }
+
 
 // Flag for AddStyleSheet().
 #define NS_STYLESHEET_FROM_CATALOG                (1 << 0)
@@ -478,6 +479,14 @@ public:
   virtual void SetScriptGlobalObject(nsIScriptGlobalObject* aGlobalObject) = 0;
 
   /**
+   * Get the object that is used as the scope for all of the content
+   * wrappers whose owner document is this document. Unlike the script
+   * global object, this never changes once it's set. Use this object
+   * when you're trying to find a content wrapper in XPConnect.
+   */
+  virtual nsIScriptGlobalObject* GetScopeObject() = 0;
+
+  /**
    * Return the window containing the document (the outer window).
    */
   virtual nsPIDOMWindow *GetWindow() = 0;
diff --git a/content/base/src/nsContentUtils.cpp b/content/base/src/nsContentUtils.cpp
index 33fa6bb..589b048 100644
--- a/content/base/src/nsContentUtils.cpp
+++ b/content/base/src/nsContentUtils.cpp
@@ -811,38 +811,33 @@ nsContentUtils::InProlog(nsIDOMNode *aNode)
 
 // static
 nsresult
-nsContentUtils::doReparentContentWrapper(nsIContent *aChild,
+nsContentUtils::doReparentContentWrapper(nsIContent *aNode,
                                          JSContext *cx,
                                          JSObject *aOldGlobal,
-                                         JSObject *parent_obj)
+                                         JSObject *aNewGlobal)
 {
   nsCOMPtr<nsIXPConnectJSObjectHolder> old_wrapper;
 
   nsresult rv;
 
-  rv = sXPConnect->ReparentWrappedNativeIfFound(cx, aOldGlobal, parent_obj,
-                                                aChild,
+  rv = sXPConnect->ReparentWrappedNativeIfFound(cx, aOldGlobal, aNewGlobal,
+                                                aNode,
                                                 getter_AddRefs(old_wrapper));
   NS_ENSURE_SUCCESS(rv, rv);
 
-  if (!old_wrapper) {
-    // If aChild isn't wrapped none of it's children are wrapped so
-    // there's no need to walk into aChild's children.
+  // Whether or not aChild is already wrapped we must iterate through
+  // its descendants since there's no guarantee that a descendant isn't
+  // wrapped even if this child is not wrapped. That used to be true
+  // when every DOM node's JSObject was parented at the DOM node's
+  // parent's JSObject, but that's no longer the case.
 
-    return NS_OK;
-  }
-
-  JSObject *old;
-  rv = old_wrapper->GetJSObject(&old);
-  NS_ENSURE_SUCCESS(rv, rv);
-
-  PRUint32 i, count = aChild->GetChildCount();
+  PRUint32 i, count = aNode->GetChildCount();
 
   for (i = 0; i < count; i++) {
-    nsIContent *child = aChild->GetChildAt(i);
+    nsIContent *child = aNode->GetChildAt(i);
     NS_ENSURE_TRUE(child, NS_ERROR_UNEXPECTED);
 
-    rv = doReparentContentWrapper(child, cx, aOldGlobal, old);
+    rv = doReparentContentWrapper(child, cx, aOldGlobal, aNewGlobal);
     NS_ENSURE_SUCCESS(rv, rv);
   }
 
@@ -852,18 +847,18 @@ nsContentUtils::doReparentContentWrapper(nsIContent *aChild,
 static JSContext *
 GetContextFromDocument(nsIDocument *aDocument, JSObject** aGlobalObject)
 {
-  nsIScriptGlobalObject *sgo = aDocument->GetScriptGlobalObject();
-
+  nsIScriptGlobalObject *sgo = aDocument->GetScopeObject();
   if (!sgo) {
     // No script global, no context.
 
+    *aGlobalObject = nsnull;
+
     return nsnull;
   }
 
   *aGlobalObject = sgo->GetGlobalJSObject();
-  
-  nsIScriptContext *scx = sgo->GetContext();
 
+  nsIScriptContext *scx = sgo->GetContext();
   if (!scx) {
     // No context left in the old scope...
 
@@ -884,10 +879,13 @@ nsContentUtils::ReparentContentWrapper(nsIContent *aContent,
     return NS_OK;
   }
 
-  if (!aOldDocument) {
-    // If we can't find our old document we don't know what our old
-    // scope was so there's no way to find the old wrapper
+  nsIScriptGlobalObject *newSGO = aNewDocument->GetScopeObject();
+  JSObject *newScope;
 
+  // If we can't find our old document we don't know what our old
+  // scope was so there's no way to find the old wrapper, and if there
+  // is no new scope there's no reason to reparent.
+  if (!aOldDocument || !newSGO || !(newScope = newSGO->GetGlobalJSObject())) {
     return NS_OK;
   }
 
@@ -906,41 +904,38 @@ nsContentUtils::ReparentContentWrapper(nsIContent *aContent,
   JSObject *globalObj;
   JSContext *cx = GetContextFromDocument(aOldDocument, &globalObj);
 
-  if (!cx || !globalObj) {
-    // No JSContext left in the old scope, or no global object around; can't
-    // find the old wrapper w/o the old context or global object
+  if (!globalObj) {
+    // No global object around; can't find the old wrapper w/o the old
+    // global object
 
     return NS_OK;
   }
 
-  nsCOMPtr<nsIXPConnectWrappedNative> wrapper;
-  nsresult rv =
-    sXPConnect->GetWrappedNativeOfNativeObject(cx, globalObj, aContent,
-                                               NS_GET_IID(nsISupports),
-                                               getter_AddRefs(wrapper));
-  NS_ENSURE_SUCCESS(rv, rv);
+  if (!cx) {
+    JSObject *dummy;
+    cx = GetContextFromDocument(aNewDocument, &dummy);
 
-  if (!wrapper) {
-    // aContent is not wrapped (and thus none of its children are
-    // wrapped) so there's no need to reparent anything.
+    if (!cx) {
+      // No context reachable from the old or new document, use the
+      // calling context, or the safe context if no caller can be
+      // found.
 
-    return NS_OK;
-  }
+      sThreadJSContextStack->Peek(&cx);
 
-  // Wrap the new parent and reparent aContent.  Don't bother using globalObj
-  // here, since it's wrong for the new parent anyway...  Luckily, WrapNative
-  // will PreCreate and hence get the right scope.
-  nsCOMPtr<nsIXPConnectJSObjectHolder> holder;
-  rv = sXPConnect->WrapNative(cx, ::JS_GetGlobalObject(cx), new_parent,
-                              NS_GET_IID(nsISupports),
-                              getter_AddRefs(holder));
-  NS_ENSURE_SUCCESS(rv, rv);
+      if (!cx) {
+        sThreadJSContextStack->GetSafeJSContext(&cx);
 
-  JSObject *obj;
-  rv = holder->GetJSObject(&obj);
-  NS_ENSURE_SUCCESS(rv, rv);
+        if (!cx) {
+          // No safe context reachable, bail.
+          NS_WARNING(""""No context reachable in ReparentContentWrapper()!"""");
+
+          return NS_ERROR_NOT_AVAILABLE;
+        }
+      }
+    }
+  }
 
-  return doReparentContentWrapper(aContent, cx, globalObj, obj);
+  return doReparentContentWrapper(aContent, cx, globalObj, newScope);
 }
 
 nsIDocShell *
diff --git a/content/base/src/nsDocument.cpp b/content/base/src/nsDocument.cpp
index c0e3a57..20f0302 100644
--- a/content/base/src/nsDocument.cpp
+++ b/content/base/src/nsDocument.cpp
@@ -1,4 +1,5 @@
 /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=2 sw=2 et tw=78: */
 /* ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
  *
@@ -2118,6 +2119,13 @@ nsDocument::GetScriptGlobalObject() const
    return mScriptGlobalObject;
 }
 
+nsIScriptGlobalObject*
+nsDocument::GetScopeObject()
+{
+  nsCOMPtr<nsIScriptGlobalObject> scope(do_QueryReferent(mScopeObject));
+  return scope;
+}
+
 void
 nsDocument::SetScriptGlobalObject(nsIScriptGlobalObject *aScriptGlobalObject)
 {
@@ -2146,6 +2154,20 @@ nsDocument::SetScriptGlobalObject(nsIScriptGlobalObject *aScriptGlobalObject)
 
   mScriptGlobalObject = aScriptGlobalObject;
 
+  // The scope object is immutable, only set it once.
+  if (!mScopeObject) {
+    mScopeObject = do_GetWeakReference(aScriptGlobalObject);
+  }
+
+#ifdef DEBUG
+  {
+    nsCOMPtr<nsIScriptGlobalObject> scope = do_QueryReferent(mScopeObject);
+
+    NS_ASSERTION(!aScriptGlobalObject || aScriptGlobalObject == scope,
+                 """"script global and scope mismatch!"""");
+  }
+#endif
+
   if (mScriptGlobalObject) {
     // Go back to using the docshell for the layout history state
     mLayoutHistoryState = nsnull;
diff --git a/content/base/src/nsDocument.h b/content/base/src/nsDocument.h
index cf25b63..cd23250 100644
--- a/content/base/src/nsDocument.h
+++ b/content/base/src/nsDocument.h
@@ -443,6 +443,8 @@ public:
   virtual nsIScriptGlobalObject* GetScriptGlobalObject() const;
   virtual void SetScriptGlobalObject(nsIScriptGlobalObject* aGlobalObject);
 
+  virtual nsIScriptGlobalObject* GetScopeObject();
+
   /**
    * Return the window containing the document (the outer window).
    */
@@ -742,6 +744,11 @@ protected:
   // *inner* window object.
   nsCOMPtr<nsIScriptGlobalObject> mScriptGlobalObject;
 
+  // Weak reference to the scope object (aka the script global object)
+  // that, unlike mScriptGlobalObject, is never unset once set. This
+  // is a weak reference to avoid leaks due to circular references.
+  nsWeakPtr mScopeObject;
+
   nsCOMPtr<nsIEventListenerManager> mListenerManager;
   nsCOMPtr<nsIDOMStyleSheetList> mDOMStyleSheets;
   nsCOMPtr<nsIScriptLoader> mScriptLoader;
diff --git a/content/base/src/nsGenericDOMDataNode.cpp b/content/base/src/nsGenericDOMDataNode.cpp
index 0890756..5b35c27 100644
--- a/content/base/src/nsGenericDOMDataNode.cpp
+++ b/content/base/src/nsGenericDOMDataNode.cpp
@@ -698,6 +698,12 @@ nsGenericDOMDataNode::BindToTree(nsIDocument* aDocument, nsIContent* aParent,
   new_bits |= mParentPtrBits & nsIContent::kParentBitMask;
   mParentPtrBits = new_bits;
 
+  nsIDocument *oldOwnerDocument = GetOwnerDoc();
+  nsIDocument *newOwnerDocument;
+  nsNodeInfoManager* nodeInfoManager;
+
+  // XXXbz sXBL/XBL2 issue!
+
   // Set document
   if (aDocument) {
     mParentPtrBits |= PARENT_BIT_INDOCUMENT;
@@ -705,38 +711,43 @@ nsGenericDOMDataNode::BindToTree(nsIDocument* aDocument, nsIContent* aParent,
       aDocument->SetBidiEnabled(PR_TRUE);
     }
 
-    nsIDocument *ownerDocument = GetOwnerDoc();
-    if (aDocument != ownerDocument) {
-      if (ownerDocument && CouldHaveProperties()) {
-        // Copy UserData to the new document.
-        ownerDocument->CopyUserData(this, aDocument);
+    newOwnerDocument = aDocument;
+    nodeInfoManager = newOwnerDocument->NodeInfoManager();
+  } else {
+    newOwnerDocument = aParent->GetOwnerDoc();
+    nodeInfoManager = aParent->NodeInfo()->NodeInfoManager();
+  }
 
-        // Remove all properties.
-        ownerDocument->PropertyTable()->DeleteAllPropertiesFor(this);
-      }
+  if (oldOwnerDocument) {
+    if (newOwnerDocument && CouldHaveProperties()) {
+      // Copy UserData to the new document.
+      oldOwnerDocument->CopyUserData(this, newOwnerDocument);
+    }
 
-      // get a new nodeinfo
-      nsNodeInfoManager *nodeInfoManager = aDocument->NodeInfoManager();
-      nsCOMPtr<nsINodeInfo> newNodeInfo;
-      // optimize common cases
-      nsIAtom* name = mNodeInfo->NameAtom();
-      if (name == nsLayoutAtoms::textTagName) {
-        newNodeInfo = nodeInfoManager->GetTextNodeInfo();
-        NS_ENSURE_TRUE(newNodeInfo, NS_ERROR_OUT_OF_MEMORY);
-      }
-      else if (name == nsLayoutAtoms::commentTagName) {
-        newNodeInfo = nodeInfoManager->GetCommentNodeInfo();
-        NS_ENSURE_TRUE(newNodeInfo, NS_ERROR_OUT_OF_MEMORY);
-      }
-      else {
-        rv = nodeInfoManager->GetNodeInfo(name,
-                                          mNodeInfo->GetPrefixAtom(),
-                                          mNodeInfo->NamespaceID(),
-                                          getter_AddRefs(newNodeInfo));
-        NS_ENSURE_SUCCESS(rv, rv);
-      }
-      mNodeInfo.swap(newNodeInfo);
+    // Remove all properties.
+    oldOwnerDocument->PropertyTable()->DeleteAllPropertiesFor(this);
+  }
+
+  if (mNodeInfo->NodeInfoManager() != nodeInfoManager) {
+    nsCOMPtr<nsINodeInfo> newNodeInfo;
+    // optimize common cases
+    nsIAtom* name = mNodeInfo->NameAtom();
+    if (name == nsLayoutAtoms::textTagName) {
+      newNodeInfo = nodeInfoManager->GetTextNodeInfo();
+      NS_ENSURE_TRUE(newNodeInfo, NS_ERROR_OUT_OF_MEMORY);
+    }
+    else if (name == nsLayoutAtoms::commentTagName) {
+      newNodeInfo = nodeInfoManager->GetCommentNodeInfo();
+      NS_ENSURE_TRUE(newNodeInfo, NS_ERROR_OUT_OF_MEMORY);
+    }
+    else {
+      rv = nodeInfoManager->GetNodeInfo(name,
+                                        mNodeInfo->GetPrefixAtom(),
+                                        mNodeInfo->NamespaceID(),
+                                        getter_AddRefs(newNodeInfo));
+      NS_ENSURE_SUCCESS(rv, rv);
     }
+    mNodeInfo.swap(newNodeInfo);
   }
 
   NS_POSTCONDITION(aDocument == GetCurrentDoc(), """"Bound to wrong document"""");
diff --git a/content/base/src/nsGenericElement.cpp b/content/base/src/nsGenericElement.cpp
index e85cada..10687c4 100644
--- a/content/base/src/nsGenericElement.cpp
+++ b/content/base/src/nsGenericElement.cpp
@@ -1775,6 +1775,12 @@ nsGenericElement::BindToTree(nsIDocument* aDocument, nsIContent* aParent,
 
   nsresult rv;
   
+  nsIDocument *oldOwnerDocument = GetOwnerDoc();
+  nsIDocument *newOwnerDocument;
+  nsNodeInfoManager* nodeInfoManager;
+
+  // XXXbz sXBL/XBL2 issue!
+
   // Finally, set the document
   if (aDocument) {
     // Notify XBL- & nsIAnonymousContentCreator-generated
@@ -1789,38 +1795,42 @@ nsGenericElement::BindToTree(nsIDocument* aDocument, nsIContent* aParent,
     // Being added to a document.
     mParentPtrBits |= PARENT_BIT_INDOCUMENT;
 
-    // check the document on the nodeinfo to see whether we need a
-    // new nodeinfo
-    // XXXbz sXBL/XBL2 issue!
-    nsIDocument *ownerDocument = GetOwnerDoc();
-    if (aDocument != ownerDocument) {
-      if (ownerDocument && HasProperties()) {
-        // Copy UserData to the new document.
-        ownerDocument->CopyUserData(this, aDocument);
-
-        // Remove all properties.
-        ownerDocument->PropertyTable()->DeleteAllPropertiesFor(this);
-      }
+    newOwnerDocument = aDocument;
+    nodeInfoManager = newOwnerDocument->NodeInfoManager();
+  } else {
+    newOwnerDocument = aParent->GetOwnerDoc();
+    nodeInfoManager = aParent->NodeInfo()->NodeInfoManager();
+  }
 
-      // get a new nodeinfo
-      nsNodeInfoManager* nodeInfoManager = aDocument->NodeInfoManager();
-      if (nodeInfoManager) {
-        nsCOMPtr<nsINodeInfo> newNodeInfo;
-        rv = nodeInfoManager->GetNodeInfo(mNodeInfo->NameAtom(),
-                                          mNodeInfo->GetPrefixAtom(),
-                                          mNodeInfo->NamespaceID(),
-                                          getter_AddRefs(newNodeInfo));
-        NS_ENSURE_SUCCESS(rv, rv);
-        NS_ASSERTION(newNodeInfo, """"GetNodeInfo lies"""");
-        mNodeInfo.swap(newNodeInfo);
-      }
+  // Handle a change in our owner document.
 
-      // set a new nodeinfo on attribute nodes
-      nsDOMSlots *slots = GetExistingDOMSlots();
-      if (slots && slots->mAttributeMap) {
-        rv = slots->mAttributeMap->SetOwnerDocument(aDocument);
-        NS_ENSURE_SUCCESS(rv, rv);
-      }
+  if (oldOwnerDocument) {
+    if (newOwnerDocument && HasProperties()) {
+      // Copy UserData to the new document.
+      oldOwnerDocument->CopyUserData(this, newOwnerDocument);
+    }
+
+    // Remove all properties.
+    oldOwnerDocument->PropertyTable()->DeleteAllPropertiesFor(this);
+  }
+
+  if (mNodeInfo->NodeInfoManager() != nodeInfoManager) {
+    nsCOMPtr<nsINodeInfo> newNodeInfo;
+    rv = nodeInfoManager->GetNodeInfo(mNodeInfo->NameAtom(),
+                                      mNodeInfo->GetPrefixAtom(),
+                                      mNodeInfo->NamespaceID(),
+                                      getter_AddRefs(newNodeInfo));
+    NS_ENSURE_SUCCESS(rv, rv);
+    NS_ASSERTION(newNodeInfo, """"GetNodeInfo lies"""");
+    mNodeInfo.swap(newNodeInfo);
+  }
+
+  if (newOwnerDocument && newOwnerDocument != oldOwnerDocument) {
+    // set a new nodeinfo on attribute nodes
+    nsDOMSlots *slots = GetExistingDOMSlots();
+    if (slots && slots->mAttributeMap) {
+      rv = slots->mAttributeMap->SetOwnerDocument(newOwnerDocument);
+      NS_ENSURE_SUCCESS(rv, rv);
     }
   }
 
@@ -2428,7 +2438,7 @@ nsGenericElement::doRemoveChildAt(PRUint32 aIndex, PRBool aNotify,
   
   NS_PRECONDITION(aKid && aKid->GetParent() == aParent &&
                   aKid == container->GetChildAt(aIndex) &&
-                  container->IndexOf(aKid) == aIndex, """"Bogus aKid"""");
+                  container->IndexOf(aKid) == (PRInt32)aIndex, """"Bogus aKid"""");
 
   mozAutoDocUpdate updateBatch(aDocument, UPDATE_CONTENT_MODEL, aNotify);
 
@@ -3104,9 +3114,8 @@ nsGenericElement::doReplaceOrInsertBefore(PRBool aReplace,
 
 /* static */
 nsresult
-nsGenericElement::doRemoveChild(nsIDOMNode* aOldChild,
-                                nsIContent* aParent, nsIDocument* aDocument,
-                                nsIDOMNode** aReturn)
+nsGenericElement::doRemoveChild(nsIDOMNode* aOldChild, nsIContent* aParent,
+                                nsIDocument* aDocument, nsIDOMNode** aReturn)
 {
   NS_PRECONDITION(aParent || aDocument, """"Must have document if no parent!"""");
   NS_PRECONDITION(!aParent || aParent->GetCurrentDoc() == aDocument,
@@ -3776,7 +3785,7 @@ nsGenericElement::List(FILE* out, PRInt32 aIndent) const
   mNodeInfo->GetQualifiedName(buf);
   fputs(NS_LossyConvertUTF16toASCII(buf).get(), out);
 
-  fprintf(out, """"@%p"""", this);
+  fprintf(out, """"@%p"""", (void *)this);
 
   PRUint32 index, attrcount = mAttrsAndChildren.AttrCount();
   for (index = 0; index < attrcount; index++) {
diff --git a/content/xul/content/src/nsXULElement.cpp b/content/xul/content/src/nsXULElement.cpp
index 9b21625..25f06b0 100644
--- a/content/xul/content/src/nsXULElement.cpp
+++ b/content/xul/content/src/nsXULElement.cpp
@@ -800,56 +800,70 @@ nsXULElement::BindToTree(nsIDocument* aDocument, nsIContent* aParent,
     new_bits |= mParentPtrBits & nsIContent::kParentBitMask;
     mParentPtrBits = new_bits;
 
+    nsIDocument *oldOwnerDocument = GetOwnerDoc();
+    nsIDocument *newOwnerDocument;
+    nsNodeInfoManager* nodeInfoManager;
+
+    // XXXbz sXBL/XBL2 issue!
+
     // Finally, set the document
-    if (aDocument && aDocument != GetCurrentDoc()) {
+    if (aDocument) {
         // Notify XBL- & nsIAnonymousContentCreator-generated
-        // anonymous content that the document is changing.
-        // XXXbz ordering issues here?  Probably not, since ChangeDocumentFor
-        // is just pretty broken anyway....  Need to get it working.
+        // anonymous content that the document is changing.  XXXbz
+        // ordering issues here?  Probably not, since
+        // ChangeDocumentFor is just pretty broken anyway....  Need to
+        // get it working.
+
         // XXXbz XBL doesn't handle this (asserts), and we don't really want
         // to be doing this during parsing anyway... sort this out.    
         //    aDocument->BindingManager()->ChangeDocumentFor(this, nsnull,
         //                                                   aDocument);
-        
+
         // Being added to a document.
         mParentPtrBits |= PARENT_BIT_INDOCUMENT;
 
-        // check the document on the nodeinfo to see whether we need a
-        // new nodeinfo
-        // XXXbz sXBL/XBL2 issue!
-        nsIDocument *ownerDocument = GetOwnerDoc();
-        if (aDocument != ownerDocument) {
-            if (ownerDocument && HasProperties()) {
-                // Copy UserData to the new document.
-                ownerDocument->CopyUserData(this, aDocument);
-
-                // Remove all properties.
-                ownerDocument->PropertyTable()->
-                  DeleteAllPropertiesFor(NS_STATIC_CAST(nsINode*, this));
-            }
+        newOwnerDocument = aDocument;
+        nodeInfoManager = newOwnerDocument->NodeInfoManager();
+    } else {
+        newOwnerDocument = aParent->GetOwnerDoc();
+        nodeInfoManager = aParent->NodeInfo()->NodeInfoManager();
+    }
 
-            // get a new nodeinfo
-            nsNodeInfoManager* nodeInfoManager = aDocument->NodeInfoManager();
-            if (nodeInfoManager) {
-                nsCOMPtr<nsINodeInfo> newNodeInfo;
-                nsresult rv =
-                    nodeInfoManager->GetNodeInfo(mNodeInfo->NameAtom(),
-                                                 mNodeInfo->GetPrefixAtom(),
-                                                 mNodeInfo->NamespaceID(),
-                                                 getter_AddRefs(newNodeInfo));
-                NS_ENSURE_SUCCESS(rv, rv);
-                NS_ASSERTION(newNodeInfo, """"GetNodeInfo lies"""");
-                mNodeInfo.swap(newNodeInfo);
-            }
+    // Handle a change in our owner document.
 
-            // set a new nodeinfo on attribute nodes
-            nsDOMSlots *slots = GetExistingDOMSlots();
-            if (slots && slots->mAttributeMap) {
-              rv = slots->mAttributeMap->SetOwnerDocument(aDocument);
-              NS_ENSURE_SUCCESS(rv, rv);
-            }
+    if (oldOwnerDocument) {
+        if (newOwnerDocument && HasProperties()) {
+            // Copy UserData to the new document.
+            oldOwnerDocument->CopyUserData(this, aDocument);
         }
 
+        // Remove all properties.
+        oldOwnerDocument->PropertyTable()->
+            DeleteAllPropertiesFor(NS_STATIC_CAST(nsINode*, this));
+    }
+
+    if (mNodeInfo->NodeInfoManager() != nodeInfoManager) {
+        nsCOMPtr<nsINodeInfo> newNodeInfo;
+        nsresult rv =
+            nodeInfoManager->GetNodeInfo(mNodeInfo->NameAtom(),
+                                         mNodeInfo->GetPrefixAtom(),
+                                         mNodeInfo->NamespaceID(),
+                                         getter_AddRefs(newNodeInfo));
+        NS_ENSURE_SUCCESS(rv, rv);
+        NS_ASSERTION(newNodeInfo, """"GetNodeInfo lies"""");
+        mNodeInfo.swap(newNodeInfo);
+    }
+
+    if (newOwnerDocument && newOwnerDocument != oldOwnerDocument) {
+        // set a new nodeinfo on attribute nodes
+        nsDOMSlots *slots = GetExistingDOMSlots();
+        if (slots && slots->mAttributeMap) {
+            rv = slots->mAttributeMap->SetOwnerDocument(newOwnerDocument);
+            NS_ENSURE_SUCCESS(rv, rv);
+        }
+    }
+
+    if (aDocument) {
         // we need to (re-)initialize several attributes that are dependant on
         // the document. Do that now.
         // XXXbz why do we have attributes depending on the current document?
diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index 0ff4596..7d1a8b2 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -6419,9 +6419,8 @@ nsNodeSH::PreCreate(nsISupports *nativeObj, JSContext *cx, JSObject *globalObj,
     // set the parent to be the document's global object, if there
     // is one
 
-    // Get the script global object from the document.
-
-    native_parent = doc->GetScriptGlobalObject();
+    // Get the scope object from the document.
+    native_parent = doc->GetScopeObject();
 
     if (!native_parent) {
       // No global object reachable from this document, use the
diff --git a/js/src/xpconnect/src/xpcwrappednative.cpp b/js/src/xpconnect/src/xpcwrappednative.cpp
index b80ded6..3ca5555 100644
--- a/js/src/xpconnect/src/xpcwrappednative.cpp
+++ b/js/src/xpconnect/src/xpcwrappednative.cpp
@@ -1123,7 +1123,8 @@ XPCWrappedNative::ReparentWrapperIfFound(XPCCallContext& ccx,
                 wrapper->mScriptableInfo = newProto->GetScriptableInfo();
             }
 
-            NS_ASSERTION(!newMap->Find(wrapper), """"wrapper already in new scope!"""");
+            NS_ASSERTION(!newMap->Find(wrapper->GetIdentityObject()),
+                         """"wrapper already in new scope!"""");
 
             (void) newMap->Add(wrapper);
         }"""
0f782f60596dcf5238b4c8d039b312d3455abcd1,124045,332971,mrbkap%gmail.com,"Set mStackPos early to avoid bad re-entrancy problems when inserting the new content into its parent does something interesting. bug 332971, r=jst sr=sicking
",1144456323,"""diff --git a/content/html/document/src/nsHTMLContentSink.cpp b/content/html/document/src/nsHTMLContentSink.cpp
index cbfa0c4..3d35816 100644
--- a/content/html/document/src/nsHTMLContentSink.cpp
+++ b/content/html/document/src/nsHTMLContentSink.cpp
@@ -1145,6 +1145,12 @@ SinkContext::OpenContainer(const nsIParserNode& aNode)
                   mStackPos, 
                   mSink);
 
+  if (mStackPos <= 0) {
+    NS_ERROR(""""container w/o parent"""");
+
+    return NS_ERROR_FAILURE;
+  }
+
   nsresult rv;
   if (mStackPos + 1 > mStackSize) {
     rv = GrowStack();
@@ -1165,6 +1171,7 @@ SinkContext::OpenContainer(const nsIParserNode& aNode)
   mStack[mStackPos].mContent = content;
   mStack[mStackPos].mNumFlushed = 0;
   mStack[mStackPos].mInsertionPoint = -1;
+  ++mStackPos;
 
   // XXX Need to do this before we start adding attributes.
   if (nodeType == eHTMLTag_style) {
@@ -1221,24 +1228,16 @@ SinkContext::OpenContainer(const nsIParserNode& aNode)
   rv = mSink->AddAttributes(aNode, content);
   MaybeSetForm(content, nodeType, mSink);
 
-  if (mStackPos <= 0) {
-    NS_ERROR(""""container w/o parent"""");
-
-    return NS_ERROR_FAILURE;
-  }
-
-  nsGenericHTMLElement* parent = mStack[mStackPos - 1].mContent;
+  nsGenericHTMLElement* parent = mStack[mStackPos - 2].mContent;
 
-  if (mStack[mStackPos - 1].mInsertionPoint != -1) {
+  if (mStack[mStackPos - 2].mInsertionPoint != -1) {
     parent->InsertChildAt(content,
-                          mStack[mStackPos - 1].mInsertionPoint++,
+                          mStack[mStackPos - 2].mInsertionPoint++,
                           PR_FALSE);
   } else {
     parent->AppendChildTo(content, PR_FALSE);
   }
 
-  mStackPos++;
-
   NS_ENSURE_SUCCESS(rv, rv);
 
   if (mSink->IsMonolithicContainer(nodeType)) {"""
487031d4515894955b6626ff191fd0bb01da3779,124060,329746,darin%meer.net,"fixes bug 329746, r=biesi sr=bz
",1144431944,"""diff --git a/netwerk/protocol/http/src/nsHttp.cpp b/netwerk/protocol/http/src/nsHttp.cpp
index b8a1d4a..e6c923f 100644
--- a/netwerk/protocol/http/src/nsHttp.cpp
+++ b/netwerk/protocol/http/src/nsHttp.cpp
@@ -215,6 +215,56 @@ nsHttp::ResolveAtom(const char *str)
     return atom;
 }
 
+//
+// From section 2.2 of RFC 2616, a token is defined as:
+//
+//   token          = 1*<any CHAR except CTLs or separators>
+//   CHAR           = <any US-ASCII character (octets 0 - 127)>
+//   separators     = """"("""" | """")"""" | """"<"""" | """">"""" | """"@""""
+//                  | """","""" | """";"""" | """":"""" | """"\"""" | <"""">
+//                  | """"/"""" | """"["""" | """"]"""" | """"?"""" | """"=""""
+//                  | """"{"""" | """"}"""" | SP | HT
+//   CTL            = <any US-ASCII control character
+//                    (octets 0 - 31) and DEL (127)>
+//   SP             = <US-ASCII SP, space (32)>
+//   HT             = <US-ASCII HT, horizontal-tab (9)>
+//
+static const char kValidTokenMap[128] = {
+    0, 0, 0, 0, 0, 0, 0, 0, //   0
+    0, 0, 0, 0, 0, 0, 0, 0, //   8
+    0, 0, 0, 0, 0, 0, 0, 0, //  16
+    0, 0, 0, 0, 0, 0, 0, 0, //  24
+
+    0, 1, 0, 1, 1, 1, 1, 1, //  32
+    0, 0, 1, 1, 0, 1, 1, 0, //  40
+    1, 1, 1, 1, 1, 1, 1, 1, //  48
+    1, 1, 0, 0, 0, 0, 0, 0, //  56
+
+    0, 1, 1, 1, 1, 1, 1, 1, //  64
+    1, 1, 1, 1, 1, 1, 1, 1, //  72
+    1, 1, 1, 1, 1, 1, 1, 1, //  80
+    1, 1, 1, 0, 0, 0, 1, 1, //  88
+
+    1, 1, 1, 1, 1, 1, 1, 1, //  96
+    1, 1, 1, 1, 1, 1, 1, 1, // 104
+    1, 1, 1, 1, 1, 1, 1, 1, // 112
+    1, 1, 1, 0, 1, 0, 1, 0  // 120
+};
+PRBool
+nsHttp::IsValidToken(const char *start, const char *end)
+{
+    if (start == end)
+        return PR_FALSE;
+
+    for (; start != end; ++start) {
+        const unsigned char idx = *start;
+        if (idx > 127 || !kValidTokenMap[idx])
+            return PR_FALSE;
+    }
+
+    return PR_TRUE;
+}
+
 const char *
 nsHttp::FindToken(const char *input, const char *token, const char *seps)
 {
diff --git a/netwerk/protocol/http/src/nsHttp.h b/netwerk/protocol/http/src/nsHttp.h
index 9d5ad1c..21a2cbd 100644
--- a/netwerk/protocol/http/src/nsHttp.h
+++ b/netwerk/protocol/http/src/nsHttp.h
@@ -144,6 +144,15 @@ struct nsHttp
         return ResolveAtom(PromiseFlatCString(s).get());
     }
 
+    // returns true if the specified token [start,end) is valid per RFC 2616
+    // section 2.2
+    static PRBool IsValidToken(const char *start, const char *end);
+
+    static inline PRBool IsValidToken(const nsCString &s) {
+        const char *start = s.get();
+        return IsValidToken(start, start + s.Length());
+    }
+
     // find the first instance (case-insensitive comparison) of the given
     // |token| in the |input| string.  the |token| is bounded by elements of
     // |separators| and may appear at the beginning or end of the |input|
diff --git a/netwerk/protocol/http/src/nsHttpChannel.cpp b/netwerk/protocol/http/src/nsHttpChannel.cpp
index 0dc42f8..bed2a4c 100644
--- a/netwerk/protocol/http/src/nsHttpChannel.cpp
+++ b/netwerk/protocol/http/src/nsHttpChannel.cpp
@@ -81,58 +81,6 @@
 
 static NS_DEFINE_CID(kStreamListenerTeeCID, NS_STREAMLISTENERTEE_CID);
 
-//
-// From section 2.2 of RFC 2616, a token is defined as:
-//
-//   token          = 1*<any CHAR except CTLs or separators>
-//   CHAR           = <any US-ASCII character (octets 0 - 127)>
-//   separators     = """"("""" | """")"""" | """"<"""" | """">"""" | """"@""""
-//                  | """","""" | """";"""" | """":"""" | """"\"""" | <"""">
-//                  | """"/"""" | """"["""" | """"]"""" | """"?"""" | """"=""""
-//                  | """"{"""" | """"}"""" | SP | HT
-//   CTL            = <any US-ASCII control character
-//                    (octets 0 - 31) and DEL (127)>
-//   SP             = <US-ASCII SP, space (32)>
-//   HT             = <US-ASCII HT, horizontal-tab (9)>
-//
-static const char kValidTokenMap[128] = {
-    0, 0, 0, 0, 0, 0, 0, 0, //   0
-    0, 0, 0, 0, 0, 0, 0, 0, //   8
-    0, 0, 0, 0, 0, 0, 0, 0, //  16
-    0, 0, 0, 0, 0, 0, 0, 0, //  24
-
-    0, 1, 0, 1, 1, 1, 1, 1, //  32
-    0, 0, 1, 1, 0, 1, 1, 0, //  40
-    1, 1, 1, 1, 1, 1, 1, 1, //  48
-    1, 1, 0, 0, 0, 0, 0, 0, //  56
-
-    0, 1, 1, 1, 1, 1, 1, 1, //  64
-    1, 1, 1, 1, 1, 1, 1, 1, //  72
-    1, 1, 1, 1, 1, 1, 1, 1, //  80
-    1, 1, 1, 0, 0, 0, 1, 1, //  88
-
-    1, 1, 1, 1, 1, 1, 1, 1, //  96
-    1, 1, 1, 1, 1, 1, 1, 1, // 104
-    1, 1, 1, 1, 1, 1, 1, 1, // 112
-    1, 1, 1, 0, 1, 0, 1, 0  // 120
-};
-static PRBool IsValidToken(const nsCString &s)
-{
-    const char *start = s.get();
-    const char *end   = start + s.Length();
-
-    if (start == end)
-        return PR_FALSE;
-
-    for (; start != end; ++start) {
-        const unsigned char idx = *start;
-        if (idx > 127 || !kValidTokenMap[idx])
-            return PR_FALSE;
-    }
-
-    return PR_TRUE;
-}
-
 //-----------------------------------------------------------------------------
 // nsHttpChannel <public>
 //-----------------------------------------------------------------------------
@@ -3439,7 +3387,7 @@ nsHttpChannel::SetRequestMethod(const nsACString &method)
     const nsCString &flatMethod = PromiseFlatCString(method);
 
     // Method names are restricted to valid HTTP tokens.
-    if (!IsValidToken(flatMethod))
+    if (!nsHttp::IsValidToken(flatMethod))
         return NS_ERROR_INVALID_ARG;
 
     nsHttpAtom atom = nsHttp::ResolveAtom(flatMethod.get());
@@ -3624,7 +3572,7 @@ nsHttpChannel::SetRequestHeader(const nsACString &header,
         this, flatHeader.get(), flatValue.get(), merge));
 
     // Header names are restricted to valid HTTP tokens.
-    if (!IsValidToken(flatHeader))
+    if (!nsHttp::IsValidToken(flatHeader))
         return NS_ERROR_INVALID_ARG;
     
     // Header values MUST NOT contain line-breaks.  RFC 2616 technically
diff --git a/netwerk/protocol/http/src/nsHttpHeaderArray.cpp b/netwerk/protocol/http/src/nsHttpHeaderArray.cpp
index 1047495..f17354a 100644
--- a/netwerk/protocol/http/src/nsHttpHeaderArray.cpp
+++ b/netwerk/protocol/http/src/nsHttpHeaderArray.cpp
@@ -1,4 +1,5 @@
 /* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* vim:set ts=4 sw=4 sts=4 ci et: */
 /* ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
  *
@@ -132,65 +133,55 @@ void
 nsHttpHeaderArray::ParseHeaderLine(char *line, nsHttpAtom *hdr, char **val)
 {
     //
-    // Augmented BNF (from section 4.2 of RFC 2616 w/ modifications):
+    // BNF from section 4.2 of RFC 2616:
     //
-    //   message-header = field-name field-sep [ field-value ]
+    //   message-header = field-name """":"""" [ field-value ]
     //   field-name     = token
-    //   field-sep      = LWS ( """":"""" | """"="""" | SP | HT )
     //   field-value    = *( field-content | LWS )
     //   field-content  = <the OCTETs making up the field-value
     //                     and consisting of either *TEXT or combinations
     //                     of token, separators, and quoted-string>
     //
-    // Here, we allow a greater set of possible header value separators
-    // for compatibility with the vast number of broken web servers (mostly
-    // lame CGI scripts).  NN4 and IE are similarly tolerant.
-    //
-    //
-    // Examples:
-    //  
-    //   Header: Value
-    //   Header :Value
-    //   Header Value
-    //   Header=Value
-    //
+    
+    // We skip over mal-formed headers in the hope that we'll still be able to
+    // do something useful with the response.
 
     char *p = (char *) strchr(line, ':');
-    if (!p)
-        p = net_FindCharInSet(line, """" \t="""");
+    if (!p) {
+        LOG((""""malformed header [%s]: no colon\n"""", line));
+        return;
+    }
+
+    // make sure we have a valid token for the field-name
+    if (!nsHttp::IsValidToken(line, p)) {
+        LOG((""""malformed header [%s]: field-name not a token\n"""", line));
+        return;
+    }
+    
+    *p = 0; // null terminate field-name
 
-    if (p) {
-        // ignore whitespace between header name and colon
-        char *p2 = net_FindCharInSet(line, p, HTTP_LWS);
-        *p2 = 0; // null terminate header name
+    nsHttpAtom atom = nsHttp::ResolveAtom(line);
+    if (!atom) {
+        LOG((""""failed to resolve atom [%s]\n"""", line));
+        return;
+    }
 
-        nsHttpAtom atom = nsHttp::ResolveAtom(line);
-        if (atom) {
-            // skip over whitespace
-            p = net_FindCharNotInSet(++p, HTTP_LWS);
+    // skip over whitespace
+    p = net_FindCharNotInSet(++p, HTTP_LWS);
 
-            // trim trailing whitespace - bug 86608
-            p2 = net_RFindCharNotInSet(p, HTTP_LWS);
-            *++p2 = 0; // null terminate header value; if all chars
-                       // starting at |p| consisted of LWS, then p2
-                       // would have pointed at |p-1|, so the prefix
-                       // increment is always valid.
+    // trim trailing whitespace - bug 86608
+    char *p2 = net_RFindCharNotInSet(p, HTTP_LWS);
 
-            // assign return values
-            if (hdr) *hdr = atom;
-            if (val) *val = p;
+    *++p2 = 0; // null terminate header value; if all chars starting at |p|
+               // consisted of LWS, then p2 would have pointed at |p-1|, so
+               // the prefix increment is always valid.
 
-            // assign response header
-            SetHeader(atom, nsDependentCString(p, p2 - p), PR_TRUE);
-        }
-        else
-            LOG((""""unknown header; skipping\n""""));
-    }
-    else
-        LOG((""""malformed header\n""""));
+    // assign return values
+    if (hdr) *hdr = atom;
+    if (val) *val = p;
 
-    // We ignore mal-formed headers in the hope that we'll still be able
-    // to do something useful with the response.
+    // assign response header
+    SetHeader(atom, nsDependentCString(p, p2 - p), PR_TRUE);
 }
 
 void"""
d433d4ef1e9480ec6ac8f75296edbcb7dea6c86c,124226,330214,darin%meer.net,"fixes bug 330214 ""Ignore Transfer-Encoding header sent with HTTP/1.0 response"" r=biesi sr=bzbarsky
",1144202981,"""diff --git a/netwerk/protocol/http/src/nsHttpTransaction.cpp b/netwerk/protocol/http/src/nsHttpTransaction.cpp
index 5655e8e..64dd8b3 100644
--- a/netwerk/protocol/http/src/nsHttpTransaction.cpp
+++ b/netwerk/protocol/http/src/nsHttpTransaction.cpp
@@ -775,7 +775,9 @@ nsHttpTransaction::HandleContentStart()
             // we're done with the socket.  please note that _all_ other
             // decoding is done when the channel receives the content data
             // so as not to block the socket transport thread too much.
-            if (mResponseHead->HasHeaderValue(nsHttp::Transfer_Encoding, """"chunked"""")) {
+            // ignore chunked responses from HTTP/1.0 servers and proxies.
+            if (mResponseHead->Version() >= NS_HTTP_VERSION_1_1 &&
+                mResponseHead->HasHeaderValue(nsHttp::Transfer_Encoding, """"chunked"""")) {
                 // we only support the """"chunked"""" transfer encoding right now.
                 mChunkedDecoder = new nsHttpChunkedDecoder();
                 if (!mChunkedDecoder)"""
879d882bcba32a95c02913cb26987f6d70750b0d,124336,330773,mrbkap%gmail.com,"Use JS_DefineProperty instead of JS_SetProperty in more places. bug 330773, r=jst sr=brendan
",1144083293,"""diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index 7b55d13..a8324a2 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -3400,8 +3400,9 @@ nsDOMClassInfo::ResolveConstructor(JSContext *cx, JSObject *obj,
     // return the Object constructor.
 
     JSString *str = JSVAL_TO_STRING(sConstructor_id);
-    if (!::JS_SetUCProperty(cx, obj, ::JS_GetStringChars(str),
-                            ::JS_GetStringLength(str), &val)) {
+    if (!::JS_DefineUCProperty(cx, obj, ::JS_GetStringChars(str),
+                               ::JS_GetStringLength(str), val, nsnull, nsnull,
+                               JSPROP_ENUMERATE)) {
       return NS_ERROR_UNEXPECTED;
     }
 
@@ -5508,8 +5509,9 @@ nsWindowSH::GlobalResolve(nsGlobalWindow *aWin, JSContext *cx,
 
     v = OBJECT_TO_JSVAL(dot_prototype);
 
-    if (!::JS_DefineProperty(cx, class_obj, """"prototype"""", v, NULL, NULL,
-                             JSPROP_ENUMERATE)) {
+    // Per ECMA, the prototype property is {DontEnum, DontDelete, ReadOnly}
+    if (!::JS_DefineProperty(cx, class_obj, """"prototype"""", v, nsnull, nsnull,
+                             JSPROP_PERMANENT | JSPROP_READONLY)) {
       return NS_ERROR_UNEXPECTED;
     }
 
@@ -7945,8 +7947,10 @@ nsHTMLDocumentSH::DocumentAllHelperNewResolve(JSContext *cx, JSObject *obj,
     JSObject *helper = GetDocumentAllHelper(cx, obj);
 
     if (helper) {
-      jsval v = JSVAL_VOID;
-      ::JS_SetProperty(cx, helper, """"all"""", &v);
+      if (!::JS_DefineProperty(cx, helper, """"all"""", JSVAL_VOID, nsnull, nsnull,
+                               JSPROP_ENUMERATE)) {
+        return JS_FALSE;
+      }
 
       *objp = helper;
     }"""
c56eb2222a91e5b2fbf0c9f2205aa1b76a661678,124594,329982,cvshook%sicking.cc,"Bug 329982: Give nsXULElement::RemoveChildAt some lovin' to make it deal better with mutationevent handlers mutating the DOM
",1143496840,"""diff --git a/content/base/src/nsGenericElement.cpp b/content/base/src/nsGenericElement.cpp
index b9d1d09..73c5928 100644
--- a/content/base/src/nsGenericElement.cpp
+++ b/content/base/src/nsGenericElement.cpp
@@ -2371,7 +2371,9 @@ nsGenericElement::AppendChildTo(nsIContent* aKid, PRBool aNotify)
 nsresult
 nsGenericElement::RemoveChildAt(PRUint32 aIndex, PRBool aNotify)
 {
-  nsCOMPtr<nsIContent> oldKid = GetChildAt(aIndex);
+  nsCOMPtr<nsIContent> oldKid = mAttrsAndChildren.GetSafeChildAt(aIndex);
+  NS_ASSERTION(oldKid == GetChildAt(aIndex), """"Unexpected child in RemoveChildAt"""");
+
   if (oldKid) {
     return doRemoveChildAt(aIndex, aNotify, oldKid, this, GetCurrentDoc(),
                            mAttrsAndChildren);
@@ -2399,38 +2401,41 @@ nsGenericElement::doRemoveChildAt(PRUint32 aIndex, PRBool aNotify,
   }
   
   NS_PRECONDITION(aKid && aKid->GetParent() == aParent &&
-                  aKid == container->GetChildAt(aIndex), """"Bogus aKid"""");
+                  aKid == container->GetChildAt(aIndex) &&
+                  container->IndexOf(aKid) == aIndex, """"Bogus aKid"""");
 
   mozAutoDocUpdate updateBatch(aDocument, UPDATE_CONTENT_MODEL, aNotify);
 
-  PRBool hasListeners = 
-    aParent &&
-    nsGenericElement::HasMutationListeners(aParent,
-                                           NS_EVENT_BITS_MUTATION_NODEREMOVED);
+  nsMutationGuard guard;
 
-  if (hasListeners) {
+  if (aParent && nsGenericElement::HasMutationListeners(aParent,
+        NS_EVENT_BITS_MUTATION_NODEREMOVED)) {
     nsMutationEvent mutation(PR_TRUE, NS_MUTATION_NODEREMOVED);
     mutation.mRelatedNode = do_QueryInterface(aParent);
     nsEventDispatcher::Dispatch(aKid, nsnull, &mutation);
   }
 
-  // Someone may have removed the kid while that event was processing...
-  if (!hasListeners ||
-      (aKid->GetParent() == aParent &&
-       aKid == container->GetChildAt(aIndex))) {
-    if (aParent) {
-      nsRange::OwnerChildRemoved(aParent, aIndex, aKid);
+  // Someone may have removed the kid or any of its siblings while that event
+  // was processing.
+  if (guard.Mutated(0)) {
+    aIndex = container->IndexOf(aKid);
+    if (aIndex < 0) {
+      return NS_OK;
     }
+  }
 
-    aChildArray.RemoveChildAt(aIndex);
+  if (aParent) {
+    nsRange::OwnerChildRemoved(aParent, aIndex, aKid);
+  }
 
-    if (aNotify && aDocument) {
-      aDocument->ContentRemoved(aParent, aKid, aIndex);
-    }
-    
-    aKid->UnbindFromTree();
+  aChildArray.RemoveChildAt(aIndex);
+
+  if (aNotify && aDocument) {
+    aDocument->ContentRemoved(aParent, aKid, aIndex);
   }
 
+  aKid->UnbindFromTree();
+
   return NS_OK;
 }
 
diff --git a/content/xul/content/src/nsXULElement.cpp b/content/xul/content/src/nsXULElement.cpp
index d366bb5..9b21625 100644
--- a/content/xul/content/src/nsXULElement.cpp
+++ b/content/xul/content/src/nsXULElement.cpp
@@ -1019,21 +1019,9 @@ nsXULElement::RemoveChildAt(PRUint32 aIndex, PRBool aNotify)
     nsresult rv = EnsureContentsGenerated();
     NS_ENSURE_SUCCESS(rv, rv);
 
-    nsMutationGuard::DidMutate();
-
-    nsCOMPtr<nsIContent> oldKid = mAttrsAndChildren.ChildAt(aIndex);
-    NS_ENSURE_TRUE(oldKid, NS_ERROR_FAILURE);
-
-    nsIDocument* doc = GetCurrentDoc();
-    mozAutoDocUpdate updateBatch(doc, UPDATE_CONTENT_MODEL, aNotify);
-
-    if (HasMutationListeners(this, NS_EVENT_BITS_MUTATION_NODEREMOVED)) {
-      nsMutationEvent mutation(PR_TRUE, NS_MUTATION_NODEREMOVED);
-      mutation.mRelatedNode =
-          do_QueryInterface(NS_STATIC_CAST(nsIContent*, this));
-
-      nsEventStatus status = nsEventStatus_eIgnore;
-      nsEventDispatcher::Dispatch(oldKid, nsnull, &mutation, nsnull, &status);
+    nsCOMPtr<nsIContent> oldKid = mAttrsAndChildren.GetSafeChildAt(aIndex);
+    if (!oldKid) {
+      return NS_OK;
     }
 
     // On the removal of a <treeitem>, <treechildren>, or <treecell> element,
@@ -1096,12 +1084,8 @@ nsXULElement::RemoveChildAt(PRUint32 aIndex, PRBool aNotify)
       }
     }
 
-    nsRange::OwnerChildRemoved(this, aIndex, oldKid);
-    mAttrsAndChildren.RemoveChildAt(aIndex);
-    if (aNotify && doc) {
-        doc->ContentRemoved(this, oldKid, aIndex);
-    }
-
+    rv = nsGenericElement::RemoveChildAt(aIndex, aNotify);
+    
     if (newCurrentIndex == -2)
         controlElement->SetCurrentItem(nsnull);
     else if (newCurrentIndex > -1) {
@@ -1120,7 +1104,8 @@ nsXULElement::RemoveChildAt(PRUint32 aIndex, PRBool aNotify)
         }
     }
 
-    if (fireSelectionHandler && doc) {
+    nsIDocument* doc;
+    if (fireSelectionHandler && (doc = GetCurrentDoc())) {
       nsContentUtils::DispatchTrustedEvent(doc,
                                            NS_STATIC_CAST(nsIContent*, this),
                                            NS_LITERAL_STRING(""""select""""),
@@ -1128,11 +1113,7 @@ nsXULElement::RemoveChildAt(PRUint32 aIndex, PRBool aNotify)
                                            PR_TRUE);
     }
 
-    // This will cause the script object to be unrooted for each
-    // element in the subtree.
-    oldKid->UnbindFromTree();
-
-    return NS_OK;
+    return rv;
 }
 
 void"""
e7afee4a2b14efb0b4ff800a3f39acd81e98180d,124637,326501,roc+%cs.cmu.edu,"Bug 326501. Mark tree views as being suitable for untrusted code. r+sr=bzbarsky
",1143406743,"""diff --git a/content/base/src/nsContentUtils.cpp b/content/base/src/nsContentUtils.cpp
index d29c86e..10884fe 100644
--- a/content/base/src/nsContentUtils.cpp
+++ b/content/base/src/nsContentUtils.cpp
@@ -1020,9 +1020,6 @@ nsContentUtils::IsCallerChrome()
 
 static PRBool IsCallerTrustedForCapability(const char* aCapability)
 {
-  if (nsContentUtils::IsCallerChrome())
-    return PR_TRUE;
-
   // The secman really should handle UniversalXPConnect case, since that
   // should include UniversalBrowserRead... doesn't right now, though.
   PRBool hasCap;
diff --git a/content/xul/templates/src/nsXULTreeBuilder.cpp b/content/xul/templates/src/nsXULTreeBuilder.cpp
index 9968b6c..0607542 100644
--- a/content/xul/templates/src/nsXULTreeBuilder.cpp
+++ b/content/xul/templates/src/nsXULTreeBuilder.cpp
@@ -74,7 +74,7 @@
  */
 class nsXULTreeBuilder : public nsXULTemplateBuilder,
                          public nsIXULTreeBuilder,
-                         public nsITreeView
+                         public nsINativeTreeView
 {
 public:
     // nsISupports
@@ -85,6 +85,8 @@ public:
 
     // nsITreeView
     NS_DECL_NSITREEVIEW
+    // nsINativeTreeView: Untrusted code can use us
+    NS_IMETHOD EnsureNative() { return NS_OK; }
 
     virtual void DocumentWillBeDestroyed(nsIDocument *aDocument);
 
diff --git a/extensions/sql/base/src/mozSqlResult.h b/extensions/sql/base/src/mozSqlResult.h
index 7c352fa..7af2e13 100644
--- a/extensions/sql/base/src/mozSqlResult.h
+++ b/extensions/sql/base/src/mozSqlResult.h
@@ -293,7 +293,7 @@ class mozSqlResult : public mozISqlResult,
                      public mozISqlDataSource,
                      public nsIRDFDataSource,
                      public nsIRDFRemoteDataSource,
-                     public nsITreeView
+                     public nsINativeTreeView
 {
   public:
     mozSqlResult(mozISqlConnection* aConnection,
@@ -328,6 +328,8 @@ class mozSqlResult : public mozISqlResult,
     NS_DECL_NSIRDFREMOTEDATASOURCE
 
     NS_DECL_NSITREEVIEW
+    // nsINativeTreeView: Untrusted code can use us
+    NS_IMETHOD EnsureNative() { return NS_OK; }
 
     friend class mozSqlResultEnumerator;
     friend class mozSqlResultStream;
diff --git a/layout/xul/base/src/tree/public/nsITreeView.idl b/layout/xul/base/src/tree/public/nsITreeView.idl
index 4a0c6e7..12fc88c 100644
--- a/layout/xul/base/src/tree/public/nsITreeView.idl
+++ b/layout/xul/base/src/tree/public/nsITreeView.idl
@@ -225,3 +225,14 @@ interface nsITreeView : nsISupports
    */
   void performActionOnCell(in wstring action, in long row, in nsITreeColumn col);
 };
+
+/**
+ * The following interface is not scriptable and MUST NEVER BE MADE scriptable.
+ * Native treeviews implement it, and we use this to check whether a treeview
+ * is native (and therefore suitable for use by untrusted content).
+ */
+[uuid(38e0b44d-fa08-458c-83fb-3e10b12aeb45)]
+interface nsINativeTreeView : nsITreeView
+{
+  [noscript] void ensureNative();
+};
diff --git a/layout/xul/base/src/tree/src/nsTreeBoxObject.cpp b/layout/xul/base/src/tree/src/nsTreeBoxObject.cpp
index 7a1d574..893546f 100644
--- a/layout/xul/base/src/tree/src/nsTreeBoxObject.cpp
+++ b/layout/xul/base/src/tree/src/nsTreeBoxObject.cpp
@@ -49,6 +49,8 @@
 #include """"nsINodeInfo.h""""
 #include """"nsXULAtoms.h""""
 #include """"nsChildIterator.h""""
+#include """"nsContentUtils.h""""
+#include """"nsDOMError.h""""
 
 class nsTreeBoxObject : public nsPITreeBoxObject, public nsBoxObject
 {
@@ -172,6 +174,14 @@ NS_IMETHODIMP nsTreeBoxObject::GetView(nsITreeView * *aView)
 
 NS_IMETHODIMP nsTreeBoxObject::SetView(nsITreeView * aView)
 {
+  // Untrusted content is only allowed to specify known-good views
+  if (!nsContentUtils::IsCallerTrustedForWrite()) {
+    nsCOMPtr<nsINativeTreeView> nativeTreeView = do_QueryInterface(aView);
+    if (!nativeTreeView || NS_FAILED(nativeTreeView->EnsureNative()))
+      // XXX ERRMSG need a good error here for developers
+      return NS_ERROR_DOM_SECURITY_ERR;
+  }
+
   nsITreeBoxObject* body = GetTreeBody();
   if (body) {
     body->SetView(aView);
diff --git a/layout/xul/base/src/tree/src/nsTreeContentView.h b/layout/xul/base/src/tree/src/nsTreeContentView.h
index 3538274..d9046f9 100644
--- a/layout/xul/base/src/tree/src/nsTreeContentView.h
+++ b/layout/xul/base/src/tree/src/nsTreeContentView.h
@@ -50,7 +50,7 @@
 
 nsresult NS_NewTreeContentView(nsITreeContentView** aResult);
 
-class nsTreeContentView : public nsITreeView,
+class nsTreeContentView : public nsINativeTreeView,
                           public nsITreeContentView,
                           public nsStubDocumentObserver
 {
@@ -64,6 +64,8 @@ class nsTreeContentView : public nsITreeView,
     NS_DECL_ISUPPORTS
 
     NS_DECL_NSITREEVIEW
+    // nsINativeTreeView: Untrusted code can use us
+    NS_IMETHOD EnsureNative() { return NS_OK; }
 
     NS_DECL_NSITREECONTENTVIEW
 """
8915e74edf1c752b50cedc1949c34b032d028d3f,124638,326501,roc+%cs.cmu.edu,"Bug 326501. Mark tree views as being suitable for untrusted code. r+sr=bzbarsky
",1143406673,"""diff --git a/content/base/public/nsContentUtils.h b/content/base/public/nsContentUtils.h
index c8c633e..8911e04 100644
--- a/content/base/public/nsContentUtils.h
+++ b/content/base/public/nsContentUtils.h
@@ -109,6 +109,10 @@ public:
 
   static PRBool   IsCallerChrome();
 
+  static PRBool   IsCallerTrustedForRead();
+
+  static PRBool   IsCallerTrustedForWrite();
+
   /*
    * Returns true if the nodes are both in the same document or
    * if neither is in a document.
diff --git a/content/base/src/nsContentUtils.cpp b/content/base/src/nsContentUtils.cpp
index 474c365..d29c86e 100644
--- a/content/base/src/nsContentUtils.cpp
+++ b/content/base/src/nsContentUtils.cpp
@@ -1018,6 +1018,37 @@ nsContentUtils::IsCallerChrome()
   return is_caller_chrome;
 }
 
+static PRBool IsCallerTrustedForCapability(const char* aCapability)
+{
+  if (nsContentUtils::IsCallerChrome())
+    return PR_TRUE;
+
+  // The secman really should handle UniversalXPConnect case, since that
+  // should include UniversalBrowserRead... doesn't right now, though.
+  PRBool hasCap;
+  nsIScriptSecurityManager* ssm = nsContentUtils::GetSecurityManager();
+  if (NS_FAILED(ssm->IsCapabilityEnabled(aCapability, &hasCap)))
+    return PR_FALSE;
+  if (hasCap)
+    return PR_TRUE;
+    
+  if (NS_FAILED(ssm->IsCapabilityEnabled(""""UniversalXPConnect"""", &hasCap)))
+    return PR_FALSE;
+  return hasCap;
+}
+
+PRBool
+nsContentUtils::IsCallerTrustedForRead()
+{
+  return IsCallerTrustedForCapability(""""UniversalBrowserRead"""");
+}
+
+PRBool
+nsContentUtils::IsCallerTrustedForWrite()
+{
+  return IsCallerTrustedForCapability(""""UniversalBrowserWrite"""");
+}
+
 // static
 PRBool
 nsContentUtils::InSameDoc(nsIDOMNode* aNode, nsIDOMNode* aOther)"""
85d54ae206810ab377be9d7db057954b91cdbe82,124640,329900,bmlk%gmx.de,"also limit the table pseudo frame processing if colgroups are the limiting frame, bug 329900, r/sr=bzbarsky
",1143397933,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index da1fa73..a5d4bae 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -2684,16 +2684,10 @@ ProcessPseudoFrames(nsFrameConstructorState& aState,
   nsPresContext* presContext = aState.mPresContext;
 
   if (nsLayoutAtoms::tableFrame == pseudoFrames.mLowestType) {
-    // if the processing should be limited to the colgroup frame and the
-    // table frame is the lowest type of created pseudo frames that
-    // can have pseudo frame children, process only the colgroup pseudo frames
-    // and leave the table frame untouched.
-    if (nsLayoutAtoms::tableColGroupFrame == aHighestType) {
-      if (pseudoFrames.mColGroup.mFrame) {
-        rv = ProcessPseudoFrame(presContext, pseudoFrames.mColGroup,
-                                aHighestFrame);
-      }
-      return rv;
+    if (pseudoFrames.mColGroup.mFrame) {
+      rv = ProcessPseudoFrame(presContext, pseudoFrames.mColGroup,
+                              aHighestFrame);
+      if (nsLayoutAtoms::tableColGroupFrame == aHighestType) return rv;
     }
     rv = ProcessPseudoTableFrame(presContext, pseudoFrames, aHighestFrame);
     if (nsLayoutAtoms::tableOuterFrame == aHighestType) return rv;
@@ -2714,7 +2708,11 @@ ProcessPseudoFrames(nsFrameConstructorState& aState,
   else if (nsLayoutAtoms::tableRowGroupFrame == pseudoFrames.mLowestType) {
     rv = ProcessPseudoFrame(presContext, pseudoFrames.mRowGroup, aHighestFrame);
     if (nsLayoutAtoms::tableRowGroupFrame == aHighestType) return rv;
-
+    if (pseudoFrames.mColGroup.mFrame) {
+      rv = ProcessPseudoFrame(presContext, pseudoFrames.mColGroup,
+                              aHighestFrame);
+      if (nsLayoutAtoms::tableColGroupFrame == aHighestType) return rv;
+    }
     if (pseudoFrames.mTableOuter.mFrame) {
       rv = ProcessPseudoTableFrame(presContext, pseudoFrames, aHighestFrame);
       if (nsLayoutAtoms::tableOuterFrame == aHighestType) return rv;
@@ -2736,6 +2734,11 @@ ProcessPseudoFrames(nsFrameConstructorState& aState,
       rv = ProcessPseudoFrame(presContext, pseudoFrames.mRowGroup, aHighestFrame);
       if (nsLayoutAtoms::tableRowGroupFrame == aHighestType) return rv;
     }
+    if (pseudoFrames.mColGroup.mFrame) {
+      rv = ProcessPseudoFrame(presContext, pseudoFrames.mColGroup,
+                              aHighestFrame);
+      if (nsLayoutAtoms::tableColGroupFrame == aHighestType) return rv;
+    }
     if (pseudoFrames.mTableOuter.mFrame) {
       rv = ProcessPseudoTableFrame(presContext, pseudoFrames, aHighestFrame);
       if (nsLayoutAtoms::tableOuterFrame == aHighestType) return rv;
@@ -2757,6 +2760,11 @@ ProcessPseudoFrames(nsFrameConstructorState& aState,
       rv = ProcessPseudoFrame(presContext, pseudoFrames.mRowGroup, aHighestFrame);
       if (nsLayoutAtoms::tableRowGroupFrame == aHighestType) return rv;
     }
+    if (pseudoFrames.mColGroup.mFrame) {
+      rv = ProcessPseudoFrame(presContext, pseudoFrames.mColGroup,
+                              aHighestFrame);
+      if (nsLayoutAtoms::tableColGroupFrame == aHighestType) return rv;
+    }
     if (pseudoFrames.mTableOuter.mFrame) {
       rv = ProcessPseudoTableFrame(presContext, pseudoFrames, aHighestFrame);
     }
@@ -3150,15 +3158,17 @@ nsCSSFrameConstructor::GetPseudoColGroupFrame(nsTableCreator&          aTableCre
     rv = CreatePseudoColGroupFrame(aTableCreator, aState, &aParentFrameIn);
   }
   else {
-    if (!pseudoFrames.mColGroup.mFrame) { 
-      if (pseudoFrames.mRowGroup.mFrame && !(pseudoFrames.mRow.mFrame)) {
-        rv = CreatePseudoRowFrame(aTableCreator, aState);
-      }
-      if (pseudoFrames.mRow.mFrame && !(pseudoFrames.mCellOuter.mFrame)) {
-        rv = CreatePseudoCellFrame(aTableCreator, aState);
-      }
-      if (pseudoFrames.mCellOuter.mFrame && !(pseudoFrames.mTableOuter.mFrame)) {
-        rv = CreatePseudoTableFrame(aTableCreator, aState);
+    if (!pseudoFrames.mColGroup.mFrame) {
+      if (!pseudoFrames.mTableInner.mFrame) {
+        if (pseudoFrames.mRowGroup.mFrame && !(pseudoFrames.mRow.mFrame)) {
+          rv = CreatePseudoRowFrame(aTableCreator, aState);
+        }
+        if (pseudoFrames.mRow.mFrame && !(pseudoFrames.mCellOuter.mFrame)) {
+          rv = CreatePseudoCellFrame(aTableCreator, aState);
+        }
+        if (pseudoFrames.mCellOuter.mFrame && !(pseudoFrames.mTableOuter.mFrame)) {
+          rv = CreatePseudoTableFrame(aTableCreator, aState);
+        }
       }
       rv = CreatePseudoColGroupFrame(aTableCreator, aState);
     }"""
caa763b9832b1a4633a4766d90b04f1d050961f4,124694,330773,mrbkap%gmail.com,"Followup to bug 330773 -- don't leave the timeout addref'd in the failure case. r+sr=bzbarsky
",1143237111,"""diff --git a/dom/src/base/nsGlobalWindow.cpp b/dom/src/base/nsGlobalWindow.cpp
index 792d712..3607256 100644
--- a/dom/src/base/nsGlobalWindow.cpp
+++ b/dom/src/base/nsGlobalWindow.cpp
@@ -5885,7 +5885,11 @@ nsGlobalWindow::SetTimeoutOrInterval(PRBool aIsInterval, PRInt32 *aReturn)
   // Note the direction of this test: We don't allow chrome setTimeouts on
   // content windows, but we do allow content setTimeouts on chrome windows.
   rv = ourPrincipal->Subsumes(subjectPrincipal, &subsumes);
-  NS_ENSURE_SUCCESS(rv, rv);
+  if (NS_FAILED(rv)) {
+    timeout->Release(scx);
+
+    return NS_ERROR_FAILURE;
+  }
 
   if (subsumes) {
     timeout->mPrincipal = subjectPrincipal;"""
e31e0461386176baeac203304a55f226e346e395,124709,330773,mrbkap%gmail.com,"Use the less powerful of the available principals when compiling and running code passed into setTimeout. With this fix, chrome that attempts to setTimeout(""code that requires chrome privs"") on a content window will find that its code is run in the window's principals. bug 330773, r=jst sr=bzbarsky
",1143226158,"""diff --git a/dom/src/base/nsGlobalWindow.cpp b/dom/src/base/nsGlobalWindow.cpp
index 69d6253..792d712 100644
--- a/dom/src/base/nsGlobalWindow.cpp
+++ b/dom/src/base/nsGlobalWindow.cpp
@@ -5866,16 +5866,38 @@ nsGlobalWindow::SetTimeoutOrInterval(PRBool aIsInterval, PRInt32 *aReturn)
 
   timeout->mVersion = ::JS_VersionToString(::JS_GetVersion(cx));
 
-  // Get principal of currently executing code, save for execution of timeout
-
-  rv = sSecMan->GetSubjectPrincipal(getter_AddRefs(timeout->mPrincipal));
+  // Get principal of currently executing code, save for execution of timeout.
+  // If either our principals subsume the subject principal, or we're from the
+  // same origin, then use the subject principal. Otherwise, use our principal
+  // to avoid running script in elevated principals.
 
+  nsCOMPtr<nsIPrincipal> subjectPrincipal;
+  rv = sSecMan->GetSubjectPrincipal(getter_AddRefs(subjectPrincipal));
   if (NS_FAILED(rv)) {
     timeout->Release(scx);
 
     return NS_ERROR_FAILURE;
   }
 
+  PRBool subsumes = PR_FALSE;
+  nsCOMPtr<nsIPrincipal> ourPrincipal = GetPrincipal();
+
+  // Note the direction of this test: We don't allow chrome setTimeouts on
+  // content windows, but we do allow content setTimeouts on chrome windows.
+  rv = ourPrincipal->Subsumes(subjectPrincipal, &subsumes);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  if (subsumes) {
+    timeout->mPrincipal = subjectPrincipal;
+  } else {
+    // Subsumes does a very strict equality test. Allow sites of the same origin
+    // to set timeouts on each other.
+
+    rv = sSecMan->CheckSameOriginPrincipal(subjectPrincipal, ourPrincipal);
+    timeout->mPrincipal = NS_SUCCEEDED(rv) ? subjectPrincipal : ourPrincipal;
+    rv = NS_OK;
+  }
+
   PRTime delta = (PRTime)interval * PR_USEC_PER_MSEC;
 
   if (!IsFrozen()) {"""
6517b9184862260c0fe6eeeb716e8e398c6f6c0c,124816,330897,dbaron%dbaron.org,"Fix indexing botch.  Patch from Mikolaj J. Habryn <dichro-mozilla@rcpt.to>.  r=kengert  sr=dbaron  b=330897
",1143013240,"""diff --git a/security/manager/ssl/src/nsCrypto.cpp b/security/manager/ssl/src/nsCrypto.cpp
index 569a75d..3793c92 100644
--- a/security/manager/ssl/src/nsCrypto.cpp
+++ b/security/manager/ssl/src/nsCrypto.cpp
@@ -2167,7 +2167,7 @@ nsCrypto::SignText(const nsAString& aStringToSign, const nsAString& aCaOption,
 
         return NS_OK;
       }
-      caNames[i] = JS_GetStringBytes(caName);
+      caNames[i - 2] = JS_GetStringBytes(caName);
     }
 
     if (certList &&"""
6aba6ed88cb2b93415941733bc4cfc0ff735454d,124891,330773,mrbkap%gmail.com,"Use JS_DefineProperty instead of JS_SetProperty for the additional control over the property we're setting. bug 330773, r+sr=jst
",1142907391,"""diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index 11c525a..f342ac8 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -5508,7 +5508,8 @@ nsWindowSH::GlobalResolve(nsGlobalWindow *aWin, JSContext *cx,
 
     v = OBJECT_TO_JSVAL(dot_prototype);
 
-    if (!::JS_SetProperty(cx, class_obj, """"prototype"""", &v)) {
+    if (!::JS_DefineProperty(cx, class_obj, """"prototype"""", v, NULL, NULL,
+                             JSPROP_ENUMERATE)) {
       return NS_ERROR_UNEXPECTED;
     }
 """
7a5b2620cd6cdf4365fbccaaaa3dad10adb82816,124931,329521,neil%parkwaycc.co.uk,"Don't dismiss the context menu so eagerly for subframe loads b=329521 r+sr=jag
",1142759827,"""diff --git a/xpfe/browser/resources/content/nsBrowserStatusHandler.js b/xpfe/browser/resources/content/nsBrowserStatusHandler.js
index 7ade733..54b69ff 100644
--- a/xpfe/browser/resources/content/nsBrowserStatusHandler.js
+++ b/xpfe/browser/resources/content/nsBrowserStatusHandler.js
@@ -261,7 +261,21 @@ nsBrowserStatusHandler.prototype =
 
   onLocationChange : function(aWebProgress, aRequest, aLocation)
   {
-    document.getElementById(""""contentAreaContextMenu"""").hidePopup();
+    if (gContextMenu) {
+      // Optimise for the common case
+      if (aWebProgress.DOMWindow == content)
+        gContextMenu.menu.hidePopup();
+      else {
+        for (var contextWindow = gContextMenu.target.ownerDocument.defaultView;
+             contextWindow != contextWindow.parent;
+             contextWindow = contextWindow.parent) {
+          if (contextWindow == aWebProgress.DOMWindow) {
+            gContextMenu.menu.hidePopup();
+            break;
+          }
+        }
+      }
+    }
 
     // XXX temporary hack for bug 104532.
     // Depends heavily on setOverLink implementation"""
99bb8c1c9e76a7af588bfbc3abd93a4ea5446f86,125074,330037,martijn.martijn%gmail.com,"Bug 330037 - First check if script/data url's are allowed, r=dveditz, sr=bzbarsky
",1142420605,"""diff --git a/caps/src/nsScriptSecurityManager.cpp b/caps/src/nsScriptSecurityManager.cpp
index a3f44d4..13029b0 100644
--- a/caps/src/nsScriptSecurityManager.cpp
+++ b/caps/src/nsScriptSecurityManager.cpp
@@ -1276,12 +1276,6 @@ nsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal* aPrincipal,
     rv = GetBaseURIScheme(aTargetURI, targetScheme);
     if (NS_FAILED(rv)) return rv;
 
-    if (nsCRT::strcasecmp(targetScheme.get(), sourceScheme.get()) == 0)
-    {
-        // every scheme can access another URI from the same scheme
-        return NS_OK;
-    }
-
     //-- Some callers do not allow loading javascript: or data: URLs
     if (((aFlags & (nsIScriptSecurityManager::DISALLOW_SCRIPT |
                     nsIScriptSecurityManager::DISALLOW_SCRIPT_OR_DATA)) &&
@@ -1292,6 +1286,12 @@ nsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal* aPrincipal,
        return NS_ERROR_DOM_BAD_URI;
     }
 
+    if (nsCRT::strcasecmp(targetScheme.get(), sourceScheme.get()) == 0)
+    {
+        // every scheme can access another URI from the same scheme
+        return NS_OK;
+    }
+
     //-- If the schemes don't match, the policy is specified in this table.
     enum Action { AllowProtocol, DenyProtocol, PrefControlled, ChromeProtocol};
     static const struct"""
519404bb0d0caa889af3d2e0019e4a109b400d72,125186,329521,neil%parkwaycc.co.uk,"Dismiss the context menu when a new page loads b=329521 r=jag sr=bz
",1142084384,"""diff --git a/xpfe/browser/resources/content/nsBrowserStatusHandler.js b/xpfe/browser/resources/content/nsBrowserStatusHandler.js
index 495ad55..7ade733 100644
--- a/xpfe/browser/resources/content/nsBrowserStatusHandler.js
+++ b/xpfe/browser/resources/content/nsBrowserStatusHandler.js
@@ -261,6 +261,8 @@ nsBrowserStatusHandler.prototype =
 
   onLocationChange : function(aWebProgress, aRequest, aLocation)
   {
+    document.getElementById(""""contentAreaContextMenu"""").hidePopup();
+
     // XXX temporary hack for bug 104532.
     // Depends heavily on setOverLink implementation
     if (!aRequest)"""
7ad56859b4181dee501ac4d5671ceed37dc78431,125309,325730,cvshook%sicking.cc,"Bug 325730.  Mutation-event handlers can cause further mutations to the DOM. We need to be more attentive to those. r=bz sr=jst
",1141854452,"""diff --git a/content/base/src/nsDocument.cpp b/content/base/src/nsDocument.cpp
index 37e17a3..75ac4f1 100644
--- a/content/base/src/nsDocument.cpp
+++ b/content/base/src/nsDocument.cpp
@@ -3655,7 +3655,7 @@ NS_IMETHODIMP
 nsDocument::InsertBefore(nsIDOMNode* aNewChild, nsIDOMNode* aRefChild,
                          nsIDOMNode** aReturn)
 {
-  return nsGenericElement::doInsertBefore(aNewChild, aRefChild, nsnull, this,
+  return nsGenericElement::doReplaceOrInsertBefore(PR_FALSE, aNewChild, aRefChild, nsnull, this,
                                           aReturn);
 }
 
@@ -3663,7 +3663,7 @@ NS_IMETHODIMP
 nsDocument::ReplaceChild(nsIDOMNode* aNewChild, nsIDOMNode* aOldChild,
                          nsIDOMNode** aReturn)
 {
-  return nsGenericElement::doReplaceChild(aNewChild, aOldChild, nsnull, this,
+  return nsGenericElement::doReplaceOrInsertBefore(PR_TRUE, aNewChild, aOldChild, nsnull, this,
                                           aReturn);
 }
 
diff --git a/content/base/src/nsDocumentFragment.cpp b/content/base/src/nsDocumentFragment.cpp
index 7991248..5586588 100644
--- a/content/base/src/nsDocumentFragment.cpp
+++ b/content/base/src/nsDocumentFragment.cpp
@@ -52,7 +52,7 @@
 #include """"nsIDOMUserDataHandler.h""""
 
 class nsDocumentFragment : public nsGenericElement,
-                           public nsIDocumentFragment,
+                           public nsIDOMDocumentFragment,
                            public nsIDOM3Node
 {
 public:
@@ -62,11 +62,6 @@ public:
   // nsISupports
   NS_DECL_ISUPPORTS_INHERITED
 
-  // interface nsIDocumentFragment
-  NS_IMETHOD DisconnectChildren();
-  NS_IMETHOD ReconnectChildren();
-  NS_IMETHOD DropChildReferences();
-
   // interface nsIDOMDocumentFragment
   NS_IMETHOD    GetNodeName(nsAString& aNodeName)
   { return nsGenericElement::GetNodeName(aNodeName); }
@@ -194,7 +189,6 @@ nsDocumentFragment::~nsDocumentFragment()
 
 // QueryInterface implementation for nsDocumentFragment
 NS_INTERFACE_MAP_BEGIN(nsDocumentFragment)
-  NS_INTERFACE_MAP_ENTRY(nsIDocumentFragment)
   NS_INTERFACE_MAP_ENTRY(nsIDOMDocumentFragment)
   NS_INTERFACE_MAP_ENTRY(nsIDOMNode)
   NS_INTERFACE_MAP_ENTRY(nsIDOM3Node)
@@ -208,71 +202,6 @@ NS_INTERFACE_MAP_END
 NS_IMPL_ADDREF(nsDocumentFragment)
 NS_IMPL_RELEASE(nsDocumentFragment)
 
-NS_IMETHODIMP
-nsDocumentFragment::DisconnectChildren()
-{
-  PRUint32 i, count = GetChildCount();
-
-  for (i = 0; i < count; i++) {
-    NS_ASSERTION(GetChildAt(i)->GetCurrentDoc() == nsnull,
-                 """"How did we get a child with a current doc?"""");
-    // Safe to unbind PR_FALSE, since kids should never have a current document
-    // or a binding parent
-    GetChildAt(i)->UnbindFromTree(PR_FALSE);
-  }
-
-  return NS_OK;
-}
-
-NS_IMETHODIMP
-nsDocumentFragment::ReconnectChildren()
-{
-  PRUint32 i, count = GetChildCount();
-  NS_PRECONDITION(GetCurrentDoc() == nsnull,
-                  """"We really shouldn't have a current doc!"""");
-
-  for (i = 0; i < count; i++) {
-    nsIContent *child = GetChildAt(i);
-    nsIContent *parent = child->GetParent();
-
-    if (parent) {
-      // This is potentially a O(n**2) operation, but it should only
-      // happen in error cases (such as out of memory or something
-      // similar) so we don't care for now.
-      // XXXbz I don't think this is O(n**2) with our IndexOf cache, is it?
-
-      PRInt32 indx = parent->IndexOf(child);
-
-      if (indx >= 0) {
-        parent->RemoveChildAt(indx, PR_TRUE);
-      }
-    }
-
-    nsresult rv = child->BindToTree(nsnull, this, nsnull, PR_FALSE);
-    if (NS_FAILED(rv)) {
-      // It's all bad now...  Just  forget about this kid, I guess
-      child->UnbindFromTree();
-      mAttrsAndChildren.RemoveChildAt(i);
-      // Adjust count and iterator accordingly
-      --count;
-      --i;
-    }
-  }
-
-  return NS_OK;
-}
-
-NS_IMETHODIMP
-nsDocumentFragment::DropChildReferences()
-{
-  PRUint32 count = mAttrsAndChildren.ChildCount();
-  while (count > 0) {
-    mAttrsAndChildren.RemoveChildAt(--count);
-  }
-
-  return NS_OK;
-}
-
 NS_IMETHODIMP    
 nsDocumentFragment::GetNodeType(PRUint16* aNodeType)
 {
diff --git a/content/base/src/nsGenericElement.cpp b/content/base/src/nsGenericElement.cpp
index 50a6779..a1f7eed 100644
--- a/content/base/src/nsGenericElement.cpp
+++ b/content/base/src/nsGenericElement.cpp
@@ -767,6 +767,8 @@ nsDOMEventRTTearoff::AddEventListener(const nsAString& aType,
 
 //----------------------------------------------------------------------
 
+PRUint32 nsMutationGuard::sMutationCount = 0;
+
 nsDOMSlots::nsDOMSlots(PtrBits aFlags)
   : mFlags(aFlags),
     mBindingParent(nsnull)
@@ -2297,7 +2299,12 @@ nsGenericElement::doInsertChildAt(nsIContent* aKid, PRUint32 aIndex,
   NS_PRECONDITION(!aParent || aParent->GetCurrentDoc() == aDocument,
                   """"Incorrect aDocument"""");
 
-  PRBool isAppend = (aIndex == aChildArray.ChildCount());
+  PRUint32 childCount = aChildArray.ChildCount();
+  NS_ENSURE_TRUE(aIndex <= childCount, NS_ERROR_ILLEGAL_VALUE);
+
+  nsMutationGuard::DidMutate();
+
+  PRBool isAppend = (aIndex == childCount);
 
   mozAutoDocUpdate updateBatch(aDocument, UPDATE_CONTENT_MODEL, aNotify);
 
@@ -2385,6 +2392,8 @@ nsGenericElement::doRemoveChildAt(PRUint32 aIndex, PRBool aNotify,
   NS_PRECONDITION(!aParent || aParent->GetCurrentDoc() == aDocument,
                   """"Incorrect aDocument"""");
 
+  nsMutationGuard::DidMutate();
+
   nsINode* container = aParent;
   if (!container) {
     container = aDocument;
@@ -2437,51 +2446,20 @@ nsGenericElement::doRemoveChildAt(PRUint32 aIndex, PRBool aNotify,
  * aChild is one of aNode's ancestors. -- jst@citec.fi
  */
 
-/* static */
-PRBool
-nsGenericElement::isSelfOrAncestor(nsIContent *aNode,
-                                   nsIContent *aPossibleAncestor)
-{
-  NS_PRECONDITION(aNode, """"Must have a node"""");
-  
-  if (aNode == aPossibleAncestor)
-    return PR_TRUE;
-
-  /*
-   * If aPossibleAncestor doesn't have children it can't be our ancestor
-   */
-  if (aPossibleAncestor->GetChildCount() == 0) {
-    return PR_FALSE;
-  }
-
-  for (nsIContent* ancestor = aNode->GetParent();
-       ancestor;
-       ancestor = ancestor->GetParent()) {
-    if (ancestor == aPossibleAncestor) {
-      /*
-       * We found aPossibleAncestor as one of our ancestors
-       */
-      return PR_TRUE;
-    }
-  }
-
-  return PR_FALSE;
-}
-
 NS_IMETHODIMP
 nsGenericElement::InsertBefore(nsIDOMNode *aNewChild, nsIDOMNode *aRefChild,
                                nsIDOMNode **aReturn)
 {
-  return doInsertBefore(aNewChild, aRefChild, this, GetCurrentDoc(),
-                        aReturn);
+  return doReplaceOrInsertBefore(PR_FALSE, aNewChild, aRefChild, this, GetCurrentDoc(),
+                                 aReturn);
 }
 
 NS_IMETHODIMP
 nsGenericElement::ReplaceChild(nsIDOMNode* aNewChild, nsIDOMNode* aOldChild,
                                nsIDOMNode** aReturn)
 {
-  return doReplaceChild(aNewChild, aOldChild, this, GetCurrentDoc(),
-                        aReturn);
+  return doReplaceOrInsertBefore(PR_TRUE, aNewChild, aOldChild, this, GetCurrentDoc(),
+                                 aReturn);
 }
 
 NS_IMETHODIMP
@@ -2511,6 +2489,10 @@ PRBool IsAllowedAsChild(nsIContent* aNewChild, PRUint16 aNewNodeType,
                   """"Bogus node type passed"""");
 #endif
 
+  if (aParent && nsContentUtils::ContentIsDescendantOf(aParent, aNewChild)) {
+    return PR_FALSE;
+  }
+
   // The allowed child nodes differ for documents and elements
   switch (aNewNodeType) {
   case nsIDOMNode::COMMENT_NODE :
@@ -2735,9 +2717,12 @@ NS_IMPL_ISUPPORTS1(nsFragmentObserver, nsIDocumentObserver)
 
 /* static */
 nsresult
-nsGenericElement::doInsertBefore(nsIDOMNode* aNewChild, nsIDOMNode* aRefChild,
-                                 nsIContent* aParent, nsIDocument* aDocument,
-                                 nsIDOMNode** aReturn)
+nsGenericElement::doReplaceOrInsertBefore(PRBool aReplace,
+                                          nsIDOMNode* aNewChild,
+                                          nsIDOMNode* aRefChild,
+                                          nsIContent* aParent,
+                                          nsIDocument* aDocument,
+                                          nsIDOMNode** aReturn)
 {
   NS_PRECONDITION(aParent || aDocument, """"Must have document if no parent!"""");
   NS_PRECONDITION(!aParent || aParent->GetCurrentDoc() == aDocument,
@@ -2745,54 +2730,47 @@ nsGenericElement::doInsertBefore(nsIDOMNode* aNewChild, nsIDOMNode* aRefChild,
 
   *aReturn = nsnull;
 
-  if (!aNewChild) {
+  if (!aNewChild || (aReplace && !aRefChild)) {
     return NS_ERROR_NULL_POINTER;
   }
 
   nsCOMPtr<nsIContent> refContent;
   nsresult res = NS_OK;
-  PRInt32 refPos = 0;
+  PRInt32 insPos;
 
   nsINode* container = aParent;
   if (!container) {
     container = aDocument;
   }
 
+  // Figure out which index to insert at
   if (aRefChild) {
-    refContent = do_QueryInterface(aRefChild, &res);
-
-    if (NS_FAILED(res)) {
-      /*
-       * If aRefChild doesn't support the nsIContent interface it can't be
-       * an existing child of this node.
-       */
+    refContent = do_QueryInterface(aRefChild);
+    insPos = container->IndexOf(refContent);
+    if (insPos < 0) {
       return NS_ERROR_DOM_NOT_FOUND_ERR;
     }
 
-    refPos = container->IndexOf(refContent);
+    if (aRefChild == aNewChild) {
+      NS_ADDREF(*aReturn = aNewChild);
 
-    if (refPos < 0) {
-      return NS_ERROR_DOM_NOT_FOUND_ERR;
+      return NS_OK;
     }
   } else {
-    refPos = container->GetChildCount();
+    insPos = container->GetChildCount();
   }
 
-  nsCOMPtr<nsIContent> newContent(do_QueryInterface(aNewChild, &res));
-
-  if (NS_FAILED(res)) {
+  nsCOMPtr<nsIContent> newContent = do_QueryInterface(aNewChild);
+  if (!newContent) {
     return NS_ERROR_DOM_HIERARCHY_REQUEST_ERR;
   }
 
   PRUint16 nodeType = 0;
-
   res = aNewChild->GetNodeType(&nodeType);
+  NS_ENSURE_SUCCESS(res, res);
 
-  if (NS_FAILED(res)) {
-    return res;
-  }
-
-  if (!IsAllowedAsChild(newContent, nodeType, aParent, aDocument, PR_FALSE,
+  // Make sure that the inserted node is allowed as a child of its new parent.
+  if (!IsAllowedAsChild(newContent, nodeType, aParent, aDocument, aReplace,
                         refContent)) {
     return NS_ERROR_DOM_HIERARCHY_REQUEST_ERR;
   }
@@ -2817,14 +2795,37 @@ nsGenericElement::doInsertBefore(nsIDOMNode* aNewChild, nsIDOMNode* aRefChild,
       }
     }
   }
-  
-  /*
-   * Make sure the new child is not aParent or one of aParent's
-   * ancestors. Doing this check here should be safe even if newContent
-   * is a document fragment.
-   */
-  if (aParent && isSelfOrAncestor(aParent, newContent)) {
-    return NS_ERROR_DOM_HIERARCHY_REQUEST_ERR;
+
+  // We want an update batch when we expect several mutations to be performed,
+  // which is when we're replacing a node, or when we're inserting a fragment.
+  mozAutoDocUpdate updateBatch(aDocument, UPDATE_CONTENT_MODEL,
+    aReplace || nodeType == nsIDOMNode::DOCUMENT_FRAGMENT_NODE);
+
+  // If we're replacing
+  if (aReplace) {
+    // Getting (and addrefing) the following child here is sort of wasteful
+    // in the common case, but really, it's not that expensive. Get over it.
+    refContent = container->GetChildAt(insPos + 1);
+
+    nsMutationGuard guard;
+
+    res = container->RemoveChildAt(insPos, PR_TRUE);
+    NS_ENSURE_SUCCESS(res, res);
+
+    if (guard.Mutated(1)) {
+      insPos = refContent ? container->IndexOf(refContent) :
+                            container->GetChildCount();
+      if (insPos < 0) {
+        return NS_ERROR_DOM_NOT_FOUND_ERR;
+      }
+
+      // Passing PR_FALSE for aIsReplace since we now have removed the node
+      // to be replaced.
+      if (!IsAllowedAsChild(newContent, nodeType, aParent, aDocument,
+                            PR_FALSE, refContent)) {
+        return NS_ERROR_DOM_HIERARCHY_REQUEST_ERR;
+      }
+    }
   }
 
   /*
@@ -2833,23 +2834,42 @@ nsGenericElement::doInsertBefore(nsIDOMNode* aNewChild, nsIDOMNode* aRefChild,
    * individually (i.e. we don't add the actual document fragment).
    */
   if (nodeType == nsIDOMNode::DOCUMENT_FRAGMENT_NODE) {
-    nsCOMPtr<nsIDocumentFragment> doc_fragment(do_QueryInterface(newContent));
-    NS_ENSURE_TRUE(doc_fragment, NS_ERROR_UNEXPECTED);
-
     PRUint32 count = newContent->GetChildCount();
-    PRUint32 old_count = container->GetChildCount();
+    PRBool do_notify = refContent || !aParent;
+
+    // Copy the children into a separate array to avoid having to deal with
+    // mutations to the fragment while we're inserting.
+    nsCOMArray<nsIContent> fragChildren;
+    if (!fragChildren.SetCapacity(count)) {
+      return NS_ERROR_OUT_OF_MEMORY;
+    }
+    PRUint32 i;
+    for (i = 0; i < count; i++) {
+      nsIContent* child = newContent->GetChildAt(i);
+      NS_ASSERTION(child->GetCurrentDoc() == nsnull,
+                   """"How did we get a child with a current doc?"""");
+      fragChildren.AppendObject(child);
+    }
 
-    PRBool do_notify = !!aRefChild || !aParent;
+    // Remove the children from the fragment and flag for possible mutations.
+    PRBool mutated = PR_FALSE;
+    for (i = count; i > 0;) {
+      // We don't need to update i if someone mutates the DOM. The only thing
+      // that'd happen is that the resulting child list might be unexpected,
+      // but we should never crash since RemoveChildAt is out-of-bounds safe.
+      nsMutationGuard guard;
+      newContent->RemoveChildAt(--i, PR_TRUE);
+      mutated = mutated || guard.Mutated(1);
+    }
 
+    // Set up observer that notifies if needed.
     nsRefPtr<nsFragmentObserver> fragmentObs;
     if (count && !do_notify) {
-      fragmentObs = new nsFragmentObserver(old_count, aParent, aDocument);
+      fragmentObs = new nsFragmentObserver(container->GetChildCount(), aParent, aDocument);
       NS_ENSURE_TRUE(fragmentObs, NS_ERROR_OUT_OF_MEMORY);
       fragmentObs->Connect();
     }
 
-    doc_fragment->DisconnectChildren();
-
     // If do_notify is true, then we don't have to handle the notifications
     // ourselves...  Also, if count is 0 there will be no updates.  So we only
     // want an update batch to happen if count is nonzero and do_notify is not
@@ -2857,26 +2877,44 @@ nsGenericElement::doInsertBefore(nsIDOMNode* aNewChild, nsIDOMNode* aRefChild,
     mozAutoDocUpdate updateBatch(aDocument, UPDATE_CONTENT_MODEL,
                                  count && !do_notify);
     
-    /*
-     * Iterate through the fragment's children, removing each from
-     * the fragment and inserting it into the child list of its
-     * new parent.
-     */
+    // Iterate through the fragment's children, and insert them in the new
+    // parent
+    for (i = 0; i < count; ++i) {
+      // Get the n:th child from the array.
+      nsIContent* childContent = fragChildren[i];
+
+      // If we've had any unexpeted mutations so far we need to recheck that
+      // the child can still be inserted.
+      if (mutated) {
+        // We really only need to update insPos if we *just* got an unexpected
+        // mutation as opposed to 3 insertions ago. But this is an edgecase so
+        // no need to over optimize.
+        insPos = refContent ? container->IndexOf(refContent) :
+                              container->GetChildCount();
+        if (insPos < 0) {
+          // Someone seriously messed up the childlist. We have no idea
+          // where to insert the remaining children, so just bail.
+          res = NS_ERROR_DOM_NOT_FOUND_ERR;
+          break;
+        }
+
+        nsCOMPtr<nsIDOMNode> tmpNode = do_QueryInterface(childContent);
+        PRUint16 tmpType = 0;
+        tmpNode->GetNodeType(&tmpType);
 
-    nsCOMPtr<nsIContent> childContent;
+        if (childContent->GetParent() || childContent->IsInDoc() ||
+            !IsAllowedAsChild(childContent, tmpType, aParent, aDocument, PR_FALSE,
+                              refContent)) {
+          res = NS_ERROR_DOM_HIERARCHY_REQUEST_ERR;
+          break;
+        }
+      }
 
-    for (PRUint32 i = 0; i < count; ++i) {
-      // Get the n:th child from the document fragment. Since we
-      // disconnected the children from the document fragment they
-      // won't be removed from the document fragment when inserted
-      // into the new parent. This lets us do this operation *much*
-      // faster.
-      childContent = newContent->GetChildAt(i);
+      nsMutationGuard guard;
 
       // XXXbz how come no reparenting here?  That seems odd...
-      // Insert the child and increment the insertion position
-      res = container->InsertChildAt(childContent, refPos++, do_notify);
-
+      // Insert the child.
+      res = container->InsertChildAt(childContent, insPos, do_notify);
       if (NS_FAILED(res)) {
         break;
       }
@@ -2884,17 +2922,21 @@ nsGenericElement::doInsertBefore(nsIDOMNode* aNewChild, nsIDOMNode* aRefChild,
       if (fragmentObs) {
         fragmentObs->ChildBound();
       }
+
+      // Check to see if any evil mutation events mucked around with the
+      // child list.
+      mutated = mutated || guard.Mutated(1);
+      
+      ++insPos;
     }
 
     if (NS_FAILED(res)) {
-      // This should put the children that were moved out of the
-      // document fragment back into the document fragment and remove
-      // them from the element or document they were inserted into.
-
-      doc_fragment->ReconnectChildren();
       if (fragmentObs) {
         fragmentObs->Disconnect();
       }
+      
+      // We could try to put the nodes back into the fragment here if we
+      // really cared.
 
       return res;
     }
@@ -2903,9 +2945,9 @@ nsGenericElement::doInsertBefore(nsIDOMNode* aNewChild, nsIDOMNode* aRefChild,
       NS_ASSERTION(count && !do_notify, """"Unexpected state"""");
       fragmentObs->Finish();
     }
-
-    doc_fragment->DropChildReferences();
-  } else {
+  }
+  else {
+    // Not inserting a fragment but rather a single node.
     nsIContent* bindingParent = newContent->GetBindingParent();
     if (bindingParent == newContent ||
         (bindingParent && bindingParent == newContent->GetParent())) {
@@ -2913,245 +2955,66 @@ nsGenericElement::doInsertBefore(nsIDOMNode* aNewChild, nsIDOMNode* aRefChild,
       return NS_ERROR_DOM_NOT_SUPPORTED_ERR;
     }
 
-    /*
-     * Remove the element from the old parent if one exists, since oldParent
-     * is a nsIDOMNode this will do the right thing even if the parent of
-     * aNewChild is a document. This code also handles the case where the
-     * new child is alleady a child of this node-- jst@citec.fi
-     */
-    nsCOMPtr<nsIDOMNode> oldParent;
-    res = aNewChild->GetParentNode(getter_AddRefs(oldParent));
-    NS_ENSURE_SUCCESS(res, res);
-    if (oldParent) {
-      nsCOMPtr<nsIDOMNode> tmpNode;
-
-      PRUint32 origChildCount = container->GetChildCount();
-
-      /*
-       * We don't care here if the return fails or not.
-       */
-      oldParent->RemoveChild(aNewChild, getter_AddRefs(tmpNode));
-
-      PRUint32 newChildCount = container->GetChildCount();
-
-      /*
-       * Check if our child count changed during the RemoveChild call, if
-       * it did then oldParent is most likely this node. In this case we
-       * must check if refPos is still correct (unless it's zero).
-       */
-      if (refPos && origChildCount != newChildCount) {
-        if (refContent) {
-          /*
-           * If we did get aRefChild we check if that is now at refPos - 1,
-           * this will happend if the new child was one of aRefChilds'
-           * previous siblings.
-           */
-
-          if (refContent == container->GetChildAt(refPos - 1)) {
-            refPos--;
-          }
-        } else {
-          /*
-           * If we didn't get aRefChild we simply decrement refPos.
-           */
-          refPos--;
-        }
-      }
-    }
-
-    if (!newContent->IsContentOfType(eXUL)) {
-      nsContentUtils::ReparentContentWrapper(newContent, aParent,
-                                             container->GetOwnerDoc(),
-                                             old_doc);
-    }
-
-    res = container->InsertChildAt(newContent, refPos, PR_TRUE);
-
-    if (NS_FAILED(res)) {
-      return res;
-    }
-  }
-
-  *aReturn = aNewChild;
-  NS_ADDREF(*aReturn);
-
-  return res;
-}
-
-/* static */
-nsresult
-nsGenericElement::doReplaceChild(nsIDOMNode* aNewChild, nsIDOMNode* aOldChild,
-                                 nsIContent* aParent, nsIDocument* aDocument,
-                                 nsIDOMNode** aReturn)
-{
-  NS_PRECONDITION(aParent || aDocument, """"Must have document if no parent!"""");
-  NS_PRECONDITION(!aParent || aParent->GetCurrentDoc() == aDocument,
-                  """"Incorrect aDocument"""");
-
-  *aReturn = nsnull;
-
-  if (!aNewChild || !aOldChild) {
-    return NS_ERROR_NULL_POINTER;
-  }
-
-  nsresult res = NS_OK;
-  PRInt32 oldPos = 0;
-
-  nsCOMPtr<nsIContent> oldContent = do_QueryInterface(aOldChild);
-
-  nsINode* container = aParent;
-  if (!container) {
-    container = aDocument;
-  }
-
-  // if oldContent is null IndexOf will return < 0, which is what we want
-  // since aOldChild couldn't be a child.
-  oldPos = container->IndexOf(oldContent);
-  if (oldPos < 0) {
-    return NS_ERROR_DOM_NOT_FOUND_ERR;
-  }
-
-  nsCOMPtr<nsIContent> replacedChild = container->GetChildAt(oldPos);
-
-  PRUint16 nodeType = 0;
-
-  res = aNewChild->GetNodeType(&nodeType);
-
-  if (NS_FAILED(res)) {
-    return res;
-  }
+    PRBool newContentIsXUL = newContent->IsContentOfType(eXUL);
 
-  nsCOMPtr<nsIContent> newContent(do_QueryInterface(aNewChild, &res));
+    // Remove the element from the old parent if one exists
+    nsINode* oldParent = newContent->GetParent();
+    if (!oldParent) {
+      oldParent = newContent->GetCurrentDoc();
 
-  if (NS_FAILED(res)) {
-    return NS_ERROR_DOM_HIERARCHY_REQUEST_ERR;
-  }
-
-  if (!IsAllowedAsChild(newContent, nodeType, aParent, aDocument, PR_TRUE,
-                        oldContent)) {
-    return NS_ERROR_DOM_HIERARCHY_REQUEST_ERR;
-  }
-
-  nsIDocument* old_doc = newContent->GetOwnerDoc();
-
-  // XXXbz The document code and content code have two totally different
-  // security checks here.  Why?  Because I'm afraid to change such things this
-  // close to 1.8.  But which should we do here, really?  Or both?  For example
-  // what should a caller with UniversalBrowserRead/Write/whatever be able to
-  // do, exactly?  Do we need to be more careful with documents because random
-  // callers _can_ get access to them?  That might be....
-  if (old_doc && old_doc != container->GetOwnerDoc()) {
-    if (aParent) {
-      if (!nsContentUtils::CanCallerAccess(aNewChild)) {
-        return NS_ERROR_DOM_SECURITY_ERR;
-      }
-    } else {
-      nsCOMPtr<nsIDOMNode> doc(do_QueryInterface(aDocument));
-      if (NS_FAILED(nsContentUtils::CheckSameOrigin(doc, aNewChild))) {
-        return NS_ERROR_DOM_SECURITY_ERR;
+      // See bug 53901. Crappy XUL sometimes lies about being in the document
+      if (oldParent && newContentIsXUL && oldParent->IndexOf(newContent) < 0) {
+        oldParent = nsnull;
       }
     }
-  }
-
-  /*
-   * Make sure the new child is not aParent or one of aParent's
-   * ancestors. Doing this check here should be safe even if newContent
-   * is a document fragment.
-   */
-  if (aParent && isSelfOrAncestor(aParent, newContent)) {
-    return NS_ERROR_DOM_HIERARCHY_REQUEST_ERR;
-  }
-
-  // We're ready to start inserting children, so let's start a batch
-  mozAutoDocUpdate updateBatch(aDocument, UPDATE_CONTENT_MODEL, PR_TRUE);
+    if (oldParent) {
+      PRInt32 removeIndex = oldParent->IndexOf(newContent);
+      NS_ASSERTION(removeIndex >= 0 &&
+                   !(oldParent == container && removeIndex == insPos),
+                   """"invalid removeIndex"""");
 
-  /*
-   * Check if this is a document fragment. If it is, we need
-   * to remove the children of the document fragment and add them
-   * individually (i.e. we don't add the actual document fragment).
-   */
-  if (nodeType == nsIDOMNode::DOCUMENT_FRAGMENT_NODE) {
-    nsCOMPtr<nsIContent> childContent;
-    PRUint32 i, count = newContent->GetChildCount();
-    res = container->RemoveChildAt(oldPos, PR_TRUE);
-    NS_ENSURE_SUCCESS(res, res);
+      nsMutationGuard guard;
 
-    /*
-     * Iterate through the fragments children, removing each from
-     * the fragment and inserting it into the child list of its
-     * new parent.
-     */
-    for (i = 0; i < count; ++i) {
-      // Always get and remove the first child, since the child indexes
-      // change as we go along.
-      childContent = newContent->GetChildAt(0);
-      res = newContent->RemoveChildAt(0, PR_FALSE);
+      res = oldParent->RemoveChildAt(removeIndex, PR_TRUE);
       NS_ENSURE_SUCCESS(res, res);
 
-      // XXXbz how come no reparenting here?
-      // Insert the child and increment the insertion position
-      res = container->InsertChildAt(childContent, oldPos++, PR_TRUE);
-      NS_ENSURE_SUCCESS(res, res);
-    }
-  }
-  else {
-    nsCOMPtr<nsIDOMNode> oldParent;
-    res = aNewChild->GetParentNode(getter_AddRefs(oldParent));
-    NS_ENSURE_SUCCESS(res, res);
+      // Adjust insert index if the node we ripped out was a sibling
+      // of the node we're inserting before
+      if (oldParent == container && removeIndex < insPos) {
+        --insPos;
+      }
 
-    /*
-     * Remove the element from the old parent if one exists, since oldParent
-     * is a nsIDOMNode this will do the right thing even if the parent of
-     * aNewChild is a document. This code also handles the case where the
-     * new child is alleady a child of this node-- jst@citec.fi
-     */
-    if (oldParent) {
-      PRUint32 origChildCount = container->GetChildCount();
-
-      /*
-       * We don't care here if the return fails or not.
-       */
-      nsCOMPtr<nsIDOMNode> tmpNode;
-      oldParent->RemoveChild(aNewChild, getter_AddRefs(tmpNode));
-
-      PRUint32 newChildCount = container->GetChildCount();
-
-      /*
-       * Check if our child count changed during the RemoveChild call, if
-       * it did then oldParent is most likely this node. In this case we
-       * must check if oldPos is still correct (unless it's zero).
-       */
-      if (oldPos && origChildCount != newChildCount) {
-        /*
-         * Check if aOldChild is now at oldPos - 1, this will happend if
-         * the new child was one of aOldChilds' previous siblings.
-         */
-        nsIContent *tmpContent = container->GetChildAt(oldPos - 1);
-
-        if (oldContent == tmpContent) {
-          oldPos--;
+      if (guard.Mutated(1)) {
+        insPos = refContent ? container->IndexOf(refContent) :
+                              container->GetChildCount();
+        if (insPos < 0) {
+          // Someone seriously messed up the childlist. We have no idea
+          // where to insert the new child, so just bail.
+          return NS_ERROR_DOM_NOT_FOUND_ERR;
+        }
+
+        if (newContent->GetParent() || newContent->IsInDoc() ||
+            !IsAllowedAsChild(newContent, nodeType, aParent, aDocument, PR_FALSE,
+                              refContent)) {
+          return NS_ERROR_DOM_HIERARCHY_REQUEST_ERR;
         }
       }
     }
 
-    if (!newContent->IsContentOfType(eXUL)) {
+    if (!newContentIsXUL) {
       nsContentUtils::ReparentContentWrapper(newContent, aParent,
                                              container->GetOwnerDoc(),
                                              old_doc);
     }
 
-    // If we're replacing a child with itself the child
-    // has already been removed from this element once we get here.
-    if (aNewChild != aOldChild) {
-      res = container->RemoveChildAt(oldPos, PR_TRUE);
-      NS_ENSURE_SUCCESS(res, res);
-    }
-
-    res = container->InsertChildAt(newContent, oldPos, PR_TRUE);
+    res = container->InsertChildAt(newContent, insPos, PR_TRUE);
     NS_ENSURE_SUCCESS(res, res);
   }
 
-  return CallQueryInterface(replacedChild, aReturn);
+  *aReturn = aReplace ? aRefChild : aNewChild;
+  NS_ADDREF(*aReturn);
+
+  return res;
 }
 
 /* static */
diff --git a/content/base/src/nsGenericElement.h b/content/base/src/nsGenericElement.h
index c31de31..bbc39a8 100644
--- a/content/base/src/nsGenericElement.h
+++ b/content/base/src/nsGenericElement.h
@@ -283,6 +283,77 @@ private:
   nsCOMPtr<nsIContent> mContent;
 };
 
+/**
+ * Class used to detect unexpected mutations. To use the class create an
+ * nsMutationGuard on the stack before unexpected mutations could occur.
+ * You can then at any time call Mutated to check if any unexpected mutations
+ * have occured.
+ *
+ * When a guard is instantiated sMutationCount is set to 300. It is then
+ * decremented by every mutation (capped at 0). This means that we can only
+ * detect 300 mutations during the lifetime of a single guard, however that
+ * should be more then we ever care about as we usually only care if more then
+ * one mutation has occured.
+ *
+ * When the guard goes out of scope it will adjust sMutationCount so that over
+ * the lifetime of the guard the guard itself has not affected sMutationCount,
+ * while mutations that happened while the guard was alive still will. This
+ * allows a guard to be instantiated even if there is another guard higher up
+ * on the callstack watching for mutations.
+ *
+ * The only thing that has to be avoided is for an outer guard to be used
+ * while an inner guard is alive. This can be avoided by only ever
+ * instantiating a single guard per scope and only using the guard in the
+ * current scope.
+ */
+class nsMutationGuard {
+public:
+  nsMutationGuard()
+  {
+    mDelta = eMaxMutations - sMutationCount;
+    sMutationCount = eMaxMutations;
+  }
+  ~nsMutationGuard()
+  {
+    sMutationCount =
+      mDelta > sMutationCount ? 0 : sMutationCount - mDelta;
+  }
+
+  /**
+   * Returns true if any unexpected mutations have occured. You can pass in
+   * an 8-bit ignore count to ignore a number of expected mutations.
+   */
+  PRBool Mutated(PRUint8 aIgnoreCount)
+  {
+    return sMutationCount < NS_STATIC_CAST(PRUint32, eMaxMutations - aIgnoreCount);
+  }
+
+  // This function should be called whenever a mutation that we want to keep
+  // track of happen. For now this is only done when children are added or
+  // removed, but we might do it for attribute changes too in the future.
+  static void DidMutate()
+  {
+    if (sMutationCount) {
+      --sMutationCount;
+    }
+  }
+
+private:
+  // mDelta is the amount sMutationCount was adjusted when the guard was
+  // initialized. It is needed so that we can undo that adjustment once
+  // the guard dies.
+  PRUint32 mDelta;
+
+  // The value 300 is not important, as long as it is bigger then anything
+  // ever passed to Mutated().
+  enum { eMaxMutations = 300 };
+
+  
+  // sMutationCount is a global mutation counter which is decreased by one at
+  // every mutation. It is capped at 0 to avoid wrapping.
+  // It's value is always between 0 and 300, inclusive.
+  static PRUint32 sMutationCount;
+};
 
 /**
  * A generic base class for DOM elements, implementing many nsIContent,
@@ -576,43 +647,22 @@ public:
   static PRBool ShouldFocus(nsIContent *aContent);
 
   /**
-   * Checks if a node is the ancestor of another.
-   */
-  static PRBool isSelfOrAncestor(nsIContent *aNode,
-                                 nsIContent *aPossibleAncestor);
-
-  /**
-   * Actual implementation of the DOM InsertBefore method.  Shared by
-   * nsDocument.  When called from nsDocument, aParent will be null.
+   * Actual implementation of the DOM InsertBefore and ReplaceChild methods.
+   * Shared by nsDocument. When called from nsDocument, aParent will be null.
    *
+   * @param aReplace  True if aNewChild should replace aRefChild. False if
+   *                  aNewChild should be inserted before aRefChild.
    * @param aNewChild The child to insert
-   * @param aRefChild The child to insert before
+   * @param aRefChild The child to insert before or replace
    * @param aParent The parent to use for the new child
    * @param aDocument The document to use for the new child.
    *                  Must be non-null, if aParent is null and must match
    *                  aParent->GetCurrentDoc() if aParent is not null.
    * @param aReturn [out] the child we insert
    */
-  static nsresult doInsertBefore(nsIDOMNode* aNewChild, nsIDOMNode* aRefChild,
-                                 nsIContent* aParent, nsIDocument* aDocument,
-                                 nsIDOMNode** aReturn);
-
-  /**
-   * Actual implementation of the DOM ReplaceChild method.  Shared by
-   * nsDocument.  When called from nsDocument, aParent will be null.
-   *
-   * @param aNewChild The child to replace with
-   * @param aOldChild The child to replace
-   * @param aParent The parent to use for the new child
-   * @param aDocument The document to use for the new child.
-   *                  Must be non-null if aParent is null and must match
-   *                  aParent->GetCurrentDoc() if aParent is not null.
-   * @param aChildArray The child array to work with
-   * @param aReturn [out] the child we insert
-   */
-  static nsresult doReplaceChild(nsIDOMNode* aNewChild, nsIDOMNode* aOldChild,
-                                 nsIContent* aParent, nsIDocument* aDocument,
-                                 nsIDOMNode** aReturn);
+  static nsresult doReplaceOrInsertBefore(PRBool aReplace, nsIDOMNode* aNewChild, nsIDOMNode* aRefChild,
+                                          nsIContent* aParent, nsIDocument* aDocument,
+                                          nsIDOMNode** aReturn);
 
   /**
    * Actual implementation of the DOM RemoveChild method.  Shared by
@@ -680,7 +730,7 @@ public:
     const nsAttrName* mName;
     const nsAttrValue* mValue;
   };
-  
+
 protected:
   /**
    * Set attribute and (if needed) notify documentobservers and fire off
@@ -985,41 +1035,6 @@ protected:
   nsAttrAndChildArray mAttrsAndChildren;
 };
 
-// Internal non-public interface
-
-// IID for the nsIDocumentFragment interface
-#define NS_IDOCUMENTFRAGMENT_IID      \
-{ 0xd8fb2853, 0xf6d6, 0x4499, \
-  {0x9c, 0x60, 0x6c, 0xa2, 0x75, 0x35, 0x09, 0xeb} }
-
-// nsIDocumentFragment interface
-/**
- * These methods are supposed to be used when *all* children of a
- * document fragment are moved at once into a new parent w/o
- * changing the relationship between the children. If the moving
- * operation fails and some children were moved to a new parent and
- * some weren't, ReconnectChildren() should be called to remove the
- * children from their possible new parent and re-insert the
- * children into the document fragment. Once the operation is
- * complete and all children are successfully moved into their new
- * parent DropChildReferences() should be called so that the
- * document fragment will loose its references to the children.
- */
-class nsIDocumentFragment : public nsIDOMDocumentFragment
-{
-public:
-  NS_DECLARE_STATIC_IID_ACCESSOR(NS_IDOCUMENTFRAGMENT_IID)
-
-  /** Tell the children their parent is gone */
-  NS_IMETHOD DisconnectChildren() = 0;
-  /** Put all children back in the fragment */
-  NS_IMETHOD ReconnectChildren() = 0;
-  /** Drop references to children */
-  NS_IMETHOD DropChildReferences() = 0;
-};
-
-NS_DEFINE_STATIC_IID_ACCESSOR(nsIDocumentFragment, NS_IDOCUMENTFRAGMENT_IID)
-
 #define NS_FORWARD_NSIDOMNODE_NO_CLONENODE(_to)                               \
   NS_IMETHOD GetNodeName(nsAString& aNodeName) {                              \
     return _to GetNodeName(aNodeName);                                        \
diff --git a/content/xul/content/src/nsXULElement.cpp b/content/xul/content/src/nsXULElement.cpp
index 755da9c..8c631ea 100644
--- a/content/xul/content/src/nsXULElement.cpp
+++ b/content/xul/content/src/nsXULElement.cpp
@@ -1019,6 +1019,8 @@ nsXULElement::RemoveChildAt(PRUint32 aIndex, PRBool aNotify)
     nsresult rv = EnsureContentsGenerated();
     NS_ENSURE_SUCCESS(rv, rv);
 
+    nsMutationGuard::DidMutate();
+
     nsCOMPtr<nsIContent> oldKid = mAttrsAndChildren.ChildAt(aIndex);
     NS_ENSURE_TRUE(oldKid, NS_ERROR_FAILURE);
 
@@ -1078,7 +1080,7 @@ nsXULElement::RemoveChildAt(PRUint32 aIndex, PRBool aNotify)
         nsCOMPtr<nsIDOMXULSelectControlItemElement> curItem;
         controlElement->GetCurrentItem(getter_AddRefs(curItem));
         nsCOMPtr<nsIContent> curNode = do_QueryInterface(curItem);
-        if (curNode && isSelfOrAncestor(curNode, oldKid)) {
+        if (curNode && nsContentUtils::ContentIsDescendantOf(curNode, oldKid)) {
             // Current item going away
             nsCOMPtr<nsIBoxObject> box;
             controlElement->GetBoxObject(getter_AddRefs(box));"""
588629eb31327bc13629cad83081334d486db22a,125477,328509,dveditz%cruzio.com,"bug 328509 initialization fix, patch from jhpedemonte, r/sr=pavlov, a=dveditz
",1141429498,"""diff --git a/modules/libpr0n/decoders/gif/GIF2.cpp b/modules/libpr0n/decoders/gif/GIF2.cpp
index b9c76bb..647af8b 100644
--- a/modules/libpr0n/decoders/gif/GIF2.cpp
+++ b/modules/libpr0n/decoders/gif/GIF2.cpp
@@ -375,7 +375,7 @@ PRBool GIFInit(gif_struct* gs, void* aClientData)
     return PR_FALSE;
 
   // Clear out the structure, excluding the arrays
-  memset(gs, 0, offsetof(gif_struct, prefix));
+  memset(gs, 0, sizeof(gif_struct));
   gs->clientptr = aClientData;
 
   // Start with the version (GIF89a|GIF87a)"""
4dcff1e570f594372f6659a0acd08cf05d2d553f,125567,324918,cvshook%sicking.cc,"Reland bug 324918 with fixes for regressions. r/sr=bz for the additional fixes
",1141335023,"""diff --git a/content/html/content/src/nsHTMLSelectElement.cpp b/content/html/content/src/nsHTMLSelectElement.cpp
index 96bf6b7..440b3aa 100644
--- a/content/html/content/src/nsHTMLSelectElement.cpp
+++ b/content/html/content/src/nsHTMLSelectElement.cpp
@@ -117,18 +117,45 @@ public:
    * @param aOption the option to insert
    * @param aIndex the index to insert at
    */
-  nsresult InsertElementAt(nsIDOMHTMLOptionElement* aOption, PRInt32 aIndex);
+  PRBool InsertOptionAt(nsIDOMHTMLOptionElement* aOption, PRInt32 aIndex)
+  {
+    return mElements.InsertObjectAt(aOption, aIndex);
+  }
+
   /**
    * Remove an option
    * @param aIndex the index of the option to remove
    */
-  nsresult RemoveElementAt(PRInt32 aIndex);
+  void RemoveOptionAt(PRInt32 aIndex)
+  {
+    mElements.RemoveObjectAt(aIndex);
+  }
+
   /**
    * Get the option at the index
    * @param aIndex the index
    * @param aReturn the option returned [OUT]
    */
-  nsIDOMHTMLOptionElement *ItemAsOption(PRInt32 aIndex);
+  nsIDOMHTMLOptionElement *ItemAsOption(PRInt32 aIndex)
+  {
+    return mElements.SafeObjectAt(aIndex);
+  }
+
+  /**
+   * Clears out all options
+   */
+  void Clear()
+  {
+    mElements.Clear();
+  }
+
+  /**
+   * Append an option to end of array
+   */
+  PRBool AppendOption(nsIDOMHTMLOptionElement* aOption)
+  {
+    return mElements.AppendObject(aOption);
+  }
 
   /**
    * Drop the reference to the select.  Called during select destruction.
@@ -229,12 +256,11 @@ public:
 
   virtual void SetFocus(nsPresContext* aPresContext);
   virtual PRBool IsFocusable(PRInt32 *aTabIndex = nsnull);
+  virtual nsresult InsertChildAt(nsIContent* aKid, PRUint32 aIndex,
+                                 PRBool aNotify);
+  virtual nsresult AppendChildTo(nsIContent* aKid, PRBool aNotify);
+  virtual nsresult RemoveChildAt(PRUint32 aIndex, PRBool aNotify);
 
-  // nsGenericElement
-  virtual nsresult WillAddOrRemoveChild(nsIContent* aKid,
-                                        PRUint32 aIndex,
-                                        PRBool aRemove);
-  
   // Overriden nsIFormControl methods
   NS_IMETHOD_(PRInt32) GetType() const { return NS_FORM_SELECT; }
   NS_IMETHOD Reset();
@@ -420,8 +446,17 @@ protected:
    */
   void DispatchContentReset();
 
+  /**
+   * Rebuilds the options array from scratch as a fallback in error cases.
+   */
+  void RebuildOptionsArray();
+
+#ifdef DEBUG
+  void VerifyOptionsArray();
+#endif
+
   /** The options[] array */
-  nsHTMLOptionCollection* mOptions;
+  nsRefPtr<nsHTMLOptionCollection> mOptions;
   /** false if the parser is in the middle of adding children. */
   PRBool    mIsDoneAddingChildren;
   /** The number of non-options as children of the select */
@@ -437,7 +472,7 @@ protected:
    * The temporary restore state in case we try to restore before parser is
    * done adding options
    */
-  nsSelectState* mRestoreState;
+  nsRefPtr<nsSelectState> mRestoreState;
 };
 
 
@@ -458,22 +493,20 @@ nsHTMLSelectElement::nsHTMLSelectElement(nsINodeInfo *aNodeInfo,
     mIsDoneAddingChildren(!aFromParser),
     mNonOptionChildren(0),
     mOptGroupCount(0),
-    mSelectedIndex(-1),
-    mRestoreState(nsnull)
+    mSelectedIndex(-1)
 {
+  // FIXME: Bug 328908, set mOptions in an Init function and get rid of null
+  // checks.
+
   // DoneAddingChildren() will be called later if it's from the parser,
   // otherwise it is
-
-  NS_IF_ADDREF(mOptions);
 }
 
 nsHTMLSelectElement::~nsHTMLSelectElement()
 {
   if (mOptions) {
     mOptions->DropReference();
-    NS_RELEASE(mOptions);
   }
-  NS_IF_RELEASE(mRestoreState);
 }
 
 // ISupports
@@ -506,17 +539,63 @@ nsHTMLSelectElement::GetForm(nsIDOMHTMLFormElement** aForm)
 }
 
 nsresult
-nsHTMLSelectElement::WillAddOrRemoveChild(nsIContent* aKid,
-                                          PRUint32 aIndex,
-                                          PRBool aRemove)
+nsHTMLSelectElement::InsertChildAt(nsIContent* aKid,
+                                   PRUint32 aIndex,
+                                   PRBool aNotify)
 {
-  if (aRemove) {
-    WillRemoveOptions(this, aIndex);
-  } else {
-    WillAddOptions(aKid, this, aIndex);
+  PRUint32 prevOptGroups = mOptGroupCount;
+
+  nsresult rv = WillAddOptions(aKid, this, aIndex);
+  PRBool rebuild = NS_FAILED(rv);
+
+  rv = nsGenericHTMLFormElement::InsertChildAt(aKid, aIndex, aNotify);
+  if (rebuild || NS_FAILED(rv)) {
+    RebuildOptionsArray();
+    return rv;
+  }
+
+  if (mOptGroupCount && !prevOptGroups) {
+    // FIXME: Bug 328907, get rid of this event
+    DispatchDOMEvent(NS_LITERAL_STRING(""""selectHasGroups""""));
   }
 
-  return nsGenericHTMLFormElement::WillAddOrRemoveChild(aKid, aIndex, aRemove);
+#ifdef DEBUG
+  VerifyOptionsArray();
+#endif
+
+  return NS_OK;
+}
+
+nsresult
+nsHTMLSelectElement::AppendChildTo(nsIContent* aKid, PRBool aNotify)
+{
+  return InsertChildAt(aKid, GetChildCount(), aNotify);
+}
+
+nsresult
+nsHTMLSelectElement::RemoveChildAt(PRUint32 aIndex, PRBool aNotify)
+{
+  PRUint32 prevOptGroups = mOptGroupCount;
+
+  nsresult rv = WillRemoveOptions(this, aIndex);
+  PRBool rebuild = NS_FAILED(rv);
+
+  rv = nsGenericHTMLFormElement::RemoveChildAt(aIndex, aNotify);
+  if (rebuild || NS_FAILED(rv)) {
+    RebuildOptionsArray();
+    return rv;
+  }
+
+  if (!mOptGroupCount && prevOptGroups) {
+    // FIXME: Bug 328907, get rid of this event
+    DispatchDOMEvent(NS_LITERAL_STRING(""""selectHasNoGroups""""));
+  }
+
+#ifdef DEBUG
+  VerifyOptionsArray();
+#endif
+
+  return NS_OK;
 }
 
 
@@ -602,16 +681,12 @@ nsHTMLSelectElement::PrintOptions(nsIContent* aOptions, PRInt32 tabs)
   }
 
   // Recurse down into optgroups
-  //
-  // I *would* put a restriction in here to only search under
-  // optgroups (and not, for example, <P></P>), but it really
-  // doesn't *hurt* to search under other stuff and it's more
-  // efficient in the normal only-optgroup-and-option case
-  // (one less QueryInterface).
-  PRUint32 numChildren = aOptions->GetChildCount();
+  if (IsOptGroup(aOptions)) {
+    PRUint32 numChildren = aOptions->GetChildCount();
 
-  for (PRUint32 i = 0; i < numChildren; ++i) {
-    PrintOptions(aOptions->GetChildAt(i), tabs + 1);
+    for (PRUint32 i = 0; i < numChildren; ++i) {
+      PrintOptions(aOptions->GetChildAt(i), tabs + 1);
+    }
   }
 
   return NS_OK;
@@ -680,7 +755,7 @@ nsHTMLSelectElement::InsertOptionsIntoListRecurse(nsIContent* aOptions,
 
   nsCOMPtr<nsIDOMHTMLOptionElement> optElement(do_QueryInterface(aOptions));
   if (optElement) {
-    nsresult rv = mOptions->InsertElementAt(optElement, *aInsertIndex);
+    nsresult rv = mOptions->InsertOptionAt(optElement, *aInsertIndex);
     NS_ENSURE_SUCCESS(rv, rv);
     (*aInsertIndex)++;
     return NS_OK;
@@ -692,24 +767,16 @@ nsHTMLSelectElement::InsertOptionsIntoListRecurse(nsIContent* aOptions,
     mNonOptionChildren++;
   }
 
+  // Recurse down into optgroups
   if (IsOptGroup(aOptions)) {
     mOptGroupCount++;
-    DispatchDOMEvent(NS_LITERAL_STRING(""""selectHasGroups""""));
-  }
 
-  // Recurse down into optgroups
-  //
-  // I *would* put a restriction in here to only search under
-  // optgroups (and not, for example, <P></P>), but it really
-  // doesn't *hurt* to search under other stuff and it's more
-  // efficient in the normal only-optgroup-and-option case
-  // (one less QueryInterface).
-  PRUint32 numChildren = aOptions->GetChildCount();
-
-  for (PRUint32 i = 0; i < numChildren; ++i) {
-    nsresult rv = InsertOptionsIntoListRecurse(aOptions->GetChildAt(i),
-                                               aInsertIndex, aDepth+1);
-    NS_ENSURE_SUCCESS(rv, rv);
+    PRUint32 numChildren = aOptions->GetChildCount();
+    for (PRUint32 i = 0; i < numChildren; ++i) {
+      nsresult rv = InsertOptionsIntoListRecurse(aOptions->GetChildAt(i),
+                                                 aInsertIndex, aDepth+1);
+      NS_ENSURE_SUCCESS(rv, rv);
+    }
   }
 
   return NS_OK;
@@ -730,8 +797,11 @@ nsHTMLSelectElement::RemoveOptionsFromListRecurse(nsIContent* aOptions,
 
   nsCOMPtr<nsIDOMHTMLOptionElement> optElement(do_QueryInterface(aOptions));
   if (optElement) {
-    nsresult rv = mOptions->RemoveElementAt(aRemoveIndex);
-    NS_ENSURE_SUCCESS(rv, rv);
+    if (mOptions->ItemAsOption(aRemoveIndex) != optElement) {
+      NS_ERROR(""""wrong option at index"""");
+      return NS_ERROR_UNEXPECTED;
+    }
+    mOptions->RemoveOptionAt(aRemoveIndex);
     (*aNumRemoved)++;
     return NS_OK;
   }
@@ -741,28 +811,18 @@ nsHTMLSelectElement::RemoveOptionsFromListRecurse(nsIContent* aOptions,
     mNonOptionChildren--;
   }
 
-  if (mOptGroupCount) {
-    if (IsOptGroup(aOptions)) {
-      mOptGroupCount--;
-      DispatchDOMEvent(NS_LITERAL_STRING(""""selectHasNoGroups""""));
-    }
-  }
-
   // Recurse down deeper for options
-  //
-  // I *would* put a restriction in here to only search under
-  // optgroups (and not, for example, <P></P>), but it really
-  // doesn't *hurt* to search under other stuff and it's more
-  // efficient in the normal only-optgroup-and-option case
-  // (one less QueryInterface).
-  PRUint32 numChildren = aOptions->GetChildCount();
-
-  for (PRUint32 i = 0; i < numChildren; ++i) {
-    nsresult rv = RemoveOptionsFromListRecurse(aOptions->GetChildAt(i),
-                                               aRemoveIndex,
-                                               aNumRemoved,
-                                               aDepth + 1);
-    NS_ENSURE_SUCCESS(rv, rv);
+  if (mOptGroupCount && IsOptGroup(aOptions)) {
+    mOptGroupCount--;
+
+    PRUint32 numChildren = aOptions->GetChildCount();
+    for (PRUint32 i = 0; i < numChildren; ++i) {
+      nsresult rv = RemoveOptionsFromListRecurse(aOptions->GetChildAt(i),
+                                                 aRemoveIndex,
+                                                 aNumRemoved,
+                                                 aDepth + 1);
+      NS_ENSURE_SUCCESS(rv, rv);
+    }
   }
 
   return NS_OK;
@@ -818,9 +878,8 @@ NS_IMETHODIMP
 nsHTMLSelectElement::WillRemoveOptions(nsIContent* aParent,
                                        PRInt32 aContentIndex)
 {
-  nsresult rv = NS_OK;
-
   PRInt32 level = GetContentDepth(aParent);
+  NS_ASSERTION(level >= 0, """"getting notified by unexpected content"""");
   if (level == -1) {
     return NS_ERROR_FAILURE;
   }
@@ -838,11 +897,12 @@ nsHTMLSelectElement::WillRemoveOptions(nsIContent* aParent,
       ind = GetFirstOptionIndex(currentKid);
     }
     if (ind != -1) {
-      rv = RemoveOptionsFromList(currentKid, ind, level);
+      nsresult rv = RemoveOptionsFromList(currentKid, ind, level);
+      NS_ENSURE_SUCCESS(rv, rv);
     }
   }
 
-  return rv;
+  return NS_OK;
 }
 
 PRInt32
@@ -1688,7 +1748,7 @@ nsHTMLSelectElement::DoneAddingChildren(PRBool aHaveNotified)
   // content, restore the rest of the options proper-like
   if (mRestoreState) {
     RestoreStateTo(mRestoreState);
-    NS_RELEASE(mRestoreState);
+    mRestoreState = nsnull;
   }
 
   // Notify the frame
@@ -1806,11 +1866,10 @@ nsHTMLSelectElement::HandleDOMEvent(nsPresContext* aPresContext,
 NS_IMETHODIMP
 nsHTMLSelectElement::SaveState()
 {
-  nsSelectState* state = new nsSelectState();
+  nsRefPtr<nsSelectState> state = new nsSelectState();
   if (!state) {
     return NS_ERROR_OUT_OF_MEMORY;
   }
-  NS_ADDREF(state);
 
   PRUint32 len;
   GetLength(&len);
@@ -1836,8 +1895,6 @@ nsHTMLSelectElement::SaveState()
     NS_ASSERTION(NS_SUCCEEDED(rv), """"selecteditems set failed!"""");
   }
 
-  NS_RELEASE(state);
-
   return rv;
 }
 
@@ -1877,7 +1934,6 @@ nsHTMLSelectElement::RestoreStateTo(nsSelectState* aNewSelected)
 {
   if (!mIsDoneAddingChildren) {
     mRestoreState = aNewSelected;
-    NS_ADDREF(mRestoreState);
     return;
   }
 
@@ -2050,6 +2106,58 @@ void nsHTMLSelectElement::DispatchContentReset() {
   }
 }
 
+static void
+AddOptionsRecurse(nsIContent* aRoot, nsHTMLOptionCollection* aArray)
+{
+  nsIContent* child;
+  for(PRUint32 i = 0; (child = aRoot->GetChildAt(i)); ++i) {
+    nsCOMPtr<nsIDOMHTMLOptionElement> opt = do_QueryInterface(child);
+    if (opt) {
+      // If we fail here, then at least we've tried our best
+      aArray->AppendOption(opt);
+    }
+    else if (IsOptGroup(child)) {
+      AddOptionsRecurse(child, aArray);
+    }
+  }
+}
+
+void
+nsHTMLSelectElement::RebuildOptionsArray()
+{
+  mOptions->Clear();
+  AddOptionsRecurse(this, mOptions);
+}
+
+#ifdef DEBUG
+
+static void
+VerifyOptionsRecurse(nsIContent* aRoot, PRInt32& aIndex,
+                     nsHTMLOptionCollection* aArray)
+{
+  nsIContent* child;
+  for(PRUint32 i = 0; (child = aRoot->GetChildAt(i)); ++i) {
+    nsCOMPtr<nsIDOMHTMLOptionElement> opt = do_QueryInterface(child);
+    if (opt) {
+      NS_ASSERTION(opt == aArray->ItemAsOption(aIndex++),
+                   """"Options collection broken"""");
+    }
+    else if (IsOptGroup(child)) {
+      VerifyOptionsRecurse(child, aIndex, aArray);
+    }
+  }
+}
+
+void
+nsHTMLSelectElement::VerifyOptionsArray()
+{
+  PRInt32 aIndex = 0;
+  VerifyOptionsRecurse(this, aIndex, mOptions);
+}
+
+
+#endif
+
 //----------------------------------------------------------------------
 //
 // nsHTMLOptionCollection implementation
@@ -2177,7 +2285,7 @@ nsHTMLOptionCollection::SetOption(PRInt32 aIndex,
     rv = mSelect->AppendChild(aOption, getter_AddRefs(ret));
   } else {
     // Find the option they're talking about and replace it
-    nsIDOMHTMLOptionElement *refChild = mElements.ObjectAt(aIndex);
+    nsIDOMHTMLOptionElement *refChild = mElements.SafeObjectAt(aIndex);
     NS_ENSURE_TRUE(refChild, NS_ERROR_UNEXPECTED);
 
     nsCOMPtr<nsIDOMNode> parent;
@@ -2216,12 +2324,6 @@ nsHTMLOptionCollection::Item(PRUint32 aIndex, nsIDOMNode** aReturn)
   return NS_OK;
 }
 
-nsIDOMHTMLOptionElement *
-nsHTMLOptionCollection::ItemAsOption(PRInt32 aIndex)
-{
-  return mElements.SafeObjectAt(aIndex);
-}
-
 NS_IMETHODIMP
 nsHTMLOptionCollection::NamedItem(const nsAString& aName,
                                   nsIDOMNode** aReturn)
@@ -2255,16 +2357,3 @@ nsHTMLOptionCollection::GetSelect(nsIDOMHTMLSelectElement **aReturn)
   NS_IF_ADDREF(*aReturn = mSelect);
   return NS_OK;
 }
-
-nsresult
-nsHTMLOptionCollection::InsertElementAt(nsIDOMHTMLOptionElement* aOption,
-                                        PRInt32 aIndex)
-{
-  return mElements.InsertObjectAt(aOption, aIndex);
-}
-
-nsresult
-nsHTMLOptionCollection::RemoveElementAt(PRInt32 aIndex)
-{
-  return mElements.RemoveObjectAt(aIndex);
-}"""
b1c66042b6468d4070c331ef1341a24165de6983,125606,324918,roc+%cs.cmu.edu,"Backing out fix for bug 324918 so that <select> actually works again.
",1141258880,"""diff --git a/content/html/content/src/nsHTMLSelectElement.cpp b/content/html/content/src/nsHTMLSelectElement.cpp
index ca0a2c0..96bf6b7 100644
--- a/content/html/content/src/nsHTMLSelectElement.cpp
+++ b/content/html/content/src/nsHTMLSelectElement.cpp
@@ -117,45 +117,18 @@ public:
    * @param aOption the option to insert
    * @param aIndex the index to insert at
    */
-  PRBool InsertOptionAt(nsIDOMHTMLOptionElement* aOption, PRInt32 aIndex)
-  {
-    return mElements.InsertObjectAt(aOption, aIndex);
-  }
-
+  nsresult InsertElementAt(nsIDOMHTMLOptionElement* aOption, PRInt32 aIndex);
   /**
    * Remove an option
    * @param aIndex the index of the option to remove
    */
-  void RemoveOptionAt(PRInt32 aIndex)
-  {
-    mElements.RemoveObjectAt(aIndex);
-  }
-
+  nsresult RemoveElementAt(PRInt32 aIndex);
   /**
    * Get the option at the index
    * @param aIndex the index
    * @param aReturn the option returned [OUT]
    */
-  nsIDOMHTMLOptionElement *ItemAsOption(PRInt32 aIndex)
-  {
-    return mElements.SafeObjectAt(aIndex);
-  }
-
-  /**
-   * Clears out all options
-   */
-  void Clear()
-  {
-    mElements.Clear();
-  }
-
-  /**
-   * Append an option to end of array
-   */
-  PRBool AppendOption(nsIDOMHTMLOptionElement* aOption)
-  {
-    return mElements.AppendObject(aOption);
-  }
+  nsIDOMHTMLOptionElement *ItemAsOption(PRInt32 aIndex);
 
   /**
    * Drop the reference to the select.  Called during select destruction.
@@ -256,10 +229,12 @@ public:
 
   virtual void SetFocus(nsPresContext* aPresContext);
   virtual PRBool IsFocusable(PRInt32 *aTabIndex = nsnull);
-  virtual nsresult InsertChildAt(nsIContent* aKid, PRUint32 aIndex,
-                                 PRBool aNotify);
-  virtual nsresult RemoveChildAt(PRUint32 aIndex, PRBool aNotify);
 
+  // nsGenericElement
+  virtual nsresult WillAddOrRemoveChild(nsIContent* aKid,
+                                        PRUint32 aIndex,
+                                        PRBool aRemove);
+  
   // Overriden nsIFormControl methods
   NS_IMETHOD_(PRInt32) GetType() const { return NS_FORM_SELECT; }
   NS_IMETHOD Reset();
@@ -445,17 +420,8 @@ protected:
    */
   void DispatchContentReset();
 
-  /**
-   * Rebuilds the options array from scratch as a fallback in error cases.
-   */
-  void RebuildOptionsArray();
-
-#ifdef DEBUG
-  void VerifyOptionsArray();
-#endif
-
   /** The options[] array */
-  nsRefPtr<nsHTMLOptionCollection> mOptions;
+  nsHTMLOptionCollection* mOptions;
   /** false if the parser is in the middle of adding children. */
   PRBool    mIsDoneAddingChildren;
   /** The number of non-options as children of the select */
@@ -471,7 +437,7 @@ protected:
    * The temporary restore state in case we try to restore before parser is
    * done adding options
    */
-  nsRefPtr<nsSelectState> mRestoreState;
+  nsSelectState* mRestoreState;
 };
 
 
@@ -492,20 +458,22 @@ nsHTMLSelectElement::nsHTMLSelectElement(nsINodeInfo *aNodeInfo,
     mIsDoneAddingChildren(!aFromParser),
     mNonOptionChildren(0),
     mOptGroupCount(0),
-    mSelectedIndex(-1)
+    mSelectedIndex(-1),
+    mRestoreState(nsnull)
 {
-  // FIXME: Bug 328908, set mOptions in an Init function and get rid of null
-  // checks.
-
   // DoneAddingChildren() will be called later if it's from the parser,
   // otherwise it is
+
+  NS_IF_ADDREF(mOptions);
 }
 
 nsHTMLSelectElement::~nsHTMLSelectElement()
 {
   if (mOptions) {
     mOptions->DropReference();
+    NS_RELEASE(mOptions);
   }
+  NS_IF_RELEASE(mRestoreState);
 }
 
 // ISupports
@@ -538,57 +506,17 @@ nsHTMLSelectElement::GetForm(nsIDOMHTMLFormElement** aForm)
 }
 
 nsresult
-nsHTMLSelectElement::InsertChildAt(nsIContent* aKid,
-                                   PRUint32 aIndex,
-                                   PRBool aNotify)
-{
-  PRUint32 prevOptGroups = mOptGroupCount;
-
-  nsresult rv = WillAddOptions(aKid, this, aIndex);
-  PRBool rebuild = NS_FAILED(rv);
-
-  rv = nsGenericHTMLFormElement::InsertChildAt(aKid, aIndex, aNotify);
-  if (rebuild || NS_FAILED(rv)) {
-    RebuildOptionsArray();
-    return rv;
-  }
-
-  if (mOptGroupCount && !prevOptGroups) {
-    // FIXME: Bug 328907, get rid of this event
-    DispatchDOMEvent(NS_LITERAL_STRING(""""selectHasGroups""""));
-  }
-
-#ifdef DEBUG
-  VerifyOptionsArray();
-#endif
-
-  return NS_OK;
-}
-
-nsresult
-nsHTMLSelectElement::RemoveChildAt(PRUint32 aIndex, PRBool aNotify)
+nsHTMLSelectElement::WillAddOrRemoveChild(nsIContent* aKid,
+                                          PRUint32 aIndex,
+                                          PRBool aRemove)
 {
-  PRUint32 prevOptGroups = mOptGroupCount;
-
-  nsresult rv = WillRemoveOptions(this, aIndex);
-  PRBool rebuild = NS_FAILED(rv);
-
-  rv = nsGenericHTMLFormElement::RemoveChildAt(aIndex, aNotify);
-  if (rebuild || NS_FAILED(rv)) {
-    RebuildOptionsArray();
-    return rv;
-  }
-
-  if (!mOptGroupCount && prevOptGroups) {
-    // FIXME: Bug 328907, get rid of this event
-    DispatchDOMEvent(NS_LITERAL_STRING(""""selectHasNoGroups""""));
+  if (aRemove) {
+    WillRemoveOptions(this, aIndex);
+  } else {
+    WillAddOptions(aKid, this, aIndex);
   }
 
-#ifdef DEBUG
-  VerifyOptionsArray();
-#endif
-
-  return NS_OK;
+  return nsGenericHTMLFormElement::WillAddOrRemoveChild(aKid, aIndex, aRemove);
 }
 
 
@@ -674,12 +602,16 @@ nsHTMLSelectElement::PrintOptions(nsIContent* aOptions, PRInt32 tabs)
   }
 
   // Recurse down into optgroups
-  if (IsOptGroup(aOptions)) {
-    PRUint32 numChildren = aOptions->GetChildCount();
+  //
+  // I *would* put a restriction in here to only search under
+  // optgroups (and not, for example, <P></P>), but it really
+  // doesn't *hurt* to search under other stuff and it's more
+  // efficient in the normal only-optgroup-and-option case
+  // (one less QueryInterface).
+  PRUint32 numChildren = aOptions->GetChildCount();
 
-    for (PRUint32 i = 0; i < numChildren; ++i) {
-      PrintOptions(aOptions->GetChildAt(i), tabs + 1);
-    }
+  for (PRUint32 i = 0; i < numChildren; ++i) {
+    PrintOptions(aOptions->GetChildAt(i), tabs + 1);
   }
 
   return NS_OK;
@@ -748,7 +680,7 @@ nsHTMLSelectElement::InsertOptionsIntoListRecurse(nsIContent* aOptions,
 
   nsCOMPtr<nsIDOMHTMLOptionElement> optElement(do_QueryInterface(aOptions));
   if (optElement) {
-    nsresult rv = mOptions->InsertOptionAt(optElement, *aInsertIndex);
+    nsresult rv = mOptions->InsertElementAt(optElement, *aInsertIndex);
     NS_ENSURE_SUCCESS(rv, rv);
     (*aInsertIndex)++;
     return NS_OK;
@@ -760,16 +692,24 @@ nsHTMLSelectElement::InsertOptionsIntoListRecurse(nsIContent* aOptions,
     mNonOptionChildren++;
   }
 
-  // Recurse down into optgroups
   if (IsOptGroup(aOptions)) {
     mOptGroupCount++;
+    DispatchDOMEvent(NS_LITERAL_STRING(""""selectHasGroups""""));
+  }
 
-    PRUint32 numChildren = aOptions->GetChildCount();
-    for (PRUint32 i = 0; i < numChildren; ++i) {
-      nsresult rv = InsertOptionsIntoListRecurse(aOptions->GetChildAt(i),
-                                                 aInsertIndex, aDepth+1);
-      NS_ENSURE_SUCCESS(rv, rv);
-    }
+  // Recurse down into optgroups
+  //
+  // I *would* put a restriction in here to only search under
+  // optgroups (and not, for example, <P></P>), but it really
+  // doesn't *hurt* to search under other stuff and it's more
+  // efficient in the normal only-optgroup-and-option case
+  // (one less QueryInterface).
+  PRUint32 numChildren = aOptions->GetChildCount();
+
+  for (PRUint32 i = 0; i < numChildren; ++i) {
+    nsresult rv = InsertOptionsIntoListRecurse(aOptions->GetChildAt(i),
+                                               aInsertIndex, aDepth+1);
+    NS_ENSURE_SUCCESS(rv, rv);
   }
 
   return NS_OK;
@@ -790,11 +730,8 @@ nsHTMLSelectElement::RemoveOptionsFromListRecurse(nsIContent* aOptions,
 
   nsCOMPtr<nsIDOMHTMLOptionElement> optElement(do_QueryInterface(aOptions));
   if (optElement) {
-    if (mOptions->ItemAsOption(aRemoveIndex) != optElement) {
-      NS_ERROR(""""wrong option at index"""");
-      return NS_ERROR_UNEXPECTED;
-    }
-    mOptions->RemoveOptionAt(aRemoveIndex);
+    nsresult rv = mOptions->RemoveElementAt(aRemoveIndex);
+    NS_ENSURE_SUCCESS(rv, rv);
     (*aNumRemoved)++;
     return NS_OK;
   }
@@ -804,20 +741,30 @@ nsHTMLSelectElement::RemoveOptionsFromListRecurse(nsIContent* aOptions,
     mNonOptionChildren--;
   }
 
-  // Recurse down deeper for options
-  if (mOptGroupCount && IsOptGroup(aOptions)) {
-    mOptGroupCount--;
-
-    PRUint32 numChildren = aOptions->GetChildCount();
-    for (PRUint32 i = 0; i < numChildren; ++i) {
-      nsresult rv = RemoveOptionsFromListRecurse(aOptions->GetChildAt(i),
-                                                 aRemoveIndex,
-                                                 aNumRemoved,
-                                                 aDepth + 1);
-      NS_ENSURE_SUCCESS(rv, rv);
+  if (mOptGroupCount) {
+    if (IsOptGroup(aOptions)) {
+      mOptGroupCount--;
+      DispatchDOMEvent(NS_LITERAL_STRING(""""selectHasNoGroups""""));
     }
   }
 
+  // Recurse down deeper for options
+  //
+  // I *would* put a restriction in here to only search under
+  // optgroups (and not, for example, <P></P>), but it really
+  // doesn't *hurt* to search under other stuff and it's more
+  // efficient in the normal only-optgroup-and-option case
+  // (one less QueryInterface).
+  PRUint32 numChildren = aOptions->GetChildCount();
+
+  for (PRUint32 i = 0; i < numChildren; ++i) {
+    nsresult rv = RemoveOptionsFromListRecurse(aOptions->GetChildAt(i),
+                                               aRemoveIndex,
+                                               aNumRemoved,
+                                               aDepth + 1);
+    NS_ENSURE_SUCCESS(rv, rv);
+  }
+
   return NS_OK;
 }
 
@@ -871,8 +818,9 @@ NS_IMETHODIMP
 nsHTMLSelectElement::WillRemoveOptions(nsIContent* aParent,
                                        PRInt32 aContentIndex)
 {
+  nsresult rv = NS_OK;
+
   PRInt32 level = GetContentDepth(aParent);
-  NS_ASSERTION(level >= 0, """"getting notified by unexpected content"""");
   if (level == -1) {
     return NS_ERROR_FAILURE;
   }
@@ -890,12 +838,11 @@ nsHTMLSelectElement::WillRemoveOptions(nsIContent* aParent,
       ind = GetFirstOptionIndex(currentKid);
     }
     if (ind != -1) {
-      nsresult rv = RemoveOptionsFromList(currentKid, ind, level);
-      NS_ENSURE_SUCCESS(rv, rv);
+      rv = RemoveOptionsFromList(currentKid, ind, level);
     }
   }
 
-  return NS_OK;
+  return rv;
 }
 
 PRInt32
@@ -1741,7 +1688,7 @@ nsHTMLSelectElement::DoneAddingChildren(PRBool aHaveNotified)
   // content, restore the rest of the options proper-like
   if (mRestoreState) {
     RestoreStateTo(mRestoreState);
-    mRestoreState = nsnull;
+    NS_RELEASE(mRestoreState);
   }
 
   // Notify the frame
@@ -1859,10 +1806,11 @@ nsHTMLSelectElement::HandleDOMEvent(nsPresContext* aPresContext,
 NS_IMETHODIMP
 nsHTMLSelectElement::SaveState()
 {
-  nsRefPtr<nsSelectState> state = new nsSelectState();
+  nsSelectState* state = new nsSelectState();
   if (!state) {
     return NS_ERROR_OUT_OF_MEMORY;
   }
+  NS_ADDREF(state);
 
   PRUint32 len;
   GetLength(&len);
@@ -1888,6 +1836,8 @@ nsHTMLSelectElement::SaveState()
     NS_ASSERTION(NS_SUCCEEDED(rv), """"selecteditems set failed!"""");
   }
 
+  NS_RELEASE(state);
+
   return rv;
 }
 
@@ -1927,6 +1877,7 @@ nsHTMLSelectElement::RestoreStateTo(nsSelectState* aNewSelected)
 {
   if (!mIsDoneAddingChildren) {
     mRestoreState = aNewSelected;
+    NS_ADDREF(mRestoreState);
     return;
   }
 
@@ -2099,58 +2050,6 @@ void nsHTMLSelectElement::DispatchContentReset() {
   }
 }
 
-static void
-AddOptionsRecurse(nsIContent* aRoot, nsHTMLOptionCollection* aArray)
-{
-  nsIContent* child;
-  for(PRUint32 i = 0; (child = aRoot->GetChildAt(i)); ++i) {
-    nsCOMPtr<nsIDOMHTMLOptionElement> opt = do_QueryInterface(child);
-    if (opt) {
-      // If we fail here, then at least we've tried our best
-      aArray->AppendOption(opt);
-    }
-    else if (IsOptGroup(child)) {
-      AddOptionsRecurse(child, aArray);
-    }
-  }
-}
-
-void
-nsHTMLSelectElement::RebuildOptionsArray()
-{
-  mOptions->Clear();
-  AddOptionsRecurse(this, mOptions);
-}
-
-#ifdef DEBUG
-
-static void
-VerifyOptionsRecurse(nsIContent* aRoot, PRInt32& aIndex,
-                     nsHTMLOptionCollection* aArray)
-{
-  nsIContent* child;
-  for(PRUint32 i = 0; (child = aRoot->GetChildAt(i)); ++i) {
-    nsCOMPtr<nsIDOMHTMLOptionElement> opt = do_QueryInterface(child);
-    if (opt) {
-      NS_ASSERTION(opt == aArray->ItemAsOption(aIndex++),
-                   """"Options collection broken"""");
-    }
-    else if (IsOptGroup(child)) {
-      VerifyOptionsRecurse(child, aIndex, aArray);
-    }
-  }
-}
-
-void
-nsHTMLSelectElement::VerifyOptionsArray()
-{
-  PRInt32 aIndex = 0;
-  VerifyOptionsRecurse(this, aIndex, mOptions);
-}
-
-
-#endif
-
 //----------------------------------------------------------------------
 //
 // nsHTMLOptionCollection implementation
@@ -2317,6 +2216,12 @@ nsHTMLOptionCollection::Item(PRUint32 aIndex, nsIDOMNode** aReturn)
   return NS_OK;
 }
 
+nsIDOMHTMLOptionElement *
+nsHTMLOptionCollection::ItemAsOption(PRInt32 aIndex)
+{
+  return mElements.SafeObjectAt(aIndex);
+}
+
 NS_IMETHODIMP
 nsHTMLOptionCollection::NamedItem(const nsAString& aName,
                                   nsIDOMNode** aReturn)
@@ -2350,3 +2255,16 @@ nsHTMLOptionCollection::GetSelect(nsIDOMHTMLSelectElement **aReturn)
   NS_IF_ADDREF(*aReturn = mSelect);
   return NS_OK;
 }
+
+nsresult
+nsHTMLOptionCollection::InsertElementAt(nsIDOMHTMLOptionElement* aOption,
+                                        PRInt32 aIndex)
+{
+  return mElements.InsertObjectAt(aOption, aIndex);
+}
+
+nsresult
+nsHTMLOptionCollection::RemoveElementAt(PRInt32 aIndex)
+{
+  return mElements.RemoveObjectAt(aIndex);
+}"""
110dfb567974f3b867b3a6c035956bae5c6ee314,125626,326615,brendan%mozilla.org,"Need another auto-mark thingie (326615, r=mrbkap).
",1141245289,"""diff --git a/js/src/xpconnect/src/xpcwrappedjsclass.cpp b/js/src/xpconnect/src/xpcwrappedjsclass.cpp
index 04c88f8..1e95991 100644
--- a/js/src/xpconnect/src/xpcwrappedjsclass.cpp
+++ b/js/src/xpconnect/src/xpcwrappedjsclass.cpp
@@ -1347,6 +1347,9 @@ pre_call_clean_up:
     result = JSVAL_NULL;
     AUTO_MARK_JSVAL(ccx, &result);
 
+    result = JSVAL_NULL;
+    AUTO_MARK_JSVAL(ccx, &result);
+
     if(!readyToDoTheCall)
         goto done;
 """
e686e7b714839edba6b6be7da7433206d8bc0a7b,125675,324918,cvshook%sicking.cc,"Bug 324918: Make nsHTMLSelectElement deal better with options in unknown children. r=bz sr=jst
",1141175420,"""diff --git a/content/html/content/src/nsHTMLSelectElement.cpp b/content/html/content/src/nsHTMLSelectElement.cpp
index 96bf6b7..ca0a2c0 100644
--- a/content/html/content/src/nsHTMLSelectElement.cpp
+++ b/content/html/content/src/nsHTMLSelectElement.cpp
@@ -117,18 +117,45 @@ public:
    * @param aOption the option to insert
    * @param aIndex the index to insert at
    */
-  nsresult InsertElementAt(nsIDOMHTMLOptionElement* aOption, PRInt32 aIndex);
+  PRBool InsertOptionAt(nsIDOMHTMLOptionElement* aOption, PRInt32 aIndex)
+  {
+    return mElements.InsertObjectAt(aOption, aIndex);
+  }
+
   /**
    * Remove an option
    * @param aIndex the index of the option to remove
    */
-  nsresult RemoveElementAt(PRInt32 aIndex);
+  void RemoveOptionAt(PRInt32 aIndex)
+  {
+    mElements.RemoveObjectAt(aIndex);
+  }
+
   /**
    * Get the option at the index
    * @param aIndex the index
    * @param aReturn the option returned [OUT]
    */
-  nsIDOMHTMLOptionElement *ItemAsOption(PRInt32 aIndex);
+  nsIDOMHTMLOptionElement *ItemAsOption(PRInt32 aIndex)
+  {
+    return mElements.SafeObjectAt(aIndex);
+  }
+
+  /**
+   * Clears out all options
+   */
+  void Clear()
+  {
+    mElements.Clear();
+  }
+
+  /**
+   * Append an option to end of array
+   */
+  PRBool AppendOption(nsIDOMHTMLOptionElement* aOption)
+  {
+    return mElements.AppendObject(aOption);
+  }
 
   /**
    * Drop the reference to the select.  Called during select destruction.
@@ -229,12 +256,10 @@ public:
 
   virtual void SetFocus(nsPresContext* aPresContext);
   virtual PRBool IsFocusable(PRInt32 *aTabIndex = nsnull);
+  virtual nsresult InsertChildAt(nsIContent* aKid, PRUint32 aIndex,
+                                 PRBool aNotify);
+  virtual nsresult RemoveChildAt(PRUint32 aIndex, PRBool aNotify);
 
-  // nsGenericElement
-  virtual nsresult WillAddOrRemoveChild(nsIContent* aKid,
-                                        PRUint32 aIndex,
-                                        PRBool aRemove);
-  
   // Overriden nsIFormControl methods
   NS_IMETHOD_(PRInt32) GetType() const { return NS_FORM_SELECT; }
   NS_IMETHOD Reset();
@@ -420,8 +445,17 @@ protected:
    */
   void DispatchContentReset();
 
+  /**
+   * Rebuilds the options array from scratch as a fallback in error cases.
+   */
+  void RebuildOptionsArray();
+
+#ifdef DEBUG
+  void VerifyOptionsArray();
+#endif
+
   /** The options[] array */
-  nsHTMLOptionCollection* mOptions;
+  nsRefPtr<nsHTMLOptionCollection> mOptions;
   /** false if the parser is in the middle of adding children. */
   PRBool    mIsDoneAddingChildren;
   /** The number of non-options as children of the select */
@@ -437,7 +471,7 @@ protected:
    * The temporary restore state in case we try to restore before parser is
    * done adding options
    */
-  nsSelectState* mRestoreState;
+  nsRefPtr<nsSelectState> mRestoreState;
 };
 
 
@@ -458,22 +492,20 @@ nsHTMLSelectElement::nsHTMLSelectElement(nsINodeInfo *aNodeInfo,
     mIsDoneAddingChildren(!aFromParser),
     mNonOptionChildren(0),
     mOptGroupCount(0),
-    mSelectedIndex(-1),
-    mRestoreState(nsnull)
+    mSelectedIndex(-1)
 {
+  // FIXME: Bug 328908, set mOptions in an Init function and get rid of null
+  // checks.
+
   // DoneAddingChildren() will be called later if it's from the parser,
   // otherwise it is
-
-  NS_IF_ADDREF(mOptions);
 }
 
 nsHTMLSelectElement::~nsHTMLSelectElement()
 {
   if (mOptions) {
     mOptions->DropReference();
-    NS_RELEASE(mOptions);
   }
-  NS_IF_RELEASE(mRestoreState);
 }
 
 // ISupports
@@ -506,17 +538,57 @@ nsHTMLSelectElement::GetForm(nsIDOMHTMLFormElement** aForm)
 }
 
 nsresult
-nsHTMLSelectElement::WillAddOrRemoveChild(nsIContent* aKid,
-                                          PRUint32 aIndex,
-                                          PRBool aRemove)
+nsHTMLSelectElement::InsertChildAt(nsIContent* aKid,
+                                   PRUint32 aIndex,
+                                   PRBool aNotify)
 {
-  if (aRemove) {
-    WillRemoveOptions(this, aIndex);
-  } else {
-    WillAddOptions(aKid, this, aIndex);
+  PRUint32 prevOptGroups = mOptGroupCount;
+
+  nsresult rv = WillAddOptions(aKid, this, aIndex);
+  PRBool rebuild = NS_FAILED(rv);
+
+  rv = nsGenericHTMLFormElement::InsertChildAt(aKid, aIndex, aNotify);
+  if (rebuild || NS_FAILED(rv)) {
+    RebuildOptionsArray();
+    return rv;
+  }
+
+  if (mOptGroupCount && !prevOptGroups) {
+    // FIXME: Bug 328907, get rid of this event
+    DispatchDOMEvent(NS_LITERAL_STRING(""""selectHasGroups""""));
+  }
+
+#ifdef DEBUG
+  VerifyOptionsArray();
+#endif
+
+  return NS_OK;
+}
+
+nsresult
+nsHTMLSelectElement::RemoveChildAt(PRUint32 aIndex, PRBool aNotify)
+{
+  PRUint32 prevOptGroups = mOptGroupCount;
+
+  nsresult rv = WillRemoveOptions(this, aIndex);
+  PRBool rebuild = NS_FAILED(rv);
+
+  rv = nsGenericHTMLFormElement::RemoveChildAt(aIndex, aNotify);
+  if (rebuild || NS_FAILED(rv)) {
+    RebuildOptionsArray();
+    return rv;
   }
 
-  return nsGenericHTMLFormElement::WillAddOrRemoveChild(aKid, aIndex, aRemove);
+  if (!mOptGroupCount && prevOptGroups) {
+    // FIXME: Bug 328907, get rid of this event
+    DispatchDOMEvent(NS_LITERAL_STRING(""""selectHasNoGroups""""));
+  }
+
+#ifdef DEBUG
+  VerifyOptionsArray();
+#endif
+
+  return NS_OK;
 }
 
 
@@ -602,16 +674,12 @@ nsHTMLSelectElement::PrintOptions(nsIContent* aOptions, PRInt32 tabs)
   }
 
   // Recurse down into optgroups
-  //
-  // I *would* put a restriction in here to only search under
-  // optgroups (and not, for example, <P></P>), but it really
-  // doesn't *hurt* to search under other stuff and it's more
-  // efficient in the normal only-optgroup-and-option case
-  // (one less QueryInterface).
-  PRUint32 numChildren = aOptions->GetChildCount();
+  if (IsOptGroup(aOptions)) {
+    PRUint32 numChildren = aOptions->GetChildCount();
 
-  for (PRUint32 i = 0; i < numChildren; ++i) {
-    PrintOptions(aOptions->GetChildAt(i), tabs + 1);
+    for (PRUint32 i = 0; i < numChildren; ++i) {
+      PrintOptions(aOptions->GetChildAt(i), tabs + 1);
+    }
   }
 
   return NS_OK;
@@ -680,7 +748,7 @@ nsHTMLSelectElement::InsertOptionsIntoListRecurse(nsIContent* aOptions,
 
   nsCOMPtr<nsIDOMHTMLOptionElement> optElement(do_QueryInterface(aOptions));
   if (optElement) {
-    nsresult rv = mOptions->InsertElementAt(optElement, *aInsertIndex);
+    nsresult rv = mOptions->InsertOptionAt(optElement, *aInsertIndex);
     NS_ENSURE_SUCCESS(rv, rv);
     (*aInsertIndex)++;
     return NS_OK;
@@ -692,24 +760,16 @@ nsHTMLSelectElement::InsertOptionsIntoListRecurse(nsIContent* aOptions,
     mNonOptionChildren++;
   }
 
+  // Recurse down into optgroups
   if (IsOptGroup(aOptions)) {
     mOptGroupCount++;
-    DispatchDOMEvent(NS_LITERAL_STRING(""""selectHasGroups""""));
-  }
 
-  // Recurse down into optgroups
-  //
-  // I *would* put a restriction in here to only search under
-  // optgroups (and not, for example, <P></P>), but it really
-  // doesn't *hurt* to search under other stuff and it's more
-  // efficient in the normal only-optgroup-and-option case
-  // (one less QueryInterface).
-  PRUint32 numChildren = aOptions->GetChildCount();
-
-  for (PRUint32 i = 0; i < numChildren; ++i) {
-    nsresult rv = InsertOptionsIntoListRecurse(aOptions->GetChildAt(i),
-                                               aInsertIndex, aDepth+1);
-    NS_ENSURE_SUCCESS(rv, rv);
+    PRUint32 numChildren = aOptions->GetChildCount();
+    for (PRUint32 i = 0; i < numChildren; ++i) {
+      nsresult rv = InsertOptionsIntoListRecurse(aOptions->GetChildAt(i),
+                                                 aInsertIndex, aDepth+1);
+      NS_ENSURE_SUCCESS(rv, rv);
+    }
   }
 
   return NS_OK;
@@ -730,8 +790,11 @@ nsHTMLSelectElement::RemoveOptionsFromListRecurse(nsIContent* aOptions,
 
   nsCOMPtr<nsIDOMHTMLOptionElement> optElement(do_QueryInterface(aOptions));
   if (optElement) {
-    nsresult rv = mOptions->RemoveElementAt(aRemoveIndex);
-    NS_ENSURE_SUCCESS(rv, rv);
+    if (mOptions->ItemAsOption(aRemoveIndex) != optElement) {
+      NS_ERROR(""""wrong option at index"""");
+      return NS_ERROR_UNEXPECTED;
+    }
+    mOptions->RemoveOptionAt(aRemoveIndex);
     (*aNumRemoved)++;
     return NS_OK;
   }
@@ -741,28 +804,18 @@ nsHTMLSelectElement::RemoveOptionsFromListRecurse(nsIContent* aOptions,
     mNonOptionChildren--;
   }
 
-  if (mOptGroupCount) {
-    if (IsOptGroup(aOptions)) {
-      mOptGroupCount--;
-      DispatchDOMEvent(NS_LITERAL_STRING(""""selectHasNoGroups""""));
-    }
-  }
-
   // Recurse down deeper for options
-  //
-  // I *would* put a restriction in here to only search under
-  // optgroups (and not, for example, <P></P>), but it really
-  // doesn't *hurt* to search under other stuff and it's more
-  // efficient in the normal only-optgroup-and-option case
-  // (one less QueryInterface).
-  PRUint32 numChildren = aOptions->GetChildCount();
-
-  for (PRUint32 i = 0; i < numChildren; ++i) {
-    nsresult rv = RemoveOptionsFromListRecurse(aOptions->GetChildAt(i),
-                                               aRemoveIndex,
-                                               aNumRemoved,
-                                               aDepth + 1);
-    NS_ENSURE_SUCCESS(rv, rv);
+  if (mOptGroupCount && IsOptGroup(aOptions)) {
+    mOptGroupCount--;
+
+    PRUint32 numChildren = aOptions->GetChildCount();
+    for (PRUint32 i = 0; i < numChildren; ++i) {
+      nsresult rv = RemoveOptionsFromListRecurse(aOptions->GetChildAt(i),
+                                                 aRemoveIndex,
+                                                 aNumRemoved,
+                                                 aDepth + 1);
+      NS_ENSURE_SUCCESS(rv, rv);
+    }
   }
 
   return NS_OK;
@@ -818,9 +871,8 @@ NS_IMETHODIMP
 nsHTMLSelectElement::WillRemoveOptions(nsIContent* aParent,
                                        PRInt32 aContentIndex)
 {
-  nsresult rv = NS_OK;
-
   PRInt32 level = GetContentDepth(aParent);
+  NS_ASSERTION(level >= 0, """"getting notified by unexpected content"""");
   if (level == -1) {
     return NS_ERROR_FAILURE;
   }
@@ -838,11 +890,12 @@ nsHTMLSelectElement::WillRemoveOptions(nsIContent* aParent,
       ind = GetFirstOptionIndex(currentKid);
     }
     if (ind != -1) {
-      rv = RemoveOptionsFromList(currentKid, ind, level);
+      nsresult rv = RemoveOptionsFromList(currentKid, ind, level);
+      NS_ENSURE_SUCCESS(rv, rv);
     }
   }
 
-  return rv;
+  return NS_OK;
 }
 
 PRInt32
@@ -1688,7 +1741,7 @@ nsHTMLSelectElement::DoneAddingChildren(PRBool aHaveNotified)
   // content, restore the rest of the options proper-like
   if (mRestoreState) {
     RestoreStateTo(mRestoreState);
-    NS_RELEASE(mRestoreState);
+    mRestoreState = nsnull;
   }
 
   // Notify the frame
@@ -1806,11 +1859,10 @@ nsHTMLSelectElement::HandleDOMEvent(nsPresContext* aPresContext,
 NS_IMETHODIMP
 nsHTMLSelectElement::SaveState()
 {
-  nsSelectState* state = new nsSelectState();
+  nsRefPtr<nsSelectState> state = new nsSelectState();
   if (!state) {
     return NS_ERROR_OUT_OF_MEMORY;
   }
-  NS_ADDREF(state);
 
   PRUint32 len;
   GetLength(&len);
@@ -1836,8 +1888,6 @@ nsHTMLSelectElement::SaveState()
     NS_ASSERTION(NS_SUCCEEDED(rv), """"selecteditems set failed!"""");
   }
 
-  NS_RELEASE(state);
-
   return rv;
 }
 
@@ -1877,7 +1927,6 @@ nsHTMLSelectElement::RestoreStateTo(nsSelectState* aNewSelected)
 {
   if (!mIsDoneAddingChildren) {
     mRestoreState = aNewSelected;
-    NS_ADDREF(mRestoreState);
     return;
   }
 
@@ -2050,6 +2099,58 @@ void nsHTMLSelectElement::DispatchContentReset() {
   }
 }
 
+static void
+AddOptionsRecurse(nsIContent* aRoot, nsHTMLOptionCollection* aArray)
+{
+  nsIContent* child;
+  for(PRUint32 i = 0; (child = aRoot->GetChildAt(i)); ++i) {
+    nsCOMPtr<nsIDOMHTMLOptionElement> opt = do_QueryInterface(child);
+    if (opt) {
+      // If we fail here, then at least we've tried our best
+      aArray->AppendOption(opt);
+    }
+    else if (IsOptGroup(child)) {
+      AddOptionsRecurse(child, aArray);
+    }
+  }
+}
+
+void
+nsHTMLSelectElement::RebuildOptionsArray()
+{
+  mOptions->Clear();
+  AddOptionsRecurse(this, mOptions);
+}
+
+#ifdef DEBUG
+
+static void
+VerifyOptionsRecurse(nsIContent* aRoot, PRInt32& aIndex,
+                     nsHTMLOptionCollection* aArray)
+{
+  nsIContent* child;
+  for(PRUint32 i = 0; (child = aRoot->GetChildAt(i)); ++i) {
+    nsCOMPtr<nsIDOMHTMLOptionElement> opt = do_QueryInterface(child);
+    if (opt) {
+      NS_ASSERTION(opt == aArray->ItemAsOption(aIndex++),
+                   """"Options collection broken"""");
+    }
+    else if (IsOptGroup(child)) {
+      VerifyOptionsRecurse(child, aIndex, aArray);
+    }
+  }
+}
+
+void
+nsHTMLSelectElement::VerifyOptionsArray()
+{
+  PRInt32 aIndex = 0;
+  VerifyOptionsRecurse(this, aIndex, mOptions);
+}
+
+
+#endif
+
 //----------------------------------------------------------------------
 //
 // nsHTMLOptionCollection implementation
@@ -2216,12 +2317,6 @@ nsHTMLOptionCollection::Item(PRUint32 aIndex, nsIDOMNode** aReturn)
   return NS_OK;
 }
 
-nsIDOMHTMLOptionElement *
-nsHTMLOptionCollection::ItemAsOption(PRInt32 aIndex)
-{
-  return mElements.SafeObjectAt(aIndex);
-}
-
 NS_IMETHODIMP
 nsHTMLOptionCollection::NamedItem(const nsAString& aName,
                                   nsIDOMNode** aReturn)
@@ -2255,16 +2350,3 @@ nsHTMLOptionCollection::GetSelect(nsIDOMHTMLSelectElement **aReturn)
   NS_IF_ADDREF(*aReturn = mSelect);
   return NS_OK;
 }
-
-nsresult
-nsHTMLOptionCollection::InsertElementAt(nsIDOMHTMLOptionElement* aOption,
-                                        PRInt32 aIndex)
-{
-  return mElements.InsertObjectAt(aOption, aIndex);
-}
-
-nsresult
-nsHTMLOptionCollection::RemoveElementAt(PRInt32 aIndex)
-{
-  return mElements.RemoveObjectAt(aIndex);
-}
diff --git a/xpcom/glue/nsCOMArray.cpp b/xpcom/glue/nsCOMArray.cpp
index 37c3af8..fa07084 100644
--- a/xpcom/glue/nsCOMArray.cpp
+++ b/xpcom/glue/nsCOMArray.cpp
@@ -134,11 +134,14 @@ nsCOMArray_base::RemoveObject(nsISupports *aObject)
 PRBool
 nsCOMArray_base::RemoveObjectAt(PRInt32 aIndex)
 {
-    nsISupports* element = ObjectAt(aIndex);
-    PRBool result = mArray.RemoveElementAt(aIndex);
-    if (result)
+    if (PRUint32(aIndex) < PRUint32(Count())) {
+        nsISupports* element = ObjectAt(aIndex);
         NS_IF_RELEASE(element);
-    return result;
+
+        return mArray.RemoveElementAt(aIndex);
+    }
+
+    return PR_FALSE;
 }
 
 // useful for destructors"""
6bde4c2cd19cacbd835ca65daa8e13d8f17ee6bc,125706,328566,Olli.Pettay%helsinki.fi,"Bug 328566, r+sr=bz
",1141144891,"""diff --git a/content/html/content/src/nsHTMLInputElement.cpp b/content/html/content/src/nsHTMLInputElement.cpp
index f77feec..78906c5 100644
--- a/content/html/content/src/nsHTMLInputElement.cpp
+++ b/content/html/content/src/nsHTMLInputElement.cpp
@@ -1276,6 +1276,13 @@ nsHTMLInputElement::HandleDOMEvent(nsPresContext* aPresContext,
     }
   }
 
+  // Don't allow mutation events which are targeted somewhere inside
+  // <input>, except if they are dispatched to the element itself.
+  if (!(NS_EVENT_FLAG_INIT & aFlags) &&
+      aEvent->eventStructType == NS_MUTATION_EVENT) {
+    return NS_OK;
+  }
+
   //
   // Web pages expect the value of a radio button or checkbox to be set
   // *before* onclick and DOMActivate fire, and they expect that if they set"""
8fce62562ab7276d0f7d07c19efd21f238ba344e,125720,326615,brendan%mozilla.org,"Local auto-marker needed (326615, r=mrbkap).
",1141112461,"""diff --git a/js/src/xpconnect/src/xpcwrappedjsclass.cpp b/js/src/xpconnect/src/xpcwrappedjsclass.cpp
index d5e8d2f..04c88f8 100644
--- a/js/src/xpconnect/src/xpcwrappedjsclass.cpp
+++ b/js/src/xpconnect/src/xpcwrappedjsclass.cpp
@@ -1344,6 +1344,9 @@ pre_call_clean_up:
     // Make sure """"this"""" doesn't get deleted during this call.
     nsCOMPtr<nsIXPCWrappedJSClass> kungFuDeathGrip(this);
 
+    result = JSVAL_NULL;
+    AUTO_MARK_JSVAL(ccx, &result);
+
     if(!readyToDoTheCall)
         goto done;
 """
da4fef3700b4c78460932e86c385019dc89bbb80,125992,327941,brendan%mozilla.org,"Fix an initially hard-to-see bug reported by daumling@adobe.com, plus another one mentioned by mrbkap (327941, r=mrbkap).
",1140588549,"""diff --git a/js/src/jsxml.c b/js/src/jsxml.c
index f603979..ae6d7a1 100644
--- a/js/src/jsxml.c
+++ b/js/src/jsxml.c
@@ -4743,6 +4743,7 @@ ResolveValue(JSContext *cx, JSXML *list, JSXML **result)
 {
     JSXML *target, *base;
     JSXMLQName *targetprop;
+    JSObject *targetpropobj;
     jsval id, tv;
 
     /* Our caller must be protecting newborn objects. */
@@ -4757,10 +4758,15 @@ ResolveValue(JSContext *cx, JSXML *list, JSXML **result)
 
     target = list->xml_target;
     targetprop = list->xml_targetprop;
-    if (!target ||
-        !targetprop ||
-        OBJ_GET_CLASS(cx, targetprop->object) == &js_AttributeNameClass ||
-        IS_STAR(targetprop->localName)) {
+    if (!target || !targetprop || IS_STAR(targetprop->localName)) {
+        *result = NULL;
+        return JS_TRUE;
+    }
+
+    targetpropobj = js_GetXMLQNameObject(cx, targetprop);
+    if (!targetpropobj)
+        return JS_FALSE;
+    if (OBJ_GET_CLASS(cx, targetpropobj) == &js_AttributeNameClass) {
         *result = NULL;
         return JS_TRUE;
     }
@@ -4774,7 +4780,7 @@ ResolveValue(JSContext *cx, JSXML *list, JSXML **result)
     if (!js_GetXMLObject(cx, base))
         return JS_FALSE;
 
-    id = OBJECT_TO_JSVAL(targetprop->object);
+    id = OBJECT_TO_JSVAL(targetpropobj);
     if (!GetProperty(cx, base->object, id, &tv))
         return JS_FALSE;
     target = (JSXML *) JS_GetPrivate(cx, JSVAL_TO_OBJECT(tv));
@@ -7238,9 +7244,9 @@ xml_mark_tail(JSContext *cx, JSXML *xml, void *arg)
 
     if (xml->xml_class == JSXML_CLASS_LIST) {
         if (xml->xml_target)
-            js_MarkXML(cx, xml->xml_target, arg);
+            JS_MarkGCThing(cx, xml->xml_target, """"target"""", arg);
         if (xml->xml_targetprop)
-            js_MarkXMLQName(cx, xml->xml_targetprop, arg);
+            JS_MarkGCThing(cx, xml->xml_targetprop, """"targetprop"""", arg);
     } else {
         namespace_mark_vector(cx,
                               (JSXMLNamespace **) xml->xml_namespaces.vector,"""
71a3a095b8f8151b380493e7101cdbfb12e10a2f,126100,327712,dbaron%dbaron.org,"Fix rooting in nsXBLProtoImplProperty::InstallMember and remove some no-longer-needed null checks of cx.  b=327712  r+sr=bzbarsky
",1140503836,"""diff --git a/content/xbl/src/nsXBLProtoImplMethod.cpp b/content/xbl/src/nsXBLProtoImplMethod.cpp
index 7a3d9fd..e6e3199 100644
--- a/content/xbl/src/nsXBLProtoImplMethod.cpp
+++ b/content/xbl/src/nsXBLProtoImplMethod.cpp
@@ -255,12 +255,8 @@ nsXBLProtoImplMethod::CompileMember(nsIScriptContext* aContext, const nsCString&
 
   if (methodObject) {
     // Root the compiled prototype script object.
-    JSContext* cx = NS_REINTERPRET_CAST(JSContext*,
-                                        aContext->GetNativeContext());
-    rv = cx ?
-      nsContentUtils::AddJSGCRoot(&mJSMethodObject,
-                                  """"nsXBLProtoImplMethod::mJSMethodObject"""") :
-      NS_ERROR_UNEXPECTED;
+    rv = nsContentUtils::AddJSGCRoot(&mJSMethodObject,
+                                     """"nsXBLProtoImplMethod::mJSMethodObject"""");
     if (NS_FAILED(rv)) {
       mJSMethodObject = nsnull;
     }
diff --git a/content/xbl/src/nsXBLProtoImplProperty.cpp b/content/xbl/src/nsXBLProtoImplProperty.cpp
index 66c627c..0c99e39 100644
--- a/content/xbl/src/nsXBLProtoImplProperty.cpp
+++ b/content/xbl/src/nsXBLProtoImplProperty.cpp
@@ -199,7 +199,7 @@ nsXBLProtoImplProperty::InstallMember(nsIScriptContext* aContext,
         return NS_ERROR_OUT_OF_MEMORY;
 
     nsresult rv;
-    nsAutoGCRoot(&getter, &rv);
+    nsAutoGCRoot getterroot(&getter, &rv);
     NS_ENSURE_SUCCESS(rv, rv);
     
     JSObject * setter = nsnull;
@@ -207,6 +207,9 @@ nsXBLProtoImplProperty::InstallMember(nsIScriptContext* aContext,
       if (!(setter = ::JS_CloneFunctionObject(cx, mJSSetterObject, globalObject)))
         return NS_ERROR_OUT_OF_MEMORY;
 
+    nsAutoGCRoot setterroot(&setter, &rv);
+    NS_ENSURE_SUCCESS(rv, rv);
+    
     nsDependentString name(mName);
     if (!::JS_DefineUCProperty(cx, targetClassObject,
                                NS_REINTERPRET_CAST(const jschar*, mName), 
@@ -267,12 +270,8 @@ nsXBLProtoImplProperty::CompileMember(nsIScriptContext* aContext, const nsCStrin
       if (mJSGetterObject && NS_SUCCEEDED(rv)) {
         mJSAttributes |= JSPROP_GETTER | JSPROP_SHARED;
         // Root the compiled prototype script object.
-        JSContext* cx = NS_REINTERPRET_CAST(JSContext*,
-                                            aContext->GetNativeContext());
-        rv = (cx)
-          ? nsContentUtils::AddJSGCRoot(&mJSGetterObject,
-                                        """"nsXBLProtoImplProperty::mJSGetterObject"""")
-          : NS_ERROR_UNEXPECTED;
+        rv = nsContentUtils::AddJSGCRoot(&mJSGetterObject,
+                                         """"nsXBLProtoImplProperty::mJSGetterObject"""");
       }
       if (NS_FAILED(rv)) {
         mJSGetterObject = nsnull;
@@ -323,12 +322,8 @@ nsXBLProtoImplProperty::CompileMember(nsIScriptContext* aContext, const nsCStrin
       if (mJSSetterObject && NS_SUCCEEDED(rv)) {
         mJSAttributes |= JSPROP_SETTER | JSPROP_SHARED;
         // Root the compiled prototype script object.
-        JSContext* cx = NS_REINTERPRET_CAST(JSContext*,
-                                            aContext->GetNativeContext());
-        rv = (cx)
-          ? nsContentUtils::AddJSGCRoot(&mJSSetterObject,
-                                        """"nsXBLProtoImplProperty::mJSSetterObject"""")
-          : NS_ERROR_UNEXPECTED;
+        rv = nsContentUtils::AddJSGCRoot(&mJSSetterObject,
+                                         """"nsXBLProtoImplProperty::mJSSetterObject"""");
       }
       if (NS_FAILED(rv)) {
         mJSSetterObject = nsnull;"""
87c1efa8fa1526fbcbd16c2920f087ef2ecd0327,126640,326834,bzbarsky%mit.edu,"Fix bug 326834 -- more care needed with listboxes. r+sr=roc
",1139780265,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index 89dd29c..ba471bc6 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -9330,13 +9330,19 @@ PRBool NotifyListBoxBody(nsPresContext*    aPresContext,
       nsIListBoxObject* listboxBody = listBoxObject->GetListBoxBody();
       if (listboxBody) {
         nsListBoxBodyFrame *listBoxBodyFrame = NS_STATIC_CAST(nsListBoxBodyFrame*, listboxBody);
-        if (aOperation == CONTENT_REMOVED)
-          listBoxBodyFrame->OnContentRemoved(aPresContext, aChildFrame, aIndexInContainer);
-        else
+        if (aOperation == CONTENT_REMOVED) {
+          // Except if we have an aChildFrame and its parent is not the right
+          // thing, then we don't do this.  Pseudo frames are so much fun....
+          if (!aChildFrame || aChildFrame->GetParent() == listBoxBodyFrame) {
+            listBoxBodyFrame->OnContentRemoved(aPresContext, aChildFrame,
+                                               aIndexInContainer);
+            return PR_TRUE;
+          }
+        } else {
           listBoxBodyFrame->OnContentInserted(aPresContext, aChild);
-        //NS_RELEASE(listBoxBodyFrame); frames aren't refcounted
+          return PR_TRUE;
+        }
       }
-      return PR_TRUE;
     }
   }
 
diff --git a/layout/xul/base/src/nsListBoxBodyFrame.cpp b/layout/xul/base/src/nsListBoxBodyFrame.cpp
index 745baa7..f455b3f 100644
--- a/layout/xul/base/src/nsListBoxBodyFrame.cpp
+++ b/layout/xul/base/src/nsListBoxBodyFrame.cpp
@@ -1318,6 +1318,9 @@ nsListBoxBodyFrame::OnContentInserted(nsPresContext* aPresContext, nsIContent* a
 void
 nsListBoxBodyFrame::OnContentRemoved(nsPresContext* aPresContext, nsIFrame* aChildFrame, PRInt32 aIndex)
 {
+  NS_ASSERTION(!aChildFrame || aChildFrame->GetParent() == this,
+               """"Removing frame that's not our child... Not good"""");
+  
   if (mRowCount >= 0)
     --mRowCount;
 
@@ -1436,7 +1439,12 @@ nsListBoxBodyFrame::RemoveChildFrame(nsBoxLayoutState &aState,
   nsCSSFrameConstructor* fc = presContext->PresShell()->FrameConstructor();
   fc->RemoveMappingsForFrameSubtree(aFrame);
 
-  mFrames.RemoveFrame(aFrame);
+#ifdef DEBUG
+  PRBool removed =
+#endif
+    mFrames.RemoveFrame(aFrame);
+  NS_ASSERTION(removed,
+               """"Going to destroy a frame we didn't remove.  Prepare to crash"""");
   if (mLayoutManager)
     mLayoutManager->ChildrenRemoved(this, aState, aFrame);
   aFrame->Destroy(presContext);"""
0c4361d44384a7b4c2997ddcbc59fab64f4e4711,126891,325947,bzbarsky%mit.edu,"Better mType management when type changes.  Bug 325947, r=sicking, sr=dveditz
",1139502846,"""diff --git a/content/html/content/src/nsHTMLInputElement.cpp b/content/html/content/src/nsHTMLInputElement.cpp
index db0d484..f77feec 100644
--- a/content/html/content/src/nsHTMLInputElement.cpp
+++ b/content/html/content/src/nsHTMLInputElement.cpp
@@ -1757,8 +1757,14 @@ nsHTMLInputElement::ParseAttribute(PRInt32 aNamespaceID,
         return PR_FALSE;
       }
 
-      mType = aResult.GetEnumValue();
-      if (mType == NS_FORM_INPUT_FILE) {
+      // Make sure to do the check for newType being NS_FORM_INPUT_FILE and the
+      // corresponding SetValueInternal() call _before_ we set mType.  That way
+      // the logic in SetValueInternal() will work right (that logic makes
+      // assumptions about our frame based on mType, but we won't have had time
+      // to recreate frames yet -- that happens later in the SetAttr()
+      // process).
+      PRInt8 newType = aResult.GetEnumValue();
+      if (newType == NS_FORM_INPUT_FILE) {
         // If the type is being changed to file, set the element value
         // to the empty string. This is for security.
         // Call SetValueInternal so that this doesn't accidentally get caught
@@ -1766,6 +1772,8 @@ nsHTMLInputElement::ParseAttribute(PRInt32 aNamespaceID,
         SetValueInternal(EmptyString(), nsnull);
       }
 
+      mType = newType;
+
       return PR_TRUE;
     }
     if (aAttribute == nsHTMLAtoms::width) {"""
38041b1d430f897b61bfb02c06b5c28537c69a65,126962,325991,bzbarsky%mit.edu,"Fix bug 325991 -- spinning event queues requires more care.  r=jst, sr=shaver
",1139351087,"""diff --git a/caps/src/nsScriptSecurityManager.cpp b/caps/src/nsScriptSecurityManager.cpp
index ea3e77a..85696a5 100644
--- a/caps/src/nsScriptSecurityManager.cpp
+++ b/caps/src/nsScriptSecurityManager.cpp
@@ -1558,6 +1558,13 @@ nsScriptSecurityManager::CanExecuteScripts(JSContext* cx,
     //-- See if the current window allows JS execution
     nsIScriptContext *scriptContext = GetScriptContext(cx);
     if (!scriptContext) return NS_ERROR_FAILURE;
+
+    if (!scriptContext->GetScriptsEnabled()) {
+        // No scripting on this context, folks
+        *result = PR_FALSE;
+        return NS_OK;
+    }
+    
     nsIScriptGlobalObject *sgo = scriptContext->GetGlobalObject();
 
     if (!sgo) {
diff --git a/layout/printing/nsPrintEngine.cpp b/layout/printing/nsPrintEngine.cpp
index c33d9a3..15d749d 100644
--- a/layout/printing/nsPrintEngine.cpp
+++ b/layout/printing/nsPrintEngine.cpp
@@ -2506,46 +2506,6 @@ nsPrintEngine::ReflowDocList(nsPrintObject* aPO, PRBool aSetPixelScale, PRBool a
   return NS_OK;
 }
 
-PR_STATIC_CALLBACK(void *)
-HandleBarrierEvent(PLEvent *aEvent)
-{
-  PRBool *b = NS_STATIC_CAST(PRBool *, PL_GetEventOwner(aEvent));
-  *b = PR_TRUE;
-  return nsnull;
-}
-
-PR_STATIC_CALLBACK(void)
-DestroyBarrierEvent(PLEvent *aEvent)
-{
-}
-
-static void
-FlushEventQueue()
-{
-  PRBool hitBarrier = PR_FALSE;
-  nsCOMPtr<nsIEventQueue> eventQ;
-  nsresult rv = NS_GetMainEventQ(getter_AddRefs(eventQ));
-  if (NS_FAILED(rv))
-    return;
-
-  PLEvent evt;
-
-  PL_InitEvent(&evt, &hitBarrier, HandleBarrierEvent, DestroyBarrierEvent);
-
-  if (NS_FAILED(eventQ->PostEvent(&evt)))
-    return;
-
-  while (!hitBarrier) {
-    PLEvent *next;
-    eventQ->GetEvent(&next);
-    if (!next) {
-      NS_ERROR(""""barrier event not found!"""");
-      return;
-    }
-    eventQ->HandleEvent(next);
-  }
-}
-
 //-------------------------------------------------------
 // Reflow a nsPrintObject
 nsresult
@@ -2756,7 +2716,6 @@ nsPrintEngine::ReflowPrintObject(nsPrintObject * aPO, PRBool aDoCalcShrink)
 
   aPO->mPresContext->SetPageDim(adjRect);
   rv = aPO->mPresShell->InitialReflow(width, height);
-  FlushEventQueue();
   if (NS_SUCCEEDED(rv)) {
     // Transfer Selection Ranges to the new Print PresShell
     nsCOMPtr<nsISelection> selection;"""
e9a0b3556174436043e8ebd71332e664abec65f3,126974,325425,mrbkap%gmail.com,"Protect js_ConstructObject callers from gc hazards and some other stuff. bug 325425, r=igor sr=brendan
",1139342993,"""diff --git a/js/src/js.msg b/js/src/js.msg
index 2e5f841..052c962 100644
--- a/js/src/js.msg
+++ b/js/src/js.msg
@@ -286,3 +286,4 @@ MSG_DEF(JSMSG_BAD_SURROGATE_CHAR,     203, 1, JSEXN_TYPEERR, """"bad surrogate char
 MSG_DEF(JSMSG_UTF8_CHAR_TOO_LARGE,    204, 1, JSEXN_TYPEERR, """"UTF-8 character {0} too large"""")
 MSG_DEF(JSMSG_MALFORMED_UTF8_CHAR,    205, 1, JSEXN_TYPEERR, """"malformed UTF-8 character sequence at offset {0}"""")
 MSG_DEF(JSMSG_USER_DEFINED_ERROR,     206, 0, JSEXN_ERR, """"JS_ReportError was called"""")
+MSG_DEF(JSMSG_WRONG_CONSTRUCTOR,      207, 1, JSEXN_TYPEERR, """"wrong construtor called for {0}"""")
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index e814831..9a321c3 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -2126,13 +2126,18 @@ js_ConstructObject(JSContext *cx, JSClass *clasp, JSObject *proto,
                    JSObject *parent, uintN argc, jsval *argv)
 {
     jsval cval, rval;
-    JSTempValueRooter tvr;
+    JSTempValueRooter argtvr, tvr;
     JSObject *obj, *ctor;
 
-    if (!js_FindConstructor(cx, parent, clasp->name, &cval))
+    JS_PUSH_TEMP_ROOT(cx, argc, argv, &argtvr);
+
+    if (!js_FindConstructor(cx, parent, clasp->name, &cval)) {
+        JS_POP_TEMP_ROOT(cx, &argtvr);
         return NULL;
+    }
     if (JSVAL_IS_PRIMITIVE(cval)) {
         js_ReportIsNotFunction(cx, &cval, JSV2F_CONSTRUCT | JSV2F_SEARCH_STACK);
+        JS_POP_TEMP_ROOT(cx, &argtvr);
         return NULL;
     }
 
@@ -2141,7 +2146,6 @@ js_ConstructObject(JSContext *cx, JSClass *clasp, JSObject *proto,
      * this point, all control flow must exit through label out with obj set.
      */
     JS_PUSH_SINGLE_TEMP_ROOT(cx, cval, &tvr);
-    obj = NULL;
 
     /*
      * If proto or parent are NULL, set them to Constructor.prototype and/or
@@ -2155,6 +2159,7 @@ js_ConstructObject(JSContext *cx, JSClass *clasp, JSObject *proto,
                               ATOM_TO_JSID(cx->runtime->atomState
                                            .classPrototypeAtom),
                               &rval)) {
+            obj = NULL;
             goto out;
         }
         if (JSVAL_IS_OBJECT(rval))
@@ -2165,17 +2170,37 @@ js_ConstructObject(JSContext *cx, JSClass *clasp, JSObject *proto,
     if (!obj)
         goto out;
 
-    if (!js_InternalConstruct(cx, obj, cval, argc, argv, &rval)) {
-        cx->newborn[GCX_OBJECT] = NULL;
-        obj = NULL;
+    if (!js_InternalConstruct(cx, obj, cval, argc, argv, &rval))
+        goto bad;
+
+    if (JSVAL_IS_PRIMITIVE(rval))
         goto out;
+    obj = JSVAL_TO_OBJECT(rval);
+
+    /*
+     * If the given class has both the JSCLASS_HAS_PRIVATE and the
+     * JSCLASS_CONSTRUCT_PROTOTYPE flags, then the class should have its private
+     * data set. If it doesn't, then it means the constructor was replaced, and
+     * we should throw a typerr.
+     */
+    if (OBJ_GET_CLASS(cx, obj) != clasp ||
+        (!(~clasp->flags & (JSCLASS_HAS_PRIVATE |
+                            JSCLASS_CONSTRUCT_PROTOTYPE)) &&
+         !JS_GetPrivate(cx, obj))) {
+        JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,
+                             JSMSG_WRONG_CONSTRUCTOR, clasp->name);
+        goto bad;
     }
 
-    if (!JSVAL_IS_PRIMITIVE(rval))
-        obj = JSVAL_TO_OBJECT(rval);
 out:
     JS_POP_TEMP_ROOT(cx, &tvr);
+    JS_POP_TEMP_ROOT(cx, &argtvr);
     return obj;
+
+bad:
+    cx->newborn[GCX_OBJECT] = NULL;
+    obj = NULL;
+    goto out;
 }
 
 void"""
96167813ea406da6a8e416219aac19f7573cf1f1,127009,325403,rbs%maths.uq.edu.au,"CSS Letter-Spacing Heap Overflow, b=325403, r+sr=bz
",1139277515,"""diff --git a/layout/generic/nsTextFrame.cpp b/layout/generic/nsTextFrame.cpp
index a3f27e2..03960cf 100644
--- a/layout/generic/nsTextFrame.cpp
+++ b/layout/generic/nsTextFrame.cpp
@@ -491,7 +491,24 @@ public:
                       nsStyleContext* aStyleContext,
                       nsTextPaintStyle& aStyle,
                       nscoord dx, nscoord dy);
-  
+
+ /**
+  * ComputeTotalWordDimensions and ComputeWordFragmentDimensions work
+  * together to measure a text that spans multiple frames, e.g., as in
+  *   """"baseText<b>moreText<i>moreDeepText</i></b>moreAlsoHere""""
+  * where the total text shoudn't be broken (or the joined pieces should be
+  * passed to the linebreaker for examination, especially in i18n cases).
+  *
+  * ComputeTotalWordDimensions will loop over ComputeWordFragmentDimensions
+  * to look-ahead and accumulate the joining fragments.
+  *
+  * @param aNextFrame is the first textFrame after the baseText's textFrame.
+  *
+  * @param aBaseDimensions is the dimension of baseText.
+  *
+  * @param aCanBreakBefore is false when it is not possible to break before
+  * the baseText (e.g., when this is the first word on the line).
+  */
   nsTextDimensions ComputeTotalWordDimensions(nsPresContext* aPresContext,
                                               nsLineLayout& aLineLayout,
                                               const nsHTMLReflowState& aReflowState,
@@ -501,14 +518,27 @@ public:
                                               PRUint32   aWordBufLen,
                                               PRUint32   aWordBufSize,
                                               PRBool     aCanBreakBefore);
-  
+
+ /**
+  * @param aNextFrame is the textFrame following the current fragment.
+  *
+  * @param aMoreSize plays a double role. The process should continue
+  * normally when it is zero. But when it returns -1, it means that there is
+  * no more fragment of interest and the look-ahead should be stopped. When
+  * it returns a positive value, it means that the current buffer (aWordBuf 
+  * of size aWordBufSize) is not big enough to accumulate the current fragment. 
+  * The returned positive value is the shortfall. 
+  *
+  * @param aWordBufLen is the accumulated length of the fragments that have
+  * been accounted for so far.
+  */
   nsTextDimensions ComputeWordFragmentDimensions(nsPresContext* aPresContext,
                                                  nsLineLayout& aLineLayout,
                                                  const nsHTMLReflowState& aReflowState,
                                                  nsIFrame* aNextFrame,
                                                  nsIContent* aContent,
                                                  nsITextContent* aText,
-                                                 PRBool* aStop,
+                                                 PRInt32* aMoreSize,
                                                  const PRUnichar* aWordBuf,
                                                  PRUint32 &aWordBufLen,
                                                  PRUint32 aWordBufSize,
@@ -6278,19 +6308,18 @@ nsTextFrame::ComputeTotalWordDimensions(nsPresContext* aPresContext,
 
     nsCOMPtr<nsITextContent> tc(do_QueryInterface(content));
     if (tc) {
-      PRBool stop = PR_FALSE;
+      PRInt32 moreSize = 0;
       nsTextDimensions moreDimensions;
       moreDimensions = ComputeWordFragmentDimensions(aPresContext,
                                                      aLineLayout,
                                                      aReflowState,
                                                      aNextFrame, content, tc,
-                                                     &stop,
+                                                     &moreSize,
                                                      newWordBuf,
                                                      aWordLen,
                                                      newWordBufSize,
                                                      aCanBreakBefore);
-      if (moreDimensions.width < 0) {
-        PRUint32 moreSize = -moreDimensions.width;
+      if (moreSize > 0) {
         //Oh, wordBuf is too small, we have to grow it
         newWordBufSize += moreSize;
         if (newWordBuf != aWordBuf) {
@@ -6308,13 +6337,13 @@ nsTextFrame::ComputeTotalWordDimensions(nsPresContext* aPresContext,
           moreDimensions =
             ComputeWordFragmentDimensions(aPresContext,
                                           aLineLayout, aReflowState,
-                                          aNextFrame, content, tc, &stop,
+                                          aNextFrame, content, tc, &moreSize,
                                           newWordBuf, aWordLen, newWordBufSize,
                                           aCanBreakBefore);
-          NS_ASSERTION((moreDimensions.width >= 0),
-                       """"ComputeWordFragmentWidth is returning negative"""");
+          NS_ASSERTION((moreSize <= 0),
+                       """"ComputeWordFragmentDimensions is asking more buffer"""");
         } else {
-          stop = PR_TRUE;
+          moreSize = -1;
           moreDimensions.Clear();
         }  
       }
@@ -6324,7 +6353,7 @@ nsTextFrame::ComputeTotalWordDimensions(nsPresContext* aPresContext,
       printf(""""  moreWidth=%d (addedWidth=%d) stop=%c\n"""", moreDimensions.width,
              addedDimensions.width, stop?'T':'F');
 #endif
-      if (stop) {
+      if (moreSize == -1) {
         goto done;
       }
     }
@@ -6357,7 +6386,7 @@ nsTextFrame::ComputeWordFragmentDimensions(nsPresContext* aPresContext,
                                       nsIFrame* aNextFrame,
                                       nsIContent* aContent,
                                       nsITextContent* aText,
-                                      PRBool* aStop,
+                                      PRInt32* aMoreSize,
                                       const PRUnichar* aWordBuf,
                                       PRUint32& aRunningWordLen,
                                       PRUint32 aWordBufSize,
@@ -6377,6 +6406,7 @@ nsTextFrame::ComputeWordFragmentDimensions(nsPresContext* aPresContext,
     wordLen = -1;
   }
 #endif // IBMBIDI
+  *aMoreSize = 0;
   PRUnichar* bp = tx.GetNextWord(PR_TRUE, &wordLen, &contentLen, &isWhitespace, &wasTransformed);
   if (!bp) {
     //empty text node, but we need to continue lookahead measurement
@@ -6388,17 +6418,18 @@ nsTextFrame::ComputeWordFragmentDimensions(nsPresContext* aPresContext,
 
   if (isWhitespace) {
     // Don't bother measuring nothing
-    *aStop = PR_TRUE;
+    *aMoreSize = -1; // flag that we should stop now
     return dimensions; // 0
   }
 
-  // We need to adjust the length by look at the two pieces together
-  // but if we have to grow aWordBuf, ask caller do it by return a negative value of size
+  // We need to adjust the length by looking at the two pieces together. But if
+  // we have to grow aWordBuf, ask the caller to do it by returning the shortfall
   if ((wordLen + aRunningWordLen) > aWordBufSize) {
-    dimensions.width = aWordBufSize - wordLen - aRunningWordLen; 
-    return dimensions;
+    *aMoreSize = wordLen + aRunningWordLen - aWordBufSize; 
+    return dimensions; // 0
   }
-  *aStop = contentLen < tx.GetContentLength();
+  if (contentLen < tx.GetContentLength())
+    *aMoreSize = -1;
 
   // Convert any spaces in the current word back to nbsp's. This keeps
   // the breaking logic happy.
@@ -6420,13 +6451,13 @@ nsTextFrame::ComputeWordFragmentDimensions(nsPresContext* aPresContext,
           wordLen = breakP - aRunningWordLen;
           if(wordLen < 0)
               wordLen = 0;
-          *aStop = PR_TRUE;
+          *aMoreSize = -1;
         }
       
       // if we don't stop, we need to extend the buf so the next one can
       // see this part otherwise, it does not matter since we will stop
       // anyway
-      if(! *aStop) 
+      if (*aMoreSize != -1) 
         aRunningWordLen += wordLen;
     }
   }
@@ -6438,11 +6469,11 @@ nsTextFrame::ComputeWordFragmentDimensions(nsPresContext* aPresContext,
                                             aRunningWordLen, bp, wordLen);
     if (canBreak) {
       wordLen = 0;
-      *aStop = PR_TRUE;
+      *aMoreSize = -1;
     }
   }
 
-  if((*aStop) && (wordLen == 0))
+  if ((*aMoreSize == -1) && (wordLen == 0))
     return dimensions; // 0;
 
   nsStyleContext* sc = aNextFrame->GetStyleContext();
@@ -6479,7 +6510,7 @@ nsTextFrame::ComputeWordFragmentDimensions(nsPresContext* aPresContext,
     return dimensions;
   }
 
-  *aStop = PR_TRUE;
+  *aMoreSize = -1;
   return dimensions; // 0
 }
 """
5f77e86780219bee9014c84e89469c20d6c1691b,127387,325269,brendan%mozilla.org,"Add purely stack allocated rooting facility (325269, r=igor).
",1138862792,"""diff --git a/js/src/jsapi.c b/js/src/jsapi.c
index 5d08178..343cdb0 100644
--- a/js/src/jsapi.c
+++ b/js/src/jsapi.c
@@ -2009,6 +2009,7 @@ JS_InitClass(JSContext *cx, JSObject *obj, JSObject *parent_proto,
 {
     JSAtom *atom;
     JSObject *proto, *ctor;
+    JSTempValueRooter tvr;
     jsval cval, rval;
     JSBool named;
     JSFunction *fun;
@@ -2027,6 +2028,7 @@ JS_InitClass(JSContext *cx, JSObject *obj, JSObject *parent_proto,
         named = JS_FALSE;
         goto bad;
     }
+    JS_PUSH_SINGLE_TEMP_ROOT(cx, OBJECT_TO_JSVAL(proto), &tvr);
 
     if (!constructor) {
         /* Lacking a constructor, name the prototype (e.g., Math). */
@@ -2088,14 +2090,16 @@ JS_InitClass(JSContext *cx, JSObject *obj, JSObject *parent_proto,
         (static_fs && !JS_DefineFunctions(cx, ctor, static_fs))) {
         goto bad;
     }
-    js_LeaveLocalRootScope(cx);
+
+out:
+    JS_POP_TEMP_ROOT(cx, &tvr);
     return proto;
 
 bad:
-    js_LeaveLocalRootScope(cx);
     if (named)
         (void) OBJ_DELETE_PROPERTY(cx, obj, ATOM_TO_JSID(atom), &rval);
-    return NULL;
+    proto = NULL;
+    goto out;
 }
 
 #ifdef JS_THREADSAFE
diff --git a/js/src/jscntxt.h b/js/src/jscntxt.h
index b1e6264..2db203b 100644
--- a/js/src/jscntxt.h
+++ b/js/src/jscntxt.h
@@ -361,6 +361,62 @@ typedef struct JSLocalRootStack {
 
 #define JSLRS_NULL_MARK ((uint32) -1)
 
+typedef struct JSTempValueRooter JSTempValueRooter;
+
+/*
+ * If count is -1, then u.value contains the single value to root.  Otherwise
+ * u.array points to a stack-allocated vector of jsvals.  Note that the vector
+ * may have length 0 or 1 for full generality, so we need -1 to discriminate
+ * the union.
+ *
+ * If you need to protect a result value that flows out of a C function across
+ * several layers of other functions, use the js_LeaveLocalRootScopeWithResult
+ * internal API (see further below) instead.
+ */
+struct JSTempValueRooter {
+    JSTempValueRooter   *down;
+    jsint               count;
+    union {
+        jsval           value;
+        jsval           *array;
+    } u;
+};
+
+#define JS_PUSH_TEMP_ROOT_COMMON(cx,tvr)                                      \
+    JS_BEGIN_MACRO                                                            \
+        JS_ASSERT((cx)->tempValueRooters != (tvr));                           \
+        (tvr)->down = (cx)->tempValueRooters;                                 \
+        (cx)->tempValueRooters = (tvr);                                       \
+    JS_END_MACRO
+
+#define JS_PUSH_SINGLE_TEMP_ROOT(cx,val,tvr)                                  \
+    JS_BEGIN_MACRO                                                            \
+        JS_PUSH_TEMP_ROOT_COMMON(cx, tvr);                                    \
+        (tvr)->count = -1;                                                    \
+        (tvr)->u.value = (val);                                               \
+    JS_END_MACRO
+
+#define JS_PUSH_TEMP_ROOT(cx,cnt,arr,tvr)                                     \
+    JS_BEGIN_MACRO                                                            \
+        JS_PUSH_TEMP_ROOT_COMMON(cx, tvr);                                    \
+        (tvr)->count = (cnt);                                                 \
+        (tvr)->u.array = (arr);                                               \
+    JS_END_MACRO
+
+#define JS_POP_TEMP_ROOT(cx,tvr)                                              \
+    JS_BEGIN_MACRO                                                            \
+        JS_ASSERT((cx)->tempValueRooters == (tvr));                           \
+        (cx)->tempValueRooters = (tvr)->down;                                 \
+    JS_END_MACRO
+
+#define JS_TEMP_ROOT_EVAL(cx,cnt,val,expr)                                    \
+    JS_BEGIN_MACRO                                                            \
+        JSTempValueRooter tvr;                                                \
+        JS_PUSH_TEMP_ROOT(cx, cnt, val, &tvr);                                \
+        (expr);                                                               \
+        JS_POP_TEMP_ROOT(cx, &tvr);                                           \
+    JS_END_MACRO
+
 struct JSContext {
     JSCList             links;
 
@@ -481,8 +537,11 @@ struct JSContext {
     /* PDL of stack headers describing stack slots not rooted by argv, etc. */
     JSStackHeader       *stackHeaders;
 
-    /* Optional stack of scoped local GC roots. */
+    /* Optional stack of heap-allocated scoped local GC roots. */
     JSLocalRootStack    *localRootStack;
+
+    /* Stack of thread-stack-allocated temporary GC roots. */
+    JSTempValueRooter   *tempValueRooters;
 };
 
 /*
diff --git a/js/src/jsgc.c b/js/src/jsgc.c
index d899045..44890ee 100644
--- a/js/src/jsgc.c
+++ b/js/src/jsgc.c
@@ -1580,6 +1580,7 @@ js_GC(JSContext *cx, uintN gcflags)
     JSStackFrame *fp, *chain;
     uintN i, depth, nslots, type;
     JSStackHeader *sh;
+    JSTempValueRooter *tvr;
     size_t nbytes, nflags, limit, offset;
     JSGCArena *a, **ap;
     uint8 flags, *flagp, *firstPage;
@@ -1851,6 +1852,16 @@ restart:
 
         if (acx->localRootStack)
             js_MarkLocalRoots(cx, acx->localRootStack);
+        for (tvr = acx->tempValueRooters; tvr; tvr = tvr->down) {
+            if (tvr->count < 0) {
+                if (JSVAL_IS_GCTHING(tvr->u.value)) {
+                    GC_MARK(cx, JSVAL_TO_GCTHING(tvr->u.value), """"tvr->u.value"""",
+                            NULL);
+                }
+            } else {
+                GC_MARK_JSVALS(cx, tvr->count, tvr->u.array, """"tvr->u.array"""");
+            }
+        }
     }
 #ifdef DUMP_CALL_TABLE
     js_DumpCallTable(cx);
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index d2a65cb..e814831 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -2126,6 +2126,7 @@ js_ConstructObject(JSContext *cx, JSClass *clasp, JSObject *proto,
                    JSObject *parent, uintN argc, jsval *argv)
 {
     jsval cval, rval;
+    JSTempValueRooter tvr;
     JSObject *obj, *ctor;
 
     if (!js_FindConstructor(cx, parent, clasp->name, &cval))
@@ -2136,6 +2137,13 @@ js_ConstructObject(JSContext *cx, JSClass *clasp, JSObject *proto,
     }
 
     /*
+     * Protect cval in case a crazy getter for .prototype uproots it.  After
+     * this point, all control flow must exit through label out with obj set.
+     */
+    JS_PUSH_SINGLE_TEMP_ROOT(cx, cval, &tvr);
+    obj = NULL;
+
+    /*
      * If proto or parent are NULL, set them to Constructor.prototype and/or
      * Constructor.__parent__, just like JSOP_NEW does.
      */
@@ -2147,7 +2155,7 @@ js_ConstructObject(JSContext *cx, JSClass *clasp, JSObject *proto,
                               ATOM_TO_JSID(cx->runtime->atomState
                                            .classPrototypeAtom),
                               &rval)) {
-            return NULL;
+            goto out;
         }
         if (JSVAL_IS_OBJECT(rval))
             proto = JSVAL_TO_OBJECT(rval);
@@ -2155,14 +2163,19 @@ js_ConstructObject(JSContext *cx, JSClass *clasp, JSObject *proto,
 
     obj = js_NewObject(cx, clasp, proto, parent);
     if (!obj)
-        return NULL;
+        goto out;
 
-    if (!js_InternalConstruct(cx, obj, cval, argc, argv, &rval))
-        goto bad;
-    return JSVAL_IS_OBJECT(rval) ? JSVAL_TO_OBJECT(rval) : obj;
-bad:
-    cx->newborn[GCX_OBJECT] = NULL;
-    return NULL;
+    if (!js_InternalConstruct(cx, obj, cval, argc, argv, &rval)) {
+        cx->newborn[GCX_OBJECT] = NULL;
+        obj = NULL;
+        goto out;
+    }
+
+    if (!JSVAL_IS_PRIMITIVE(rval))
+        obj = JSVAL_TO_OBJECT(rval);
+out:
+    JS_POP_TEMP_ROOT(cx, &tvr);
+    return obj;
 }
 
 void"""
f4a1ec8ec03bda318d48b938bb4b4bb83ef6b254,128050,319872,mrbkap%gmail.com,"bug 319872: Don't free the sentinal value. r=brendan
",1137550975,"""diff --git a/js/src/jsxml.c b/js/src/jsxml.c
index 9df22a9..c9e66c2 100644
--- a/js/src/jsxml.c
+++ b/js/src/jsxml.c
@@ -2892,7 +2892,7 @@ XMLToXMLString(JSContext *cx, JSXML *xml, const JSXMLArray *ancestorNSes,
     str = js_NewString(cx, sb.base, STRING_BUFFER_OFFSET(&sb), 0);
 out:
     JS_LeaveLocalRootScope(cx);
-    if (!str)
+    if (!str && STRING_BUFFER_OK(&sb))
         js_FinishStringBuffer(&sb);
     XMLArrayFinish(cx, &decls);
     if (ancdecls.capacity != 0)"""
8e04328f64c4057a32d2bb39bafadfbd2b33110f,128108,319004,smfr%smfr.org,"Camino fix for bug 319004: prevent overlong document.title from bogging down history.
",1137361022,"""diff --git a/camino/src/history/nsSimpleGlobalHistory.cpp b/camino/src/history/nsSimpleGlobalHistory.cpp
index fb352a4..0f134f3 100644
--- a/camino/src/history/nsSimpleGlobalHistory.cpp
+++ b/camino/src/history/nsSimpleGlobalHistory.cpp
@@ -72,6 +72,11 @@
 #define PREF_AUTOCOMPLETE_ONLY_TYPED            """"urlbar.matchOnlyTyped""""
 #define PREF_AUTOCOMPLETE_ENABLED               """"urlbar.autocomplete.enabled""""
 
+// see bug #319004 -- clamp title and URL to generously-large but not too large
+// length
+#define HISTORY_URI_LENGTH_MAX 65536
+#define HISTORY_TITLE_LENGTH_MAX 4096
+
 // sync history every 10 seconds
 #define HISTORY_SYNC_TIMEOUT (10 * PR_MSEC_PER_SEC)
 //#define HISTORY_SYNC_TIMEOUT 3000 // every 3 seconds - testing only!
@@ -599,6 +604,9 @@ nsSimpleGlobalHistory::AddURI(nsIURI *aURI, PRBool aRedirect, PRBool aTopLevel,
   rv = aURI->GetSpec(URISpec);
   NS_ENSURE_SUCCESS(rv, rv);
 
+  if (URISpec.Length() > HISTORY_URI_LENGTH_MAX)
+     return NS_OK;
+
   nsCAutoString referrerSpec;
   if (aReferrer) {
     rv = aReferrer->GetSpec(referrerSpec);
@@ -1181,7 +1189,7 @@ nsSimpleGlobalHistory::SetPageTitle(nsIURI *aURI, const nsAString& aTitle)
   nsresult rv;
   NS_ENSURE_ARG_POINTER(aURI);
 
-  const nsAFlatString& titleString = PromiseFlatString(aTitle);
+  nsAutoString titleString(StringHead(aTitle, HISTORY_TITLE_LENGTH_MAX));
 
   // skip about: URIs to avoid reading in the db (about:blank, especially)
   PRBool isAbout;
@@ -1554,6 +1562,9 @@ nsSimpleGlobalHistory::HidePage(nsIURI *aURI)
   rv = aURI->GetSpec(URISpec);
   NS_ENSURE_SUCCESS(rv, rv);
   
+  if (URISpec.Length() > HISTORY_URI_LENGTH_MAX)
+     return NS_OK;
+
   nsCOMPtr<nsIMdbRow> row;
 
   rv = FindRow(kToken_URLColumn, URISpec.get(), getter_AddRefs(row));
@@ -1584,6 +1595,9 @@ nsSimpleGlobalHistory::MarkPageAsTyped(nsIURI *aURI)
   nsresult rv = aURI->GetSpec(spec);
   if (NS_FAILED(rv)) return rv;
 
+  if (spec.Length() > HISTORY_URI_LENGTH_MAX)
+     return NS_OK;
+
   nsCOMPtr<nsIMdbRow> row;
   rv = FindRow(kToken_URLColumn, spec.get(), getter_AddRefs(row));
   if (NS_FAILED(rv))"""
fcbe8ce9f9806ee16eda4323e0a49790362a57e0,128423,322215,tor%cs.brown.edu,"Bug 322215 - check surface size.  r=dveditz
",1136851904,"""diff --git a/layout/svg/renderer/src/cairo/nsSVGCairoSurface.cpp b/layout/svg/renderer/src/cairo/nsSVGCairoSurface.cpp
index d4012cb..e69de29 100644
--- a/layout/svg/renderer/src/cairo/nsSVGCairoSurface.cpp
+++ b/layout/svg/renderer/src/cairo/nsSVGCairoSurface.cpp
@@ -1,182 +0,0 @@
-/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* ***** BEGIN LICENSE BLOCK *****
- * Version: MPL 1.1/GPL 2.0/LGPL 2.1
- *
- * The contents of this file are subject to the Mozilla Public License Version
- * 1.1 (the """"License""""); you may not use this file except in compliance with
- * the License. You may obtain a copy of the License at
- * http://www.mozilla.org/MPL/
- *
- * Software distributed under the License is distributed on an """"AS IS"""" basis,
- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
- * for the specific language governing rights and limitations under the
- * License.
- *
- * The Original Code is the Mozilla SVG Cairo Renderer project.
- *
- * The Initial Developer of the Original Code is IBM Corporation.
- * Portions created by the Initial Developer are Copyright (C) 2004
- * the Initial Developer. All Rights Reserved.
- *
- * Contributor(s):
- *
- * Alternatively, the contents of this file may be used under the terms of
- * either of the GNU General Public License Version 2 or later (the """"GPL""""),
- * or the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
- * in which case the provisions of the GPL or the LGPL are applicable instead
- * of those above. If you wish to allow use of your version of this file only
- * under the terms of either the GPL or the LGPL, and not to allow others to
- * use your version of this file under the terms of the MPL, indicate your
- * decision by deleting the provisions above and replace them with the notice
- * and other provisions required by the GPL or the LGPL. If you do not delete
- * the provisions above, a recipient may use your version of this file under
- * the terms of any one of the MPL, the GPL or the LGPL.
- *
- * ***** END LICENSE BLOCK ***** */
-
-#include """"nsISupports.h""""
-#include """"nsCOMPtr.h""""
-#include """"nsSVGCairoSurface.h""""
-#include """"nsISVGCairoSurface.h""""
-#include <cairo.h>
-
-/**
- * \addtogroup cairo_renderer Cairo Rendering Engine
- * @{
- */
-//////////////////////////////////////////////////////////////////////
-/**
- * Cairo surface implementation
- */
-class nsSVGCairoSurface : public nsISVGCairoSurface
-{
-public:
-  nsSVGCairoSurface();
-  ~nsSVGCairoSurface();
-  nsresult Init(PRUint32 width, PRUint32 height);
-    
-  // nsISupports interface:
-  NS_DECL_ISUPPORTS
-    
-  // nsISVGRendererSurface interface:
-  NS_DECL_NSISVGRENDERERSURFACE
-
-  // nsISVGCairoSurface interface:
-  NS_IMETHOD_(cairo_surface_t*) GetSurface() { return mSurface; }
-    
-private:
-  PRUint8 *mData;
-  cairo_surface_t *mSurface;
-  PRUint32 mWidth, mHeight;
-};
-
-
-/** @} */
-
-//----------------------------------------------------------------------
-// implementation:
-
-nsSVGCairoSurface::nsSVGCairoSurface() : mData(nsnull), mSurface(nsnull)
-{
-}
-
-nsSVGCairoSurface::~nsSVGCairoSurface()
-{
-  if (mSurface) {
-    cairo_surface_destroy(mSurface);
-    mSurface = nsnull;
-  }
-  if (mData) {
-    delete [] mData;
-    mData = nsnull;
-  }
-}
-
-nsresult
-nsSVGCairoSurface::Init(PRUint32 width, PRUint32 height)
-{
-  mWidth = width;
-  mHeight = height;
-
-  mData = new PRUint8[4*width*height];
-
-  if (!mData)
-    return NS_ERROR_OUT_OF_MEMORY;
-
-  memset(mData, 0, 4*width*height);
-  mSurface = cairo_image_surface_create_for_data(mData, CAIRO_FORMAT_ARGB32,
-                                                 mWidth, mHeight, 4*mWidth);
-  if (!mSurface)
-    return NS_ERROR_FAILURE;
-
-  return NS_OK;
-}
-
-nsresult
-NS_NewSVGCairoSurface(nsISVGRendererSurface **result,
-                      PRUint32 width, PRUint32 height)
-{
-  nsSVGCairoSurface* surf = new nsSVGCairoSurface();
-  if (!surf)
-    return NS_ERROR_OUT_OF_MEMORY;
-
-  NS_ADDREF(surf);
-
-  nsresult rv = surf->Init(width, height);
-
-  if (NS_FAILED(rv)) {
-    NS_RELEASE(surf);
-    return rv;
-  }
-  
-  *result = surf;
-  return rv;
-}
-
-//----------------------------------------------------------------------
-// nsISupports methods:
-
-NS_IMPL_ADDREF(nsSVGCairoSurface)
-NS_IMPL_RELEASE(nsSVGCairoSurface)
-
-NS_INTERFACE_MAP_BEGIN(nsSVGCairoSurface)
-  NS_INTERFACE_MAP_ENTRY(nsISVGRendererSurface)
-  NS_INTERFACE_MAP_ENTRY(nsISVGCairoSurface)
-  NS_INTERFACE_MAP_ENTRY(nsISupports)
-NS_INTERFACE_MAP_END
-
-NS_IMETHODIMP
-nsSVGCairoSurface::GetWidth(PRUint32 *aWidth)
-{
-  *aWidth = mWidth;
-  return NS_OK;
-}
-
-NS_IMETHODIMP
-nsSVGCairoSurface::GetHeight(PRUint32 *aHeight)
-{
-  *aHeight = mHeight;
-  return NS_OK;
-}
-
-NS_IMETHODIMP
-nsSVGCairoSurface::GetData(PRUint8 **aData, PRUint32 *length, PRInt32 *stride)
-{
-  *aData = mData;
-  *length = 4*mWidth*mHeight;
-  *stride = 4*mWidth;
-  return NS_OK;
-}
-
-NS_IMETHODIMP
-nsSVGCairoSurface::Lock()
-{
-  return NS_OK;
-}
-
-NS_IMETHODIMP
-nsSVGCairoSurface::Unlock()
-{
-  return NS_OK;
-}
-"""
af96806526f5e4378cfb87a147502f08aa46f248,128521,319004,ajschult%verizon.net,"Bustage fix (assertion failure) for bug 319004, handle empty title
",1136517911,"""diff --git a/toolkit/components/history/src/nsGlobalHistory.cpp b/toolkit/components/history/src/nsGlobalHistory.cpp
index c363914..fecd518 100644
--- a/toolkit/components/history/src/nsGlobalHistory.cpp
+++ b/toolkit/components/history/src/nsGlobalHistory.cpp
@@ -1119,7 +1119,8 @@ nsGlobalHistory::SetPageTitle(nsIURI *aURI, const nsAString& aTitle)
   NS_ENSURE_ARG_POINTER(aURI);
 
   nsAutoString titleString(StringHead(aTitle, HISTORY_TITLE_LENGTH_MAX));
-  if (IS_HIGH_SURROGATE(titleString.Last()))
+  if (titleString.Length() < aTitle.Length() &&
+      IS_HIGH_SURROGATE(titleString.Last()))
     titleString.Truncate(titleString.Length()-1);
 
   // skip about: URIs to avoid reading in the db (about:blank, especially)
diff --git a/xpfe/components/history/src/nsGlobalHistory.cpp b/xpfe/components/history/src/nsGlobalHistory.cpp
index abb8181..b70cf29 100644
--- a/xpfe/components/history/src/nsGlobalHistory.cpp
+++ b/xpfe/components/history/src/nsGlobalHistory.cpp
@@ -1042,7 +1042,8 @@ nsGlobalHistory::SetPageTitle(nsIURI *aURI, const nsAString& aTitle)
   NS_ENSURE_ARG_POINTER(aURI);
 
   nsAutoString titleString(StringHead(aTitle, HISTORY_TITLE_LENGTH_MAX));
-  if (IS_HIGH_SURROGATE(titleString.Last()))
+  if (titleString.Length() < aTitle.Length() &&
+      IS_HIGH_SURROGATE(titleString.Last()))
     titleString.Truncate(titleString.Length()-1);
 
   // skip about: URIs to avoid reading in the db (about:blank, especially)"""
a42ee17c2a2b393f7fb33f711539b94fd03f36e6,128531,322215,vladimir%pobox.com,"b=322215, fix up canvas drawWindow temporary sizing
",1136501996,"""diff --git a/content/canvas/src/nsCanvasRenderingContext2D.cpp b/content/canvas/src/nsCanvasRenderingContext2D.cpp
index c87c348..7b8a6a8 100644
--- a/content/canvas/src/nsCanvasRenderingContext2D.cpp
+++ b/content/canvas/src/nsCanvasRenderingContext2D.cpp
@@ -1807,6 +1807,29 @@ nsCanvasRenderingContext2D::CairoSurfaceFromElement(nsIDOMElement *imgElt,
     return NS_OK;
 }
 
+static PRBool
+CheckSaneImageSize (PRInt32 width, PRInt32 height)
+{
+    if (width <= 0 || height <= 0)
+        return PR_FALSE;
+
+    /* check to make sure we don't overflow a 32-bit */
+    PRInt32 tmp = width * height;
+    if (tmp / height != width)
+        return PR_FALSE;
+
+    tmp = tmp * 4;
+    if (tmp / 4 != width * height)
+        return PR_FALSE;
+
+    /* reject over-wide or over-tall images */
+    const PRInt32 k64KLimit = 0x0000FFFF;
+    if (width > k64KLimit || height > k64KLimit)
+        return PR_FALSE;
+
+    return PR_TRUE;
+}
+
 NS_IMETHODIMP
 nsCanvasRenderingContext2D::DrawWindow(nsIDOMWindow* aWindow, PRInt32 aX, PRInt32 aY,
                                        PRInt32 aW, PRInt32 aH, 
@@ -1814,6 +1837,11 @@ nsCanvasRenderingContext2D::DrawWindow(nsIDOMWindow* aWindow, PRInt32 aX, PRInt3
 {
     NS_ENSURE_ARG(aWindow != nsnull);
 
+    // protect against too-large surfaces that will cause allocation
+    // or overflow issues
+    if (!CheckSaneImageSize (aW, aH))
+        return NS_ERROR_FAILURE;
+
     // We can't allow web apps to call this until we fix at least the
     // following potential security issues:
     // -- rendering cross-domain IFRAMEs and then extracting the results
@@ -1921,7 +1949,12 @@ nsCanvasRenderingContext2D::DrawNativeSurfaces(nsIDrawingSurface* aBlackSurface,
         NS_ERROR(""""Must have image frame already"""");
         return NS_ERROR_FAILURE;
     }
-    
+
+    // check if the dimensions are too large;
+    // if they are, we may easily overflow malloc later on
+    if (!CheckSaneImageSize (aSurfaceSize.width, aSurfaceSize.height))
+        return NS_ERROR_FAILURE;
+
     // Acquire alpha values
     nsAutoArrayPtr<PRUint8> alphas;
     nsresult rv;"""
f34bd629b66c4a67ec2d74a5fc055f471f383c45,128568,319004,ajschult%verizon.net,"Title chopping from bug 319004 might split a BMP character in the middle. r=smontagu, sr=darin.  bug 322167
",1136433613,"""diff --git a/toolkit/components/history/src/nsGlobalHistory.cpp b/toolkit/components/history/src/nsGlobalHistory.cpp
index 77d7027..c363914 100644
--- a/toolkit/components/history/src/nsGlobalHistory.cpp
+++ b/toolkit/components/history/src/nsGlobalHistory.cpp
@@ -1119,6 +1119,8 @@ nsGlobalHistory::SetPageTitle(nsIURI *aURI, const nsAString& aTitle)
   NS_ENSURE_ARG_POINTER(aURI);
 
   nsAutoString titleString(StringHead(aTitle, HISTORY_TITLE_LENGTH_MAX));
+  if (IS_HIGH_SURROGATE(titleString.Last()))
+    titleString.Truncate(titleString.Length()-1);
 
   // skip about: URIs to avoid reading in the db (about:blank, especially)
   PRBool isAbout;
diff --git a/xpfe/components/history/src/nsGlobalHistory.cpp b/xpfe/components/history/src/nsGlobalHistory.cpp
index 45fca27..abb8181 100644
--- a/xpfe/components/history/src/nsGlobalHistory.cpp
+++ b/xpfe/components/history/src/nsGlobalHistory.cpp
@@ -1042,6 +1042,8 @@ nsGlobalHistory::SetPageTitle(nsIURI *aURI, const nsAString& aTitle)
   NS_ENSURE_ARG_POINTER(aURI);
 
   nsAutoString titleString(StringHead(aTitle, HISTORY_TITLE_LENGTH_MAX));
+  if (IS_HIGH_SURROGATE(titleString.Last()))
+    titleString.Truncate(titleString.Length()-1);
 
   // skip about: URIs to avoid reading in the db (about:blank, especially)
   PRBool isAbout;"""
4ce1fa3f8a3819454fd6fc39a9a07328d0cb3a93,128648,319004,ajschult%verizon.net,"Clamp length of document title and exclude long URIs from history to avoid DOS attacks, r=vlad, sr=darin.  bug 319004
",1136253644,"""diff --git a/toolkit/components/history/src/nsGlobalHistory.cpp b/toolkit/components/history/src/nsGlobalHistory.cpp
index 464aac6..77d7027 100644
--- a/toolkit/components/history/src/nsGlobalHistory.cpp
+++ b/toolkit/components/history/src/nsGlobalHistory.cpp
@@ -113,6 +113,11 @@ nsIPrefBranch* nsGlobalHistory::gPrefBranch = nsnull;
 
 #define FIND_BY_AGEINDAYS_PREFIX """"find:datasource=history&match=AgeInDays&method=""""
 
+// see bug #319004 -- clamp title and URL to generously-large but not too large
+// length
+#define HISTORY_URI_LENGTH_MAX 65536
+#define HISTORY_TITLE_LENGTH_MAX 4096
+
 // sync history every 10 seconds
 #define HISTORY_SYNC_TIMEOUT (10 * PR_MSEC_PER_SEC)
 //#define HISTORY_SYNC_TIMEOUT 3000 // every 3 seconds - testing only!
@@ -618,6 +623,9 @@ nsGlobalHistory::AddPageToDatabase(nsIURI* aURI, PRBool aRedirect, PRBool aTopLe
   rv = aURI->GetSpec(URISpec);
   NS_ENSURE_SUCCESS(rv, rv);
 
+  if (URISpec.Length() > HISTORY_URI_LENGTH_MAX)
+     return NS_OK;
+
 #ifdef DEBUG_bsmedberg
   printf(""""AddURI: %s%s%s"""",
          URISpec.get(),
@@ -1110,7 +1118,7 @@ nsGlobalHistory::SetPageTitle(nsIURI *aURI, const nsAString& aTitle)
   nsresult rv;
   NS_ENSURE_ARG_POINTER(aURI);
 
-  const nsAFlatString& titleString = PromiseFlatString(aTitle);
+  nsAutoString titleString(StringHead(aTitle, HISTORY_TITLE_LENGTH_MAX));
 
   // skip about: URIs to avoid reading in the db (about:blank, especially)
   PRBool isAbout;
@@ -1411,6 +1419,9 @@ nsGlobalHistory::HidePage(nsIURI *aURI)
   rv = aURI->GetSpec(URISpec);
   NS_ENSURE_SUCCESS(rv, rv);
 
+  if (URISpec.Length() > HISTORY_URI_LENGTH_MAX)
+     return NS_OK;
+
 #ifdef DEBUG_bsmedberg
   printf(""""nsGlobalHistory::HidePage: %s\n"""", URISpec.get());
 #endif
@@ -1450,6 +1461,9 @@ nsGlobalHistory::MarkPageAsTyped(nsIURI *aURI)
   if (NS_FAILED(rv))
     return rv;
   
+  if (spec.Length() > HISTORY_URI_LENGTH_MAX)
+     return NS_OK;
+
   nsCOMPtr<nsIMdbRow> row;
   rv = FindRow(kToken_URLColumn, spec.get(), getter_AddRefs(row));
   if (NS_FAILED(rv)) {
diff --git a/xpfe/components/history/src/nsGlobalHistory.cpp b/xpfe/components/history/src/nsGlobalHistory.cpp
index 7fdfa50..45fca27 100644
--- a/xpfe/components/history/src/nsGlobalHistory.cpp
+++ b/xpfe/components/history/src/nsGlobalHistory.cpp
@@ -111,6 +111,11 @@ nsIPrefBranch* nsGlobalHistory::gPrefBranch = nsnull;
 
 #define FIND_BY_AGEINDAYS_PREFIX """"find:datasource=history&match=AgeInDays&method=""""
 
+// see bug #319004 -- clamp title and URL to generously-large but not too large
+// length
+#define HISTORY_URI_LENGTH_MAX 65536
+#define HISTORY_TITLE_LENGTH_MAX 4096
+
 // sync history every 10 seconds
 #define HISTORY_SYNC_TIMEOUT (10 * PR_MSEC_PER_SEC)
 //#define HISTORY_SYNC_TIMEOUT 3000 // every 3 seconds - testing only!
@@ -589,6 +594,9 @@ nsGlobalHistory::AddURI(nsIURI *aURI, PRBool aRedirect, PRBool aTopLevel, nsIURI
   rv = aURI->GetSpec(URISpec);
   NS_ENSURE_SUCCESS(rv, rv);
 
+  if (URISpec.Length() > HISTORY_URI_LENGTH_MAX)
+     return NS_OK;
+
   nsCAutoString referrerSpec;
   if (aReferrer) {
     rv = aReferrer->GetSpec(referrerSpec);
@@ -1033,7 +1041,7 @@ nsGlobalHistory::SetPageTitle(nsIURI *aURI, const nsAString& aTitle)
   nsresult rv;
   NS_ENSURE_ARG_POINTER(aURI);
 
-  const nsAFlatString& titleString = PromiseFlatString(aTitle);
+  nsAutoString titleString(StringHead(aTitle, HISTORY_TITLE_LENGTH_MAX));
 
   // skip about: URIs to avoid reading in the db (about:blank, especially)
   PRBool isAbout;
@@ -1333,6 +1341,9 @@ nsGlobalHistory::HidePage(nsIURI *aURI)
   rv = aURI->GetSpec(URISpec);
   NS_ENSURE_SUCCESS(rv, rv);
   
+  if (URISpec.Length() > HISTORY_URI_LENGTH_MAX)
+     return NS_OK;
+
   nsCOMPtr<nsIMdbRow> row;
 
   rv = FindRow(kToken_URLColumn, URISpec.get(), getter_AddRefs(row));
@@ -1366,6 +1377,9 @@ nsGlobalHistory::MarkPageAsTyped(nsIURI *aURI)
   nsresult rv = aURI->GetSpec(spec);
   if (NS_FAILED(rv)) return rv;
 
+  if (spec.Length() > HISTORY_URI_LENGTH_MAX)
+     return NS_OK;
+
   nsCOMPtr<nsIMdbRow> row;
   rv = FindRow(kToken_URLColumn, spec.get(), getter_AddRefs(row));
   if (NS_FAILED(rv)) {"""
5341e7479cd623779d9be9a6e7a684c0cf8a1a4f,128649,322045,brendan%mozilla.org,"Fix from Igor Bukanov <igor.bukanov@gmail.com> to reorder allocations to avoid pigeon-hole problem (322045, r=me).
",1136252506,"""diff --git a/js/src/jsfun.c b/js/src/jsfun.c
index 3957b57..eaac968 100644
--- a/js/src/jsfun.c
+++ b/js/src/jsfun.c
@@ -2003,11 +2003,6 @@ js_NewFunction(JSContext *cx, JSObject *funobj, JSNative native, uintN nargs,
 {
     JSFunction *fun;
 
-    /* Allocate a function struct. */
-    fun = (JSFunction *) js_NewGCThing(cx, GCX_PRIVATE, sizeof(JSFunction));
-    if (!fun)
-        return NULL;
-
     /* If funobj is null, allocate an object for it. */
     if (funobj) {
         OBJ_SET_PARENT(cx, funobj, parent);
@@ -2017,6 +2012,14 @@ js_NewFunction(JSContext *cx, JSObject *funobj, JSNative native, uintN nargs,
             return NULL;
     }
 
+    /*
+     * Allocate fun after allocating funobj so slot allocation in js_NewObject
+     * does not wipe out fun from cx->newborn[GCX_PRIVATE].
+     */
+    fun = (JSFunction *) js_NewGCThing(cx, GCX_PRIVATE, sizeof(JSFunction));
+    if (!fun)
+        return NULL;
+
     /* Initialize all function members. */
     fun->nrefs = 0;
     fun->object = NULL;"""
dd5841f08da8c1ae73789a133ba40c7a758865e1,129044,319847,mrbkap%gmail.com,"bug 319847: xul:persist doesn't really deal with namespaces; check that the argument is a valid NCName, though. r=bsmedberg sr=jst
",1135026839,"""diff --git a/content/xul/document/src/nsXULDocument.cpp b/content/xul/document/src/nsXULDocument.cpp
index 1e52fb9..793e95a 100644
--- a/content/xul/document/src/nsXULDocument.cpp
+++ b/content/xul/document/src/nsXULDocument.cpp
@@ -114,6 +114,7 @@
 #include """"nsContentCreatorFunctions.h""""
 #include """"nsContentUtils.h""""
 #include """"nsIParser.h""""
+#include """"nsIParserService.h""""
 #include """"nsICSSStyleSheet.h""""
 #include """"nsIScriptError.h""""
 
@@ -1378,6 +1379,22 @@ nsXULDocument::Persist(const nsAString& aID,
         nameSpaceID = ni->NamespaceID();
     }
     else {
+        // Make sure that this QName is going to be valid.
+        nsIParserService *parserService = nsContentUtils::GetParserService();
+        NS_ASSERTION(parserService, """"Running scripts during shutdown?"""");
+
+        const PRUnichar *colon;
+        rv = parserService->CheckQName(PromiseFlatString(aAttr), PR_TRUE, &colon);
+        if (NS_FAILED(rv)) {
+            // There was an invalid character or it was malformed.
+            return NS_ERROR_INVALID_ARG;
+        }
+
+        if (colon) {
+            // We don't really handle namespace qualifiers in attribute names.
+            return NS_ERROR_NOT_IMPLEMENTED;
+        }
+
         tag = do_GetAtom(aAttr);
         NS_ENSURE_TRUE(tag, NS_ERROR_OUT_OF_MEMORY);
 """
0140a8007023bf4e61a2d74088e8d5a6b803875f,129048,319296,mrbkap%gmail.com,"bug 319296: Protect from bad wrappers being precreated. r=jst sr=brendan
",1135024194,"""diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index c6a5b60..4b3548f 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -3822,7 +3822,7 @@ nsWindowSH::PreCreate(nsISupports *nativeObj, JSContext *cx,
   // after the wrapper is found.
 
   nsCOMPtr<nsIScriptGlobalObject> sgo(do_QueryInterface(nativeObj));
-  NS_WARN_IF_FALSE(sgo, """"nativeObj not a node!"""");
+  NS_WARN_IF_FALSE(sgo, """"nativeObj not a global object!"""");
 
   if (sgo) {
     *parentObj = sgo->GetGlobalJSObject();
@@ -6236,7 +6236,15 @@ nsLocationSH::PreCreate(nsISupports *nativeObj, JSContext *cx,
   // Thing.
   *parentObj = globalObj;
 
-  nsLocation *loc = (nsLocation *)(nsIDOMLocation *)nativeObj;
+  nsCOMPtr<nsIDOMLocation> safeLoc(do_QueryInterface(nativeObj));
+  if (!safeLoc) {
+    // Oops, this wasn't really a location object. This can happen if someone
+    // tries to use our scriptable helper as a real object and tries to wrap
+    // it, see bug 319296
+    return NS_OK;
+  }
+
+  nsLocation *loc = (nsLocation *)safeLoc.get();
   nsIDocShell *ds = loc->GetDocShell();
   if (!ds) {
     NS_WARNING(""""Refusing to create a location in the wrong scope"""");
@@ -6268,7 +6276,15 @@ nsNavigatorSH::PreCreate(nsISupports *nativeObj, JSContext *cx,
   // created too long.
   *parentObj = globalObj;
 
-  nsNavigator *nav = (nsNavigator *)(nsIDOMNavigator *)nativeObj;
+  nsCOMPtr<nsIDOMNavigator> safeNav(do_QueryInterface(nativeObj));
+  if (!safeNav) {
+    // Oops, this wasn't really a navigator object. This can happen if someone
+    // tries to use our scriptable helper as a real object and tries to wrap
+    // it, see bug 319296.
+    return NS_OK;
+  }
+
+  nsNavigator *nav = (nsNavigator *)safeNav.get();
   nsIDocShell *ds = nav->GetDocShell();
   if (!ds) {
     NS_WARNING(""""Refusing to create a navigator in the wrong scope"""");
@@ -7029,7 +7045,9 @@ nsContentListSH::PreCreate(nsISupports *nativeObj, JSContext *cx,
   nsContentList *contentList =
     NS_STATIC_CAST(nsContentList*, NS_STATIC_CAST(nsIDOMNodeList*, nodeList));
 
-  NS_ASSERTION(contentList, """"Why does something not implementing nsIDOMNodeList use nsContentListSH??"""");
+  if (!contentList) {
+    return NS_OK;
+  }
 
   nsISupports *native_parent = contentList->GetParentObject();
 """
8d2845803a77563fc7883e150e4b1c294e07c410,129144,319296,mrbkap%gmail.com,"Bustage fix from bug 319296.
",1134698629,"""diff --git a/js/src/xpconnect/src/xpcwrappednative.cpp b/js/src/xpconnect/src/xpcwrappednative.cpp
index 8479cc1..5f704d2 100644
--- a/js/src/xpconnect/src/xpcwrappednative.cpp
+++ b/js/src/xpconnect/src/xpcwrappednative.cpp
@@ -1,4 +1,5 @@
 /* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ * vim: set ts=8 sw=4 et tw=78:
  *
  * ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
@@ -288,7 +289,8 @@ XPCWrappedNative::GetNewOrUsed(XPCCallContext& ccx,
     // we'll provide a default one
     if(isIDispatch && !info)
     {
-        info = dont_AddRef(XPCIDispatchClassInfo::GetSingleton());
+        info = dont_AddRef(NS_STATIC_CAST(nsIClassInfo*,
+                                          XPCIDispatchClassInfo::GetSingleton()));
     }
 #endif
 """
30f30ad9c705447d53ff8033f5608b085a8e9c5f,129150,319296,jst%mozilla.jstenback.com,"Fixing bug 319296. This fixes a problem where we could end up in a situation where a nsIXPCScriptable helper would be used for a class info object when the helper is obviously written only for the class described by the class info. r=mrbkap@gmail.com, sr=brendan@mozilla.org
",1134693135,"""diff --git a/js/src/xpconnect/src/xpcwrappednative.cpp b/js/src/xpconnect/src/xpcwrappednative.cpp
index 15e484e..8479cc1 100644
--- a/js/src/xpconnect/src/xpcwrappednative.cpp
+++ b/js/src/xpconnect/src/xpcwrappednative.cpp
@@ -273,26 +273,37 @@ XPCWrappedNative::GetNewOrUsed(XPCCallContext& ccx,
     // It is possible that we will then end up forwarding this entire call
     // to this same function but with a different scope.
 
-    nsCOMPtr<nsIClassInfo> info(do_QueryInterface(identity));
+    // If we are making a wrapper for the nsIClassInfo interface then
+    // We *don't* want to have it use the prototype meant for instances
+    // of that class.
+    JSBool isClassInfo = Interface->GetIID()->Equals(NS_GET_IID(nsIClassInfo));
+
+    nsCOMPtr<nsIClassInfo> info;
+
+    if(!isClassInfo)
+        info = do_QueryInterface(identity);
+
 #ifdef XPC_IDISPATCH_SUPPORT
     // If this is an IDispatch wrapper and it didn't give us a class info
     // we'll provide a default one
     if(isIDispatch && !info)
     {
-        info = already_AddRefed<nsIClassInfo>(XPCIDispatchClassInfo::GetSingleton());
+        info = dont_AddRef(XPCIDispatchClassInfo::GetSingleton());
     }
 #endif
 
-    // If we are making a wrapper for the nsIClassInfo interface then
-    // We *don't* want to have it use the prototype meant for instances
-    // of that class.
-    JSBool isClassInfo = Interface->GetIID()->Equals(NS_GET_IID(nsIClassInfo));
-
     XPCNativeScriptableCreateInfo sciProto;
     XPCNativeScriptableCreateInfo sciWrapper;
 
-    if(NS_FAILED(GatherScriptableCreateInfo(identity,
-                                            isClassInfo ? nsnull : info.get(),
+    // Gather scriptable create info if we are wrapping something
+    // other than an nsIClassInfo object. We need to not do this for
+    // nsIClassInfo objects because often nsIClassInfo implementations
+    // are also nsIXPCScriptable helper implmentations, but the helper
+    // code is obviously intended for the implementation of the class
+    // described by the nsIClassInfo, not for the class info object
+    // itself.
+    if(!isClassInfo &&
+       NS_FAILED(GatherScriptableCreateInfo(identity, info.get(),
                                             &sciProto, &sciWrapper)))
         return NS_ERROR_FAILURE;
 """
fe6e6a82ff13c13b6dc098f7d5133207378613bf,129207,319847,mrbkap%gmail.com,"bug 319847: Make sure the namespace is properly escaped. r=bsmedberg/axel
",1134586909,"""diff --git a/rdf/base/src/nsRDFXMLSerializer.cpp b/rdf/base/src/nsRDFXMLSerializer.cpp
index ba42d20..d9f84d4 100644
--- a/rdf/base/src/nsRDFXMLSerializer.cpp
+++ b/rdf/base/src/nsRDFXMLSerializer.cpp
@@ -1,4 +1,5 @@
 /* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ * vim: set ts=4 sw=4 et tw=80:
  *
  * ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
@@ -1006,7 +1007,9 @@ static const char kXMLVersion[] = """"<?xml version=\""""1.0\""""?>\n"""";
 
         rv = rdf_BlockingWrite(aStream, NS_LITERAL_CSTRING(""""=\""""""""));
         if (NS_FAILED(rv)) return rv;
-        rv = rdf_BlockingWrite(aStream, entry->mURI);
+        nsCAutoString uri(entry->mURI);
+        rdf_EscapeAttributeValue(uri);
+        rv = rdf_BlockingWrite(aStream, uri);
         if (NS_FAILED(rv)) return rv;
         rv = rdf_BlockingWrite(aStream, NS_LITERAL_CSTRING(""""\""""""""));
         if (NS_FAILED(rv)) return rv;"""
17f4ab02c98301e646edad97fee2c95f222992de,129234,319872,mrbkap%gmail.com,"bug 319872: Test for integer overflow while escaping stuff. r=brendan
",1134515883,"""diff --git a/js/src/jsscan.c b/js/src/jsscan.c
index e24d981..9043f69 100644
--- a/js/src/jsscan.c
+++ b/js/src/jsscan.c
@@ -798,8 +798,12 @@ GrowStringBuffer(JSStringBuffer *sb, size_t newlength)
     jschar *bp;
 
     offset = PTRDIFF(sb->ptr, sb->base, jschar);
-    newlength += offset;
-    bp = (jschar *) realloc(sb->base, (newlength + 1) * sizeof(jschar));
+    JS_ASSERT(offset >= 0);
+    newlength += offset + 1;
+    if ((size_t)offset < newlength && newlength < ~(size_t)0 / sizeof(jschar))
+        bp = realloc(sb->base, newlength * sizeof(jschar));
+    else
+        bp = NULL;
     if (!bp) {
         free(sb->base);
         sb->base = STRING_BUFFER_ERROR_BASE;
@@ -807,7 +811,7 @@ GrowStringBuffer(JSStringBuffer *sb, size_t newlength)
     }
     sb->base = bp;
     sb->ptr = bp + offset;
-    sb->limit = bp + newlength;
+    sb->limit = bp + newlength - 1;
     return JS_TRUE;
 }
 
diff --git a/js/src/jsxml.c b/js/src/jsxml.c
index 4bb9a4e..d6e712f 100644
--- a/js/src/jsxml.c
+++ b/js/src/jsxml.c
@@ -2300,6 +2300,11 @@ EscapeElementValue(JSContext *cx, JSStringBuffer *sb, JSString *str)
             newlength += 3;
         else if (c == '&')
             newlength += 4;
+
+        if (newlength < length) {
+            JS_ReportOutOfMemory(cx);
+            return NULL;
+        }
     }
     if ((sb && STRING_BUFFER_OFFSET(sb) != 0) || newlength > length) {
         JSStringBuffer localSB;
@@ -2307,7 +2312,7 @@ EscapeElementValue(JSContext *cx, JSStringBuffer *sb, JSString *str)
             sb = &localSB;
             js_InitStringBuffer(sb);
         }
-        if (!sb->grow(sb, STRING_BUFFER_OFFSET(sb) + newlength)) {
+        if (!sb->grow(sb, newlength)) {
             JS_ReportOutOfMemory(cx);
             return NULL;
         }
@@ -2350,6 +2355,11 @@ EscapeAttributeValue(JSContext *cx, JSStringBuffer *sb, JSString *str)
             newlength += 3;
         else if (c == '&' || c == '\n' || c == '\r' || c == '\t')
             newlength += 4;
+
+        if (newlength < length) {
+            JS_ReportOutOfMemory(cx);
+            return NULL;
+        }
     }
     if ((sb && STRING_BUFFER_OFFSET(sb) != 0) || newlength > length) {
         JSStringBuffer localSB;
@@ -2357,7 +2367,7 @@ EscapeAttributeValue(JSContext *cx, JSStringBuffer *sb, JSString *str)
             sb = &localSB;
             js_InitStringBuffer(sb);
         }
-        if (!sb->grow(sb, STRING_BUFFER_OFFSET(sb) + newlength)) {
+        if (!sb->grow(sb, newlength)) {
             JS_ReportOutOfMemory(cx);
             return NULL;
         }"""
90eb86082eacffd5e4b45fc43c6b283176f8dafd,129385,306940,bzbarsky%mit.edu,"Handle XUL popups gracefully in non-XUL documents.  Bug 306940, r+sr=roc
",1134079446,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index 337e8c4..7af1570 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -6446,20 +6446,32 @@ nsCSSFrameConstructor::ConstructXULFrame(nsFrameConstructorState& aState,
       if (rootFrame)
         rootFrame = rootFrame->GetFirstChild(nsnull);
       nsCOMPtr<nsIRootBox> rootBox(do_QueryInterface(rootFrame));
-      NS_ASSERTION(rootBox, """"unexpected null pointer"""");
+      PRBool added = PR_FALSE;
       if (rootBox) {
         nsIFrame* popupSetFrame = rootBox->GetPopupSetFrame();
         NS_ASSERTION(popupSetFrame, """"unexpected null pointer"""");
         if (popupSetFrame) {
           nsCOMPtr<nsIPopupSetFrame> popupSet(do_QueryInterface(popupSetFrame));
           NS_ASSERTION(popupSet, """"unexpected null pointer"""");
-          if (popupSet)
+          if (popupSet) {
+            added = PR_TRUE;
             popupSet->AddPopupFrame(newFrame);
+          }
         }
       }
 
-      // Add the placeholder frame to the flow
-      aFrameItems.AddChild(placeholderFrame);
+      if (added) {
+        // Add the placeholder frame to the flow
+        aFrameItems.AddChild(placeholderFrame);
+      } else {
+        // Didn't add the popup set frame...  Need to clean up and
+        // just not construct a frame here.
+        aState.mFrameManager->UnregisterPlaceholderFrame(NS_STATIC_CAST(nsPlaceholderFrame*, placeholderFrame));
+        newFrame->Destroy(aState.mPresContext);
+        placeholderFrame->Destroy(aState.mPresContext);
+        *aHaltProcessing = PR_TRUE;
+        return NS_OK;        
+      }
     } else {
 #endif
       // Add the new frame to our list of frame items.  Note that we"""
ea8d07f788ce2e70cd2ce592cb4a0c1f31b07cbf,129737,317934,bzbarsky%mit.edu,"Get the right parent frame up front when dealing with :after content.  Bug
317934, r+sr=roc
",1133215748,"""diff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp
index 3cea7ad..c208b45 100644
--- a/layout/base/nsCSSFrameConstructor.cpp
+++ b/layout/base/nsCSSFrameConstructor.cpp
@@ -8188,6 +8188,35 @@ nsCSSFrameConstructor::GetFloatContainingBlock(nsIFrame* aFrame)
 }
 
 /**
+ * This function will check whether aContainer has :after generated content.
+ * If so, appending to it should actually insert.  The return value is the
+ * parent to use for newly-appended content.  *aAfterFrame points to the :after
+ * frame before which appended content should go, if there is one.
+ */
+static nsIFrame*
+AdjustAppendParentForAfterContent(nsPresContext* aPresContext,
+                                  nsIContent* aContainer,
+                                  nsIFrame* aParentFrame,
+                                  nsIFrame** aAfterFrame)
+{
+  // See if the parent has an :after pseudo-element.  Check for the presence
+  // of style first, since nsLayoutUtils::GetAfterFrame is sorta expensive.
+  nsStyleContext* parentStyle = aParentFrame->GetStyleContext();
+  if (nsLayoutUtils::HasPseudoStyle(aContainer, parentStyle,
+                                    nsCSSPseudoElements::after,
+                                    aPresContext)) {
+    nsIFrame* afterFrame = nsLayoutUtils::GetAfterFrame(aParentFrame);
+    if (afterFrame) {
+      *aAfterFrame = afterFrame;
+      return afterFrame->GetParent();
+    }
+  }
+
+  *aAfterFrame = nsnull;
+  return aParentFrame;
+}
+
+/**
  * This function is called by ContentAppended() and ContentInserted()
  * when appending flowed frames to a parent's principal child list. It
  * handles the case where the parent frame has :after pseudo-element
@@ -8197,35 +8226,26 @@ nsresult
 nsCSSFrameConstructor::AppendFrames(const nsFrameConstructorState& aState,
                                     nsIContent*                    aContainer,
                                     nsIFrame*                      aParentFrame,
-                                    nsIFrame*                      aFrameList)
+                                    nsIFrame*                      aFrameList,
+                                    nsIFrame*                      aAfterFrame)
 {
-  // See if the parent has an :after pseudo-element.  Check for the presence
-  // of style first, since nsLayoutUtils::GetAfterFrame is sorta expensive.
-  nsStyleContext* parentStyle = aParentFrame->GetStyleContext();
+#ifdef DEBUG
+  nsIFrame* debugAfterFrame;
+  nsIFrame* debugNewParent =
+    ::AdjustAppendParentForAfterContent(aState.mPresContext, aContainer,
+                                        aParentFrame, &debugAfterFrame);
+  NS_ASSERTION(debugNewParent == aParentFrame, """"Incorrect parent"""");
+  NS_ASSERTION(debugAfterFrame == aAfterFrame, """"Incorrect after frame"""");
+#endif
+
   nsFrameManager* frameManager = aState.mFrameManager;
-  if (nsLayoutUtils::HasPseudoStyle(aContainer, parentStyle,
-                                    nsCSSPseudoElements::after,
-                                    aState.mPresContext)) {
-    nsIFrame* afterFrame = nsLayoutUtils::GetAfterFrame(aParentFrame);
-    if (afterFrame) {
-      // aParentFrame may have next-in-flows.  If there's no :after content
-      // around, we automatically get the right in-flow as aParentFrame.  But
-      // in this case, we could have ended up with the prev-in-flow of the
-      // right thing (the """"right thing"""" being the last-in-flow for an append).
-      // Looking for afterFrame in the child list of it would then fail, and we
-      // could end up inserting our new frame at the wrong place.  So just set
-      // aParentFrame to the parent of afterFrame.  That will make sure we're
-      // getting our ordering right, and if our frame needs to be pulled up to
-      // the prev-in-flow that will happen when we reflow.
-      aParentFrame = afterFrame->GetParent();
-      nsFrameList frames(aParentFrame->GetFirstChild(nsnull));
-
-      // Insert the frames before the :after pseudo-element.
-      return frameManager->InsertFrames(aParentFrame,
-                                        nsnull,
-                                        frames.GetPrevSiblingFor(afterFrame),
-                                        aFrameList);
-    }
+  if (aAfterFrame) {
+    nsFrameList frames(aParentFrame->GetFirstChild(nsnull));
+
+    // Insert the frames before the :after pseudo-element.
+    return frameManager->InsertFrames(aParentFrame, nsnull,
+                                      frames.GetPrevSiblingFor(aAfterFrame),
+                                      aFrameList);
   }
 
   return frameManager->AppendFrames(aParentFrame, nsnull, aFrameList);
@@ -8822,6 +8842,14 @@ nsCSSFrameConstructor::ContentAppended(nsIContent*     aContainer,
   // Deal with inner/outer tables, fieldsets
   parentFrame = ::GetAdjustedParentFrame(parentFrame, frameType,
                                          aContainer, aNewIndexInContainer);
+
+  // Deal with possible :after generated content on the parent
+  nsIFrame* parentAfterFrame;
+  parentFrame =
+    ::AdjustAppendParentForAfterContent(mPresShell->GetPresContext(),
+                                        aContainer, parentFrame,
+                                        &parentAfterFrame);
+  
   // Create some new frames
   PRUint32                count;
   nsIFrame*               firstAppendedFrame = nsnull;
@@ -8943,11 +8971,13 @@ nsCSSFrameConstructor::ContentAppended(nsIContent*     aContainer,
         }
       }
       if (frameItems.childList) { // append children of the inner table
-        AppendFrames(state, aContainer, parentFrame, frameItems.childList);
+        AppendFrames(state, aContainer, parentFrame, frameItems.childList,
+                     parentAfterFrame);
       }
     }
     else {
-      AppendFrames(state, aContainer, parentFrame, firstAppendedFrame);
+      AppendFrames(state, aContainer, parentFrame, firstAppendedFrame,
+                   parentAfterFrame);
     }
 
     // Recover first-letter frames
@@ -9267,6 +9297,7 @@ nsCSSFrameConstructor::ContentInserted(nsIContent*            aContainer,
     : FindPreviousAnonymousSibling(mPresShell, mDocument, aContainer, aChild);
 
   PRBool    isAppend = PR_FALSE;
+  nsIFrame* appendAfterFrame;  // This is only looked at when isAppend is true
   nsIFrame* nextSibling = nsnull;
     
   // If there is no previous sibling, then find the frame that follows
@@ -9295,6 +9326,10 @@ nsCSSFrameConstructor::ContentInserted(nsIContent*            aContainer,
     // Deal with inner/outer tables, fieldsets
     parentFrame = ::GetAdjustedParentFrame(parentFrame, parentFrame->GetType(),
                                            aContainer, aIndexInContainer);
+    parentFrame =
+      ::AdjustAppendParentForAfterContent(mPresShell->GetPresContext(),
+                                          aContainer, parentFrame,
+                                          &appendAfterFrame);
   }
 
   if (parentFrame->GetType() == nsLayoutAtoms::frameSetFrame) {
@@ -9484,7 +9519,7 @@ nsCSSFrameConstructor::ContentInserted(nsIContent*            aContainer,
   if (NS_SUCCEEDED(rv) && newFrame) {
     // Notify the parent frame
     if (isAppend) {
-      AppendFrames(state, aContainer, parentFrame, newFrame);
+      AppendFrames(state, aContainer, parentFrame, newFrame, appendAfterFrame);
     }
     else {
       if (!prevSibling) {
@@ -13370,7 +13405,7 @@ nsCSSFrameConstructor::CreateInsertionPointChildren(nsFrameConstructorState &aSt
 
   if (NS_SUCCEEDED(rv) && insertionItems.childList) {
     rv = AppendFrames(aState, creatorContent, insertionFrame,
-                      insertionItems.childList);
+                      insertionItems.childList, nsnull);
   }
 
   return rv;
diff --git a/layout/base/nsCSSFrameConstructor.h b/layout/base/nsCSSFrameConstructor.h
index 18b1c14..b010ae7 100644
--- a/layout/base/nsCSSFrameConstructor.h
+++ b/layout/base/nsCSSFrameConstructor.h
@@ -271,7 +271,8 @@ private:
   nsresult AppendFrames(const nsFrameConstructorState& aState,
                         nsIContent*                    aContainer,
                         nsIFrame*                      aParentFrame,
-                        nsIFrame*                      aFrameList);
+                        nsIFrame*                      aFrameList,
+                        nsIFrame*                      aAfterFrame);
 
   // BEGIN TABLE SECTION
   /**"""
f048013d479b925cf93297a2a15194bc109d8188,129799,316885,brendan%mozilla.org,"Fix bad regression in fix for 316885 (317714, r=shaver).
",1132904945,"""diff --git a/js/src/jsemit.c b/js/src/jsemit.c
index 0a39cce..fcedc8e 100644
--- a/js/src/jsemit.c
+++ b/js/src/jsemit.c
@@ -4345,16 +4345,6 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
           case TOK_DOT:
             if (!EmitPropOp(cx, pn2, op, cg))
                 return JS_FALSE;
-            /*
-             * Allocate an extra stack slot for GC protection in case the
-             * initial value being post-incremented or -decremented is not
-             * a number, but converts to a jsdouble.  See jsinterp.c, the
-             * JSOP_PROPINC and JSOP_PROPDEC cases.
-             */
-            if ((js_CodeSpec[op].format & JOF_POST) &&
-                (uintN)cg->stackDepth == cg->maxStackDepth) {
-                ++cg->maxStackDepth;
-            }
             break;
           case TOK_LB:
             if (!EmitElemOp(cx, pn2, op, cg))
@@ -4386,6 +4376,19 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
           default:
             JS_ASSERT(0);
         }
+
+        /*
+         * Allocate another stack slot for GC protection in case the initial
+         * value being post-incremented or -decremented is not a number, but
+         * converts to a jsdouble.  In the TOK_NAME cases, op has 0 operand
+         * uses and 1 definition, so we don't need an extra stack slot -- we
+         * can use the one allocated for the def.
+         */
+        if (pn2->pn_type != TOK_NAME &&
+            (js_CodeSpec[op].format & JOF_POST) &&
+            (uintN)cg->stackDepth == cg->maxStackDepth) {
+            ++cg->maxStackDepth;
+        }
         break;
 
       case TOK_DELETE:
diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index 29e2233..5edd210 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -3437,7 +3437,7 @@ interrupt:
             goto out;                                                         \
     JS_END_MACRO
 
-                if ((cs->format & JOF_POST) && i != -2) {
+                if (cs->format & JOF_POST) {
                     /*
                      * We must push early to protect the postfix increment
                      * or decrement result, if converted to a jsdouble from
@@ -3450,6 +3450,7 @@ interrupt:
 #ifdef __GNUC__
                 else vp = NULL; /* suppress bogus gcc warnings */
 #endif
+
                 NONINT_INCREMENT_OP_MIDDLE();
             }
 """
f533400ba1fcaae43488866257cbfc6c98edfd0d,129944,316885,brendan%mozilla.org,"Root me harder (316885 r/sr=igor/shaver).
",1132620425,"""diff --git a/js/src/jsemit.c b/js/src/jsemit.c
index ba45e23..0a39cce 100644
--- a/js/src/jsemit.c
+++ b/js/src/jsemit.c
@@ -4345,6 +4345,16 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)
           case TOK_DOT:
             if (!EmitPropOp(cx, pn2, op, cg))
                 return JS_FALSE;
+            /*
+             * Allocate an extra stack slot for GC protection in case the
+             * initial value being post-incremented or -decremented is not
+             * a number, but converts to a jsdouble.  See jsinterp.c, the
+             * JSOP_PROPINC and JSOP_PROPDEC cases.
+             */
+            if ((js_CodeSpec[op].format & JOF_POST) &&
+                (uintN)cg->stackDepth == cg->maxStackDepth) {
+                ++cg->maxStackDepth;
+            }
             break;
           case TOK_LB:
             if (!EmitElemOp(cx, pn2, op, cg))
diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index e6aa8ec..93fe8ad 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -2827,6 +2827,7 @@ interrupt:
             }                                                                 \
         } else {                                                              \
             VALUE_TO_PRIMITIVE(cx, lval, JSTYPE_NUMBER, &lval);               \
+            sp[-2] = lval;                                                    \
             VALUE_TO_PRIMITIVE(cx, rval, JSTYPE_NUMBER, &rval);               \
             if (JSVAL_IS_STRING(lval) && JSVAL_IS_STRING(rval)) {             \
                 str  = JSVAL_TO_STRING(lval);                                 \
@@ -2913,10 +2914,12 @@ interrupt:
                 cond = 1 OP 0;                                                \
             } else {                                                          \
                 if (ltmp == JSVAL_OBJECT) {                                   \
-                    VALUE_TO_PRIMITIVE(cx, lval, JSTYPE_VOID, &lval);         \
+                    VALUE_TO_PRIMITIVE(cx, lval, JSTYPE_VOID, &sp[-2]);       \
+                    lval = sp[-2];                                            \
                     ltmp = JSVAL_TAG(lval);                                   \
                 } else if (rtmp == JSVAL_OBJECT) {                            \
-                    VALUE_TO_PRIMITIVE(cx, rval, JSTYPE_VOID, &rval);         \
+                    VALUE_TO_PRIMITIVE(cx, rval, JSTYPE_VOID, &sp[-1]);       \
+                    rval = sp[-1];                                            \
                     rtmp = JSVAL_TAG(rval);                                   \
                 }                                                             \
                 if (ltmp == JSVAL_STRING && rtmp == JSVAL_STRING) {           \
@@ -3048,16 +3051,18 @@ interrupt:
             } else
 #endif
             {
-                VALUE_TO_PRIMITIVE(cx, lval, JSTYPE_VOID, &ltmp);
-                VALUE_TO_PRIMITIVE(cx, rval, JSTYPE_VOID, &rtmp);
-                if ((cond = JSVAL_IS_STRING(ltmp)) || JSVAL_IS_STRING(rtmp)) {
-                    SAVE_SP_AND_PC(fp);
+                VALUE_TO_PRIMITIVE(cx, lval, JSTYPE_VOID, &sp[-2]);
+                lval = sp[-2];
+                VALUE_TO_PRIMITIVE(cx, rval, JSTYPE_VOID, &sp[-1]);
+                rval = sp[-1];
+                if ((cond = JSVAL_IS_STRING(lval)) || JSVAL_IS_STRING(rval)) {
+                    SAVE_SP(fp);
                     if (cond) {
-                        str = JSVAL_TO_STRING(ltmp);
-                        ok = (str2 = js_ValueToString(cx, rtmp)) != NULL;
+                        str = JSVAL_TO_STRING(lval);
+                        ok = (str2 = js_ValueToString(cx, rval)) != NULL;
                     } else {
-                        str2 = JSVAL_TO_STRING(rtmp);
-                        ok = (str = js_ValueToString(cx, ltmp)) != NULL;
+                        str2 = JSVAL_TO_STRING(rval);
+                        ok = (str = js_ValueToString(cx, lval)) != NULL;
                     }
                     if (!ok)
                         goto out;
@@ -3405,7 +3410,9 @@ interrupt:
 /*
  * Initially, rval contains the value to increment or decrement, which is not
  * yet converted.  As above, the expression result goes in rtmp, the updated
- * value goes in rval.
+ * value goes in rval.  Our caller must set vp to point at a GC-rooted jsval
+ * in which we home rtmp, to protect it from GC in case the unconverted rval
+ * is not a number.
  */
 #define NONINT_INCREMENT_OP_MIDDLE()                                          \
     JS_BEGIN_MACRO                                                            \
@@ -3416,6 +3423,7 @@ interrupt:
                 ok = js_NewNumberValue(cx, d, &rtmp);                         \
                 if (!ok)                                                      \
                     goto out;                                                 \
+                *vp = rtmp;                                                   \
             }                                                                 \
             (cs->format & JOF_INC) ? d++ : d--;                               \
             ok = js_NewNumberValue(cx, d, &rval);                             \
@@ -3428,6 +3436,19 @@ interrupt:
             goto out;                                                         \
     JS_END_MACRO
 
+                if ((cs->format & JOF_POST) && i != -2) {
+                    /*
+                     * We must push early to protect the postfix increment
+                     * or decrement result, if converted to a jsdouble from
+                     * a non-number value, from GC nesting in the setter.
+                     */
+                    vp = sp++;
+                    SAVE_SP(fp);
+                    --i;
+                }
+#ifdef __GNUC__
+                else vp = NULL; /* suppress bogus gcc warnings */
+#endif
                 NONINT_INCREMENT_OP_MIDDLE();
             }
 
@@ -3537,9 +3558,11 @@ interrupt:
           {
             const JSCodeSpec *cs = &js_CodeSpec[op];
 
+            vp = sp++;
+            SAVE_SP(fp);
             NONINT_INCREMENT_OP_MIDDLE();
             OBJ_SET_SLOT(cx, obj, slot, rval);
-            PUSH_OPND(rtmp);
+            STORE_OPND(-1, rtmp);
             len = cs->length;
             DO_NEXT_OP(len);
           }"""
8b1c6d7c9bb9d6a4e6497951c1b4e43c5e55e4dd,130575,307809,bzbarsky%mit.edu,"Make grids less crash-happy.  Bug 307809, r+sr=dbaron
",1131502512,"""diff --git a/layout/xul/base/src/grid/nsGridRowLayout.cpp b/layout/xul/base/src/grid/nsGridRowLayout.cpp
index 810515f..657bcaa 100644
--- a/layout/xul/base/src/grid/nsGridRowLayout.cpp
+++ b/layout/xul/base/src/grid/nsGridRowLayout.cpp
@@ -138,7 +138,12 @@ nsGridRowLayout::GetGrid(nsIBox* aBox, nsGrid** aList, PRInt32* aIndex, nsGridRo
      nsIBox* childBox = nsGrid::GetScrolledBox(child);
 
      nsCOMPtr<nsIBoxLayout> layout;
-     childBox->GetLayoutManager(getter_AddRefs(layout));
+     // childBox might be null if child is a scrollframe around a non-box.  But
+     // in that case I guess we can count this as a single grid row.  Or
+     // something.
+     if (childBox) {
+       childBox->GetLayoutManager(getter_AddRefs(layout));
+     }
      
      // find our requester
      nsCOMPtr<nsIGridPart> gridRow = do_QueryInterface(layout, &rv);"""
382a826a322befc57706cc480ef4bdc5261e53b0,130620,314980,mrbkap%gmail.com,"bug 314980: Handle trailing XML-like slashes by not accepting them into the attribute key at all, not by stripping them once they're already there. r=bzbarsky sr=jst
",1131408309,"""diff --git a/parser/htmlparser/public/nsHTMLTokens.h b/parser/htmlparser/public/nsHTMLTokens.h
index f2e83d9..9c4fff8 100644
--- a/parser/htmlparser/public/nsHTMLTokens.h
+++ b/parser/htmlparser/public/nsHTMLTokens.h
@@ -376,7 +376,6 @@ public:
   virtual void BindKey(nsScanner* aScanner, nsScannerIterator& aStart,
                        nsScannerIterator& aEnd);
   const nsSubstring& GetValue(void) {return mTextValue.str();}
-  virtual void SanitizeKey();
   virtual const nsSubstring& GetStringValue(void);
   virtual void GetSource(nsString& anOutputString);
   virtual void AppendSourceTo(nsAString& anOutputString);
diff --git a/parser/htmlparser/src/CNavDTD.cpp b/parser/htmlparser/src/CNavDTD.cpp
index b9ce0de..dca9329 100644
--- a/parser/htmlparser/src/CNavDTD.cpp
+++ b/parser/htmlparser/src/CNavDTD.cpp
@@ -2107,7 +2107,9 @@ nsresult CNavDTD::HandleDocTypeDeclToken(CToken* aToken){
  * @param   aCount is the # of attributes you're expecting
  * @return error code (should be 0)
  */
-nsresult CNavDTD::CollectAttributes(nsIParserNode *aNode,eHTMLTags aTag,PRInt32 aCount){
+nsresult CNavDTD::CollectAttributes(nsIParserNode *aNode, eHTMLTags aTag,
+                                    PRInt32 aCount)
+{
   int attr=0;
 
   nsresult result=NS_OK;
@@ -2131,12 +2133,6 @@ nsresult CNavDTD::CollectAttributes(nsIParserNode *aNode,eHTMLTags aTag,PRInt32
         }
 
         if(aNode) {
-          // Sanitize the key for it might contain some non-alpha-non-digit characters
-          // at its end.  Ex. <OPTION SELECTED/> - This will be tokenized as """"<"""" """"OPTION"""",
-          // """"SELECTED/"""", and """">"""". In this case the """"SELECTED/"""" key will be sanitized to
-          // a legitimate """"SELECTED"""" key.
-          ((CAttributeToken*)theToken)->SanitizeKey();
-          
           // If the key is empty, the attribute is unusable, so we should not
           // add it to the node.
           if (!((CAttributeToken*)theToken)->GetKey().IsEmpty()) {
diff --git a/parser/htmlparser/src/nsHTMLTokens.cpp b/parser/htmlparser/src/nsHTMLTokens.cpp
index 9933658..c9c9acd 100644
--- a/parser/htmlparser/src/nsHTMLTokens.cpp
+++ b/parser/htmlparser/src/nsHTMLTokens.cpp
@@ -1738,41 +1738,6 @@ PRInt32 CAttributeToken::GetTokenType(void) {
   return eToken_attribute;
 }
 
-/*
- *  Removes non-alpha-non-digit characters from the end of a KEY
- *  
- *  @update harishd 07/15/99
- *  @param  
- *  @return  
- */
-void CAttributeToken::SanitizeKey() {
-  PRInt32   length=mTextKey.Length();
-  if(length > 0) {
-    nsScannerIterator iter, begin, end;
-    mTextKey.BeginReading(begin);
-    mTextKey.EndReading(end);
-    iter = end;
-
-    // Look for the first legal character starting from
-    // the end of the string
-    do {
-      --iter;
-    } while (!nsCRT::IsAsciiAlpha(*iter) && 
-             !nsCRT::IsAsciiDigit(*iter) && 
-             (iter != begin));
-    
-    // If there were any illegal characters, just copy out the
-    // legal part
-    if (iter != --end) {
-      nsAutoString buf;
-      CopyUnicodeTo(begin, ++iter, buf);
-      mTextKey.Rebind(buf);
-    }
-  }
-
-  return;
-}
-
 const nsSubstring& CAttributeToken::GetStringValue(void)
 {
   return mTextValue.str();
@@ -1874,7 +1839,7 @@ nsresult ConsumeQuotedString(PRUnichar aChar,
 /*
  * This method is meant to be used by view-source to consume invalid attributes.
  * For the purposes of this method, an invalid attribute is an attribute that
- * starts with either ' or """". We consume all ' or """" and the following whitespace.
+ * starts with either ', """", or /. We consume all ', """", or / and the following whitespace.
  * 
  * @param aScanner -- the scanner we're reading our data from.
  * @param aChar -- the character we're skipping
@@ -1887,29 +1852,29 @@ nsresult ConsumeInvalidAttribute(nsScanner& aScanner,
                                  PRUnichar aChar,
                                  nsScannerIterator& aCurrent,
                                  PRInt32& aNewlineCount) {
-  NS_ASSERTION(aChar=='\'' || aChar=='""""', """"aChar must be a quote or apostrophe"""");
+  NS_ASSERTION(aChar == kApostrophe || aChar == kQuote || aChar == kForwardSlash,
+               """"aChar must be a quote or apostrophe"""");
   nsScannerIterator end, wsbeg;
   aScanner.EndReading(end);
 
-  while (aCurrent!=end && *aCurrent==aChar) {
+  while (aCurrent != end && *aCurrent == aChar) {
     ++aCurrent;
   }
 
   aScanner.SetPosition(aCurrent);
-  return aScanner.ReadWhitespace(wsbeg,aCurrent,aNewlineCount);
+  return aScanner.ReadWhitespace(wsbeg, aCurrent, aNewlineCount);
 }
 
 /*
  *  Consume the key and value portions of the attribute.
  *  
- *  @update  rickg 03.23.2000
  *  @param   aChar -- last char consumed from stream
  *  @param   aScanner -- controller of underlying input source
  *  @param   aFlag - contains information such as |dtd mode|view mode|doctype|etc...
  *  @return  error result
  */
-nsresult CAttributeToken::Consume(PRUnichar aChar, nsScanner& aScanner,PRInt32 aFlag) {
-
+nsresult CAttributeToken::Consume(PRUnichar aChar, nsScanner& aScanner, PRInt32 aFlag)
+{
   nsresult result;
  
   nsScannerIterator wsstart, wsend;
@@ -1933,7 +1898,7 @@ nsresult CAttributeToken::Consume(PRUnichar aChar, nsScanner& aScanner,PRInt32 a
       PRUnichar('\r'), PRUnichar('\t'), 
       PRUnichar('>'), PRUnichar('<'),
       PRUnichar('\b'), PRUnichar('\''),
-      PRUnichar(0) };
+      PRUnichar('/'), PRUnichar(0) };
     static const nsReadEndCondition theEndCondition(theTerminalsChars);
 
     nsScannerIterator start, end;
@@ -2036,25 +2001,27 @@ nsresult CAttributeToken::Consume(PRUnichar aChar, nsScanner& aScanner,PRInt32 a
           else {
             //This is where we have to handle fairly busted content.
             //If you're here, it means we saw an attribute name, but couldn't find 
-            //the following equal sign.  <tag NAME=....
+            //the following equal sign.  <tag NAME....
         
             //Doing this right in all cases is <i>REALLY</i> ugly. 
             //My best guess is to grab the next non-ws char. We know it's not '=',
             //so let's see what it is. If it's a '""""', then assume we're reading
             //from the middle of the value. Try stripping the quote and continuing...
-            if (kQuote==aChar || kApostrophe==aChar){
-              mInError=PR_TRUE;
+            //Note that this code also strips forward slashes to handle cases
+            //like <tag NAME/>
+            if (kQuote == aChar || kApostrophe == aChar || kForwardSlash == aChar) {
+              mInError = PR_TRUE;
 
               if (!(aFlag & NS_IPARSER_FLAG_VIEW_SOURCE)) {
-                result=aScanner.SkipOver(aChar); //strip quote.
+                result = aScanner.SkipOver(aChar); // Strip quote or slash.
                 if (NS_SUCCEEDED(result)) {
-                  result=aScanner.SkipWhitespace(mNewlineCount);
+                  result = aScanner.SkipWhitespace(mNewlineCount);
                 }
               } else {
                 //We want to collect whitespace here so that following 
                 //attributes can have the right line number (and for
                 //parity with the non-view-source code above).
-                result=ConsumeInvalidAttribute(aScanner,aChar,wsend,mNewlineCount);
+                result = ConsumeInvalidAttribute(aScanner, aChar, wsend, mNewlineCount);
 
                 aScanner.BindSubstring(mTextKey, wsstart, wsend);
                 aScanner.SetPosition(wsend);"""
5094a858cc678da53ee487f1c6b3f6585d913799,130639,315304,dveditz%cruzio.com,"bug 315304 throw exception (return JS_FALSE) if we can't create the native object. r=dougt, sr=brendan, a=schrep
",1131393508,"""diff --git a/xpinstall/src/nsJSInstallTriggerGlobal.cpp b/xpinstall/src/nsJSInstallTriggerGlobal.cpp
index b0cd2e9..723a558 100644
--- a/xpinstall/src/nsJSInstallTriggerGlobal.cpp
+++ b/xpinstall/src/nsJSInstallTriggerGlobal.cpp
@@ -197,19 +197,36 @@ InstallTriggerCheckLoadURIFromScript(JSContext *cx, const nsAString& uriStr)
 }
 
 //
+// Helper function to get native object
+//
+// This is our own version of JS_GetInstancePrivate() that in addition
+// performs the delayed creation of the native InstallTrigger if necessary
+//
+static nsIDOMInstallTriggerGlobal* getTriggerNative(JSContext *cx, JSObject *obj)
+{
+  if (!JS_InstanceOf(cx, obj, &InstallTriggerGlobalClass, nsnull))
+    return nsnull;
+
+  nsIDOMInstallTriggerGlobal *native = (nsIDOMInstallTriggerGlobal*)JS_GetPrivate(cx, obj);
+  if (!native) {
+    // xpinstall script contexts delay creation of the native.
+    CreateNativeObject(cx, obj, &native);
+  }
+  return native;
+}
+
+//
 // Native method UpdateEnabled
 //
 PR_STATIC_CALLBACK(JSBool)
 InstallTriggerGlobalUpdateEnabled(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
-  nsIDOMInstallTriggerGlobal *nativeThis = (nsIDOMInstallTriggerGlobal*)
-    JS_GetInstancePrivate(cx, obj, &InstallTriggerGlobalClass, 0);
+  nsIDOMInstallTriggerGlobal *nativeThis = getTriggerNative(cx, obj);
+  if (!nativeThis)
+    return JS_FALSE;
 
   *rval = JSVAL_FALSE;
 
-  if (nsnull == nativeThis  &&  (JS_FALSE == CreateNativeObject(cx, obj, &nativeThis)) )
-    return JS_TRUE;
-
   nsIScriptGlobalObject *globalObject = nsnull;
   nsIScriptContext *scriptContext = GetScriptContextFromJSContext(cx);
   if (scriptContext)
@@ -230,15 +247,12 @@ InstallTriggerGlobalUpdateEnabled(JSContext *cx, JSObject *obj, uintN argc, jsva
 PR_STATIC_CALLBACK(JSBool)
 InstallTriggerGlobalInstall(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 { 
-  nsIDOMInstallTriggerGlobal *nativeThis = (nsIDOMInstallTriggerGlobal*)
-    JS_GetInstancePrivate(cx, obj, &InstallTriggerGlobalClass, 0);
+  nsIDOMInstallTriggerGlobal *nativeThis = getTriggerNative(cx, obj);
+  if (!nativeThis)
+    return JS_FALSE;
 
   *rval = JSVAL_FALSE;
 
-  if (nsnull == nativeThis  &&  (JS_FALSE == CreateNativeObject(cx, obj, &nativeThis)) )
-    return JS_TRUE;
-
-
   // make sure XPInstall is enabled, return false if not
   nsIScriptGlobalObject *globalObject = nsnull;
   nsIScriptContext *scriptContext = GetScriptContextFromJSContext(cx);
@@ -414,8 +428,9 @@ InstallTriggerGlobalInstall(JSContext *cx, JSObject *obj, uintN argc, jsval *arg
 PR_STATIC_CALLBACK(JSBool)
 InstallTriggerGlobalInstallChrome(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
-  nsIDOMInstallTriggerGlobal *nativeThis = (nsIDOMInstallTriggerGlobal*)
-    JS_GetInstancePrivate(cx, obj, &InstallTriggerGlobalClass, 0);
+  nsIDOMInstallTriggerGlobal *nativeThis = getTriggerNative(cx, obj);
+  if (!nativeThis)
+    return JS_FALSE;
 
   uint32       chromeType = NOT_CHROME;
   nsAutoString sourceURL;
@@ -423,10 +438,6 @@ InstallTriggerGlobalInstallChrome(JSContext *cx, JSObject *obj, uintN argc, jsva
 
   *rval = JSVAL_FALSE;
 
-  if (nsnull == nativeThis  &&  (JS_FALSE == CreateNativeObject(cx, obj, &nativeThis)) ) {
-    return JS_TRUE;
-  }
-
   // get chromeType first, the update enabled check for skins skips whitelisting
   if (argc >=1)
       JS_ValueToECMAUint32(cx, argv[0], &chromeType);
@@ -506,17 +517,15 @@ InstallTriggerGlobalInstallChrome(JSContext *cx, JSObject *obj, uintN argc, jsva
 PR_STATIC_CALLBACK(JSBool)
 InstallTriggerGlobalStartSoftwareUpdate(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
-  nsIDOMInstallTriggerGlobal *nativeThis = (nsIDOMInstallTriggerGlobal*)
-    JS_GetInstancePrivate(cx, obj, &InstallTriggerGlobalClass, 0);
+  nsIDOMInstallTriggerGlobal *nativeThis = getTriggerNative(cx, obj);
+  if (!nativeThis)
+    return JS_FALSE;
 
   PRBool       nativeRet;
   PRInt32      flags = 0;
 
   *rval = JSVAL_FALSE;
 
-  if (nsnull == nativeThis  &&  (JS_FALSE == CreateNativeObject(cx, obj, &nativeThis)) )
-    return JS_TRUE;
-
   // make sure XPInstall is enabled, return if not
   nsIScriptGlobalObject *globalObject = nsnull;
   nsIScriptContext *scriptContext = GetScriptContextFromJSContext(cx);
@@ -595,8 +604,9 @@ InstallTriggerGlobalStartSoftwareUpdate(JSContext *cx, JSObject *obj, uintN argc
 PR_STATIC_CALLBACK(JSBool)
 InstallTriggerGlobalCompareVersion(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
-  nsIDOMInstallTriggerGlobal *nativeThis = (nsIDOMInstallTriggerGlobal*)
-    JS_GetInstancePrivate(cx, obj, &InstallTriggerGlobalClass, 0);
+  nsIDOMInstallTriggerGlobal *nativeThis = getTriggerNative(cx, obj);
+  if (!nativeThis)
+    return JS_FALSE;
 
   nsAutoString regname;
   nsAutoString version;
@@ -606,10 +616,6 @@ InstallTriggerGlobalCompareVersion(JSContext *cx, JSObject *obj, uintN argc, jsv
   PRInt32 nativeRet = nsIDOMInstallTriggerGlobal::NOT_FOUND;
   *rval = INT_TO_JSVAL(nativeRet);
 
-  if (nsnull == nativeThis  &&  (JS_FALSE == CreateNativeObject(cx, obj, &nativeThis)) )
-    return JS_TRUE;
-
-
   // make sure XPInstall is enabled, return if not
   nsIScriptGlobalObject *globalObject = nsnull;
   nsIScriptContext *scriptContext = GetScriptContextFromJSContext(cx);
@@ -696,8 +702,9 @@ InstallTriggerGlobalCompareVersion(JSContext *cx, JSObject *obj, uintN argc, jsv
 PR_STATIC_CALLBACK(JSBool)
 InstallTriggerGlobalGetVersion(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
-  nsIDOMInstallTriggerGlobal *nativeThis = (nsIDOMInstallTriggerGlobal*)
-    JS_GetInstancePrivate(cx, obj, &InstallTriggerGlobalClass, 0);
+  nsIDOMInstallTriggerGlobal *nativeThis = getTriggerNative(cx, obj);
+  if (!nativeThis)
+    return JS_FALSE;
 
   nsAutoString regname;
   nsAutoString version;
@@ -705,10 +712,6 @@ InstallTriggerGlobalGetVersion(JSContext *cx, JSObject *obj, uintN argc, jsval *
   // In case of error return a null value
   *rval = JSVAL_NULL;
 
-  if (nsnull == nativeThis  &&  (JS_FALSE == CreateNativeObject(cx, obj, &nativeThis)) )
-      return JS_TRUE;
-
-
   // make sure XPInstall is enabled, return if not
   nsIScriptGlobalObject *globalObject = nsnull;
   nsIScriptContext *scriptContext = GetScriptContextFromJSContext(cx);"""
9a4797947f1e9427b7363f5b07714ddfb6fbe89e,130700,307826,rbs%maths.uq.edu.au,"Don't permit floating or absolute positioning inside MathML, b=307826, r+sr=bz
",1131164593,"""diff --git a/layout/mathml/base/src/nsMathMLContainerFrame.h b/layout/mathml/base/src/nsMathMLContainerFrame.h
index e919fb1..ce034ea 100644
--- a/layout/mathml/base/src/nsMathMLContainerFrame.h
+++ b/layout/mathml/base/src/nsMathMLContainerFrame.h
@@ -362,6 +362,7 @@ public:
   AppendFrames(nsIAtom*        aListName,
                nsIFrame*       aFrameList)
   {
+    NS_ASSERTION(!aListName, """"internal error"""");
     nsresult rv = nsBlockFrame::AppendFrames(aListName, aFrameList);
     nsMathMLContainerFrame::ReLayoutChildren(this);
     return rv;
@@ -372,8 +373,8 @@ public:
                nsIFrame*       aPrevFrame,
                nsIFrame*       aFrameList)
   {
-    nsresult rv = nsBlockFrame::InsertFrames(aListName, aPrevFrame,
-                                             aFrameList);
+    NS_ASSERTION(!aListName, """"internal error"""");
+    nsresult rv = nsBlockFrame::InsertFrames(aListName, aPrevFrame, aFrameList);
     nsMathMLContainerFrame::ReLayoutChildren(this);
     return rv;
   }
@@ -383,6 +384,7 @@ public:
                nsIFrame*       aOldFrame,
                nsIFrame*       aNewFrame)
   {
+    NS_ASSERTION(!aListName, """"internal error"""");
     nsresult rv = nsBlockFrame::ReplaceFrame(aListName, aOldFrame, aNewFrame);
     nsMathMLContainerFrame::ReLayoutChildren(this);
     return rv;
@@ -392,6 +394,7 @@ public:
   RemoveFrame(nsIAtom*        aListName,
               nsIFrame*       aOldFrame)
   {
+    NS_ASSERTION(!aListName, """"internal error"""");
     nsresult rv = nsBlockFrame::RemoveFrame(aListName, aOldFrame);
     nsMathMLContainerFrame::ReLayoutChildren(this);
     return rv;
@@ -446,6 +449,7 @@ public:
   AppendFrames(nsIAtom*        aListName,
                nsIFrame*       aFrameList)
   {
+    NS_ASSERTION(!aListName, """"internal error"""");
     nsresult rv = nsInlineFrame::AppendFrames(aListName, aFrameList);
     nsMathMLContainerFrame::ReLayoutChildren(this);
     return rv;
@@ -456,8 +460,8 @@ public:
                nsIFrame*       aPrevFrame,
                nsIFrame*       aFrameList)
   {
-    nsresult rv = nsInlineFrame::InsertFrames(aListName, aPrevFrame,
-                                              aFrameList);
+    NS_ASSERTION(!aListName, """"internal error"""");
+    nsresult rv = nsInlineFrame::InsertFrames(aListName, aPrevFrame, aFrameList);
     nsMathMLContainerFrame::ReLayoutChildren(this);
     return rv;
   }
@@ -467,6 +471,7 @@ public:
                nsIFrame*       aOldFrame,
                nsIFrame*       aNewFrame)
   {
+    NS_ASSERTION(!aListName, """"internal error"""");
     nsresult rv = nsInlineFrame::ReplaceFrame(aListName, aOldFrame, aNewFrame);
     nsMathMLContainerFrame::ReLayoutChildren(this);
     return rv;
@@ -476,6 +481,7 @@ public:
   RemoveFrame(nsIAtom*        aListName,
               nsIFrame*       aOldFrame)
   {
+    NS_ASSERTION(!aListName, """"internal error"""");
     nsresult rv = nsInlineFrame::RemoveFrame(aListName, aOldFrame);
     nsMathMLContainerFrame::ReLayoutChildren(this);
     return rv;
diff --git a/layout/mathml/content/src/mathml.css b/layout/mathml/content/src/mathml.css
index da26553..6e00af6 100644
--- a/layout/mathml/content/src/mathml.css
+++ b/layout/mathml/content/src/mathml.css
@@ -42,6 +42,11 @@
 
 @namespace url(http://www.w3.org/1998/Math/MathML);
 
+/* MathML doesn't permit floating and positioning */
+*, * > *|* {
+  float: none !important;
+  position: static !important;
+}
 
 /**************************************************************************/
 /* <math> - outermost math element                                        */"""
2b996ec15bb1659e292bcd3911b43d0adb723849,131546,313763,brendan%mozilla.org,"Use explicit local roots in native methods (313763, r/sr=igor/shaver).
",1130807616,"""diff --git a/js/src/jsarray.c b/js/src/jsarray.c
index dd79b8d..50400fa 100644
--- a/js/src/jsarray.c
+++ b/js/src/jsarray.c
@@ -1060,7 +1060,7 @@ array_shift(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
     jsuint length, i;
     jsid id, id2;
-    jsval v, junk;
+    jsval junk;
 
     if (!js_GetLengthProperty(cx, obj, &length))
         return JS_FALSE;
@@ -1081,9 +1081,9 @@ array_shift(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
                     return JS_FALSE;
                 if (!IndexToId(cx, i - 1, &id2))
                     return JS_FALSE;
-                if (!OBJ_GET_PROPERTY(cx, obj, id, &v))
+                if (!OBJ_GET_PROPERTY(cx, obj, id, &argv[0]))
                     return JS_FALSE;
-                if (!OBJ_SET_PROPERTY(cx, obj, id2, &v))
+                if (!OBJ_SET_PROPERTY(cx, obj, id2, &argv[0]))
                     return JS_FALSE;
             }
         }
@@ -1102,7 +1102,7 @@ array_unshift(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     jsuint length, last;
     uintN i;
     jsid id, id2;
-    jsval v;
+    jsval *vp, junk;
 
     if (!js_GetLengthProperty(cx, obj, &length))
         return JS_FALSE;
@@ -1110,18 +1110,19 @@ array_unshift(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
         /* Slide up the array to make room for argc at the bottom. */
         if (length > 0) {
             last = length;
+            vp = argv + argc;
             while (last--) {
                 if (!IndexToExistingId(cx, obj, last, &id))
                     return JS_FALSE;
                 if (id == JSID_HOLE) {
-                    OBJ_DELETE_PROPERTY(cx, obj, id2, &v); /* v is junk. */
+                    OBJ_DELETE_PROPERTY(cx, obj, id2, &junk);
                     continue;
                 }
-                if (!OBJ_GET_PROPERTY(cx, obj, id, &v))
+                if (!OBJ_GET_PROPERTY(cx, obj, id, vp))
                     return JS_FALSE;
                 if (!IndexToId(cx, last + argc, &id2))
                     return JS_FALSE;
-                if (!OBJ_SET_PROPERTY(cx, obj, id2, &v))
+                if (!OBJ_SET_PROPERTY(cx, obj, id2, vp))
                     return JS_FALSE;
             }
         }
@@ -1145,16 +1146,20 @@ array_unshift(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
 static JSBool
 array_splice(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
+    jsval *vp, junk;
     jsuint length, begin, end, count, delta, last;
-    uintN i;
     jsdouble d;
     jsid id, id2;
-    jsval v;
     JSObject *obj2;
+    uintN i;
 
-    /* Nothing to do if no args.  Otherwise lock and load length. */
+    /*
+     * Nothing to do if no args.  Otherwise point vp at our one explicit local
+     * root and get length.
+     */
     if (argc == 0)
         return JS_TRUE;
+    vp = argv + argc;
     if (!js_GetLengthProperty(cx, obj, &length))
         return JS_FALSE;
 
@@ -1228,11 +1233,11 @@ array_splice(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
                         return JS_FALSE;
                     if (id == JSID_HOLE)
                         continue;       /* don't fill holes in the new array */
-                    if (!OBJ_GET_PROPERTY(cx, obj, id, &v))
+                    if (!OBJ_GET_PROPERTY(cx, obj, id, vp))
                         return JS_FALSE;
                     if (!IndexToId(cx, last - begin, &id2))
                         return JS_FALSE;
-                    if (!OBJ_SET_PROPERTY(cx, obj2, id2, &v))
+                    if (!OBJ_SET_PROPERTY(cx, obj2, id2, vp))
                         return JS_FALSE;
                 }
 
@@ -1253,12 +1258,12 @@ array_splice(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
             if (!IndexToId(cx, last + delta, &id2))
                 return JS_FALSE;
             if (id != JSID_HOLE) {
-                if (!OBJ_GET_PROPERTY(cx, obj, id, &v))
+                if (!OBJ_GET_PROPERTY(cx, obj, id, vp))
                     return JS_FALSE;
-                if (!OBJ_SET_PROPERTY(cx, obj, id2, &v))
+                if (!OBJ_SET_PROPERTY(cx, obj, id2, vp))
                     return JS_FALSE;
             } else {
-                if (!OBJ_DELETE_PROPERTY(cx, obj, id2, &v))
+                if (!OBJ_DELETE_PROPERTY(cx, obj, id2, &junk))
                     return JS_FALSE;
             }
         }
@@ -1271,12 +1276,12 @@ array_splice(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
             if (!IndexToId(cx, last - delta, &id2))
                 return JS_FALSE;
             if (id != JSID_HOLE) {
-                if (!OBJ_GET_PROPERTY(cx, obj, id, &v))
+                if (!OBJ_GET_PROPERTY(cx, obj, id, vp))
                     return JS_FALSE;
-                if (!OBJ_SET_PROPERTY(cx, obj, id2, &v))
+                if (!OBJ_SET_PROPERTY(cx, obj, id2, vp))
                     return JS_FALSE;
             } else {
-                if (!OBJ_DELETE_PROPERTY(cx, obj, id2, &v))
+                if (!OBJ_DELETE_PROPERTY(cx, obj, id2, &junk))
                     return JS_FALSE;
             }
         }
@@ -1303,12 +1308,15 @@ array_splice(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 static JSBool
 array_concat(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
+    jsval *vp, v;
     JSObject *nobj, *aobj;
     jsuint length, alength, slot;
     uintN i;
-    jsval v;
     jsid id, id2;
 
+    /* Hoist the explicit local root address computation. */
+    vp = argv + argc;
+
     /* Treat obj as the first argument; see ECMA 15.4.4.4. */
     --argv;
     JS_ASSERT(obj == JSVAL_TO_OBJECT(argv[0]));
@@ -1329,10 +1337,10 @@ array_concat(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
                 if (!OBJ_GET_PROPERTY(cx, aobj,
                                       ATOM_TO_JSID(cx->runtime->atomState
                                                    .lengthAtom),
-                                      &v)) {
+                                      vp)) {
                     return JS_FALSE;
                 }
-                if (!ValueIsLength(cx, v, &alength))
+                if (!ValueIsLength(cx, *vp, &alength))
                     return JS_FALSE;
                 for (slot = 0; slot < alength; slot++) {
                     if (!IndexToExistingId(cx, aobj, slot, &id))
@@ -1344,11 +1352,11 @@ array_concat(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
                          */
                         continue;
                     }
-                    if (!OBJ_GET_PROPERTY(cx, aobj, id, &v))
+                    if (!OBJ_GET_PROPERTY(cx, aobj, id, vp))
                         return JS_FALSE;
                     if (!IndexToId(cx, length + slot, &id2))
                         return JS_FALSE;
-                    if (!OBJ_SET_PROPERTY(cx, nobj, id2, &v))
+                    if (!OBJ_SET_PROPERTY(cx, nobj, id2, vp))
                         return JS_FALSE;
                 }
                 length += alength;
@@ -1356,9 +1364,10 @@ array_concat(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
             }
         }
 
+        *vp = v;
         if (!IndexToId(cx, length, &id))
             return JS_FALSE;
-        if (!OBJ_SET_PROPERTY(cx, nobj, id, &v))
+        if (!OBJ_SET_PROPERTY(cx, nobj, id, vp))
             return JS_FALSE;
         length++;
     }
@@ -1369,11 +1378,14 @@ array_concat(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 static JSBool
 array_slice(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
+    jsval *vp;
     JSObject *nobj;
     jsuint length, begin, end, slot;
     jsdouble d;
     jsid id, id2;
-    jsval v;
+
+    /* Hoist the explicit local root address computation. */
+    vp = argv + argc;
 
     /* Create a new Array object and store it in the rval local root. */
     nobj = js_NewArrayObject(cx, 0, NULL);
@@ -1422,11 +1434,11 @@ array_slice(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
             return JS_FALSE;
         if (id == JSID_HOLE)
             continue;
-        if (!OBJ_GET_PROPERTY(cx, obj, id, &v))
+        if (!OBJ_GET_PROPERTY(cx, obj, id, vp))
             return JS_FALSE;
         if (!IndexToId(cx, slot - begin, &id2))
             return JS_FALSE;
-        if (!OBJ_SET_PROPERTY(cx, nobj, id2, &v))
+        if (!OBJ_SET_PROPERTY(cx, nobj, id2, vp))
             return JS_FALSE;
     }
     return js_SetLengthProperty(cx, nobj, end - begin);
@@ -1523,13 +1535,16 @@ static JSBool
 array_extra(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval,
             ArrayExtraMode mode)
 {
+    jsval *vp, *sp, *origsp, *oldsp;
     jsuint length, newlen, i;
     JSObject *callable, *thisp, *newarr;
-    jsval *sp, *origsp, *oldsp;
     void *mark;
     JSStackFrame *fp;
     JSBool ok, b;
 
+    /* Hoist the explicit local root address computation. */
+    vp = argv + argc;
+
     if (!js_GetLengthProperty(cx, obj, &length))
         return JS_FALSE;
 
@@ -1545,6 +1560,11 @@ array_extra(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval,
      * Set our initial return condition, used for zero-length array cases
      * (and pre-size our map return to match our known length, for all cases).
      */
+#ifdef __GNUC__ /* quell GCC overwarning */
+    newlen = 0;
+    newarr = NULL;
+    ok = JS_TRUE;
+#endif
     switch (mode) {
       case MAP:
       case FILTER:
@@ -1589,14 +1609,14 @@ array_extra(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval,
 
     for (i = 0; i < length; i++) {
         jsid id;
-        jsval v, rval2;
+        jsval rval2;
 
         ok = IndexToExistingId(cx, obj, i, &id);
         if (!ok)
             break;
         if (id == JSID_HOLE)
             continue;
-        ok = OBJ_GET_PROPERTY(cx, obj, id, &v);
+        ok = OBJ_GET_PROPERTY(cx, obj, id, vp);
         if (!ok)
             break;
 
@@ -1604,7 +1624,7 @@ array_extra(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval,
         sp = origsp;
         *sp++ = OBJECT_TO_JSVAL(callable);
         *sp++ = OBJECT_TO_JSVAL(thisp);
-        *sp++ = v;
+        *sp++ = *vp;
         *sp++ = INT_TO_JSVAL(i);
         *sp++ = OBJECT_TO_JSVAL(obj);
 
@@ -1639,11 +1659,11 @@ array_extra(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval,
           case FILTER:
             if (!b)
                 break;
-            /* Filter passed v, push as result. */
+            /* Filter passed *vp, push as result. */
             ok = IndexToId(cx, newlen++, &id);
             if (!ok)
                 goto out;
-            ok = OBJ_SET_PROPERTY(cx, newarr, id, &v);
+            ok = OBJ_SET_PROPERTY(cx, newarr, id, vp);
             if (!ok)
                 goto out;
             break;
@@ -1721,25 +1741,25 @@ static JSFunctionSpec array_methods[] = {
 #if JS_HAS_MORE_PERL_FUN
     {""""push"""",                array_push,             1,JSFUN_GENERIC_NATIVE,0},
     {""""pop"""",                 array_pop,              0,JSFUN_GENERIC_NATIVE,0},
-    {""""shift"""",               array_shift,            0,JSFUN_GENERIC_NATIVE,0},
-    {""""unshift"""",             array_unshift,          1,JSFUN_GENERIC_NATIVE,0},
-    {""""splice"""",              array_splice,           2,JSFUN_GENERIC_NATIVE,0},
+    {""""shift"""",               array_shift,            0,JSFUN_GENERIC_NATIVE,1},
+    {""""unshift"""",             array_unshift,          1,JSFUN_GENERIC_NATIVE,1},
+    {""""splice"""",              array_splice,           2,JSFUN_GENERIC_NATIVE,1},
 #endif
 
     /* Python-esque sequence methods. */
 #if JS_HAS_SEQUENCE_OPS
-    {""""concat"""",              array_concat,           1,JSFUN_GENERIC_NATIVE,0},
-    {""""slice"""",               array_slice,            2,JSFUN_GENERIC_NATIVE,0},
+    {""""concat"""",              array_concat,           1,JSFUN_GENERIC_NATIVE,1},
+    {""""slice"""",               array_slice,            2,JSFUN_GENERIC_NATIVE,1},
 #endif
 
 #if JS_HAS_ARRAY_EXTRAS
     {""""indexOf"""",             array_indexOf,          1,JSFUN_GENERIC_NATIVE,0},
     {""""lastIndexOf"""",         array_lastIndexOf,      1,JSFUN_GENERIC_NATIVE,0},
-    {""""forEach"""",             array_forEach,          1,JSFUN_GENERIC_NATIVE,0},
-    {""""map"""",                 array_map,              1,JSFUN_GENERIC_NATIVE,0},
-    {""""filter"""",              array_filter,           1,JSFUN_GENERIC_NATIVE,0},
-    {""""some"""",                array_some,             1,JSFUN_GENERIC_NATIVE,0},
-    {""""every"""",               array_every,            1,JSFUN_GENERIC_NATIVE,0},
+    {""""forEach"""",             array_forEach,          1,JSFUN_GENERIC_NATIVE,1},
+    {""""map"""",                 array_map,              1,JSFUN_GENERIC_NATIVE,1},
+    {""""filter"""",              array_filter,           1,JSFUN_GENERIC_NATIVE,1},
+    {""""some"""",                array_some,             1,JSFUN_GENERIC_NATIVE,1},
+    {""""every"""",               array_every,            1,JSFUN_GENERIC_NATIVE,1},
 #endif
 
     {0,0,0,0,0}"""
8925569dcf80c6774106c03c9cf11b87576f694d,131611,313375,mrbkap%gmail.com,"bug 313375: Oops, we're locking the wrong object! r=brendan sr=jst
",1130539512,"""diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index b6b598e..1dad950 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -3565,13 +3565,13 @@ js_CheckAccess(JSContext *cx, JSObject *obj, jsid id, JSAccessMode mode,
      * checkObjectAccess hook.  This covers precompilation-based sharing and
      * (possibly unintended) runtime sharing across trust boundaries.
      */
-    clasp = LOCKED_OBJ_GET_CLASS(obj);
+    clasp = LOCKED_OBJ_GET_CLASS(pobj);
     check = clasp->checkAccess;
     if (!check)
         check = cx->runtime->checkObjectAccess;
     if (check) {
         JS_UNLOCK_OBJ(cx, pobj);
-        ok = check(cx, obj, ID_TO_VALUE(id), mode, vp);
+        ok = check(cx, pobj, ID_TO_VALUE(id), mode, vp);
         JS_LOCK_OBJ(cx, pobj);
     } else {
         ok = JS_TRUE;"""
f71d376d80d3de2627bcd1bdaf4a3c5f0b2090cf,131643,313938,igor%mir2.org,"Fixing bug 313938: better handling of GC strings
",1130493012,"""diff --git a/js/src/jsscript.c b/js/src/jsscript.c
index 1fa3b7b..8cd9958 100644
--- a/js/src/jsscript.c
+++ b/js/src/jsscript.c
@@ -180,6 +180,7 @@ script_compile(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     str = js_ValueToString(cx, argv[0]);
     if (!str)
         return JS_FALSE;
+    argv[0] = STRING_TO_JSVAL(str);
 
     /* Compile using the caller's scope chain, which js_Invoke passes to fp. */
     fp = cx->fp;"""
4cb6404743d8bf7578999a2c2e05b2dcc2bca4da,131762,313373,jst%mozilla.jstenback.com,"Followup fix for bug 313373. Make sure call methods on the right object when dealing with double wrapped JS objects. r=shaver@mozilla.org, sr=brendan@mozilla.org
",1130293505,"""diff --git a/js/src/xpconnect/src/xpcwrappedjsclass.cpp b/js/src/xpconnect/src/xpcwrappedjsclass.cpp
index 98fc95e..d3acd63 100644
--- a/js/src/xpconnect/src/xpcwrappedjsclass.cpp
+++ b/js/src/xpconnect/src/xpcwrappedjsclass.cpp
@@ -513,7 +513,7 @@ nsXPCWrappedJSClass::DelegatedQueryInterface(nsXPCWrappedJS* self,
 
 #ifdef XPC_IDISPATCH_SUPPORT
     // If IDispatch is enabled and we're QI'ing to IDispatch
-    else if(nsXPConnect::IsIDispatchEnabled() && aIID.Equals(NSID_IDISPATCH))
+    if(nsXPConnect::IsIDispatchEnabled() && aIID.Equals(NSID_IDISPATCH))
     {
         return XPCIDispatchExtension::IDispatchQIWrappedJS(self, aInstancePtr);
     }
@@ -584,10 +584,34 @@ nsXPCWrappedJSClass::DelegatedQueryInterface(nsXPCWrappedJS* self,
     // else we do the more expensive stuff...
 
     // check if the JSObject claims to implement this interface
-    JSObject* jsobj = CallQueryInterfaceOnJSObject(ccx, self->GetJSObject(), aIID);
-    if(jsobj && XPCConvert::JSObject2NativeInterface(ccx, aInstancePtr, jsobj,
-                                                     &aIID, nsnull, nsnull))
-        return NS_OK;
+    JSObject* jsobj = CallQueryInterfaceOnJSObject(ccx, self->GetJSObject(),
+                                                   aIID);
+    if(jsobj)
+    {
+        // We can't use XPConvert::JSObject2NativeInterface() here
+        // since that can find a XPCWrappedNative directly on the
+        // proto chain, and we don't want that here. We need to find
+        // the actual JS object that claimed it supports the interface
+        // we're looking for or we'll potentially bypass security
+        // checks etc by calling directly through to a native found on
+        // the prototype chain.
+        //
+        // Instead, simply do the nsXPCWrappedJS part of
+        // XPConvert::JSObject2NativeInterface() here to make sure we
+        // get a new (or used) nsXPCWrappedJS.
+        nsXPCWrappedJS* wrapper;
+        nsresult rv = nsXPCWrappedJS::GetNewOrUsed(ccx, jsobj, aIID, nsnull,
+                                                   &wrapper);
+        if(NS_SUCCEEDED(rv) && wrapper)
+        {
+            // We need to go through the QueryInterface logic to make
+            // this return the right thing for the various 'special'
+            // interfaces; e.g.  nsIPropertyBag.
+            rv = wrapper->QueryInterface(aIID, aInstancePtr);
+            NS_RELEASE(wrapper);
+            return rv;
+        }
+    }
 
     // else...
     // no can do"""
4a47acf0d77e53c1a03f31078b66b45a8b2b08d5,131823,313373,jst%mozilla.jstenback.com,"Fixing bug 313373. Pass *vp through untouched to the checkAccess hook when checking for write access. r=mrbkap@gmail.com, sr=brendan@mozilla.org
",1130200168,"""diff --git a/caps/src/nsScriptSecurityManager.cpp b/caps/src/nsScriptSecurityManager.cpp
index 9ffb8fc..98e040e 100644
--- a/caps/src/nsScriptSecurityManager.cpp
+++ b/caps/src/nsScriptSecurityManager.cpp
@@ -466,6 +466,8 @@ nsScriptSecurityManager::CheckObjectAccess(JSContext *cx, JSObject *obj,
     // Pass the parent object's class name, as we have no class-info for it.
     nsresult rv =
         ssm->CheckPropertyAccess(cx, target, JS_GetClass(cx, obj)->name, id,
+                                 (mode & JSACC_WRITE) ?
+                                 nsIXPCSecurityManager::ACCESS_SET_PROPERTY :
                                  nsIXPCSecurityManager::ACCESS_GET_PROPERTY);
 
     if (NS_FAILED(rv))
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index de29146..ebabebf 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -3549,13 +3549,15 @@ js_CheckAccess(JSContext *cx, JSObject *obj, jsid id, JSAccessMode mode,
         return OBJ_CHECK_ACCESS(cx, pobj, id, mode, vp, attrsp);
     }
     sprop = (JSScopeProperty *)prop;
-    *vp = (SPROP_HAS_VALID_SLOT(sprop, OBJ_SCOPE(pobj)))
-          ? LOCKED_OBJ_GET_SLOT(pobj, sprop->slot)
-          : ((mode & JSACC_WATCH) == JSACC_PROTO)
-          ? LOCKED_OBJ_GET_SLOT(obj, JSSLOT_PROTO)
-          : (mode == JSACC_PARENT)
-          ? LOCKED_OBJ_GET_SLOT(obj, JSSLOT_PARENT)
-          : JSVAL_VOID;
+    if (!(mode & JSACC_WRITE)) {
+        *vp = (SPROP_HAS_VALID_SLOT(sprop, OBJ_SCOPE(pobj)))
+            ? LOCKED_OBJ_GET_SLOT(pobj, sprop->slot)
+            : ((mode & JSACC_WATCH) == JSACC_PROTO)
+            ? LOCKED_OBJ_GET_SLOT(obj, JSSLOT_PROTO)
+            : (mode == JSACC_PARENT)
+            ? LOCKED_OBJ_GET_SLOT(obj, JSSLOT_PARENT)
+            : JSVAL_VOID;
+    }
     *attrsp = sprop->attrs;
 
     /*
@@ -3856,13 +3858,12 @@ static JSBool
 CheckCtorSetAccess(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
 {
     JSAtom *atom;
-    jsval oldval;
     uintN attrs;
 
     atom = cx->runtime->atomState.constructorAtom;
     JS_ASSERT(id == ATOM_KEY(atom));
     return OBJ_CHECK_ACCESS(cx, obj, ATOM_TO_JSID(atom), JSACC_WRITE,
-                            &oldval, &attrs);
+                            vp, &attrs);
 }
 
 JSBool"""
39fe37f13337df67abfa0ccc44abbd753067df1d,131825,313630,brendan%mozilla.org,"Easy local rooting fix (313630, r/sr=igor/shaver).
",1130197444,"""diff --git a/js/src/jsfun.c b/js/src/jsfun.c
index 56da193..4e2eecc 100644
--- a/js/src/jsfun.c
+++ b/js/src/jsfun.c
@@ -1417,6 +1417,7 @@ js_fun_toString(JSContext *cx, JSObject *obj, uint32 indent,
                                                      &fval)) {
                     return JS_FALSE;
                 }
+                argv[-1] = fval;
             }
             if (!JSVAL_IS_FUNCTION(cx, fval)) {
                 JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,"""
54e635a3ec0225ae7ed32ce4836eebbb700a5288,131864,312278,brendan%mozilla.org,"Better local GC rooting (312278, r/sr=igor/shaver).
",1130121945,"""diff --git a/js/src/jsstr.c b/js/src/jsstr.c
index f4d97e7..70ee007 100644
--- a/js/src/jsstr.c
+++ b/js/src/jsstr.c
@@ -527,9 +527,16 @@ str_getProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)
 
     if (!JSVAL_IS_INT(id))
         return JS_TRUE;
+
+    /*
+     * Call js_ValueToString because getters and setters can be invoked on
+     * objects of different class, unlike enumerate, resolve, and the other
+     * class hooks.
+     */
     str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));
     if (!str)
         return JS_FALSE;
+
     slot = JSVAL_TO_INT(id);
     if (slot == STRING_LENGTH)
         *vp = INT_TO_JSVAL((jsint) JSSTRING_LENGTH(str));
@@ -548,9 +555,10 @@ str_enumerate(JSContext *cx, JSObject *obj)
     if (JS_VERSION_IS_1_2(cx))
         return JS_TRUE;
 
-    str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));
+    str = (JSString *) JS_GetPrivate(cx, obj);
     if (!str)
-        return JS_FALSE;
+        return JS_TRUE;
+
     length = JSSTRING_LENGTH(str);
     for (i = 0; i < length; i++) {
         str1 = js_NewDependentString(cx, str, i, 1, 0);
@@ -575,9 +583,10 @@ str_resolve(JSContext *cx, JSObject *obj, jsval id, uintN flags,
     if (!JSVAL_IS_INT(id) || (flags & JSRESOLVE_ASSIGNING))
         return JS_TRUE;
 
-    str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));
+    str = (JSString *) JS_GetPrivate(cx, obj);
     if (!str)
-        return JS_FALSE;
+        return JS_TRUE;
+
     slot = JSVAL_TO_INT(id);
     if ((size_t)slot < JSSTRING_LENGTH(str)) {
         str1 = js_NewDependentString(cx, str, (size_t)slot, 1, 0);
@@ -615,6 +624,8 @@ str_quote(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));
     if (!str)
         return JS_FALSE;
+    argv[-1] = STRING_TO_JSVAL(str);
+
     str = js_QuoteString(cx, str, '""""');
     if (!str)
         return JS_FALSE;
@@ -755,6 +766,8 @@ str_toLowerCase(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));
     if (!str)
         return JS_FALSE;
+    argv[-1] = STRING_TO_JSVAL(str);
+
     n = JSSTRING_LENGTH(str);
     news = (jschar *) JS_malloc(cx, (n + 1) * sizeof(jschar));
     if (!news)
@@ -786,6 +799,7 @@ str_toLocaleLowerCase(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
         str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));
         if (!str)
             return JS_FALSE;
+        argv[-1] = STRING_TO_JSVAL(str);
         return cx->localeCallbacks->localeToLowerCase(cx, str, rval);
     }
     return str_toLowerCase(cx, obj, 0, argv, rval);
@@ -802,6 +816,8 @@ str_toUpperCase(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));
     if (!str)
         return JS_FALSE;
+    argv[-1] = STRING_TO_JSVAL(str);
+
     n = JSSTRING_LENGTH(str);
     news = (jschar *) JS_malloc(cx, (n + 1) * sizeof(jschar));
     if (!news)
@@ -833,6 +849,7 @@ str_toLocaleUpperCase(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
         str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));
         if (!str)
             return JS_FALSE;
+        argv[-1] = STRING_TO_JSVAL(str);
         return cx->localeCallbacks->localeToUpperCase(cx, str, rval);
     }
     return str_toUpperCase(cx, obj, 0, argv, rval);
@@ -855,8 +872,10 @@ str_localeCompare(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
         thatStr = js_ValueToString(cx, argv[0]);
         if (!thatStr)
             return JS_FALSE;
-        if (cx->localeCallbacks && cx->localeCallbacks->localeCompare)
+        if (cx->localeCallbacks && cx->localeCallbacks->localeCompare) {
+            argv[0] = STRING_TO_JSVAL(thatStr);
             return cx->localeCallbacks->localeCompare(cx, str, thatStr, rval);
+        }
         *rval = INT_TO_JSVAL(js_CompareStrings(str, thatStr));
     }
     return JS_TRUE;
@@ -2006,6 +2025,7 @@ str_substr(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));
     if (!str)
         return JS_FALSE;
+    argv[-1] = STRING_TO_JSVAL(str);
 
     if (argc != 0) {
         if (!js_ValueToNumber(cx, argv[0], &d))
@@ -2352,6 +2372,7 @@ String(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         str = js_ValueToString(cx, argv[0]);
         if (!str)
             return JS_FALSE;
+        argv[0] = STRING_TO_JSVAL(str);
     } else {
         str = cx->runtime->emptyString;
     }
@@ -4492,6 +4513,7 @@ str_decodeURI(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     str = js_ValueToString(cx, argv[0]);
     if (!str)
         return JS_FALSE;
+    argv[0] = STRING_TO_JSVAL(str);
     return Decode(cx, str, js_uriReservedPlusPound_ucstr, rval);
 }
 
@@ -4504,6 +4526,7 @@ str_decodeURI_Component(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     str = js_ValueToString(cx, argv[0]);
     if (!str)
         return JS_FALSE;
+    argv[0] = STRING_TO_JSVAL(str);
     return Decode(cx, str, js_empty_ucstr, rval);
 }
 
@@ -4516,6 +4539,7 @@ str_encodeURI(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     str = js_ValueToString(cx, argv[0]);
     if (!str)
         return JS_FALSE;
+    argv[0] = STRING_TO_JSVAL(str);
     return Encode(cx, str, js_uriReservedPlusPound_ucstr, js_uriUnescaped_ucstr,
                   rval);
 }
@@ -4529,6 +4553,7 @@ str_encodeURI_Component(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     str = js_ValueToString(cx, argv[0]);
     if (!str)
         return JS_FALSE;
+    argv[0] = STRING_TO_JSVAL(str);
     return Encode(cx, str, js_uriUnescaped_ucstr, NULL, rval);
 }
 """
19816bb2de7edccd5428a08da4cbd76dce8b5925,131882,313500,brendan%mozilla.org,"Fix class-prototype rooting to be bullet-proof (313500, r=igor).
",1130103727,"""diff --git a/js/src/jsfun.c b/js/src/jsfun.c
index f7d699a..56da193 100644
--- a/js/src/jsfun.c
+++ b/js/src/jsfun.c
@@ -1040,13 +1040,20 @@ fun_resolve(JSContext *cx, JSObject *obj, jsval id, uintN flags,
                                   &pval)) {
                 return JS_FALSE;
             }
-            if (JSVAL_IS_OBJECT(pval))
+            if (!JSVAL_IS_PRIMITIVE(pval)) {
+                /*
+                 * We are about to allocate a new object, so hack the newborn
+                 * root until then to protect pval in case it is figuratively
+                 * up in the air, with no strong refs protecting it.
+                 */
+                cx->newborn[GCX_OBJECT] = JSVAL_TO_GCTHING(pval);
                 parentProto = JSVAL_TO_OBJECT(pval);
+            }
         }
 
         /*
          * Beware of the wacky case of a user function named Object -- trying
-         * to find a prototype for that will recur back here ad perniciem.
+         * to find a prototype for that will recur back here _ad perniciem_.
          */
         if (!parentProto && fun->atom == cx->runtime->atomState.ObjectAtom)
             return JS_TRUE;
diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index 596cde8..a75646f 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -3039,13 +3039,19 @@ js_Interpret(JSContext *cx, jsbytecode *pc, jsval *result)
                 proto = parent = NULL;
                 fun = NULL;
             } else {
-                /* Get the constructor prototype object for this function. */
+                /*
+                 * Get the constructor prototype object for this function.
+                 * Use the nominal |this| parameter slot, vp[1], as a local
+                 * root to protect this prototype, in case it has no other
+                 * strong refs.
+                 */
                 ok = OBJ_GET_PROPERTY(cx, obj2,
                                       ATOM_TO_JSID(rt->atomState
                                                    .classPrototypeAtom),
-                                      &rval);
+                                      &vp[1]);
                 if (!ok)
                     goto out;
+                rval = vp[1];
                 proto = JSVAL_IS_OBJECT(rval) ? JSVAL_TO_OBJECT(rval) : NULL;
                 parent = OBJ_GET_PARENT(cx, obj2);
 
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index d91d046..de29146 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -3808,6 +3808,18 @@ GetClassPrototype(JSContext *cx, JSObject *scope, const char *name,
                               &v)) {
             return JS_FALSE;
         }
+        if (!JSVAL_IS_PRIMITIVE(v)) {
+            /*
+             * Set the newborn root in case v is otherwise unreferenced.
+             * It's ok to overwrite newborn roots here, since the getter
+             * called just above could have.  Unlike the common GC rooting
+             * model, our callers do not have to protect protop thanks to
+             * this newborn root, since they all immediately create a new
+             * instance that delegates to this object, or just query the
+             * prototype for its class.
+             */
+            cx->newborn[GCX_OBJECT] = JSVAL_TO_GCTHING(v);
+        }
     }
     *protop = JSVAL_IS_OBJECT(v) ? JSVAL_TO_OBJECT(v) : NULL;
     return JS_TRUE;
@@ -4023,7 +4035,7 @@ js_XDRObject(JSXDRState *xdr, JSObject **objp)
 
     if (xdr->mode != JSXDR_ENCODE) {
         if (classDef) {
-            ok = js_GetClassPrototype(cx, className, &proto);
+            ok = GetClassPrototype(cx, NULL, className, &proto);
             if (!ok)
                 goto out;
             clasp = OBJ_GET_CLASS(cx, proto);"""
013f2a2c579a5d4e87ab473e08ac75b78615f3d8,131884,313479,brendan%mozilla.org,"Reorder to avoid a GC hazard (313479, r=igor).
",1130102580,"""diff --git a/js/src/jsnum.c b/js/src/jsnum.c
index 78bd44b..8a55963 100644
--- a/js/src/jsnum.c
+++ b/js/src/jsnum.c
@@ -114,25 +114,25 @@ num_parseFloat(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rva
 static JSBool
 num_parseInt(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
-    JSString *str;
     jsint radix;
+    JSString *str;
     jsdouble d;
     const jschar *bp, *ep;
 
-    str = js_ValueToString(cx, argv[0]);
-    if (!str)
-        return JS_FALSE;
-
     if (argc > 1) {
         if (!js_ValueToECMAInt32(cx, argv[1], &radix))
             return JS_FALSE;
-    } else
+    } else {
         radix = 0;
-
+    }
     if (radix != 0 && (radix < 2 || radix > 36)) {
         *rval = DOUBLE_TO_JSVAL(cx->runtime->jsNaN);
         return JS_TRUE;
     }
+
+    str = js_ValueToString(cx, argv[0]);
+    if (!str)
+        return JS_FALSE;
     /* XXXbe js_strtointeger shouldn't require NUL termination */
     bp = js_UndependString(cx, str);
     if (!bp)"""
b81acd8c6fcca057df0246e35152a671ada2e2e7,131919,312278,brendan%mozilla.org,"Better local GC rooting (312278, r/sr=igor/shaver).
",1130043590,"""diff --git a/js/src/jsexn.c b/js/src/jsexn.c
index 6cb393c..7e7af43 100644
--- a/js/src/jsexn.c
+++ b/js/src/jsexn.c
@@ -704,43 +704,45 @@ exn_toString(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 static JSBool
 exn_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
-    jsval v;
+    jsval *vp;
     JSString *name, *message, *filename, *lineno_as_str, *result;
     uint32 lineno;
     size_t lineno_length, name_length, message_length, filename_length, length;
     jschar *chars, *cp;
 
+    vp = argv + argc;   /* beginning of explicit local roots */
+
     if (!OBJ_GET_PROPERTY(cx, obj,
                           ATOM_TO_JSID(cx->runtime->atomState.nameAtom),
-                          &v)) {
+                          rval)) {
         return JS_FALSE;
     }
-    name = js_ValueToString(cx, v);
+    name = js_ValueToString(cx, *rval);
     if (!name)
         return JS_FALSE;
     *rval = STRING_TO_JSVAL(name);
 
-    if (!JS_GetProperty(cx, obj, js_message_str, &v) ||
-        !(message = js_ValueToSource(cx, v))) {
+    if (!JS_GetProperty(cx, obj, js_message_str, &vp[0]) ||
+        !(message = js_ValueToSource(cx, vp[0]))) {
         return JS_FALSE;
     }
-    argv[argc] = STRING_TO_JSVAL(message);
+    vp[0] = STRING_TO_JSVAL(message);
 
-    if (!JS_GetProperty(cx, obj, js_filename_str, &v) ||
-        !(filename = js_ValueToSource(cx, v))) {
+    if (!JS_GetProperty(cx, obj, js_filename_str, &vp[1]) ||
+        !(filename = js_ValueToSource(cx, vp[1]))) {
         return JS_FALSE;
     }
-    argv[argc + 1] = STRING_TO_JSVAL(filename);
+    vp[1] = STRING_TO_JSVAL(filename);
 
-    if (!JS_GetProperty(cx, obj, js_lineno_str, &v) ||
-        !js_ValueToECMAUint32 (cx, v, &lineno)) {
+    if (!JS_GetProperty(cx, obj, js_lineno_str, &vp[2]) ||
+        !js_ValueToECMAUint32 (cx, vp[2], &lineno)) {
         return JS_FALSE;
     }
 
     if (lineno != 0) {
-        if (!(lineno_as_str = js_ValueToString(cx, v))) {
+        lineno_as_str = js_ValueToString(cx, vp[2]);
+        if (!lineno_as_str)
             return JS_FALSE;
-        }
         lineno_length = JSSTRING_LENGTH(lineno_as_str);
     } else {
         lineno_as_str = NULL;
@@ -818,7 +820,7 @@ exn_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 
 static JSFunctionSpec exception_methods[] = {
 #if JS_HAS_TOSOURCE
-    {js_toSource_str,   exn_toSource,           0,0,2},
+    {js_toSource_str,   exn_toSource,           0,0,3},
 #endif
     {js_toString_str,   exn_toString,           0,0,0},
     {0,0,0,0,0}
@@ -1063,10 +1065,11 @@ out:
 JSBool
 js_ReportUncaughtException(JSContext *cx)
 {
+    jsval exn, *vp;
     JSObject *exnObject;
-    JSString *str;
-    jsval exn;
+    void *mark;
     JSErrorReport *reportp, report;
+    JSString *str;
     const char *bytes;
     JSBool ok;
 
@@ -1078,14 +1081,24 @@ js_ReportUncaughtException(JSContext *cx)
 
     /*
      * Because js_ValueToString below could error and an exception object
-     * could become unrooted, we must root exnObject.
+     * could become unrooted, we must root exnObject.  Later, if exnObject is
+     * non-null, we need to root other intermediates, so allocate an operand
+     * stack segment to protect all of these values.
      */
     if (JSVAL_IS_PRIMITIVE(exn)) {
         exnObject = NULL;
+#ifdef __GNUC__         /* suppress bogus gcc warnings */
+        vp = NULL;
+        mark = NULL;
+#endif
     } else {
         exnObject = JSVAL_TO_OBJECT(exn);
-        if (!js_AddRoot(cx, &exnObject, """"exn.report.root""""))
-            return JS_FALSE;
+        vp = js_AllocStack(cx, 5, &mark);
+        if (!vp) {
+            ok = JS_FALSE;
+            goto out;
+        }
+        vp[0] = exn;
     }
 
 #if JS_HAS_ERROR_EXCEPTIONS
@@ -1096,36 +1109,40 @@ js_ReportUncaughtException(JSContext *cx)
 
     /* XXX L10N angels cry once again (see also jsemit.c, /L10N gaffes/) */
     str = js_ValueToString(cx, exn);
-    bytes = str ? js_GetStringBytes(str) : """"unknown (can't convert to string)"""";
+    if (!str) {
+        bytes = """"unknown (can't convert to string)"""";
+    } else {
+        vp[1] = STRING_TO_JSVAL(str);
+        bytes = js_GetStringBytes(str);
+    }
     ok = JS_TRUE;
 
     if (!reportp &&
         exnObject &&
         OBJ_GET_CLASS(cx, exnObject) == &ExceptionClass) {
-        jsval v;
         const char *filename;
         uint32 lineno;
 
-        ok = JS_GetProperty(cx, exnObject, js_message_str, &v);
+        ok = JS_GetProperty(cx, exnObject, js_message_str, &vp[2]);
         if (!ok)
             goto out;
-        if (JSVAL_IS_STRING(v))
-            bytes = JS_GetStringBytes(JSVAL_TO_STRING(v));
+        if (JSVAL_IS_STRING(vp[2]))
+            bytes = JS_GetStringBytes(JSVAL_TO_STRING(vp[2]));
 
-        ok = JS_GetProperty(cx, exnObject, js_filename_str, &v);
+        ok = JS_GetProperty(cx, exnObject, js_filename_str, &vp[3]);
         if (!ok)
             goto out;
-        str = js_ValueToString(cx, v);
+        str = js_ValueToString(cx, vp[3]);
         if (!str) {
             ok = JS_FALSE;
             goto out;
         }
         filename = StringToFilename(cx, str);
 
-        ok = JS_GetProperty(cx, exnObject, js_lineno_str, &v);
+        ok = JS_GetProperty(cx, exnObject, js_lineno_str, &vp[4]);
         if (!ok)
             goto out;
-        ok = js_ValueToECMAUint32 (cx, v, &lineno);
+        ok = js_ValueToECMAUint32 (cx, vp[4], &lineno);
         if (!ok)
             goto out;
 
@@ -1147,7 +1164,7 @@ js_ReportUncaughtException(JSContext *cx)
     JS_ClearPendingException(cx);
 out:
     if (exnObject)
-        js_RemoveRoot(cx->runtime, &exnObject);
+        js_FreeStack(cx, mark);
     return ok;
 }
 """
023b050c9378ab16f68e7336051406aa99b52d99,131933,313236,mrbkap%gmail.com,"bug 313236: Consolidate some code. r=brendan
",1129942986,"""diff --git a/js/src/jsfun.c b/js/src/jsfun.c
index f12a157..f7d699a 100644
--- a/js/src/jsfun.c
+++ b/js/src/jsfun.c
@@ -1,4 +1,5 @@
 /* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ * vim: set ts=8 sw=4 et tw=80:
  *
  * ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
@@ -1710,6 +1711,10 @@ Function(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         principals = NULL;
     }
 
+    /* Belt-and-braces: check that the caller has access to parent. */
+    if (!js_CheckPrincipalsAccess(cx, parent, principals, """"Function""""))
+        return JS_FALSE;
+
     n = argc ? argc - 1 : 0;
     if (n > 0) {
         /*
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index 1fa9cdc..d91d046 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -1052,8 +1052,9 @@ obj_valueOf(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
  * if so (or if scopeobj has no principals, for backward compatibility with
  * the JS API, which does not require principals), and false otherwise.
  */
-static JSBool
-CheckEvalAccess(JSContext *cx, JSObject *scopeobj, JSPrincipals *principals)
+JSBool
+js_CheckPrincipalsAccess(JSContext *cx, JSObject *scopeobj,
+                         JSPrincipals *principals, const char *caller)
 {
     JSRuntime *rt;
     JSPrincipals *scopePrincipals;
@@ -1064,18 +1065,25 @@ CheckEvalAccess(JSContext *cx, JSObject *scopeobj, JSPrincipals *principals)
         if (!principals || !scopePrincipals ||
             !principals->subsume(principals, scopePrincipals)) {
             JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,
-                                 JSMSG_BAD_INDIRECT_CALL, js_eval_str);
+                                 JSMSG_BAD_INDIRECT_CALL, caller);
             return JS_FALSE;
         }
     }
     return JS_TRUE;
 }
 
-JSBool
+JSObject *
 js_CheckScopeChainValidity(JSContext *cx, JSObject *scopeobj, const char *caller)
 {
     JSClass *clasp;
     JSExtendedClass *xclasp;
+    JSObject *inner;
+
+    OBJ_TO_INNER_OBJECT(cx, scopeobj);
+    if (!scopeobj)
+        return NULL;
+
+    inner = scopeobj;
 
     /* XXX This is an awful gross hack. */
     while (scopeobj) {
@@ -1086,14 +1094,14 @@ js_CheckScopeChainValidity(JSContext *cx, JSObject *scopeobj, const char *caller
                 xclasp->innerObject(cx, scopeobj) != scopeobj) {
                 JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,
                                      JSMSG_BAD_INDIRECT_CALL, caller);
-                return JS_FALSE;
+                return NULL;
             }
         }
 
         scopeobj = OBJ_GET_PARENT(cx, scopeobj);
     }
 
-    return JS_TRUE;
+    return inner;
 }
 
 static JSBool
@@ -1151,8 +1159,11 @@ obj_eval(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         if (indirectCall) {
             callerScopeChain = caller->scopeChain;
             if (obj != callerScopeChain) {
-                if (!CheckEvalAccess(cx, obj, caller->script->principals))
+                if (!js_CheckPrincipalsAccess(cx, obj,
+                                              caller->script->principals,
+                                              js_eval_str)) {
                     return JS_FALSE;
+                }
 
                 scopeobj = js_NewObject(cx, &js_WithClass, obj,
                                         callerScopeChain);
@@ -1185,13 +1196,10 @@ obj_eval(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     }
 
     /* Ensure we compile this eval with the right object in the scope chain. */
-    OBJ_TO_INNER_OBJECT(cx, scopeobj);
+    scopeobj = js_CheckScopeChainValidity(cx, scopeobj, js_eval_str);
     if (!scopeobj)
         return JS_FALSE;
 
-    if (!js_CheckScopeChainValidity(cx, scopeobj, js_eval_str))
-        return JS_FALSE;
-
     str = JSVAL_TO_STRING(argv[0]);
     if (caller) {
         file = caller->script->filename;
@@ -1239,7 +1247,7 @@ obj_eval(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
      * Belt-and-braces: check that the lesser of eval's principals and the
      * caller's principals has access to scopeobj.
      */
-    ok = CheckEvalAccess(cx, scopeobj, principals);
+    ok = js_CheckPrincipalsAccess(cx, scopeobj, principals, js_eval_str);
     if (!ok)
         goto out;
 
diff --git a/js/src/jsobj.h b/js/src/jsobj.h
index 616394c..68dfe5c 100644
--- a/js/src/jsobj.h
+++ b/js/src/jsobj.h
@@ -488,9 +488,12 @@ js_GetRequiredSlot(JSContext *cx, JSObject *obj, uint32 slot);
 extern JSBool
 js_SetRequiredSlot(JSContext *cx, JSObject *obj, uint32 slot, jsval v);
 
-extern JSBool
+extern JSObject *
 js_CheckScopeChainValidity(JSContext *cx, JSObject *scopeobj, const char *caller);
 
+extern JSBool
+js_CheckPrincipalsAccess(JSContext *cx, JSObject *scopeobj,
+                         JSPrincipals *principals, const char *caller);
 JS_END_EXTERN_C
 
 #endif /* jsobj_h___ */
diff --git a/js/src/jsscript.c b/js/src/jsscript.c
index 23134e7..698888a 100644
--- a/js/src/jsscript.c
+++ b/js/src/jsscript.c
@@ -65,6 +65,7 @@
 #if JS_HAS_SCRIPT_OBJECT
 
 static const char js_script_exec[] = """"Script.prototype.exec"""";
+static const char js_script_compile[] = """"Script.prototype.compile"""";
 
 #if JS_HAS_TOSOURCE
 static JSBool
@@ -205,7 +206,7 @@ script_compile(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     }
 
     /* Ensure we compile this script with the right (inner) principals. */
-    OBJ_TO_INNER_OBJECT(cx, scopeobj);
+    scopeobj = js_CheckScopeChainValidity(cx, scopeobj, js_script_compile);
     if (!scopeobj)
         return JS_FALSE;
 
@@ -248,7 +249,6 @@ script_exec(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     JSObject *scopeobj, *parent;
     JSStackFrame *fp, *caller;
     JSPrincipals *principals, *scopePrincipals;
-    JSRuntime *rt;
 
     if (!JS_InstanceOf(cx, obj, &js_ScriptClass, argv))
         return JS_FALSE;
@@ -308,26 +308,14 @@ script_exec(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         }
     }
 
-    OBJ_TO_INNER_OBJECT(cx, scopeobj);
+    scopeobj = js_CheckScopeChainValidity(cx, scopeobj, js_script_exec);
     if (!scopeobj)
         return JS_FALSE;
 
-    if (!js_CheckScopeChainValidity(cx, scopeobj, js_script_exec))
-        return JS_FALSE;
-
     /* Belt-and-braces: check that this script object has access to scopeobj. */
     principals = script->principals;
-    rt = cx->runtime;
-    if (rt->findObjectPrincipals) {
-        scopePrincipals = rt->findObjectPrincipals(cx, scopeobj);
-        if (!principals || !scopePrincipals ||
-            !principals->subsume(principals, scopePrincipals)) {
-            JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,
-                                 JSMSG_BAD_INDIRECT_CALL,
-                                 js_script_exec);
-            return JS_FALSE;
-        }
-    }
+    if (!js_CheckPrincipalsAccess(cx, scopeobj, principals, js_script_exec))
+        return JS_FALSE;
 
     return js_Execute(cx, scopeobj, script, caller, JSFRAME_EVAL, rval);
 }"""
39815e3e45b08df1daf2f5abe30c5910691c1cfd,131939,313236,mrbkap%gmail.com,"bug 313236: Make sure to operate on the right object. r=brendan sr=jst
",1129934709,"""diff --git a/content/xbl/src/nsXBLDocumentInfo.cpp b/content/xbl/src/nsXBLDocumentInfo.cpp
index 94b4005..e9ca38c 100644
--- a/content/xbl/src/nsXBLDocumentInfo.cpp
+++ b/content/xbl/src/nsXBLDocumentInfo.cpp
@@ -90,7 +90,10 @@ public:
 
   // nsIScriptObjectPrincipal methods
   virtual nsIPrincipal* GetPrincipal();
-    
+
+  static JSBool doCheckAccess(JSContext *cx, JSObject *obj, jsval id,
+                              PRUint32 accessType);
+
 protected:
   virtual ~nsXBLDocGlobalObject();
 
@@ -101,8 +104,8 @@ protected:
   static JSClass gSharedGlobalClass;
 };
 
-static JSBool
-doCheckAccess(JSContext *cx, JSObject *obj, jsval id, PRUint32 accessType)
+JSBool
+nsXBLDocGlobalObject::doCheckAccess(JSContext *cx, JSObject *obj, jsval id, PRUint32 accessType)
 {
   nsIScriptSecurityManager *ssm = nsContentUtils::GetSecurityManager();
   if (!ssm) {
@@ -110,6 +113,16 @@ doCheckAccess(JSContext *cx, JSObject *obj, jsval id, PRUint32 accessType)
     return JS_FALSE;
   }
 
+  // Make sure to actually operate on our object, and not some object further
+  // down on the proto chain.
+  while (JS_GET_CLASS(cx, obj) != &nsXBLDocGlobalObject::gSharedGlobalClass) {
+    obj = ::JS_GetPrototype(cx, obj);
+    if (!obj) {
+      ::JS_ReportError(cx, """"Invalid access to a global object property."""");
+      return JS_FALSE;
+    }
+  }
+
   nsresult rv = ssm->CheckPropertyAccess(cx, obj, JS_GET_CLASS(cx, obj)->name,
                                          id, accessType);
   return NS_SUCCEEDED(rv);
@@ -119,14 +132,16 @@ PR_STATIC_CALLBACK(JSBool)
 nsXBLDocGlobalObject_getProperty(JSContext *cx, JSObject *obj,
                                  jsval id, jsval *vp)
 {
-  return doCheckAccess(cx, obj, id, nsIXPCSecurityManager::ACCESS_GET_PROPERTY);
+  return nsXBLDocGlobalObject::
+    doCheckAccess(cx, obj, id, nsIXPCSecurityManager::ACCESS_GET_PROPERTY);
 }
 
 PR_STATIC_CALLBACK(JSBool)
 nsXBLDocGlobalObject_setProperty(JSContext *cx, JSObject *obj,
                                  jsval id, jsval *vp)
 {
-  return doCheckAccess(cx, obj, id, nsIXPCSecurityManager::ACCESS_SET_PROPERTY);
+  return nsXBLDocGlobalObject::
+    doCheckAccess(cx, obj, id, nsIXPCSecurityManager::ACCESS_SET_PROPERTY);
 }
 
 PR_STATIC_CALLBACK(JSBool)
@@ -140,7 +155,8 @@ nsXBLDocGlobalObject_checkAccess(JSContext *cx, JSObject *obj, jsval id,
     translated = nsIXPCSecurityManager::ACCESS_GET_PROPERTY;
   }
 
-  return doCheckAccess(cx, obj, id, translated);
+  return nsXBLDocGlobalObject::
+    doCheckAccess(cx, obj, id, translated);
 }
 
 PR_STATIC_CALLBACK(void)"""
772f6f37135c7168684f3b1f549a682bace18535,131971,313173,bzbarsky%mit.edu,"Fix bug 313173 and bug 312784 -- make sure to rebuild stuff as needed. r=neil, sr=roc
",1129915746,"""diff --git a/layout/xul/base/src/grid/nsGridLayout2.cpp b/layout/xul/base/src/grid/nsGridLayout2.cpp
index 142b3cf..157e669 100644
--- a/layout/xul/base/src/grid/nsGridLayout2.cpp
+++ b/layout/xul/base/src/grid/nsGridLayout2.cpp
@@ -285,6 +285,39 @@ nsGridLayout2::GetRowCount(PRInt32& aRowCount)
   return NS_OK;
 }
 
+NS_IMETHODIMP
+nsGridLayout2::ChildrenInserted(nsIBox* aBox, nsBoxLayoutState& aState,
+                                nsIBox* aPrevBox, nsIBox* aChildList)
+{
+  mGrid.NeedsRebuild(aState);
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsGridLayout2::ChildrenAppended(nsIBox* aBox, nsBoxLayoutState& aState,
+                                nsIBox* aChildList)
+{
+  mGrid.NeedsRebuild(aState);
+  return NS_OK;
+}
+
+
+NS_IMETHODIMP
+nsGridLayout2::ChildrenRemoved(nsIBox* aBox, nsBoxLayoutState& aState,
+                               nsIBox* aChildList)
+{
+  mGrid.NeedsRebuild(aState);
+  return NS_OK;
+}
+
+
+NS_IMETHODIMP
+nsGridLayout2::ChildrenSet(nsIBox* aBox, nsBoxLayoutState& aState,
+                           nsIBox* aChildList)
+{
+  mGrid.NeedsRebuild(aState);
+  return NS_OK;
+}
 
 NS_IMPL_ADDREF_INHERITED(nsGridLayout2, nsStackLayout)
 NS_IMPL_RELEASE_INHERITED(nsGridLayout2, nsStackLayout)
diff --git a/layout/xul/base/src/grid/nsGridLayout2.h b/layout/xul/base/src/grid/nsGridLayout2.h
index a4d9fff..bdb85ad 100644
--- a/layout/xul/base/src/grid/nsGridLayout2.h
+++ b/layout/xul/base/src/grid/nsGridLayout2.h
@@ -75,7 +75,14 @@ public:
   NS_IMETHOD BuildRows(nsIBox* aBox, nsGridRow* aRows, PRInt32* aCount);
   NS_IMETHOD GetTotalMargin(nsIBox* aBox, nsMargin& aMargin, PRBool aIsHorizontal);
   NS_IMETHOD GetRowCount(PRInt32& aRowCount);
-
+  NS_IMETHOD ChildrenInserted(nsIBox* aBox, nsBoxLayoutState& aState,
+                              nsIBox* aPrevBox, nsIBox* aChildList);
+  NS_IMETHOD ChildrenAppended(nsIBox* aBox, nsBoxLayoutState& aState,
+                              nsIBox* aChildList);
+  NS_IMETHOD ChildrenRemoved(nsIBox* aBox, nsBoxLayoutState& aState,
+                             nsIBox* aChildList);
+  NS_IMETHOD ChildrenSet(nsIBox* aBox, nsBoxLayoutState& aState,
+                         nsIBox* aChildList);
 protected:
 
   nsGridLayout2(nsIPresShell* aShell);"""
d3fc37107b6ae9a692f7f3ddcdc68ffc2730725e,132000,312278,mrbkap%gmail.com,"bug 312278: Protect some objects from getting GC'd before we could root them. r=brendan
",1129854416,"""diff --git a/js/src/jsexn.c b/js/src/jsexn.c
index 266a3a2..6cb393c 100644
--- a/js/src/jsexn.c
+++ b/js/src/jsexn.c
@@ -985,6 +985,11 @@ js_ErrorToException(JSContext *cx, const char *message, JSErrorReport *reportp)
         return JS_FALSE;
     cx->creatingException = JS_TRUE;
 
+    /* Protect the newly-created strings below from nesting GCs. */
+    ok = js_EnterLocalRootScope(cx);
+    if (!ok)
+        goto out;
+
     /*
      * Try to get an appropriate prototype by looking up the corresponding
      * exception constructor name in the scope chain of the current context's
@@ -1047,6 +1052,7 @@ js_ErrorToException(JSContext *cx, const char *message, JSErrorReport *reportp)
     reportp->flags |= JSREPORT_EXCEPTION;
 
 out:
+    js_LeaveLocalRootScope(cx);
     cx->creatingException = JS_FALSE;
     return ok;
 }"""
9102c15f2280e4229235deaa643a4f8254ba526a,132042,312278,brendan%mozilla.org,"Use local roots effectively (312278, r=igor).
",1129834704,"""diff --git a/js/src/jsarray.c b/js/src/jsarray.c
index 3b6a39b..1a0c233 100644
--- a/js/src/jsarray.c
+++ b/js/src/jsarray.c
@@ -363,7 +363,6 @@ array_join_sub(JSContext *cx, JSObject *obj, JSString *sep, JSBool literalize,
                jsval *rval, JSBool localeString)
 {
     JSBool ok;
-    jsval v;
     jsuint length, index;
     jschar *chars, *ochars;
     size_t nchars, growth, seplen, tmplen;
@@ -444,6 +443,9 @@ array_join_sub(JSContext *cx, JSObject *obj, JSString *sep, JSBool literalize,
     sepstr = NULL;
     seplen = JSSTRING_LENGTH(sep);
 
+    /* Use rval to locally root each element value as we loop and convert. */
+#define v (*rval)
+
     v = JSVAL_NULL;
     for (index = 0; index < length; index++) {
         ok = JS_GetElement(cx, obj, index, &v);
@@ -518,6 +520,8 @@ array_join_sub(JSContext *cx, JSObject *obj, JSString *sep, JSBool literalize,
         return ok;
     }
 
+#undef v
+
   make_string:
     if (!chars) {
         JS_ReportOutOfMemory(cx);
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index 1d131ef..1fa9cdc 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -628,7 +628,7 @@ js_LeaveSharpObject(JSContext *cx, JSIdArray **idap)
     }
 }
 
-#define OBJ_TOSTRING_EXTRA      3       /* for 3 local GC roots */
+#define OBJ_TOSTRING_EXTRA      4       /* for 4 local GC roots */
 
 #if JS_HAS_INITIALIZERS || JS_HAS_TOSOURCE
 JSBool
@@ -649,7 +649,7 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
     JSProperty *prop;
     uintN attrs;
 #endif
-    jsval val[2];
+    jsval *val;
     JSString *gsop[2];
     JSAtom *atom;
     JSString *idstr, *valstr, *str;
@@ -759,6 +759,13 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
 
     comma = NULL;
 
+    /*
+     * We have four local roots for cooked and raw value GC safety.  Hoist the
+     * """"argv + 2"""" out of the loop using the val local, which refers to the raw
+     * (unconverted, """"uncooked"""") values.
+     */
+    val = argv + 2;
+
     for (i = 0, length = ida->length; i < length; i++) {
         /* Get strings for id and value and GC-root them via argv. */
         id = ida->vector[i];
@@ -826,7 +833,7 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
             ok = JS_FALSE;
             goto error;
         }
-        argv[0] = STRING_TO_JSVAL(idstr);
+        *rval = STRING_TO_JSVAL(idstr);         /* local root */
 
         /*
          * If id is a string that's a reserved identifier, or else id is not
@@ -841,7 +848,7 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 ok = JS_FALSE;
                 goto error;
             }
-            argv[0] = STRING_TO_JSVAL(idstr);
+            *rval = STRING_TO_JSVAL(idstr);     /* local root */
         }
         idstrchars = JSSTRING_CHARS(idstr);
         idstrlength = JSSTRING_LENGTH(idstr);
@@ -853,7 +860,7 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
                 ok = JS_FALSE;
                 goto error;
             }
-            argv[1+j] = STRING_TO_JSVAL(valstr);
+            argv[j] = STRING_TO_JSVAL(valstr);  /* local root */
             vchars = JSSTRING_CHARS(valstr);
             vlength = JSSTRING_LENGTH(valstr);
 """
67dcb21a01e5fcd1d55776c8a8afca5d7d0970bd,132071,312278,mrbkap%gmail.com,"bug 312278: Make sure to root things if they can be collected before their use. r=brendan
",1129764757,"""diff --git a/js/src/jsexn.c b/js/src/jsexn.c
index 7748f0e..266a3a2 100644
--- a/js/src/jsexn.c
+++ b/js/src/jsexn.c
@@ -1,4 +1,5 @@
 /* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ * vim: set ts=8 sw=4 et tw=80:
  *
  * ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
@@ -659,6 +660,7 @@ exn_toString(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         return JS_FALSE;
     }
     name = JSVAL_IS_STRING(v) ? JSVAL_TO_STRING(v) : cx->runtime->emptyString;
+    *rval = STRING_TO_JSVAL(name);
 
     if (!JS_GetProperty(cx, obj, js_message_str, &v))
         return JS_FALSE;
@@ -716,16 +718,19 @@ exn_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     name = js_ValueToString(cx, v);
     if (!name)
         return JS_FALSE;
+    *rval = STRING_TO_JSVAL(name);
 
     if (!JS_GetProperty(cx, obj, js_message_str, &v) ||
         !(message = js_ValueToSource(cx, v))) {
         return JS_FALSE;
     }
+    argv[argc] = STRING_TO_JSVAL(message);
 
     if (!JS_GetProperty(cx, obj, js_filename_str, &v) ||
         !(filename = js_ValueToSource(cx, v))) {
         return JS_FALSE;
     }
+    argv[argc + 1] = STRING_TO_JSVAL(filename);
 
     if (!JS_GetProperty(cx, obj, js_lineno_str, &v) ||
         !js_ValueToECMAUint32 (cx, v, &lineno)) {
@@ -813,7 +818,7 @@ exn_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 
 static JSFunctionSpec exception_methods[] = {
 #if JS_HAS_TOSOURCE
-    {js_toSource_str,   exn_toSource,           0,0,0},
+    {js_toSource_str,   exn_toSource,           0,0,2},
 #endif
     {js_toString_str,   exn_toString,           0,0,0},
     {0,0,0,0,0}"""
86118f28bdc05a32702b829b36649340065e41a6,132094,312871,mrbkap%gmail.com,"bug 312871: Make global objects behave more like each other. r=bzbarsky sr=brendan
",1129747514,"""diff --git a/content/xbl/src/nsXBLDocumentInfo.cpp b/content/xbl/src/nsXBLDocumentInfo.cpp
index 07f1124..94b4005 100644
--- a/content/xbl/src/nsXBLDocumentInfo.cpp
+++ b/content/xbl/src/nsXBLDocumentInfo.cpp
@@ -1,4 +1,5 @@
 /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=2 sw=2 et tw=80: */
 /* ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
  *
@@ -49,6 +50,8 @@
 #include """"nsIScriptError.h""""
 #include """"nsIChromeRegistry.h""""
 #include """"nsIPrincipal.h""""
+#include """"nsIScriptSecurityManager.h""""
+#include """"nsContentUtils.h""""
 
 static NS_DEFINE_CID(kDOMScriptObjectFactoryCID, NS_DOM_SCRIPT_OBJECT_FACTORY_CID);
 
@@ -98,7 +101,50 @@ protected:
   static JSClass gSharedGlobalClass;
 };
 
-void PR_CALLBACK nsXBLDocGlobalObject_finalize(JSContext *cx, JSObject *obj)
+static JSBool
+doCheckAccess(JSContext *cx, JSObject *obj, jsval id, PRUint32 accessType)
+{
+  nsIScriptSecurityManager *ssm = nsContentUtils::GetSecurityManager();
+  if (!ssm) {
+    ::JS_ReportError(cx, """"Unable to verify access to a global object property."""");
+    return JS_FALSE;
+  }
+
+  nsresult rv = ssm->CheckPropertyAccess(cx, obj, JS_GET_CLASS(cx, obj)->name,
+                                         id, accessType);
+  return NS_SUCCEEDED(rv);
+}
+
+PR_STATIC_CALLBACK(JSBool)
+nsXBLDocGlobalObject_getProperty(JSContext *cx, JSObject *obj,
+                                 jsval id, jsval *vp)
+{
+  return doCheckAccess(cx, obj, id, nsIXPCSecurityManager::ACCESS_GET_PROPERTY);
+}
+
+PR_STATIC_CALLBACK(JSBool)
+nsXBLDocGlobalObject_setProperty(JSContext *cx, JSObject *obj,
+                                 jsval id, jsval *vp)
+{
+  return doCheckAccess(cx, obj, id, nsIXPCSecurityManager::ACCESS_SET_PROPERTY);
+}
+
+PR_STATIC_CALLBACK(JSBool)
+nsXBLDocGlobalObject_checkAccess(JSContext *cx, JSObject *obj, jsval id,
+                                 JSAccessMode mode, jsval *vp)
+{
+  PRUint32 translated;
+  if (mode & JSACC_WRITE) {
+    translated = nsIXPCSecurityManager::ACCESS_SET_PROPERTY;
+  } else {
+    translated = nsIXPCSecurityManager::ACCESS_GET_PROPERTY;
+  }
+
+  return doCheckAccess(cx, obj, id, translated);
+}
+
+PR_STATIC_CALLBACK(void)
+nsXBLDocGlobalObject_finalize(JSContext *cx, JSObject *obj)
 {
   nsISupports *nativeThis = (nsISupports*)JS_GetPrivate(cx, obj);
 
@@ -111,8 +157,8 @@ void PR_CALLBACK nsXBLDocGlobalObject_finalize(JSContext *cx, JSObject *obj)
   NS_RELEASE(nativeThis);
 }
 
-
-JSBool PR_CALLBACK nsXBLDocGlobalObject_resolve(JSContext *cx, JSObject *obj, jsval id)
+PR_STATIC_CALLBACK(JSBool)
+nsXBLDocGlobalObject_resolve(JSContext *cx, JSObject *obj, jsval id)
 {
   JSBool did_resolve = JS_FALSE;
   return JS_ResolveStandardClass(cx, obj, id, &did_resolve);
@@ -122,9 +168,11 @@ JSBool PR_CALLBACK nsXBLDocGlobalObject_resolve(JSContext *cx, JSObject *obj, js
 JSClass nsXBLDocGlobalObject::gSharedGlobalClass = {
     """"nsXBLPrototypeScript compilation scope"""",
     JSCLASS_HAS_PRIVATE | JSCLASS_PRIVATE_IS_NSISUPPORTS,
-    JS_PropertyStub,  JS_PropertyStub, JS_PropertyStub, JS_PropertyStub,
-    JS_EnumerateStub, nsXBLDocGlobalObject_resolve,  JS_ConvertStub,
-    nsXBLDocGlobalObject_finalize
+    JS_PropertyStub,  JS_PropertyStub,
+    nsXBLDocGlobalObject_getProperty, nsXBLDocGlobalObject_setProperty,
+    JS_EnumerateStub, nsXBLDocGlobalObject_resolve,
+    JS_ConvertStub, nsXBLDocGlobalObject_finalize,
+    NULL, nsXBLDocGlobalObject_checkAccess
 };
 
 //----------------------------------------------------------------------"""
88fd496f3f76bd9c722cf88ab62248b572e12890,132261,311497,brendan%mozilla.org,"Fix from igor.bukanov@gmail.com for old bug in argv provisioning/scanning (311497, r=me).
",1129335248,"""diff --git a/js/src/jsgc.c b/js/src/jsgc.c
index 8f4724a..f919240 100644
--- a/js/src/jsgc.c
+++ b/js/src/jsgc.c
@@ -1747,8 +1747,11 @@ restart:
                 GC_MARK(cx, fp->thisp, """"this"""", NULL);
                 if (fp->argv) {
                     nslots = fp->argc;
-                    if (fp->fun && fp->fun->nargs > nslots)
-                        nslots = fp->fun->nargs;
+                    if (fp->fun) {
+                        if (fp->fun->nargs > nslots)
+                            nslots = fp->fun->nargs;
+                        nslots += fp->fun->extra;
+                    }
                     GC_MARK_JSVALS(cx, nslots, fp->argv, """"arg"""");
                 }
                 if (JSVAL_IS_GCTHING(fp->rval))
diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index d4bdde1..f9ddb34 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -855,8 +855,7 @@ js_Invoke(JSContext *cx, uintN argc, uintN flags)
     JSNative native;
     JSFunction *fun;
     JSScript *script;
-    uintN minargs, nvars;
-    intN nslots, nalloc, surplus;
+    uintN nslots, nvars, nalloc, surplus;
     JSInterpreterHook hook;
     void *hookData;
 
@@ -1020,7 +1019,7 @@ js_Invoke(JSContext *cx, uintN argc, uintN flags)
         }
         fun = NULL;
         script = NULL;
-        minargs = nvars = 0;
+        nslots = nvars = 0;
 
         /* Try a call or construct native object op. */
         native = (flags & JSINVOKE_CONSTRUCT) ? ops->construct : ops->call;
@@ -1037,7 +1036,8 @@ have_fun:
             native = fun->u.native;
             script = NULL;
         }
-        minargs = fun->nargs + fun->extra;
+        nslots = (fun->nargs > argc) ? fun->nargs - argc : 0;
+        nslots += fun->extra;
         nvars = fun->nvars;
 
         /* Handle bound method special case. */
@@ -1076,8 +1076,7 @@ have_fun:
     hook = cx->runtime->callHook;
     hookData = NULL;
 
-    /* Check for missing arguments expected by the function. */
-    nslots = (intN)((argc < minargs) ? minargs - argc : 0);
+    /* Check for argument slots required by the function. */
     if (nslots) {
         /* All arguments must be contiguous, so we may have to copy actuals. */
         nalloc = nslots;
@@ -1087,15 +1086,15 @@ have_fun:
             nalloc += 2 + argc;
         } else {
             /* Take advantage of surplus slots in the caller's frame depth. */
+            JS_ASSERT((jsval *)mark >= sp);
             surplus = (jsval *)mark - sp;
-            JS_ASSERT(surplus >= 0);
             nalloc -= surplus;
         }
 
         /* Check whether we have enough space in the caller's frame. */
-        if (nalloc > 0) {
+        if ((intN)nalloc > 0) {
             /* Need space for actuals plus missing formals minus surplus. */
-            newsp = js_AllocRawStack(cx, (uintN)nalloc, NULL);
+            newsp = js_AllocRawStack(cx, nalloc, NULL);
             if (!newsp) {
                 ok = JS_FALSE;
                 goto out;
@@ -1104,7 +1103,7 @@ have_fun:
             /* If we couldn't allocate contiguous args, copy actuals now. */
             if (newsp != mark) {
                 JS_ASSERT(sp + nslots > limit);
-                JS_ASSERT(2 + argc + nslots == (uintN)nalloc);
+                JS_ASSERT(2 + argc + nslots == nalloc);
                 *newsp++ = vp[0];
                 *newsp++ = vp[1];
                 if (argc)
@@ -1118,16 +1117,18 @@ have_fun:
         frame.vars += nslots;
 
         /* Push void to initialize missing args. */
-        while (--nslots >= 0)
+        do {
             PUSH(JSVAL_VOID);
+        } while (--nslots != 0);
     }
+    JS_ASSERT(nslots == 0);
 
     /* Now allocate stack space for local variables. */
-    nslots = (intN)frame.nvars;
-    if (nslots) {
-        surplus = (intN)((jsval *)cx->stackPool.current->avail - frame.vars);
-        if (surplus < nslots) {
-            newsp = js_AllocRawStack(cx, (uintN)nslots, NULL);
+    if (nvars) {
+        JS_ASSERT((jsval *)cx->stackPool.current->avail >= frame.vars);
+        surplus = (jsval *)cx->stackPool.current->avail - frame.vars;
+        if (surplus < nvars) {
+            newsp = js_AllocRawStack(cx, nvars, NULL);
             if (!newsp) {
                 ok = JS_FALSE;
                 goto out;
@@ -1139,8 +1140,9 @@ have_fun:
         }
 
         /* Push void to initialize local variables. */
-        while (--nslots >= 0)
+        do {
             PUSH(JSVAL_VOID);
+        } while (--nvars != 0);
     }
 
     /* Store the current sp in frame before calling fun. */
@@ -2294,7 +2296,7 @@ js_Interpret(JSContext *cx, jsbytecode *pc, jsval *result)
                  ? ((JSXMLObjectOps *) obj->map->ops)->enumerateValues
                                 (cx, obj, JSENUMERATE_NEXT, &iter_state,
                                  &fid, &rval)
-                 : 
+                 :
 #endif
                    OBJ_ENUMERATE(cx, obj, JSENUMERATE_NEXT, &iter_state, &fid);
             propobj->slots[JSSLOT_ITER_STATE] = iter_state;
@@ -3595,7 +3597,7 @@ js_Interpret(JSContext *cx, jsbytecode *pc, jsval *result)
             PUSH_OPND(rval);
             obj = NULL;
             break;
- 
+
           case JSOP_UINT24:
             i = (jsint) GET_LITERAL_INDEX(pc);
             rval = INT_TO_JSVAL(i);"""
47e8b33c8b36c130525974eb4c817b3d1cf8f296,132271,311497,brendan%mozilla.org,"Fix from igor.bukanov@gmail.com for old bug in argv provisioning/scanning (311497, r=me).
",1129329110,"""diff --git a/js/src/jsgc.c b/js/src/jsgc.c
index 8f4724a..f919240 100644
--- a/js/src/jsgc.c
+++ b/js/src/jsgc.c
@@ -1747,8 +1747,11 @@ restart:
                 GC_MARK(cx, fp->thisp, """"this"""", NULL);
                 if (fp->argv) {
                     nslots = fp->argc;
-                    if (fp->fun && fp->fun->nargs > nslots)
-                        nslots = fp->fun->nargs;
+                    if (fp->fun) {
+                        if (fp->fun->nargs > nslots)
+                            nslots = fp->fun->nargs;
+                        nslots += fp->fun->extra;
+                    }
                     GC_MARK_JSVALS(cx, nslots, fp->argv, """"arg"""");
                 }
                 if (JSVAL_IS_GCTHING(fp->rval))
diff --git a/js/src/jsinterp.c b/js/src/jsinterp.c
index d4bdde1..93349ac 100644
--- a/js/src/jsinterp.c
+++ b/js/src/jsinterp.c
@@ -855,8 +855,7 @@ js_Invoke(JSContext *cx, uintN argc, uintN flags)
     JSNative native;
     JSFunction *fun;
     JSScript *script;
-    uintN minargs, nvars;
-    intN nslots, nalloc, surplus;
+    uintN nslots, nvars, nalloc, surplus;
     JSInterpreterHook hook;
     void *hookData;
 
@@ -1020,7 +1019,7 @@ js_Invoke(JSContext *cx, uintN argc, uintN flags)
         }
         fun = NULL;
         script = NULL;
-        minargs = nvars = 0;
+        nslots = nvars = 0;
 
         /* Try a call or construct native object op. */
         native = (flags & JSINVOKE_CONSTRUCT) ? ops->construct : ops->call;
@@ -1037,7 +1036,8 @@ have_fun:
             native = fun->u.native;
             script = NULL;
         }
-        minargs = fun->nargs + fun->extra;
+        nslots = (fun->nargs > argc) ? fun->nargs - argc : 0;
+        nslots += fun->extra;
         nvars = fun->nvars;
 
         /* Handle bound method special case. */
@@ -1076,8 +1076,7 @@ have_fun:
     hook = cx->runtime->callHook;
     hookData = NULL;
 
-    /* Check for missing arguments expected by the function. */
-    nslots = (intN)((argc < minargs) ? minargs - argc : 0);
+    /* Check for argument slots required by the function. */
     if (nslots) {
         /* All arguments must be contiguous, so we may have to copy actuals. */
         nalloc = nslots;
@@ -1087,15 +1086,15 @@ have_fun:
             nalloc += 2 + argc;
         } else {
             /* Take advantage of surplus slots in the caller's frame depth. */
+            JS_ASSERT((jsval *)mark >= sp);
             surplus = (jsval *)mark - sp;
-            JS_ASSERT(surplus >= 0);
             nalloc -= surplus;
         }
 
         /* Check whether we have enough space in the caller's frame. */
         if (nalloc > 0) {
             /* Need space for actuals plus missing formals minus surplus. */
-            newsp = js_AllocRawStack(cx, (uintN)nalloc, NULL);
+            newsp = js_AllocRawStack(cx, nalloc, NULL);
             if (!newsp) {
                 ok = JS_FALSE;
                 goto out;
@@ -1104,7 +1103,7 @@ have_fun:
             /* If we couldn't allocate contiguous args, copy actuals now. */
             if (newsp != mark) {
                 JS_ASSERT(sp + nslots > limit);
-                JS_ASSERT(2 + argc + nslots == (uintN)nalloc);
+                JS_ASSERT(2 + argc + nslots == nalloc);
                 *newsp++ = vp[0];
                 *newsp++ = vp[1];
                 if (argc)
@@ -1118,16 +1117,18 @@ have_fun:
         frame.vars += nslots;
 
         /* Push void to initialize missing args. */
-        while (--nslots >= 0)
+        do {
             PUSH(JSVAL_VOID);
+        } while (--nslots != 0);
     }
+    JS_ASSERT(nslots == 0);
 
     /* Now allocate stack space for local variables. */
-    nslots = (intN)frame.nvars;
-    if (nslots) {
-        surplus = (intN)((jsval *)cx->stackPool.current->avail - frame.vars);
-        if (surplus < nslots) {
-            newsp = js_AllocRawStack(cx, (uintN)nslots, NULL);
+    if (nvars) {
+        JS_ASSERT((jsval *)cx->stackPool.current->avail >= frame.vars);
+        surplus = (jsval *)cx->stackPool.current->avail - frame.vars;
+        if (surplus < nvars) {
+            newsp = js_AllocRawStack(cx, nvars, NULL);
             if (!newsp) {
                 ok = JS_FALSE;
                 goto out;
@@ -1139,8 +1140,9 @@ have_fun:
         }
 
         /* Push void to initialize local variables. */
-        while (--nslots >= 0)
+        do {
             PUSH(JSVAL_VOID);
+        } while (--nvars != 0);
     }
 
     /* Store the current sp in frame before calling fun. */
@@ -2294,7 +2296,7 @@ js_Interpret(JSContext *cx, jsbytecode *pc, jsval *result)
                  ? ((JSXMLObjectOps *) obj->map->ops)->enumerateValues
                                 (cx, obj, JSENUMERATE_NEXT, &iter_state,
                                  &fid, &rval)
-                 : 
+                 :
 #endif
                    OBJ_ENUMERATE(cx, obj, JSENUMERATE_NEXT, &iter_state, &fid);
             propobj->slots[JSSLOT_ITER_STATE] = iter_state;
@@ -3595,7 +3597,7 @@ js_Interpret(JSContext *cx, jsbytecode *pc, jsval *result)
             PUSH_OPND(rval);
             obj = NULL;
             break;
- 
+
           case JSOP_UINT24:
             i = (jsint) GET_LITERAL_INDEX(pc);
             rval = INT_TO_JSVAL(i);"""
73d13a12a379cddd367d53ad886cf69effb3815b,132274,311710,bzbarsky%mit.edu,"Fix bug 311710, r=neil, sr=roc
",1129325198,"""diff --git a/layout/xul/base/src/grid/nsGrid.cpp b/layout/xul/base/src/grid/nsGrid.cpp
index 0ada908..bef674b 100644
--- a/layout/xul/base/src/grid/nsGrid.cpp
+++ b/layout/xul/base/src/grid/nsGrid.cpp
@@ -220,13 +220,17 @@ nsGrid::RebuildIfNeeded()
   // So in this case we need to make 1 extra column.
   //
 
+  // Make sure to update mExtraColumnCount no matter what, since it might
+  // happen that we now have as many columns as are defined, and we wouldn't
+  // want to have a positive mExtraColumnCount hanging about in that case!
+  mExtraColumnCount = computedColumnCount - columnCount;
   if (computedColumnCount > columnCount) {
-     mExtraColumnCount = computedColumnCount - columnCount;
      columnCount = computedColumnCount;
   }
 
+  // Same for rows.
+  mExtraRowCount = computedRowCount - rowCount;
   if (computedRowCount > rowCount) {
-     mExtraRowCount    = computedRowCount - rowCount;
      rowCount = computedRowCount;
   }
 
@@ -536,10 +540,10 @@ nsGrid::GetRowAt(PRInt32 aIndex, PRBool aIsHorizontal)
   RebuildIfNeeded();
 
   if (aIsHorizontal) {
-    NS_ASSERTION(aIndex < mRowCount || aIndex >= 0, """"Index out of range"""");
+    NS_ASSERTION(aIndex < mRowCount && aIndex >= 0, """"Index out of range"""");
     return &mRows[aIndex];
   } else {
-    NS_ASSERTION(aIndex < mColumnCount || aIndex >= 0, """"Index out of range"""");
+    NS_ASSERTION(aIndex < mColumnCount && aIndex >= 0, """"Index out of range"""");
     return &mColumns[aIndex];
   }
 }"""
9efb84ea7d9a4468b5141f8315dfb91d47b9c4eb,132279,311892,mrbkap%gmail.com,"bug 311892: Add some (awful, gross) checks. r=brendan
",1129316743,"""diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index 5c1f4d5..1d131ef 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -1064,6 +1064,31 @@ CheckEvalAccess(JSContext *cx, JSObject *scopeobj, JSPrincipals *principals)
     return JS_TRUE;
 }
 
+JSBool
+js_CheckScopeChainValidity(JSContext *cx, JSObject *scopeobj, const char *caller)
+{
+    JSClass *clasp;
+    JSExtendedClass *xclasp;
+
+    /* XXX This is an awful gross hack. */
+    while (scopeobj) {
+        clasp = OBJ_GET_CLASS(cx, scopeobj);
+        if (clasp->flags & JSCLASS_IS_EXTENDED) {
+            xclasp = (JSExtendedClass*)clasp;
+            if (xclasp->innerObject &&
+                xclasp->innerObject(cx, scopeobj) != scopeobj) {
+                JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,
+                                     JSMSG_BAD_INDIRECT_CALL, caller);
+                return JS_FALSE;
+            }
+        }
+
+        scopeobj = OBJ_GET_PARENT(cx, scopeobj);
+    }
+
+    return JS_TRUE;
+}
+
 static JSBool
 obj_eval(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
@@ -1157,6 +1182,9 @@ obj_eval(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     if (!scopeobj)
         return JS_FALSE;
 
+    if (!js_CheckScopeChainValidity(cx, scopeobj, js_eval_str))
+        return JS_FALSE;
+
     str = JSVAL_TO_STRING(argv[0]);
     if (caller) {
         file = caller->script->filename;
diff --git a/js/src/jsobj.h b/js/src/jsobj.h
index e2268d8..616394c 100644
--- a/js/src/jsobj.h
+++ b/js/src/jsobj.h
@@ -488,6 +488,9 @@ js_GetRequiredSlot(JSContext *cx, JSObject *obj, uint32 slot);
 extern JSBool
 js_SetRequiredSlot(JSContext *cx, JSObject *obj, uint32 slot, jsval v);
 
+extern JSBool
+js_CheckScopeChainValidity(JSContext *cx, JSObject *scopeobj, const char *caller);
+
 JS_END_EXTERN_C
 
 #endif /* jsobj_h___ */
diff --git a/js/src/jsscript.c b/js/src/jsscript.c
index 66549fd..23134e7 100644
--- a/js/src/jsscript.c
+++ b/js/src/jsscript.c
@@ -64,6 +64,8 @@
 
 #if JS_HAS_SCRIPT_OBJECT
 
+static const char js_script_exec[] = """"Script.prototype.exec"""";
+
 #if JS_HAS_TOSOURCE
 static JSBool
 script_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
@@ -310,6 +312,9 @@ script_exec(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     if (!scopeobj)
         return JS_FALSE;
 
+    if (!js_CheckScopeChainValidity(cx, scopeobj, js_script_exec))
+        return JS_FALSE;
+
     /* Belt-and-braces: check that this script object has access to scopeobj. */
     principals = script->principals;
     rt = cx->runtime;
@@ -319,7 +324,7 @@ script_exec(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
             !principals->subsume(principals, scopePrincipals)) {
             JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,
                                  JSMSG_BAD_INDIRECT_CALL,
-                                 """"Script.prototype.exec"""");
+                                 js_script_exec);
             return JS_FALSE;
         }
     }"""
f310dfbccfcd5617b73626331e19b5cf70cd0d70,132455,311792,mrbkap%gmail.com,"bug 311792: Make sure that temporary values are protected from GC. Patch from Igor Bukanov <igor.bukanov@gmail.com>. r=mrbkap/brendan
",1128987196,"""diff --git a/js/src/jsarray.c b/js/src/jsarray.c
index 24e4451..bfed6b0 100644
--- a/js/src/jsarray.c
+++ b/js/src/jsarray.c
@@ -634,12 +634,18 @@ array_reverse(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
 {
     jsuint len, half, i;
     jsid id, id2;
-    jsval v, v2;
+    jsval *tmproot, *tmproot2;
     JSBool idexists, id2exists;
 
     if (!js_GetLengthProperty(cx, obj, &len))
         return JS_FALSE;
 
+    /*
+     * Use argv[argc] and argv[argc + 1] as local roots to hold temporarily
+     * array elements for GC-safe swap.
+     */
+    tmproot = argv + argc;
+    tmproot2 = argv + argc + 1;
     half = len / 2;
     for (i = 0; i < half; i++) {
         if (!IndexToId(cx, i, &id))
@@ -657,23 +663,23 @@ array_reverse(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
          * Get both of the values now. Note that we don't use v, or v2 based on
          * idexists and id2exists.
          */
-        if (!OBJ_GET_PROPERTY(cx, obj, id, &v) ||
-            !OBJ_GET_PROPERTY(cx, obj, id2, &v2)) {
+        if (!OBJ_GET_PROPERTY(cx, obj, id, tmproot) ||
+            !OBJ_GET_PROPERTY(cx, obj, id2, tmproot2)) {
             return JS_FALSE;
         }
 
         if (idexists) {
-            if (!OBJ_SET_PROPERTY(cx, obj, id2, &v))
+            if (!OBJ_SET_PROPERTY(cx, obj, id2, tmproot))
                 return JS_FALSE;
         } else {
-            if (!OBJ_DELETE_PROPERTY(cx, obj, id2, &v))
+            if (!OBJ_DELETE_PROPERTY(cx, obj, id2, tmproot))
                 return JS_FALSE;
         }
         if (id2exists) {
-            if (!OBJ_SET_PROPERTY(cx, obj, id, &v2))
+            if (!OBJ_SET_PROPERTY(cx, obj, id, tmproot2))
                 return JS_FALSE;
         } else {
-            if (!OBJ_DELETE_PROPERTY(cx, obj, id, &v2))
+            if (!OBJ_DELETE_PROPERTY(cx, obj, id, tmproot2))
                 return JS_FALSE;
         }
     }
@@ -1368,9 +1374,11 @@ array_slice(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     jsid id, id2;
     jsval v;
 
+    /* Create a new Array object and store it in the rval local root. */
     nobj = js_NewArrayObject(cx, 0, NULL);
     if (!nobj)
         return JS_FALSE;
+    *rval = OBJECT_TO_JSVAL(nobj);
 
     if (!js_GetLengthProperty(cx, obj, &length))
         return JS_FALSE;
@@ -1420,7 +1428,6 @@ array_slice(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         if (!OBJ_SET_PROPERTY(cx, nobj, id2, &v))
             return JS_FALSE;
     }
-    *rval = OBJECT_TO_JSVAL(nobj);
     return js_SetLengthProperty(cx, nobj, end - begin);
 }
 #endif /* JS_HAS_SEQUENCE_OPS */
@@ -1713,7 +1720,7 @@ static JSFunctionSpec array_methods[] = {
     /* Perl-ish methods. */
 #if JS_HAS_SOME_PERL_FUN
     {""""join"""",                array_join,             1,JSFUN_GENERIC_NATIVE,0},
-    {""""reverse"""",             array_reverse,          0,JSFUN_GENERIC_NATIVE,0},
+    {""""reverse"""",             array_reverse,          0,JSFUN_GENERIC_NATIVE,2},
     {""""sort"""",                array_sort,             1,JSFUN_GENERIC_NATIVE,1},
 #endif
 #if JS_HAS_MORE_PERL_FUN"""
dc63d83dc842db71dbe5e9b548446ee5ab3e2e67,132514,311403,mrbkap%gmail.com,"bug 311403: Enforce JS engine invarients. r=brendan
",1128844592,"""diff --git a/js/src/jsscript.c b/js/src/jsscript.c
index 539d001..66549fd 100644
--- a/js/src/jsscript.c
+++ b/js/src/jsscript.c
@@ -312,17 +312,15 @@ script_exec(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 
     /* Belt-and-braces: check that this script object has access to scopeobj. */
     principals = script->principals;
-    if (principals) {
-        rt = cx->runtime;
-        if (rt->findObjectPrincipals) {
-            scopePrincipals = rt->findObjectPrincipals(cx, scopeobj);
-            if (scopePrincipals &&
-                !principals->subsume(principals, scopePrincipals)) {
-                JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,
-                                     JSMSG_BAD_INDIRECT_CALL,
-                                     """"Script.prototype.exec"""");
-                return JS_FALSE;
-            }
+    rt = cx->runtime;
+    if (rt->findObjectPrincipals) {
+        scopePrincipals = rt->findObjectPrincipals(cx, scopeobj);
+        if (!principals || !scopePrincipals ||
+            !principals->subsume(principals, scopePrincipals)) {
+            JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,
+                                 JSMSG_BAD_INDIRECT_CALL,
+                                 """"Script.prototype.exec"""");
+            return JS_FALSE;
         }
     }
 """
88667c0d55ba24c48a1cb1b8dde053e3c2407b2d,132515,311619,mrbkap%gmail.com,"bug 311619: Make sure to grab the correct scope object. r=brendan
",1128843932,"""diff --git a/js/src/jsscript.c b/js/src/jsscript.c
index 5a7ffb6..539d001 100644
--- a/js/src/jsscript.c
+++ b/js/src/jsscript.c
@@ -306,6 +306,10 @@ script_exec(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         }
     }
 
+    OBJ_TO_INNER_OBJECT(cx, scopeobj);
+    if (!scopeobj)
+        return JS_FALSE;
+
     /* Belt-and-braces: check that this script object has access to scopeobj. */
     principals = script->principals;
     if (principals) {"""
5c8a5958d0ddf22ca40e8932507c3c7375391a7b,132541,311024,mrbkap%gmail.com,"bug 311024: Make sure eval grabs the right scope object. r=brendan sr=jst
",1128731325,"""diff --git a/calendar/base/src/calDateTime.cpp b/calendar/base/src/calDateTime.cpp
index c23bcba..1ebce8a 100644
--- a/calendar/base/src/calDateTime.cpp
+++ b/calendar/base/src/calDateTime.cpp
@@ -856,3 +856,11 @@ calDateTime::OuterObject(nsIXPConnectWrappedNative *wrapper, JSContext *cx,
     return NS_ERROR_NOT_IMPLEMENTED;
 }
 
+/* JSObjectPtr innerObject(in nsIXPConnectWrappedNative wrapper, in JSContextPtr cx, in JSObjectPtr obj); */
+NS_IMETHODIMP
+calDateTime::InnerObject(nsIXPConnectWrappedNative *wrapper, JSContext *cx,
+                         JSObject *obj, JSObject **_retval)
+{
+    return NS_ERROR_NOT_IMPLEMENTED;
+}
+
diff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp
index d32a513..1a8179b 100644
--- a/dom/src/base/nsDOMClassInfo.cpp
+++ b/dom/src/base/nsDOMClassInfo.cpp
@@ -411,6 +411,7 @@ static const char kDOMStringBundleURL[] =
   nsIXPCScriptable::WANT_NEWENUMERATE |                                       \
   nsIXPCScriptable::WANT_EQUALITY |                                           \
   nsIXPCScriptable::WANT_OUTER_OBJECT |                                       \
+  nsIXPCScriptable::WANT_INNER_OBJECT |                                       \
   nsIXPCScriptable::DONT_ENUM_QUERY_INTERFACE)
 
 #define NODE_SCRIPTABLE_FLAGS                                                 \
@@ -3407,6 +3408,15 @@ nsDOMClassInfo::OuterObject(nsIXPConnectWrappedNative *wrapper, JSContext * cx,
   return NS_ERROR_UNEXPECTED;
 }
 
+NS_IMETHODIMP
+nsDOMClassInfo::InnerObject(nsIXPConnectWrappedNative *wrapper, JSContext * cx,
+                            JSObject * obj, JSObject * *_retval)
+{
+  NS_ERROR(""""nsDOMClassInfo::InnerObject Don't call me!"""");
+
+  return NS_ERROR_UNEXPECTED;
+}
+
 
 // static
 nsIClassInfo *
@@ -6097,11 +6107,7 @@ nsWindowSH::OuterObject(nsIXPConnectWrappedNative *wrapper, JSContext * cx,
   nsGlobalWindow *win =
     nsGlobalWindow::FromWrapper(wrapper)->GetOuterWindowInternal();
 
-  if (win) {
-    // Return the outer window.
-
-    *_retval = win->GetGlobalJSObject();
-  } else {
+  if (!win) {
     // If we no longer have an outer window. No code should ever be
     // running on a window w/o an outer, which means this hook should
     // never be called when we have no outer. But just in case, return
@@ -6109,11 +6115,45 @@ nsWindowSH::OuterObject(nsIXPConnectWrappedNative *wrapper, JSContext * cx,
     // window.
 
     *_retval = nsnull;
+
+    return NS_ERROR_UNEXPECTED;
   }
 
+  // Return the outer window.
+
+  *_retval = win->GetGlobalJSObject();
+
   return NS_OK;
 }
 
+NS_IMETHODIMP
+nsWindowSH::InnerObject(nsIXPConnectWrappedNative *wrapper, JSContext * cx,
+                        JSObject * obj, JSObject * *_retval)
+{
+  nsGlobalWindow *win = nsGlobalWindow::FromWrapper(wrapper);
+
+  if (win->IsInnerWindow()) {
+    // Return the inner window.
+
+    *_retval = obj;
+  } else {
+    // Try to find the current inner window.
+
+    nsGlobalWindow *inner = win->GetCurrentInnerWindowInternal();
+    if (!inner) {
+      // Yikes! No inner window! Instead of leaking the outer window into the
+      // scope chain, let's return an error.
+
+      *_retval = nsnull;
+
+      return NS_ERROR_UNEXPECTED;
+    }
+
+    *_retval = inner->GetGlobalJSObject();
+  }
+
+  return NS_OK;
+}
 
 // DOM Location helper
 
diff --git a/dom/src/base/nsDOMClassInfo.h b/dom/src/base/nsDOMClassInfo.h
index 80ca452..5d84b35 100644
--- a/dom/src/base/nsDOMClassInfo.h
+++ b/dom/src/base/nsDOMClassInfo.h
@@ -444,6 +444,8 @@ public:
                       JSObject * obj, jsval val, PRBool *bp);
   NS_IMETHOD OuterObject(nsIXPConnectWrappedNative *wrapper, JSContext * cx,
                          JSObject * obj, JSObject * *_retval);
+  NS_IMETHOD InnerObject(nsIXPConnectWrappedNative *wrapper, JSContext * cx,
+                         JSObject * obj, JSObject * *_retval);
 
   static JSBool JS_DLL_CALLBACK GlobalScopePolluterNewResolve(JSContext *cx,
                                                               JSObject *obj,
diff --git a/js/src/jsapi.h b/js/src/jsapi.h
index 4557f0d..5176292 100644
--- a/js/src/jsapi.h
+++ b/js/src/jsapi.h
@@ -891,12 +891,12 @@ struct JSExtendedClass {
     JSClass             base;
     JSEqualityOp        equality;
     JSObjectOp          outerObject;
+    JSObjectOp          innerObject;
     jsword              reserved0;
     jsword              reserved1;
     jsword              reserved2;
     jsword              reserved3;
     jsword              reserved4;
-    jsword              reserved5;
 };
 
 #define JSCLASS_HAS_PRIVATE             (1<<0)  /* objects have private slot */
@@ -934,7 +934,7 @@ struct JSExtendedClass {
 
 /* Initializer for unused members of statically initialized JSClass structs. */
 #define JSCLASS_NO_OPTIONAL_MEMBERS     0,0,0,0,0,0,0,0
-#define JSCLASS_NO_RESERVED_MEMBERS     0,0,0,0,0,0
+#define JSCLASS_NO_RESERVED_MEMBERS     0,0,0,0,0
 
 /* For detailed comments on these function pointer types, see jspubtd.h. */
 struct JSObjectOps {
diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index ff33622..acf9234 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -1156,6 +1156,11 @@ obj_eval(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 #endif
     }
 
+    /* Ensure we compile this eval with the right object in the scope chain. */
+    OBJ_TO_INNER_OBJECT(cx, scopeobj);
+    if (!scopeobj)
+        return JS_FALSE;
+
     str = JSVAL_TO_STRING(argv[0]);
     if (caller) {
         file = caller->script->filename;
diff --git a/js/src/jsobj.h b/js/src/jsobj.h
index cdc4990..e2268d8 100644
--- a/js/src/jsobj.h
+++ b/js/src/jsobj.h
@@ -1,4 +1,5 @@
 /* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ * vim: set ts=8 sw=4 et tw=80:
  *
  * ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
@@ -100,6 +101,16 @@ struct JSObjectMap {
      ? (obj)->map->ops->setRequiredSlot(cx, obj, slot, v)                     \
      : JS_TRUE)
 
+#define OBJ_TO_INNER_OBJECT(cx,obj)                                           \
+    JS_BEGIN_MACRO                                                            \
+        JSClass *clasp_ = OBJ_GET_CLASS(cx, obj);                             \
+        if (clasp_->flags & JSCLASS_IS_EXTENDED) {                            \
+            JSExtendedClass *xclasp_ = (JSExtendedClass*)clasp_;              \
+            if (xclasp_->innerObject)                                         \
+                obj = xclasp_->innerObject(cx, obj);                          \
+        }                                                                     \
+    JS_END_MACRO
+
 /*
  * In the original JS engine design, obj->slots pointed to a vector of length
  * JS_INITIAL_NSLOTS words if obj->map was shared with a prototype object,
diff --git a/js/src/jsscript.c b/js/src/jsscript.c
index 131964b..5a7ffb6 100644
--- a/js/src/jsscript.c
+++ b/js/src/jsscript.c
@@ -1,4 +1,5 @@
 /* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ * vim: set ts=8 sw=4 et tw=80:
  *
  * ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
@@ -201,6 +202,11 @@ script_compile(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,
         principals = NULL;
     }
 
+    /* Ensure we compile this script with the right (inner) principals. */
+    OBJ_TO_INNER_OBJECT(cx, scopeobj);
+    if (!scopeobj)
+        return JS_FALSE;
+
     /*
      * Compile the new script using the caller's scope chain, a la eval().
      * Unlike jsobj.c:obj_eval, however, we do not set JSFRAME_EVAL in fp's
diff --git a/js/src/jsxml.c b/js/src/jsxml.c
index 353e6eb..cf1b61f 100644
--- a/js/src/jsxml.c
+++ b/js/src/jsxml.c
@@ -252,7 +252,7 @@ JS_FRIEND_DATA(JSExtendedClass) js_NamespaceClass = {
     NULL,              NULL,              NULL,              NULL,
     NULL,              NULL,              namespace_mark,    NULL },
     namespace_equality,
-    NULL,
+    NULL, NULL,
     JSCLASS_NO_RESERVED_MEMBERS
 };
 
@@ -455,7 +455,7 @@ JS_FRIEND_DATA(JSExtendedClass) js_QNameClass = {
     NULL,              NULL,              NULL,              NULL,
     NULL,              NULL,              qname_mark,        NULL },
     qname_equality,
-    NULL,
+    NULL, NULL,
     JSCLASS_NO_RESERVED_MEMBERS
 };
 
diff --git a/js/src/xpconnect/idl/nsIXPCScriptable.idl b/js/src/xpconnect/idl/nsIXPCScriptable.idl
index b2c9799..0533073 100644
--- a/js/src/xpconnect/idl/nsIXPCScriptable.idl
+++ b/js/src/xpconnect/idl/nsIXPCScriptable.idl
@@ -53,7 +53,7 @@
  * to *_retval unless they want to return PR_FALSE.
  */
 
-[uuid(f617776f-c0f8-465f-8e60-268a1bf05a76)]
+[uuid(9cc0c2e0-f769-4f14-8cd6-2d2d40466f6c)]
 interface nsIXPCScriptable : nsISupports
 {
     /* bitflags used for 'flags' (only 32 bits available!) */
@@ -88,6 +88,7 @@ interface nsIXPCScriptable : nsISupports
     const PRUint32 DONT_REFLECT_INTERFACE_NAMES     = 1 << 27;
     const PRUint32 WANT_EQUALITY                    = 1 << 28;
     const PRUint32 WANT_OUTER_OBJECT                = 1 << 29;
+    const PRUint32 WANT_INNER_OBJECT                = 1 << 30;
 
     // The high order bit is RESERVED for consumers of these flags. 
     // No implementor of this interface should ever return flags 
@@ -168,4 +169,7 @@ interface nsIXPCScriptable : nsISupports
 
     JSObjectPtr outerObject(in nsIXPConnectWrappedNative wrapper,
                             in JSContextPtr cx, in JSObjectPtr obj);
+
+    JSObjectPtr innerObject(in nsIXPConnectWrappedNative wrapper,
+                            in JSContextPtr cx, in JSObjectPtr obj);
 };
diff --git a/js/src/xpconnect/public/xpc_map_end.h b/js/src/xpconnect/public/xpc_map_end.h
index 5026279..4bb85d2 100644
--- a/js/src/xpconnect/public/xpc_map_end.h
+++ b/js/src/xpconnect/public/xpc_map_end.h
@@ -118,6 +118,9 @@ NS_IMETHODIMP XPC_MAP_CLASSNAME::GetScriptableFlags(PRUint32 *aFlags)
 #ifdef XPC_MAP_WANT_OUTER_OBJECT
     nsIXPCScriptable::WANT_OUTER_OBJECT |
 #endif
+#ifdef XPC_MAP_WANT_INNER_OBJECT
+    nsIXPCScriptable::WANT_INNER_OBJECT |
+#endif
 
 #ifdef XPC_MAP_FLAGS
     XPC_MAP_FLAGS |
@@ -224,6 +227,11 @@ NS_IMETHODIMP XPC_MAP_CLASSNAME::OuterObject(nsIXPConnectWrappedNative *wrapper,
     {NS_ERROR(""""never called""""); return NS_ERROR_NOT_IMPLEMENTED;}
 #endif
 
+#ifndef XPC_MAP_WANT_INNER_OBJECT
+NS_IMETHODIMP XPC_MAP_CLASSNAME::InnerObject(nsIXPConnectWrappedNative *wrapper, JSContext * cx, JSObject * obj, JSObject * *_retval)
+    {NS_ERROR(""""never called""""); return NS_ERROR_NOT_IMPLEMENTED;}
+#endif
+
 /**************************************************************/
 
 #undef XPC_MAP_CLASSNAME
diff --git a/js/src/xpconnect/src/xpcprivate.h b/js/src/xpconnect/src/xpcprivate.h
index e4b90c4..e75a276 100644
--- a/js/src/xpconnect/src/xpcprivate.h
+++ b/js/src/xpconnect/src/xpcprivate.h
@@ -1439,6 +1439,7 @@ public:
     JSBool WantMark()                     GET_IT(WANT_MARK)
     JSBool WantEquality()                 GET_IT(WANT_EQUALITY)
     JSBool WantOuterObject()              GET_IT(WANT_OUTER_OBJECT)
+    JSBool WantInnerObject()              GET_IT(WANT_INNER_OBJECT)
     JSBool UseJSStubForAddProperty()      GET_IT(USE_JSSTUB_FOR_ADDPROPERTY)
     JSBool UseJSStubForDelProperty()      GET_IT(USE_JSSTUB_FOR_DELPROPERTY)
     JSBool UseJSStubForSetProperty()      GET_IT(USE_JSSTUB_FOR_SETPROPERTY)
diff --git a/js/src/xpconnect/src/xpcwrappednativejsops.cpp b/js/src/xpconnect/src/xpcwrappednativejsops.cpp
index ef73beb..ff8d808 100644
--- a/js/src/xpconnect/src/xpcwrappednativejsops.cpp
+++ b/js/src/xpconnect/src/xpcwrappednativejsops.cpp
@@ -1,4 +1,5 @@
 /* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ * vim: set ts=8 sw=4 et tw=80:
  *
  * ***** BEGIN LICENSE BLOCK *****
  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
@@ -819,6 +820,44 @@ XPC_WN_OuterObject(JSContext *cx, JSObject *obj)
     return obj;
 }
 
+JS_STATIC_DLL_CALLBACK(JSObject *)
+XPC_WN_InnerObject(JSContext *cx, JSObject *obj)
+{
+    XPCWrappedNative *wrapper =
+        XPCWrappedNative::GetWrappedNativeOfJSObject(cx, obj);
+    if(!wrapper)
+    {
+        Throw(NS_ERROR_XPC_BAD_OP_ON_WN_PROTO, cx);
+
+        return nsnull;
+    }
+
+    if(!wrapper->IsValid())
+    {
+        Throw(NS_ERROR_XPC_HAS_BEEN_SHUTDOWN, cx);
+
+        return nsnull;
+    }
+
+    XPCNativeScriptableInfo* si = wrapper->GetScriptableInfo();
+    if(si && si->GetFlags().WantInnerObject())
+    {
+        JSObject *newThis;
+        nsresult rv =
+            si->GetCallback()->InnerObject(wrapper, cx, obj, &newThis);
+
+        if(NS_FAILED(rv))
+        {
+            Throw(rv, cx);
+
+            return nsnull;
+        }
+
+        obj = newThis;
+    }
+
+    return obj;
+}
 
 JSExtendedClass XPC_WN_NoHelper_JSClass = {
     {
@@ -849,7 +888,9 @@ JSExtendedClass XPC_WN_NoHelper_JSClass = {
         nsnull                          // spare;
     },
     XPC_WN_Equality,
-    XPC_WN_OuterObject
+    XPC_WN_OuterObject,
+    XPC_WN_InnerObject,
+    JSCLASS_NO_RESERVED_MEMBERS
 };
 
 
@@ -1378,6 +1419,7 @@ XPCNativeScriptableShared::PopulateJSClass()
 
     mJSClass.equality = XPC_WN_Equality;
     mJSClass.outerObject = XPC_WN_OuterObject;
+    mJSClass.innerObject = XPC_WN_InnerObject;
 }
 
 /***************************************************************************/
diff --git a/storage/src/mozStorageStatementWrapper.cpp b/storage/src/mozStorageStatementWrapper.cpp
index a867be2..b0786fd 100644
--- a/storage/src/mozStorageStatementWrapper.cpp
+++ b/storage/src/mozStorageStatementWrapper.cpp
@@ -476,7 +476,14 @@ mozStorageStatementWrapper::OuterObject(nsIXPConnectWrappedNative *wrapper,
     return NS_ERROR_NOT_IMPLEMENTED;
 }
 
-
+/* JSObjectPtr innerObject(in nsIXPConnectWrappedNative wrapper, in JSContextPtr cx, in JSObjectPtr obj); */
+NS_IMETHODIMP
+mozStorageStatementWrapper::InnerObject(nsIXPConnectWrappedNative *wrapper,
+                                        JSContext *cx, JSObject *obj,
+                                        JSObject **_retval)
+{
+    return NS_ERROR_NOT_IMPLEMENTED;
+}
 
 /*************************************************************************
  ****
@@ -737,8 +744,14 @@ mozStorageStatementRow::OuterObject(nsIXPConnectWrappedNative *wrapper,
     return NS_ERROR_NOT_IMPLEMENTED;
 }
 
-
-
+/* JSObjectPtr innerObject(in nsIXPConnectWrappedNative wrapper, in JSContextPtr cx, in JSObjectPtr obj); */
+NS_IMETHODIMP
+mozStorageStatementRow::InnerObject(nsIXPConnectWrappedNative *wrapper,
+                                    JSContext *cx, JSObject *obj,
+                                    JSObject **_retval)
+{
+    return NS_ERROR_NOT_IMPLEMENTED;
+}
 
 /*************************************************************************
  ****
@@ -1014,3 +1027,12 @@ mozStorageStatementParams::OuterObject(nsIXPConnectWrappedNative *wrapper,
     return NS_ERROR_NOT_IMPLEMENTED;
 }
 
+/* JSObjectPtr innerObject(in nsIXPConnectWrappedNative wrapper, in JSContextPtr cx, in JSObjectPtr obj); */
+NS_IMETHODIMP
+mozStorageStatementParams::InnerObject(nsIXPConnectWrappedNative *wrapper,
+                                       JSContext *cx, JSObject *obj,
+                                       JSObject **_retval)
+{
+    return NS_ERROR_NOT_IMPLEMENTED;
+}
+"""
6780648262fd7f0daa15427e37b334d109713ae0,132572,311403,mrbkap%gmail.com,"bug 311403: maintain jsengine invarients. r=brendan
",1128650739,"""diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index 64a6d2c..ff33622 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -1057,7 +1057,7 @@ CheckEvalAccess(JSContext *cx, JSObject *scopeobj, JSPrincipals *principals)
     rt = cx->runtime;
     if (rt->findObjectPrincipals) {
         scopePrincipals = rt->findObjectPrincipals(cx, scopeobj);
-        if (scopePrincipals &&
+        if (!scopePrincipals || !principals ||
             !principals->subsume(principals, scopePrincipals)) {
             JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,
                                  JSMSG_BAD_INDIRECT_CALL, js_eval_str);
@@ -1203,11 +1203,9 @@ obj_eval(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
      * Belt-and-braces: check that the lesser of eval's principals and the
      * caller's principals has access to scopeobj.
      */
-    if (principals) {
-        ok = CheckEvalAccess(cx, scopeobj, principals);
-        if (!ok)
-            goto out;
-    }
+    ok = CheckEvalAccess(cx, scopeobj, principals);
+    if (!ok)
+        goto out;
 
     ok = js_Execute(cx, scopeobj, script, caller, JSFRAME_EVAL, rval);
     JS_DestroyScript(cx, script);"""
67a03d336382f207f7598cea884b403b6efc7bd3,132573,311025,mrbkap%gmail.com,"bug 311025: Consolidate principals-checking code in obj_eval. r=mrbkap sr=shaver
",1128649031,"""diff --git a/js/src/jsobj.c b/js/src/jsobj.c
index 5aef96e..64a6d2c 100644
--- a/js/src/jsobj.c
+++ b/js/src/jsobj.c
@@ -1043,6 +1043,30 @@ obj_valueOf(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     return JS_TRUE;
 }
 
+/*
+ * Check whether principals subsumes scopeobj's principals, and return true
+ * if so (or if scopeobj has no principals, for backward compatibility with
+ * the JS API, which does not require principals), and false otherwise.
+ */
+static JSBool
+CheckEvalAccess(JSContext *cx, JSObject *scopeobj, JSPrincipals *principals)
+{
+    JSRuntime *rt;
+    JSPrincipals *scopePrincipals;
+
+    rt = cx->runtime;
+    if (rt->findObjectPrincipals) {
+        scopePrincipals = rt->findObjectPrincipals(cx, scopeobj);
+        if (scopePrincipals &&
+            !principals->subsume(principals, scopePrincipals)) {
+            JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,
+                                 JSMSG_BAD_INDIRECT_CALL, js_eval_str);
+            return JS_FALSE;
+        }
+    }
+    return JS_TRUE;
+}
+
 static JSBool
 obj_eval(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
 {
@@ -1052,7 +1076,7 @@ obj_eval(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
     JSString *str;
     const char *file;
     uintN line;
-    JSPrincipals *principals, *scopePrincipals;
+    JSPrincipals *principals;
     JSScript *script;
     JSBool ok;
     JSRuntime *rt;
@@ -1099,6 +1123,9 @@ obj_eval(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
         if (indirectCall) {
             callerScopeChain = caller->scopeChain;
             if (obj != callerScopeChain) {
+                if (!CheckEvalAccess(cx, obj, caller->script->principals))
+                    return JS_FALSE;
+
                 scopeobj = js_NewObject(cx, &js_WithClass, obj,
                                         callerScopeChain);
                 if (!scopeobj)
@@ -1177,16 +1204,9 @@ obj_eval(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)
      * caller's principals has access to scopeobj.
      */
     if (principals) {
-        rt = cx->runtime;
-        if (rt->findObjectPrincipals) {
-            scopePrincipals = rt->findObjectPrincipals(cx, scopeobj);
-            if (scopePrincipals &&
-                !principals->subsume(principals, scopePrincipals)) {
-                JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,
-                                     JSMSG_BAD_INDIRECT_CALL, js_eval_str);
-                return JS_FALSE;
-            }
-        }
+        ok = CheckEvalAccess(cx, scopeobj, principals);
+        if (!ok)
+            goto out;
     }
 
     ok = js_Execute(cx, scopeobj, script, caller, JSFRAME_EVAL, rval);"""
ab1d4c607362d5a95e9246309d3d7a9a062131bd,133213,307185,dbaron%dbaron.org,"Pass arguments through cleanly rather than performing extra escaping.  b=307185  Patch from Tuukka Tolvanen <tuukka.tolvanen@gmail.com>.  r=bsmedberg  sr=bryner
",1127250697,"""diff --git a/browser/app/mozilla.in b/browser/app/mozilla.in
index aff036f..55feca7 100755
--- a/browser/app/mozilla.in
+++ b/browser/app/mozilla.in
@@ -36,7 +36,7 @@
 #
 # ***** END LICENSE BLOCK *****
 
-## $Id: mozilla.in,v 1.12 2005-04-04 19:08:49 bsmedberg%covad.net Exp $
+## $Id: mozilla.in,v 1.13 2005-09-20 21:11:34 dbaron%dbaron.org Exp $
 ## 
 ## Usage:
 ##
@@ -137,7 +137,6 @@ if [ $found = 0 ]; then
 fi
 
 script_args=""""""""
-moreargs=""""""""
 debugging=0
 MOZILLA_BIN=""""${progbase}-bin""""
 
@@ -145,7 +144,8 @@ if [ """"$OSTYPE"""" = """"beos"""" ]; then
   mimeset -F """"$MOZILLA_BIN""""
 fi
 
-while [ $# -gt 0 ]
+pass_arg_count=0
+while [ $# -gt $pass_arg_count ]
 do
   case """"$1"""" in
     -p | --pure | -pure)
@@ -162,14 +162,16 @@ do
       shift 2
       ;;
     *)
-      moreargs=""""$moreargs \""""$1\""""""""
-      shift 1
+      # Move the unrecognized argument to the end of the list.
+      arg=""""$1""""
+      shift
+      set -- """"$@"""" """"$arg""""
+      pass_arg_count=`expr $pass_arg_count + 1`
       ;;
   esac
 done
 
 export MRE_HOME
-eval """"set -- $moreargs""""
 
 ## Start addon scripts
 moz_pis_startstop_scripts """"start""""
diff --git a/calendar/sunbird/app/mozilla.in b/calendar/sunbird/app/mozilla.in
index 7512c0d..402049d 100755
--- a/calendar/sunbird/app/mozilla.in
+++ b/calendar/sunbird/app/mozilla.in
@@ -36,7 +36,7 @@
 #
 # ***** END LICENSE BLOCK *****
 
-## $Id: mozilla.in,v 1.7 2005-02-02 15:10:47 gerv%gerv.net Exp $
+## $Id: mozilla.in,v 1.8 2005-09-20 21:11:35 dbaron%dbaron.org Exp $
 ## 
 ## Usage:
 ##
@@ -136,7 +136,6 @@ if [ $found = 0 ]; then
 fi
 
 script_args=""""""""
-moreargs=""""""""
 debugging=0
 MOZILLA_BIN=""""${progbase}-bin""""
 
@@ -222,7 +221,8 @@ fi
 # Default action - no running instance or _USE_EXIST (${_USE_EXIST}) ! -eq 1
 ########################################################################### Main
 
-while [ $# -gt 0 ]
+pass_arg_count=0
+while [ $# -gt $pass_arg_count ]
 do
   case """"$1"""" in
     -p | --pure | -pure)
@@ -239,14 +239,16 @@ do
       shift 2
       ;;
     *)
-      moreargs=""""$moreargs \""""$1\""""""""
-      shift 1
+      # Move the unrecognized argument to the end of the list.
+      arg=""""$1""""
+      shift
+      set -- """"$@"""" """"$arg""""
+      pass_arg_count=`expr $pass_arg_count + 1`
       ;;
   esac
 done
 
 export MRE_HOME
-eval """"set -- $moreargs""""
 
 ## Start addon scripts
 moz_pis_startstop_scripts """"start""""
diff --git a/composer/app/mozilla.in b/composer/app/mozilla.in
index 0bae353..4771f7b 100644
--- a/composer/app/mozilla.in
+++ b/composer/app/mozilla.in
@@ -36,7 +36,7 @@
 #
 # ***** END LICENSE BLOCK *****
 
-## $Id: mozilla.in,v 1.2 2004-04-25 15:36:32 gerv%gerv.net Exp $
+## $Id: mozilla.in,v 1.3 2005-09-20 21:11:35 dbaron%dbaron.org Exp $
 ## 
 ## Usage:
 ##
@@ -100,7 +100,6 @@ else
 fi
 
 script_args=""""""""
-moreargs=""""""""
 debugging=0
 MOZILLA_BIN=""""mozilla-bin""""
 
@@ -108,7 +107,8 @@ if [ """"$OSTYPE"""" = """"beos"""" ]; then
   mimeset -F $MOZILLA_BIN
 fi
 
-while [ $# -gt 0 ]
+pass_arg_count=0
+while [ $# -gt $pass_arg_count ]
 do
   case """"$1"""" in
     -p | -pure)
@@ -125,14 +125,16 @@ do
       shift 2
       ;;
     *)
-      moreargs=""""$moreargs \""""$1\""""""""
-      shift 1
+      # Move the unrecognized argument to the end of the list.
+      arg=""""$1""""
+      shift
+      set -- """"$@"""" """"$arg""""
+      pass_arg_count=`expr $pass_arg_count + 1`
       ;;
   esac
 done
 
 export MRE_HOME
-eval """"set -- $moreargs""""
 if [ $debugging = 1 ]
 then
   echo $dist_bin/run-mozilla.sh $script_args $dist_bin/$MOZILLA_BIN """"$@""""
diff --git a/mail/app/mozilla.in b/mail/app/mozilla.in
index 164ced3..90fa806 100644
--- a/mail/app/mozilla.in
+++ b/mail/app/mozilla.in
@@ -36,7 +36,7 @@
 #
 # ***** END LICENSE BLOCK *****
 
-## $Id: mozilla.in,v 1.5 2005-04-04 19:08:49 bsmedberg%covad.net Exp $
+## $Id: mozilla.in,v 1.6 2005-09-20 21:11:35 dbaron%dbaron.org Exp $
 ## 
 ## Usage:
 ##
@@ -136,7 +136,6 @@ if [ $found = 0 ]; then
 fi
 
 script_args=""""""""
-moreargs=""""""""
 debugging=0
 MOZILLA_BIN=""""${progbase}-bin""""
 
@@ -144,7 +143,8 @@ if [ """"$OSTYPE"""" = """"beos"""" ]; then
   mimeset -F """"$MOZILLA_BIN""""
 fi
 
-while [ $# -gt 0 ]
+pass_arg_count=0
+while [ $# -gt $pass_arg_count ]
 do
   case """"$1"""" in
     -p | --pure | -pure)
@@ -161,14 +161,16 @@ do
       shift 2
       ;;
     *)
-      moreargs=""""$moreargs \""""$1\""""""""
-      shift 1
+      # Move the unrecognized argument to the end of the list.
+      arg=""""$1""""
+      shift
+      set -- """"$@"""" """"$arg""""
+      pass_arg_count=`expr $pass_arg_count + 1`
       ;;
   esac
 done
 
 export MRE_HOME
-eval """"set -- $moreargs""""
 
 ## Start addon scripts
 moz_pis_startstop_scripts """"start""""
diff --git a/webshell/tests/viewer/mozilla-viewer.sh b/webshell/tests/viewer/mozilla-viewer.sh
index a3a1737..e69de29 100755
--- a/webshell/tests/viewer/mozilla-viewer.sh
+++ b/webshell/tests/viewer/mozilla-viewer.sh
@@ -1,91 +0,0 @@
-#!/bin/sh
-#
-# ***** BEGIN LICENSE BLOCK *****
-# Version: MPL 1.1/GPL 2.0/LGPL 2.1
-#
-# The contents of this file are subject to the Mozilla Public License Version
-# 1.1 (the """"License""""); you may not use this file except in compliance with
-# the License. You may obtain a copy of the License at
-# http://www.mozilla.org/MPL/
-#
-# Software distributed under the License is distributed on an """"AS IS"""" basis,
-# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
-# for the specific language governing rights and limitations under the
-# License.
-#
-# The Original Code is mozilla.org code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#
-# Alternatively, the contents of this file may be used under the terms of
-# either of the GNU General Public License Version 2 or later (the """"GPL""""),
-# or the GNU Lesser General Public License Version 2.1 or later (the """"LGPL""""),
-# in which case the provisions of the GPL or the LGPL are applicable instead
-# of those above. If you wish to allow use of your version of this file only
-# under the terms of either the GPL or the LGPL, and not to allow others to
-# use your version of this file under the terms of the MPL, indicate your
-# decision by deleting the provisions above and replace them with the notice
-# and other provisions required by the GPL or the LGPL. If you do not delete
-# the provisions above, a recipient may use your version of this file under
-# the terms of any one of the MPL, the GPL or the LGPL.
-#
-# ***** END LICENSE BLOCK *****
-
-## 
-## Usage:
-##
-## $ mozilla-viewer.sh [viewer args]
-##
-## This script is meant to run the gecko viewer from either 
-## mozilla/webshell/tests/viewer or mozilla/dist/bin.
-##
-## The script will setup all the environment voodoo needed to make
-## the viewer work.
-##
-
-dist_bin=`dirname $0`
-script_args=""""""""
-moreargs=""""""""
-MOZILLA_BIN=""""viewer""""
-pass_all_args=0
-
-while [ $# -gt 0 ]
-do
-  if [ $pass_all_args -ne 0 ]
-  then
-    moreargs=""""$moreargs \""""$1\""""""""
-    shift
-  else
-    case $1 in
-      -h | --help)
-        script_args=""""$script_args -h""""
-        shift
-        ;;
-      -g | --debug)
-        script_args=""""$script_args -g""""
-        shift
-        ;;
-      -d | --debugger)
-        script_args=""""$script_args -d $2""""
-        shift 2
-        ;;
-      --)
-        shift
-        pass_all_args=1
-        ;;
-      *)
-        moreargs=""""$moreargs \""""$1\""""""""
-        shift 1
-        ;;
-    esac
-  fi
-done
-
-eval """"set -- $moreargs""""
-echo $dist_bin/run-mozilla.sh $script_args $dist_bin/$MOZILLA_BIN """"$@""""
-$dist_bin/run-mozilla.sh $script_args $dist_bin/$MOZILLA_BIN """"$@""""
diff --git a/xpfe/bootstrap/mozilla.in b/xpfe/bootstrap/mozilla.in
index 1790ae6..41c5299 100755
--- a/xpfe/bootstrap/mozilla.in
+++ b/xpfe/bootstrap/mozilla.in
@@ -36,7 +36,7 @@
 #
 # ***** END LICENSE BLOCK *****
 
-## $Id: mozilla.in,v 1.8 2005-03-29 22:02:22 kairo%kairo.at Exp $
+## $Id: mozilla.in,v 1.9 2005-09-20 21:11:35 dbaron%dbaron.org Exp $
 ## 
 ## Usage:
 ##
@@ -140,7 +140,6 @@ else
 fi
 
 script_args=""""""""
-moreargs=""""""""
 debugging=0
 MOZILLA_BIN=""""%MOZILLA-BIN%""""
 
@@ -148,7 +147,8 @@ if [ """"$OSTYPE"""" = """"beos"""" ]; then
   mimeset -F $MOZILLA_BIN
 fi
 
-while [ $# -gt 0 ]
+pass_arg_count=0
+while [ $# -gt $pass_arg_count ]
 do
   case """"$1"""" in
     -p | -pure)
@@ -165,14 +165,16 @@ do
       shift 2
       ;;
     *)
-      moreargs=""""$moreargs \""""$1\""""""""
-      shift 1
+      # Move the unrecognized argument to the end of the list.
+      arg=""""$1""""
+      shift
+      set -- """"$@"""" """"$arg""""
+      pass_arg_count=`expr $pass_arg_count + 1`
       ;;
   esac
 done
 
 export MRE_HOME
-eval """"set -- $moreargs""""
 
 ## Start addon scripts
 moz_pis_startstop_scripts """"start""""
diff --git a/xulrunner/app/mozilla.in b/xulrunner/app/mozilla.in
index e8e5ce5..9cecf03 100755
--- a/xulrunner/app/mozilla.in
+++ b/xulrunner/app/mozilla.in
@@ -36,7 +36,7 @@
 #
 # ***** END LICENSE BLOCK *****
 
-## $Id: mozilla.in,v 1.2 2004-12-01 22:27:02 gerv%gerv.net Exp $
+## $Id: mozilla.in,v 1.3 2005-09-20 21:11:37 dbaron%dbaron.org Exp $
 ## 
 ## Usage:
 ##
@@ -137,7 +137,6 @@ if [ $found = 0 ]; then
 fi
 
 script_args=""""""""
-moreargs=""""""""
 debugging=0
 MOZILLA_BIN=""""${progbase}-bin""""
 MOZ_CLIENT_PROGRAM=""""$dist_bin/mozilla-xremote-client""""
@@ -243,7 +242,8 @@ fi
 # Default action - no running instance or _USE_EXIST (${_USE_EXIST}) ! -eq 1
 ########################################################################### Main
 
-while [ $# -gt 0 ]
+pass_arg_count=0
+while [ $# -gt $pass_arg_count ]
 do
   case """"$1"""" in
     -p | --pure | -pure)
@@ -260,14 +260,16 @@ do
       shift 2
       ;;
     *)
-      moreargs=""""$moreargs \""""$1\""""""""
-      shift 1
+      # Move the unrecognized argument to the end of the list.
+      arg=""""$1""""
+      shift
+      set -- """"$@"""" """"$arg""""
+      pass_arg_count=`expr $pass_arg_count + 1`
       ;;
   esac
 done
 
 export MRE_HOME
-eval """"set -- $moreargs""""
 
 ## Start addon scripts
 moz_pis_startstop_scripts """"start"""""""
a0d15a3adbc63ed1f5ec9f8c0b7ff603a56f2f97,133563,307259,dbaron%dbaron.org,"Additional precautions against potential buffer overruns.  b=307259  r=darin  sr=dveditz
",1126633100,"""diff --git a/netwerk/base/src/nsStandardURL.cpp b/netwerk/base/src/nsStandardURL.cpp
index fb286cb..fc01ab7c 100644
--- a/netwerk/base/src/nsStandardURL.cpp
+++ b/netwerk/base/src/nsStandardURL.cpp
@@ -170,8 +170,10 @@ PRInt32 nsStandardURL::
 nsSegmentEncoder::EncodeSegmentCount(const char *str,
                                      const URLSegment &seg,
                                      PRInt16 mask,
-                                     nsAFlatCString &result)
+                                     nsAFlatCString &result,
+                                     PRBool &appended)
 {
+    appended = PR_FALSE;
     if (!str)
         return 0;
     PRInt32 len = 0;
@@ -203,11 +205,14 @@ nsSegmentEncoder::EncodeSegmentCount(const char *str,
         PRUint32 initLen = result.Length();
 
         // now perform any required escaping
-        if (NS_EscapeURL(str + pos, len, mask | escapeFlags, result))
+        if (NS_EscapeURL(str + pos, len, mask | escapeFlags, result)) {
             len = result.Length() - initLen;
+            appended = PR_TRUE;
+        }
         else if (str == encBuf.get()) {
             result += encBuf; // append only!!
             len = encBuf.Length();
+            appended = PR_TRUE;
         }
     }
     return len;
@@ -219,13 +224,11 @@ nsSegmentEncoder::EncodeSegment(const nsASingleFragmentCString &str,
                                 nsAFlatCString &result)
 {
     const char *text;
-    PRUint32 resultLen = result.Length();
-    EncodeSegmentCount(str.BeginReading(text), URLSegment(0, str.Length()), mask, result);
-    // since EncodeSegmentCount appends to result, we must check whether its length grew
-    if (result.Length() > resultLen)
+    PRBool encoded;
+    EncodeSegmentCount(str.BeginReading(text), URLSegment(0, str.Length()), mask, result, encoded);
+    if (encoded)
         return result;
-    else
-        return str;
+    return str;
 }
 
 PRBool nsStandardURL::
@@ -395,14 +398,14 @@ nsStandardURL::NormalizeIDN(const nsCSubstring &host, nsCString &result)
         PRBool isACE;
         if (gIDN &&
             NS_SUCCEEDED(gIDN->IsACE(host, &isACE)) && isACE &&
-            NS_SUCCEEDED(ACEtoUTF8(host, result))) {
+            NS_SUCCEEDED(ACEtoDisplayIDN(host, result))) {
             mHostEncoding = eEncoding_UTF8;
             return PR_TRUE;
         }
     }
     else {
         mHostEncoding = eEncoding_UTF8;
-        if (gIDN && NS_SUCCEEDED(NormalizeUTF8(host, result))) {
+        if (gIDN && NS_SUCCEEDED(UTF8toDisplayIDN(host, result))) {
             // normalization could result in an ASCII only hostname
             if (IsASCII(result))
                 mHostEncoding = eEncoding_ASCII;
@@ -429,10 +432,10 @@ nsStandardURL::CoalescePath(netCoalesceFlags coalesceFlag, char *path)
 }
 
 PRUint32
-nsStandardURL::AppendSegmentToBuf(char *buf, PRUint32 i, const char *str, URLSegment &seg, const nsCString *escapedStr)
+nsStandardURL::AppendSegmentToBuf(char *buf, PRUint32 i, const char *str, URLSegment &seg, const nsCString *escapedStr, PRBool useEscaped)
 {
     if (seg.mLen > 0) {
-        if (escapedStr && !escapedStr->IsEmpty()) {
+        if (useEscaped) {
             seg.mLen = escapedStr->Length();
             memcpy(buf + i, escapedStr->get(), seg.mLen);
         }
@@ -464,16 +467,10 @@ nsStandardURL::BuildNormalizedSpec(const char *spec)
 
     // buffers for holding escaped url segments (these will remain empty unless
     // escaping is required).
-    nsCAutoString encUsername;
-    nsCAutoString encPassword;
-    nsCAutoString encHost;
-    PRBool useEncHost;
-    nsCAutoString encDirectory;
-    nsCAutoString encBasename;
-    nsCAutoString encExtension;
-    nsCAutoString encParam;
-    nsCAutoString encQuery;
-    nsCAutoString encRef;
+    nsCAutoString encUsername, encPassword, encHost, encDirectory,
+      encBasename, encExtension, encParam, encQuery, encRef;
+    PRBool useEncUsername, useEncPassword, useEncHost, useEncDirectory,
+      useEncBasename, useEncExtension, useEncParam, useEncQuery, useEncRef;
 
     //
     // escape each URL segment, if necessary, and calculate approximate normalized
@@ -490,14 +487,14 @@ nsStandardURL::BuildNormalizedSpec(const char *spec)
     // appropriate encoding.
     {
         GET_SEGMENT_ENCODER(encoder);
-        approxLen += encoder.EncodeSegmentCount(spec, mUsername,  esc_Username,      encUsername);
-        approxLen += encoder.EncodeSegmentCount(spec, mPassword,  esc_Password,      encPassword);
-        approxLen += encoder.EncodeSegmentCount(spec, mDirectory, esc_Directory,     encDirectory);
-        approxLen += encoder.EncodeSegmentCount(spec, mBasename,  esc_FileBaseName,  encBasename);
-        approxLen += encoder.EncodeSegmentCount(spec, mExtension, esc_FileExtension, encExtension);
-        approxLen += encoder.EncodeSegmentCount(spec, mParam,     esc_Param,         encParam);
-        approxLen += encoder.EncodeSegmentCount(spec, mQuery,     esc_Query,         encQuery);
-        approxLen += encoder.EncodeSegmentCount(spec, mRef,       esc_Ref,           encRef);
+        approxLen += encoder.EncodeSegmentCount(spec, mUsername,  esc_Username,      encUsername,  useEncUsername);
+        approxLen += encoder.EncodeSegmentCount(spec, mPassword,  esc_Password,      encPassword,  useEncPassword);
+        approxLen += encoder.EncodeSegmentCount(spec, mDirectory, esc_Directory,     encDirectory, useEncDirectory);
+        approxLen += encoder.EncodeSegmentCount(spec, mBasename,  esc_FileBaseName,  encBasename,  useEncBasename);
+        approxLen += encoder.EncodeSegmentCount(spec, mExtension, esc_FileExtension, encExtension, useEncExtension);
+        approxLen += encoder.EncodeSegmentCount(spec, mParam,     esc_Param,         encParam,     useEncParam);
+        approxLen += encoder.EncodeSegmentCount(spec, mQuery,     esc_Query,         encQuery,     useEncQuery);
+        approxLen += encoder.EncodeSegmentCount(spec, mRef,       esc_Ref,           encRef,       useEncRef);
     }
 
     // do not escape the hostname, if IPv6 address literal, mHost will
@@ -532,21 +529,15 @@ nsStandardURL::BuildNormalizedSpec(const char *spec)
 
     // append authority
     if (mUsername.mLen > 0) {
-        i = AppendSegmentToBuf(buf, i, spec, mUsername, &encUsername);
+        i = AppendSegmentToBuf(buf, i, spec, mUsername, &encUsername, useEncUsername);
         if (mPassword.mLen >= 0) {
             buf[i++] = ':';
-            i = AppendSegmentToBuf(buf, i, spec, mPassword, &encPassword);
+            i = AppendSegmentToBuf(buf, i, spec, mPassword, &encPassword, useEncPassword);
         }
         buf[i++] = '@';
     }
     if (mHost.mLen > 0) {
-        if (useEncHost) {
-            mHost.mPos = i;
-            mHost.mLen = encHost.Length();
-            i = AppendToBuf(buf, i, encHost.get(), mHost.mLen);
-        }
-        else
-            i = AppendSegmentToBuf(buf, i, spec, mHost);
+        i = AppendSegmentToBuf(buf, i, spec, mHost, &encHost, useEncHost);
         net_ToLowerCase(buf + mHost.mPos, mHost.mLen);
         if (mPort != -1 && mPort != mDefaultPort) {
             nsCAutoString portbuf;
@@ -580,7 +571,7 @@ nsStandardURL::BuildNormalizedSpec(const char *spec)
         // record corrected (file)path starting position
         mPath.mPos = mFilepath.mPos = i - leadingSlash;
 
-        i = AppendSegmentToBuf(buf, i, spec, mDirectory, &encDirectory);
+        i = AppendSegmentToBuf(buf, i, spec, mDirectory, &encDirectory, useEncDirectory);
 
         // the directory must end with a '/'
         if (buf[i-1] != '/') {
@@ -588,7 +579,7 @@ nsStandardURL::BuildNormalizedSpec(const char *spec)
             mDirectory.mLen++;
         }
 
-        i = AppendSegmentToBuf(buf, i, spec, mBasename, &encBasename);
+        i = AppendSegmentToBuf(buf, i, spec, mBasename, &encBasename, useEncBasename);
 
         // make corrections to directory segment if leadingSlash
         if (leadingSlash) {
@@ -601,22 +592,22 @@ nsStandardURL::BuildNormalizedSpec(const char *spec)
 
         if (mExtension.mLen >= 0) {
             buf[i++] = '.';
-            i = AppendSegmentToBuf(buf, i, spec, mExtension, &encExtension);
+            i = AppendSegmentToBuf(buf, i, spec, mExtension, &encExtension, useEncExtension);
         }
         // calculate corrected filepath length
         mFilepath.mLen = i - mFilepath.mPos;
 
         if (mParam.mLen >= 0) {
             buf[i++] = ';';
-            i = AppendSegmentToBuf(buf, i, spec, mParam, &encParam);
+            i = AppendSegmentToBuf(buf, i, spec, mParam, &encParam, useEncParam);
         }
         if (mQuery.mLen >= 0) {
             buf[i++] = '?';
-            i = AppendSegmentToBuf(buf, i, spec, mQuery, &encQuery);
+            i = AppendSegmentToBuf(buf, i, spec, mQuery, &encQuery, useEncQuery);
         }
         if (mRef.mLen >= 0) {
             buf[i++] = '#';
-            i = AppendSegmentToBuf(buf, i, spec, mRef, &encRef);
+            i = AppendSegmentToBuf(buf, i, spec, mRef, &encRef, useEncRef);
         }
         // calculate corrected path length
         mPath.mLen = i - mPath.mPos;
@@ -859,7 +850,7 @@ nsStandardURL::PrefsChanged(nsIPrefBranch *prefs, const char *pref)
 }
 
 /* static */ nsresult
-nsStandardURL::ACEtoUTF8(const nsCSubstring &host, nsCString &result)
+nsStandardURL::ACEtoDisplayIDN(const nsCSubstring &host, nsCString &result)
 {
     if (gShowPunycode || !IsInWhitelist(host)) {
         result = host;
@@ -870,7 +861,7 @@ nsStandardURL::ACEtoUTF8(const nsCSubstring &host, nsCString &result)
 }
 
 /* static */ nsresult
-nsStandardURL::NormalizeUTF8(const nsCSubstring &host, nsCString &result)
+nsStandardURL::UTF8toDisplayIDN(const nsCSubstring &host, nsCString &result)
 {
     if (gShowPunycode || !IsInWhitelist(host))
         return gIDN->ConvertUTF8toACE(host, result);
@@ -1221,18 +1212,20 @@ nsStandardURL::SetUserPass(const nsACString &input)
     nsCAutoString buf;
     if (usernameLen > 0) {
         GET_SEGMENT_ENCODER(encoder);
+        PRBool ignoredOut;
         usernameLen = encoder.EncodeSegmentCount(userpass.get(),
                                                  URLSegment(usernamePos,
                                                             usernameLen),
                                                  esc_Username | esc_AlwaysCopy,
-                                                 buf);
+                                                 buf, ignoredOut);
         if (passwordLen >= 0) {
             buf.Append(':');
             passwordLen = encoder.EncodeSegmentCount(userpass.get(),
                                                      URLSegment(passwordPos,
                                                                 passwordLen),
                                                      esc_Password |
-                                                     esc_AlwaysCopy, buf);
+                                                     esc_AlwaysCopy, buf,
+                                                     ignoredOut);
         }
         if (mUsername.mLen < 0)
             buf.Append('@');
@@ -2183,9 +2176,11 @@ nsStandardURL::SetQuery(const nsACString &input)
 
     // encode query if necessary
     nsCAutoString buf;
+    PRBool encoded;
     GET_SEGMENT_ENCODER(encoder);
-    encoder.EncodeSegmentCount(query, URLSegment(0, queryLen), esc_Query, buf);
-    if (!buf.IsEmpty()) {
+    encoder.EncodeSegmentCount(query, URLSegment(0, queryLen), esc_Query,
+                               buf, encoded);
+    if (encoded) {
         query = buf.get();
         queryLen = buf.Length();
     }
@@ -2241,9 +2236,11 @@ nsStandardURL::SetRef(const nsACString &input)
 
     // encode ref if necessary
     nsCAutoString buf;
+    PRBool encoded;
     GET_SEGMENT_ENCODER(encoder);
-    encoder.EncodeSegmentCount(ref, URLSegment(0, refLen), esc_Ref, buf);
-    if (!buf.IsEmpty()) {
+    encoder.EncodeSegmentCount(ref, URLSegment(0, refLen), esc_Ref,
+                               buf, encoded);
+    if (encoded) {
         ref = buf.get();
         refLen = buf.Length();
     }
@@ -2311,17 +2308,20 @@ nsStandardURL::SetFileName(const nsACString &input)
         }
         else {
             nsCAutoString newFilename;
+            PRBool ignoredOut;
             GET_SEGMENT_ENCODER(encoder);
             basename.mLen = encoder.EncodeSegmentCount(filename, basename,
                                                        esc_FileBaseName |
                                                        esc_AlwaysCopy,
-                                                       newFilename);
+                                                       newFilename,
+                                                       ignoredOut);
             if (extension.mLen >= 0) {
                 newFilename.Append('.');
                 extension.mLen = encoder.EncodeSegmentCount(filename, extension,
                                                             esc_FileExtension |
                                                             esc_AlwaysCopy,
-                                                            newFilename);
+                                                            newFilename,
+                                                            ignoredOut);
             }
 
             if (mBasename.mLen < 0) {
diff --git a/netwerk/base/src/nsStandardURL.h b/netwerk/base/src/nsStandardURL.h
index 6ab40f1..e13959e 100644
--- a/netwerk/base/src/nsStandardURL.h
+++ b/netwerk/base/src/nsStandardURL.h
@@ -124,7 +124,8 @@ public: /* internal -- HPUX compiler can't handle this being private */
         PRInt32 EncodeSegmentCount(const char *str,
                                    const URLSegment &segment,
                                    PRInt16 mask,
-                                   nsAFlatCString &buf);
+                                   nsAFlatCString &buf,
+                                   PRBool& appended);
          
         // Encode the given string if necessary, and return a reference to
         // the encoded string.  Returns a reference to |buf| if encoding
@@ -159,7 +160,7 @@ private:
     PRBool   NormalizeIDN(const nsCSubstring &host, nsCString &result);
     void     CoalescePath(netCoalesceFlags coalesceFlag, char *path);
 
-    PRUint32 AppendSegmentToBuf(char *, PRUint32, const char *, URLSegment &, const nsCString *esc=nsnull);
+    PRUint32 AppendSegmentToBuf(char *, PRUint32, const char *, URLSegment &, const nsCString *esc=nsnull, PRBool useEsc = PR_FALSE);
     PRUint32 AppendToBuf(char *, PRUint32, const char *, PRUint32);
 
     nsresult BuildNormalizedSpec(const char *spec);
@@ -219,8 +220,8 @@ private:
     static void PrefsChanged(nsIPrefBranch *prefs, const char *pref);
 
     // IDN routines
-    static nsresult ACEtoUTF8(const nsCSubstring &in, nsCString &out);
-    static nsresult NormalizeUTF8(const nsCSubstring &in, nsCString &out);
+    static nsresult ACEtoDisplayIDN(const nsCSubstring &in, nsCString &out);
+    static nsresult UTF8toDisplayIDN(const nsCSubstring &in, nsCString &out);
     static PRBool IsInWhitelist(const nsCSubstring &host);
 
     // mSpec contains the normalized version of the URL spec (UTF-8 encoded)."""
916742999dac0ff70523e7473726cdfe202c3e7e,133672,307259,dbaron%dbaron.org,"NormalizeIDN can (and should, I think) normalize to an empty string in some cases, so don't use AppendSegmentToBuf, which will do the wrong thing with an empty string and potentially overrun buffer.  b=307259  r=darin  sr=dveditz
",1126292818,"""diff --git a/netwerk/base/src/nsStandardURL.cpp b/netwerk/base/src/nsStandardURL.cpp
index d0d78c6..fb286cb 100644
--- a/netwerk/base/src/nsStandardURL.cpp
+++ b/netwerk/base/src/nsStandardURL.cpp
@@ -467,6 +467,7 @@ nsStandardURL::BuildNormalizedSpec(const char *spec)
     nsCAutoString encUsername;
     nsCAutoString encPassword;
     nsCAutoString encHost;
+    PRBool useEncHost;
     nsCAutoString encDirectory;
     nsCAutoString encBasename;
     nsCAutoString encExtension;
@@ -506,7 +507,7 @@ nsStandardURL::BuildNormalizedSpec(const char *spec)
     if (mHost.mLen > 0) {
         const nsCSubstring& tempHost =
             Substring(spec + mHost.mPos, spec + mHost.mPos + mHost.mLen);
-        if (NormalizeIDN(tempHost, encHost))
+        if ((useEncHost = NormalizeIDN(tempHost, encHost)))
             approxLen += encHost.Length();
         else
             approxLen += mHost.mLen;
@@ -539,7 +540,13 @@ nsStandardURL::BuildNormalizedSpec(const char *spec)
         buf[i++] = '@';
     }
     if (mHost.mLen > 0) {
-        i = AppendSegmentToBuf(buf, i, spec, mHost, &encHost);
+        if (useEncHost) {
+            mHost.mPos = i;
+            mHost.mLen = encHost.Length();
+            i = AppendToBuf(buf, i, encHost.get(), mHost.mLen);
+        }
+        else
+            i = AppendSegmentToBuf(buf, i, spec, mHost);
         net_ToLowerCase(buf + mHost.mPos, mHost.mLen);
         if (mPort != -1 && mPort != mDefaultPort) {
             nsCAutoString portbuf;"""
