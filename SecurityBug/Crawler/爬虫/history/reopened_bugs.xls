<?xml version="1.0"?>
<?mso-application progid="Excel.Sheet"?>
<Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet"
 xmlns:o="urn:schemas-microsoft-com:office:office"
 xmlns:x="urn:schemas-microsoft-com:office:excel"
 xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet"
 xmlns:html="http://www.w3.org/TR/REC-html40">
 <DocumentProperties xmlns="urn:schemas-microsoft-com:office:office">
  <LastAuthor>bingqi zhou</LastAuthor>
  <LastSaved>2015-11-23T06:30:32Z</LastSaved>
  <Version>15.00</Version>
 </DocumentProperties>
 <OfficeDocumentSettings xmlns="urn:schemas-microsoft-com:office:office">
  <AllowPNG/>
 </OfficeDocumentSettings>
 <ExcelWorkbook xmlns="urn:schemas-microsoft-com:office:excel">
  <WindowHeight>4635</WindowHeight>
  <WindowWidth>15345</WindowWidth>
  <WindowTopX>0</WindowTopX>
  <WindowTopY>0</WindowTopY>
  <ActiveSheet>2</ActiveSheet>
  <ProtectStructure>False</ProtectStructure>
  <ProtectWindows>False</ProtectWindows>
 </ExcelWorkbook>
 <Styles>
  <Style ss:ID="Default" ss:Name="Normal">
   <Alignment ss:Vertical="Center"/>
   <Borders/>
   <Font ss:FontName="宋体" x:CharSet="134" ss:Size="11" ss:Color="#000000"/>
   <Interior/>
   <NumberFormat/>
   <Protection/>
  </Style>
  <Style ss:ID="s62">
   <Font ss:FontName="宋体" x:CharSet="134" ss:Size="11" ss:Color="#FF0000"/>
  </Style>
  <Style ss:ID="s65">
   <Alignment ss:Vertical="Center" ss:WrapText="1"/>
  </Style>
  <Style ss:ID="s66">
   <Alignment ss:Vertical="Center" ss:WrapText="1"/>
   <Font ss:FontName="宋体" x:CharSet="134" ss:Size="11" ss:Color="#FF0000"/>
  </Style>
  <Style ss:ID="s68">
   <Alignment ss:Vertical="Center" ss:WrapText="1"/>
   <Font ss:FontName="宋体" x:CharSet="134" ss:Size="11"/>
  </Style>
  <Style ss:ID="s69">
   <Alignment ss:Vertical="Center" ss:WrapText="1"/>
   <Font ss:FontName="宋体" x:CharSet="134" ss:Size="11" ss:Color="#FFC000"/>
  </Style>
  <Style ss:ID="s71">
   <Alignment ss:Vertical="Center" ss:WrapText="1"/>
   <Font ss:FontName="宋体" x:CharSet="134" ss:Size="11" ss:Color="#92D050"/>
  </Style>
  <Style ss:ID="s73">
   <Alignment ss:Horizontal="Left" ss:Vertical="Top"/>
  </Style>
  <Style ss:ID="s74">
   <Font ss:FontName="宋体" x:CharSet="134" ss:Size="11" ss:Color="#FFC000"/>
  </Style>
 </Styles>
 <Worksheet ss:Name="Table1">
  <Table ss:ExpandedColumnCount="9" ss:ExpandedRowCount="86" x:FullColumns="1"
   x:FullRows="1" ss:DefaultColumnWidth="54" ss:DefaultRowHeight="13.5">
   <Column ss:Index="2" ss:AutoFitWidth="0" ss:Width="110.25" ss:Span="1"/>
   <Column ss:Index="6" ss:AutoFitWidth="0" ss:Width="73.5"/>
   <Column ss:AutoFitWidth="0" ss:Width="95.25"/>
   <Column ss:AutoFitWidth="0" ss:Width="109.5"/>
   <Column ss:AutoFitWidth="0" ss:Width="118.5"/>
   <Row>
    <Cell><Data ss:Type="String">id</Data></Cell>
    <Cell><Data ss:Type="String">bug_id</Data></Cell>
    <Cell><Data ss:Type="String">time</Data></Cell>
    <Cell ss:Index="6"><Data ss:Type="String">total_bugs</Data></Cell>
    <Cell><Data ss:Type="String">reopened once</Data></Cell>
    <Cell><Data ss:Type="String">reopened twice</Data></Cell>
    <Cell><Data ss:Type="String">reopened three times</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">1</Data></Cell>
    <Cell><Data ss:Type="String">624621</Data></Cell>
    <Cell><Data ss:Type="String">2011-12-16 08:06:31</Data></Cell>
    <Cell ss:Index="6"><Data ss:Type="Number">68</Data></Cell>
    <Cell><Data ss:Type="Number">53</Data></Cell>
    <Cell><Data ss:Type="Number">13</Data></Cell>
    <Cell><Data ss:Type="Number">2</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">2</Data></Cell>
    <Cell><Data ss:Type="String">633691</Data></Cell>
    <Cell><Data ss:Type="String">2011-09-22 20:21:42</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">3</Data></Cell>
    <Cell><Data ss:Type="String">684882</Data></Cell>
    <Cell><Data ss:Type="String">2011-09-10 16:45:16</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">4</Data></Cell>
    <Cell><Data ss:Type="String">684882</Data></Cell>
    <Cell><Data ss:Type="String">2011-09-27 15:33:24</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">5</Data></Cell>
    <Cell><Data ss:Type="String">680840</Data></Cell>
    <Cell><Data ss:Type="String">2011-09-09 15:40:57</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">6</Data></Cell>
    <Cell><Data ss:Type="String">657201</Data></Cell>
    <Cell><Data ss:Type="String">2011-05-16 08:52:32</Data></Cell>
    <Cell ss:Index="6"><Data ss:Type="String">with commit info</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">7</Data></Cell>
    <Cell><Data ss:Type="String">672485</Data></Cell>
    <Cell><Data ss:Type="String">2011-08-11 00:41:36</Data></Cell>
    <Cell ss:Index="6"><Data ss:Type="Number">54</Data></Cell>
    <Cell><Data ss:Type="Number">42</Data></Cell>
    <Cell><Data ss:Type="Number">11</Data></Cell>
    <Cell><Data ss:Type="Number">1</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">8</Data></Cell>
    <Cell><Data ss:Type="String">575294</Data></Cell>
    <Cell><Data ss:Type="String">2012-06-03 09:11:53</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">9</Data></Cell>
    <Cell><Data ss:Type="String">579593</Data></Cell>
    <Cell><Data ss:Type="String">2010-07-19 17:18:38</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">10</Data></Cell>
    <Cell><Data ss:Type="String">579593</Data></Cell>
    <Cell><Data ss:Type="String">2010-08-09 12:58:55</Data></Cell>
    <Cell ss:Index="6"><Data ss:Type="String">commit with code modified</Data></Cell>
    <Cell ss:Index="8"><Data ss:Type="String">commit without code modified</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">11</Data></Cell>
    <Cell><Data ss:Type="String">541530</Data></Cell>
    <Cell><Data ss:Type="String">2010-03-05 00:04:03</Data></Cell>
    <Cell ss:Index="6"><Data ss:Type="String">1.bug还未修复完全  继续修复</Data></Cell>
    <Cell ss:Index="8"><Data ss:Type="String">1.bug已经被其他人解决,重开检查或确认功能</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">12</Data></Cell>
    <Cell><Data ss:Type="String">531364</Data></Cell>
    <Cell><Data ss:Type="String">2009-12-23 06:51:04</Data></Cell>
    <Cell ss:Index="6"><Data ss:Type="String">2.前面修复没解决问题，重新修复</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">13</Data></Cell>
    <Cell><Data ss:Type="String">522430</Data></Cell>
    <Cell><Data ss:Type="String">2010-03-22 18:15:46</Data></Cell>
    <Cell ss:Index="6"><Data ss:Type="String">3.添加一些补丁</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">14</Data></Cell>
    <Cell><Data ss:Type="String">354592</Data></Cell>
    <Cell><Data ss:Type="String">2006-10-02 17:48:39</Data></Cell>
    <Cell ss:Index="6"><Data ss:Type="String">4.去除一些不必要的方法，加上一些方法</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">15</Data></Cell>
    <Cell><Data ss:Type="String">379959</Data></Cell>
    <Cell><Data ss:Type="String">2007-12-18 17:20:36</Data></Cell>
    <Cell ss:Index="6"><Data ss:Type="String">4.sanity checking</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">16</Data></Cell>
    <Cell><Data ss:Type="String">329385</Data></Cell>
    <Cell><Data ss:Type="String">2008-02-08 01:59:06</Data></Cell>
    <Cell ss:Index="6"><Data ss:Type="String">5.在前面的优化中引入了问题，修复这些问题</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">17</Data></Cell>
    <Cell><Data ss:Type="String">329385</Data></Cell>
    <Cell><Data ss:Type="String">2008-03-19 08:12:12</Data></Cell>
    <Cell ss:Index="6" ss:StyleID="s73"><Data ss:Type="String">6.Tighten rules about what JS files content can load</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">18</Data></Cell>
    <Cell><Data ss:Type="String">360529</Data></Cell>
    <Cell><Data ss:Type="String">2008-03-03 16:41:57</Data></Cell>
    <Cell ss:Index="6"><Data ss:Type="String">7.重定向做好安全检查</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">19</Data></Cell>
    <Cell><Data ss:Type="String">370092</Data></Cell>
    <Cell><Data ss:Type="String">2007-02-11 15:51:29</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">20</Data></Cell>
    <Cell><Data ss:Type="String">389580</Data></Cell>
    <Cell><Data ss:Type="String">2007-07-25 15:54:04</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">21</Data></Cell>
    <Cell><Data ss:Type="String">370127</Data></Cell>
    <Cell><Data ss:Type="String">2007-05-23 17:47:12</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">22</Data></Cell>
    <Cell><Data ss:Type="String">382686</Data></Cell>
    <Cell><Data ss:Type="String">2007-06-01 00:50:48</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">23</Data></Cell>
    <Cell><Data ss:Type="String">351236</Data></Cell>
    <Cell><Data ss:Type="String">2007-03-30 10:25:09</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">24</Data></Cell>
    <Cell><Data ss:Type="String">351236</Data></Cell>
    <Cell><Data ss:Type="String">2007-05-28 06:16:45</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">25</Data></Cell>
    <Cell><Data ss:Type="String">389106</Data></Cell>
    <Cell><Data ss:Type="String">2007-07-23 11:04:54</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">26</Data></Cell>
    <Cell><Data ss:Type="String">380856</Data></Cell>
    <Cell><Data ss:Type="String">2007-05-28 21:28:44</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">27</Data></Cell>
    <Cell><Data ss:Type="String">354973</Data></Cell>
    <Cell><Data ss:Type="String">2007-01-12 23:10:06</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">28</Data></Cell>
    <Cell><Data ss:Type="String">367119</Data></Cell>
    <Cell><Data ss:Type="String">2007-01-27 23:30:10</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">29</Data></Cell>
    <Cell><Data ss:Type="String">366123</Data></Cell>
    <Cell><Data ss:Type="String">2007-01-29 09:03:23</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">30</Data></Cell>
    <Cell><Data ss:Type="String">362213</Data></Cell>
    <Cell><Data ss:Type="String">2006-12-04 08:22:35</Data></Cell>
    <Cell ss:Index="6"><Data ss:Type="String">备注：黑色表示reopen前的commit，若后面出现红色，则提交人员和黑色为同一人；</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">31</Data></Cell>
    <Cell><Data ss:Type="String">362213</Data></Cell>
    <Cell><Data ss:Type="String">2008-04-18 01:52:46</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">32</Data></Cell>
    <Cell><Data ss:Type="String">361964</Data></Cell>
    <Cell><Data ss:Type="String">2006-12-02 01:00:29</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">33</Data></Cell>
    <Cell><Data ss:Type="String">349527</Data></Cell>
    <Cell><Data ss:Type="String">2006-08-28 00:50:21</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">34</Data></Cell>
    <Cell><Data ss:Type="String">350238</Data></Cell>
    <Cell><Data ss:Type="String">2006-09-06 17:32:54</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">35</Data></Cell>
    <Cell><Data ss:Type="String">339170</Data></Cell>
    <Cell><Data ss:Type="String">2006-07-29 20:52:52</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">36</Data></Cell>
    <Cell><Data ss:Type="String">348532</Data></Cell>
    <Cell><Data ss:Type="String">2006-08-14 00:23:44</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">37</Data></Cell>
    <Cell><Data ss:Type="String">350312</Data></Cell>
    <Cell><Data ss:Type="String">2006-08-27 23:41:07</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">38</Data></Cell>
    <Cell><Data ss:Type="String">331679</Data></Cell>
    <Cell><Data ss:Type="String">2006-04-22 04:05:04</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">39</Data></Cell>
    <Cell><Data ss:Type="String">324117</Data></Cell>
    <Cell><Data ss:Type="String">2006-04-03 06:46:39</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">40</Data></Cell>
    <Cell><Data ss:Type="String">340129</Data></Cell>
    <Cell><Data ss:Type="String">2006-06-13 16:09:16</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">41</Data></Cell>
    <Cell><Data ss:Type="String">341877</Data></Cell>
    <Cell><Data ss:Type="String">2006-06-18 06:02:28</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">42</Data></Cell>
    <Cell><Data ss:Type="String">341877</Data></Cell>
    <Cell><Data ss:Type="String">2006-06-19 17:13:21</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">43</Data></Cell>
    <Cell><Data ss:Type="String">336409</Data></Cell>
    <Cell><Data ss:Type="String">2006-06-27 13:12:39</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">44</Data></Cell>
    <Cell><Data ss:Type="String">336409</Data></Cell>
    <Cell><Data ss:Type="String">2006-07-07 22:03:24</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">45</Data></Cell>
    <Cell><Data ss:Type="String">337389</Data></Cell>
    <Cell><Data ss:Type="String">2006-06-07 02:21:12</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">46</Data></Cell>
    <Cell><Data ss:Type="String">338121</Data></Cell>
    <Cell><Data ss:Type="String">2006-06-12 11:31:41</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">47</Data></Cell>
    <Cell><Data ss:Type="String">338121</Data></Cell>
    <Cell><Data ss:Type="String">2007-05-04 22:46:24</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">48</Data></Cell>
    <Cell><Data ss:Type="String">320982</Data></Cell>
    <Cell><Data ss:Type="String">2006-04-22 23:58:28</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">49</Data></Cell>
    <Cell><Data ss:Type="String">336410</Data></Cell>
    <Cell><Data ss:Type="String">2006-06-27 07:37:36</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">50</Data></Cell>
    <Cell><Data ss:Type="String">336410</Data></Cell>
    <Cell><Data ss:Type="String">2006-07-07 22:43:01</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">51</Data></Cell>
    <Cell><Data ss:Type="String">342507</Data></Cell>
    <Cell><Data ss:Type="String">2006-06-24 00:07:15</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">52</Data></Cell>
    <Cell><Data ss:Type="String">342507</Data></Cell>
    <Cell><Data ss:Type="String">2006-06-24 22:44:13</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">53</Data></Cell>
    <Cell><Data ss:Type="String">324918</Data></Cell>
    <Cell><Data ss:Type="String">2006-03-01 16:44:34</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">54</Data></Cell>
    <Cell><Data ss:Type="String">328937</Data></Cell>
    <Cell><Data ss:Type="String">2006-03-02 10:22:39</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">55</Data></Cell>
    <Cell><Data ss:Type="String">326615</Data></Cell>
    <Cell><Data ss:Type="String">2006-03-06 13:24:28</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">56</Data></Cell>
    <Cell><Data ss:Type="String">327941</Data></Cell>
    <Cell><Data ss:Type="String">2006-02-20 15:03:42</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">57</Data></Cell>
    <Cell><Data ss:Type="String">313373</Data></Cell>
    <Cell><Data ss:Type="String">2005-10-25 12:57:20</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">58</Data></Cell>
    <Cell><Data ss:Type="String">311497</Data></Cell>
    <Cell><Data ss:Type="String">2005-10-09 05:18:41</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">59</Data></Cell>
    <Cell><Data ss:Type="String">311497</Data></Cell>
    <Cell><Data ss:Type="String">2005-10-13 02:53:07</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">60</Data></Cell>
    <Cell><Data ss:Type="String">311792</Data></Cell>
    <Cell><Data ss:Type="String">2005-10-11 15:10:20</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">61</Data></Cell>
    <Cell><Data ss:Type="String">313276</Data></Cell>
    <Cell><Data ss:Type="String">2005-10-24 00:09:36</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">62</Data></Cell>
    <Cell><Data ss:Type="String">312278</Data></Cell>
    <Cell><Data ss:Type="String">2005-10-20 23:07:16</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">63</Data></Cell>
    <Cell><Data ss:Type="String">312278</Data></Cell>
    <Cell><Data ss:Type="String">2005-10-23 23:49:54</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">64</Data></Cell>
    <Cell><Data ss:Type="String">325269</Data></Cell>
    <Cell><Data ss:Type="String">2006-02-02 03:12:05</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">65</Data></Cell>
    <Cell><Data ss:Type="String">406541</Data></Cell>
    <Cell><Data ss:Type="String">2012-07-03 11:54:20</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">66</Data></Cell>
    <Cell><Data ss:Type="String">480509</Data></Cell>
    <Cell><Data ss:Type="String">2009-03-18 13:53:13</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">67</Data></Cell>
    <Cell><Data ss:Type="String">480509</Data></Cell>
    <Cell><Data ss:Type="String">2009-04-11 13:00:37</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">68</Data></Cell>
    <Cell><Data ss:Type="String">480509</Data></Cell>
    <Cell><Data ss:Type="String">2009-04-11 22:37:56</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">69</Data></Cell>
    <Cell><Data ss:Type="String">319872</Data></Cell>
    <Cell><Data ss:Type="String">2006-01-13 01:32:44</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">70</Data></Cell>
    <Cell><Data ss:Type="String">319847</Data></Cell>
    <Cell><Data ss:Type="String">2005-12-15 10:03:36</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">71</Data></Cell>
    <Cell><Data ss:Type="String">479880</Data></Cell>
    <Cell><Data ss:Type="String">2009-05-12 16:56:46</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">72</Data></Cell>
    <Cell><Data ss:Type="String">484031</Data></Cell>
    <Cell><Data ss:Type="String">2009-03-30 15:05:08</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">73</Data></Cell>
    <Cell><Data ss:Type="String">474536</Data></Cell>
    <Cell><Data ss:Type="String">2009-02-19 12:40:11</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">74</Data></Cell>
    <Cell><Data ss:Type="String">474536</Data></Cell>
    <Cell><Data ss:Type="String">2009-03-18 11:55:14</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">75</Data></Cell>
    <Cell><Data ss:Type="String">474536</Data></Cell>
    <Cell><Data ss:Type="String">2009-04-02 14:44:34</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">76</Data></Cell>
    <Cell><Data ss:Type="String">478901</Data></Cell>
    <Cell><Data ss:Type="String">2009-02-28 04:39:52</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">77</Data></Cell>
    <Cell><Data ss:Type="String">452979</Data></Cell>
    <Cell><Data ss:Type="String">2008-11-12 15:06:04</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">78</Data></Cell>
    <Cell><Data ss:Type="String">452979</Data></Cell>
    <Cell><Data ss:Type="String">2008-11-17 08:35:40</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">79</Data></Cell>
    <Cell><Data ss:Type="String">460425</Data></Cell>
    <Cell><Data ss:Type="String">2008-10-17 06:37:19</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">80</Data></Cell>
    <Cell><Data ss:Type="String">441751</Data></Cell>
    <Cell><Data ss:Type="String">2008-12-08 21:05:13</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">81</Data></Cell>
    <Cell><Data ss:Type="String">419848</Data></Cell>
    <Cell><Data ss:Type="String">2008-03-03 21:41:04</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">82</Data></Cell>
    <Cell><Data ss:Type="String">441169</Data></Cell>
    <Cell><Data ss:Type="String">2008-06-30 23:11:17</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">83</Data></Cell>
    <Cell><Data ss:Type="String">410156</Data></Cell>
    <Cell><Data ss:Type="String">2008-04-17 16:07:09</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">84</Data></Cell>
    <Cell><Data ss:Type="String">418356</Data></Cell>
    <Cell><Data ss:Type="String">2008-03-18 21:50:48</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">85</Data></Cell>
    <Cell><Data ss:Type="String">413250</Data></Cell>
    <Cell><Data ss:Type="String">2008-01-30 22:58:08</Data></Cell>
   </Row>
  </Table>
  <WorksheetOptions xmlns="urn:schemas-microsoft-com:office:excel">
   <TopRowVisible>6</TopRowVisible>
   <Panes>
    <Pane>
     <Number>3</Number>
     <ActiveRow>19</ActiveRow>
     <ActiveCol>5</ActiveCol>
    </Pane>
   </Panes>
   <ProtectObjects>False</ProtectObjects>
   <ProtectScenarios>False</ProtectScenarios>
  </WorksheetOptions>
 </Worksheet>
 <Worksheet ss:Name="no code modification">
  <Table ss:ExpandedColumnCount="4" ss:ExpandedRowCount="2" x:FullColumns="1"
   x:FullRows="1" ss:DefaultColumnWidth="54" ss:DefaultRowHeight="13.5">
   <Column ss:Index="2" ss:AutoFitWidth="0" ss:Width="148.5"/>
   <Row>
    <Cell><Data ss:Type="Number">311497</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">2005-10-09 14:09:21   Fix 310425 (r=mrbkap) and check in Igor's fix for 311497 (r=me).</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">2005-10-15 06:31:50  Fix from igor.bukanov@gmail.com for old bug in argv provisioning/scanning (311497, r=me).</Data></Cell>
    <Cell><Data ss:Type="String">2006-06-15 07:48:08   JavaScript Test Library - regression test for bug 311497, by Igor Bukanov, a=bsmedberg for checkin to closed tree</Data></Cell>
   </Row>
   <Row>
    <Cell><Data ss:Type="Number">311792</Data></Cell>
    <Cell ss:StyleID="s62"><Data ss:Type="String">2005-10-11 07:33:16     Make sure that temporary values are protected from GC. Patch from Igor Bukanov &lt;igor.bukanov@gmail.com&gt;. r=mrbkap/brendan</Data></Cell>
    <Cell><Data ss:Type="String">2006-06-15 07:51:15  JavaScript Test Library - regression test for bug 311792, by Igor Bukanov, a=bsmedberg for checkin to closed tree</Data></Cell>
   </Row>
  </Table>
  <WorksheetOptions xmlns="urn:schemas-microsoft-com:office:excel">
   <PageSetup>
    <Header x:Margin="0.3"/>
    <Footer x:Margin="0.3"/>
    <PageMargins x:Bottom="0.75" x:Left="0.7" x:Right="0.7" x:Top="0.75"/>
   </PageSetup>
   <Print>
    <ValidPrinterInfo/>
    <PaperSizeIndex>9</PaperSizeIndex>
    <HorizontalResolution>600</HorizontalResolution>
    <VerticalResolution>600</VerticalResolution>
   </Print>
   <Panes>
    <Pane>
     <Number>3</Number>
     <ActiveRow>4</ActiveRow>
     <ActiveCol>1</ActiveCol>
    </Pane>
   </Panes>
   <ProtectObjects>False</ProtectObjects>
   <ProtectScenarios>False</ProtectScenarios>
  </WorksheetOptions>
 </Worksheet>
 <Worksheet ss:Name="code modification">
  <Table ss:ExpandedColumnCount="7" ss:ExpandedRowCount="50" x:FullColumns="1"
   x:FullRows="1" ss:DefaultColumnWidth="54" ss:DefaultRowHeight="13.5">
   <Column ss:Index="2" ss:AutoFitWidth="0" ss:Width="281.25"/>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">312278</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">2005-10-20 07:32:37   bug 312278: Make sure to root things if they can be collected before their use. r=brendan&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsexn.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 7748f0e..266a3a2 100644&#10;@@ -1,4 +1,5 @@&#10; /* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-&#10;+ * vim: set ts=8 sw=4 et tw=80:&#10;  *&#10;  * ***** BEGIN LICENSE BLOCK *****&#10;  * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;@@ -659,6 +660,7 @@ exn_toString(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)&#10;         return JS_FALSE;&#10;     }&#10;     name = JSVAL_IS_STRING(v) ? JSVAL_TO_STRING(v) : cx-&gt;runtime-&gt;emptyString;&#10;+    *rval = STRING_TO_JSVAL(name);&#10; &#10;     if (!JS_GetProperty(cx, obj, js_message_str, &amp;v))&#10;         return JS_FALSE;&#10;@@ -716,16 +718,19 @@ exn_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)&#10;     name = js_ValueToString(cx, v);&#10;     if (!name)&#10;         return JS_FALSE;&#10;+    *rval = STRING_TO_JSVAL(name);&#10; &#10;     if (!JS_GetProperty(cx, obj, js_message_str, &amp;v) ||&#10;         !(message = js_ValueToSource(cx, v))) {&#10;         return JS_FALSE;&#10;     }&#10;+    argv[argc] = STRING_TO_JSVAL(message);&#10; &#10;     if (!JS_GetProperty(cx, obj, js_filename_str, &amp;v) ||&#10;         !(filename = js_ValueToSource(cx, v))) {&#10;         return JS_FALSE;&#10;     }&#10;+    argv[argc + 1] = STRING_TO_JSVAL(filename);&#10; &#10;     if (!JS_GetProperty(cx, obj, js_lineno_str, &amp;v) ||&#10;         !js_ValueToECMAUint32 (cx, v, &amp;lineno)) {&#10;@@ -813,7 +818,7 @@ exn_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)&#10; &#10; static JSFunctionSpec exception_methods[] = {&#10; #if JS_HAS_TOSOURCE&#10;-    {js_toSource_str,   exn_toSource,           0,0,0},&#10;+    {js_toSource_str,   exn_toSource,           0,0,2},&#10; #endif&#10;     {js_toString_str,   exn_toString,           0,0,0},&#10;     {0,0,0,0,0}</Data></Cell>
    <Cell ss:StyleID="s69"><Data ss:Type="String">2005-10-21 02:58:24    Use local roots effectively (312278, r=igor).&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsarray.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 3b6a39b..1a0c233 100644&#10;@@ -363,7 +363,6 @@ array_join_sub(JSContext *cx, JSObject *obj, JSString *sep, JSBool literalize,&#10;                jsval *rval, JSBool localeString)&#10; {&#10;     JSBool ok;&#10;-    jsval v;&#10;     jsuint length, index;&#10;     jschar *chars, *ochars;&#10;     size_t nchars, growth, seplen, tmplen;&#10;@@ -444,6 +443,9 @@ array_join_sub(JSContext *cx, JSObject *obj, JSString *sep, JSBool literalize,&#10;     sepstr = NULL;&#10;     seplen = JSSTRING_LENGTH(sep);&#10; &#10;+    /* Use rval to locally root each element value as we loop and convert. */&#10;+#define v (*rval)&#10;+&#10;     v = JSVAL_NULL;&#10;     for (index = 0; index &lt; length; index++) {&#10;         ok = JS_GetElement(cx, obj, index, &amp;v);&#10;@@ -518,6 +520,8 @@ array_join_sub(JSContext *cx, JSObject *obj, JSString *sep, JSBool literalize,&#10;         return ok;&#10;     }&#10; &#10;+#undef v&#10;+&#10;   make_string:&#10;     if (!chars) {&#10;         JS_ReportOutOfMemory(cx);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 1d131ef..1fa9cdc 100644&#10;@@ -628,7 +628,7 @@ js_LeaveSharpObject(JSContext *cx, JSIdArray **idap)&#10;     }&#10; }&#10; &#10;-#define OBJ_TOSTRING_EXTRA      3       /* for 3 local GC roots */&#10;+#define OBJ_TOSTRING_EXTRA      4       /* for 4 local GC roots */&#10; &#10; #if JS_HAS_INITIALIZERS || JS_HAS_TOSOURCE&#10; JSBool&#10;@@ -649,7 +649,7 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;     JSProperty *prop;&#10;     uintN attrs;&#10; #endif&#10;-    jsval val[2];&#10;+    jsval *val;&#10;     JSString *gsop[2];&#10;     JSAtom *atom;&#10;     JSString *idstr, *valstr, *str;&#10;@@ -759,6 +759,13 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10; &#10;     comma = NULL;&#10; &#10;+    /*&#10;+     * We have four local roots for cooked and raw value GC safety.  Hoist the&#10;+     * &quot;argv + 2&quot; out of the loop using the val local, which refers to the raw&#10;+     * (unconverted, &quot;uncooked&quot;) values.&#10;+     */&#10;+    val = argv + 2;&#10;+&#10;     for (i = 0, length = ida-&gt;length; i &lt; length; i++) {&#10;         /* Get strings for id and value and GC-root them via argv. */&#10;         id = ida-&gt;vector[i];&#10;@@ -826,7 +833,7 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;             ok = JS_FALSE;&#10;             goto error;&#10;         }&#10;-        argv[0] = STRING_TO_JSVAL(idstr);&#10;+        *rval = STRING_TO_JSVAL(idstr);         /* local root */&#10; &#10;         /*&#10;          * If id is a string that's a reserved identifier, or else id is not&#10;@@ -841,7 +848,7 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;                 ok = JS_FALSE;&#10;                 goto error;&#10;             }&#10;-            argv[0] = STRING_TO_JSVAL(idstr);&#10;+            *rval = STRING_TO_JSVAL(idstr);     /* local root */&#10;         }&#10;         idstrchars = JSSTRING_CHARS(idstr);&#10;         idstrlength = JSSTRING_LENGTH(idstr);&#10;@@ -853,7 +860,7 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;                 ok = JS_FALSE;&#10;                 goto error;&#10;             }&#10;-            argv[1+j] = STRING_TO_JSVAL(valstr);&#10;+            argv[j] = STRING_TO_JSVAL(valstr);  /* local root */&#10;             vchars = JSSTRING_CHARS(valstr);&#10;             vlength = JSSTRING_LENGTH(valstr);</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">2005-10-21 08:26:56   bug 312278: Protect some objects from getting GC'd before we could root them. r=brendan&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsexn.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 266a3a2..6cb393c 100644&#10;@@ -985,6 +985,11 @@ js_ErrorToException(JSContext *cx, const char *message, JSErrorReport *reportp)&#10;         return JS_FALSE;&#10;     cx-&gt;creatingException = JS_TRUE;&#10; &#10;+    /* Protect the newly-created strings below from nesting GCs. */&#10;+    ok = js_EnterLocalRootScope(cx);&#10;+    if (!ok)&#10;+        goto out;&#10;+&#10;     /*&#10;      * Try to get an appropriate prototype by looking up the corresponding&#10;      * exception constructor name in the scope chain of the current context's&#10;@@ -1047,6 +1052,7 @@ js_ErrorToException(JSContext *cx, const char *message, JSErrorReport *reportp)&#10;     reportp-&gt;flags |= JSREPORT_EXCEPTION;&#10; &#10; out:&#10;+    js_LeaveLocalRootScope(cx);&#10;     cx-&gt;creatingException = JS_FALSE;&#10;     return ok;&#10; }&#10;</Data></Cell>
    <Cell ss:StyleID="s69"><Data ss:Type="String">2005-10-23 12:59:50    Better local GC rooting (312278, r/sr=igor/shaver).&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsexn.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 6cb393c..7e7af43 100644&#10;@@ -704,43 +704,45 @@ exn_toString(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)&#10; static JSBool&#10; exn_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)&#10; {&#10;-    jsval v;&#10;+    jsval *vp;&#10;     JSString *name, *message, *filename, *lineno_as_str, *result;&#10;     uint32 lineno;&#10;     size_t lineno_length, name_length, message_length, filename_length, length;&#10;     jschar *chars, *cp;&#10; &#10;+    vp = argv + argc;   /* beginning of explicit local roots */&#10;+&#10;     if (!OBJ_GET_PROPERTY(cx, obj,&#10;                           ATOM_TO_JSID(cx-&gt;runtime-&gt;atomState.nameAtom),&#10;-                          &amp;v)) {&#10;+                          rval)) {&#10;         return JS_FALSE;&#10;     }&#10;-    name = js_ValueToString(cx, v);&#10;+    name = js_ValueToString(cx, *rval);&#10;     if (!name)&#10;         return JS_FALSE;&#10;     *rval = STRING_TO_JSVAL(name);&#10; &#10;-    if (!JS_GetProperty(cx, obj, js_message_str, &amp;v) ||&#10;-        !(message = js_ValueToSource(cx, v))) {&#10;+    if (!JS_GetProperty(cx, obj, js_message_str, &amp;vp[0]) ||&#10;+        !(message = js_ValueToSource(cx, vp[0]))) {&#10;         return JS_FALSE;&#10;     }&#10;-    argv[argc] = STRING_TO_JSVAL(message);&#10;+    vp[0] = STRING_TO_JSVAL(message);&#10; &#10;-    if (!JS_GetProperty(cx, obj, js_filename_str, &amp;v) ||&#10;-        !(filename = js_ValueToSource(cx, v))) {&#10;+    if (!JS_GetProperty(cx, obj, js_filename_str, &amp;vp[1]) ||&#10;+        !(filename = js_ValueToSource(cx, vp[1]))) {&#10;         return JS_FALSE;&#10;     }&#10;-    argv[argc + 1] = STRING_TO_JSVAL(filename);&#10;+    vp[1] = STRING_TO_JSVAL(filename);&#10; &#10;-    if (!JS_GetProperty(cx, obj, js_lineno_str, &amp;v) ||&#10;-        !js_ValueToECMAUint32 (cx, v, &amp;lineno)) {&#10;+    if (!JS_GetProperty(cx, obj, js_lineno_str, &amp;vp[2]) ||&#10;+        !js_ValueToECMAUint32 (cx, vp[2], &amp;lineno)) {&#10;         return JS_FALSE;&#10;     }&#10; &#10;     if (lineno != 0) {&#10;-        if (!(lineno_as_str = js_ValueToString(cx, v))) {&#10;+        lineno_as_str = js_ValueToString(cx, vp[2]);&#10;+        if (!lineno_as_str)&#10;             return JS_FALSE;&#10;-        }&#10;         lineno_length = JSSTRING_LENGTH(lineno_as_str);&#10;     } else {&#10;         lineno_as_str = NULL;&#10;@@ -818,7 +820,7 @@ exn_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)&#10; &#10; static JSFunctionSpec exception_methods[] = {&#10; #if JS_HAS_TOSOURCE&#10;-    {js_toSource_str,   exn_toSource,           0,0,2},&#10;+    {js_toSource_str,   exn_toSource,           0,0,3},&#10; #endif&#10;     {js_toString_str,   exn_toString,           0,0,0},&#10;     {0,0,0,0,0}&#10;@@ -1063,10 +1065,11 @@ out:&#10; JSBool&#10; js_ReportUncaughtException(JSContext *cx)&#10; {&#10;+    jsval exn, *vp;&#10;     JSObject *exnObject;&#10;-    JSString *str;&#10;-    jsval exn;&#10;+    void *mark;&#10;     JSErrorReport *reportp, report;&#10;+    JSString *str;&#10;     const char *bytes;&#10;     JSBool ok;&#10; &#10;@@ -1078,14 +1081,24 @@ js_ReportUncaughtException(JSContext *cx)&#10; &#10;     /*&#10;      * Because js_ValueToString below could error and an exception object&#10;-     * could become unrooted, we must root exnObject.&#10;+     * could become unrooted, we must root exnObject.  Later, if exnObject is&#10;+     * non-null, we need to root other intermediates, so allocate an operand&#10;+     * stack segment to protect all of these values.&#10;      */&#10;     if (JSVAL_IS_PRIMITIVE(exn)) {&#10;         exnObject = NULL;&#10;+#ifdef __GNUC__         /* suppress bogus gcc warnings */&#10;+        vp = NULL;&#10;+        mark = NULL;&#10;+#endif&#10;     } else {&#10;         exnObject = JSVAL_TO_OBJECT(exn);&#10;-        if (!js_AddRoot(cx, &amp;exnObject, &quot;exn.report.root&quot;))&#10;-            return JS_FALSE;&#10;+        vp = js_AllocStack(cx, 5, &amp;mark);&#10;+        if (!vp) {&#10;+            ok = JS_FALSE;&#10;+            goto out;&#10;+        }&#10;+        vp[0] = exn;&#10;     }&#10; &#10; #if JS_HAS_ERROR_EXCEPTIONS&#10;@@ -1096,36 +1109,40 @@ js_ReportUncaughtException(JSContext *cx)&#10; &#10;     /* XXX L10N angels cry once again (see also jsemit.c, /L10N gaffes/) */&#10;     str = js_ValueToString(cx, exn);&#10;-    bytes = str ? js_GetStringBytes(str) : &quot;unknown (can't convert to string)&quot;;&#10;+    if (!str) {&#10;+        bytes = &quot;unknown (can't convert to string)&quot;;&#10;+    } else {&#10;+        vp[1] = STRING_TO_JSVAL(str);&#10;+        bytes = js_GetStringBytes(str);&#10;+    }&#10;     ok = JS_TRUE;&#10; &#10;     if (!reportp &amp;&amp;&#10;         exnObject &amp;&amp;&#10;         OBJ_GET_CLASS(cx, exnObject) == &amp;ExceptionClass) {&#10;-        jsval v;&#10;         const char *filename;&#10;         uint32 lineno;&#10; &#10;-        ok = JS_GetProperty(cx, exnObject, js_message_str, &amp;v);&#10;+        ok = JS_GetProperty(cx, exnObject, js_message_str, &amp;vp[2]);&#10;         if (!ok)&#10;             goto out;&#10;-        if (JSVAL_IS_STRING(v))&#10;-            bytes = JS_GetStringBytes(JSVAL_TO_STRING(v));&#10;+        if (JSVAL_IS_STRING(vp[2]))&#10;+            bytes = JS_GetStringBytes(JSVAL_TO_STRING(vp[2]));&#10; &#10;-        ok = JS_GetProperty(cx, exnObject, js_filename_str, &amp;v);&#10;+        ok = JS_GetProperty(cx, exnObject, js_filename_str, &amp;vp[3]);&#10;         if (!ok)&#10;             goto out;&#10;-        str = js_ValueToString(cx, v);&#10;+        str = js_ValueToString(cx, vp[3]);&#10;         if (!str) {&#10;             ok = JS_FALSE;&#10;             goto out;&#10;         }&#10;         filename = StringToFilename(cx, str);&#10; &#10;-        ok = JS_GetProperty(cx, exnObject, js_lineno_str, &amp;v);&#10;+        ok = JS_GetProperty(cx, exnObject, js_lineno_str, &amp;vp[4]);&#10;         if (!ok)&#10;             goto out;&#10;-        ok = js_ValueToECMAUint32 (cx, v, &amp;lineno);&#10;+        ok = js_ValueToECMAUint32 (cx, vp[4], &amp;lineno);&#10;         if (!ok)&#10;             goto out;&#10; &#10;@@ -1147,7 +1164,7 @@ js_ReportUncaughtException(JSContext *cx)&#10;     JS_ClearPendingException(cx);&#10; out:&#10;     if (exnObject)&#10;-        js_RemoveRoot(cx-&gt;runtime, &amp;exnObject);&#10;+        js_FreeStack(cx, mark);&#10;     return ok;&#10; }</Data></Cell>
    <Cell ss:StyleID="s69"><Data ss:Type="String">2005-10-24 10:45:45    Better local GC rooting (312278, r/sr=igor/shaver).&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsstr.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index f4d97e7..70ee007 100644&#10;@@ -527,9 +527,16 @@ str_getProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp)&#10; &#10;     if (!JSVAL_IS_INT(id))&#10;         return JS_TRUE;&#10;+&#10;+    /*&#10;+     * Call js_ValueToString because getters and setters can be invoked on&#10;+     * objects of different class, unlike enumerate, resolve, and the other&#10;+     * class hooks.&#10;+     */&#10;     str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));&#10;     if (!str)&#10;         return JS_FALSE;&#10;+&#10;     slot = JSVAL_TO_INT(id);&#10;     if (slot == STRING_LENGTH)&#10;         *vp = INT_TO_JSVAL((jsint) JSSTRING_LENGTH(str));&#10;@@ -548,9 +555,10 @@ str_enumerate(JSContext *cx, JSObject *obj)&#10;     if (JS_VERSION_IS_1_2(cx))&#10;         return JS_TRUE;&#10; &#10;-    str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));&#10;+    str = (JSString *) JS_GetPrivate(cx, obj);&#10;     if (!str)&#10;-        return JS_FALSE;&#10;+        return JS_TRUE;&#10;+&#10;     length = JSSTRING_LENGTH(str);&#10;     for (i = 0; i &lt; length; i++) {&#10;         str1 = js_NewDependentString(cx, str, i, 1, 0);&#10;@@ -575,9 +583,10 @@ str_resolve(JSContext *cx, JSObject *obj, jsval id, uintN flags,&#10;     if (!JSVAL_IS_INT(id) || (flags &amp; JSRESOLVE_ASSIGNING))&#10;         return JS_TRUE;&#10; &#10;-    str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));&#10;+    str = (JSString *) JS_GetPrivate(cx, obj);&#10;     if (!str)&#10;-        return JS_FALSE;&#10;+        return JS_TRUE;&#10;+&#10;     slot = JSVAL_TO_INT(id);&#10;     if ((size_t)slot &lt; JSSTRING_LENGTH(str)) {&#10;         str1 = js_NewDependentString(cx, str, (size_t)slot, 1, 0);&#10;@@ -615,6 +624,8 @@ str_quote(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)&#10;     str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));&#10;     if (!str)&#10;         return JS_FALSE;&#10;+    argv[-1] = STRING_TO_JSVAL(str);&#10;+&#10;     str = js_QuoteString(cx, str, '&quot;');&#10;     if (!str)&#10;         return JS_FALSE;&#10;@@ -755,6 +766,8 @@ str_toLowerCase(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;     str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));&#10;     if (!str)&#10;         return JS_FALSE;&#10;+    argv[-1] = STRING_TO_JSVAL(str);&#10;+&#10;     n = JSSTRING_LENGTH(str);&#10;     news = (jschar *) JS_malloc(cx, (n + 1) * sizeof(jschar));&#10;     if (!news)&#10;@@ -786,6 +799,7 @@ str_toLocaleLowerCase(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;         str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));&#10;         if (!str)&#10;             return JS_FALSE;&#10;+        argv[-1] = STRING_TO_JSVAL(str);&#10;         return cx-&gt;localeCallbacks-&gt;localeToLowerCase(cx, str, rval);&#10;     }&#10;     return str_toLowerCase(cx, obj, 0, argv, rval);&#10;@@ -802,6 +816,8 @@ str_toUpperCase(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;     str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));&#10;     if (!str)&#10;         return JS_FALSE;&#10;+    argv[-1] = STRING_TO_JSVAL(str);&#10;+&#10;     n = JSSTRING_LENGTH(str);&#10;     news = (jschar *) JS_malloc(cx, (n + 1) * sizeof(jschar));&#10;     if (!news)&#10;@@ -833,6 +849,7 @@ str_toLocaleUpperCase(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;         str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));&#10;         if (!str)&#10;             return JS_FALSE;&#10;+        argv[-1] = STRING_TO_JSVAL(str);&#10;         return cx-&gt;localeCallbacks-&gt;localeToUpperCase(cx, str, rval);&#10;     }&#10;     return str_toUpperCase(cx, obj, 0, argv, rval);&#10;@@ -855,8 +872,10 @@ str_localeCompare(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;         thatStr = js_ValueToString(cx, argv[0]);&#10;         if (!thatStr)&#10;             return JS_FALSE;&#10;-        if (cx-&gt;localeCallbacks &amp;&amp; cx-&gt;localeCallbacks-&gt;localeCompare)&#10;+        if (cx-&gt;localeCallbacks &amp;&amp; cx-&gt;localeCallbacks-&gt;localeCompare) {&#10;+            argv[0] = STRING_TO_JSVAL(thatStr);&#10;             return cx-&gt;localeCallbacks-&gt;localeCompare(cx, str, thatStr, rval);&#10;+        }&#10;         *rval = INT_TO_JSVAL(js_CompareStrings(str, thatStr));&#10;     }&#10;     return JS_TRUE;&#10;@@ -2006,6 +2025,7 @@ str_substr(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)&#10;     str = js_ValueToString(cx, OBJECT_TO_JSVAL(obj));&#10;     if (!str)&#10;         return JS_FALSE;&#10;+    argv[-1] = STRING_TO_JSVAL(str);&#10; &#10;     if (argc != 0) {&#10;         if (!js_ValueToNumber(cx, argv[0], &amp;d))&#10;@@ -2352,6 +2372,7 @@ String(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)&#10;         str = js_ValueToString(cx, argv[0]);&#10;         if (!str)&#10;             return JS_FALSE;&#10;+        argv[0] = STRING_TO_JSVAL(str);&#10;     } else {&#10;         str = cx-&gt;runtime-&gt;emptyString;&#10;     }&#10;@@ -4492,6 +4513,7 @@ str_decodeURI(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;     str = js_ValueToString(cx, argv[0]);&#10;     if (!str)&#10;         return JS_FALSE;&#10;+    argv[0] = STRING_TO_JSVAL(str);&#10;     return Decode(cx, str, js_uriReservedPlusPound_ucstr, rval);&#10; }&#10; &#10;@@ -4504,6 +4526,7 @@ str_decodeURI_Component(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;     str = js_ValueToString(cx, argv[0]);&#10;     if (!str)&#10;         return JS_FALSE;&#10;+    argv[0] = STRING_TO_JSVAL(str);&#10;     return Decode(cx, str, js_empty_ucstr, rval);&#10; }&#10; &#10;@@ -4516,6 +4539,7 @@ str_encodeURI(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;     str = js_ValueToString(cx, argv[0]);&#10;     if (!str)&#10;         return JS_FALSE;&#10;+    argv[0] = STRING_TO_JSVAL(str);&#10;     return Encode(cx, str, js_uriReservedPlusPound_ucstr, js_uriUnescaped_ucstr,&#10;                   rval);&#10; }&#10;@@ -4529,6 +4553,7 @@ str_encodeURI_Component(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;     str = js_ValueToString(cx, argv[0]);&#10;     if (!str)&#10;         return JS_FALSE;&#10;+    argv[0] = STRING_TO_JSVAL(str);&#10;     return Encode(cx, str, js_uriUnescaped_ucstr, NULL, rval);&#10; }</Data></Cell>
    <Cell ss:StyleID="s68"><Data ss:Type="String">2006-06-15 07:54:13    JavaScript Test Library - regression test for bug 312278, by Igor Bukanov, a=bsmedberg for checkin to closed tree</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">313373</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">2005-10-25 08:29:28    Fixing bug 313373. Pass *vp through untouched to the checkAccess hook when checking for write access. r=mrbkap@gmail.com, sr=brendan@mozilla.org&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- caps/src/nsScriptSecurityManager.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 9ffb8fc..98e040e 100644&#10;@@ -466,6 +466,8 @@ nsScriptSecurityManager::CheckObjectAccess(JSContext *cx, JSObject *obj,&#10;     // Pass the parent object's class name, as we have no class-info for it.&#10;     nsresult rv =&#10;         ssm-&gt;CheckPropertyAccess(cx, target, JS_GetClass(cx, obj)-&gt;name, id,&#10;+                                 (mode &amp; JSACC_WRITE) ?&#10;+                                 nsIXPCSecurityManager::ACCESS_SET_PROPERTY :&#10;                                  nsIXPCSecurityManager::ACCESS_GET_PROPERTY);&#10; &#10;     if (NS_FAILED(rv))&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index de29146..ebabebf 100644&#10;@@ -3549,13 +3549,15 @@ js_CheckAccess(JSContext *cx, JSObject *obj, jsid id, JSAccessMode mode,&#10;         return OBJ_CHECK_ACCESS(cx, pobj, id, mode, vp, attrsp);&#10;     }&#10;     sprop = (JSScopeProperty *)prop;&#10;-    *vp = (SPROP_HAS_VALID_SLOT(sprop, OBJ_SCOPE(pobj)))&#10;-          ? LOCKED_OBJ_GET_SLOT(pobj, sprop-&gt;slot)&#10;-          : ((mode &amp; JSACC_WATCH) == JSACC_PROTO)&#10;-          ? LOCKED_OBJ_GET_SLOT(obj, JSSLOT_PROTO)&#10;-          : (mode == JSACC_PARENT)&#10;-          ? LOCKED_OBJ_GET_SLOT(obj, JSSLOT_PARENT)&#10;-          : JSVAL_VOID;&#10;+    if (!(mode &amp; JSACC_WRITE)) {&#10;+        *vp = (SPROP_HAS_VALID_SLOT(sprop, OBJ_SCOPE(pobj)))&#10;+            ? LOCKED_OBJ_GET_SLOT(pobj, sprop-&gt;slot)&#10;+            : ((mode &amp; JSACC_WATCH) == JSACC_PROTO)&#10;+            ? LOCKED_OBJ_GET_SLOT(obj, JSSLOT_PROTO)&#10;+            : (mode == JSACC_PARENT)&#10;+            ? LOCKED_OBJ_GET_SLOT(obj, JSSLOT_PARENT)&#10;+            : JSVAL_VOID;&#10;+    }&#10;     *attrsp = sprop-&gt;attrs;&#10; &#10;     /*&#10;@@ -3856,13 +3858,12 @@ static JSBool&#10; CheckCtorSetAccess(JSContext *cx, JSObject *obj, jsval id, jsval *vp)&#10; {&#10;     JSAtom *atom;&#10;-    jsval oldval;&#10;     uintN attrs;&#10; &#10;     atom = cx-&gt;runtime-&gt;atomState.constructorAtom;&#10;     JS_ASSERT(id == ATOM_KEY(atom));&#10;     return OBJ_CHECK_ACCESS(cx, obj, ATOM_TO_JSID(atom), JSACC_WRITE,&#10;-                            &amp;oldval, &amp;attrs);&#10;+                            vp, &amp;attrs);&#10; }&#10; &#10; JSBool&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">2005-10-26 10:25:05    Followup fix for bug 313373. Make sure call methods on the right object when dealing with double wrapped JS objects. r=shaver@mozilla.org, sr=brendan@mozilla.org&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/xpconnect/src/xpcwrappedjsclass.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 98fc95e..d3acd63 100644&#10;@@ -513,7 +513,7 @@ nsXPCWrappedJSClass::DelegatedQueryInterface(nsXPCWrappedJS* self,&#10; &#10; #ifdef XPC_IDISPATCH_SUPPORT&#10;     // If IDispatch is enabled and we're QI'ing to IDispatch&#10;-    else if(nsXPConnect::IsIDispatchEnabled() &amp;&amp; aIID.Equals(NSID_IDISPATCH))&#10;+    if(nsXPConnect::IsIDispatchEnabled() &amp;&amp; aIID.Equals(NSID_IDISPATCH))&#10;     {&#10;         return XPCIDispatchExtension::IDispatchQIWrappedJS(self, aInstancePtr);&#10;     }&#10;@@ -584,10 +584,34 @@ nsXPCWrappedJSClass::DelegatedQueryInterface(nsXPCWrappedJS* self,&#10;     // else we do the more expensive stuff...&#10; &#10;     // check if the JSObject claims to implement this interface&#10;-    JSObject* jsobj = CallQueryInterfaceOnJSObject(ccx, self-&gt;GetJSObject(), aIID);&#10;-    if(jsobj &amp;&amp; XPCConvert::JSObject2NativeInterface(ccx, aInstancePtr, jsobj,&#10;-                                                     &amp;aIID, nsnull, nsnull))&#10;-        return NS_OK;&#10;+    JSObject* jsobj = CallQueryInterfaceOnJSObject(ccx, self-&gt;GetJSObject(),&#10;+                                                   aIID);&#10;+    if(jsobj)&#10;+    {&#10;+        // We can't use XPConvert::JSObject2NativeInterface() here&#10;+        // since that can find a XPCWrappedNative directly on the&#10;+        // proto chain, and we don't want that here. We need to find&#10;+        // the actual JS object that claimed it supports the interface&#10;+        // we're looking for or we'll potentially bypass security&#10;+        // checks etc by calling directly through to a native found on&#10;+        // the prototype chain.&#10;+        //&#10;+        // Instead, simply do the nsXPCWrappedJS part of&#10;+        // XPConvert::JSObject2NativeInterface() here to make sure we&#10;+        // get a new (or used) nsXPCWrappedJS.&#10;+        nsXPCWrappedJS* wrapper;&#10;+        nsresult rv = nsXPCWrappedJS::GetNewOrUsed(ccx, jsobj, aIID, nsnull,&#10;+                                                   &amp;wrapper);&#10;+        if(NS_SUCCEEDED(rv) &amp;&amp; wrapper)&#10;+        {&#10;+            // We need to go through the QueryInterface logic to make&#10;+            // this return the right thing for the various 'special'&#10;+            // interfaces; e.g.  nsIPropertyBag.&#10;+            rv = wrapper-&gt;QueryInterface(aIID, aInstancePtr);&#10;+            NS_RELEASE(wrapper);&#10;+            return rv;&#10;+        }&#10;+    }&#10; &#10;     // else...&#10;     // no can do</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">319847</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">2005-12-15 03:01:49      Make sure the namespace is properly escaped. r=bsmedberg/axel&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- rdf/base/src/nsRDFXMLSerializer.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index ba42d20..d9f84d4 100644&#10;@@ -1,4 +1,5 @@&#10; /* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-&#10;+ * vim: set ts=4 sw=4 et tw=80:&#10;  *&#10;  * ***** BEGIN LICENSE BLOCK *****&#10;  * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;@@ -1006,7 +1007,9 @@ static const char kXMLVersion[] = &quot;&lt;?xml version=\&quot;1.0\&quot;?&gt;\n&quot;;&#10; &#10;         rv = rdf_BlockingWrite(aStream, NS_LITERAL_CSTRING(&quot;=\&quot;&quot;));&#10;         if (NS_FAILED(rv)) return rv;&#10;-        rv = rdf_BlockingWrite(aStream, entry-&gt;mURI);&#10;+        nsCAutoString uri(entry-&gt;mURI);&#10;+        rdf_EscapeAttributeValue(uri);&#10;+        rv = rdf_BlockingWrite(aStream, uri);&#10;         if (NS_FAILED(rv)) return rv;&#10;         rv = rdf_BlockingWrite(aStream, NS_LITERAL_CSTRING(&quot;\&quot;&quot;));&#10;         if (NS_FAILED(rv)) return rv;&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">2005-12-20 05:13:59    xul:persist doesn't really deal with namespaces; check that the argument is a valid NCName, though. r=bsmedberg sr=jst&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xul/document/src/nsXULDocument.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 1e52fb9..793e95a 100644&#10;@@ -114,6 +114,7 @@&#10; #include &quot;nsContentCreatorFunctions.h&quot;&#10; #include &quot;nsContentUtils.h&quot;&#10; #include &quot;nsIParser.h&quot;&#10;+#include &quot;nsIParserService.h&quot;&#10; #include &quot;nsICSSStyleSheet.h&quot;&#10; #include &quot;nsIScriptError.h&quot;&#10; &#10;@@ -1378,6 +1379,22 @@ nsXULDocument::Persist(const nsAString&amp; aID,&#10;         nameSpaceID = ni-&gt;NamespaceID();&#10;     }&#10;     else {&#10;+        // Make sure that this QName is going to be valid.&#10;+        nsIParserService *parserService = nsContentUtils::GetParserService();&#10;+        NS_ASSERTION(parserService, &quot;Running scripts during shutdown?&quot;);&#10;+&#10;+        const PRUnichar *colon;&#10;+        rv = parserService-&gt;CheckQName(PromiseFlatString(aAttr), PR_TRUE, &amp;colon);&#10;+        if (NS_FAILED(rv)) {&#10;+            // There was an invalid character or it was malformed.&#10;+            return NS_ERROR_INVALID_ARG;&#10;+        }&#10;+&#10;+        if (colon) {&#10;+            // We don't really handle namespace qualifiers in attribute names.&#10;+            return NS_ERROR_NOT_IMPLEMENTED;&#10;+        }&#10;+&#10;         tag = do_GetAtom(aAttr);&#10;         NS_ENSURE_TRUE(tag, NS_ERROR_OUT_OF_MEMORY);&#10; &#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">319872</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">2005-12-14 07:18:03    Test for integer overflow while escaping stuff. r=brendan&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsscan.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e24d981..9043f69 100644&#10;@@ -798,8 +798,12 @@ GrowStringBuffer(JSStringBuffer *sb, size_t newlength)&#10;     jschar *bp;&#10; &#10;     offset = PTRDIFF(sb-&gt;ptr, sb-&gt;base, jschar);&#10;-    newlength += offset;&#10;-    bp = (jschar *) realloc(sb-&gt;base, (newlength + 1) * sizeof(jschar));&#10;+    JS_ASSERT(offset &gt;= 0);&#10;+    newlength += offset + 1;&#10;+    if ((size_t)offset &lt; newlength &amp;&amp; newlength &lt; ~(size_t)0 / sizeof(jschar))&#10;+        bp = realloc(sb-&gt;base, newlength * sizeof(jschar));&#10;+    else&#10;+        bp = NULL;&#10;     if (!bp) {&#10;         free(sb-&gt;base);&#10;         sb-&gt;base = STRING_BUFFER_ERROR_BASE;&#10;@@ -807,7 +811,7 @@ GrowStringBuffer(JSStringBuffer *sb, size_t newlength)&#10;     }&#10;     sb-&gt;base = bp;&#10;     sb-&gt;ptr = bp + offset;&#10;-    sb-&gt;limit = bp + newlength;&#10;+    sb-&gt;limit = bp + newlength - 1;&#10;     return JS_TRUE;&#10; }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsxml.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 4bb9a4e..d6e712f 100644&#10;@@ -2300,6 +2300,11 @@ EscapeElementValue(JSContext *cx, JSStringBuffer *sb, JSString *str)&#10;             newlength += 3;&#10;         else if (c == '&amp;')&#10;             newlength += 4;&#10;+&#10;+        if (newlength &lt; length) {&#10;+            JS_ReportOutOfMemory(cx);&#10;+            return NULL;&#10;+        }&#10;     }&#10;     if ((sb &amp;&amp; STRING_BUFFER_OFFSET(sb) != 0) || newlength &gt; length) {&#10;         JSStringBuffer localSB;&#10;@@ -2307,7 +2312,7 @@ EscapeElementValue(JSContext *cx, JSStringBuffer *sb, JSString *str)&#10;             sb = &amp;localSB;&#10;             js_InitStringBuffer(sb);&#10;         }&#10;-        if (!sb-&gt;grow(sb, STRING_BUFFER_OFFSET(sb) + newlength)) {&#10;+        if (!sb-&gt;grow(sb, newlength)) {&#10;             JS_ReportOutOfMemory(cx);&#10;             return NULL;&#10;         }&#10;@@ -2350,6 +2355,11 @@ EscapeAttributeValue(JSContext *cx, JSStringBuffer *sb, JSString *str)&#10;             newlength += 3;&#10;         else if (c == '&amp;' || c == '\n' || c == '\r' || c == '\t')&#10;             newlength += 4;&#10;+&#10;+        if (newlength &lt; length) {&#10;+            JS_ReportOutOfMemory(cx);&#10;+            return NULL;&#10;+        }&#10;     }&#10;     if ((sb &amp;&amp; STRING_BUFFER_OFFSET(sb) != 0) || newlength &gt; length) {&#10;         JSStringBuffer localSB;&#10;@@ -2357,7 +2367,7 @@ EscapeAttributeValue(JSContext *cx, JSStringBuffer *sb, JSString *str)&#10;             sb = &amp;localSB;&#10;             js_InitStringBuffer(sb);&#10;         }&#10;-        if (!sb-&gt;grow(sb, STRING_BUFFER_OFFSET(sb) + newlength)) {&#10;+        if (!sb-&gt;grow(sb, newlength)) {&#10;             JS_ReportOutOfMemory(cx);&#10;             return NULL;&#10;         }&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">2006-01-18 10:22:55    Don't free the sentinal value. r=brendan&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsxml.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 9df22a9..c9e66c2 100644&#10;@@ -2892,7 +2892,7 @@ XMLToXMLString(JSContext *cx, JSXML *xml, const JSXMLArray *ancestorNSes,&#10;     str = js_NewString(cx, sb.base, STRING_BUFFER_OFFSET(&amp;sb), 0);&#10; out:&#10;     JS_LeaveLocalRootScope(cx);&#10;-    if (!str)&#10;+    if (!str &amp;&amp; STRING_BUFFER_OK(&amp;sb))&#10;         js_FinishStringBuffer(&amp;sb);&#10;     XMLArrayFinish(cx, &amp;decls);&#10;     if (ancdecls.capacity != 0)&#10;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">2006-04-19 10:56:29    JavaScript Test Library - Regression test for bug 319872, by Georgi Guninski&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/e4x/Regress/regress-319872.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..58f0770&#10;@@ -0,0 +1,65 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Georgi Guninski&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 319872;&#10;+var summary = 'Do not Crash in jsxml.c';&#10;+var actual = 'No Crash';&#10;+var expect = 'No Crash';&#10;+&#10;+&#10;+printBugNumber (bug);&#10;+printStatus (summary);&#10;+printStatus (&quot;Expect out of memory error&quot;);&#10;+expectExitCode(3);&#10;+&#10;+var i,m,str;&#10;+str=&quot;&lt;a xmlns:v=\&quot;&quot;;&#10;+m=&quot;&quot;;&#10;+&#10;+for (i=0;i&lt;(1024*1024)/2;i++) &#10;+  m += &quot;\n&quot;;&#10;+&#10;+for(i=0;i&lt;500;i++) &#10;+  str += m ;&#10;+&#10;+str += &quot;\&quot;&gt;f00k&lt;/a&gt;&quot;;&#10;+&#10;+var xx = new XML(str);&#10;+&#10;+printStatus(xx.toXMLString());&#10;+  &#10;+TEST(1, expect, actual);</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">2006-10-08 04:37:50    JavaScript Tests - add tests for bugs 319872, 324422 to slow tests, bug 354923&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/slow-n.tests &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index c4b0c354..0d34303 100644&#10;@@ -1,6 +1,8 @@&#10; e4x/GC/regress-324278.js&#10;+e4x/Regress/regress-319872.js &#10; e4x/Regress/regress-350238.js&#10; e4x/Regress/regress-350531.js&#10;+e4x/XML/regress-324422-2.js&#10; e4x/XML/regress-324688.js&#10; ecma_3/Array/regress-322135-02.js&#10; ecma_3/Array/regress-322135-03.js&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">320982</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">2006-06-16 03:19:51    Crash when browse this Site over top menu [@ nsGlobalWindow::RunTimeout], r=mrbkap, sr=bryner&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/src/base/nsGlobalWindow.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 73d5574..afe1b46 100644&#10;@@ -336,6 +336,7 @@ nsGlobalWindow::nsGlobalWindow(nsGlobalWindow *aOuterWindow)&#10;     mHavePendingClose(PR_FALSE),&#10;     mHadOriginalOpener(PR_FALSE),&#10;     mIsPopupSpam(PR_FALSE),&#10;+    mFireOfflineStatusChangeEventOnThaw(PR_FALSE),&#10;     mGlobalObjectOwner(nsnull),&#10;     mTimeouts(nsnull),&#10;     mTimeoutInsertionPoint(&amp;mTimeouts),&#10;@@ -5800,16 +5801,61 @@ nsGlobalWindow::Observe(nsISupports* aSubject, const char* aTopic,&#10;   return NS_ERROR_FAILURE;&#10; }&#10; &#10;+PR_STATIC_CALLBACK(PLDHashOperator)&#10;+FirePendingStorageEvents(const nsAString&amp; aKey, PRBool aData, void *userArg)&#10;+{&#10;+  nsGlobalWindow *win = NS_STATIC_CAST(nsGlobalWindow *, userArg);&#10;+&#10;+  nsCOMPtr&lt;nsIDOMStorage&gt; storage;&#10;+  win-&gt;GetSessionStorage(getter_AddRefs(storage));&#10;+&#10;+  if (storage) {&#10;+    win-&gt;Observe(storage, &quot;dom-storage-changed&quot;,&#10;+                 aKey.IsEmpty() ? nsnull : PromiseFlatString(aKey).get());&#10;+  }&#10;+&#10;+  return PL_DHASH_NEXT;&#10;+}&#10;+&#10; nsresult&#10; nsGlobalWindow::FireDelayedDOMEvents()&#10; {&#10;   FORWARD_TO_INNER(FireDelayedDOMEvents, (), NS_ERROR_UNEXPECTED);&#10; &#10;+  if (mPendingStorageEvents) {&#10;+    // Fire pending storage events.&#10;+    mPendingStorageEvents-&gt;EnumerateRead(FirePendingStorageEvents, this);&#10;+&#10;+    delete mPendingStorageEvents;&#10;+    mPendingStorageEvents = nsnull;&#10;+  }&#10;+&#10;   if (mFireOfflineStatusChangeEventOnThaw) {&#10;     mFireOfflineStatusChangeEventOnThaw = PR_FALSE;&#10;     FireOfflineStatusEvent();&#10;   }&#10; &#10;+  nsCOMPtr&lt;nsIDocShellTreeNode&gt; node =&#10;+    do_QueryInterface(GetDocShell());&#10;+  if (node) {&#10;+    PRInt32 childCount = 0;&#10;+    node-&gt;GetChildCount(&amp;childCount);&#10;+&#10;+    for (PRInt32 i = 0; i &lt; childCount; ++i) {&#10;+      nsCOMPtr&lt;nsIDocShellTreeItem&gt; childShell;&#10;+      node-&gt;GetChildAt(i, getter_AddRefs(childShell));&#10;+      NS_ASSERTION(childShell, &quot;null child shell&quot;);&#10;+&#10;+      nsCOMPtr&lt;nsPIDOMWindow&gt; pWin = do_GetInterface(childShell);&#10;+      if (pWin) {&#10;+        nsGlobalWindow *win =&#10;+          NS_STATIC_CAST(nsGlobalWindow*,&#10;+                         NS_STATIC_CAST(nsPIDOMWindow*, pWin));&#10;+        win-&gt;FireDelayedDOMEvents();&#10;+      }&#10;+    }&#10;+  }&#10;+&#10;   return NS_OK;&#10; }&#10; &#10;@@ -6976,6 +7022,13 @@ nsGlobalWindow::SaveWindowState(nsISupports **aState)&#10;   nsGlobalWindow *inner = GetCurrentInnerWindowInternal();&#10;   NS_ASSERTION(inner, &quot;No inner window to save&quot;);&#10; &#10;+  // Don't do anything else to this inner window! After this point, all&#10;+  // calls to SetTimeoutOrInterval will create entries in the timeout&#10;+  // list that will only run after this window has come out of the bfcache.&#10;+  // Also, while we're frozen, we won't dispatch online/offline events&#10;+  // to the page.&#10;+  inner-&gt;Freeze();&#10;+&#10;   // Remember the outer window's XPConnect prototype.&#10;   nsCOMPtr&lt;nsIClassInfo&gt; ci =&#10;     do_QueryInterface((nsIScriptGlobalObject *)this);&#10;@@ -6996,29 +7049,10 @@ nsGlobalWindow::SaveWindowState(nsISupports **aState)&#10;   printf(&quot;saving window state, state = %p\n&quot;, (void*)state);&#10; #endif&#10; &#10;-  // Don't do anything else to this inner window!&#10;-  inner-&gt;Freeze();&#10;-&#10;   state.swap(*aState);&#10;   return NS_OK;&#10; }&#10; &#10;-PR_STATIC_CALLBACK(PLDHashOperator)&#10;-FirePendingStorageEvents(const nsAString&amp; aKey, PRBool aData, void *userArg)&#10;-{&#10;-  nsGlobalWindow *win = NS_STATIC_CAST(nsGlobalWindow *, userArg);&#10;-&#10;-  nsCOMPtr&lt;nsIDOMStorage&gt; storage;&#10;-  win-&gt;GetSessionStorage(getter_AddRefs(storage));&#10;-&#10;-  if (storage) {&#10;-    win-&gt;Observe(storage, &quot;dom-storage-changed&quot;,&#10;-                 aKey.IsEmpty() ? nsnull : PromiseFlatString(aKey).get());&#10;-  }&#10;-&#10;-  return PL_DHASH_NEXT;&#10;-}&#10;-&#10; nsresult&#10; nsGlobalWindow::RestoreWindowState(nsISupports *aState)&#10; {&#10;@@ -7082,15 +7116,6 @@ nsGlobalWindow::RestoreWindowState(nsISupports *aState)&#10; &#10;   holder-&gt;DidRestoreWindow();&#10; &#10;-  if (inner-&gt;mPendingStorageEvents) {&#10;-    // Fire pending storage events.&#10;-    inner-&gt;mPendingStorageEvents-&gt;EnumerateRead(FirePendingStorageEvents,&#10;-                                                inner);&#10;-&#10;-    delete inner-&gt;mPendingStorageEvents;&#10;-    inner-&gt;mPendingStorageEvents = nsnull;&#10;-  }&#10;-&#10;   return NS_OK;&#10; }&#10; &#10;@@ -7111,13 +7136,13 @@ nsGlobalWindow::SuspendTimeouts()&#10;     if (t-&gt;mTimer) {&#10;       t-&gt;mTimer-&gt;Cancel();&#10;       t-&gt;mTimer = nsnull;&#10;-    }&#10; &#10;-    // Drop the reference that the timer's closure had on this timeout, we'll&#10;-    // add it back in ResumeTimeouts. Note that it shouldn't matter that we're&#10;-    // passing null for the context, since this shouldn't actually release this&#10;-    // timeout.&#10;-    t-&gt;Release();&#10;+      // Drop the reference that the timer's closure had on this timeout, we'll&#10;+      // add it back in ResumeTimeouts. Note that it shouldn't matter that we're&#10;+      // passing null for the context, since this shouldn't actually release this&#10;+      // timeout.&#10;+      t-&gt;Release();&#10;+    }&#10;   }&#10; &#10;   // Suspend our children as well.&#10;@@ -7138,6 +7163,12 @@ nsGlobalWindow::SuspendTimeouts()&#10;                          NS_STATIC_CAST(nsPIDOMWindow*, pWin));&#10; &#10;         win-&gt;SuspendTimeouts();&#10;+&#10;+        NS_ASSERTION(win-&gt;IsOuterWindow(), &quot;Expected outer window&quot;);&#10;+        nsGlobalWindow* inner = win-&gt;GetCurrentInnerWindowInternal();&#10;+        if (inner) {&#10;+          inner-&gt;Freeze();&#10;+        }&#10;       }&#10;     }&#10;   }&#10;@@ -7195,6 +7226,12 @@ nsGlobalWindow::ResumeTimeouts()&#10;           NS_STATIC_CAST(nsGlobalWindow*,&#10;                          NS_STATIC_CAST(nsPIDOMWindow*, pWin));&#10; &#10;+        NS_ASSERTION(win-&gt;IsOuterWindow(), &quot;Expected outer window&quot;);&#10;+        nsGlobalWindow* inner = win-&gt;GetCurrentInnerWindowInternal();&#10;+        if (inner) {&#10;+          inner-&gt;Thaw();&#10;+        }&#10;+&#10;         rv = win-&gt;ResumeTimeouts();&#10;         NS_ENSURE_SUCCESS(rv, rv);&#10;       }&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">324117</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">2007-02-09 08:08:34    JavaScript Test - regression test for bug 324117, by Igor Bukanov&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/e4x/GC/regress-324117.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..24ebe76&#10;@@ -0,0 +1,99 @@&#10;+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */&#10;+&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Igor Bukanov&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+&#10;+START(&quot;GC hazard during namespace scanning&quot;);&#10;+&#10;+var bug = 324117;&#10;+var summary = 'GC hazard during namespace scanning';&#10;+var actual = 'No Crash';&#10;+var expect = 'No Crash';&#10;+&#10;+printBugNumber (bug);&#10;+printStatus (summary);&#10;+&#10;+&#10;+function prepare(N) &#10;+{&#10;+    var xml = &lt;xml/&gt;;&#10;+    var ns1 = new Namespace(&quot;text1&quot;);  &#10;+    var ns2 = new Namespace(&quot;text2&quot;);  &#10;+    xml.addNamespace(ns1);&#10;+    xml.addNamespace(ns2);&#10;+&#10;+    // Prepare list to trigger DeutschSchorrWaite call during GC&#10;+    cursor = xml;&#10;+    for (var i = 0; i != N; ++i) {&#10;+        if (i % 2 == 0) &#10;+            cursor = [ {a: 1}, cursor ];&#10;+        else &#10;+            cursor = [ cursor, {a: 1} ];&#10;+    }&#10;+    return cursor;&#10;+}&#10;+&#10;+function check(list, N)&#10;+{&#10;+    // Extract xml to verify&#10;+    for (var i = N; i != 0; &#45;-i) {&#10;+        list = list[i % 2];&#10;+    }&#10;+    var xml = list;&#10;+    if (typeof xml != &quot;xml&quot;)&#10;+        return false;&#10;+    var array = xml.inScopeNamespaces();&#10;+    if (array.length !== 3)&#10;+        return false;&#10;+    if (array[0].uri !== &quot;&quot;)&#10;+        return false;&#10;+    if (array[1].uri !== &quot;text1&quot;)&#10;+        return false;&#10;+    if (array[2].uri !== &quot;text2&quot;)&#10;+        return false;&#10;+&#10;+    return true;&#10;+}&#10;+&#10;+var N = 64000;&#10;+var list = prepare(N);&#10;+gc();&#10;+var ok = check(list, N);&#10;+printStatus(ok);&#10;+&#10;+TEST(1, expect, actual);&#10;+&#10;+END();&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">326615</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">2006-02-28 15:41:01    Local auto-marker needed (326615, r=mrbkap).&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/xpconnect/src/xpcwrappedjsclass.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index d5e8d2f..04c88f8 100644&#10;@@ -1344,6 +1344,9 @@ pre_call_clean_up:&#10;     // Make sure &quot;this&quot; doesn't get deleted during this call.&#10;     nsCOMPtr&lt;nsIXPCWrappedJSClass&gt; kungFuDeathGrip(this);&#10; &#10;+    result = JSVAL_NULL;&#10;+    AUTO_MARK_JSVAL(ccx, &amp;result);&#10;+&#10;     if(!readyToDoTheCall)&#10;         goto done;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">2006-03-02 04:34:49    Need another auto-mark thingie (326615, r=mrbkap).&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/xpconnect/src/xpcwrappedjsclass.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 04c88f8..1e95991 100644&#10;@@ -1347,6 +1347,9 @@ pre_call_clean_up:&#10;     result = JSVAL_NULL;&#10;     AUTO_MARK_JSVAL(ccx, &amp;result);&#10; &#10;+    result = JSVAL_NULL;&#10;+    AUTO_MARK_JSVAL(ccx, &amp;result);&#10;+&#10;     if(!readyToDoTheCall)&#10;         goto done;&#10; &#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">327941</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">2006-02-22 14:09:09    Fix an initially hard-to-see bug reported by daumling@adobe.com, plus another one mentioned by mrbkap (327941, r=mrbkap).&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsxml.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index f603979..ae6d7a1 100644&#10;@@ -4743,6 +4743,7 @@ ResolveValue(JSContext *cx, JSXML *list, JSXML **result)&#10; {&#10;     JSXML *target, *base;&#10;     JSXMLQName *targetprop;&#10;+    JSObject *targetpropobj;&#10;     jsval id, tv;&#10; &#10;     /* Our caller must be protecting newborn objects. */&#10;@@ -4757,10 +4758,15 @@ ResolveValue(JSContext *cx, JSXML *list, JSXML **result)&#10; &#10;     target = list-&gt;xml_target;&#10;     targetprop = list-&gt;xml_targetprop;&#10;-    if (!target ||&#10;-        !targetprop ||&#10;-        OBJ_GET_CLASS(cx, targetprop-&gt;object) == &amp;js_AttributeNameClass ||&#10;-        IS_STAR(targetprop-&gt;localName)) {&#10;+    if (!target || !targetprop || IS_STAR(targetprop-&gt;localName)) {&#10;+        *result = NULL;&#10;+        return JS_TRUE;&#10;+    }&#10;+&#10;+    targetpropobj = js_GetXMLQNameObject(cx, targetprop);&#10;+    if (!targetpropobj)&#10;+        return JS_FALSE;&#10;+    if (OBJ_GET_CLASS(cx, targetpropobj) == &amp;js_AttributeNameClass) {&#10;         *result = NULL;&#10;         return JS_TRUE;&#10;     }&#10;@@ -4774,7 +4780,7 @@ ResolveValue(JSContext *cx, JSXML *list, JSXML **result)&#10;     if (!js_GetXMLObject(cx, base))&#10;         return JS_FALSE;&#10; &#10;-    id = OBJECT_TO_JSVAL(targetprop-&gt;object);&#10;+    id = OBJECT_TO_JSVAL(targetpropobj);&#10;     if (!GetProperty(cx, base-&gt;object, id, &amp;tv))&#10;         return JS_FALSE;&#10;     target = (JSXML *) JS_GetPrivate(cx, JSVAL_TO_OBJECT(tv));&#10;@@ -7238,9 +7244,9 @@ xml_mark_tail(JSContext *cx, JSXML *xml, void *arg)&#10; &#10;     if (xml-&gt;xml_class == JSXML_CLASS_LIST) {&#10;         if (xml-&gt;xml_target)&#10;-            js_MarkXML(cx, xml-&gt;xml_target, arg);&#10;+            JS_MarkGCThing(cx, xml-&gt;xml_target, &quot;target&quot;, arg);&#10;         if (xml-&gt;xml_targetprop)&#10;-            js_MarkXMLQName(cx, xml-&gt;xml_targetprop, arg);&#10;+            JS_MarkGCThing(cx, xml-&gt;xml_targetprop, &quot;targetprop&quot;, arg);&#10;     } else {&#10;         namespace_mark_vector(cx,&#10;                               (JSXMLNamespace **) xml-&gt;xml_namespaces.vector,&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">324918</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">2006-03-01 09:10:20    Make nsHTMLSelectElement deal better with options in unknown children. r=bz sr=jst&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/html/content/src/nsHTMLSelectElement.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 96bf6b7..ca0a2c0 100644&#10;@@ -117,18 +117,45 @@ public:&#10;    * @param aOption the option to insert&#10;    * @param aIndex the index to insert at&#10;    */&#10;-  nsresult InsertElementAt(nsIDOMHTMLOptionElement* aOption, PRInt32 aIndex);&#10;+  PRBool InsertOptionAt(nsIDOMHTMLOptionElement* aOption, PRInt32 aIndex)&#10;+  {&#10;+    return mElements.InsertObjectAt(aOption, aIndex);&#10;+  }&#10;+&#10;   /**&#10;    * Remove an option&#10;    * @param aIndex the index of the option to remove&#10;    */&#10;-  nsresult RemoveElementAt(PRInt32 aIndex);&#10;+  void RemoveOptionAt(PRInt32 aIndex)&#10;+  {&#10;+    mElements.RemoveObjectAt(aIndex);&#10;+  }&#10;+&#10;   /**&#10;    * Get the option at the index&#10;    * @param aIndex the index&#10;    * @param aReturn the option returned [OUT]&#10;    */&#10;-  nsIDOMHTMLOptionElement *ItemAsOption(PRInt32 aIndex);&#10;+  nsIDOMHTMLOptionElement *ItemAsOption(PRInt32 aIndex)&#10;+  {&#10;+    return mElements.SafeObjectAt(aIndex);&#10;+  }&#10;+&#10;+  /**&#10;+   * Clears out all options&#10;+   */&#10;+  void Clear()&#10;+  {&#10;+    mElements.Clear();&#10;+  }&#10;+&#10;+  /**&#10;+   * Append an option to end of array&#10;+   */&#10;+  PRBool AppendOption(nsIDOMHTMLOptionElement* aOption)&#10;+  {&#10;+    return mElements.AppendObject(aOption);&#10;+  }&#10; &#10;   /**&#10;    * Drop the reference to the select.  Called during select destruction.&#10;@@ -229,12 +256,10 @@ public:&#10; &#10;   virtual void SetFocus(nsPresContext* aPresContext);&#10;   virtual PRBool IsFocusable(PRInt32 *aTabIndex = nsnull);&#10;+  virtual nsresult InsertChildAt(nsIContent* aKid, PRUint32 aIndex,&#10;+                                 PRBool aNotify);&#10;+  virtual nsresult RemoveChildAt(PRUint32 aIndex, PRBool aNotify);&#10; &#10;-  // nsGenericElement&#10;-  virtual nsresult WillAddOrRemoveChild(nsIContent* aKid,&#10;-                                        PRUint32 aIndex,&#10;-                                        PRBool aRemove);&#10;-  &#10;   // Overriden nsIFormControl methods&#10;   NS_IMETHOD_(PRInt32) GetType() const { return NS_FORM_SELECT; }&#10;   NS_IMETHOD Reset();&#10;@@ -420,8 +445,17 @@ protected:&#10;    */&#10;   void DispatchContentReset();&#10; &#10;+  /**&#10;+   * Rebuilds the options array from scratch as a fallback in error cases.&#10;+   */&#10;+  void RebuildOptionsArray();&#10;+&#10;+#ifdef DEBUG&#10;+  void VerifyOptionsArray();&#10;+#endif&#10;+&#10;   /** The options[] array */&#10;-  nsHTMLOptionCollection* mOptions;&#10;+  nsRefPtr&lt;nsHTMLOptionCollection&gt; mOptions;&#10;   /** false if the parser is in the middle of adding children. */&#10;   PRBool    mIsDoneAddingChildren;&#10;   /** The number of non-options as children of the select */&#10;@@ -437,7 +471,7 @@ protected:&#10;    * The temporary restore state in case we try to restore before parser is&#10;    * done adding options&#10;    */&#10;-  nsSelectState* mRestoreState;&#10;+  nsRefPtr&lt;nsSelectState&gt; mRestoreState;&#10; };&#10; &#10; &#10;@@ -458,22 +492,20 @@ nsHTMLSelectElement::nsHTMLSelectElement(nsINodeInfo *aNodeInfo,&#10;     mIsDoneAddingChildren(!aFromParser),&#10;     mNonOptionChildren(0),&#10;     mOptGroupCount(0),&#10;-    mSelectedIndex(-1),&#10;-    mRestoreState(nsnull)&#10;+    mSelectedIndex(-1)&#10; {&#10;+  // FIXME: Bug 328908, set mOptions in an Init function and get rid of null&#10;+  // checks.&#10;+&#10;   // DoneAddingChildren() will be called later if it's from the parser,&#10;   // otherwise it is&#10;-&#10;-  NS_IF_ADDREF(mOptions);&#10; }&#10; &#10; nsHTMLSelectElement::~nsHTMLSelectElement()&#10; {&#10;   if (mOptions) {&#10;     mOptions-&gt;DropReference();&#10;-    NS_RELEASE(mOptions);&#10;   }&#10;-  NS_IF_RELEASE(mRestoreState);&#10; }&#10; &#10; // ISupports&#10;@@ -506,17 +538,57 @@ nsHTMLSelectElement::GetForm(nsIDOMHTMLFormElement** aForm)&#10; }&#10; &#10; nsresult&#10;-nsHTMLSelectElement::WillAddOrRemoveChild(nsIContent* aKid,&#10;-                                          PRUint32 aIndex,&#10;-                                          PRBool aRemove)&#10;+nsHTMLSelectElement::InsertChildAt(nsIContent* aKid,&#10;+                                   PRUint32 aIndex,&#10;+                                   PRBool aNotify)&#10; {&#10;-  if (aRemove) {&#10;-    WillRemoveOptions(this, aIndex);&#10;-  } else {&#10;-    WillAddOptions(aKid, this, aIndex);&#10;+  PRUint32 prevOptGroups = mOptGroupCount;&#10;+&#10;+  nsresult rv = WillAddOptions(aKid, this, aIndex);&#10;+  PRBool rebuild = NS_FAILED(rv);&#10;+&#10;+  rv = nsGenericHTMLFormElement::InsertChildAt(aKid, aIndex, aNotify);&#10;+  if (rebuild || NS_FAILED(rv)) {&#10;+    RebuildOptionsArray();&#10;+    return rv;&#10;+  }&#10;+&#10;+  if (mOptGroupCount &amp;&amp; !prevOptGroups) {&#10;+    // FIXME: Bug 328907, get rid of this event&#10;+    DispatchDOMEvent(NS_LITERAL_STRING(&quot;selectHasGroups&quot;));&#10;+  }&#10;+&#10;+#ifdef DEBUG&#10;+  VerifyOptionsArray();&#10;+#endif&#10;+&#10;+  return NS_OK;&#10;+}&#10;+&#10;+nsresult&#10;+nsHTMLSelectElement::RemoveChildAt(PRUint32 aIndex, PRBool aNotify)&#10;+{&#10;+  PRUint32 prevOptGroups = mOptGroupCount;&#10;+&#10;+  nsresult rv = WillRemoveOptions(this, aIndex);&#10;+  PRBool rebuild = NS_FAILED(rv);&#10;+&#10;+  rv = nsGenericHTMLFormElement::RemoveChildAt(aIndex, aNotify);&#10;+  if (rebuild || NS_FAILED(rv)) {&#10;+    RebuildOptionsArray();&#10;+    return rv;&#10;   }&#10; &#10;-  return nsGenericHTMLFormElement::WillAddOrRemoveChild(aKid, aIndex, aRemove);&#10;+  if (!mOptGroupCount &amp;&amp; prevOptGroups) {&#10;+    // FIXME: Bug 328907, get rid of this event&#10;+    DispatchDOMEvent(NS_LITERAL_STRING(&quot;selectHasNoGroups&quot;));&#10;+  }&#10;+&#10;+#ifdef DEBUG&#10;+  VerifyOptionsArray();&#10;+#endif&#10;+&#10;+  return NS_OK;&#10; }&#10; &#10; &#10;@@ -602,16 +674,12 @@ nsHTMLSelectElement::PrintOptions(nsIContent* aOptions, PRInt32 tabs)&#10;   }&#10; &#10;   // Recurse down into optgroups&#10;-  //&#10;-  // I *would* put a restriction in here to only search under&#10;-  // optgroups (and not, for example, &lt;P&gt;&lt;/P&gt;), but it really&#10;-  // doesn't *hurt* to search under other stuff and it's more&#10;-  // efficient in the normal only-optgroup-and-option case&#10;-  // (one less QueryInterface).&#10;-  PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10;+  if (IsOptGroup(aOptions)) {&#10;+    PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10; &#10;-  for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;-    PrintOptions(aOptions-&gt;GetChildAt(i), tabs + 1);&#10;+    for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;+      PrintOptions(aOptions-&gt;GetChildAt(i), tabs + 1);&#10;+    }&#10;   }&#10; &#10;   return NS_OK;&#10;@@ -680,7 +748,7 @@ nsHTMLSelectElement::InsertOptionsIntoListRecurse(nsIContent* aOptions,&#10; &#10;   nsCOMPtr&lt;nsIDOMHTMLOptionElement&gt; optElement(do_QueryInterface(aOptions));&#10;   if (optElement) {&#10;-    nsresult rv = mOptions-&gt;InsertElementAt(optElement, *aInsertIndex);&#10;+    nsresult rv = mOptions-&gt;InsertOptionAt(optElement, *aInsertIndex);&#10;     NS_ENSURE_SUCCESS(rv, rv);&#10;     (*aInsertIndex)++;&#10;     return NS_OK;&#10;@@ -692,24 +760,16 @@ nsHTMLSelectElement::InsertOptionsIntoListRecurse(nsIContent* aOptions,&#10;     mNonOptionChildren++;&#10;   }&#10; &#10;+  // Recurse down into optgroups&#10;   if (IsOptGroup(aOptions)) {&#10;     mOptGroupCount++;&#10;-    DispatchDOMEvent(NS_LITERAL_STRING(&quot;selectHasGroups&quot;));&#10;-  }&#10; &#10;-  // Recurse down into optgroups&#10;-  //&#10;-  // I *would* put a restriction in here to only search under&#10;-  // optgroups (and not, for example, &lt;P&gt;&lt;/P&gt;), but it really&#10;-  // doesn't *hurt* to search under other stuff and it's more&#10;-  // efficient in the normal only-optgroup-and-option case&#10;-  // (one less QueryInterface).&#10;-  PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10;-&#10;-  for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;-    nsresult rv = InsertOptionsIntoListRecurse(aOptions-&gt;GetChildAt(i),&#10;-                                               aInsertIndex, aDepth+1);&#10;-    NS_ENSURE_SUCCESS(rv, rv);&#10;+    PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10;+    for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;+      nsresult rv = InsertOptionsIntoListRecurse(aOptions-&gt;GetChildAt(i),&#10;+                                                 aInsertIndex, aDepth+1);&#10;+      NS_ENSURE_SUCCESS(rv, rv);&#10;+    }&#10;   }&#10; &#10;   return NS_OK;&#10;@@ -730,8 +790,11 @@ nsHTMLSelectElement::RemoveOptionsFromListRecurse(nsIContent* aOptions,&#10; &#10;   nsCOMPtr&lt;nsIDOMHTMLOptionElement&gt; optElement(do_QueryInterface(aOptions));&#10;   if (optElement) {&#10;-    nsresult rv = mOptions-&gt;RemoveElementAt(aRemoveIndex);&#10;-    NS_ENSURE_SUCCESS(rv, rv);&#10;+    if (mOptions-&gt;ItemAsOption(aRemoveIndex) != optElement) {&#10;+      NS_ERROR(&quot;wrong option at index&quot;);&#10;+      return NS_ERROR_UNEXPECTED;&#10;+    }&#10;+    mOptions-&gt;RemoveOptionAt(aRemoveIndex);&#10;     (*aNumRemoved)++;&#10;     return NS_OK;&#10;   }&#10;@@ -741,28 +804,18 @@ nsHTMLSelectElement::RemoveOptionsFromListRecurse(nsIContent* aOptions,&#10;     mNonOptionChildren&#45;-;&#10;   }&#10; &#10;-  if (mOptGroupCount) {&#10;-    if (IsOptGroup(aOptions)) {&#10;-      mOptGroupCount&#45;-;&#10;-      DispatchDOMEvent(NS_LITERAL_STRING(&quot;selectHasNoGroups&quot;));&#10;-    }&#10;-  }&#10;-&#10;   // Recurse down deeper for options&#10;-  //&#10;-  // I *would* put a restriction in here to only search under&#10;-  // optgroups (and not, for example, &lt;P&gt;&lt;/P&gt;), but it really&#10;-  // doesn't *hurt* to search under other stuff and it's more&#10;-  // efficient in the normal only-optgroup-and-option case&#10;-  // (one less QueryInterface).&#10;-  PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10;-&#10;-  for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;-    nsresult rv = RemoveOptionsFromListRecurse(aOptions-&gt;GetChildAt(i),&#10;-                                               aRemoveIndex,&#10;-                                               aNumRemoved,&#10;-                                               aDepth + 1);&#10;-    NS_ENSURE_SUCCESS(rv, rv);&#10;+  if (mOptGroupCount &amp;&amp; IsOptGroup(aOptions)) {&#10;+    mOptGroupCount&#45;-;&#10;+&#10;+    PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10;+    for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;+      nsresult rv = RemoveOptionsFromListRecurse(aOptions-&gt;GetChildAt(i),&#10;+                                                 aRemoveIndex,&#10;+                                                 aNumRemoved,&#10;+                                                 aDepth + 1);&#10;+      NS_ENSURE_SUCCESS(rv, rv);&#10;+    }&#10;   }&#10; &#10;   return NS_OK;&#10;@@ -818,9 +871,8 @@ NS_IMETHODIMP&#10; nsHTMLSelectElement::WillRemoveOptions(nsIContent* aParent,&#10;                                        PRInt32 aContentIndex)&#10; {&#10;-  nsresult rv = NS_OK;&#10;-&#10;   PRInt32 level = GetContentDepth(aParent);&#10;+  NS_ASSERTION(level &gt;= 0, &quot;getting notified by unexpected content&quot;);&#10;   if (level == -1) {&#10;     return NS_ERROR_FAILURE;&#10;   }&#10;@@ -838,11 +890,12 @@ nsHTMLSelectElement::WillRemoveOptions(nsIContent* aParent,&#10;       ind = GetFirstOptionIndex(currentKid);&#10;     }&#10;     if (ind != -1) {&#10;-      rv = RemoveOptionsFromList(currentKid, ind, level);&#10;+      nsresult rv = RemoveOptionsFromList(currentKid, ind, level);&#10;+      NS_ENSURE_SUCCESS(rv, rv);&#10;     }&#10;   }&#10; &#10;-  return rv;&#10;+  return NS_OK;&#10; }&#10; &#10; PRInt32&#10;@@ -1688,7 +1741,7 @@ nsHTMLSelectElement::DoneAddingChildren(PRBool aHaveNotified)&#10;   // content, restore the rest of the options proper-like&#10;   if (mRestoreState) {&#10;     RestoreStateTo(mRestoreState);&#10;-    NS_RELEASE(mRestoreState);&#10;+    mRestoreState = nsnull;&#10;   }&#10; &#10;   // Notify the frame&#10;@@ -1806,11 +1859,10 @@ nsHTMLSelectElement::HandleDOMEvent(nsPresContext* aPresContext,&#10; NS_IMETHODIMP&#10; nsHTMLSelectElement::SaveState()&#10; {&#10;-  nsSelectState* state = new nsSelectState();&#10;+  nsRefPtr&lt;nsSelectState&gt; state = new nsSelectState();&#10;   if (!state) {&#10;     return NS_ERROR_OUT_OF_MEMORY;&#10;   }&#10;-  NS_ADDREF(state);&#10; &#10;   PRUint32 len;&#10;   GetLength(&amp;len);&#10;@@ -1836,8 +1888,6 @@ nsHTMLSelectElement::SaveState()&#10;     NS_ASSERTION(NS_SUCCEEDED(rv), &quot;selecteditems set failed!&quot;);&#10;   }&#10; &#10;-  NS_RELEASE(state);&#10;-&#10;   return rv;&#10; }&#10; &#10;@@ -1877,7 +1927,6 @@ nsHTMLSelectElement::RestoreStateTo(nsSelectState* aNewSelected)&#10; {&#10;   if (!mIsDoneAddingChildren) {&#10;     mRestoreState = aNewSelected;&#10;-    NS_ADDREF(mRestoreState);&#10;     return;&#10;   }&#10; &#10;@@ -2050,6 +2099,58 @@ void nsHTMLSelectElement::DispatchContentReset() {&#10;   }&#10; }&#10; &#10;+static void&#10;+AddOptionsRecurse(nsIContent* aRoot, nsHTMLOptionCollection* aArray)&#10;+{&#10;+  nsIContent* child;&#10;+  for(PRUint32 i = 0; (child = aRoot-&gt;GetChildAt(i)); ++i) {&#10;+    nsCOMPtr&lt;nsIDOMHTMLOptionElement&gt; opt = do_QueryInterface(child);&#10;+    if (opt) {&#10;+      // If we fail here, then at least we've tried our best&#10;+      aArray-&gt;AppendOption(opt);&#10;+    }&#10;+    else if (IsOptGroup(child)) {&#10;+      AddOptionsRecurse(child, aArray);&#10;+    }&#10;+  }&#10;+}&#10;+&#10;+void&#10;+nsHTMLSelectElement::RebuildOptionsArray()&#10;+{&#10;+  mOptions-&gt;Clear();&#10;+  AddOptionsRecurse(this, mOptions);&#10;+}&#10;+&#10;+#ifdef DEBUG&#10;+&#10;+static void&#10;+VerifyOptionsRecurse(nsIContent* aRoot, PRInt32&amp; aIndex,&#10;+                     nsHTMLOptionCollection* aArray)&#10;+{&#10;+  nsIContent* child;&#10;+  for(PRUint32 i = 0; (child = aRoot-&gt;GetChildAt(i)); ++i) {&#10;+    nsCOMPtr&lt;nsIDOMHTMLOptionElement&gt; opt = do_QueryInterface(child);&#10;+    if (opt) {&#10;+      NS_ASSERTION(opt == aArray-&gt;ItemAsOption(aIndex++),&#10;+                   &quot;Options collection broken&quot;);&#10;+    }&#10;+    else if (IsOptGroup(child)) {&#10;+      VerifyOptionsRecurse(child, aIndex, aArray);&#10;+    }&#10;+  }&#10;+}&#10;+&#10;+void&#10;+nsHTMLSelectElement::VerifyOptionsArray()&#10;+{&#10;+  PRInt32 aIndex = 0;&#10;+  VerifyOptionsRecurse(this, aIndex, mOptions);&#10;+}&#10;+&#10;+&#10;+#endif&#10;+&#10; //&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10; //&#10; // nsHTMLOptionCollection implementation&#10;@@ -2216,12 +2317,6 @@ nsHTMLOptionCollection::Item(PRUint32 aIndex, nsIDOMNode** aReturn)&#10;   return NS_OK;&#10; }&#10; &#10;-nsIDOMHTMLOptionElement *&#10;-nsHTMLOptionCollection::ItemAsOption(PRInt32 aIndex)&#10;-{&#10;-  return mElements.SafeObjectAt(aIndex);&#10;-}&#10;-&#10; NS_IMETHODIMP&#10; nsHTMLOptionCollection::NamedItem(const nsAString&amp; aName,&#10;                                   nsIDOMNode** aReturn)&#10;@@ -2255,16 +2350,3 @@ nsHTMLOptionCollection::GetSelect(nsIDOMHTMLSelectElement **aReturn)&#10;   NS_IF_ADDREF(*aReturn = mSelect);&#10;   return NS_OK;&#10; }&#10;-&#10;-nsresult&#10;-nsHTMLOptionCollection::InsertElementAt(nsIDOMHTMLOptionElement* aOption,&#10;-                                        PRInt32 aIndex)&#10;-{&#10;-  return mElements.InsertObjectAt(aOption, aIndex);&#10;-}&#10;-&#10;-nsresult&#10;-nsHTMLOptionCollection::RemoveElementAt(PRInt32 aIndex)&#10;-{&#10;-  return mElements.RemoveObjectAt(aIndex);&#10;-}&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- xpcom/glue/nsCOMArray.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 37c3af8..fa07084 100644&#10;@@ -134,11 +134,14 @@ nsCOMArray_base::RemoveObject(nsISupports *aObject)&#10; PRBool&#10; nsCOMArray_base::RemoveObjectAt(PRInt32 aIndex)&#10; {&#10;-    nsISupports* element = ObjectAt(aIndex);&#10;-    PRBool result = mArray.RemoveElementAt(aIndex);&#10;-    if (result)&#10;+    if (PRUint32(aIndex) &lt; PRUint32(Count())) {&#10;+        nsISupports* element = ObjectAt(aIndex);&#10;         NS_IF_RELEASE(element);&#10;-    return result;&#10;+&#10;+        return mArray.RemoveElementAt(aIndex);&#10;+    }&#10;+&#10;+    return PR_FALSE;&#10; }&#10; &#10; // useful for destructors&#10;</Data></Cell>
    <Cell ss:StyleID="s69"><Data ss:Type="String">2006-03-02 08:21:20    Backing out fix for bug 324918 so that &lt;select&gt; actually works again.&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/html/content/src/nsHTMLSelectElement.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index ca0a2c0..96bf6b7 100644&#10;@@ -117,45 +117,18 @@ public:&#10;    * @param aOption the option to insert&#10;    * @param aIndex the index to insert at&#10;    */&#10;-  PRBool InsertOptionAt(nsIDOMHTMLOptionElement* aOption, PRInt32 aIndex)&#10;-  {&#10;-    return mElements.InsertObjectAt(aOption, aIndex);&#10;-  }&#10;-&#10;+  nsresult InsertElementAt(nsIDOMHTMLOptionElement* aOption, PRInt32 aIndex);&#10;   /**&#10;    * Remove an option&#10;    * @param aIndex the index of the option to remove&#10;    */&#10;-  void RemoveOptionAt(PRInt32 aIndex)&#10;-  {&#10;-    mElements.RemoveObjectAt(aIndex);&#10;-  }&#10;-&#10;+  nsresult RemoveElementAt(PRInt32 aIndex);&#10;   /**&#10;    * Get the option at the index&#10;    * @param aIndex the index&#10;    * @param aReturn the option returned [OUT]&#10;    */&#10;-  nsIDOMHTMLOptionElement *ItemAsOption(PRInt32 aIndex)&#10;-  {&#10;-    return mElements.SafeObjectAt(aIndex);&#10;-  }&#10;-&#10;-  /**&#10;-   * Clears out all options&#10;-   */&#10;-  void Clear()&#10;-  {&#10;-    mElements.Clear();&#10;-  }&#10;-&#10;-  /**&#10;-   * Append an option to end of array&#10;-   */&#10;-  PRBool AppendOption(nsIDOMHTMLOptionElement* aOption)&#10;-  {&#10;-    return mElements.AppendObject(aOption);&#10;-  }&#10;+  nsIDOMHTMLOptionElement *ItemAsOption(PRInt32 aIndex);&#10; &#10;   /**&#10;    * Drop the reference to the select.  Called during select destruction.&#10;@@ -256,10 +229,12 @@ public:&#10; &#10;   virtual void SetFocus(nsPresContext* aPresContext);&#10;   virtual PRBool IsFocusable(PRInt32 *aTabIndex = nsnull);&#10;-  virtual nsresult InsertChildAt(nsIContent* aKid, PRUint32 aIndex,&#10;-                                 PRBool aNotify);&#10;-  virtual nsresult RemoveChildAt(PRUint32 aIndex, PRBool aNotify);&#10; &#10;+  // nsGenericElement&#10;+  virtual nsresult WillAddOrRemoveChild(nsIContent* aKid,&#10;+                                        PRUint32 aIndex,&#10;+                                        PRBool aRemove);&#10;+  &#10;   // Overriden nsIFormControl methods&#10;   NS_IMETHOD_(PRInt32) GetType() const { return NS_FORM_SELECT; }&#10;   NS_IMETHOD Reset();&#10;@@ -445,17 +420,8 @@ protected:&#10;    */&#10;   void DispatchContentReset();&#10; &#10;-  /**&#10;-   * Rebuilds the options array from scratch as a fallback in error cases.&#10;-   */&#10;-  void RebuildOptionsArray();&#10;-&#10;-#ifdef DEBUG&#10;-  void VerifyOptionsArray();&#10;-#endif&#10;-&#10;   /** The options[] array */&#10;-  nsRefPtr&lt;nsHTMLOptionCollection&gt; mOptions;&#10;+  nsHTMLOptionCollection* mOptions;&#10;   /** false if the parser is in the middle of adding children. */&#10;   PRBool    mIsDoneAddingChildren;&#10;   /** The number of non-options as children of the select */&#10;@@ -471,7 +437,7 @@ protected:&#10;    * The temporary restore state in case we try to restore before parser is&#10;    * done adding options&#10;    */&#10;-  nsRefPtr&lt;nsSelectState&gt; mRestoreState;&#10;+  nsSelectState* mRestoreState;&#10; };&#10; &#10; &#10;@@ -492,20 +458,22 @@ nsHTMLSelectElement::nsHTMLSelectElement(nsINodeInfo *aNodeInfo,&#10;     mIsDoneAddingChildren(!aFromParser),&#10;     mNonOptionChildren(0),&#10;     mOptGroupCount(0),&#10;-    mSelectedIndex(-1)&#10;+    mSelectedIndex(-1),&#10;+    mRestoreState(nsnull)&#10; {&#10;-  // FIXME: Bug 328908, set mOptions in an Init function and get rid of null&#10;-  // checks.&#10;-&#10;   // DoneAddingChildren() will be called later if it's from the parser,&#10;   // otherwise it is&#10;+&#10;+  NS_IF_ADDREF(mOptions);&#10; }&#10; &#10; nsHTMLSelectElement::~nsHTMLSelectElement()&#10; {&#10;   if (mOptions) {&#10;     mOptions-&gt;DropReference();&#10;+    NS_RELEASE(mOptions);&#10;   }&#10;+  NS_IF_RELEASE(mRestoreState);&#10; }&#10; &#10; // ISupports&#10;@@ -538,57 +506,17 @@ nsHTMLSelectElement::GetForm(nsIDOMHTMLFormElement** aForm)&#10; }&#10; &#10; nsresult&#10;-nsHTMLSelectElement::InsertChildAt(nsIContent* aKid,&#10;-                                   PRUint32 aIndex,&#10;-                                   PRBool aNotify)&#10;-{&#10;-  PRUint32 prevOptGroups = mOptGroupCount;&#10;-&#10;-  nsresult rv = WillAddOptions(aKid, this, aIndex);&#10;-  PRBool rebuild = NS_FAILED(rv);&#10;-&#10;-  rv = nsGenericHTMLFormElement::InsertChildAt(aKid, aIndex, aNotify);&#10;-  if (rebuild || NS_FAILED(rv)) {&#10;-    RebuildOptionsArray();&#10;-    return rv;&#10;-  }&#10;-&#10;-  if (mOptGroupCount &amp;&amp; !prevOptGroups) {&#10;-    // FIXME: Bug 328907, get rid of this event&#10;-    DispatchDOMEvent(NS_LITERAL_STRING(&quot;selectHasGroups&quot;));&#10;-  }&#10;-&#10;-#ifdef DEBUG&#10;-  VerifyOptionsArray();&#10;-#endif&#10;-&#10;-  return NS_OK;&#10;-}&#10;-&#10;-nsresult&#10;-nsHTMLSelectElement::RemoveChildAt(PRUint32 aIndex, PRBool aNotify)&#10;+nsHTMLSelectElement::WillAddOrRemoveChild(nsIContent* aKid,&#10;+                                          PRUint32 aIndex,&#10;+                                          PRBool aRemove)&#10; {&#10;-  PRUint32 prevOptGroups = mOptGroupCount;&#10;-&#10;-  nsresult rv = WillRemoveOptions(this, aIndex);&#10;-  PRBool rebuild = NS_FAILED(rv);&#10;-&#10;-  rv = nsGenericHTMLFormElement::RemoveChildAt(aIndex, aNotify);&#10;-  if (rebuild || NS_FAILED(rv)) {&#10;-    RebuildOptionsArray();&#10;-    return rv;&#10;-  }&#10;-&#10;-  if (!mOptGroupCount &amp;&amp; prevOptGroups) {&#10;-    // FIXME: Bug 328907, get rid of this event&#10;-    DispatchDOMEvent(NS_LITERAL_STRING(&quot;selectHasNoGroups&quot;));&#10;+  if (aRemove) {&#10;+    WillRemoveOptions(this, aIndex);&#10;+  } else {&#10;+    WillAddOptions(aKid, this, aIndex);&#10;   }&#10; &#10;-#ifdef DEBUG&#10;-  VerifyOptionsArray();&#10;-#endif&#10;-&#10;-  return NS_OK;&#10;+  return nsGenericHTMLFormElement::WillAddOrRemoveChild(aKid, aIndex, aRemove);&#10; }&#10; &#10; &#10;@@ -674,12 +602,16 @@ nsHTMLSelectElement::PrintOptions(nsIContent* aOptions, PRInt32 tabs)&#10;   }&#10; &#10;   // Recurse down into optgroups&#10;-  if (IsOptGroup(aOptions)) {&#10;-    PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10;+  //&#10;+  // I *would* put a restriction in here to only search under&#10;+  // optgroups (and not, for example, &lt;P&gt;&lt;/P&gt;), but it really&#10;+  // doesn't *hurt* to search under other stuff and it's more&#10;+  // efficient in the normal only-optgroup-and-option case&#10;+  // (one less QueryInterface).&#10;+  PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10; &#10;-    for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;-      PrintOptions(aOptions-&gt;GetChildAt(i), tabs + 1);&#10;-    }&#10;+  for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;+    PrintOptions(aOptions-&gt;GetChildAt(i), tabs + 1);&#10;   }&#10; &#10;   return NS_OK;&#10;@@ -748,7 +680,7 @@ nsHTMLSelectElement::InsertOptionsIntoListRecurse(nsIContent* aOptions,&#10; &#10;   nsCOMPtr&lt;nsIDOMHTMLOptionElement&gt; optElement(do_QueryInterface(aOptions));&#10;   if (optElement) {&#10;-    nsresult rv = mOptions-&gt;InsertOptionAt(optElement, *aInsertIndex);&#10;+    nsresult rv = mOptions-&gt;InsertElementAt(optElement, *aInsertIndex);&#10;     NS_ENSURE_SUCCESS(rv, rv);&#10;     (*aInsertIndex)++;&#10;     return NS_OK;&#10;@@ -760,16 +692,24 @@ nsHTMLSelectElement::InsertOptionsIntoListRecurse(nsIContent* aOptions,&#10;     mNonOptionChildren++;&#10;   }&#10; &#10;-  // Recurse down into optgroups&#10;   if (IsOptGroup(aOptions)) {&#10;     mOptGroupCount++;&#10;+    DispatchDOMEvent(NS_LITERAL_STRING(&quot;selectHasGroups&quot;));&#10;+  }&#10; &#10;-    PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10;-    for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;-      nsresult rv = InsertOptionsIntoListRecurse(aOptions-&gt;GetChildAt(i),&#10;-                                                 aInsertIndex, aDepth+1);&#10;-      NS_ENSURE_SUCCESS(rv, rv);&#10;-    }&#10;+  // Recurse down into optgroups&#10;+  //&#10;+  // I *would* put a restriction in here to only search under&#10;+  // optgroups (and not, for example, &lt;P&gt;&lt;/P&gt;), but it really&#10;+  // doesn't *hurt* to search under other stuff and it's more&#10;+  // efficient in the normal only-optgroup-and-option case&#10;+  // (one less QueryInterface).&#10;+  PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10;+&#10;+  for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;+    nsresult rv = InsertOptionsIntoListRecurse(aOptions-&gt;GetChildAt(i),&#10;+                                               aInsertIndex, aDepth+1);&#10;+    NS_ENSURE_SUCCESS(rv, rv);&#10;   }&#10; &#10;   return NS_OK;&#10;@@ -790,11 +730,8 @@ nsHTMLSelectElement::RemoveOptionsFromListRecurse(nsIContent* aOptions,&#10; &#10;   nsCOMPtr&lt;nsIDOMHTMLOptionElement&gt; optElement(do_QueryInterface(aOptions));&#10;   if (optElement) {&#10;-    if (mOptions-&gt;ItemAsOption(aRemoveIndex) != optElement) {&#10;-      NS_ERROR(&quot;wrong option at index&quot;);&#10;-      return NS_ERROR_UNEXPECTED;&#10;-    }&#10;-    mOptions-&gt;RemoveOptionAt(aRemoveIndex);&#10;+    nsresult rv = mOptions-&gt;RemoveElementAt(aRemoveIndex);&#10;+    NS_ENSURE_SUCCESS(rv, rv);&#10;     (*aNumRemoved)++;&#10;     return NS_OK;&#10;   }&#10;@@ -804,20 +741,30 @@ nsHTMLSelectElement::RemoveOptionsFromListRecurse(nsIContent* aOptions,&#10;     mNonOptionChildren&#45;-;&#10;   }&#10; &#10;-  // Recurse down deeper for options&#10;-  if (mOptGroupCount &amp;&amp; IsOptGroup(aOptions)) {&#10;-    mOptGroupCount&#45;-;&#10;-&#10;-    PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10;-    for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;-      nsresult rv = RemoveOptionsFromListRecurse(aOptions-&gt;GetChildAt(i),&#10;-                                                 aRemoveIndex,&#10;-                                                 aNumRemoved,&#10;-                                                 aDepth + 1);&#10;-      NS_ENSURE_SUCCESS(rv, rv);&#10;+  if (mOptGroupCount) {&#10;+    if (IsOptGroup(aOptions)) {&#10;+      mOptGroupCount&#45;-;&#10;+      DispatchDOMEvent(NS_LITERAL_STRING(&quot;selectHasNoGroups&quot;));&#10;     }&#10;   }&#10; &#10;+  // Recurse down deeper for options&#10;+  //&#10;+  // I *would* put a restriction in here to only search under&#10;+  // optgroups (and not, for example, &lt;P&gt;&lt;/P&gt;), but it really&#10;+  // doesn't *hurt* to search under other stuff and it's more&#10;+  // efficient in the normal only-optgroup-and-option case&#10;+  // (one less QueryInterface).&#10;+  PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10;+&#10;+  for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;+    nsresult rv = RemoveOptionsFromListRecurse(aOptions-&gt;GetChildAt(i),&#10;+                                               aRemoveIndex,&#10;+                                               aNumRemoved,&#10;+                                               aDepth + 1);&#10;+    NS_ENSURE_SUCCESS(rv, rv);&#10;+  }&#10;+&#10;   return NS_OK;&#10; }&#10; &#10;@@ -871,8 +818,9 @@ NS_IMETHODIMP&#10; nsHTMLSelectElement::WillRemoveOptions(nsIContent* aParent,&#10;                                        PRInt32 aContentIndex)&#10; {&#10;+  nsresult rv = NS_OK;&#10;+&#10;   PRInt32 level = GetContentDepth(aParent);&#10;-  NS_ASSERTION(level &gt;= 0, &quot;getting notified by unexpected content&quot;);&#10;   if (level == -1) {&#10;     return NS_ERROR_FAILURE;&#10;   }&#10;@@ -890,12 +838,11 @@ nsHTMLSelectElement::WillRemoveOptions(nsIContent* aParent,&#10;       ind = GetFirstOptionIndex(currentKid);&#10;     }&#10;     if (ind != -1) {&#10;-      nsresult rv = RemoveOptionsFromList(currentKid, ind, level);&#10;-      NS_ENSURE_SUCCESS(rv, rv);&#10;+      rv = RemoveOptionsFromList(currentKid, ind, level);&#10;     }&#10;   }&#10; &#10;-  return NS_OK;&#10;+  return rv;&#10; }&#10; &#10; PRInt32&#10;@@ -1741,7 +1688,7 @@ nsHTMLSelectElement::DoneAddingChildren(PRBool aHaveNotified)&#10;   // content, restore the rest of the options proper-like&#10;   if (mRestoreState) {&#10;     RestoreStateTo(mRestoreState);&#10;-    mRestoreState = nsnull;&#10;+    NS_RELEASE(mRestoreState);&#10;   }&#10; &#10;   // Notify the frame&#10;@@ -1859,10 +1806,11 @@ nsHTMLSelectElement::HandleDOMEvent(nsPresContext* aPresContext,&#10; NS_IMETHODIMP&#10; nsHTMLSelectElement::SaveState()&#10; {&#10;-  nsRefPtr&lt;nsSelectState&gt; state = new nsSelectState();&#10;+  nsSelectState* state = new nsSelectState();&#10;   if (!state) {&#10;     return NS_ERROR_OUT_OF_MEMORY;&#10;   }&#10;+  NS_ADDREF(state);&#10; &#10;   PRUint32 len;&#10;   GetLength(&amp;len);&#10;@@ -1888,6 +1836,8 @@ nsHTMLSelectElement::SaveState()&#10;     NS_ASSERTION(NS_SUCCEEDED(rv), &quot;selecteditems set failed!&quot;);&#10;   }&#10; &#10;+  NS_RELEASE(state);&#10;+&#10;   return rv;&#10; }&#10; &#10;@@ -1927,6 +1877,7 @@ nsHTMLSelectElement::RestoreStateTo(nsSelectState* aNewSelected)&#10; {&#10;   if (!mIsDoneAddingChildren) {&#10;     mRestoreState = aNewSelected;&#10;+    NS_ADDREF(mRestoreState);&#10;     return;&#10;   }&#10; &#10;@@ -2099,58 +2050,6 @@ void nsHTMLSelectElement::DispatchContentReset() {&#10;   }&#10; }&#10; &#10;-static void&#10;-AddOptionsRecurse(nsIContent* aRoot, nsHTMLOptionCollection* aArray)&#10;-{&#10;-  nsIContent* child;&#10;-  for(PRUint32 i = 0; (child = aRoot-&gt;GetChildAt(i)); ++i) {&#10;-    nsCOMPtr&lt;nsIDOMHTMLOptionElement&gt; opt = do_QueryInterface(child);&#10;-    if (opt) {&#10;-      // If we fail here, then at least we've tried our best&#10;-      aArray-&gt;AppendOption(opt);&#10;-    }&#10;-    else if (IsOptGroup(child)) {&#10;-      AddOptionsRecurse(child, aArray);&#10;-    }&#10;-  }&#10;-}&#10;-&#10;-void&#10;-nsHTMLSelectElement::RebuildOptionsArray()&#10;-{&#10;-  mOptions-&gt;Clear();&#10;-  AddOptionsRecurse(this, mOptions);&#10;-}&#10;-&#10;-#ifdef DEBUG&#10;-&#10;-static void&#10;-VerifyOptionsRecurse(nsIContent* aRoot, PRInt32&amp; aIndex,&#10;-                     nsHTMLOptionCollection* aArray)&#10;-{&#10;-  nsIContent* child;&#10;-  for(PRUint32 i = 0; (child = aRoot-&gt;GetChildAt(i)); ++i) {&#10;-    nsCOMPtr&lt;nsIDOMHTMLOptionElement&gt; opt = do_QueryInterface(child);&#10;-    if (opt) {&#10;-      NS_ASSERTION(opt == aArray-&gt;ItemAsOption(aIndex++),&#10;-                   &quot;Options collection broken&quot;);&#10;-    }&#10;-    else if (IsOptGroup(child)) {&#10;-      VerifyOptionsRecurse(child, aIndex, aArray);&#10;-    }&#10;-  }&#10;-}&#10;-&#10;-void&#10;-nsHTMLSelectElement::VerifyOptionsArray()&#10;-{&#10;-  PRInt32 aIndex = 0;&#10;-  VerifyOptionsRecurse(this, aIndex, mOptions);&#10;-}&#10;-&#10;-&#10;-#endif&#10;-&#10; //&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10; //&#10; // nsHTMLOptionCollection implementation&#10;@@ -2317,6 +2216,12 @@ nsHTMLOptionCollection::Item(PRUint32 aIndex, nsIDOMNode** aReturn)&#10;   return NS_OK;&#10; }&#10; &#10;+nsIDOMHTMLOptionElement *&#10;+nsHTMLOptionCollection::ItemAsOption(PRInt32 aIndex)&#10;+{&#10;+  return mElements.SafeObjectAt(aIndex);&#10;+}&#10;+&#10; NS_IMETHODIMP&#10; nsHTMLOptionCollection::NamedItem(const nsAString&amp; aName,&#10;                                   nsIDOMNode** aReturn)&#10;@@ -2350,3 +2255,16 @@ nsHTMLOptionCollection::GetSelect(nsIDOMHTMLSelectElement **aReturn)&#10;   NS_IF_ADDREF(*aReturn = mSelect);&#10;   return NS_OK;&#10; }&#10;+&#10;+nsresult&#10;+nsHTMLOptionCollection::InsertElementAt(nsIDOMHTMLOptionElement* aOption,&#10;+                                        PRInt32 aIndex)&#10;+{&#10;+  return mElements.InsertObjectAt(aOption, aIndex);&#10;+}&#10;+&#10;+nsresult&#10;+nsHTMLOptionCollection::RemoveElementAt(PRInt32 aIndex)&#10;+{&#10;+  return mElements.RemoveObjectAt(aIndex);&#10;+}</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">2006-03-03 05:30:23   Reland bug 324918 with fixes for regressions. r/sr=bz for the additional fixes&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/html/content/src/nsHTMLSelectElement.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 96bf6b7..440b3aa 100644&#10;@@ -117,18 +117,45 @@ public:&#10;    * @param aOption the option to insert&#10;    * @param aIndex the index to insert at&#10;    */&#10;-  nsresult InsertElementAt(nsIDOMHTMLOptionElement* aOption, PRInt32 aIndex);&#10;+  PRBool InsertOptionAt(nsIDOMHTMLOptionElement* aOption, PRInt32 aIndex)&#10;+  {&#10;+    return mElements.InsertObjectAt(aOption, aIndex);&#10;+  }&#10;+&#10;   /**&#10;    * Remove an option&#10;    * @param aIndex the index of the option to remove&#10;    */&#10;-  nsresult RemoveElementAt(PRInt32 aIndex);&#10;+  void RemoveOptionAt(PRInt32 aIndex)&#10;+  {&#10;+    mElements.RemoveObjectAt(aIndex);&#10;+  }&#10;+&#10;   /**&#10;    * Get the option at the index&#10;    * @param aIndex the index&#10;    * @param aReturn the option returned [OUT]&#10;    */&#10;-  nsIDOMHTMLOptionElement *ItemAsOption(PRInt32 aIndex);&#10;+  nsIDOMHTMLOptionElement *ItemAsOption(PRInt32 aIndex)&#10;+  {&#10;+    return mElements.SafeObjectAt(aIndex);&#10;+  }&#10;+&#10;+  /**&#10;+   * Clears out all options&#10;+   */&#10;+  void Clear()&#10;+  {&#10;+    mElements.Clear();&#10;+  }&#10;+&#10;+  /**&#10;+   * Append an option to end of array&#10;+   */&#10;+  PRBool AppendOption(nsIDOMHTMLOptionElement* aOption)&#10;+  {&#10;+    return mElements.AppendObject(aOption);&#10;+  }&#10; &#10;   /**&#10;    * Drop the reference to the select.  Called during select destruction.&#10;@@ -229,12 +256,11 @@ public:&#10; &#10;   virtual void SetFocus(nsPresContext* aPresContext);&#10;   virtual PRBool IsFocusable(PRInt32 *aTabIndex = nsnull);&#10;+  virtual nsresult InsertChildAt(nsIContent* aKid, PRUint32 aIndex,&#10;+                                 PRBool aNotify);&#10;+  virtual nsresult AppendChildTo(nsIContent* aKid, PRBool aNotify);&#10;+  virtual nsresult RemoveChildAt(PRUint32 aIndex, PRBool aNotify);&#10; &#10;-  // nsGenericElement&#10;-  virtual nsresult WillAddOrRemoveChild(nsIContent* aKid,&#10;-                                        PRUint32 aIndex,&#10;-                                        PRBool aRemove);&#10;-  &#10;   // Overriden nsIFormControl methods&#10;   NS_IMETHOD_(PRInt32) GetType() const { return NS_FORM_SELECT; }&#10;   NS_IMETHOD Reset();&#10;@@ -420,8 +446,17 @@ protected:&#10;    */&#10;   void DispatchContentReset();&#10; &#10;+  /**&#10;+   * Rebuilds the options array from scratch as a fallback in error cases.&#10;+   */&#10;+  void RebuildOptionsArray();&#10;+&#10;+#ifdef DEBUG&#10;+  void VerifyOptionsArray();&#10;+#endif&#10;+&#10;   /** The options[] array */&#10;-  nsHTMLOptionCollection* mOptions;&#10;+  nsRefPtr&lt;nsHTMLOptionCollection&gt; mOptions;&#10;   /** false if the parser is in the middle of adding children. */&#10;   PRBool    mIsDoneAddingChildren;&#10;   /** The number of non-options as children of the select */&#10;@@ -437,7 +472,7 @@ protected:&#10;    * The temporary restore state in case we try to restore before parser is&#10;    * done adding options&#10;    */&#10;-  nsSelectState* mRestoreState;&#10;+  nsRefPtr&lt;nsSelectState&gt; mRestoreState;&#10; };&#10; &#10; &#10;@@ -458,22 +493,20 @@ nsHTMLSelectElement::nsHTMLSelectElement(nsINodeInfo *aNodeInfo,&#10;     mIsDoneAddingChildren(!aFromParser),&#10;     mNonOptionChildren(0),&#10;     mOptGroupCount(0),&#10;-    mSelectedIndex(-1),&#10;-    mRestoreState(nsnull)&#10;+    mSelectedIndex(-1)&#10; {&#10;+  // FIXME: Bug 328908, set mOptions in an Init function and get rid of null&#10;+  // checks.&#10;+&#10;   // DoneAddingChildren() will be called later if it's from the parser,&#10;   // otherwise it is&#10;-&#10;-  NS_IF_ADDREF(mOptions);&#10; }&#10; &#10; nsHTMLSelectElement::~nsHTMLSelectElement()&#10; {&#10;   if (mOptions) {&#10;     mOptions-&gt;DropReference();&#10;-    NS_RELEASE(mOptions);&#10;   }&#10;-  NS_IF_RELEASE(mRestoreState);&#10; }&#10; &#10; // ISupports&#10;@@ -506,17 +539,63 @@ nsHTMLSelectElement::GetForm(nsIDOMHTMLFormElement** aForm)&#10; }&#10; &#10; nsresult&#10;-nsHTMLSelectElement::WillAddOrRemoveChild(nsIContent* aKid,&#10;-                                          PRUint32 aIndex,&#10;-                                          PRBool aRemove)&#10;+nsHTMLSelectElement::InsertChildAt(nsIContent* aKid,&#10;+                                   PRUint32 aIndex,&#10;+                                   PRBool aNotify)&#10; {&#10;-  if (aRemove) {&#10;-    WillRemoveOptions(this, aIndex);&#10;-  } else {&#10;-    WillAddOptions(aKid, this, aIndex);&#10;+  PRUint32 prevOptGroups = mOptGroupCount;&#10;+&#10;+  nsresult rv = WillAddOptions(aKid, this, aIndex);&#10;+  PRBool rebuild = NS_FAILED(rv);&#10;+&#10;+  rv = nsGenericHTMLFormElement::InsertChildAt(aKid, aIndex, aNotify);&#10;+  if (rebuild || NS_FAILED(rv)) {&#10;+    RebuildOptionsArray();&#10;+    return rv;&#10;+  }&#10;+&#10;+  if (mOptGroupCount &amp;&amp; !prevOptGroups) {&#10;+    // FIXME: Bug 328907, get rid of this event&#10;+    DispatchDOMEvent(NS_LITERAL_STRING(&quot;selectHasGroups&quot;));&#10;   }&#10; &#10;-  return nsGenericHTMLFormElement::WillAddOrRemoveChild(aKid, aIndex, aRemove);&#10;+#ifdef DEBUG&#10;+  VerifyOptionsArray();&#10;+#endif&#10;+&#10;+  return NS_OK;&#10;+}&#10;+&#10;+nsresult&#10;+nsHTMLSelectElement::AppendChildTo(nsIContent* aKid, PRBool aNotify)&#10;+{&#10;+  return InsertChildAt(aKid, GetChildCount(), aNotify);&#10;+}&#10;+&#10;+nsresult&#10;+nsHTMLSelectElement::RemoveChildAt(PRUint32 aIndex, PRBool aNotify)&#10;+{&#10;+  PRUint32 prevOptGroups = mOptGroupCount;&#10;+&#10;+  nsresult rv = WillRemoveOptions(this, aIndex);&#10;+  PRBool rebuild = NS_FAILED(rv);&#10;+&#10;+  rv = nsGenericHTMLFormElement::RemoveChildAt(aIndex, aNotify);&#10;+  if (rebuild || NS_FAILED(rv)) {&#10;+    RebuildOptionsArray();&#10;+    return rv;&#10;+  }&#10;+&#10;+  if (!mOptGroupCount &amp;&amp; prevOptGroups) {&#10;+    // FIXME: Bug 328907, get rid of this event&#10;+    DispatchDOMEvent(NS_LITERAL_STRING(&quot;selectHasNoGroups&quot;));&#10;+  }&#10;+&#10;+#ifdef DEBUG&#10;+  VerifyOptionsArray();&#10;+#endif&#10;+&#10;+  return NS_OK;&#10; }&#10; &#10; &#10;@@ -602,16 +681,12 @@ nsHTMLSelectElement::PrintOptions(nsIContent* aOptions, PRInt32 tabs)&#10;   }&#10; &#10;   // Recurse down into optgroups&#10;-  //&#10;-  // I *would* put a restriction in here to only search under&#10;-  // optgroups (and not, for example, &lt;P&gt;&lt;/P&gt;), but it really&#10;-  // doesn't *hurt* to search under other stuff and it's more&#10;-  // efficient in the normal only-optgroup-and-option case&#10;-  // (one less QueryInterface).&#10;-  PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10;+  if (IsOptGroup(aOptions)) {&#10;+    PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10; &#10;-  for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;-    PrintOptions(aOptions-&gt;GetChildAt(i), tabs + 1);&#10;+    for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;+      PrintOptions(aOptions-&gt;GetChildAt(i), tabs + 1);&#10;+    }&#10;   }&#10; &#10;   return NS_OK;&#10;@@ -680,7 +755,7 @@ nsHTMLSelectElement::InsertOptionsIntoListRecurse(nsIContent* aOptions,&#10; &#10;   nsCOMPtr&lt;nsIDOMHTMLOptionElement&gt; optElement(do_QueryInterface(aOptions));&#10;   if (optElement) {&#10;-    nsresult rv = mOptions-&gt;InsertElementAt(optElement, *aInsertIndex);&#10;+    nsresult rv = mOptions-&gt;InsertOptionAt(optElement, *aInsertIndex);&#10;     NS_ENSURE_SUCCESS(rv, rv);&#10;     (*aInsertIndex)++;&#10;     return NS_OK;&#10;@@ -692,24 +767,16 @@ nsHTMLSelectElement::InsertOptionsIntoListRecurse(nsIContent* aOptions,&#10;     mNonOptionChildren++;&#10;   }&#10; &#10;+  // Recurse down into optgroups&#10;   if (IsOptGroup(aOptions)) {&#10;     mOptGroupCount++;&#10;-    DispatchDOMEvent(NS_LITERAL_STRING(&quot;selectHasGroups&quot;));&#10;-  }&#10; &#10;-  // Recurse down into optgroups&#10;-  //&#10;-  // I *would* put a restriction in here to only search under&#10;-  // optgroups (and not, for example, &lt;P&gt;&lt;/P&gt;), but it really&#10;-  // doesn't *hurt* to search under other stuff and it's more&#10;-  // efficient in the normal only-optgroup-and-option case&#10;-  // (one less QueryInterface).&#10;-  PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10;-&#10;-  for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;-    nsresult rv = InsertOptionsIntoListRecurse(aOptions-&gt;GetChildAt(i),&#10;-                                               aInsertIndex, aDepth+1);&#10;-    NS_ENSURE_SUCCESS(rv, rv);&#10;+    PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10;+    for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;+      nsresult rv = InsertOptionsIntoListRecurse(aOptions-&gt;GetChildAt(i),&#10;+                                                 aInsertIndex, aDepth+1);&#10;+      NS_ENSURE_SUCCESS(rv, rv);&#10;+    }&#10;   }&#10; &#10;   return NS_OK;&#10;@@ -730,8 +797,11 @@ nsHTMLSelectElement::RemoveOptionsFromListRecurse(nsIContent* aOptions,&#10; &#10;   nsCOMPtr&lt;nsIDOMHTMLOptionElement&gt; optElement(do_QueryInterface(aOptions));&#10;   if (optElement) {&#10;-    nsresult rv = mOptions-&gt;RemoveElementAt(aRemoveIndex);&#10;-    NS_ENSURE_SUCCESS(rv, rv);&#10;+    if (mOptions-&gt;ItemAsOption(aRemoveIndex) != optElement) {&#10;+      NS_ERROR(&quot;wrong option at index&quot;);&#10;+      return NS_ERROR_UNEXPECTED;&#10;+    }&#10;+    mOptions-&gt;RemoveOptionAt(aRemoveIndex);&#10;     (*aNumRemoved)++;&#10;     return NS_OK;&#10;   }&#10;@@ -741,28 +811,18 @@ nsHTMLSelectElement::RemoveOptionsFromListRecurse(nsIContent* aOptions,&#10;     mNonOptionChildren&#45;-;&#10;   }&#10; &#10;-  if (mOptGroupCount) {&#10;-    if (IsOptGroup(aOptions)) {&#10;-      mOptGroupCount&#45;-;&#10;-      DispatchDOMEvent(NS_LITERAL_STRING(&quot;selectHasNoGroups&quot;));&#10;-    }&#10;-  }&#10;-&#10;   // Recurse down deeper for options&#10;-  //&#10;-  // I *would* put a restriction in here to only search under&#10;-  // optgroups (and not, for example, &lt;P&gt;&lt;/P&gt;), but it really&#10;-  // doesn't *hurt* to search under other stuff and it's more&#10;-  // efficient in the normal only-optgroup-and-option case&#10;-  // (one less QueryInterface).&#10;-  PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10;-&#10;-  for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;-    nsresult rv = RemoveOptionsFromListRecurse(aOptions-&gt;GetChildAt(i),&#10;-                                               aRemoveIndex,&#10;-                                               aNumRemoved,&#10;-                                               aDepth + 1);&#10;-    NS_ENSURE_SUCCESS(rv, rv);&#10;+  if (mOptGroupCount &amp;&amp; IsOptGroup(aOptions)) {&#10;+    mOptGroupCount&#45;-;&#10;+&#10;+    PRUint32 numChildren = aOptions-&gt;GetChildCount();&#10;+    for (PRUint32 i = 0; i &lt; numChildren; ++i) {&#10;+      nsresult rv = RemoveOptionsFromListRecurse(aOptions-&gt;GetChildAt(i),&#10;+                                                 aRemoveIndex,&#10;+                                                 aNumRemoved,&#10;+                                                 aDepth + 1);&#10;+      NS_ENSURE_SUCCESS(rv, rv);&#10;+    }&#10;   }&#10; &#10;   return NS_OK;&#10;@@ -818,9 +878,8 @@ NS_IMETHODIMP&#10; nsHTMLSelectElement::WillRemoveOptions(nsIContent* aParent,&#10;                                        PRInt32 aContentIndex)&#10; {&#10;-  nsresult rv = NS_OK;&#10;-&#10;   PRInt32 level = GetContentDepth(aParent);&#10;+  NS_ASSERTION(level &gt;= 0, &quot;getting notified by unexpected content&quot;);&#10;   if (level == -1) {&#10;     return NS_ERROR_FAILURE;&#10;   }&#10;@@ -838,11 +897,12 @@ nsHTMLSelectElement::WillRemoveOptions(nsIContent* aParent,&#10;       ind = GetFirstOptionIndex(currentKid);&#10;     }&#10;     if (ind != -1) {&#10;-      rv = RemoveOptionsFromList(currentKid, ind, level);&#10;+      nsresult rv = RemoveOptionsFromList(currentKid, ind, level);&#10;+      NS_ENSURE_SUCCESS(rv, rv);&#10;     }&#10;   }&#10; &#10;-  return rv;&#10;+  return NS_OK;&#10; }&#10; &#10; PRInt32&#10;@@ -1688,7 +1748,7 @@ nsHTMLSelectElement::DoneAddingChildren(PRBool aHaveNotified)&#10;   // content, restore the rest of the options proper-like&#10;   if (mRestoreState) {&#10;     RestoreStateTo(mRestoreState);&#10;-    NS_RELEASE(mRestoreState);&#10;+    mRestoreState = nsnull;&#10;   }&#10; &#10;   // Notify the frame&#10;@@ -1806,11 +1866,10 @@ nsHTMLSelectElement::HandleDOMEvent(nsPresContext* aPresContext,&#10; NS_IMETHODIMP&#10; nsHTMLSelectElement::SaveState()&#10; {&#10;-  nsSelectState* state = new nsSelectState();&#10;+  nsRefPtr&lt;nsSelectState&gt; state = new nsSelectState();&#10;   if (!state) {&#10;     return NS_ERROR_OUT_OF_MEMORY;&#10;   }&#10;-  NS_ADDREF(state);&#10; &#10;   PRUint32 len;&#10;   GetLength(&amp;len);&#10;@@ -1836,8 +1895,6 @@ nsHTMLSelectElement::SaveState()&#10;     NS_ASSERTION(NS_SUCCEEDED(rv), &quot;selecteditems set failed!&quot;);&#10;   }&#10; &#10;-  NS_RELEASE(state);&#10;-&#10;   return rv;&#10; }&#10; &#10;@@ -1877,7 +1934,6 @@ nsHTMLSelectElement::RestoreStateTo(nsSelectState* aNewSelected)&#10; {&#10;   if (!mIsDoneAddingChildren) {&#10;     mRestoreState = aNewSelected;&#10;-    NS_ADDREF(mRestoreState);&#10;     return;&#10;   }&#10; &#10;@@ -2050,6 +2106,58 @@ void nsHTMLSelectElement::DispatchContentReset() {&#10;   }&#10; }&#10; &#10;+static void&#10;+AddOptionsRecurse(nsIContent* aRoot, nsHTMLOptionCollection* aArray)&#10;+{&#10;+  nsIContent* child;&#10;+  for(PRUint32 i = 0; (child = aRoot-&gt;GetChildAt(i)); ++i) {&#10;+    nsCOMPtr&lt;nsIDOMHTMLOptionElement&gt; opt = do_QueryInterface(child);&#10;+    if (opt) {&#10;+      // If we fail here, then at least we've tried our best&#10;+      aArray-&gt;AppendOption(opt);&#10;+    }&#10;+    else if (IsOptGroup(child)) {&#10;+      AddOptionsRecurse(child, aArray);&#10;+    }&#10;+  }&#10;+}&#10;+&#10;+void&#10;+nsHTMLSelectElement::RebuildOptionsArray()&#10;+{&#10;+  mOptions-&gt;Clear();&#10;+  AddOptionsRecurse(this, mOptions);&#10;+}&#10;+&#10;+#ifdef DEBUG&#10;+&#10;+static void&#10;+VerifyOptionsRecurse(nsIContent* aRoot, PRInt32&amp; aIndex,&#10;+                     nsHTMLOptionCollection* aArray)&#10;+{&#10;+  nsIContent* child;&#10;+  for(PRUint32 i = 0; (child = aRoot-&gt;GetChildAt(i)); ++i) {&#10;+    nsCOMPtr&lt;nsIDOMHTMLOptionElement&gt; opt = do_QueryInterface(child);&#10;+    if (opt) {&#10;+      NS_ASSERTION(opt == aArray-&gt;ItemAsOption(aIndex++),&#10;+                   &quot;Options collection broken&quot;);&#10;+    }&#10;+    else if (IsOptGroup(child)) {&#10;+      VerifyOptionsRecurse(child, aIndex, aArray);&#10;+    }&#10;+  }&#10;+}&#10;+&#10;+void&#10;+nsHTMLSelectElement::VerifyOptionsArray()&#10;+{&#10;+  PRInt32 aIndex = 0;&#10;+  VerifyOptionsRecurse(this, aIndex, mOptions);&#10;+}&#10;+&#10;+&#10;+#endif&#10;+&#10; //&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10; //&#10; // nsHTMLOptionCollection implementation&#10;@@ -2177,7 +2285,7 @@ nsHTMLOptionCollection::SetOption(PRInt32 aIndex,&#10;     rv = mSelect-&gt;AppendChild(aOption, getter_AddRefs(ret));&#10;   } else {&#10;     // Find the option they're talking about and replace it&#10;-    nsIDOMHTMLOptionElement *refChild = mElements.ObjectAt(aIndex);&#10;+    nsIDOMHTMLOptionElement *refChild = mElements.SafeObjectAt(aIndex);&#10;     NS_ENSURE_TRUE(refChild, NS_ERROR_UNEXPECTED);&#10; &#10;     nsCOMPtr&lt;nsIDOMNode&gt; parent;&#10;@@ -2216,12 +2324,6 @@ nsHTMLOptionCollection::Item(PRUint32 aIndex, nsIDOMNode** aReturn)&#10;   return NS_OK;&#10; }&#10; &#10;-nsIDOMHTMLOptionElement *&#10;-nsHTMLOptionCollection::ItemAsOption(PRInt32 aIndex)&#10;-{&#10;-  return mElements.SafeObjectAt(aIndex);&#10;-}&#10;-&#10; NS_IMETHODIMP&#10; nsHTMLOptionCollection::NamedItem(const nsAString&amp; aName,&#10;                                   nsIDOMNode** aReturn)&#10;@@ -2255,16 +2357,3 @@ nsHTMLOptionCollection::GetSelect(nsIDOMHTMLSelectElement **aReturn)&#10;   NS_IF_ADDREF(*aReturn = mSelect);&#10;   return NS_OK;&#10; }&#10;-&#10;-nsresult&#10;-nsHTMLOptionCollection::InsertElementAt(nsIDOMHTMLOptionElement* aOption,&#10;-                                        PRInt32 aIndex)&#10;-{&#10;-  return mElements.InsertObjectAt(aOption, aIndex);&#10;-}&#10;-&#10;-nsresult&#10;-nsHTMLOptionCollection::RemoveElementAt(PRInt32 aIndex)&#10;-{&#10;-  return mElements.RemoveObjectAt(aIndex);&#10;-}&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">329385</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Olli.Pettay@helsinki.fi &lt;Olli.Pettay@helsinki.fi&gt;  2008-03-19 08:06:22&#10;Committer: Olli.Pettay@helsinki.fi &lt;Olli.Pettay@helsinki.fi&gt;  2008-03-19 08:06:22       r+sr=jst&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/src/base/nsGlobalWindow.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index ade1aae..a3b27b3 100644&#10;@@ -194,6 +194,7 @@&#10; #include &quot;nsIPopupWindowManager.h&quot;&#10; &#10; #include &quot;nsIPermissionManager.h&quot;&#10;+#include &quot;nsIDragService.h&quot;&#10; &#10; #ifdef MOZ_LOGGING&#10; // so we can get logging even in release builds&#10;@@ -212,6 +213,8 @@ static PRInt32              gRefCnt                    = 0;&#10; static PRInt32              gOpenPopupSpamCount        = 0;&#10; static PopupControlState    gPopupControlState         = openAbused;&#10; static PRInt32              gRunningTimeoutDepth       = 0;&#10;+static PRBool               gMouseDown                 = PR_FALSE;&#10;+static PRBool               gDragServiceDisabled       = PR_FALSE;&#10; &#10; #ifdef DEBUG&#10; static PRUint32             gSerialCounter             = 0;&#10;@@ -2181,6 +2184,20 @@ nsGlobalWindow::PreHandleEvent(nsEventChainPreVisitor&amp; aVisitor)&#10;     }&#10;   } else if (msg == NS_RESIZE_EVENT) {&#10;     mIsHandlingResizeEvent = PR_TRUE;&#10;+  } else if (msg == NS_MOUSE_BUTTON_DOWN &amp;&amp;&#10;+             NS_IS_TRUSTED_EVENT(aVisitor.mEvent)) {&#10;+    gMouseDown = PR_TRUE;&#10;+  } else if (msg == NS_MOUSE_BUTTON_UP &amp;&amp;&#10;+             NS_IS_TRUSTED_EVENT(aVisitor.mEvent)) {&#10;+    gMouseDown = PR_FALSE;&#10;+    if (gDragServiceDisabled) {&#10;+      nsCOMPtr&lt;nsIDragService&gt; ds =&#10;+        do_GetService(&quot;@mozilla.org/widget/dragservice;1&quot;);&#10;+      if (ds) {&#10;+        gDragServiceDisabled = PR_FALSE;&#10;+        ds-&gt;Unsuppress();&#10;+      }&#10;+    }&#10;   }&#10; &#10;   aVisitor.mParentTarget = mChromeEventHandler;&#10;@@ -3947,8 +3964,19 @@ nsGlobalWindow::CanMoveResizeWindows()&#10;   PRUint32 testResult;&#10;   rv = pm-&gt;TestPermission(uri, &quot;moveresize&quot;, &amp;testResult);&#10;   NS_ENSURE_SUCCESS(rv, PR_FALSE);&#10;-  &#10;-  return testResult == nsIPermissionManager::ALLOW_ACTION;&#10;+&#10;+  if (testResult == nsIPermissionManager::ALLOW_ACTION) {&#10;+    if (gMouseDown &amp;&amp; !gDragServiceDisabled) {&#10;+      nsCOMPtr&lt;nsIDragService&gt; ds =&#10;+        do_GetService(&quot;@mozilla.org/widget/dragservice;1&quot;);&#10;+      if (ds) {&#10;+        gDragServiceDisabled = PR_TRUE;&#10;+        ds-&gt;Suppress();&#10;+      }&#10;+    }&#10;+    return PR_TRUE;&#10;+  }&#10;+  return PR_FALSE;&#10; }&#10; &#10; NS_IMETHODIMP&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- widget/public/nsIDragService.idl &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 52aaa94..1c5c160 100644&#10;@@ -47,7 +47,7 @@ interface nsIDOMNode;&#10; interface nsIDOMMouseEvent;&#10; interface nsISelection;&#10; &#10;-[scriptable, uuid(E8CD74A6-8BB6-4D27-9C65-4ED1B4398F8C)]&#10;+[scriptable, uuid(034c44a4-604b-44a2-9205-676d5135f359)]&#10; interface nsIDragService : nsISupports&#10; {&#10;   const long DRAGDROP_ACTION_NONE = 0;&#10;@@ -134,6 +134,13 @@ interface nsIDragService : nsISupports&#10;    * Fire a drag event at the source of the drag&#10;    */&#10;   void fireDragEventAtSource ( in unsigned long aMsg );&#10;+&#10;+  /**&#10;+   * Increase/decrease dragging suppress level by one.&#10;+   * If level is greater than one, dragging is disabled.&#10;+   */&#10;+  void suppress();&#10;+  void unsuppress();&#10; };&#10; &#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- widget/src/xpwidgets/nsBaseDragService.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 11dd635..01f250a 100644&#10;@@ -79,7 +79,7 @@&#10; nsBaseDragService::nsBaseDragService()&#10;   : mCanDrop(PR_FALSE), mDoingDrag(PR_FALSE), mHasImage(PR_FALSE),&#10;     mDragAction(DRAGDROP_ACTION_NONE), mTargetSize(0,0),&#10;-    mImageX(0), mImageY(0), mScreenX(-1), mScreenY(-1)&#10;+    mImageX(0), mImageY(0), mScreenX(-1), mScreenY(-1), mSuppressLevel(0)&#10; {&#10; }&#10; &#10;@@ -203,6 +203,7 @@ nsBaseDragService::InvokeDragSession(nsIDOMNode *aDOMNode,&#10;                                      PRUint32 aActionType)&#10; {&#10;   NS_ENSURE_TRUE(aDOMNode, NS_ERROR_INVALID_ARG);&#10;+  NS_ENSURE_TRUE(mSuppressLevel == 0, NS_ERROR_FAILURE);&#10; &#10;   // stash the document of the dom node&#10;   aDOMNode-&gt;GetOwnerDocument(getter_AddRefs(mSourceDocument));&#10;@@ -241,6 +242,7 @@ nsBaseDragService::InvokeDragSessionWithImage(nsIDOMNode* aDOMNode,&#10;                                               nsIDOMMouseEvent* aDragEvent)&#10; {&#10;   NS_ENSURE_TRUE(aDragEvent, NS_ERROR_NULL_POINTER);&#10;+  NS_ENSURE_TRUE(mSuppressLevel == 0, NS_ERROR_FAILURE);&#10; &#10;   mSelection = nsnull;&#10;   mHasImage = PR_TRUE;&#10;@@ -262,6 +264,7 @@ nsBaseDragService::InvokeDragSessionWithSelection(nsISelection* aSelection,&#10; {&#10;   NS_ENSURE_TRUE(aSelection, NS_ERROR_NULL_POINTER);&#10;   NS_ENSURE_TRUE(aDragEvent, NS_ERROR_NULL_POINTER);&#10;+  NS_ENSURE_TRUE(mSuppressLevel == 0, NS_ERROR_FAILURE);&#10; &#10;   mSelection = aSelection;&#10;   mHasImage = PR_TRUE;&#10;@@ -288,7 +291,7 @@ nsBaseDragService::GetCurrentSession(nsIDragSession ** aSession)&#10; &#10;   // &quot;this&quot; also implements a drag session, so say we are one but only&#10;   // if there is currently a drag going on.&#10;-  if (mDoingDrag) {&#10;+  if (!mSuppressLevel &amp;&amp; mDoingDrag) {&#10;     *aSession = this;&#10;     NS_ADDREF(*aSession);      // addRef because we're a &quot;getter&quot;&#10;   }&#10;@@ -317,7 +320,7 @@ nsBaseDragService::EndDragSession(PRBool aDoneDrag)&#10;     return NS_ERROR_FAILURE;&#10;   }&#10; &#10;-  if (aDoneDrag)&#10;+  if (aDoneDrag &amp;&amp; !mSuppressLevel)&#10;     FireDragEventAtSource(NS_DRAGDROP_END);&#10; &#10;   mDoingDrag = PR_FALSE;&#10;@@ -339,7 +342,7 @@ nsBaseDragService::EndDragSession(PRBool aDoneDrag)&#10; NS_IMETHODIMP&#10; nsBaseDragService::FireDragEventAtSource(PRUint32 aMsg)&#10; {&#10;-  if (mSourceNode) {&#10;+  if (mSourceNode &amp;&amp; !mSuppressLevel) {&#10;     nsCOMPtr&lt;nsIDocument&gt; doc = do_QueryInterface(mSourceDocument);&#10;     if (doc) {&#10;       nsCOMPtr&lt;nsIPresShell&gt; presShell = doc-&gt;GetPrimaryShell();&#10;@@ -578,3 +581,17 @@ nsBaseDragService::ConvertToUnscaledDevPixels(nsPresContext* aPresContext,&#10;   *aScreenY = nsPresContext::CSSPixelsToAppUnits(*aScreenY) / adj;&#10; }&#10; &#10;+NS_IMETHODIMP&#10;+nsBaseDragService::Suppress()&#10;+{&#10;+  EndDragSession(PR_FALSE);&#10;+  ++mSuppressLevel;&#10;+  return NS_OK;&#10;+}&#10;+&#10;+NS_IMETHODIMP&#10;+nsBaseDragService::Unsuppress()&#10;+{&#10;+  &#45;-mSuppressLevel;&#10;+  return NS_OK;&#10;+}&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- widget/src/xpwidgets/nsBaseDragService.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index f6ed5f1..3bcf348 100644&#10;@@ -146,6 +146,8 @@ protected:&#10;   // supplied so the screen position is not known&#10;   PRInt32 mScreenX;&#10;   PRInt32 mScreenY;&#10;+&#10;+  PRUint32 mSuppressLevel;&#10; };&#10; &#10; #endif // nsBaseDragService_h__     </Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Olli.Pettay@helsinki.fi &lt;Olli.Pettay@helsinki.fi&gt;  2008-03-20 04:18:41    additional patch, r+sr=jst&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- widget/src/beos/nsDragService.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 2dfdef0..fc24a6c 100644&#10;@@ -151,8 +151,11 @@ nsDragService::InvokeDragSession (nsIDOMNode *aDOMNode,&#10;                                   PRUint32 aActionType)&#10; {&#10;     PR_LOG(sDragLm, PR_LOG_DEBUG, (&quot;nsDragService::InvokeDragSession&quot;));&#10;-    nsBaseDragService::InvokeDragSession (aDOMNode, aArrayTransferables,&#10;-                                         aRegion, aActionType);&#10;+    nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode,&#10;+                                                       aArrayTransferables,&#10;+                                                       aRegion, aActionType);&#10;+    NS_ENSURE_SUCCESS(rv, rv);&#10;+&#10;     ResetDragInfo();       &#10;     // make sure that we have an array of transferables to use&#10;     if (nsnull == aArrayTransferables)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- widget/src/cocoa/nsDragService.mm &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index f53bb57..b8a3de9 100644&#10;@@ -253,7 +253,10 @@ nsDragService::InvokeDragSession(nsIDOMNode* aDOMNode, nsISupportsArray* aTransf&#10; {&#10;   NS_OBJC_BEGIN_TRY_ABORT_BLOCK_NSRESULT;&#10; &#10;-  nsBaseDragService::InvokeDragSession(aDOMNode, aTransferableArray, aDragRgn, aActionType);&#10;+  nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode,&#10;+                                                     aTransferableArray,&#10;+                                                     aDragRgn, aActionType);&#10;+  NS_ENSURE_SUCCESS(rv, rv);&#10; &#10;   mDataItems = aTransferableArray;&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- widget/src/gtk2/nsDragService.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 01b3c43..2b8ba11 100644&#10;@@ -155,8 +155,11 @@ nsDragService::InvokeDragSession(nsIDOMNode *aDOMNode,&#10;                                  PRUint32 aActionType)&#10; {&#10;     PR_LOG(sDragLm, PR_LOG_DEBUG, (&quot;nsDragService::InvokeDragSession&quot;));&#10;-    nsBaseDragService::InvokeDragSession(aDOMNode, aArrayTransferables,&#10;-                                         aRegion, aActionType);&#10;+    nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode,&#10;+                                                       aArrayTransferables,&#10;+                                                       aRegion, aActionType);&#10;+    NS_ENSURE_SUCCESS(rv, rv);&#10;+&#10;     // make sure that we have an array of transferables to use&#10;     if (!aArrayTransferables)&#10;         return NS_ERROR_INVALID_ARG;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- widget/src/os2/nsDragService.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 01074de..ff017e5 100644&#10;@@ -142,8 +142,10 @@ NS_IMETHODIMP nsDragService::InvokeDragSession(nsIDOMNode *aDOMNode,&#10;   if (mDoingDrag)&#10;     return NS_ERROR_UNEXPECTED;&#10; &#10;-  nsBaseDragService::InvokeDragSession ( aDOMNode, aTransferables,&#10;-                                         aRegion, aActionType );&#10;+  nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode, aTransferables,&#10;+                                                     aRegion, aActionType);&#10;+  NS_ENSURE_SUCCESS(rv, rv);&#10;+&#10;   mSourceDataItems = aTransferables;&#10;   WinSetCapture(HWND_DESKTOP, NULLHANDLE);&#10; &#10;@@ -166,7 +168,7 @@ NS_IMETHODIMP nsDragService::InvokeDragSession(nsIDOMNode *aDOMNode,&#10;   dragitem.hstrContainerName   = NULLHANDLE;&#10;   dragitem.hstrSourceName      = NULLHANDLE;&#10; &#10;-  nsresult rv = NS_ERROR_FAILURE;&#10;+  rv = NS_ERROR_FAILURE;&#10;   ULONG idIcon = 0;&#10; &#10;     // bracket this to reduce our footprint before the drag begins&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- widget/src/photon/nsDragService.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 8726fb7..bbe2bfc 100644&#10;@@ -130,7 +130,10 @@ nsDragService::InvokeDragSession (nsIDOMNode *aDOMNode,&#10; #ifdef DEBUG&#10;  printf( &quot;nsDragService::InvokeDragSession\n&quot; );&#10; #endif&#10;-  nsBaseDragService::InvokeDragSession (aDOMNode, aArrayTransferables, aRegion, aActionType);&#10;+  nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode,&#10;+                                                     aArrayTransferables,&#10;+                                                     aRegion, aActionType);&#10;+  NS_ENSURE_SUCCESS(rv, rv);&#10; &#10;   if(!aArrayTransferables) return NS_ERROR_INVALID_ARG;&#10; &#10;@@ -172,7 +175,7 @@ nsDragService::InvokeDragSession (nsIDOMNode *aDOMNode,&#10;       const char *FlavourStr = ( const char * ) flavorStr;&#10;       nsCOMPtr&lt;nsISupports&gt; data;&#10;       PRUint32 tmpDataLen = 0;&#10;-      nsresult rv = currItem-&gt;GetTransferData( FlavourStr, getter_AddRefs(data), &amp;tmpDataLen );&#10;+      rv = currItem-&gt;GetTransferData( FlavourStr, getter_AddRefs(data), &amp;tmpDataLen );&#10;       if( NS_SUCCEEDED( rv ) ) {&#10;        /* insert FlavourStr, data into the PtTransportCtrl_t */&#10;        int len = sizeof( PRUint32 ) + sizeof( PRUint32 ) + strlen( FlavourStr ) + 1 + tmpDataLen;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- widget/src/windows/nsDragService.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index eea1306..4c589b6 100644&#10;@@ -189,9 +189,11 @@ nsDragService::InvokeDragSession(nsIDOMNode *aDOMNode,&#10;                                  nsIScriptableRegion *aRegion,&#10;                                  PRUint32 aActionType)&#10; {&#10;-  nsBaseDragService::InvokeDragSession(aDOMNode, anArrayTransferables, aRegion,&#10;-                                       aActionType);&#10;-  nsresult rv;&#10;+  nsresult rv = nsBaseDragService::InvokeDragSession(aDOMNode,&#10;+                                                     anArrayTransferables,&#10;+                                                     aRegion,&#10;+                                                     aActionType);&#10;+  NS_ENSURE_SUCCESS(rv, rv);&#10; &#10;   // Try and get source URI of the items that are being dragged&#10;   nsIURI *uri = nsnull;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">331679</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: bmlk%gmx.de &lt;bmlk%gmx.de&gt;  2006-04-22 18:28:13    pseudo rowgroups might be wrapped in a scrollframe, bug 331679 r/sr=bzbarsky&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- layout/base/nsCSSFrameConstructor.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index d68735d..74bcd8e 100644&#10;@@ -2615,6 +2615,23 @@ ProcessPseudoFrame(nsPseudoFrameData&amp; aPseudoData,&#10; }&#10; &#10; static nsresult &#10;+ProcessPseudoRowGroupFrame(nsPseudoFrameData&amp; aPseudoData,&#10;+                           nsIFrame*&amp;         aParent)&#10;+{&#10;+  nsresult rv = NS_OK;&#10;+&#10;+  aParent = aPseudoData.mFrame;&#10;+  nsTableRowGroupFrame* rgFrame = nsTableFrame::GetRowGroupFrame(aParent);&#10;+  nsFrameItems* items = &amp;aPseudoData.mChildList;&#10;+  if (items &amp;&amp; items-&gt;childList) {&#10;+    rv = rgFrame-&gt;SetInitialChildList(nsnull, items-&gt;childList);&#10;+    if (NS_FAILED(rv)) return rv;&#10;+  }&#10;+  aPseudoData.Reset();&#10;+  return rv;&#10;+}&#10;+&#10;+static nsresult &#10; ProcessPseudoTableFrame(nsPseudoFrames&amp; aPseudoFrames,&#10;                         nsIFrame*&amp;      aParent)&#10; {&#10;@@ -2692,12 +2709,12 @@ ProcessPseudoFrames(nsFrameConstructorState&amp; aState,&#10;       if (nsLayoutAtoms::tableRowFrame == aHighestType) return rv;&#10;     }&#10;     if (pseudoFrames.mRowGroup.mFrame) {&#10;-      rv = ProcessPseudoFrame(pseudoFrames.mRowGroup, aHighestFrame);&#10;+      rv = ProcessPseudoRowGroupFrame(pseudoFrames.mRowGroup, aHighestFrame);&#10;       if (nsLayoutAtoms::tableRowGroupFrame == aHighestType) return rv;&#10;     }&#10;   }&#10;   else if (nsLayoutAtoms::tableRowGroupFrame == pseudoFrames.mLowestType) {&#10;-    rv = ProcessPseudoFrame(pseudoFrames.mRowGroup, aHighestFrame);&#10;+    rv = ProcessPseudoRowGroupFrame(pseudoFrames.mRowGroup, aHighestFrame);&#10;     if (nsLayoutAtoms::tableRowGroupFrame == aHighestType) return rv;&#10;     if (pseudoFrames.mColGroup.mFrame) {&#10;       nsIFrame* colGroupHigh;&#10;@@ -2730,7 +2747,7 @@ ProcessPseudoFrames(nsFrameConstructorState&amp; aState,&#10;     if (nsLayoutAtoms::tableRowFrame == aHighestType) return rv;&#10; &#10;     if (pseudoFrames.mRowGroup.mFrame) {&#10;-      rv = ProcessPseudoFrame(pseudoFrames.mRowGroup, aHighestFrame);&#10;+      rv = ProcessPseudoRowGroupFrame(pseudoFrames.mRowGroup, aHighestFrame);&#10;       if (nsLayoutAtoms::tableRowGroupFrame == aHighestType) return rv;&#10;     }&#10;     if (pseudoFrames.mColGroup.mFrame) {&#10;@@ -2765,7 +2782,7 @@ ProcessPseudoFrames(nsFrameConstructorState&amp; aState,&#10;       if (nsLayoutAtoms::tableRowFrame == aHighestType) return rv;&#10;     }&#10;     if (pseudoFrames.mRowGroup.mFrame) {&#10;-      rv = ProcessPseudoFrame(pseudoFrames.mRowGroup, aHighestFrame);&#10;+      rv = ProcessPseudoRowGroupFrame(pseudoFrames.mRowGroup, aHighestFrame);&#10;       if (nsLayoutAtoms::tableRowGroupFrame == aHighestType) return rv;&#10;     }&#10;     if (pseudoFrames.mColGroup.mFrame) {&#10;@@ -3015,8 +3032,10 @@ nsCSSFrameConstructor::CreatePseudoRowFrame(nsTableCreator&amp;          aTableCreat&#10; {&#10;   nsresult rv = NS_OK;&#10; &#10;-  nsIFrame* parentFrame = (aState.mPseudoFrames.mRowGroup.mFrame) &#10;-                          ? aState.mPseudoFrames.mRowGroup.mFrame : aParentFrameIn;&#10;+  nsIFrame* parentFrame = aParentFrameIn;&#10;+  if (aState.mPseudoFrames.mRowGroup.mFrame) {&#10;+    parentFrame = (nsIFrame*) nsTableFrame::GetRowGroupFrame(aState.mPseudoFrames.mRowGroup.mFrame);&#10;+  }&#10;   if (!parentFrame) return rv;&#10; &#10;   nsStyleContext *parentStyle;&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">336409</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">mrbkap%gmail.com &lt;mrbkap%gmail.com&gt;  2006-06-21 08:42:04    Be safer in doing these additions. bug 336409, r=igor&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index aa94cdd..e968b3a 100644&#10;@@ -696,7 +696,7 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;     JSIdArray *ida;&#10;     jschar *chars, *ochars, *vsharp;&#10;     const jschar *idstrchars, *vchars;&#10;-    size_t nchars, idstrlength, gsoplength, vlength, vsharplength;&#10;+    size_t nchars, idstrlength, gsoplength, vlength, vsharplength, curlen;&#10;     char *comma;&#10;     jsint i, j, length, valcnt;&#10;     jsid id;&#10;@@ -952,14 +952,31 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;             }&#10; #endif&#10; &#10;+#define SAFE_ADD(n)                                                          \&#10;+            JS_BEGIN_MACRO                                                   \&#10;+                curlen += (n);                                               \&#10;+                if (curlen &lt; (n))                                            \&#10;+                    goto overflow;                                           \&#10;+            JS_END_MACRO&#10;+&#10;+            curlen = nchars;&#10;+            if (comma)&#10;+                SAFE_ADD(2);&#10;+            SAFE_ADD(idstrlength + 1);&#10;+            if (gsop[j])&#10;+                SAFE_ADD(JSSTRING_LENGTH(gsop[j]) + 1);&#10;+            SAFE_ADD(vsharplength);&#10;+            SAFE_ADD(vlength);&#10;+            /* Account for the trailing null. */&#10;+            SAFE_ADD((outermost ? 2 : 1) + 1);&#10;+#undef SAFE_ADD&#10;+&#10;+            if (curlen &gt; (size_t)-1 / sizeof(jschar))&#10;+                goto overflow;&#10;+&#10;             /* Allocate 1 + 1 at end for closing brace and terminating 0. */&#10;             chars = (jschar *)&#10;-                realloc((ochars = chars),&#10;-                        (nchars + (comma ? 2 : 0) +&#10;-                         idstrlength + 1 +&#10;-                         (gsop[j] ? 1 + JSSTRING_LENGTH(gsop[j]) : 0) +&#10;-                         vsharplength + vlength +&#10;-                         (outermost ? 2 : 1) + 1) * sizeof(jschar));&#10;+                realloc((ochars = chars), curlen * sizeof(jschar));&#10;             if (!chars) {&#10;                 /* Save code space on error: let JS_free ignore null vsharp. */&#10;                 JS_free(cx, vsharp);&#10;@@ -1037,6 +1054,12 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;     }&#10;     *rval = STRING_TO_JSVAL(str);&#10;     return JS_TRUE;&#10;+&#10;+  overflow:&#10;+    JS_free(cx, vsharp);&#10;+    free(chars);&#10;+    chars = NULL;&#10;+    goto error;&#10; }&#10; #endif /* JS_HAS_TOSOURCE */&#10; &#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">mrbkap%gmail.com &lt;mrbkap%gmail.com&gt;  2006-06-22 02:16:52    Fix whitespace and style nits from brendan (bug 336409)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index a08cf2e..bff4cac 100644&#10;@@ -953,11 +953,12 @@ js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10; #endif&#10; &#10; #define SAFE_ADD(n)                                                          \&#10;-            JS_BEGIN_MACRO                                                   \&#10;-                curlen += (n);                                               \&#10;-                if (curlen &lt; (n))                                            \&#10;-                    goto overflow;                                           \&#10;-            JS_END_MACRO&#10;+    JS_BEGIN_MACRO                                                           \&#10;+        size_t n_ = (n);                                                     \&#10;+        curlen += n_;                                                        \&#10;+        if (curlen &lt; n_)                                                     \&#10;+            goto overflow;                                                   \&#10;+    JS_END_MACRO&#10; &#10;             curlen = nchars;&#10;             if (comma)&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">JavaScript Test - regression tests for bug 336409, by Georgi Guninski&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/extensions/regress-336409-1.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..d07b24f&#10;@@ -0,0 +1,71 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Georgi Guninski&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 336409;&#10;+var summary = 'Integer overflow in js_obj_toSource';&#10;+var actual = 'No Crash';&#10;+var expect = 'No Crash';&#10;+&#10;+printBugNumber (bug);&#10;+printStatus (summary);&#10;+&#10;+expectExitCode(0);&#10;+expectExitCode(5);&#10;+&#10;+function createString(n)&#10;+{&#10;+  var l = n*1024*1024;&#10;+  var r = 'r';&#10;+&#10;+  while (r.length &lt; l)&#10;+  {&#10;+    r = r + r;&#10;+  }&#10;+  return r;&#10;+}&#10;+&#10;+var n = 64;&#10;+printStatus('Creating ' + n + 'MB string');&#10;+var r = createString(n);&#10;+printStatus('Done. length = ' + r.length);&#10;+printStatus('Creating object');&#10;+var o = {f1: r, f2: r, f3: r,f4: r,f5: r, f6: r, f7: r, f8: r,f9: r};&#10;+printStatus('object.toSource()');&#10;+var rr = o.toSource();&#10;+printStatus('Done.');&#10;+&#10;+reportCompare(expect, actual, summary);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/extensions/regress-336409-2.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..9a8b6a9&#10;@@ -0,0 +1,71 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Georgi Guninski&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 336409;&#10;+var summary = 'Integer overflow in js_obj_toSource';&#10;+var actual = 'No Crash';&#10;+var expect = 'No Crash';&#10;+&#10;+printBugNumber (bug);&#10;+printStatus (summary);&#10;+&#10;+expectExitCode(0);&#10;+expectExitCode(5);&#10;+&#10;+function createString(n)&#10;+{&#10;+  var l = n*1024*1024;&#10;+  var r = 'r';&#10;+&#10;+  while (r.length &lt; l)&#10;+  {&#10;+    r = r + r;&#10;+  }&#10;+  return r;&#10;+}&#10;+&#10;+var n = 128;&#10;+printStatus('Creating ' + n + 'MB string');&#10;+var r = createString(n);&#10;+printStatus('Done. length = ' + r.length);&#10;+printStatus('Creating object');&#10;+var o = {f1: r, f2: r, f3: r,f4: r,f5: r, f6: r, f7: r, f8: r,f9: r};&#10;+printStatus('object.toSource()');&#10;+var rr = o.toSource();&#10;+printStatus('Done.');&#10;+&#10;+reportCompare(expect, actual, summary);&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">337389</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">mrbkap%gmail.com &lt;mrbkap%gmail.com&gt;  2006-06-07 09:58:51    Remove some functions that scripts don't need. bug 337389, r=darin sr=dveditz&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/base/src/nsProxyAutoConfig.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index c2a55ff..a5bb4c2 100644&#10;@@ -81,6 +81,11 @@ nsProxyAutoConfig.prototype = {&#10;         this._sandBox = new Components.utils.Sandbox(pacURI);&#10;         Components.utils.evalInSandbox(pacUtils, this._sandBox);&#10; &#10;+        // The PAC script doesn't need these.&#10;+        myIpAddress.eval = dnsResolve.eval = proxyAlert.eval = null;&#10;+        myIpAddress.call = dnsResolve.call = proxyAlert.call = null;&#10;+        myIpAddress.apply = dnsResolve.apply = proxyAlert.apply = null;&#10;+&#10;         // add predefined functions to pac&#10;         this._sandBox.myIpAddress = myIpAddress;&#10;         this._sandBox.dnsResolve = dnsResolve;&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">mrbkap%gmail.com &lt;mrbkap%gmail.com&gt;  2006-06-08 04:21:40    Add some additional evalInSandbox functionality for PAC and use it there. bug 337389, r=shaver sr=darin&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsapi.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index fe498b9..acc3b08 100644&#10;@@ -3606,6 +3606,12 @@ JS_GetFunctionFlags(JSFunction *fun)&#10;     return fun-&gt;flags;&#10; }&#10; &#10;+JS_PUBLIC_API(uint16)&#10;+JS_GetFunctionArity(JSFunction *fun)&#10;+{&#10;+    return fun-&gt;nargs;&#10;+}&#10;+&#10; JS_PUBLIC_API(JSBool)&#10; JS_ObjectIsFunction(JSContext *cx, JSObject *obj)&#10; {&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsapi.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 3c22d71..4b6fc9e 100644&#10;@@ -1512,6 +1512,12 @@ extern JS_PUBLIC_API(uintN)&#10; JS_GetFunctionFlags(JSFunction *fun);&#10; &#10; /*&#10;+ * Return the arity (length) of fun.&#10;+ */&#10;+extern JS_PUBLIC_API(uint16)&#10;+JS_GetFunctionArity(JSFunction *fun);&#10;+&#10;+/*&#10;  * Infallible predicate to test whether obj is a function object (faster than&#10;  * comparing obj's class name to &quot;Function&quot;, but equivalent unless someone has&#10;  * overwritten the &quot;Function&quot; identifier with a different constructor and then&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/xpconnect/src/xpccomponents.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index b3cc9d3..0278f5c 100644&#10;@@ -2105,6 +2105,84 @@ SandboxDebug(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)&#10; }&#10; &#10; JS_STATIC_DLL_CALLBACK(JSBool)&#10;+SandboxFunForwarder(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;+                    jsval *rval)&#10;+{&#10;+    jsval v;&#10;+    if (!JS_GetReservedSlot(cx, JSVAL_TO_OBJECT(argv[-2]), 0, &amp;v) ||&#10;+        !JS_CallFunctionValue(cx, obj, v, argc, argv, rval)) {&#10;+        return JS_FALSE;&#10;+    }&#10;+&#10;+    if (JSVAL_IS_PRIMITIVE(*rval))&#10;+        return JS_TRUE; // nothing more to do.&#10;+    &#10;+    XPCThrower::Throw(NS_ERROR_NOT_IMPLEMENTED, cx);&#10;+    return JS_FALSE;&#10;+}&#10;+&#10;+JS_STATIC_DLL_CALLBACK(JSBool)&#10;+SandboxImport(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;+              jsval *rval)&#10;+{&#10;+    JSFunction *fun = JS_ValueToFunction(cx, argv[0]);&#10;+    if (!fun) {&#10;+        XPCThrower::Throw(NS_ERROR_INVALID_ARG, cx);&#10;+        return JS_FALSE;&#10;+    }&#10;+&#10;+    JSString *funname;&#10;+    if (argc &gt; 1) {&#10;+        // Use the second parameter as the function name.&#10;+        funname = JS_ValueToString(cx, argv[1]);&#10;+        if (!funname)&#10;+            return JS_FALSE;&#10;+        argv[1] = STRING_TO_JSVAL(funname);&#10;+    } else {&#10;+        // Use the actual function name as the name.&#10;+        funname = JS_GetFunctionId(fun);&#10;+        if (!funname) {&#10;+            XPCThrower::Throw(NS_ERROR_INVALID_ARG, cx);&#10;+            return JS_FALSE;&#10;+        }&#10;+    }&#10;+&#10;+    nsresult rv = NS_ERROR_FAILURE;&#10;+    JSObject *oldfunobj = JS_GetFunctionObject(fun);&#10;+    nsXPConnect *xpc = nsXPConnect::GetXPConnect();&#10;+&#10;+    if (xpc &amp;&amp; oldfunobj) {&#10;+        nsIXPCSecurityManager *secman = xpc-&gt;GetDefaultSecurityManager();&#10;+        if (secman) {&#10;+            rv = secman-&gt;CanAccess(nsIXPCSecurityManager::ACCESS_CALL_METHOD,&#10;+                                   nsnull, cx, oldfunobj, nsnull, nsnull,&#10;+                                   STRING_TO_JSVAL(funname), nsnull);&#10;+        }&#10;+    }&#10;+&#10;+    if (NS_FAILED(rv)) {&#10;+        if (rv == NS_ERROR_FAILURE)&#10;+            XPCThrower::Throw(NS_ERROR_XPC_SECURITY_MANAGER_VETO, cx);&#10;+        return JS_FALSE;&#10;+    }&#10;+&#10;+    JSFunction *newfun = JS_DefineUCFunction(cx, obj,&#10;+            JS_GetStringChars(funname), JS_GetStringLength(funname),&#10;+            SandboxFunForwarder, JS_GetFunctionArity(fun), 0);&#10;+&#10;+    if (!newfun)&#10;+        return JS_FALSE;&#10;+&#10;+    JSObject *newfunobj = JS_GetFunctionObject(newfun);&#10;+    if (!newfunobj)&#10;+        return JS_FALSE;&#10;+&#10;+    // Functions come with two extra reserved slots on them. Use the 0-th slot&#10;+    // to communicate the wrapped function to our forwarder.&#10;+    return JS_SetReservedSlot(cx, newfunobj, 0, argv[0]);&#10;+}&#10;+&#10;+JS_STATIC_DLL_CALLBACK(JSBool)&#10; sandbox_enumerate(JSContext *cx, JSObject *obj)&#10; {&#10;     return JS_EnumerateStandardClasses(cx, obj);&#10;@@ -2135,6 +2213,7 @@ static JSClass SandboxClass = {&#10; static JSFunctionSpec SandboxFunctions[] = {&#10;     {&quot;dump&quot;,    SandboxDump,    1,0,0},&#10;     {&quot;debug&quot;,   SandboxDebug,   1,0,0},&#10;+    {&quot;importFunction&quot;, SandboxImport, 1,0,0},&#10;     {nsnull,nsnull,0,0,0}&#10; };&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/base/src/nsProxyAutoConfig.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index a5bb4c2..6a34044 100644&#10;@@ -81,15 +81,10 @@ nsProxyAutoConfig.prototype = {&#10;         this._sandBox = new Components.utils.Sandbox(pacURI);&#10;         Components.utils.evalInSandbox(pacUtils, this._sandBox);&#10; &#10;-        // The PAC script doesn't need these.&#10;-        myIpAddress.eval = dnsResolve.eval = proxyAlert.eval = null;&#10;-        myIpAddress.call = dnsResolve.call = proxyAlert.call = null;&#10;-        myIpAddress.apply = dnsResolve.apply = proxyAlert.apply = null;&#10;-&#10;         // add predefined functions to pac&#10;-        this._sandBox.myIpAddress = myIpAddress;&#10;-        this._sandBox.dnsResolve = dnsResolve;&#10;-        this._sandBox.alert = proxyAlert;&#10;+        this._sandBox.importFunction(myIpAddress);&#10;+        this._sandBox.importFunction(dnsResolve);&#10;+        this._sandBox.importFunction(proxyAlert, &quot;alert&quot;);&#10; &#10;         // evaluate loaded js file&#10;         Components.utils.evalInSandbox(pacText, this._sandBox);&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">336410</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: mrbkap%gmail.com &lt;mrbkap%gmail.com&gt;  2006-06-15 11:26:21     Add some sanity checks. bug 336410, r=igor&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsarray.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 2b368d0..73bd6ac 100644&#10;@@ -521,8 +521,17 @@ array_join_sub(JSContext *cx, JSObject *obj, enum ArrayToStringOp op,&#10; &#10;       got_str:&#10;         /* Allocate 1 at end for closing bracket and zero. */&#10;-        growth = (nchars + JSSTRING_LENGTH(str) + seplen + extratail)&#10;-                 * sizeof(jschar);&#10;+        tmplen = JSSTRING_LENGTH(str);&#10;+        growth = nchars + tmplen + seplen + extratail;&#10;+        if (nchars &gt; growth || tmplen &gt; growth ||&#10;+            growth &gt; (size_t)-1 / sizeof(jschar)) {&#10;+            if (chars) {&#10;+                free(chars);&#10;+                chars = NULL;&#10;+            }&#10;+            goto done;&#10;+        }&#10;+        growth *= sizeof(jschar);&#10;         if (!chars) {&#10;             chars = (jschar *) malloc(growth);&#10;             if (!chars)&#10;@@ -535,7 +544,6 @@ array_join_sub(JSContext *cx, JSObject *obj, enum ArrayToStringOp op,&#10;             }&#10;         }&#10; &#10;-        tmplen = JSSTRING_LENGTH(str);&#10;         js_strncpy(&amp;chars[nchars], JSSTRING_CHARS(str), tmplen);&#10;         nchars += tmplen;&#10; &#10;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: bclary%bclary.com &lt;bclary%bclary.com&gt;  2007-02-09 07:27:59    JavaScript Test - regression tests for bug 336410, by Georgi Guninski&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/extensions/regress-336410-1.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..2414161&#10;@@ -0,0 +1,71 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Georgi Guninski&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 336410;&#10;+var summary = 'Integer overflow in array_toSource';&#10;+var actual = 'No Crash';&#10;+var expect = 'No Crash';&#10;+&#10;+printBugNumber (bug);&#10;+printStatus (summary);&#10;+&#10;+expectExitCode(0);&#10;+expectExitCode(5);&#10;+&#10;+function createString(n)&#10;+{&#10;+  var l = n*1024*1024;&#10;+  var r = 'r';&#10;+&#10;+  while (r.length &lt; l)&#10;+  {&#10;+    r = r + r;&#10;+  }&#10;+  return r;&#10;+}&#10;+&#10;+var n = 64;&#10;+printStatus('Creating ' + n + 'M length string');&#10;+var r = createString(n);&#10;+printStatus('Done. length = ' + r.length);&#10;+printStatus('Creating array');&#10;+var o=[r, r, r, r, r, r, r, r, r];&#10;+printStatus('object.toSource()');&#10;+var rr = o.toSource();&#10;+printStatus('Done.');&#10;+&#10;+reportCompare(expect, actual, summary);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/extensions/regress-336410-2.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..2113b57&#10;@@ -0,0 +1,71 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Georgi Guninski&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 336410;&#10;+var summary = 'Integer overflow in array_toSource';&#10;+var actual = 'No Crash';&#10;+var expect = 'No Crash';&#10;+&#10;+printBugNumber (bug);&#10;+printStatus (summary);&#10;+&#10;+expectExitCode(0);&#10;+expectExitCode(5);&#10;+&#10;+function createString(n)&#10;+{&#10;+  var l = n*1024*1024;&#10;+  var r = 'r';&#10;+&#10;+  while (r.length &lt; l)&#10;+  {&#10;+    r = r + r;&#10;+  }&#10;+  return r;&#10;+}&#10;+&#10;+var n = 128;&#10;+printStatus('Creating ' + n + 'M length string');&#10;+var r = createString(n);&#10;+printStatus('Done. length = ' + r.length);&#10;+printStatus('Creating array');&#10;+var o=[r, r, r, r, r, r, r, r, r];&#10;+printStatus('object.toSource()');&#10;+var rr = o.toSource();&#10;+printStatus('Done.');&#10;+&#10;+reportCompare(expect, actual, summary);&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">338121</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: brendan%mozilla.org &lt;brendan%mozilla.org&gt;  2006-05-19 01:12:14     Beef up sanity checking (338121, r=mrbkap).&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsarena.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index c7ea0c1..8f770a5 100644&#10;@@ -171,7 +171,8 @@ JS_ArenaAllocate(JSArenaPool *pool, size_t nb)&#10;      * https://bugzilla.mozilla.org/show_bug.cgi?id=279273.&#10;      */&#10;     JS_ASSERT((nb &amp; pool-&gt;mask) == 0);&#10;-    for (a = pool-&gt;current; a-&gt;avail &gt; a-&gt;limit - nb; pool-&gt;current = a) {&#10;+    for (a = pool-&gt;current; nb &gt; a-&gt;limit || a-&gt;avail &gt; a-&gt;limit - nb;&#10;+         pool-&gt;current = a) {&#10;         ap = &amp;a-&gt;next;&#10;         if (!*ap) {&#10;             /* Not enough space in pool &#45;- try to reclaim a free arena. */&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsarena.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 394aa16..36e6ac5 100644&#10;@@ -113,10 +113,12 @@ struct JSArenaPool {&#10;     JS_ARENA_ALLOCATE_CAST(p, void *, pool, nb)&#10; &#10; #define JS_ARENA_ALLOCATE_TYPE(p, type, pool)                                 \&#10;-    JS_ARENA_ALLOCATE_CAST(p, type *, pool, sizeof(type))&#10;+    JS_ARENA_ALLOCATE_COMMON(p, type *, pool, sizeof(type), 0)&#10;+&#10;+#define JS_ARENA_ALLOCATE_CAST(p, type, pool, nb)                             \&#10;+    JS_ARENA_ALLOCATE_COMMON(p, type, pool, nb, _nb &gt; _a-&gt;limit)&#10; &#10; /*&#10;- *&#10;  * NB: In JS_ARENA_ALLOCATE_CAST and JS_ARENA_GROW_CAST, always subtract _nb&#10;  * from a-&gt;limit rather than adding _nb to _p, to avoid overflowing a 32-bit&#10;  * address space (possible when running a 32-bit program on a 64-bit system&#10;@@ -126,12 +128,12 @@ struct JSArenaPool {&#10;  * Thanks to Juergen Kreileder &lt;jk@blackdown.de&gt;, who brought this up in&#10;  * https://bugzilla.mozilla.org/show_bug.cgi?id=279273.&#10;  */&#10;-#define JS_ARENA_ALLOCATE_CAST(p, type, pool, nb)                             \&#10;+#define JS_ARENA_ALLOCATE_COMMON(p, type, pool, nb, guard)                    \&#10;     JS_BEGIN_MACRO                                                            \&#10;         JSArena *_a = (pool)-&gt;current;                                        \&#10;         size_t _nb = JS_ARENA_ALIGN(pool, nb);                                \&#10;         jsuword _p = _a-&gt;avail;                                               \&#10;-        if (_p &gt; _a-&gt;limit - _nb)                                             \&#10;+        if ((guard) || _p &gt; _a-&gt;limit - _nb)                                  \&#10;             _p = (jsuword)JS_ArenaAllocate(pool, _nb);                        \&#10;         else                                                                  \&#10;             _a-&gt;avail = _p + _nb;                                             \&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: bclary%bclary.com &lt;bclary%bclary.com&gt;  2007-02-09 07:01:41    JavaScript Test - regression test for bug 338121, by Georgi Guninski&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/Function/regress-338121-01.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..2991309&#10;@@ -0,0 +1,59 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Georgi Guninski&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 338121;&#10;+var summary = 'Issues with JS_ARENA_ALLOCATE_CAST';&#10;+var actual = 'No Crash';&#10;+var expect = 'No Crash';&#10;+&#10;+printBugNumber (bug);&#10;+printStatus (summary);&#10;+&#10;+var fe=&quot;v&quot;;&#10;+&#10;+for (i=0; i&lt;25; i++) &#10;+  fe += fe;&#10;+&#10;+var fu=new Function(&#10;+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, &#10;+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe,&#10;+  &quot;done&quot;&#10;+  );&#10;+&#10;+print('Done');&#10;+&#10;+reportCompare(expect, actual, summary);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/Function/regress-338121-02.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..d9b309b&#10;@@ -0,0 +1,63 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Georgi Guninski&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 338121;&#10;+var summary = 'Issues with JS_ARENA_ALLOCATE_CAST';&#10;+var actual = 'No Crash';&#10;+var expect = 'No Crash';&#10;+&#10;+printBugNumber (bug);&#10;+printStatus (summary);&#10;+&#10;+var fe=&quot;vv&quot;;&#10;+&#10;+for (i=0; i&lt;24; i++) &#10;+  fe += fe;&#10;+&#10;+var fu=new Function(&#10;+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, &#10;+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe,&#10;+  &quot;done&quot;&#10;+  );&#10;+&#10;+//alert(&quot;fu=&quot;+fu);&#10;+//print(&quot;fu=&quot;+fu);&#10;+var fuout = 'fu=' + fu;&#10;+&#10;+print('Done');&#10;+&#10;+reportCompare(expect, actual, summary);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/Function/regress-338121-03.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..df2cd76&#10;@@ -0,0 +1,65 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Georgi Guninski&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 338121;&#10;+var summary = 'Issues with JS_ARENA_ALLOCATE_CAST';&#10;+var actual = 'No Crash';&#10;+var expect = 'No Crash';&#10;+&#10;+printBugNumber (bug);&#10;+printStatus (summary);&#10;+&#10;+var fe=&quot;vv&quot;;&#10;+&#10;+for (i=0; i&lt;24; i++) &#10;+  fe += fe;&#10;+&#10;+var fu=new Function(&#10;+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, &#10;+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, &#10;+  fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, fe, &#10;+  fe, fe, fe,&#10;+  &quot;done&quot;&#10;+  );&#10;+&#10;+//alert(&quot;fu=&quot;+fu);&#10;+//print(&quot;fu=&quot;+fu);&#10;+var fuout = 'fu=' + fu;&#10;+&#10;+print('Done');&#10;+&#10;+reportCompare(expect, actual, summary);&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">340129</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: igor.bukanov%gmail.com &lt;igor.bukanov%gmail.com&gt;  2006-06-14 06:19:55    Bug 340129: Bulletproof rooting of objects during sharp graph construction/usage. r=mrbkap&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsgc.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e4ef056..a6c5ece 100644&#10;@@ -2289,6 +2289,9 @@ restart:&#10;             }&#10;         }&#10; &#10;+        if (acx-&gt;sharpObjectMap.depth &gt; 0)&#10;+            js_GCMarkSharpMap(cx, &amp;acx-&gt;sharpObjectMap);&#10;+&#10;         acx-&gt;cachedIterObj = NULL;&#10;     }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 69b161d..cc113ed 100644&#10;@@ -648,6 +648,42 @@ js_LeaveSharpObject(JSContext *cx, JSIdArray **idap)&#10;     }&#10; }&#10; &#10;+JS_STATIC_DLL_CALLBACK(intN)&#10;+gc_sharp_table_entry_marker(JSHashEntry *he, intN i, void *arg)&#10;+{&#10;+    GC_MARK((JSContext *)arg, (JSObject *)he-&gt;key, &quot;sharp table entry&quot;);&#10;+    return JS_DHASH_NEXT;&#10;+}&#10;+&#10;+void&#10;+js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map)&#10;+{&#10;+    JS_ASSERT(map-&gt;depth &gt; 0);&#10;+    JS_ASSERT(map-&gt;table);&#10;+&#10;+    /*&#10;+     * During recursive calls to MarkSharpObjects a non-native object or&#10;+     * object with a custom getProperty method can potentially return an&#10;+     * unrooted value or even cut from the object graph an argument of one of&#10;+     * MarkSharpObjects recursive invocations. So we must protect map-&gt;table&#10;+     * entries against GC.&#10;+     *&#10;+     * We can not simply use JSTempValueRoote to mark the obj argument of&#10;+     * MarkSharpObjects during recursion as we have to protect *all* entries&#10;+     * in JSSharpObjectMap including those that contains otherwise unreachable&#10;+     * objects just allocated through custom getProperty. Otherwise newer&#10;+     * allocations can re-use the address of an object stored in the hashtable&#10;+     * confusing js_EnterSharpObject. So to address the problem we simply&#10;+     * mark all objects from map-&gt;table.&#10;+     *&#10;+     * An alternative &quot;proper&quot; solution is to use JSTempValueRoote in&#10;+     * MarkSharpObjects with code to remove during finalization entries&#10;+     * with otherwise unreachable objects. But this is way too complex&#10;+     * to justify spending efforts.&#10;+     */&#10;+    JS_HashTableEnumerateEntries(map-&gt;table, gc_sharp_table_entry_marker, cx);&#10;+}&#10;+&#10; #define OBJ_TOSTRING_EXTRA      4       /* for 4 local GC roots */&#10; &#10; #if JS_HAS_TOSOURCE&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 5f76eac..e0226dc 100644&#10;@@ -304,6 +304,13 @@ js_EnterSharpObject(JSContext *cx, JSObject *obj, JSIdArray **idap,&#10; extern void&#10; js_LeaveSharpObject(JSContext *cx, JSIdArray **idap);&#10; &#10;+/*&#10;+ * Mark objects stored in map if GC happens between js_EnterSharpObject&#10;+ * and js_LeaveSharpObject. GC calls this when map-&gt;depth &gt; 0.&#10;+ */&#10;+extern void&#10;+js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map);&#10;+&#10; extern JSBool&#10; js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;                 jsval *rval);&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">&#10;    Bug 340129: Reverting the commit, it was the wrong patch!&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsgc.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index a6c5ece..e4ef056 100644&#10;@@ -2289,9 +2289,6 @@ restart:&#10;             }&#10;         }&#10; &#10;-        if (acx-&gt;sharpObjectMap.depth &gt; 0)&#10;-            js_GCMarkSharpMap(cx, &amp;acx-&gt;sharpObjectMap);&#10;-&#10;         acx-&gt;cachedIterObj = NULL;&#10;     }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index cc113ed..69b161d 100644&#10;@@ -648,42 +648,6 @@ js_LeaveSharpObject(JSContext *cx, JSIdArray **idap)&#10;     }&#10; }&#10; &#10;-JS_STATIC_DLL_CALLBACK(intN)&#10;-gc_sharp_table_entry_marker(JSHashEntry *he, intN i, void *arg)&#10;-{&#10;-    GC_MARK((JSContext *)arg, (JSObject *)he-&gt;key, &quot;sharp table entry&quot;);&#10;-    return JS_DHASH_NEXT;&#10;-}&#10;-&#10;-void&#10;-js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map)&#10;-{&#10;-    JS_ASSERT(map-&gt;depth &gt; 0);&#10;-    JS_ASSERT(map-&gt;table);&#10;-&#10;-    /*&#10;-     * During recursive calls to MarkSharpObjects a non-native object or&#10;-     * object with a custom getProperty method can potentially return an&#10;-     * unrooted value or even cut from the object graph an argument of one of&#10;-     * MarkSharpObjects recursive invocations. So we must protect map-&gt;table&#10;-     * entries against GC.&#10;-     *&#10;-     * We can not simply use JSTempValueRoote to mark the obj argument of&#10;-     * MarkSharpObjects during recursion as we have to protect *all* entries&#10;-     * in JSSharpObjectMap including those that contains otherwise unreachable&#10;-     * objects just allocated through custom getProperty. Otherwise newer&#10;-     * allocations can re-use the address of an object stored in the hashtable&#10;-     * confusing js_EnterSharpObject. So to address the problem we simply&#10;-     * mark all objects from map-&gt;table.&#10;-     *&#10;-     * An alternative &quot;proper&quot; solution is to use JSTempValueRoote in&#10;-     * MarkSharpObjects with code to remove during finalization entries&#10;-     * with otherwise unreachable objects. But this is way too complex&#10;-     * to justify spending efforts.&#10;-     */&#10;-    JS_HashTableEnumerateEntries(map-&gt;table, gc_sharp_table_entry_marker, cx);&#10;-}&#10;-&#10; #define OBJ_TOSTRING_EXTRA      4       /* for 4 local GC roots */&#10; &#10; #if JS_HAS_TOSOURCE&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e0226dc..5f76eac 100644&#10;@@ -304,13 +304,6 @@ js_EnterSharpObject(JSContext *cx, JSObject *obj, JSIdArray **idap,&#10; extern void&#10; js_LeaveSharpObject(JSContext *cx, JSIdArray **idap);&#10; &#10;-/*&#10;- * Mark objects stored in map if GC happens between js_EnterSharpObject&#10;- * and js_LeaveSharpObject. GC calls this when map-&gt;depth &gt; 0.&#10;- */&#10;-extern void&#10;-js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map);&#10;-&#10; extern JSBool&#10; js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;                 jsval *rval);&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String"> Bug 340129: Bulletproof rooting of objects during sharp graph construction/usage. r=mrbkap&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsgc.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e4ef056..a6c5ece 100644&#10;@@ -2289,6 +2289,9 @@ restart:&#10;             }&#10;         }&#10; &#10;+        if (acx-&gt;sharpObjectMap.depth &gt; 0)&#10;+            js_GCMarkSharpMap(cx, &amp;acx-&gt;sharpObjectMap);&#10;+&#10;         acx-&gt;cachedIterObj = NULL;&#10;     }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 69b161d..e658b5f 100644&#10;@@ -648,6 +648,42 @@ js_LeaveSharpObject(JSContext *cx, JSIdArray **idap)&#10;     }&#10; }&#10; &#10;+JS_STATIC_DLL_CALLBACK(intN)&#10;+gc_sharp_table_entry_marker(JSHashEntry *he, intN i, void *arg)&#10;+{&#10;+    GC_MARK((JSContext *)arg, (JSObject *)he-&gt;key, &quot;sharp table entry&quot;);&#10;+    return JS_DHASH_NEXT;&#10;+}&#10;+&#10;+void&#10;+js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map)&#10;+{&#10;+    JS_ASSERT(map-&gt;depth &gt; 0);&#10;+    JS_ASSERT(map-&gt;table);&#10;+&#10;+    /*&#10;+     * During recursive calls to MarkSharpObjects a non-native object or&#10;+     * object with a custom getProperty method can potentially return an&#10;+     * unrooted value or even cut from the object graph an argument of one of&#10;+     * MarkSharpObjects recursive invocations. So we must protect map-&gt;table&#10;+     * entries against GC.&#10;+     *&#10;+     * We can not simply use JSTempValueRooter to mark the obj argument of&#10;+     * MarkSharpObjects during recursion as we have to protect *all* entries&#10;+     * in JSSharpObjectMap including those that contains otherwise unreachable&#10;+     * objects just allocated through custom getProperty. Otherwise newer&#10;+     * allocations can re-use the address of an object stored in the hashtable&#10;+     * confusing js_EnterSharpObject. So to address the problem we simply&#10;+     * mark all objects from map-&gt;table.&#10;+     *&#10;+     * An alternative &quot;proper&quot; solution is to use JSTempValueRooter in&#10;+     * MarkSharpObjects with code to remove during finalization entries&#10;+     * with otherwise unreachable objects. But this is way too complex&#10;+     * to justify spending efforts.&#10;+     */&#10;+    JS_HashTableEnumerateEntries(map-&gt;table, gc_sharp_table_entry_marker, cx);&#10;+}&#10;+&#10; #define OBJ_TOSTRING_EXTRA      4       /* for 4 local GC roots */&#10; &#10; #if JS_HAS_TOSOURCE&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 5f76eac..e0226dc 100644&#10;@@ -304,6 +304,13 @@ js_EnterSharpObject(JSContext *cx, JSObject *obj, JSIdArray **idap,&#10; extern void&#10; js_LeaveSharpObject(JSContext *cx, JSIdArray **idap);&#10; &#10;+/*&#10;+ * Mark objects stored in map if GC happens between js_EnterSharpObject&#10;+ * and js_LeaveSharpObject. GC calls this when map-&gt;depth &gt; 0.&#10;+ */&#10;+extern void&#10;+js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map);&#10;+&#10; extern JSBool&#10; js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;                 jsval *rval);</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Bug 340129: Reverting all the commits as the tree IS CLOSED.&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsgc.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index a6c5ece..e4ef056 100644&#10;@@ -2289,9 +2289,6 @@ restart:&#10;             }&#10;         }&#10; &#10;-        if (acx-&gt;sharpObjectMap.depth &gt; 0)&#10;-            js_GCMarkSharpMap(cx, &amp;acx-&gt;sharpObjectMap);&#10;-&#10;         acx-&gt;cachedIterObj = NULL;&#10;     }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e658b5f..69b161d 100644&#10;@@ -648,42 +648,6 @@ js_LeaveSharpObject(JSContext *cx, JSIdArray **idap)&#10;     }&#10; }&#10; &#10;-JS_STATIC_DLL_CALLBACK(intN)&#10;-gc_sharp_table_entry_marker(JSHashEntry *he, intN i, void *arg)&#10;-{&#10;-    GC_MARK((JSContext *)arg, (JSObject *)he-&gt;key, &quot;sharp table entry&quot;);&#10;-    return JS_DHASH_NEXT;&#10;-}&#10;-&#10;-void&#10;-js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map)&#10;-{&#10;-    JS_ASSERT(map-&gt;depth &gt; 0);&#10;-    JS_ASSERT(map-&gt;table);&#10;-&#10;-    /*&#10;-     * During recursive calls to MarkSharpObjects a non-native object or&#10;-     * object with a custom getProperty method can potentially return an&#10;-     * unrooted value or even cut from the object graph an argument of one of&#10;-     * MarkSharpObjects recursive invocations. So we must protect map-&gt;table&#10;-     * entries against GC.&#10;-     *&#10;-     * We can not simply use JSTempValueRooter to mark the obj argument of&#10;-     * MarkSharpObjects during recursion as we have to protect *all* entries&#10;-     * in JSSharpObjectMap including those that contains otherwise unreachable&#10;-     * objects just allocated through custom getProperty. Otherwise newer&#10;-     * allocations can re-use the address of an object stored in the hashtable&#10;-     * confusing js_EnterSharpObject. So to address the problem we simply&#10;-     * mark all objects from map-&gt;table.&#10;-     *&#10;-     * An alternative &quot;proper&quot; solution is to use JSTempValueRooter in&#10;-     * MarkSharpObjects with code to remove during finalization entries&#10;-     * with otherwise unreachable objects. But this is way too complex&#10;-     * to justify spending efforts.&#10;-     */&#10;-    JS_HashTableEnumerateEntries(map-&gt;table, gc_sharp_table_entry_marker, cx);&#10;-}&#10;-&#10; #define OBJ_TOSTRING_EXTRA      4       /* for 4 local GC roots */&#10; &#10; #if JS_HAS_TOSOURCE&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e0226dc..5f76eac 100644&#10;@@ -304,13 +304,6 @@ js_EnterSharpObject(JSContext *cx, JSObject *obj, JSIdArray **idap,&#10; extern void&#10; js_LeaveSharpObject(JSContext *cx, JSIdArray **idap);&#10; &#10;-/*&#10;- * Mark objects stored in map if GC happens between js_EnterSharpObject&#10;- * and js_LeaveSharpObject. GC calls this when map-&gt;depth &gt; 0.&#10;- */&#10;-extern void&#10;-js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map);&#10;-&#10; extern JSBool&#10; js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;                 jsval *rval);&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Bug 340129: Bulletproof rooting of objects during sharp graph construction/usage. r=mrbkap&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsgc.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e4ef056..a6c5ece 100644&#10;@@ -2289,6 +2289,9 @@ restart:&#10;             }&#10;         }&#10; &#10;+        if (acx-&gt;sharpObjectMap.depth &gt; 0)&#10;+            js_GCMarkSharpMap(cx, &amp;acx-&gt;sharpObjectMap);&#10;+&#10;         acx-&gt;cachedIterObj = NULL;&#10;     }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 69b161d..e658b5f 100644&#10;@@ -648,6 +648,42 @@ js_LeaveSharpObject(JSContext *cx, JSIdArray **idap)&#10;     }&#10; }&#10; &#10;+JS_STATIC_DLL_CALLBACK(intN)&#10;+gc_sharp_table_entry_marker(JSHashEntry *he, intN i, void *arg)&#10;+{&#10;+    GC_MARK((JSContext *)arg, (JSObject *)he-&gt;key, &quot;sharp table entry&quot;);&#10;+    return JS_DHASH_NEXT;&#10;+}&#10;+&#10;+void&#10;+js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map)&#10;+{&#10;+    JS_ASSERT(map-&gt;depth &gt; 0);&#10;+    JS_ASSERT(map-&gt;table);&#10;+&#10;+    /*&#10;+     * During recursive calls to MarkSharpObjects a non-native object or&#10;+     * object with a custom getProperty method can potentially return an&#10;+     * unrooted value or even cut from the object graph an argument of one of&#10;+     * MarkSharpObjects recursive invocations. So we must protect map-&gt;table&#10;+     * entries against GC.&#10;+     *&#10;+     * We can not simply use JSTempValueRooter to mark the obj argument of&#10;+     * MarkSharpObjects during recursion as we have to protect *all* entries&#10;+     * in JSSharpObjectMap including those that contains otherwise unreachable&#10;+     * objects just allocated through custom getProperty. Otherwise newer&#10;+     * allocations can re-use the address of an object stored in the hashtable&#10;+     * confusing js_EnterSharpObject. So to address the problem we simply&#10;+     * mark all objects from map-&gt;table.&#10;+     *&#10;+     * An alternative &quot;proper&quot; solution is to use JSTempValueRooter in&#10;+     * MarkSharpObjects with code to remove during finalization entries&#10;+     * with otherwise unreachable objects. But this is way too complex&#10;+     * to justify spending efforts.&#10;+     */&#10;+    JS_HashTableEnumerateEntries(map-&gt;table, gc_sharp_table_entry_marker, cx);&#10;+}&#10;+&#10; #define OBJ_TOSTRING_EXTRA      4       /* for 4 local GC roots */&#10; &#10; #if JS_HAS_TOSOURCE&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 5f76eac..e0226dc 100644&#10;@@ -304,6 +304,13 @@ js_EnterSharpObject(JSContext *cx, JSObject *obj, JSIdArray **idap,&#10; extern void&#10; js_LeaveSharpObject(JSContext *cx, JSIdArray **idap);&#10; &#10;+/*&#10;+ * Mark objects stored in map if GC happens between js_EnterSharpObject&#10;+ * and js_LeaveSharpObject. GC calls this when map-&gt;depth &gt; 0.&#10;+ */&#10;+extern void&#10;+js_GCMarkSharpMap(JSContext *cx, JSSharpObjectMap *map);&#10;+&#10; extern JSBool&#10; js_obj_toSource(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;                 jsval *rval);&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">341877</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: brendan%mozilla.org &lt;brendan%mozilla.org&gt;  2006-06-18 10:04:40     Fix iterator to mark opaque state (341877, r=igor).&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsiter.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 2c13d29..7c29820 100644&#10;@@ -76,6 +76,33 @@ extern const char js_throw_str[]; /* from jsscan.h */&#10; #error JS_INITIAL_NSLOTS must be greater than JSSLOT_ITER_FLAGS.&#10; #endif&#10; &#10;+static uint32&#10;+iterator_mark(JSContext *cx, JSObject *obj, void *arg)&#10;+{&#10;+    jsval state, parent;&#10;+    JSObject *iterable;&#10;+&#10;+    /* Avoid double work if js_CloseNativeIterator was called on obj. */&#10;+    state = obj-&gt;slots[JSSLOT_ITER_STATE];&#10;+    if (JSVAL_IS_VOID(state))&#10;+        return 0;&#10;+&#10;+    parent = obj-&gt;slots[JSSLOT_PARENT];&#10;+    if (!JSVAL_IS_NULL(state) &amp;&amp; !JSVAL_IS_PRIMITIVE(parent)) {&#10;+        iterable = JSVAL_TO_OBJECT(parent);&#10;+#if JS_HAS_XML_SUPPORT&#10;+        if ((JSVAL_TO_INT(obj-&gt;slots[JSSLOT_ITER_FLAGS]) &amp; JSITER_FOREACH) &amp;&amp;&#10;+            OBJECT_IS_XML(cx, iterable)) {&#10;+            ((JSXMLObjectOps *) iterable-&gt;map-&gt;ops)-&gt;&#10;+                enumerateValues(cx, iterable, JSENUMERATE_MARK, &amp;state,&#10;+                                NULL, NULL);&#10;+        } else&#10;+#endif&#10;+            OBJ_ENUMERATE(cx, iterable, JSENUMERATE_MARK, &amp;state, NULL);&#10;+    }&#10;+    return 0;&#10;+}&#10;+&#10; static void&#10; iterator_close(JSContext *cx, JSObject *obj)&#10; {&#10;@@ -110,7 +137,8 @@ JSExtendedClass js_IteratorClass = {&#10;     JSCLASS_HAS_CACHED_PROTO(JSProto_Iterator),&#10;     JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,&#10;     JS_EnumerateStub, JS_ResolveStub,   JS_ConvertStub,   JS_FinalizeStub,&#10;-    JSCLASS_NO_OPTIONAL_MEMBERS },&#10;+    NULL,             NULL,             NULL,             NULL,&#10;+    NULL,             NULL,             iterator_mark,    NULL },&#10;     NULL,             NULL,             NULL,             iterator_close,&#10;     JSCLASS_NO_RESERVED_MEMBERS&#10; };&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e658b5f..aa94cdd 100644&#10;@@ -3793,6 +3793,22 @@ js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;         JS_free(cx, state);&#10;         *statep = JSVAL_NULL;&#10;         break;&#10;+&#10;+      case JSENUMERATE_MARK:&#10;+        state = (JSNativeIteratorState *) JSVAL_TO_PRIVATE(*statep);&#10;+        ida = state-&gt;ida;&#10;+        length = ida-&gt;length;&#10;+        for (i = 0; i &lt; length; i++) {&#10;+            jsid id;&#10;+&#10;+            id = ida-&gt;vector[i];&#10;+            if (JSID_IS_ATOM(id)) {&#10;+                GC_MARK_ATOM(cx, JSID_TO_ATOM(id));&#10;+            } else if (JSID_IS_OBJECT(id)) {&#10;+                GC_MARK(cx, JSID_TO_OBJECT(id), &quot;ida-&gt;vector[i]&quot;);&#10;+            }&#10;+        }&#10;+        break;&#10;     }&#10;     return JS_TRUE;&#10; }&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jspubtd.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e6e0871..6fb0abd 100644&#10;@@ -119,7 +119,8 @@ typedef enum JSAccessMode {&#10; typedef enum JSIterateOp {&#10;     JSENUMERATE_INIT,       /* Create new iterator state */&#10;     JSENUMERATE_NEXT,       /* Iterate once */&#10;-    JSENUMERATE_DESTROY     /* Destroy iterator state */&#10;+    JSENUMERATE_DESTROY,    /* Destroy iterator state */&#10;+    JSENUMERATE_MARK        /* mark opaque iterator state */&#10; } JSIterateOp;&#10; &#10; /* Struct typedefs. */&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsxml.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index ff97665..868f8ef 100644&#10;@@ -5151,6 +5151,9 @@ xml_enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;         }&#10;         *statep = JSVAL_NULL;&#10;         break;&#10;+&#10;+      case JSENUMERATE_MARK:&#10;+        break;&#10;     }&#10;     return JS_TRUE;&#10; }&#10;@@ -5310,6 +5313,9 @@ xml_enumerateValues(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;         }&#10;         *statep = JSVAL_NULL;&#10;         break;&#10;+&#10;+      case JSENUMERATE_MARK:&#10;+        break;&#10;     }&#10;     return JS_TRUE;&#10; }&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s69"><Data ss:Type="String">Author: igor.bukanov%gmail.com &lt;igor.bukanov%gmail.com&gt;  2006-06-20 06:53:51    Bug 341877: Infrastructure to properly mark native iterator state during GC without changing public API. r=brendan&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jscntxt.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index ed02799..0372a79 100644&#10;@@ -649,6 +649,9 @@ struct JSContext {&#10;     /* Top of the GC mark stack. */&#10;     void                *gcCurrentMarkNode;&#10; #endif&#10;+&#10;+    /* List of native iterator states, needed for marking id arrays. */&#10;+    JSNativeIteratorState *nativeIteratorStates;&#10; };&#10; &#10; #define JS_THREAD_ID(cx)            ((cx)-&gt;thread ? (cx)-&gt;thread-&gt;id : 0)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsgc.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 81cff29..582d07a 100644&#10;@@ -2449,6 +2449,9 @@ restart:&#10;         if (acx-&gt;sharpObjectMap.depth &gt; 0)&#10;             js_GCMarkSharpMap(cx, &amp;acx-&gt;sharpObjectMap);&#10; &#10;+        if (acx-&gt;nativeIteratorStates)&#10;+            js_MarkNativeIteratorStates(cx, acx-&gt;nativeIteratorStates);&#10;+&#10;         acx-&gt;cachedIterObj = NULL;&#10;     }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsiter.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 7c29820..2c13d29 100644&#10;@@ -76,33 +76,6 @@ extern const char js_throw_str[]; /* from jsscan.h */&#10; #error JS_INITIAL_NSLOTS must be greater than JSSLOT_ITER_FLAGS.&#10; #endif&#10; &#10;-static uint32&#10;-iterator_mark(JSContext *cx, JSObject *obj, void *arg)&#10;-{&#10;-    jsval state, parent;&#10;-    JSObject *iterable;&#10;-&#10;-    /* Avoid double work if js_CloseNativeIterator was called on obj. */&#10;-    state = obj-&gt;slots[JSSLOT_ITER_STATE];&#10;-    if (JSVAL_IS_VOID(state))&#10;-        return 0;&#10;-&#10;-    parent = obj-&gt;slots[JSSLOT_PARENT];&#10;-    if (!JSVAL_IS_NULL(state) &amp;&amp; !JSVAL_IS_PRIMITIVE(parent)) {&#10;-        iterable = JSVAL_TO_OBJECT(parent);&#10;-#if JS_HAS_XML_SUPPORT&#10;-        if ((JSVAL_TO_INT(obj-&gt;slots[JSSLOT_ITER_FLAGS]) &amp; JSITER_FOREACH) &amp;&amp;&#10;-            OBJECT_IS_XML(cx, iterable)) {&#10;-            ((JSXMLObjectOps *) iterable-&gt;map-&gt;ops)-&gt;&#10;-                enumerateValues(cx, iterable, JSENUMERATE_MARK, &amp;state,&#10;-                                NULL, NULL);&#10;-        } else&#10;-#endif&#10;-            OBJ_ENUMERATE(cx, iterable, JSENUMERATE_MARK, &amp;state, NULL);&#10;-    }&#10;-    return 0;&#10;-}&#10;-&#10; static void&#10; iterator_close(JSContext *cx, JSObject *obj)&#10; {&#10;@@ -137,8 +110,7 @@ JSExtendedClass js_IteratorClass = {&#10;     JSCLASS_HAS_CACHED_PROTO(JSProto_Iterator),&#10;     JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,&#10;     JS_EnumerateStub, JS_ResolveStub,   JS_ConvertStub,   JS_FinalizeStub,&#10;-    NULL,             NULL,             NULL,             NULL,&#10;-    NULL,             NULL,             iterator_mark,    NULL },&#10;+    JSCLASS_NO_OPTIONAL_MEMBERS },&#10;     NULL,             NULL,             NULL,             iterator_close,&#10;     JSCLASS_NO_RESERVED_MEMBERS&#10; };&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index aa94cdd..48ccae7 100644&#10;@@ -3673,10 +3673,12 @@ js_SetIdArrayLength(JSContext *cx, JSIdArray *ida, jsint length)&#10; }&#10; &#10; /* Private type used to iterate over all properties of a native JS object */&#10;-typedef struct JSNativeIteratorState {&#10;-    jsint next_index;   /* index into jsid array */&#10;-    JSIdArray *ida;     /* all property ids in enumeration */&#10;-} JSNativeIteratorState;&#10;+struct JSNativeIteratorState {&#10;+    jsint                   next_index; /* index into jsid array */&#10;+    JSIdArray               *ida;       /* all property ids in enumeration */&#10;+    JSNativeIteratorState   *next;      /* double-linked list support */&#10;+    JSNativeIteratorState   **prevp;&#10;+};&#10; &#10; /*&#10;  * This function is used to enumerate the properties of native JSObjects&#10;@@ -3772,6 +3774,13 @@ js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;         }&#10;         state-&gt;ida = ida;&#10;         state-&gt;next_index = 0;&#10;+&#10;+        state-&gt;next = cx-&gt;nativeIteratorStates;&#10;+        if (state-&gt;next)&#10;+            state-&gt;next-&gt;prevp = &amp;state-&gt;next;&#10;+        state-&gt;prevp = &amp;cx-&gt;nativeIteratorStates;&#10;+        *state-&gt;prevp = state;&#10;+&#10;         *statep = PRIVATE_TO_JSVAL(state);&#10;         if (idp)&#10;             *idp = INT_TO_JSVAL(length);&#10;@@ -3789,28 +3798,43 @@ js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10; &#10;       case JSENUMERATE_DESTROY:&#10;         state = (JSNativeIteratorState *) JSVAL_TO_PRIVATE(*statep);&#10;+&#10;+        JS_ASSERT(cx-&gt;nativeIteratorStates);&#10;+        JS_ASSERT(*state-&gt;prevp == state);&#10;+        if (state-&gt;next) {&#10;+            JS_ASSERT(state-&gt;next-&gt;prevp == &amp;state-&gt;next);&#10;+            state-&gt;next-&gt;prevp = state-&gt;prevp;&#10;+        }&#10;+        *state-&gt;prevp = state-&gt;next;&#10;+&#10;         JS_DestroyIdArray(cx, state-&gt;ida);&#10;         JS_free(cx, state);&#10;         *statep = JSVAL_NULL;&#10;         break;&#10;+    }&#10;+    return JS_TRUE;&#10;+}&#10; &#10;-      case JSENUMERATE_MARK:&#10;-        state = (JSNativeIteratorState *) JSVAL_TO_PRIVATE(*statep);&#10;-        ida = state-&gt;ida;&#10;-        length = ida-&gt;length;&#10;-        for (i = 0; i &lt; length; i++) {&#10;-            jsid id;&#10;+void&#10;+js_MarkNativeIteratorStates(JSContext *cx, JSNativeIteratorState *state)&#10;+{&#10;+    jsid *cursor, *end, id;&#10; &#10;-            id = ida-&gt;vector[i];&#10;+    JS_ASSERT(state);&#10;+&#10;+    do {&#10;+        JS_ASSERT(*state-&gt;prevp == state);&#10;+        cursor = state-&gt;ida-&gt;vector;&#10;+        end = cursor + state-&gt;ida-&gt;length;&#10;+        for (; cursor != end; ++cursor) {&#10;+            id = *cursor;&#10;             if (JSID_IS_ATOM(id)) {&#10;                 GC_MARK_ATOM(cx, JSID_TO_ATOM(id));&#10;             } else if (JSID_IS_OBJECT(id)) {&#10;                 GC_MARK(cx, JSID_TO_OBJECT(id), &quot;ida-&gt;vector[i]&quot;);&#10;             }&#10;         }&#10;-        break;&#10;-    }&#10;-    return JS_TRUE;&#10;+    } while ((state = state-&gt;next) != NULL);&#10; }&#10; &#10; JSBool&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e0226dc..5bf34c8 100644&#10;@@ -498,6 +498,14 @@ extern JSBool&#10; js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;              jsval *statep, jsid *idp);&#10; &#10;+/*&#10;+ * js_Enumerate uses this opaque structure to hold its state.&#10;+ */&#10;+typedef struct JSNativeIteratorState JSNativeIteratorState;&#10;+&#10;+extern void&#10;+js_MarkNativeIteratorStates(JSContext *cx, JSNativeIteratorState *state);&#10;+&#10; extern JSBool&#10; js_CheckAccess(JSContext *cx, JSObject *obj, jsid id, JSAccessMode mode,&#10;                jsval *vp, uintN *attrsp);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jspubtd.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 6fb0abd..e6e0871 100644&#10;@@ -119,8 +119,7 @@ typedef enum JSAccessMode {&#10; typedef enum JSIterateOp {&#10;     JSENUMERATE_INIT,       /* Create new iterator state */&#10;     JSENUMERATE_NEXT,       /* Iterate once */&#10;-    JSENUMERATE_DESTROY,    /* Destroy iterator state */&#10;-    JSENUMERATE_MARK        /* mark opaque iterator state */&#10;+    JSENUMERATE_DESTROY     /* Destroy iterator state */&#10; } JSIterateOp;&#10; &#10; /* Struct typedefs. */&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsxml.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 868f8ef..ff97665 100644&#10;@@ -5151,9 +5151,6 @@ xml_enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;         }&#10;         *statep = JSVAL_NULL;&#10;         break;&#10;-&#10;-      case JSENUMERATE_MARK:&#10;-        break;&#10;     }&#10;     return JS_TRUE;&#10; }&#10;@@ -5313,9 +5310,6 @@ xml_enumerateValues(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;         }&#10;         *statep = JSVAL_NULL;&#10;         break;&#10;-&#10;-      case JSENUMERATE_MARK:&#10;-        break;&#10;     }&#10;     return JS_TRUE;&#10; }&#10;&#10;    </Data></Cell>
    <Cell ss:StyleID="s69"><Data ss:Type="String">Author: igor.bukanov%gmail.com &lt;igor.bukanov%gmail.com&gt;  2006-06-20 08:50:17    Bug 341877: Reverting the previous commit, the patch was broken.&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jscntxt.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 5d77173..cc95ad1 100644&#10;@@ -649,9 +649,6 @@ struct JSContext {&#10;     /* Top of the GC mark stack. */&#10;     void                *gcCurrentMarkNode;&#10; #endif&#10;-&#10;-    /* List of native iterator states, needed for marking id arrays. */&#10;-    JSNativeIteratorState *nativeIteratorStates;&#10; };&#10; &#10; #define JS_THREAD_ID(cx)            ((cx)-&gt;thread ? (cx)-&gt;thread-&gt;id : 0)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsgc.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 582d07a..81cff29 100644&#10;@@ -2449,9 +2449,6 @@ restart:&#10;         if (acx-&gt;sharpObjectMap.depth &gt; 0)&#10;             js_GCMarkSharpMap(cx, &amp;acx-&gt;sharpObjectMap);&#10; &#10;-        if (acx-&gt;nativeIteratorStates)&#10;-            js_MarkNativeIteratorStates(cx, acx-&gt;nativeIteratorStates);&#10;-&#10;         acx-&gt;cachedIterObj = NULL;&#10;     }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsiter.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 3020979..eeb03f4 100644&#10;@@ -76,6 +76,33 @@ extern const char js_throw_str[]; /* from jsscan.h */&#10; #error JS_INITIAL_NSLOTS must be greater than JSSLOT_ITER_FLAGS.&#10; #endif&#10; &#10;+static uint32&#10;+iterator_mark(JSContext *cx, JSObject *obj, void *arg)&#10;+{&#10;+    jsval state, parent;&#10;+    JSObject *iterable;&#10;+&#10;+    /* Avoid double work if js_CloseNativeIterator was called on obj. */&#10;+    state = obj-&gt;slots[JSSLOT_ITER_STATE];&#10;+    if (JSVAL_IS_VOID(state))&#10;+        return 0;&#10;+&#10;+    parent = obj-&gt;slots[JSSLOT_PARENT];&#10;+    if (!JSVAL_IS_NULL(state) &amp;&amp; !JSVAL_IS_PRIMITIVE(parent)) {&#10;+        iterable = JSVAL_TO_OBJECT(parent);&#10;+#if JS_HAS_XML_SUPPORT&#10;+        if ((JSVAL_TO_INT(obj-&gt;slots[JSSLOT_ITER_FLAGS]) &amp; JSITER_FOREACH) &amp;&amp;&#10;+            OBJECT_IS_XML(cx, iterable)) {&#10;+            ((JSXMLObjectOps *) iterable-&gt;map-&gt;ops)-&gt;&#10;+                enumerateValues(cx, iterable, JSENUMERATE_MARK, &amp;state,&#10;+                                NULL, NULL);&#10;+        } else&#10;+#endif&#10;+            OBJ_ENUMERATE(cx, iterable, JSENUMERATE_MARK, &amp;state, NULL);&#10;+    }&#10;+    return 0;&#10;+}&#10;+&#10; static void&#10; iterator_close(JSContext *cx, JSObject *obj)&#10; {&#10;@@ -110,7 +137,8 @@ JSExtendedClass js_IteratorClass = {&#10;     JSCLASS_HAS_CACHED_PROTO(JSProto_Iterator),&#10;     JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,&#10;     JS_EnumerateStub, JS_ResolveStub,   JS_ConvertStub,   JS_FinalizeStub,&#10;-    JSCLASS_NO_OPTIONAL_MEMBERS },&#10;+    NULL,             NULL,             NULL,             NULL,&#10;+    NULL,             NULL,             iterator_mark,    NULL },&#10;     NULL,             NULL,             NULL,             iterator_close,&#10;     JSCLASS_NO_RESERVED_MEMBERS&#10; };&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 48ccae7..aa94cdd 100644&#10;@@ -3673,12 +3673,10 @@ js_SetIdArrayLength(JSContext *cx, JSIdArray *ida, jsint length)&#10; }&#10; &#10; /* Private type used to iterate over all properties of a native JS object */&#10;-struct JSNativeIteratorState {&#10;-    jsint                   next_index; /* index into jsid array */&#10;-    JSIdArray               *ida;       /* all property ids in enumeration */&#10;-    JSNativeIteratorState   *next;      /* double-linked list support */&#10;-    JSNativeIteratorState   **prevp;&#10;-};&#10;+typedef struct JSNativeIteratorState {&#10;+    jsint next_index;   /* index into jsid array */&#10;+    JSIdArray *ida;     /* all property ids in enumeration */&#10;+} JSNativeIteratorState;&#10; &#10; /*&#10;  * This function is used to enumerate the properties of native JSObjects&#10;@@ -3774,13 +3772,6 @@ js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;         }&#10;         state-&gt;ida = ida;&#10;         state-&gt;next_index = 0;&#10;-&#10;-        state-&gt;next = cx-&gt;nativeIteratorStates;&#10;-        if (state-&gt;next)&#10;-            state-&gt;next-&gt;prevp = &amp;state-&gt;next;&#10;-        state-&gt;prevp = &amp;cx-&gt;nativeIteratorStates;&#10;-        *state-&gt;prevp = state;&#10;-&#10;         *statep = PRIVATE_TO_JSVAL(state);&#10;         if (idp)&#10;             *idp = INT_TO_JSVAL(length);&#10;@@ -3798,43 +3789,28 @@ js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10; &#10;       case JSENUMERATE_DESTROY:&#10;         state = (JSNativeIteratorState *) JSVAL_TO_PRIVATE(*statep);&#10;-&#10;-        JS_ASSERT(cx-&gt;nativeIteratorStates);&#10;-        JS_ASSERT(*state-&gt;prevp == state);&#10;-        if (state-&gt;next) {&#10;-            JS_ASSERT(state-&gt;next-&gt;prevp == &amp;state-&gt;next);&#10;-            state-&gt;next-&gt;prevp = state-&gt;prevp;&#10;-        }&#10;-        *state-&gt;prevp = state-&gt;next;&#10;-&#10;         JS_DestroyIdArray(cx, state-&gt;ida);&#10;         JS_free(cx, state);&#10;         *statep = JSVAL_NULL;&#10;         break;&#10;-    }&#10;-    return JS_TRUE;&#10;-}&#10;-&#10;-void&#10;-js_MarkNativeIteratorStates(JSContext *cx, JSNativeIteratorState *state)&#10;-{&#10;-    jsid *cursor, *end, id;&#10; &#10;-    JS_ASSERT(state);&#10;+      case JSENUMERATE_MARK:&#10;+        state = (JSNativeIteratorState *) JSVAL_TO_PRIVATE(*statep);&#10;+        ida = state-&gt;ida;&#10;+        length = ida-&gt;length;&#10;+        for (i = 0; i &lt; length; i++) {&#10;+            jsid id;&#10; &#10;-    do {&#10;-        JS_ASSERT(*state-&gt;prevp == state);&#10;-        cursor = state-&gt;ida-&gt;vector;&#10;-        end = cursor + state-&gt;ida-&gt;length;&#10;-        for (; cursor != end; ++cursor) {&#10;-            id = *cursor;&#10;+            id = ida-&gt;vector[i];&#10;             if (JSID_IS_ATOM(id)) {&#10;                 GC_MARK_ATOM(cx, JSID_TO_ATOM(id));&#10;             } else if (JSID_IS_OBJECT(id)) {&#10;                 GC_MARK(cx, JSID_TO_OBJECT(id), &quot;ida-&gt;vector[i]&quot;);&#10;             }&#10;         }&#10;-    } while ((state = state-&gt;next) != NULL);&#10;+        break;&#10;+    }&#10;+    return JS_TRUE;&#10; }&#10; &#10; JSBool&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 5bf34c8..e0226dc 100644&#10;@@ -498,14 +498,6 @@ extern JSBool&#10; js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;              jsval *statep, jsid *idp);&#10; &#10;-/*&#10;- * js_Enumerate uses this opaque structure to hold its state.&#10;- */&#10;-typedef struct JSNativeIteratorState JSNativeIteratorState;&#10;-&#10;-extern void&#10;-js_MarkNativeIteratorStates(JSContext *cx, JSNativeIteratorState *state);&#10;-&#10; extern JSBool&#10; js_CheckAccess(JSContext *cx, JSObject *obj, jsid id, JSAccessMode mode,&#10;                jsval *vp, uintN *attrsp);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jspubtd.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e6e0871..6fb0abd 100644&#10;@@ -119,7 +119,8 @@ typedef enum JSAccessMode {&#10; typedef enum JSIterateOp {&#10;     JSENUMERATE_INIT,       /* Create new iterator state */&#10;     JSENUMERATE_NEXT,       /* Iterate once */&#10;-    JSENUMERATE_DESTROY     /* Destroy iterator state */&#10;+    JSENUMERATE_DESTROY,    /* Destroy iterator state */&#10;+    JSENUMERATE_MARK        /* mark opaque iterator state */&#10; } JSIterateOp;&#10; &#10; /* Struct typedefs. */&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsxml.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index ff97665..868f8ef 100644&#10;@@ -5151,6 +5151,9 @@ xml_enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;         }&#10;         *statep = JSVAL_NULL;&#10;         break;&#10;+&#10;+      case JSENUMERATE_MARK:&#10;+        break;&#10;     }&#10;     return JS_TRUE;&#10; }&#10;@@ -5310,6 +5313,9 @@ xml_enumerateValues(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;         }&#10;         *statep = JSVAL_NULL;&#10;         break;&#10;+&#10;+      case JSENUMERATE_MARK:&#10;+        break;&#10;     }&#10;     return JS_TRUE;&#10; }&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s69"><Data ss:Type="String">Author: igor.bukanov%gmail.com &lt;igor.bukanov%gmail.com&gt;  2006-06-21 17:13:24    Bug 341877: Infrastructure to root properly native iterator states. r=brendan&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jscntxt.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index cc95ad1..34bb74b 100644&#10;@@ -108,6 +108,11 @@ typedef struct JSPropertyTreeEntry {&#10;     JSScopeProperty     *child;&#10; } JSPropertyTreeEntry;&#10; &#10;+/*&#10;+ * Forward declaration for opaque JSRuntime.nativeIteratorStates.&#10;+ */&#10;+typedef struct JSNativeIteratorState JSNativeIteratorState;&#10;+&#10; struct JSRuntime {&#10;     /* Runtime state, synchronized by the stateChange/gcLock condvar/lock. */&#10;     JSRuntimeState      state;&#10;@@ -320,6 +325,12 @@ struct JSRuntime {&#10;     JSObject            *anynameObject;&#10;     JSObject            *functionNamespaceObject;&#10; &#10;+    /*&#10;+     * A helper list for the GC, so it can mark native iterator states. See&#10;+     * js_MarkNativeIteratorStates for details.&#10;+     */&#10;+    JSNativeIteratorState *nativeIteratorStates;&#10;+&#10; #ifdef DEBUG&#10;     /* Function invocation metering. */&#10;     jsrefcount          inlineCalls;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsgc.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 81cff29..1fe2dd2 100644&#10;@@ -2381,6 +2381,7 @@ restart:&#10;     js_MarkAtomState(&amp;rt-&gt;atomState, gcflags, gc_mark_atom_key_thing, cx);&#10;     js_MarkWatchPoints(rt);&#10;     js_MarkScriptFilenames(rt, gcflags);&#10;+    js_MarkNativeIteratorStates(cx);&#10; &#10;     iter = NULL;&#10;     while ((acx = js_ContextIterator(rt, JS_TRUE, &amp;iter)) != NULL) {&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsiter.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index eeb03f4..3020979 100644&#10;@@ -76,33 +76,6 @@ extern const char js_throw_str[]; /* from jsscan.h */&#10; #error JS_INITIAL_NSLOTS must be greater than JSSLOT_ITER_FLAGS.&#10; #endif&#10; &#10;-static uint32&#10;-iterator_mark(JSContext *cx, JSObject *obj, void *arg)&#10;-{&#10;-    jsval state, parent;&#10;-    JSObject *iterable;&#10;-&#10;-    /* Avoid double work if js_CloseNativeIterator was called on obj. */&#10;-    state = obj-&gt;slots[JSSLOT_ITER_STATE];&#10;-    if (JSVAL_IS_VOID(state))&#10;-        return 0;&#10;-&#10;-    parent = obj-&gt;slots[JSSLOT_PARENT];&#10;-    if (!JSVAL_IS_NULL(state) &amp;&amp; !JSVAL_IS_PRIMITIVE(parent)) {&#10;-        iterable = JSVAL_TO_OBJECT(parent);&#10;-#if JS_HAS_XML_SUPPORT&#10;-        if ((JSVAL_TO_INT(obj-&gt;slots[JSSLOT_ITER_FLAGS]) &amp; JSITER_FOREACH) &amp;&amp;&#10;-            OBJECT_IS_XML(cx, iterable)) {&#10;-            ((JSXMLObjectOps *) iterable-&gt;map-&gt;ops)-&gt;&#10;-                enumerateValues(cx, iterable, JSENUMERATE_MARK, &amp;state,&#10;-                                NULL, NULL);&#10;-        } else&#10;-#endif&#10;-            OBJ_ENUMERATE(cx, iterable, JSENUMERATE_MARK, &amp;state, NULL);&#10;-    }&#10;-    return 0;&#10;-}&#10;-&#10; static void&#10; iterator_close(JSContext *cx, JSObject *obj)&#10; {&#10;@@ -137,8 +110,7 @@ JSExtendedClass js_IteratorClass = {&#10;     JSCLASS_HAS_CACHED_PROTO(JSProto_Iterator),&#10;     JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,  JS_PropertyStub,&#10;     JS_EnumerateStub, JS_ResolveStub,   JS_ConvertStub,   JS_FinalizeStub,&#10;-    NULL,             NULL,             NULL,             NULL,&#10;-    NULL,             NULL,             iterator_mark,    NULL },&#10;+    JSCLASS_NO_OPTIONAL_MEMBERS },&#10;     NULL,             NULL,             NULL,             iterator_close,&#10;     JSCLASS_NO_RESERVED_MEMBERS&#10; };&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e968b3a..a08cf2e 100644&#10;@@ -3696,10 +3696,12 @@ js_SetIdArrayLength(JSContext *cx, JSIdArray *ida, jsint length)&#10; }&#10; &#10; /* Private type used to iterate over all properties of a native JS object */&#10;-typedef struct JSNativeIteratorState {&#10;-    jsint next_index;   /* index into jsid array */&#10;-    JSIdArray *ida;     /* all property ids in enumeration */&#10;-} JSNativeIteratorState;&#10;+struct JSNativeIteratorState {&#10;+    jsint                   next_index; /* index into jsid array */&#10;+    JSIdArray               *ida;       /* all property ids in enumeration */&#10;+    JSNativeIteratorState   *next;      /* double-linked list support */&#10;+    JSNativeIteratorState   **prevp;&#10;+};&#10; &#10; /*&#10;  * This function is used to enumerate the properties of native JSObjects&#10;@@ -3710,6 +3712,7 @@ JSBool&#10; js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;              jsval *statep, jsid *idp)&#10; {&#10;+    JSRuntime *rt;&#10;     JSObject *proto;&#10;     JSClass *clasp;&#10;     JSEnumerateOp enumerate;&#10;@@ -3719,6 +3722,7 @@ js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;     JSIdArray *ida;&#10;     JSNativeIteratorState *state;&#10; &#10;+    rt = cx-&gt;runtime;&#10;     clasp = OBJ_GET_CLASS(cx, obj);&#10;     enumerate = clasp-&gt;enumerate;&#10;     if (clasp-&gt;flags &amp; JSCLASS_NEW_ENUMERATE)&#10;@@ -3795,6 +3799,15 @@ js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;         }&#10;         state-&gt;ida = ida;&#10;         state-&gt;next_index = 0;&#10;+&#10;+        JS_LOCK_RUNTIME(rt);&#10;+        state-&gt;next = rt-&gt;nativeIteratorStates;&#10;+        if (state-&gt;next)&#10;+            state-&gt;next-&gt;prevp = &amp;state-&gt;next;&#10;+        state-&gt;prevp = &amp;rt-&gt;nativeIteratorStates;&#10;+        *state-&gt;prevp = state;&#10;+        JS_UNLOCK_RUNTIME(rt);&#10;+&#10;         *statep = PRIVATE_TO_JSVAL(state);&#10;         if (idp)&#10;             *idp = INT_TO_JSVAL(length);&#10;@@ -3812,28 +3825,48 @@ js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10; &#10;       case JSENUMERATE_DESTROY:&#10;         state = (JSNativeIteratorState *) JSVAL_TO_PRIVATE(*statep);&#10;+&#10;+        JS_LOCK_RUNTIME(rt);&#10;+        JS_ASSERT(rt-&gt;nativeIteratorStates);&#10;+        JS_ASSERT(*state-&gt;prevp == state);&#10;+        if (state-&gt;next) {&#10;+            JS_ASSERT(state-&gt;next-&gt;prevp == &amp;state-&gt;next);&#10;+            state-&gt;next-&gt;prevp = state-&gt;prevp;&#10;+        }&#10;+        *state-&gt;prevp = state-&gt;next;&#10;+        JS_UNLOCK_RUNTIME(rt);&#10;+&#10;         JS_DestroyIdArray(cx, state-&gt;ida);&#10;         JS_free(cx, state);&#10;         *statep = JSVAL_NULL;&#10;         break;&#10;+    }&#10;+    return JS_TRUE;&#10;+}&#10; &#10;-      case JSENUMERATE_MARK:&#10;-        state = (JSNativeIteratorState *) JSVAL_TO_PRIVATE(*statep);&#10;-        ida = state-&gt;ida;&#10;-        length = ida-&gt;length;&#10;-        for (i = 0; i &lt; length; i++) {&#10;-            jsid id;&#10;+void&#10;+js_MarkNativeIteratorStates(JSContext *cx)&#10;+{&#10;+    JSNativeIteratorState *state;&#10;+    jsid *cursor, *end, id;&#10; &#10;-            id = ida-&gt;vector[i];&#10;+    state = cx-&gt;runtime-&gt;nativeIteratorStates;&#10;+    if (!state)&#10;+        return;&#10;+&#10;+    do {&#10;+        JS_ASSERT(*state-&gt;prevp == state);&#10;+        cursor = state-&gt;ida-&gt;vector;&#10;+        end = cursor + state-&gt;ida-&gt;length;&#10;+        for (; cursor != end; ++cursor) {&#10;+            id = *cursor;&#10;             if (JSID_IS_ATOM(id)) {&#10;                 GC_MARK_ATOM(cx, JSID_TO_ATOM(id));&#10;             } else if (JSID_IS_OBJECT(id)) {&#10;                 GC_MARK(cx, JSID_TO_OBJECT(id), &quot;ida-&gt;vector[i]&quot;);&#10;             }&#10;         }&#10;-        break;&#10;-    }&#10;-    return JS_TRUE;&#10;+    } while ((state = state-&gt;next) != NULL);&#10; }&#10; &#10; JSBool&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e0226dc..5615cd3 100644&#10;@@ -498,6 +498,9 @@ extern JSBool&#10; js_Enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;              jsval *statep, jsid *idp);&#10; &#10;+extern void&#10;+js_MarkNativeIteratorStates(JSContext *cx);&#10;+&#10; extern JSBool&#10; js_CheckAccess(JSContext *cx, JSObject *obj, jsid id, JSAccessMode mode,&#10;                jsval *vp, uintN *attrsp);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jspubtd.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 6fb0abd..e6e0871 100644&#10;@@ -119,8 +119,7 @@ typedef enum JSAccessMode {&#10; typedef enum JSIterateOp {&#10;     JSENUMERATE_INIT,       /* Create new iterator state */&#10;     JSENUMERATE_NEXT,       /* Iterate once */&#10;-    JSENUMERATE_DESTROY,    /* Destroy iterator state */&#10;-    JSENUMERATE_MARK        /* mark opaque iterator state */&#10;+    JSENUMERATE_DESTROY     /* Destroy iterator state */&#10; } JSIterateOp;&#10; &#10; /* Struct typedefs. */&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsxml.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 868f8ef..ff97665 100644&#10;@@ -5151,9 +5151,6 @@ xml_enumerate(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;         }&#10;         *statep = JSVAL_NULL;&#10;         break;&#10;-&#10;-      case JSENUMERATE_MARK:&#10;-        break;&#10;     }&#10;     return JS_TRUE;&#10; }&#10;@@ -5313,9 +5310,6 @@ xml_enumerateValues(JSContext *cx, JSObject *obj, JSIterateOp enum_op,&#10;         }&#10;         *statep = JSVAL_NULL;&#10;         break;&#10;-&#10;-      case JSENUMERATE_MARK:&#10;-        break;&#10;     }&#10;     return JS_TRUE;&#10; }&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: bclary%bclary.com &lt;bclary%bclary.com&gt;  2007-02-09 10:27:17    JavaScript Test - regression tests for bug 341877, by Igor Bukanov&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/GC/regress-341877-01.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..988684f&#10;@@ -0,0 +1,71 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Igor Bukanov&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 341877;&#10;+var summary = 'GC hazard with for-in loop';&#10;+var actual = 'No Crash';&#10;+var expect = 'No Crash';&#10;+&#10;+printBugNumber (bug);&#10;+printStatus (summary);&#10;+&#10;+var obj = { };&#10;+&#10;+var prop = &quot;xsomePropety&quot;.substr(1);&#10;+&#10;+obj.first = &quot;first&quot;&#10;+&#10;+  obj[prop] = 1;&#10;+&#10;+for (var elem in obj) {&#10;+  var tmp = elem.toString(); &#10;+  delete obj[prop];&#10;+  // ensure that prop is cut from all roots&#10;+  prop = &quot;xsomePropety&quot;.substr(2);&#10;+  obj[prop] = 2;&#10;+  delete obj[prop];&#10;+  prop = null;&#10;+  if (typeof gc == 'function')&#10;+    gc();&#10;+  for (var i = 0; i != 50000; ++i) {&#10;+    var tmp = 1 / 3;&#10;+    tmp /= 10;&#10;+  }&#10;+}&#10;+&#10;+  &#10;+reportCompare(expect, actual, summary);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/GC/regress-341877-02.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..9849f53&#10;@@ -0,0 +1,76 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Igor Bukanov&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 341877;&#10;+var summary = 'GC hazard with for-in loop';&#10;+var actual = 'No Crash';&#10;+var expect = 'No Crash';&#10;+&#10;+printBugNumber (bug);&#10;+printStatus (summary);&#10;+&#10;+var obj = { };&#10;+&#10;+var prop = &quot;xsomePropety&quot;.substr(1);&#10;+&#10;+obj.first = &quot;first&quot;&#10;+&#10;+  obj[prop] = 1;&#10;+&#10;+for (var elem in obj) {&#10;+  var tmp = elem.toString(); &#10;+  delete obj[prop];&#10;+  // ensure that prop is cut from all roots&#10;+  prop = &quot;xsomePropety&quot;.substr(2);&#10;+  obj[prop] = 2;&#10;+  delete obj[prop];&#10;+  prop = null;&#10;+  if (typeof gc == 'function')&#10;+    gc();&#10;+  for (var i = 0; i != 50000; ++i) {&#10;+    var tmp = 1 / 3;&#10;+    tmp /= 10;&#10;+  }&#10;+  for (var i = 0; i != 1000; ++i) {&#10;+    // Make string with 11 characters that would take&#10;+    // (11 + 1) * 2 bytes or sizeof(JSAtom) so eventually&#10;+    // malloc will ovewrite just freed atoms. &#10;+    var tmp2 = Array(12).join(' ');&#10;+  }&#10;+}&#10;+  &#10;+reportCompare(expect, actual, summary);&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">350238</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: brendan%mozilla.org &lt;brendan%mozilla.org&gt;  2006-09-07 12:47:23    Fix stack budget for postfix ++ and &#45;- applied to property refs (350238, r=mrbkap).&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsemit.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index c793bc1..eea0b2f 100644&#10;@@ -5336,6 +5336,20 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)&#10;         pn2 = pn-&gt;pn_kid;&#10;         JS_ASSERT(pn2-&gt;pn_type != TOK_RP);&#10;         op = pn-&gt;pn_op;&#10;+&#10;+        /*&#10;+         * Allocate another stack slot for GC protection in case the initial&#10;+         * value being post-incremented or -decremented is not a number, but&#10;+         * converts to a jsdouble.  In the TOK_NAME cases, op has 0 operand&#10;+         * uses and 1 definition, so we don't need an extra stack slot &#45;- we&#10;+         * can use the one allocated for the def.&#10;+         */&#10;+        if (pn2-&gt;pn_type != TOK_NAME &amp;&amp;&#10;+            (js_CodeSpec[op].format &amp; JOF_POST) &amp;&amp;&#10;+            (uintN)++cg-&gt;stackDepth &gt; cg-&gt;maxStackDepth) {&#10;+            cg-&gt;maxStackDepth = cg-&gt;stackDepth;&#10;+        }&#10;+&#10;         switch (pn2-&gt;pn_type) {&#10;           case TOK_NAME:&#10;             pn2-&gt;pn_op = op;&#10;@@ -5391,18 +5405,8 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)&#10;             JS_ASSERT(0);&#10;         }&#10; &#10;-        /*&#10;-         * Allocate another stack slot for GC protection in case the initial&#10;-         * value being post-incremented or -decremented is not a number, but&#10;-         * converts to a jsdouble.  In the TOK_NAME cases, op has 0 operand&#10;-         * uses and 1 definition, so we don't need an extra stack slot &#45;- we&#10;-         * can use the one allocated for the def.&#10;-         */&#10;-        if (pn2-&gt;pn_type != TOK_NAME &amp;&amp;&#10;-            (js_CodeSpec[op].format &amp; JOF_POST) &amp;&amp;&#10;-            (uintN)cg-&gt;stackDepth == cg-&gt;maxStackDepth) {&#10;-            ++cg-&gt;maxStackDepth;&#10;-        }&#10;+        if (pn2-&gt;pn_type != TOK_NAME &amp;&amp; (js_CodeSpec[op].format &amp; JOF_POST))&#10;+            &#45;-cg-&gt;stackDepth;&#10;         break;&#10; &#10;       case TOK_DELETE:&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: bclary%bclary.com &lt;bclary%bclary.com&gt;  2006-11-11 03:27:03    JavaScript Test - regression test for bug 350238, by Jesse Ruderman&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/e4x/Regress/regress-350238.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..9faa78b&#10;@@ -0,0 +1,58 @@&#10;+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */&#10;+&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Jesse Ruderman&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+&#10;+var bug = 350238;&#10;+var summary = 'Do not assert &lt;x/&gt;.@*++';&#10;+var actual = 'No Crash';&#10;+var expect = 'No Crash';&#10;+&#10;+printBugNumber (bug);&#10;+printStatus (summary);&#10;+&#10;+if (typeof document != 'undefined')&#10;+{&#10;+    document.location.href='javascript:&lt;x/&gt;.@*++;';&#10;+}&#10;+else&#10;+{&#10;+    &lt;x/&gt;.@*++;&#10;+}&#10;+&#10;+TEST(1, expect, actual);&#10;+&#10;+END();&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">348532</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: igor.bukanov%gmail.com &lt;igor.bukanov%gmail.com&gt;  2006-08-14 13:43:14    Bug 348532: Limit the length of errorInstance.stack. r=brendan&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsexn.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 2310da6..0407d69 100644&#10;@@ -361,11 +361,18 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,&#10;     stacklen = stackmax = 0;&#10;     ok = JS_TRUE;&#10; &#10;+/* Limit the stackbuf length to a reasonable value to avoid overflow checks. */&#10;+#define STACK_LENGTH_LIMIT JS_BIT(20)&#10;+&#10; #define APPEND_CHAR_TO_STACK(c)                                               \&#10;     JS_BEGIN_MACRO                                                            \&#10;         if (stacklen == stackmax) {                                           \&#10;             void *ptr_;                                                       \&#10;+            if (stackmax &gt;= STACK_LENGTH_LIMIT)                               \&#10;+                goto done;                                                    \&#10;             stackmax = stackmax ? 2 * stackmax : 64;                          \&#10;+            if (stackmax &gt;= STACK_LENGTH_LIMIT)                               \&#10;+                goto done;                                                    \&#10;             ptr_ = JS_realloc(cx, stackbuf, (stackmax+1) * sizeof(jschar));   \&#10;             if (!ptr_) {                                                      \&#10;                 ok = JS_FALSE;                                                \&#10;@@ -380,9 +387,15 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,&#10;     JS_BEGIN_MACRO                                                            \&#10;         JSString *str_ = str;                                                 \&#10;         size_t length_ = JSSTRING_LENGTH(str_);                               \&#10;-        if (stacklen + length_ &gt; stackmax) {                                  \&#10;+        if (length_ &gt; stackmax - stacklen) {                                  \&#10;+            if (stackmax &gt;= STACK_LENGTH_LIMIT ||                             \&#10;+                length_ &gt;= STACK_LENGTH_LIMIT) {                              \&#10;+                goto done;                                                    \&#10;+            }                                                                 \&#10;             void *ptr_;                                                       \&#10;             stackmax = JS_BIT(JS_CeilingLog2(stacklen + length_));            \&#10;+            if (stackmax &gt;= STACK_LENGTH_LIMIT)                               \&#10;+                goto done;                                                    \&#10;             ptr_ = JS_realloc(cx, stackbuf, (stackmax+1) * sizeof(jschar));   \&#10;             if (!ptr_) {                                                      \&#10;                 ok = JS_FALSE;                                                \&#10;@@ -471,6 +484,7 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,&#10; &#10; #undef APPEND_CHAR_TO_STACK&#10; #undef APPEND_STRING_TO_STACK&#10;+#undef STACK_LENGTH_LIMIT&#10; &#10; done:&#10;     if (ok)&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: igor.bukanov%gmail.com &lt;igor.bukanov%gmail.com&gt;  2006-08-14 15:19:12    Bug 348532: taking out the previous commit.&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsexn.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 0407d69..2310da6 100644&#10;@@ -361,18 +361,11 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,&#10;     stacklen = stackmax = 0;&#10;     ok = JS_TRUE;&#10; &#10;-/* Limit the stackbuf length to a reasonable value to avoid overflow checks. */&#10;-#define STACK_LENGTH_LIMIT JS_BIT(20)&#10;-&#10; #define APPEND_CHAR_TO_STACK(c)                                               \&#10;     JS_BEGIN_MACRO                                                            \&#10;         if (stacklen == stackmax) {                                           \&#10;             void *ptr_;                                                       \&#10;-            if (stackmax &gt;= STACK_LENGTH_LIMIT)                               \&#10;-                goto done;                                                    \&#10;             stackmax = stackmax ? 2 * stackmax : 64;                          \&#10;-            if (stackmax &gt;= STACK_LENGTH_LIMIT)                               \&#10;-                goto done;                                                    \&#10;             ptr_ = JS_realloc(cx, stackbuf, (stackmax+1) * sizeof(jschar));   \&#10;             if (!ptr_) {                                                      \&#10;                 ok = JS_FALSE;                                                \&#10;@@ -387,15 +380,9 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,&#10;     JS_BEGIN_MACRO                                                            \&#10;         JSString *str_ = str;                                                 \&#10;         size_t length_ = JSSTRING_LENGTH(str_);                               \&#10;-        if (length_ &gt; stackmax - stacklen) {                                  \&#10;-            if (stackmax &gt;= STACK_LENGTH_LIMIT ||                             \&#10;-                length_ &gt;= STACK_LENGTH_LIMIT) {                              \&#10;-                goto done;                                                    \&#10;-            }                                                                 \&#10;+        if (stacklen + length_ &gt; stackmax) {                                  \&#10;             void *ptr_;                                                       \&#10;             stackmax = JS_BIT(JS_CeilingLog2(stacklen + length_));            \&#10;-            if (stackmax &gt;= STACK_LENGTH_LIMIT)                               \&#10;-                goto done;                                                    \&#10;             ptr_ = JS_realloc(cx, stackbuf, (stackmax+1) * sizeof(jschar));   \&#10;             if (!ptr_) {                                                      \&#10;                 ok = JS_FALSE;                                                \&#10;@@ -484,7 +471,6 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,&#10; &#10; #undef APPEND_CHAR_TO_STACK&#10; #undef APPEND_STRING_TO_STACK&#10;-#undef STACK_LENGTH_LIMIT&#10; &#10; done:&#10;     if (ok)&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: igor.bukanov%gmail.com &lt;igor.bukanov%gmail.com&gt;  2006-08-15 04:01:30    Bug 348532: Limit the length of errorInstance.stack. r=brendan&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsexn.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 2310da6..cea84bf 100644&#10;@@ -361,10 +361,15 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,&#10;     stacklen = stackmax = 0;&#10;     ok = JS_TRUE;&#10; &#10;+/* Limit the stackbuf length to a reasonable value to avoid overflow checks. */&#10;+#define STACK_LENGTH_LIMIT JS_BIT(20)&#10;+&#10; #define APPEND_CHAR_TO_STACK(c)                                               \&#10;     JS_BEGIN_MACRO                                                            \&#10;         if (stacklen == stackmax) {                                           \&#10;             void *ptr_;                                                       \&#10;+            if (stackmax &gt;= STACK_LENGTH_LIMIT)                               \&#10;+                goto done;                                                    \&#10;             stackmax = stackmax ? 2 * stackmax : 64;                          \&#10;             ptr_ = JS_realloc(cx, stackbuf, (stackmax+1) * sizeof(jschar));   \&#10;             if (!ptr_) {                                                      \&#10;@@ -380,8 +385,12 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,&#10;     JS_BEGIN_MACRO                                                            \&#10;         JSString *str_ = str;                                                 \&#10;         size_t length_ = JSSTRING_LENGTH(str_);                               \&#10;-        if (stacklen + length_ &gt; stackmax) {                                  \&#10;+        if (length_ &gt; stackmax - stacklen) {                                  \&#10;             void *ptr_;                                                       \&#10;+            if (stackmax &gt;= STACK_LENGTH_LIMIT ||                             \&#10;+                length_ &gt;= STACK_LENGTH_LIMIT - stacklen) {                   \&#10;+                goto done;                                                    \&#10;+            }                                                                 \&#10;             stackmax = JS_BIT(JS_CeilingLog2(stacklen + length_));            \&#10;             ptr_ = JS_realloc(cx, stackbuf, (stackmax+1) * sizeof(jschar));   \&#10;             if (!ptr_) {                                                      \&#10;@@ -471,6 +480,7 @@ InitExceptionObject(JSContext *cx, JSObject *obj, JSString *message,&#10; &#10; #undef APPEND_CHAR_TO_STACK&#10; #undef APPEND_STRING_TO_STACK&#10;+#undef STACK_LENGTH_LIMIT&#10; &#10; done:&#10;     if (ok)&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: bclary%bclary.com &lt;bclary%bclary.com&gt;  2006-10-10 18:51:28    JavaScript Test - regression test for bug 348532, by Igor Bukanov&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/GC/regress-348532.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..b9298e3&#10;@@ -0,0 +1,81 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Igor Bukanov&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 348532;&#10;+var summary = 'Do not overflow int when constructing Error.stack';&#10;+var actual = '';&#10;+var expect = '';&#10;+&#10;+&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+test();&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+&#10;+function test()&#10;+{&#10;+  enterFunc ('test');&#10;+  printBugNumber (bug);&#10;+  printStatus (summary);&#10;+&#10;+  expectExitCode(0);&#10;+  expectExitCode(3);&#10;+&#10;+  actual = 0;&#10;+  &#10;+  // construct string of 1&lt;&lt;23 characters&#10;+  var s = Array((1&lt;&lt;23)+1).join('x');&#10;+&#10;+  var recursionDepth = 0;&#10;+  function err() {&#10;+    if (++recursionDepth == 128)&#10;+      return new Error();&#10;+    return err.apply(this, arguments);&#10;+  }&#10;+&#10;+  // The full stack trace in error would include 128*2 copies of s exceeding&#10;+  //  2^23 * 256 or 2^31 in length&#10;+  var error = err(s,s);&#10;+&#10;+  writeLineToLog(error.stack.length);&#10;+&#10;+  expect = true;&#10;+  actual = (error.stack.length &gt; 0);&#10;+&#10;+  reportCompare(expect, actual, summary);&#10;+&#10;+  exitFunc ('test');&#10;+}&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">349527</Data></Cell>
    <Cell ss:StyleID="s68"><Data ss:Type="String">Author: igor.bukanov%gmail.com &lt;igor.bukanov%gmail.com&gt;  2006-08-26 15:44:38     Bug 349527: Using a single malloc block for a full copy of JSErrorReport. r=brendan&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsexn.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index cea84bf..37a7e88 100644&#10;@@ -89,34 +89,120 @@ typedef struct JSExnPrivate {&#10;     JSErrorReport *errorReport;&#10; } JSExnPrivate;&#10; &#10;-/*&#10;- * Undo all the damage done by exn_newPrivate.&#10;- */&#10;-static void&#10;-exn_destroyPrivate(JSContext *cx, JSExnPrivate *privateData)&#10;+static JSErrorReport *&#10;+CopyErrorReport(JSContext *cx, JSErrorReport *report)&#10; {&#10;-    JSErrorReport *report;&#10;-    const jschar **args;&#10;-&#10;-    if (!privateData)&#10;-        return;&#10;-    report = privateData-&gt;errorReport;&#10;-    if (report) {&#10;-        if (report-&gt;uclinebuf)&#10;-            JS_free(cx, (void *)report-&gt;uclinebuf);&#10;-        if (report-&gt;filename)&#10;-            JS_free(cx, (void *)report-&gt;filename);&#10;-        if (report-&gt;ucmessage)&#10;-            JS_free(cx, (void *)report-&gt;ucmessage);&#10;+    /*&#10;+     * We use a single malloc block to make a deep copy of JSErrorReport with&#10;+     * the following layout:&#10;+     *   JSErrorReport&#10;+     *   array of copies of report-&gt;messageArgs&#10;+     *   jschar array with characters for all messageArgs&#10;+     *   jschar array with characters for ucmessage&#10;+     *   jschar array with characters for uclinebuf and uctokenptr&#10;+     *   char array with characters for linebuf and tokenptr&#10;+     *   char array with characters for filename&#10;+     * Such layout together with the properties enforced by the following&#10;+     * asserts does not need any extra alignment padding.&#10;+     */&#10;+    JS_STATIC_ASSERT(sizeof(JSErrorReport) % sizeof(const char *) == 0);&#10;+    JS_STATIC_ASSERT(sizeof(const char *) % sizeof(jschar) == 0);&#10;+&#10;+    size_t filenameSize;&#10;+    size_t linebufSize;&#10;+    size_t uclinebufSize;&#10;+    size_t ucmessageSize;&#10;+    size_t i, argsArraySize, argsCopySize, argSize;&#10;+    size_t mallocSize;&#10;+    JSErrorReport *copy;&#10;+    uint8 *cursor;&#10;+&#10;+#define JS_CHARS_SIZE(jschars) ((js_strlen(jschars) + 1) * sizeof(jschar))&#10;+&#10;+    filenameSize = strlen(report-&gt;filename) + 1;&#10;+    linebufSize = report-&gt;linebuf ? strlen(report-&gt;linebuf) + 1 : 0;&#10;+    uclinebufSize = report-&gt;uclinebuf ? JS_CHARS_SIZE(report-&gt;uclinebuf) : 0;&#10;+    ucmessageSize = 0;&#10;+    argsArraySize = 0;&#10;+    argsCopySize = 0;&#10;+    if (report-&gt;ucmessage) {&#10;+        ucmessageSize = JS_CHARS_SIZE(report-&gt;ucmessage);&#10;         if (report-&gt;messageArgs) {&#10;-            args = report-&gt;messageArgs;&#10;-            while (*args)&#10;-                JS_free(cx, (void *)*args++);&#10;-            JS_free(cx, (void *)report-&gt;messageArgs);&#10;+            for (i = 0; report-&gt;messageArgs[i]; ++i)&#10;+                argsCopySize += JS_CHARS_SIZE(report-&gt;messageArgs[i]);&#10;+&#10;+            /* Non-null messageArgs should have at least one non-null arg. */&#10;+            JS_ASSERT(i != 0);&#10;+            argsArraySize = (i + 1) * sizeof(const jschar *);&#10;+        }&#10;+    }&#10;+&#10;+    /*&#10;+     * The mallocSize can not overflow since it represents the sum of the&#10;+     * sizes of already allocated objects.&#10;+     */&#10;+    mallocSize = sizeof(JSErrorReport) + argsArraySize + argsCopySize +&#10;+                 ucmessageSize + uclinebufSize + linebufSize + filenameSize;&#10;+    cursor = (uint8 *)JS_malloc(cx, mallocSize);&#10;+    if (!cursor)&#10;+        return NULL;&#10;+&#10;+    copy = (JSErrorReport *)cursor;&#10;+    memset(cursor, 0, sizeof(JSErrorReport));&#10;+    cursor += sizeof(JSErrorReport);&#10;+&#10;+    if (argsArraySize != 0) {&#10;+        copy-&gt;messageArgs = (const jschar **)cursor;&#10;+        cursor += argsArraySize;&#10;+        for (i = 0; report-&gt;messageArgs[i]; ++i) {&#10;+            copy-&gt;messageArgs[i] = (const jschar *)cursor;&#10;+            argSize = JS_CHARS_SIZE(report-&gt;messageArgs[i]);&#10;+            memcpy(cursor, report-&gt;messageArgs[i], argSize);&#10;+            cursor += argSize;&#10;+        }&#10;+        copy-&gt;messageArgs[i] = NULL;&#10;+        JS_ASSERT(argsCopySize == cursor - (uint8 *)copy-&gt;messageArgs[0]);&#10;+    }&#10;+&#10;+    if (report-&gt;ucmessage) {&#10;+        copy-&gt;ucmessage = (const jschar *)cursor;&#10;+        memcpy(cursor, report-&gt;ucmessage, ucmessageSize);&#10;+        cursor += ucmessageSize;&#10;+    }&#10;+&#10;+    if (report-&gt;uclinebuf) {&#10;+        copy-&gt;uclinebuf = (const jschar *)cursor;&#10;+        memcpy(cursor, report-&gt;uclinebuf, uclinebufSize);&#10;+        cursor += uclinebufSize;&#10;+        if (report-&gt;uctokenptr) {&#10;+            copy-&gt;uctokenptr = copy-&gt;uclinebuf + (report-&gt;uctokenptr -&#10;+                                                  report-&gt;uclinebuf);&#10;         }&#10;-        JS_free(cx, report);&#10;     }&#10;-    JS_free(cx, privateData);&#10;+&#10;+    if (report-&gt;linebuf) {&#10;+        copy-&gt;linebuf = (const char *)cursor;&#10;+        memcpy(cursor, report-&gt;linebuf, linebufSize);&#10;+        cursor += linebufSize;&#10;+        if (report-&gt;tokenptr) {&#10;+            copy-&gt;tokenptr = copy-&gt;linebuf + (report-&gt;tokenptr -&#10;+                                              report-&gt;linebuf);&#10;+        }&#10;+    }&#10;+&#10;+    copy-&gt;filename = (const char *)cursor;&#10;+    memcpy(cursor, report-&gt;filename, filenameSize);&#10;+    JS_ASSERT(cursor + filenameSize == (uint8 *)copy + mallocSize);&#10;+&#10;+    /* Copy non-pointer members. */&#10;+    copy-&gt;lineno = report-&gt;lineno;&#10;+    copy-&gt;errorNumber = report-&gt;errorNumber;&#10;+&#10;+    /* Note that this is before it gets flagged with JSREPORT_EXCEPTION */&#10;+    copy-&gt;flags = report-&gt;flags;&#10;+&#10;+#undef JS_CHARS_SIZE&#10;+    return copy;&#10; }&#10; &#10; /*&#10;@@ -125,99 +211,17 @@ exn_destroyPrivate(JSContext *cx, JSExnPrivate *privateData)&#10; static JSExnPrivate *&#10; exn_newPrivate(JSContext *cx, JSErrorReport *report)&#10; {&#10;-    intN i;&#10;     JSExnPrivate *newPrivate;&#10;-    JSErrorReport *newReport;&#10;-    size_t capacity;&#10; &#10;     newPrivate = (JSExnPrivate *)JS_malloc(cx, sizeof (JSExnPrivate));&#10;     if (!newPrivate)&#10;         return NULL;&#10;-    memset(newPrivate, 0, sizeof (JSExnPrivate));&#10;-&#10;-    /* Copy the error report */&#10;-    newReport = (JSErrorReport *)JS_malloc(cx, sizeof (JSErrorReport));&#10;-    if (!newReport)&#10;-        goto error;&#10;-    memset(newReport, 0, sizeof (JSErrorReport));&#10;-    newPrivate-&gt;errorReport = newReport;&#10;-&#10;-    if (report-&gt;filename) {&#10;-        newReport-&gt;filename = JS_strdup(cx, report-&gt;filename);&#10;-        if (!newReport-&gt;filename)&#10;-            goto error;&#10;-    } else {&#10;-        newReport-&gt;filename = NULL;&#10;-    }&#10;-&#10;-    newReport-&gt;lineno = report-&gt;lineno;&#10;-&#10;-    /*&#10;-     * We don't need to copy linebuf and tokenptr, because they&#10;-     * point into the deflated string cache.  (currently?)&#10;-     */&#10;-    newReport-&gt;linebuf = report-&gt;linebuf;&#10;-    newReport-&gt;tokenptr = report-&gt;tokenptr;&#10;-&#10;-    /*&#10;-     * But we do need to copy uclinebuf, uctokenptr, because they're&#10;-     * pointers into internal tokenstream structs, and may go away.&#10;-     */&#10;-    if (report-&gt;uclinebuf) {&#10;-        capacity = js_strlen(report-&gt;uclinebuf) + 1;&#10;-        newReport-&gt;uclinebuf =&#10;-            (const jschar *)JS_malloc(cx, capacity * sizeof(jschar));&#10;-        if (!newReport-&gt;uclinebuf)&#10;-            goto error;&#10;-        js_strncpy((jschar *)newReport-&gt;uclinebuf, report-&gt;uclinebuf, capacity);&#10;-        newReport-&gt;uctokenptr = newReport-&gt;uclinebuf + (report-&gt;uctokenptr -&#10;-                                                        report-&gt;uclinebuf);&#10;-    } else {&#10;-        newReport-&gt;uclinebuf = newReport-&gt;uctokenptr = NULL;&#10;-    }&#10;-&#10;-    if (report-&gt;ucmessage) {&#10;-        capacity = js_strlen(report-&gt;ucmessage) + 1;&#10;-        newReport-&gt;ucmessage = (const jschar *)&#10;-            JS_malloc(cx, capacity * sizeof(jschar));&#10;-        if (!newReport-&gt;ucmessage)&#10;-            goto error;&#10;-        js_strncpy((jschar *)newReport-&gt;ucmessage, report-&gt;ucmessage, capacity);&#10;-&#10;-        if (report-&gt;messageArgs) {&#10;-            for (i = 0; report-&gt;messageArgs[i]; i++)&#10;-                continue;&#10;-            JS_ASSERT(i);&#10;-            newReport-&gt;messageArgs =&#10;-                (const jschar **)JS_malloc(cx, (i + 1) * sizeof(jschar *));&#10;-            if (!newReport-&gt;messageArgs)&#10;-                goto error;&#10;-            for (i = 0; report-&gt;messageArgs[i]; i++) {&#10;-                capacity = js_strlen(report-&gt;messageArgs[i]) + 1;&#10;-                newReport-&gt;messageArgs[i] =&#10;-                    (const jschar *)JS_malloc(cx, capacity * sizeof(jschar));&#10;-                if (!newReport-&gt;messageArgs[i])&#10;-                    goto error;&#10;-                js_strncpy((jschar *)(newReport-&gt;messageArgs[i]),&#10;-                           report-&gt;messageArgs[i], capacity);&#10;-            }&#10;-            newReport-&gt;messageArgs[i] = NULL;&#10;-        } else {&#10;-            newReport-&gt;messageArgs = NULL;&#10;-        }&#10;-    } else {&#10;-        newReport-&gt;ucmessage = NULL;&#10;-        newReport-&gt;messageArgs = NULL;&#10;+    newPrivate-&gt;errorReport = CopyErrorReport(cx, report);&#10;+    if (!newPrivate-&gt;errorReport) {&#10;+        JS_free(cx, newPrivate);&#10;+        return NULL;&#10;     }&#10;-    newReport-&gt;errorNumber = report-&gt;errorNumber;&#10;-&#10;-    /* Note that this is before it gets flagged with JSREPORT_EXCEPTION */&#10;-    newReport-&gt;flags = report-&gt;flags;&#10;-&#10;     return newPrivate;&#10;-error:&#10;-    exn_destroyPrivate(cx, newPrivate);&#10;-    return NULL;&#10; }&#10; &#10; static void&#10;@@ -230,8 +234,8 @@ exn_finalize(JSContext *cx, JSObject *obj)&#10; &#10;     if (!JSVAL_IS_VOID(privateValue)) {&#10;         privateData = (JSExnPrivate*) JSVAL_TO_PRIVATE(privateValue);&#10;-        if (privateData)&#10;-            exn_destroyPrivate(cx, privateData);&#10;+        if (privateData &amp;&amp; privateData-&gt;errorReport)&#10;+            JS_free(cx, privateData-&gt;errorReport);&#10;     }&#10; }&#10; &#10;   </Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: igor.bukanov%gmail.com &lt;igor.bukanov%gmail.com&gt;  2006-08-28 13:57:16    Bug 349527: Fix for GCC warning introduced by the previous optimization. r=brendan&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsexn.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 37a7e88..076b40f 100644&#10;@@ -161,7 +161,7 @@ CopyErrorReport(JSContext *cx, JSErrorReport *report)&#10;             cursor += argSize;&#10;         }&#10;         copy-&gt;messageArgs[i] = NULL;&#10;-        JS_ASSERT(argsCopySize == cursor - (uint8 *)copy-&gt;messageArgs[0]);&#10;+        JS_ASSERT(cursor == (uint8 *)copy-&gt;messageArgs[0] + argsCopySize);&#10;     }&#10; &#10;     if (report-&gt;ucmessage) {&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: igor.bukanov%gmail.com &lt;igor.bukanov%gmail.com&gt;  2006-08-30 00:15:42    Bug 349527: More fixes for bugs that I added in the optimization patch. r=brendan&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsexn.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 076b40f..27ae055 100644&#10;@@ -119,7 +119,7 @@ CopyErrorReport(JSContext *cx, JSErrorReport *report)&#10; &#10; #define JS_CHARS_SIZE(jschars) ((js_strlen(jschars) + 1) * sizeof(jschar))&#10; &#10;-    filenameSize = strlen(report-&gt;filename) + 1;&#10;+    filenameSize = report-&gt;filename ? strlen(report-&gt;filename) + 1 : 0;&#10;     linebufSize = report-&gt;linebuf ? strlen(report-&gt;linebuf) + 1 : 0;&#10;     uclinebufSize = report-&gt;uclinebuf ? JS_CHARS_SIZE(report-&gt;uclinebuf) : 0;&#10;     ucmessageSize = 0;&#10;@@ -190,8 +190,10 @@ CopyErrorReport(JSContext *cx, JSErrorReport *report)&#10;         }&#10;     }&#10; &#10;-    copy-&gt;filename = (const char *)cursor;&#10;-    memcpy(cursor, report-&gt;filename, filenameSize);&#10;+    if (report-&gt;filename) {&#10;+        copy-&gt;filename = (const char *)cursor;&#10;+        memcpy(cursor, report-&gt;filename, filenameSize);&#10;+    }&#10;     JS_ASSERT(cursor + filenameSize == (uint8 *)copy + mallocSize);&#10; &#10;     /* Copy non-pointer members. */&#10;@@ -234,8 +236,11 @@ exn_finalize(JSContext *cx, JSObject *obj)&#10; &#10;     if (!JSVAL_IS_VOID(privateValue)) {&#10;         privateData = (JSExnPrivate*) JSVAL_TO_PRIVATE(privateValue);&#10;-        if (privateData &amp;&amp; privateData-&gt;errorReport)&#10;-            JS_free(cx, privateData-&gt;errorReport);&#10;+        if (privateData) {&#10;+            if (privateData-&gt;errorReport)&#10;+                JS_free(cx, privateData-&gt;errorReport);&#10;+            JS_free(cx, privateData);&#10;+        }&#10;     }&#10; }&#10; &#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">350312</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: brendan%mozilla.org &lt;brendan%mozilla.org&gt;  2006-08-28 01:58:49    Always need two more slots in the model stack for finally clause codegen (350312, r=shaver).&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsemit.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 1dd2aee..e380ceb 100644&#10;@@ -4588,10 +4588,13 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)&#10;              *     we need one slot for the JSOP_RETSUB's return pc index.&#10;              *     The unguarded catch is guaranteed to pop the exception,&#10;              *     i.e., to &quot;catch the exception&quot; &#45;- so we do not need to&#10;-             *     stack it across the finally in order to propagate it.&#10;+             *     stack it across the finally in order to propagate it &#45;-&#10;+             *     unless the catch block explicitly re-throws it!  We can't&#10;+             *     know whether this will happen by static analysis, so we&#10;+             *     must always budget for two slots.&#10;              */&#10;             JS_ASSERT(cg-&gt;stackDepth == depth);&#10;-            cg-&gt;stackDepth += (lastCatch &amp;&amp; !lastCatch-&gt;pn_kid2) ? 1 : 2;&#10;+            cg-&gt;stackDepth += 2;&#10;             if ((uintN)cg-&gt;stackDepth &gt; cg-&gt;maxStackDepth)&#10;                 cg-&gt;maxStackDepth = cg-&gt;stackDepth;&#10; &#10;@@ -4606,10 +4609,8 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)&#10;             }&#10; &#10;             /* Restore stack depth budget to its balanced state. */&#10;-            if (cg-&gt;stackDepth != depth) {&#10;-                JS_ASSERT(cg-&gt;stackDepth == depth + 1);&#10;-                cg-&gt;stackDepth = depth;&#10;-            }&#10;+            JS_ASSERT(cg-&gt;stackDepth == depth + 1);&#10;+            cg-&gt;stackDepth = depth;&#10;         }&#10;         if (!js_PopStatementCG(cx, cg))&#10;             return JS_FALSE;&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s68"><Data ss:Type="String">Author: bclary%bclary.com &lt;bclary%bclary.com&gt;  2006-08-29 06:03:01    JavaScript Test - regression test for bug 350312, by Brendan Eich&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/Regress/regress-350312.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..f0b64d9&#10;@@ -0,0 +1,87 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Brendan Eich&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 350312;&#10;+var summary = 'Accessing wrong stack slot with nested catch/finally';&#10;+var actual = '';&#10;+var expect = '';&#10;+&#10;+&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+test();&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+&#10;+function test()&#10;+{&#10;+  enterFunc ('test');&#10;+  printBugNumber (bug);&#10;+  printStatus (summary);&#10;+  &#10;+  function f(x,y) { &#10;+&#10;+    try &#10;+    { &#10;+      throw x;&#10;+    } &#10;+    catch(e) &#10;+    { &#10;+      if (y) &#10;+        throw e;&#10;+    } &#10;+    finally &#10;+    { &#10;+      try&#10;+      { &#10;+        throw 42;&#10;+      } &#10;+      catch(e2) &#10;+      { &#10;+        writeLineToLog(e2); &#10;+      } &#10;+    } &#10;+  }&#10;+&#10;+  expect = 42;&#10;+&#10;+  actual = f(2, 1);&#10;+  reportCompare(expect, actual, summary);&#10;+&#10;+  actual = f(2, 0);&#10;+  reportCompare(expect, actual, summary);&#10;+&#10;+  exitFunc ('test');&#10;+}&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: bclary%bclary.com &lt;bclary%bclary.com&gt;  2006-08-29 07:01:34     JavaScript Test - update test for bug 350312&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/Regress/regress-350312.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index f0b64d9..a60a361 100755&#10;@@ -66,21 +66,40 @@ function test()&#10;     { &#10;       try&#10;       { &#10;+        actual += 'finally,';&#10;         throw 42;&#10;       } &#10;       catch(e2) &#10;       { &#10;+        actual += e2;&#10;         writeLineToLog(e2); &#10;       } &#10;     } &#10;+    return 'returned';&#10;   }&#10; &#10;-  expect = 42;&#10;+  expect = 'finally,42';&#10;+  actual = '';&#10; &#10;-  actual = f(2, 1);&#10;+  try&#10;+  {&#10;+    writeLineToLog('test 1');&#10;+    f(2, 1);&#10;+  }&#10;+  catch(ex)&#10;+  {&#10;+  }&#10;   reportCompare(expect, actual, summary);&#10; &#10;-  actual = f(2, 0);&#10;+  actual = '';&#10;+  try&#10;+  {&#10;+    writeLineToLog('test 2');&#10;+    f(2, 0);&#10;+  }&#10;+  catch(ex)&#10;+  {&#10;+  }&#10;   reportCompare(expect, actual, summary);&#10; &#10;   exitFunc ('test');&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: brendan%mozilla.org &lt;brendan%mozilla.org&gt;  2006-08-30 07:15:22    Fix try/catch/finally code generation (350312, r=igor/shaver).&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xul/document/public/nsIXULPrototypeCache.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index c8f3265..40f29d5 100644&#10;@@ -129,7 +129,7 @@ const char XUL_FASTLOAD_FILE_BASENAME[] = &quot;XUL&quot;;&#10; // Increase the subtractor when changing version, say when changing the&#10; // (opaque to FastLoad code) format of JS script, function, regexp, etc.&#10; // XDR serializations.&#10;-#define XUL_FASTLOAD_FILE_VERSION       (0xfeedbeef - 16)&#10;+#define XUL_FASTLOAD_FILE_VERSION       (0xfeedbeef - 18)&#10; &#10; #define XUL_SERIALIZATION_BUFFER_SIZE   (64 * 1024)&#10; #define XUL_DESERIALIZATION_BUFFER_SIZE (8 * 1024)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsbool.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 552bdef..8dbd218 100644&#10;@@ -45,6 +45,18 @@&#10; &#10; JS_BEGIN_EXTERN_C&#10; &#10;+/*&#10;+ * Crypto-booleans, not visible to script but used internally by the engine.&#10;+ *&#10;+ * JSVAL_HOLE is a useful value for identifying a hole in an array.  It's also&#10;+ * used in the interpreter to represent &quot;no exception pending&quot;.  In general it&#10;+ * can be used to represent &quot;no value&quot;.&#10;+ *&#10;+ * JSVAL_ARETURN is used to throw asynchronous return for generator.close().&#10;+ */&#10;+#define JSVAL_HOLE      BOOLEAN_TO_JSVAL(2)&#10;+#define JSVAL_ARETURN   BOOLEAN_TO_JSVAL(3)&#10;+&#10; extern JSClass js_BooleanClass;&#10; &#10; extern JSObject *&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsemit.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 25cfa0e..b572618 100644&#10;@@ -329,11 +329,10 @@ ReportStatementTooLarge(JSContext *cx, JSCodeGenerator *cg)&#10;   Note that backpatch chains would present a problem for BuildSpanDepTable,&#10;   which inspects bytecode to build cg-&gt;spanDeps on demand, when the first&#10;   short jump offset overflows.  To solve this temporary problem, we emit a&#10;-  proxy bytecode (JSOP_BACKPATCH; JSOP_BACKPATCH_PUSH for jumps that push a&#10;-  result on the interpreter's stack, namely JSOP_GOSUB; or JSOP_BACKPATCH_POP&#10;-  for branch ops) whose nuses/ndefs counts help keep the stack balanced, but&#10;-  whose opcode format distinguishes its backpatch delta immediate operand from&#10;-  a normal jump offset.&#10;+  proxy bytecode (JSOP_BACKPATCH; JSOP_BACKPATCH_POP for branch ops) whose&#10;+  nuses/ndefs counts help keep the stack balanced, but whose opcode format&#10;+  distinguishes its backpatch delta immediate operand from a normal jump&#10;+  offset.&#10;  */&#10; static int&#10; BalanceJumpTargets(JSJumpTarget **jtp)&#10;@@ -1352,7 +1351,7 @@ EmitNonLocalJumpFixup(JSContext *cx, JSCodeGenerator *cg, JSStmtInfo *toStmt,&#10;           case STMT_FINALLY:&#10;             if (js_NewSrcNote(cx, cg, SRC_HIDDEN) &lt; 0)&#10;                 return JS_FALSE;&#10;-            jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH_PUSH, &amp;GOSUBS(*stmt));&#10;+            jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH, &amp;GOSUBS(*stmt));&#10;             if (jmp &lt; 0)&#10;                 return JS_FALSE;&#10;             break;&#10;@@ -4379,8 +4378,7 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)&#10;         if (pn-&gt;pn_kid3) {&#10;             if (js_NewSrcNote(cx, cg, SRC_HIDDEN) &lt; 0)&#10;                 return JS_FALSE;&#10;-            jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH_PUSH,&#10;-                                  &amp;GOSUBS(stmtInfo));&#10;+            jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH, &amp;GOSUBS(stmtInfo));&#10;             if (jmp &lt; 0)&#10;                 return JS_FALSE;&#10; &#10;@@ -4420,7 +4418,7 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)&#10;              *&#10;              * If there's no catch block without a catchguard, the last&#10;              * &lt;offset to next catch block&gt; points to rethrow code.  This&#10;-             * code will GOSUB to the finally code if appropriate, and is&#10;+             * code will [gosub] to the finally code if appropriate, and is&#10;              * also used for the catch-all trynote for capturing exceptions&#10;              * thrown from catch{} blocks.&#10;              */&#10;@@ -4438,6 +4436,10 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)&#10;                     /* Fix up and clean up previous catch block. */&#10;                     CHECK_AND_SET_JUMP_OFFSET_AT(cx, cg, guardJump);&#10; &#10;+                    /* Set cx-&gt;throwing to protect cx-&gt;exception from the GC. */&#10;+                    if (!js_Emit1(cx, cg, JSOP_THROWING) &lt; 0)&#10;+                        return JS_FALSE;&#10;+&#10;                     /*&#10;                      * Emit an unbalanced [leaveblock] for the previous catch,&#10;                      * whose block object count is saved below.&#10;@@ -4472,12 +4474,11 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)&#10; &#10;                 /* gosub &lt;finally&gt;, if required */&#10;                 if (pn-&gt;pn_kid3) {&#10;-                    jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH_PUSH,&#10;+                    jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH,&#10;                                           &amp;GOSUBS(stmtInfo));&#10;                     if (jmp &lt; 0)&#10;                         return JS_FALSE;&#10;-                    JS_ASSERT(cg-&gt;stackDepth == depth + 1);&#10;-                    cg-&gt;stackDepth = depth;&#10;+                    JS_ASSERT(cg-&gt;stackDepth == depth);&#10;                 }&#10; &#10;                 /*&#10;@@ -4499,64 +4500,62 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)&#10;         }&#10; &#10;         /*&#10;-         * We emit a [setsp, exception, gosub, throw] block for rethrowing&#10;-         * when there's no unguarded catch, and also for running finally code&#10;-         * while letting an uncaught exception pass through.&#10;+         * We emit a [setsp][gosub] sequence for running finally code while&#10;+         * letting an uncaught exception pass thrown from within the try in a&#10;+         * try-finally.  The [gosub] and [retsub] opcodes will take care of&#10;+         * stacking and rethrowing any exception pending across the finally.&#10;+         *&#10;+         * For rethrowing after a try-catch(guard)-finally, we have a problem:&#10;+         * all the guards have mismatched, leaving cx-&gt;exception still set but&#10;+         * cx-&gt;throwing clear, so that no exception appears to be pending for&#10;+         * [gosub] to stack and [retsub] to rethrow.  We must emit a special&#10;+         * [throwing] opcode in front of the [setsp][gosub] finally sequence.&#10;+         * This opcode will restore cx-&gt;throwing to true before running the&#10;+         * finally.&#10;+         * &#10;+         * For rethrowing after a try-catch(guard) without a finally, we emit&#10;+         * [throwing] before the [setsp][exception][throw] rethrow sequence.&#10;          */&#10;         if (pn-&gt;pn_kid3 || (lastCatch &amp;&amp; lastCatch-&gt;pn_kid2)) {&#10;             /*&#10;-             * Emit another stack fixup, because the catch could itself&#10;-             * throw an exception in an unbalanced state, and the finally&#10;-             * may need to call functions.  If there is no finally, only&#10;-             * guarded catches, the rethrow code below nevertheless needs&#10;-             * stack fixup.&#10;-             */&#10;-            finallyCatch = CG_OFFSET(cg);&#10;-&#10;-            /*&#10;              * Last catch guard jumps to the rethrow code sequence if none&#10;              * of the guards match.  Target guardJump at the beginning of the&#10;              * rethrow sequence, just in case a guard expression throws and&#10;              * leaves the stack unbalanced.&#10;-             *&#10;-             * What's more, we must jump to the front of the rethrow sequence&#10;-             * for a second reason: to re-sample the pending exception via the&#10;-             * [exception] opcode, so that it can be saved across the [gosub].&#10;-             * See below for case 2 in the comment describing finally clause&#10;-             * stack budget.&#10;              */&#10;-            if (lastCatch &amp;&amp; lastCatch-&gt;pn_kid2)&#10;+            if (lastCatch &amp;&amp; lastCatch-&gt;pn_kid2) {&#10;                 CHECK_AND_SET_JUMP_OFFSET_AT(cx, cg, GUARDJUMP(stmtInfo));&#10;+                if (pn-&gt;pn_kid3 &amp;&amp; !js_Emit1(cx, cg, JSOP_THROWING) &lt; 0)&#10;+                    return JS_FALSE;&#10;+            }&#10; &#10;+            /*&#10;+             * Emit another stack fixup, because the catch could itself&#10;+             * throw an exception in an unbalanced state, and the finally&#10;+             * may need to call functions.  If there is no finally, only&#10;+             * guarded catches, the rethrow code below nevertheless needs&#10;+             * stack fixup.&#10;+             */&#10;+            finallyCatch = CG_OFFSET(cg);&#10;             EMIT_UINT16_IMM_OP(JSOP_SETSP, (jsatomid)depth);&#10;             cg-&gt;stackDepth = depth;&#10; &#10;-            if (js_NewSrcNote(cx, cg, SRC_HIDDEN) &lt; 0 ||&#10;-                js_Emit1(cx, cg, JSOP_EXCEPTION) &lt; 0) {&#10;-                return JS_FALSE;&#10;-            }&#10;-&#10;             if (pn-&gt;pn_kid3) {&#10;-                jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH_PUSH,&#10;+                jmp = EmitBackPatchOp(cx, cg, JSOP_BACKPATCH,&#10;                                       &amp;GOSUBS(stmtInfo));&#10;                 if (jmp &lt; 0)&#10;                     return JS_FALSE;&#10; &#10;-                /*&#10;-                 * Exception and retsub pc index are modeled as on the stack.&#10;-                 * Decrease cg-&gt;stackDepth by one to account for JSOP_RETSUB&#10;-                 * popping the pc index.&#10;-                 */&#10;-                JS_ASSERT(cg-&gt;stackDepth == depth + 2);&#10;-                JS_ASSERT((uintN)cg-&gt;stackDepth &lt;= cg-&gt;maxStackDepth);&#10;-                cg-&gt;stackDepth = depth + 1;&#10;-            }&#10;-&#10;-            if (js_NewSrcNote(cx, cg, SRC_HIDDEN) &lt; 0 ||&#10;-                js_Emit1(cx, cg, JSOP_THROW) &lt; 0) {&#10;-                return JS_FALSE;&#10;+                JS_ASSERT(cg-&gt;stackDepth == depth);&#10;+                JS_ASSERT((uintN)depth &lt;= cg-&gt;maxStackDepth);&#10;+            } else {&#10;+                if (js_NewSrcNote(cx, cg, SRC_HIDDEN) &lt; 0 ||&#10;+                    js_Emit1(cx, cg, JSOP_EXCEPTION) &lt; 0 ||&#10;+                    js_NewSrcNote(cx, cg, SRC_HIDDEN) &lt; 0 ||&#10;+                    js_Emit1(cx, cg, JSOP_THROW) &lt; 0) {&#10;+                    return JS_FALSE;&#10;+                }&#10;             }&#10;-            JS_ASSERT(cg-&gt;stackDepth == depth);&#10;         }&#10; &#10;         /*&#10;@@ -4568,30 +4567,10 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)&#10;                 return JS_FALSE;&#10; &#10;             /*&#10;-             * The stack budget must be balanced at this point.  There are&#10;-             * three cases:&#10;-             *&#10;-             * 1.  try-finally: we need two more slots for the saved exception&#10;-             *     and the JSOP_RETSUB's return pc index that was pushed by&#10;-             *     the JSOP_GOSUB opcode that called this finally clause.&#10;-             *&#10;-             * 2.  try-catch(guard)...-catch(guard)-finally: we can't know at&#10;-             *     compile time whether a guarded catch caught the exception,&#10;-             *     so we may need to propagate it via re-throw bytecode when&#10;-             *     the finally returns.  In this case, if no guard expression&#10;-             *     evaluates to true, we will jump to the rethrow sequence,&#10;-             *     which re-samples cx-&gt;exception using JSOP_EXCEPTION, then&#10;-             *     calls the finally subroutine.  So in this case as well as&#10;-             *     in case 1, two more slots will already be on the stack.&#10;-             *&#10;-             * 3.  try-catch-finally or try-catch(guard)...-catch-finally:&#10;-             *     we need one slot for the JSOP_RETSUB's return pc index.&#10;-             *     The unguarded catch is guaranteed to pop the exception,&#10;-             *     i.e., to &quot;catch the exception&quot; &#45;- so we do not need to&#10;-             *     stack it across the finally in order to propagate it &#45;-&#10;-             *     unless the catch block explicitly re-throws it!  We can't&#10;-             *     know whether this will happen by static analysis, so we&#10;-             *     must always budget for two slots.&#10;+             * The stack budget must be balanced at this point.  All [gosub]&#10;+             * calls emitted before this point will push two stack slots, one&#10;+             * for the pending exception (or JSVAL_HOLE if there is no pending&#10;+             * exception) and one for the [retsub] pc-index.&#10;              */&#10;             JS_ASSERT(cg-&gt;stackDepth == depth);&#10;             cg-&gt;stackDepth += 2;&#10;@@ -4609,7 +4588,7 @@ js_EmitTree(JSContext *cx, JSCodeGenerator *cg, JSParseNode *pn)&#10;             }&#10; &#10;             /* Restore stack depth budget to its balanced state. */&#10;-            JS_ASSERT(cg-&gt;stackDepth == depth + 1);&#10;+            JS_ASSERT(cg-&gt;stackDepth == depth + 2);&#10;             cg-&gt;stackDepth = depth;&#10;         }&#10;         if (!js_PopStatementCG(cx, cg))&#10;@@ -6390,40 +6369,3 @@ js_FinishTakingTryNotes(JSContext *cx, JSCodeGenerator *cg, JSTryNote *notes)&#10;     notes[count].length = CG_OFFSET(cg);&#10;     notes[count].catchStart = 0;&#10; }&#10;-&#10;-#if JS_HAS_GENERATORS&#10;-&#10;-jsbytecode *&#10;-js_FindFinallyHandler(JSScript *script, jsbytecode *pc)&#10;-{&#10;-    JSTryNote *tn;&#10;-    ptrdiff_t off;&#10;-&#10;-    tn = script-&gt;trynotes;&#10;-    if (!tn)&#10;-        return NULL;&#10;-&#10;-    off = pc - script-&gt;main;&#10;-    if (off &lt; 0)&#10;-        return NULL;&#10;-&#10;-    JS_ASSERT(tn-&gt;catchStart != 0);&#10;-    do {&#10;-        if ((jsuword)(off - tn-&gt;start) &lt; (jsuword)tn-&gt;length) {&#10;-            /*&#10;-             * We have a handler, is it finally?&#10;-             *&#10;-             * Catch bytecode begins with:   JSOP_SETSP JSOP_ENTERBLOCK&#10;-             * Finally bytecode begins with: JSOP_SETSP JSOP_EXCEPTION&#10;-             */&#10;-            pc = script-&gt;main + tn-&gt;catchStart;&#10;-            JS_ASSERT(*pc == JSOP_SETSP);&#10;-            if (pc[js_CodeSpec[JSOP_SETSP].length] == JSOP_EXCEPTION)&#10;-                return pc;&#10;-            JS_ASSERT(pc[js_CodeSpec[JSOP_SETSP].length] == JSOP_ENTERBLOCK);&#10;-        }&#10;-    } while ((++tn)-&gt;catchStart != 0);&#10;-    return NULL;&#10;-}&#10;-&#10;-#endif&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsinterp.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 6a69667..3dc22e0 100644&#10;@@ -5452,12 +5452,18 @@ interrupt:&#10;           END_CASE(JSOP_SETSP)&#10; &#10;           BEGIN_CASE(JSOP_GOSUB)&#10;+            JS_ASSERT(cx-&gt;exception != JSVAL_HOLE);&#10;+            lval = cx-&gt;throwing ? cx-&gt;exception : JSVAL_HOLE;&#10;+            PUSH(lval);&#10;             i = PTRDIFF(pc, script-&gt;main, jsbytecode) + JSOP_GOSUB_LENGTH;&#10;             len = GET_JUMP_OFFSET(pc);&#10;             PUSH(INT_TO_JSVAL(i));&#10;           END_VARLEN_CASE&#10; &#10;           BEGIN_CASE(JSOP_GOSUBX)&#10;+            JS_ASSERT(cx-&gt;exception != JSVAL_HOLE);&#10;+            lval = cx-&gt;throwing ? cx-&gt;exception : JSVAL_HOLE;&#10;+            PUSH(lval);&#10;             i = PTRDIFF(pc, script-&gt;main, jsbytecode) + JSOP_GOSUBX_LENGTH;&#10;             len = GET_JUMPX_OFFSET(pc);&#10;             PUSH(INT_TO_JSVAL(i));&#10;@@ -5466,6 +5472,19 @@ interrupt:&#10;           BEGIN_CASE(JSOP_RETSUB)&#10;             rval = POP();&#10;             JS_ASSERT(JSVAL_IS_INT(rval));&#10;+            lval = POP();&#10;+            if (lval != JSVAL_HOLE) {&#10;+                /*&#10;+                 * Exception was pending during finally, throw it *before* we&#10;+                 * adjust pc, because pc indexes into script-&gt;trynotes.  This&#10;+                 * turns out not to be necessary, but it seems clearer.  And&#10;+                 * it points out a FIXME: 350509, due to Igor Bukanov.&#10;+                 */&#10;+                cx-&gt;throwing = JS_TRUE;&#10;+                cx-&gt;exception = lval;&#10;+                ok = JS_FALSE;&#10;+                goto out;&#10;+            }&#10;             len = JSVAL_TO_INT(rval);&#10;             pc = script-&gt;main;&#10;           END_VARLEN_CASE&#10;@@ -5475,6 +5494,11 @@ interrupt:&#10;             cx-&gt;throwing = JS_FALSE;&#10;           END_CASE(JSOP_EXCEPTION)&#10; &#10;+          BEGIN_CASE(JSOP_THROWING)&#10;+            JS_ASSERT(!cx-&gt;throwing);&#10;+            cx-&gt;throwing = JS_TRUE;&#10;+          END_CASE(JSOP_THROWING)&#10;+&#10;           BEGIN_CASE(JSOP_THROW)&#10;             cx-&gt;throwing = JS_TRUE;&#10;             cx-&gt;exception = POP_OPND();&#10;@@ -6108,7 +6132,6 @@ interrupt:&#10; &#10; #ifdef JS_THREADED_INTERP&#10;           L_JSOP_BACKPATCH:&#10;-          L_JSOP_BACKPATCH_PUSH:&#10;           L_JSOP_BACKPATCH_POP:&#10; #else&#10;           default:&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsiter.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index b7f4158..f1e312a 100644&#10;@@ -123,14 +123,6 @@ js_NewGenerator(JSContext *cx, JSStackFrame *fp);&#10; extern JSBool&#10; js_CloseGeneratorObject(JSContext *cx, JSGenerator *gen);&#10; &#10;-&#10;-/*&#10;- * Special unique value to implement asynchronous return for&#10;- * generator.close(). Scripts never see it.&#10;- */&#10;-&#10;-#define JSVAL_ARETURN   BOOLEAN_TO_JSVAL(JS_TRUE + 1)&#10;-&#10; #endif&#10; &#10; extern JSClass          js_GeneratorClass;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsopcode.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 02e447b..a3b76c7 100644&#10;@@ -937,7 +937,8 @@ Decompile(SprintStack *ss, jsbytecode *pc, intN nb)&#10;     jsval val;&#10;     int stackDummy;&#10; &#10;-    static const char finally_cookie[]   = &quot;/*FINALLY*/&quot;;&#10;+    static const char exception_cookie[] = &quot;/*EXCEPTION*/&quot;;&#10;+    static const char retsub_pc_cookie[] = &quot;/*RETSUB_PC*/&quot;;&#10;     static const char iter_cookie[]      = &quot;/*ITER*/&quot;;&#10;     static const char with_cookie[]      = &quot;/*WITH*/&quot;;&#10;     static const char dot_format[]       = &quot;%s.%s&quot;;&#10;@@ -1238,12 +1239,17 @@ Decompile(SprintStack *ss, jsbytecode *pc, intN nb)&#10;                  * address, popped by JSOP_RETSUB and counted by script-&gt;depth&#10;                  * but not by ss-&gt;top (see JSOP_SETSP, below).&#10;                  */&#10;-                todo = Sprint(&amp;ss-&gt;sprinter, finally_cookie);&#10;+                todo = Sprint(&amp;ss-&gt;sprinter, exception_cookie);&#10;+                if (todo &lt; 0 || !PushOff(ss, todo, op))&#10;+                    return JS_FALSE;&#10;+                todo = Sprint(&amp;ss-&gt;sprinter, retsub_pc_cookie);&#10;                 break;&#10; &#10;               case JSOP_RETSUB:&#10;                 rval = POP_STR();&#10;-                LOCAL_ASSERT(strcmp(rval, finally_cookie) == 0);&#10;+                LOCAL_ASSERT(strcmp(rval, retsub_pc_cookie) == 0);&#10;+                lval = POP_STR();&#10;+                LOCAL_ASSERT(strcmp(lval, exception_cookie) == 0);&#10;                 todo = -2;&#10;                 break;&#10; &#10;@@ -1639,6 +1645,10 @@ Decompile(SprintStack *ss, jsbytecode *pc, intN nb)&#10;               }&#10; #endif&#10; &#10;+              case JSOP_THROWING:&#10;+                todo = -2;&#10;+                break;&#10;+&#10;               case JSOP_THROW:&#10;                 sn = js_GetSrcNote(jp-&gt;script, pc);&#10;                 todo = -2;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsopcode.tbl &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 0d09d2d..1dd8e19 100644&#10;@@ -226,8 +226,8 @@ OPDEF(JSOP_INSTANCEOF,112,js_instanceof_str,js_instanceof_str,1,2,1,6,JOF_BYTE|J&#10; OPDEF(JSOP_DEBUGGER,  113,&quot;debugger&quot;,   NULL,         1,  0,  0,  0,  JOF_BYTE)&#10; &#10; /* gosub/retsub for finally handling */&#10;-OPDEF(JSOP_GOSUB,     114,&quot;gosub&quot;,      NULL,         3,  0,  1,  0,  JOF_JUMP)&#10;-OPDEF(JSOP_RETSUB,    115,&quot;retsub&quot;,     NULL,         1,  1,  0,  0,  JOF_BYTE)&#10;+OPDEF(JSOP_GOSUB,     114,&quot;gosub&quot;,      NULL,         3,  0,  0,  0,  JOF_JUMP)&#10;+OPDEF(JSOP_RETSUB,    115,&quot;retsub&quot;,     NULL,         1,  0,  0,  0,  JOF_BYTE)&#10; &#10; /* More exception handling ops. */&#10; OPDEF(JSOP_EXCEPTION, 116,&quot;exception&quot;,  NULL,         1,  0,  1,  0,  JOF_BYTE)&#10;@@ -319,7 +319,7 @@ OPDEF(JSOP_IFEQX,         140,&quot;ifeqx&quot;,    NULL,       5,  1,  0,  0,  JOF_JUMPX|&#10; OPDEF(JSOP_IFNEX,         141,&quot;ifnex&quot;,    NULL,       5,  1,  0,  0,  JOF_JUMPX)&#10; OPDEF(JSOP_ORX,           142,&quot;orx&quot;,      NULL,       5,  1,  0,  0,  JOF_JUMPX|JOF_DETECTING)&#10; OPDEF(JSOP_ANDX,          143,&quot;andx&quot;,     NULL,       5,  1,  0,  0,  JOF_JUMPX|JOF_DETECTING)&#10;-OPDEF(JSOP_GOSUBX,        144,&quot;gosubx&quot;,   NULL,       5,  0,  1,  0,  JOF_JUMPX)&#10;+OPDEF(JSOP_GOSUBX,        144,&quot;gosubx&quot;,   NULL,       5,  0,  0,  0,  JOF_JUMPX)&#10; OPDEF(JSOP_CASEX,         145,&quot;casex&quot;,    NULL,       5,  1,  0,  0,  JOF_JUMPX)&#10; OPDEF(JSOP_DEFAULTX,      146,&quot;defaultx&quot;, NULL,       5,  1,  0,  0,  JOF_JUMPX)&#10; OPDEF(JSOP_TABLESWITCHX,  147,&quot;tableswitchx&quot;,NULL,   -1,  1,  0,  0,  JOF_TABLESWITCHX|JOF_DETECTING)&#10;@@ -328,7 +328,9 @@ OPDEF(JSOP_LOOKUPSWITCHX, 148,&quot;lookupswitchx&quot;,NULL,  -1,  1,  0,  0,  JOF_LOOKUP&#10; /* Placeholders for a real jump opcode set during backpatch chain fixup. */&#10; OPDEF(JSOP_BACKPATCH,     149,&quot;backpatch&quot;,NULL,       3,  0,  0,  0,  JOF_JUMP|JOF_BACKPATCH)&#10; OPDEF(JSOP_BACKPATCH_POP, 150,&quot;backpatch_pop&quot;,NULL,   3,  1,  0,  0,  JOF_JUMP|JOF_BACKPATCH)&#10;-OPDEF(JSOP_BACKPATCH_PUSH,151,&quot;backpatch_push&quot;,NULL,  3,  0,  1,  0,  JOF_JUMP|JOF_BACKPATCH)&#10;+&#10;+/* Set cx-&gt;throwing where cx-&gt;exception was already set, to trigger rethrow. */&#10;+OPDEF(JSOP_THROWING,      151,&quot;throwing&quot;, NULL,       1,  0,  0,  0,  JOF_BYTE)&#10; &#10; /* Set and get return value pseudo-register in stack frame. */&#10; OPDEF(JSOP_SETRVAL,       152,&quot;setrval&quot;,  NULL,       1,  1,  0,  0,  JOF_BYTE)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsscript.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index a4d3b6a..ec1bf04 100644&#10;@@ -1515,3 +1515,43 @@ js_GetScriptLineExtent(JSScript *script)&#10;     }&#10;     return 1 + lineno - script-&gt;lineno;&#10; }&#10;+&#10;+#if JS_HAS_GENERATORS&#10;+&#10;+jsbytecode *&#10;+js_FindFinallyHandler(JSScript *script, jsbytecode *pc)&#10;+{&#10;+    JSTryNote *tn;&#10;+    ptrdiff_t off;&#10;+    JSOp op2;&#10;+&#10;+    tn = script-&gt;trynotes;&#10;+    if (!tn)&#10;+        return NULL;&#10;+&#10;+    off = pc - script-&gt;main;&#10;+    if (off &lt; 0)&#10;+        return NULL;&#10;+&#10;+    JS_ASSERT(tn-&gt;catchStart != 0);&#10;+    do {&#10;+        if ((jsuword)(off - tn-&gt;start) &lt; (jsuword)tn-&gt;length) {&#10;+            /*&#10;+             * We have a handler: is it the finally one, or a catch handler?&#10;+             *&#10;+             * Catch bytecode begins with:   JSOP_SETSP JSOP_ENTERBLOCK&#10;+             * Finally bytecode begins with: JSOP_SETSP JSOP_(GOSUB|EXCEPTION)&#10;+             */&#10;+            pc = script-&gt;main + tn-&gt;catchStart;&#10;+            JS_ASSERT(*pc == JSOP_SETSP);&#10;+            op2 = pc[JSOP_SETSP_LENGTH];&#10;+            if (op2 != JSOP_ENTERBLOCK) {&#10;+                JS_ASSERT(op2 == JSOP_GOSUB || op2 == JSOP_EXCEPTION);&#10;+                return pc;&#10;+            }&#10;+        }&#10;+    } while ((++tn)-&gt;catchStart != 0);&#10;+    return NULL;&#10;+}&#10;+&#10;+#endif&#10;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: bclary%bclary.com &lt;bclary%bclary.com&gt;  2006-10-10 18:55:11    JavaScript Tests - regression tests for bug 350312, by Igor Bukanov, Brendan Eich&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/Regress/regress-350312-01.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..f889d4c&#10;@@ -0,0 +1,81 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Igor Bukanov&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 350312;&#10;+var summary = 'Accessing wrong stack slot with nested catch/finally';&#10;+var actual = '';&#10;+var expect = '';&#10;+&#10;+&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+test();&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+&#10;+function test()&#10;+{&#10;+  enterFunc ('test');&#10;+  printBugNumber (bug);&#10;+  printStatus (summary);&#10;+&#10;+  var tmp;&#10;+&#10;+  function f()&#10;+    {&#10;+      try {   &#10;+        try {   &#10;+          throw 1;&#10;+        } catch (e) {&#10;+          throw e;&#10;+        } finally {&#10;+          tmp = true;&#10;+        }&#10;+      } catch (e) {&#10;+        return e;&#10;+      }&#10;+    }&#10;+&#10;+  var ex = f();&#10;+&#10;+  var passed = ex === 1;&#10;+  if (!passed) {&#10;+    writeLineToLog(&quot;Failed!&quot;);&#10;+    writeLineToLog(&quot;ex=&quot;+uneval(ex));&#10;+  }&#10;+  reportCompare(true, passed, summary);&#10;+&#10;+  exitFunc ('test');&#10;+}&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/Regress/regress-350312-02.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..3f6d663&#10;@@ -0,0 +1,143 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Brendan Eich&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 350312;&#10;+var summary = 'Accessing wrong stack slot with nested catch/finally';&#10;+var actual = '';&#10;+var expect = '';&#10;+&#10;+&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+test();&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+&#10;+function test()&#10;+{&#10;+  enterFunc ('test');&#10;+  printBugNumber (bug);&#10;+  printStatus (summary);&#10;+&#10;+  function createPrint(obj)&#10;+    {&#10;+      return new Function(&quot;actual += &quot; + obj + &quot; + ','; &quot; + &#10;+                          &quot;writeLineToLog(&quot; + obj + &quot;);&quot;);&#10;+    }&#10;+&#10;+  function createThrow(obj)&#10;+    {&#10;+      return new Function(&quot;throw &quot; + obj + &quot;; &quot;);&#10;+    }&#10;+&#10;+&#10;+  function f(a, b, c)&#10;+    {&#10;+      try {&#10;+        a();&#10;+      } catch (e if e == null) {&#10;+        b();&#10;+      } finally {&#10;+        c();&#10;+      }&#10;+    }&#10;+&#10;+  writeLineToLog('test 1');&#10;+  expect = 'a,c,';&#10;+  actual = '';&#10;+  try&#10;+  {&#10;+    f(createPrint(&quot;'a'&quot;), createPrint(&quot;'b'&quot;), createPrint(&quot;'c'&quot;));&#10;+  }&#10;+  catch(ex)&#10;+  {&#10;+    actual += 'caught ' + ex;&#10;+  }&#10;+  reportCompare(expect, actual, summary + ': 1');&#10;+&#10;+  writeLineToLog('test 2');&#10;+  expect = 'c,caught a';&#10;+  actual = '';&#10;+  try&#10;+  {&#10;+    f(createThrow(&quot;'a'&quot;), createPrint(&quot;'b'&quot;), createPrint(&quot;'c'&quot;));&#10;+  }&#10;+  catch(ex)&#10;+  {&#10;+    actual += 'caught ' + ex;&#10;+  }&#10;+  reportCompare(expect, actual, summary + ': 2');&#10;+&#10;+  writeLineToLog('test 3');&#10;+  expect = 'b,c,';&#10;+  actual = '';&#10;+  try&#10;+  {&#10;+    f(createThrow(&quot;null&quot;), createPrint(&quot;'b'&quot;), createPrint(&quot;'c'&quot;));&#10;+  }&#10;+  catch(ex)&#10;+  {&#10;+    actual += 'caught ' + ex;&#10;+  }&#10;+  reportCompare(expect, actual, summary + ': 3');&#10;+&#10;+  writeLineToLog('test 4');&#10;+  expect = 'a,c,';&#10;+  actual = '';&#10;+  try&#10;+  {&#10;+    f(createPrint(&quot;'a'&quot;), createThrow(&quot;'b'&quot;), createPrint(&quot;'c'&quot;));&#10;+  }&#10;+  catch(ex)&#10;+  {&#10;+    actual += 'caught ' + ex;&#10;+  }&#10;+  reportCompare(expect, actual, summary + ': 4');&#10;+&#10;+  writeLineToLog('test 5');&#10;+  expect = 'c,caught b';&#10;+  actual = '';&#10;+  try&#10;+  {&#10;+    f(createThrow(&quot;null&quot;), createThrow(&quot;'b'&quot;), createPrint(&quot;'c'&quot;));&#10;+  }&#10;+  catch(ex)&#10;+  {&#10;+    actual += 'caught ' + ex;&#10;+  }&#10;+  reportCompare(expect, actual, summary + ': 5');&#10;+&#10;+  exitFunc ('test');&#10;+}&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/Regress/regress-350312-03.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..646a00c&#10;@@ -0,0 +1,147 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Brendan Eich&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 350312;&#10;+var summary = 'Accessing wrong stack slot with nested catch/finally';&#10;+var actual = '';&#10;+var expect = '';&#10;+&#10;+&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+test();&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+&#10;+function test()&#10;+{&#10;+  enterFunc ('test');&#10;+  printBugNumber (bug);&#10;+  printStatus (summary);&#10;+&#10;+  var pfx  = &quot;(function (x) {try {if (x &gt; 41) throw x}&quot;,&#10;+    cg1a = &quot; catch (e if e === 42) {var v = 'catch guard 1 ' + e; actual += v + ',';writeLineToLog(v);}&quot;&#10;+    cg1b = &quot; catch (e if e === 42) {var v = 'catch guard 1 + throw ' + e; actual += v + ',';writeLineToLog(v); throw e;}&quot;&#10;+    cg2  = &quot; catch (e if e === 43) {var v = 'catch guard 2 ' + e; actual += v + ',';writeLineToLog(v)}&quot;&#10;+    cat  = &quot; catch (e) {var v = 'catch all ' + e; writeLineToLog(v); if (e == 44) throw e}&quot;&#10;+    fin  = &quot; finally{var v = 'fin'; actual += v + ',';writeLineToLog(v)}&quot;,&#10;+    end  = &quot;})&quot;;&#10;+&#10;+  var exphash  = {&#10;+    pfx: &quot;(function (y) { var result = ''; y = y + ',';&quot;,&#10;+    cg1a: &quot; result += (y === '42,') ? ('catch guard 1 ' + y):'';&quot;,&#10;+    cg1b: &quot; result += (y === '42,') ? ('catch guard 1 + throw ' + y):'';&quot;,&#10;+    cg2:  &quot; result += (y === '43,') ? ('catch guard 2 ' + y):'';&quot;,&#10;+    cat:  &quot; result += (y &gt; 41) ? ('catch all ' + y):'';&quot;,&#10;+    fin:  &quot; result += 'fin,';&quot;,&#10;+    end:  &quot;return result;})&quot;&#10;+  };&#10;+&#10;+  var src = [&#10;+    pfx + fin + end,&#10;+    pfx + cat + end,&#10;+    pfx + cat + fin + end,&#10;+    pfx + cg1a + end,&#10;+    pfx + cg1a + fin + end,&#10;+    pfx + cg1a + cat + end,&#10;+    pfx + cg1a + cat + fin + end,&#10;+    pfx + cg1a + cg2 + end,&#10;+    pfx + cg1a + cg2 + fin + end,&#10;+    pfx + cg1a + cg2 + cat + end,&#10;+    pfx + cg1a + cg2 + cat + fin + end,&#10;+    pfx + cg1b + end,&#10;+    pfx + cg1b + fin + end,&#10;+    pfx + cg1b + cat + end,&#10;+    pfx + cg1b + cat + fin + end,&#10;+    pfx + cg1b + cg2 + end,&#10;+    pfx + cg1b + cg2 + fin + end,&#10;+    pfx + cg1b + cg2 + cat + end,&#10;+    pfx + cg1b + cg2 + cat + fin + end,&#10;+    ];&#10;+&#10;+  var expsrc = [&#10;+    exphash.pfx + exphash.fin + exphash.end,&#10;+    exphash.pfx + exphash.cat + exphash.end,&#10;+    exphash.pfx + exphash.cat + exphash.fin + exphash.end,&#10;+    exphash.pfx + exphash.cg1a + exphash.end,&#10;+    exphash.pfx + exphash.cg1a + exphash.fin + exphash.end,&#10;+    exphash.pfx + exphash.cg1a + exphash.cat + exphash.end,&#10;+    exphash.pfx + exphash.cg1a + exphash.cat + exphash.fin + exphash.end,&#10;+    exphash.pfx + exphash.cg1a + exphash.cg2 + exphash.end,&#10;+    exphash.pfx + exphash.cg1a + exphash.cg2 + exphash.fin + exphash.end,&#10;+    exphash.pfx + exphash.cg1a + exphash.cg2 + exphash.cat + exphash.end,&#10;+    exphash.pfx + exphash.cg1a + exphash.cg2 + exphash.cat + exphash.fin + exphash.end,&#10;+    exphash.pfx + exphash.cg1b + exphash.end,&#10;+    exphash.pfx + exphash.cg1b + exphash.fin + exphash.end,&#10;+    exphash.pfx + exphash.cg1b + exphash.cat + exphash.end,&#10;+    exphash.pfx + exphash.cg1b + exphash.cat + exphash.fin + exphash.end,&#10;+    exphash.pfx + exphash.cg1b + exphash.cg2 + exphash.end,&#10;+    exphash.pfx + exphash.cg1b + exphash.cg2 + exphash.fin + exphash.end,&#10;+    exphash.pfx + exphash.cg1b + exphash.cg2 + exphash.cat + exphash.end,&#10;+    exphash.pfx + exphash.cg1b + exphash.cg2 + exphash.cat + exphash.fin + exphash.end,&#10;+    ];&#10;+&#10;+  for (var i in src) {&#10;+    writeLineToLog(&quot;\n=== &quot; + i + &quot;: &quot; + src[i]);&#10;+    var f = eval(src[i]);&#10;+    var exp = eval(expsrc[i]);&#10;+    // dis(f);&#10;+    writeLineToLog('decompiling: ' + f);&#10;+    //writeLineToLog('decompiling exp: ' + exp);&#10;+&#10;+    actual = '';&#10;+    try { expect = exp(41); f(41) } catch (e) { writeLineToLog('tried f(41), caught ' + e) }&#10;+    reportCompare(expect, actual, summary);&#10;+&#10;+    actual = '';&#10;+    try { expect = exp(42); f(42) } catch (e) { writeLineToLog('tried f(42), caught ' + e) }&#10;+    reportCompare(expect, actual, summary);&#10;+&#10;+    actual = '';&#10;+    try { expect = exp(43); f(43) } catch (e) { writeLineToLog('tried f(43), caught ' + e) }&#10;+    reportCompare(expect, actual, summary);&#10;+&#10;+    actual = '';&#10;+    try { expect = exp(44); f(44) } catch (e) { writeLineToLog('tried f(44), caught ' + e) }&#10;+    reportCompare(expect, actual, summary);&#10;+&#10;+    actual = '';&#10;+    try { expect = exp(45); f(45) } catch (e) { writeLineToLog('tried f(44), caught ' + e) }&#10;+    reportCompare(expect, actual, summary);&#10;+&#10;+  }&#10;+&#10;+  exitFunc ('test');&#10;+}&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_7/geniter/regress-350312.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..e202d58&#10;@@ -0,0 +1,111 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): Igor Bukanov&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 350312;&#10;+var summary = 'Accessing wrong stack slot with nested catch/finally';&#10;+var actual = '';&#10;+var expect = '';&#10;+&#10;+&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+test();&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+&#10;+function test()&#10;+{&#10;+  enterFunc ('test');&#10;+  printBugNumber (bug);&#10;+  printStatus (summary);&#10;+&#10;+  var iter;&#10;+  function gen()&#10;+    { &#10;+      try {&#10;+        yield iter;&#10;+      } catch (e if e == null) {&#10;+        actual += 'CATCH,';&#10;+        writeLineToLog(&quot;CATCH&quot;);&#10;+      } finally {&#10;+        actual += 'FINALLY';&#10;+        writeLineToLog(&quot;FINALLY&quot;);&#10;+      }&#10;+    }&#10;+&#10;+  expect = 'FINALLY';&#10;+  actual = '';&#10;+  (iter = gen()).next().close();&#10;+  reportCompare(expect, actual, summary);&#10;+&#10;+  expect = 'FINALLY';&#10;+  actual = '';&#10;+  try&#10;+  {&#10;+    (iter = gen()).next().throw(1);&#10;+  }&#10;+  catch(ex)&#10;+  {&#10;+  }&#10;+  reportCompare(expect, actual, summary);&#10;+&#10;+  expect = 'CATCH,FINALLY';&#10;+  actual = '';&#10;+  try&#10;+  {&#10;+    (iter = gen()).next().throw(null);&#10;+  }&#10;+  catch(ex)&#10;+  {&#10;+  }&#10;+  reportCompare(expect, actual, summary);&#10;+&#10;+  expect = 'FINALLY';&#10;+  actual = '';&#10;+  var expectexcp = '[object StopIteration]';&#10;+  var actualexcp = '';&#10;+  try&#10;+  {&#10;+    (iter = gen()).next().next();      &#10;+  }&#10;+  catch(ex)&#10;+  {&#10;+    actualexcp = ex + '';&#10;+  }&#10;+  reportCompare(expect, actual, summary);&#10;+  reportCompare(expectexcp, actualexcp, summary);&#10;+&#10;+  exitFunc ('test');&#10;+}&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">351236</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Olli.Pettay%helsinki.fi &lt;Olli.Pettay%helsinki.fi&gt;  2007-05-28 04:57:13    Bug 351236, r+sr=neil&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- editor/composer/src/nsComposerCommandsUpdater.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 7c08154..0106479 100644&#10;@@ -49,14 +49,12 @@&#10; #include &quot;nsString.h&quot;&#10; &#10; #include &quot;nsICommandManager.h&quot;&#10;-#include &quot;nsPICommandUpdater.h&quot;&#10; &#10; #include &quot;nsIDocShell.h&quot;&#10; #include &quot;nsITransactionManager.h&quot;&#10; &#10; nsComposerCommandsUpdater::nsComposerCommandsUpdater()&#10; :  mDOMWindow(nsnull)&#10;-,  mDocShell(nsnull)&#10; ,  mDirtyState(eStateUninitialized)&#10; ,  mSelectionCollapsed(eStateUninitialized)&#10; ,  mFirstDoOfFirstUndo(PR_TRUE)&#10;@@ -248,7 +246,7 @@ nsComposerCommandsUpdater::Init(nsIDOMWindow* aDOMWindow)&#10;   nsCOMPtr&lt;nsPIDOMWindow&gt; window(do_QueryInterface(aDOMWindow));&#10;   if (window)&#10;   {&#10;-    mDocShell = window-&gt;GetDocShell();&#10;+    mDocShell = do_GetWeakReference(window-&gt;GetDocShell());&#10;   }&#10;   return NS_OK;&#10; }&#10;@@ -301,10 +299,7 @@ nsComposerCommandsUpdater::UpdateDirtyState(PRBool aNowDirty)&#10; nsresult&#10; nsComposerCommandsUpdater::UpdateCommandGroup(const nsAString&amp; aCommandGroup)&#10; {&#10;-  if (!mDocShell) return NS_ERROR_FAILURE;&#10;-&#10;-  nsCOMPtr&lt;nsICommandManager&gt; commandManager = do_GetInterface(mDocShell);&#10;-  nsCOMPtr&lt;nsPICommandUpdater&gt; commandUpdater = do_QueryInterface(commandManager);&#10;+  nsCOMPtr&lt;nsPICommandUpdater&gt; commandUpdater = GetCommandUpdater();&#10;   if (!commandUpdater) return NS_ERROR_FAILURE;&#10; &#10;   &#10;@@ -358,10 +353,7 @@ nsComposerCommandsUpdater::UpdateCommandGroup(const nsAString&amp; aCommandGroup)&#10; nsresult&#10; nsComposerCommandsUpdater::UpdateOneCommand(const char *aCommand)&#10; {&#10;-  if (!mDocShell) return NS_ERROR_FAILURE;&#10;-  &#10;-  nsCOMPtr&lt;nsICommandManager&gt;   commandManager = do_GetInterface(mDocShell);&#10;-  nsCOMPtr&lt;nsPICommandUpdater&gt; commandUpdater = do_QueryInterface(commandManager);&#10;+  nsCOMPtr&lt;nsPICommandUpdater&gt; commandUpdater = GetCommandUpdater();&#10;   if (!commandUpdater) return NS_ERROR_FAILURE;&#10; &#10;   commandUpdater-&gt;CommandStatusChanged(aCommand);&#10;@@ -387,6 +379,18 @@ nsComposerCommandsUpdater::SelectionIsCollapsed()&#10;   return PR_FALSE;&#10; }&#10; &#10;+already_AddRefed&lt;nsPICommandUpdater&gt;&#10;+nsComposerCommandsUpdater::GetCommandUpdater()&#10;+{&#10;+  nsCOMPtr&lt;nsIDocShell&gt; docShell = do_QueryReferent(mDocShell);&#10;+  NS_ENSURE_TRUE(docShell, nsnull);&#10;+  nsCOMPtr&lt;nsICommandManager&gt; manager = do_GetInterface(docShell);&#10;+  nsCOMPtr&lt;nsPICommandUpdater&gt; updater = do_QueryInterface(manager);&#10;+  nsPICommandUpdater* retVal = nsnull;&#10;+  updater.swap(retVal);&#10;+  return retVal;&#10;+}&#10;+&#10; #if 0&#10; #pragma mark -&#10; #endif&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- editor/composer/src/nsComposerCommandsUpdater.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 75c9b32..a660e35 100644&#10;@@ -47,6 +47,8 @@&#10; &#10; #include &quot;nsCOMPtr.h&quot;&#10; #include &quot;nsITimer.h&quot;&#10;+#include &quot;nsWeakPtr.h&quot;&#10;+#include &quot;nsPICommandUpdater.h&quot;&#10; &#10; #include &quot;nsISelectionListener.h&quot;&#10; #include &quot;nsIDocumentStateListener.h&quot;&#10;@@ -110,13 +112,15 @@ protected:&#10;   nsresult      UpdateDirtyState(PRBool aNowDirty);  &#10;   nsresult      UpdateOneCommand(const char* aCommand);&#10;   nsresult      UpdateCommandGroup(const nsAString&amp; aCommandGroup);&#10;+&#10;+  already_AddRefed&lt;nsPICommandUpdater&gt; GetCommandUpdater();&#10;   &#10;   nsresult      PrimeUpdateTimer();&#10;   void          TimerCallback();&#10;   nsCOMPtr&lt;nsITimer&gt;  mUpdateTimer;&#10; &#10;   nsIDOMWindow* mDOMWindow;  // Weak reference&#10;-  nsIDocShell*  mDocShell;   // Weak reference&#10;+  nsWeakPtr     mDocShell;&#10;   PRInt8        mDirtyState;  &#10;   PRInt8        mSelectionCollapsed;  &#10;   PRPackedBool  mFirstDoOfFirstUndo;&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: Bob Clary &lt;bclary@bclary.com&gt;  2009-04-25 01:08:15    bug 351236 - crash test by Martijn Wargers.&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- editor/composer/src/crashtests/351236-1.html &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..22133a2&#10;@@ -0,0 +1,37 @@&#10;+&lt;html&gt;&lt;head&gt;&#10;+&lt;title&gt;Testcase bug 351236 - Crash [@ nsGetInterface::operator()] with designMode iframes, removing styles, removing iframes, reloading, etc&lt;/title&gt;&#10;+&lt;script&gt;&#10;+function designmodes(i){&#10;+try {&#10;+window.frames[0].document.designMode='on';&#10;+window.frames[0].focus();&#10;+window.frames[0].getSelection().collapse(window.frames[0].document.body.childNodes[0],window.frames[0].document.body.childNodes[0].length-2)&#10;+window.frames[0].document.execCommand('inserthtml', false, 'tesxt ');&#10;+} catch(e) {}&#10;+&#10;+setTimeout(designmodes,50);&#10;+}&#10;+&#10;+function removestyles(){&#10;+document.getElementsByTagName('iframe')[0].removeAttribute('style');&#10;+document.getElementsByTagName('q')[0].removeAttribute('style');&#10;+}&#10;+&#10;+function doe() {&#10;+setTimeout(designmodes,200);&#10;+setTimeout(removestyles,500);&#10;+setTimeout(function() {document.removeChild(document.documentElement);}, 1000);&#10;+setTimeout(function() {window.location.reload();}, 1500);&#10;+}&#10;+window.onload=doe;&#10;+&lt;/script&gt;&#10;+&#10;+&lt;/head&gt;&#10;+&lt;body&gt;&#10;+This page should not crash Mozilla within 2 seconds&lt;br&gt;&#10;+&lt;q style=&quot;display: table-row;&quot;&gt;&#10;+&lt;iframe style=&quot;display: table-row;&quot;&gt;&lt;/iframe&gt;&#10;+&lt;iframe&gt;&lt;/iframe&gt;&#10;+&lt;/q&gt;&#10;+&lt;/body&gt;&#10;+&lt;/html&gt;&#10;\ No newline at end of file&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- editor/composer/src/crashtests/crashtests.list &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 303915c..c126591 100644&#10;@@ -1 +1,2 @@&#10;+load 351236-1.html&#10; skip-if(MOZ_WIDGET_TOOLKIT==&quot;windows&quot;) load 428844-1.html # bug 471185&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">354973</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: jst%mozilla.org &lt;jst%mozilla.org&gt;  2007-01-13 09:08:43    Fixing popup blocker bug 354973. r=mano@mozilla.com, sr=peterv@propagandism.org&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- browser/base/content/browser.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 8e5cff3..2dc6ce8 100644&#10;@@ -529,14 +529,12 @@ const gPopupBlockerObserver = {&#10;         var label = bundle_browser.getFormattedString(&quot;popupShowPopupPrefix&quot;,&#10;                                                       [popupURIspec]);&#10;         menuitem.setAttribute(&quot;label&quot;, label);&#10;-        menuitem.setAttribute(&quot;requestingWindowURI&quot;, pageReport[i].requestingWindowURI.spec);&#10;         menuitem.setAttribute(&quot;popupWindowURI&quot;, popupURIspec);&#10;         menuitem.setAttribute(&quot;popupWindowFeatures&quot;, pageReport[i].popupWindowFeatures);&#10;-#ifndef MOZILLA_1_8_BRANCH&#10;-# bug 314700&#10;         menuitem.setAttribute(&quot;popupWindowName&quot;, pageReport[i].popupWindowName);&#10;-#endif&#10;         menuitem.setAttribute(&quot;oncommand&quot;, &quot;gPopupBlockerObserver.showBlockedPopup(event);&quot;);&#10;+        menuitem.requestingWindow = pageReport[i].requestingWindow;&#10;+        menuitem.requestingDocument = pageReport[i].requestingDocument;&#10;         aEvent.target.appendChild(menuitem);&#10;       }&#10;     }&#10;@@ -561,30 +559,17 @@ const gPopupBlockerObserver = {&#10; &#10;   showBlockedPopup: function (aEvent)&#10;   {&#10;-    var requestingWindow = aEvent.target.getAttribute(&quot;requestingWindowURI&quot;);&#10;-    var requestingWindowURI =&#10;-                      Components.classes[&quot;@mozilla.org/network/io-service;1&quot;]&#10;-                                .getService(Components.interfaces.nsIIOService)&#10;-                                .newURI(requestingWindow, null, null);&#10;-&#10;-    var popupWindowURI = aEvent.target.getAttribute(&quot;popupWindowURI&quot;);&#10;-    var features = aEvent.target.getAttribute(&quot;popupWindowFeatures&quot;);&#10;-#ifndef MOZILLA_1_8_BRANCH&#10;-# bug 314700&#10;-    var name = aEvent.target.getAttribute(&quot;popupWindowName&quot;);&#10;-#endif&#10;+    var target = aEvent.target;&#10;+    var popupWindowURI = target.getAttribute(&quot;popupWindowURI&quot;);&#10;+    var features = target.getAttribute(&quot;popupWindowFeatures&quot;);&#10;+    var name = target.getAttribute(&quot;popupWindowName&quot;);&#10; &#10;-    var shell = findChildShell(null, gBrowser.selectedBrowser.docShell,&#10;-                               requestingWindowURI);&#10;-    if (shell) {&#10;-      var ifr = shell.QueryInterface(Components.interfaces.nsIInterfaceRequestor);&#10;-      var dwi = ifr.getInterface(Components.interfaces.nsIDOMWindowInternal);&#10;-#ifdef MOZILLA_1_8_BRANCH&#10;-# bug 314700&#10;-      dwi.open(popupWindowURI, &quot;&quot;, features);&#10;-#else&#10;+    var dwi = target.requestingWindow;&#10;+&#10;+    // If we have a requesting window and the requesting document is&#10;+    // still the current document, open the popup.&#10;+    if (dwi &amp;&amp; dwi.document == target.requestingDocument) {&#10;       dwi.open(popupWindowURI, name, features);&#10;-#endif&#10;     }&#10;   },&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- camino/src/browser/BrowserWindowController.mm &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 1bba2db..ab13df2 100644&#10;@@ -1912,9 +1912,10 @@ enum BWCOpenDest {&#10; &#10; - (void)whitelistAndShowPopup:(nsIDOMPopupBlockedEvent*)aPopupBlockedEvent&#10; { &#10;+  nsCOMPtr&lt;nsIDOMWindow&gt; requestingWindow;&#10;+  aPopupBlockedEvent-&gt;GetRequestingWindow(getter_AddRefs(requestingWindow));&#10;   // get the URIs for the popup window, and it's parent document&#10;-  nsCOMPtr&lt;nsIURI&gt; requestingWindowURI, popupWindowURI;&#10;-  aPopupBlockedEvent-&gt;GetRequestingWindowURI(getter_AddRefs(requestingWindowURI));&#10;+  nsCOMPtr&lt;nsIURI&gt; popupWindowURI;&#10;   aPopupBlockedEvent-&gt;GetPopupWindowURI(getter_AddRefs(popupWindowURI));&#10; &#10;   nsAutoString windowName, features;&#10;@@ -1930,15 +1931,10 @@ enum BWCOpenDest {&#10; #endif &#10; &#10;   // find the docshell for the blocked popup window, in order to show it&#10;-  nsCOMPtr&lt;nsIDocShell&gt; popupWinDocShell = [[mBrowserView getBrowserView] findDocShellForURI:requestingWindowURI];&#10;-  if (!popupWinDocShell)&#10;+  if (!requestingWindow)&#10;     return;&#10; &#10;-  nsCOMPtr&lt;nsIDOMWindowInternal&gt; domWin = do_GetInterface(popupWinDocShell);&#10;-  if (!domWin)&#10;-    return;&#10;-&#10;-  nsCOMPtr&lt;nsPIDOMWindow&gt; piDomWin = do_QueryInterface(domWin);&#10;+  nsCOMPtr&lt;nsPIDOMWindow&gt; piDomWin = do_QueryInterface(requestingWindow);&#10;   if (!piDomWin)&#10;     return;&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/events/src/nsDOMPopupBlockedEvent.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 8f2e89a..1a986ca 100644&#10;@@ -62,7 +62,6 @@ nsDOMPopupBlockedEvent::~nsDOMPopupBlockedEvent()&#10;   if (mEventIsInternal) {&#10;     if (mEvent-&gt;eventStructType == NS_POPUPBLOCKED_EVENT) {&#10;       nsPopupBlockedEvent* event = NS_STATIC_CAST(nsPopupBlockedEvent*, mEvent);&#10;-      NS_IF_RELEASE(event-&gt;mRequestingWindowURI);&#10;       NS_IF_RELEASE(event-&gt;mPopupWindowURI);&#10;     }&#10;   }&#10;@@ -79,7 +78,7 @@ NS_INTERFACE_MAP_END_INHERITING(nsDOMEvent)&#10; NS_IMETHODIMP&#10; nsDOMPopupBlockedEvent::InitPopupBlockedEvent(const nsAString &amp; aTypeArg,&#10;                             PRBool aCanBubbleArg, PRBool aCancelableArg,&#10;-                            nsIURI *aRequestingWindowURI,&#10;+                            nsIDOMWindow *aRequestingWindow,&#10;                             nsIURI *aPopupWindowURI,&#10;                             const nsAString &amp; aPopupWindowName,&#10;                             const nsAString &amp; aPopupWindowFeatures)&#10;@@ -92,9 +91,8 @@ nsDOMPopupBlockedEvent::InitPopupBlockedEvent(const nsAString &amp; aTypeArg,&#10;     case NS_POPUPBLOCKED_EVENT:&#10;     {&#10;        nsPopupBlockedEvent* event = NS_STATIC_CAST(nsPopupBlockedEvent*, mEvent);&#10;-       event-&gt;mRequestingWindowURI = aRequestingWindowURI;&#10;+       event-&gt;mRequestingWindow = do_GetWeakReference(aRequestingWindow);&#10;        event-&gt;mPopupWindowURI = aPopupWindowURI;&#10;-       NS_IF_ADDREF(event-&gt;mRequestingWindowURI);&#10;        NS_IF_ADDREF(event-&gt;mPopupWindowURI);&#10;        event-&gt;mPopupWindowFeatures = aPopupWindowFeatures;&#10;        event-&gt;mPopupWindowName = aPopupWindowName;&#10;@@ -108,16 +106,15 @@ nsDOMPopupBlockedEvent::InitPopupBlockedEvent(const nsAString &amp; aTypeArg,&#10; }&#10; &#10; NS_IMETHODIMP&#10;-nsDOMPopupBlockedEvent::GetRequestingWindowURI(nsIURI **aRequestingWindowURI)&#10;+nsDOMPopupBlockedEvent::GetRequestingWindow(nsIDOMWindow **aRequestingWindow)&#10; {&#10;-  NS_ENSURE_ARG_POINTER(aRequestingWindowURI);&#10;   if (mEvent-&gt;eventStructType == NS_POPUPBLOCKED_EVENT) {&#10;     nsPopupBlockedEvent* event = NS_STATIC_CAST(nsPopupBlockedEvent*, mEvent);&#10;-    *aRequestingWindowURI = event-&gt;mRequestingWindowURI;&#10;-    NS_IF_ADDREF(*aRequestingWindowURI);&#10;-    return NS_OK;&#10;+    CallQueryReferent(event-&gt;mRequestingWindow.get(), aRequestingWindow);&#10;+  } else {&#10;+    *aRequestingWindow = 0;&#10;   }&#10;-  *aRequestingWindowURI = 0;&#10;+&#10;   return NS_OK;  // Don't throw an exception&#10; }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/public/idl/events/nsIDOMPopupBlockedEvent.idl &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index f6c256f..2962f7e 100644&#10;@@ -44,10 +44,19 @@ interface nsIURI;&#10;  * posted when a popup window is blocked.&#10;  */&#10; &#10;-[scriptable, uuid(bb57e9bb-0c89-459c-977d-5cbc1831bdf5)]&#10;+[scriptable, uuid(05be571f-c3ea-4959-a340-c57b1591ae4b)]&#10; interface nsIDOMPopupBlockedEvent : nsIDOMEvent&#10; {&#10;-  readonly attribute nsIURI requestingWindowURI;&#10;+  /**&#10;+   * The window object that attempted to open the blocked popup&#10;+   * (i.e. the window object on which open() was called).&#10;+   */&#10;+  readonly attribute nsIDOMWindow requestingWindow;&#10;+&#10;+&#10;+  /**&#10;+   * The URI of the window that was blocked.&#10;+   */&#10;   readonly attribute nsIURI popupWindowURI;&#10; &#10;   /**&#10;@@ -65,7 +74,7 @@ interface nsIDOMPopupBlockedEvent : nsIDOMEvent&#10;   void initPopupBlockedEvent(in DOMString typeArg,&#10;                              in boolean canBubbleArg,&#10;                              in boolean cancelableArg,&#10;-                             in nsIURI requestingWindowURI,&#10;+                             in nsIDOMWindow requestingWindow,&#10;                              in nsIURI popupWindowURI,&#10;                              in DOMString popupWindowName,&#10;                              in DOMString popupWindowFeatures);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/src/base/nsGlobalWindow.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index a782852..e428ddd 100644&#10;@@ -4235,19 +4235,23 @@ PRBool IsPopupBlocked(nsIDOMDocument* aDoc)&#10; &#10; static&#10; void FirePopupBlockedEvent(nsIDOMDocument* aDoc,&#10;-                           nsIURI *aRequestingURI, nsIURI *aPopupURI,&#10;+                           nsIDOMWindow *aRequestingWindow, nsIURI *aPopupURI,&#10;                            const nsAString &amp;aPopupWindowName,&#10;                            const nsAString &amp;aPopupWindowFeatures)&#10; {&#10;   if (aDoc) {&#10;-    // Fire a &quot;DOMPopupBlocked&quot; event so that the UI can hear about blocked popups.&#10;+    // Fire a &quot;DOMPopupBlocked&quot; event so that the UI can hear about&#10;+    // blocked popups.&#10;     nsCOMPtr&lt;nsIDOMDocumentEvent&gt; docEvent(do_QueryInterface(aDoc));&#10;     nsCOMPtr&lt;nsIDOMEvent&gt; event;&#10;-    docEvent-&gt;CreateEvent(NS_LITERAL_STRING(&quot;PopupBlockedEvents&quot;), getter_AddRefs(event));&#10;+    docEvent-&gt;CreateEvent(NS_LITERAL_STRING(&quot;PopupBlockedEvents&quot;),&#10;+                          getter_AddRefs(event));&#10;     if (event) {&#10;       nsCOMPtr&lt;nsIDOMPopupBlockedEvent&gt; pbev(do_QueryInterface(event));&#10;       pbev-&gt;InitPopupBlockedEvent(NS_LITERAL_STRING(&quot;DOMPopupBlocked&quot;),&#10;-              PR_TRUE, PR_TRUE, aRequestingURI, aPopupURI, aPopupWindowName, aPopupWindowFeatures);&#10;+                                  PR_TRUE, PR_TRUE, aRequestingWindow,&#10;+                                  aPopupURI, aPopupWindowName,&#10;+                                  aPopupWindowFeatures);&#10;       nsCOMPtr&lt;nsIPrivateDOMEvent&gt; privateEvent(do_QueryInterface(event));&#10;       privateEvent-&gt;SetTrusted(PR_TRUE);&#10; &#10;@@ -4373,12 +4377,7 @@ nsGlobalWindow::FireAbuseEvents(PRBool aBlocked, PRBool aWindow,&#10;   nsCOMPtr&lt;nsIDOMDocument&gt; topDoc;&#10;   topWindow-&gt;GetDocument(getter_AddRefs(topDoc));&#10; &#10;-  nsCOMPtr&lt;nsIURI&gt; requestingURI;&#10;   nsCOMPtr&lt;nsIURI&gt; popupURI;&#10;-  nsCOMPtr&lt;nsIWebNavigation&gt; webNav =&#10;-    do_GetInterface((nsIScriptGlobalObject *)this);&#10;-  if (webNav)&#10;-    webNav-&gt;GetCurrentURI(getter_AddRefs(requestingURI));&#10; &#10;   // build the URI of the would-have-been popup window&#10;   // (see nsWindowWatcher::URIfromURL)&#10;@@ -4416,7 +4415,8 @@ nsGlobalWindow::FireAbuseEvents(PRBool aBlocked, PRBool aWindow,&#10; &#10;   // fire an event chock full of informative URIs&#10;   if (aBlocked)&#10;-    FirePopupBlockedEvent(topDoc, requestingURI, popupURI, aPopupWindowName, aPopupWindowFeatures);&#10;+    FirePopupBlockedEvent(topDoc, this, popupURI, aPopupWindowName,&#10;+                          aPopupWindowFeatures);&#10;   if (aWindow)&#10;     FirePopupWindowEvent(topDoc);&#10; }&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- toolkit/content/widgets/browser.xml &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index d42791e..5cde174 100644&#10;@@ -424,8 +424,10 @@&#10;             if (this.pageReport) {&#10;               var i = 0;&#10;               while (i &lt; this.pageReport.length) {&#10;-                if (this.findChildShell(this.docShell,&#10;-                                        this.pageReport[i].requestingWindowURI))&#10;+                // Filter out irrelevant reports.&#10;+                if (this.pageReport[i].requestingWindow &amp;&amp;&#10;+                    (this.pageReport[i].requestingWindow.document ==&#10;+                     this.pageReport[i].requestingDocument))&#10;                   i++;&#10;                 else&#10;                   this.pageReport.splice(i, 1);&#10;@@ -481,20 +483,17 @@&#10;               this.pageReport = new Array();&#10;             }&#10; &#10;-#ifdef MOZILLA_1_8_BRANCH&#10;-# bug 314700&#10;-            var obj = { requestingWindowURI: evt.requestingWindowURI,&#10;-                        popupWindowURI: evt.popupWindowURI,&#10;-                        popupWindowFeatures: evt.popupWindowFeatures };&#10;-#else&#10;-            var obj = { requestingWindowURI: evt.requestingWindowURI,&#10;+            var obj = { requestingWindow: evt.requestingWindow,&#10;+                        // Record the current document in the requesting window&#10;+                        // before it can change.&#10;+                        requestingDocument: evt.requestingWindow.document,&#10;                         popupWindowURI: evt.popupWindowURI,&#10;                         popupWindowFeatures: evt.popupWindowFeatures,&#10;                         popupWindowName: evt.popupWindowName };&#10;-#endif&#10;+&#10;             this.pageReport.push(obj);&#10;             this.pageReport.reported = false;&#10;-            this.updatePageReport()&#10;+            this.updatePageReport();&#10;           ]]&gt; &#10;         &lt;/body&gt;&#10;       &lt;/method&gt;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- widget/public/nsGUIEvent.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 804fca9..23d1323 100644&#10;@@ -54,6 +54,7 @@&#10; #include &quot;nsCOMPtr.h&quot;&#10; #include &quot;nsIAtom.h&quot;&#10; #include &quot;nsIDOMKeyEvent.h&quot;&#10;+#include &quot;nsWeakPtr.h&quot;&#10; &#10; class nsIRenderingContext;&#10; class nsIRegion;&#10;@@ -885,11 +886,11 @@ class nsPopupBlockedEvent : public nsEvent&#10; public:&#10;   nsPopupBlockedEvent(PRBool isTrusted, PRUint32 msg)&#10;     : nsEvent(isTrusted, msg, NS_POPUPBLOCKED_EVENT),&#10;-      mRequestingWindowURI(nsnull), mPopupWindowURI(nsnull)&#10;+      mPopupWindowURI(nsnull)&#10;   {&#10;   }&#10; &#10;-  nsIURI* mRequestingWindowURI; // owning reference&#10;+  nsWeakPtr mRequestingWindow;&#10;   nsIURI* mPopupWindowURI;      // owning reference&#10;   nsString mPopupWindowFeatures;&#10;   nsString mPopupWindowName;&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s69"><Data ss:Type="String">Author: cst%yecc.com &lt;cst%yecc.com&gt;  2007-01-13 09:46:43     Bug 352465 port jst's fix for bug 354973 to SeaMonkey&#10;    r+sr=neil&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- suite/browser/navigator.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index fba257a..ff5bfbb 100644&#10;@@ -626,8 +626,7 @@ function Startup()&#10; &#10;     var browser = getBrowser();&#10;     browser.popupDomain = null;&#10;-    browser.popupUrls = [];&#10;-    browser.popupFeatures = [];&#10;+    browser.popups = [];&#10; &#10;     if (uriToLoad != &quot;about:blank&quot;) {&#10;       gURLBar.value = uriToLoad;&#10;@@ -2314,7 +2313,8 @@ function onFullScreen()&#10;   FullScreen.toggle();&#10; }&#10; &#10;-function onPopupWindow(aEvent) {&#10;+function onPopupWindow(aEvent)&#10;+{&#10;   var firstPopup = pref.getBoolPref(&quot;privacy.popups.first_popup&quot;);&#10;   var blockingEnabled = pref.getBoolPref(&quot;dom.disable_open_during_load&quot;);&#10;   if (blockingEnabled) {&#10;@@ -2352,7 +2352,8 @@ function onPopupWindow(aEvent) {&#10;   }&#10; }&#10; &#10;-function onPopupBlocked(aEvent) {&#10;+function onPopupBlocked(aEvent)&#10;+{&#10;   var playSound = pref.getBoolPref(&quot;privacy.popups.sound_enabled&quot;);&#10; &#10;   if (playSound) {&#10;@@ -2389,26 +2390,29 @@ function onPopupBlocked(aEvent) {&#10;       }&#10;       // Check for duplicates, remove the old occurence of this url,&#10;       // to update the features, and put it at the end of the list.&#10;-      for (var i = 0; i &lt; browser.popupUrls.length; ++i) {&#10;-        if (browser.popupUrls[i].equals(aEvent.popupWindowURI)) {&#10;-          browser.popupUrls.splice(i, 1);&#10;-          browser.popupFeatures.splice(i, 1);&#10;+      for (var i = 0; i &lt; browser.popups.length; ++i) {&#10;+        if (browser.popups[i].url.equals(aEvent.popupWindowURI)) {&#10;+          browser.popups.splice(i, 1);&#10;           break;&#10;         }&#10;       }&#10;       // Limit the length of the menu to some reasonable size.&#10;       // We only add one item every time, so no need for more complex stuff.&#10;-      if (browser.popupUrls.length &gt;= 100) {&#10;-        browser.popupUrls.shift();&#10;-        browser.popupFeatures.shift();&#10;+      if (browser.popups.length &gt;= 100) {&#10;+        browser.popups.shift();&#10;       }&#10;-      browser.popupUrls.push(aEvent.popupWindowURI);&#10;-      browser.popupFeatures.push(aEvent.popupWindowFeatures);&#10;+      var popup = {url: aEvent.popupWindowURI,&#10;+                   features: aEvent.popupWindowFeatures,&#10;+                   name: aEvent.popupWindowName,&#10;+                   reqDoc: aEvent.requestingWindow.document,&#10;+                   reqWin: aEvent.requestingWindow};&#10;+      browser.popups.push(popup);&#10;     }&#10;   }&#10; }&#10; &#10;-function getBrowserForDocument(doc) {  &#10;+function getBrowserForDocument(doc)&#10;+{&#10;   var browsers = getBrowser().browsers;&#10;   for (var i = 0; i &lt; browsers.length; i++) {&#10;     if (browsers[i].contentDocument == doc)&#10;@@ -2417,7 +2421,8 @@ function getBrowserForDocument(doc) {&#10;   return null;&#10; }&#10; &#10;-function StatusbarViewPopupManager() {&#10;+function StatusbarViewPopupManager()&#10;+{&#10;   var hostPort = &quot;&quot;;&#10;   try {&#10;     hostPort = getBrowser().selectedBrowser.currentURI.hostPort;&#10;@@ -2428,15 +2433,17 @@ function StatusbarViewPopupManager() {&#10;   viewPopups(hostPort);&#10; }&#10; &#10;-function popupBlockerMenuShowing(event) {&#10;+function popupBlockerMenuShowing(event)&#10;+{&#10;   var separator = document.getElementById(&quot;popupMenuSeparator&quot;);&#10; &#10;   if (separator)&#10;     separator.hidden = !createShowPopupsMenu(event.target);&#10; }&#10; &#10;-function createShowPopupsMenu(parent) {&#10;-  while (parent.lastChild &amp;&amp; parent.lastChild.hasAttribute(&quot;uri&quot;))&#10;+function createShowPopupsMenu(parent)&#10;+{&#10;+  while (parent.lastChild &amp;&amp; (&quot;popup&quot; in parent.lastChild))&#10;     parent.removeChild(parent.lastChild);&#10; &#10;   var browser = getBrowser();&#10;@@ -2444,16 +2451,18 @@ function createShowPopupsMenu(parent) {&#10;   if (!browser)&#10;     return false;&#10; &#10;-  var popupUrls = browser.selectedBrowser.popupUrls;&#10;+  var popups = browser.selectedBrowser.popups;&#10; &#10;-  if  (popupUrls.length == 0)&#10;+  if (popups.length == 0)&#10;     return false;&#10; &#10;-  for (var i = 0; i &lt; popupUrls.length; i++) {&#10;+  for (var i = 0; i &lt; popups.length; i++) {&#10;+    var popup = popups[i];&#10;     var menuitem = document.createElement(&quot;menuitem&quot;);&#10;-    menuitem.setAttribute(&quot;label&quot;, gNavigatorBundle.getFormattedString('popupMenuShow', [popupUrls[i].spec]));&#10;-    menuitem.setAttribute(&quot;uri&quot;, popupUrls[i].spec);&#10;-    menuitem.setAttribute(&quot;features&quot;, browser.selectedBrowser.popupFeatures[i]);&#10;+    var str = gNavigatorBundle.getFormattedString('popupMenuShow',&#10;+                                                  [popup.url.spec]);&#10;+    menuitem.setAttribute(&quot;label&quot;, str);&#10;+    menuitem.popup = popup;&#10;     parent.appendChild(menuitem);&#10;   }&#10; &#10;@@ -2461,10 +2470,12 @@ function createShowPopupsMenu(parent) {&#10; }&#10; &#10; function popupBlockerMenuCommand(target) {&#10;-  var uri = target.getAttribute(&quot;uri&quot;);&#10;-  if (uri) {&#10;-    window.content.open(uri, &quot;&quot;, target.getAttribute(&quot;features&quot;));&#10;-  }&#10;+  if (!(&quot;popup&quot; in target))&#10;+    return;&#10;+  var popup = target.popup;&#10;+  var reqWin = popup.reqWin;&#10;+  if (reqWin.document == popup.reqDoc)&#10;+    reqWin.open(popup.url.spec, popup.name, popup.features);&#10; }&#10; &#10; function toHistory()&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- suite/browser/nsBrowserStatusHandler.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 3a52151..fcd7438 100644&#10;@@ -360,8 +360,7 @@ nsBrowserStatusHandler.prototype =&#10;     if (blank ||&#10;         !(&quot;popupDomain&quot; in browser)) {&#10;       browser.popupDomain = null;&#10;-      browser.popupUrls = [];&#10;-      browser.popupFeatures = [];&#10;+      browser.popups = [];&#10;     }&#10;     else {&#10;       var hostPort = &quot;&quot;;&#10;@@ -371,8 +370,7 @@ nsBrowserStatusHandler.prototype =&#10;       catch(ex) { }&#10;       if (hostPort != browser.popupDomain) {&#10;         browser.popupDomain = null;&#10;-        browser.popupUrls = [];&#10;-        browser.popupFeatures = [];&#10;+        browser.popups = [];&#10;       }&#10;     }&#10; &#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s71"><Data ss:Type="String">Author: sayrer%gmail.com &lt;sayrer%gmail.com&gt;  2007-01-13 14:43:55     Attempt at bustage fix for bug 354973. r=froodian/ardissone&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- camino/src/browser/BrowserWindowController.mm &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index ab13df2..ba92d0e 100644&#10;@@ -1945,11 +1945,19 @@ enum BWCOpenDest {&#10;   popupWindowURI-&gt;GetSpec(uriStr);&#10;   &#10;   // whitelist the URL&#10;-  [self whitelistURL:requestingWindowURI];&#10;-&#10;+  nsCOMPtr&lt;nsIURI&gt; requestingWindowURI;&#10;+  nsCOMPtr&lt;nsIWebNavigation&gt; webNav = do_GetInterface(requestingWindow);                                                                                                   &#10;+  if (webNav)                                                                                                                                        &#10;+    webNav-&gt;GetCurrentURI(getter_AddRefs(requestingWindowURI));&#10;+  &#10;+  if (requestingWindowURI)&#10;+    [self whitelistURL:requestingWindowURI];&#10;+  else&#10;+    NSLog(@&quot;Couldn't whitelist the URI&quot;);  &#10;+  &#10;   // show the blocked popup&#10;   nsCOMPtr&lt;nsIDOMWindow&gt; openedWindow;&#10;-  nsresult rv = domWin-&gt;Open(NS_ConvertUTF8toUTF16(uriStr), windowName, features, getter_AddRefs(openedWindow));&#10;+  nsresult rv = piDomWin-&gt;Open(NS_ConvertUTF8toUTF16(uriStr), windowName, features, getter_AddRefs(openedWindow));&#10;   if (NS_FAILED(rv))&#10;     NSLog(@&quot;Couldn't show the blocked popup window for %@&quot;, [NSString stringWith_nsACString:uriStr]);  &#10; }&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">361964</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: mrbkap%gmail.com &lt;mrbkap%gmail.com&gt;  2006-12-01 05:43:57    Make argv as large as GC expects it to be. bug 361964, r=brendan&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsdbgapi.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 7e11a87..560411c 100644&#10;@@ -375,7 +375,9 @@ js_watch_set(JSContext *cx, JSObject *obj, jsval id, jsval *vp)&#10;                 JSClass *clasp;&#10;                 JSFunction *fun;&#10;                 JSScript *script;&#10;-                jsval argv[2];&#10;+                uintN nslots;&#10;+                jsval smallv[5];&#10;+                jsval *argv;&#10;                 JSStackFrame frame;&#10; &#10;                 closure = (JSObject *) wp-&gt;closure;&#10;@@ -390,8 +392,27 @@ js_watch_set(JSContext *cx, JSObject *obj, jsval id, jsval *vp)&#10;                     fun = NULL;&#10;                     script = NULL;&#10;                 }&#10;+&#10;+                nslots = 2;&#10;+                if (fun) {&#10;+                    nslots += fun-&gt;nargs;&#10;+                    if (FUN_NATIVE(fun))&#10;+                        nslots += fun-&gt;u.n.extra;&#10;+                }&#10;+&#10;+                if (nslots &lt;= JS_ARRAY_LENGTH(smallv)) {&#10;+                    argv = smallv;&#10;+                } else {&#10;+                    argv = JS_malloc(cx, nslots);&#10;+                    if (!argv) {&#10;+                        DropWatchPoint(cx, wp);&#10;+                        return JS_FALSE;&#10;+                    }&#10;+                }&#10;+&#10;                 argv[0] = OBJECT_TO_JSVAL(closure);&#10;                 argv[1] = JSVAL_NULL;&#10;+                memset(argv + 2, 0, nslots - 2);&#10; &#10;                 memset(&amp;frame, 0, sizeof(frame));&#10;                 frame.script = script;&#10;@@ -411,6 +432,8 @@ js_watch_set(JSContext *cx, JSObject *obj, jsval id, jsval *vp)&#10;                                         1, vp, vp)&#10;                       : wp-&gt;setter(cx, OBJ_THIS_OBJECT(cx, obj), userid, vp));&#10;                 cx-&gt;fp = frame.down;&#10;+                if (argv != smallv)&#10;+                    JS_free(cx, argv);&#10;             }&#10;             return DropWatchPoint(cx, wp) &amp;&amp; ok;&#10;         }&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: bclary%bclary.com &lt;bclary%bclary.com&gt;  2007-02-09 14:34:55     JavaScript Test - regression test for bug 361964, by moz_bug_r_a4&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/extensions/regress-361964.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..fd58aa6&#10;@@ -0,0 +1,79 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): moz_bug_r_a4&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 361964;&#10;+var summary = 'Crash [@ MarkGCThingChildren] involving watch and setter';&#10;+var actual = 'No Crash';&#10;+var expect = 'No Crash';&#10;+&#10;+&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+test();&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+&#10;+function test()&#10;+{&#10;+  enterFunc ('test');&#10;+  printBugNumber (bug);&#10;+  printStatus (summary);&#10;+ &#10;+  if (typeof document == 'undefined')&#10;+  {&#10;+    document = {};&#10;+  }&#10;+&#10;+  if (typeof alert == 'undefined')&#10;+  {&#10;+    alert = print;&#10;+  }&#10;+&#10;+// Crash:&#10;+  document.watch(&quot;title&quot;, function(a,b,c,d) {&#10;+    return { toString : function() { alert(1); } };&#10;+  });&#10;+  document.title = &quot;xxx&quot;;&#10;+&#10;+// No crash:&#10;+  document.watch(&quot;title&quot;, function() {&#10;+    return { toString : function() { alert(1); } };&#10;+  });&#10;+  document.title = &quot;xxx&quot;;&#10;+ &#10;+  reportCompare(expect, actual, summary);&#10;+&#10;+  exitFunc ('test');&#10;+}&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="283.5">
    <Cell><Data ss:Type="Number">362213</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: bienvenu%nventure.com &lt;bienvenu%nventure.com&gt;  2006-11-30 05:00:59    fix 362213 crash in MimeExternalBody_parse_eof, sr=mscott&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- mailnews/mime/src/mimeebod.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 85b949c..99b211e 100644&#10;@@ -340,6 +340,7 @@ MimeExternalBody_parse_eof (MimeObject *obj, PRBool abort_p)&#10;        (site ? strlen(site) : 0) +&#10;        (svr ? strlen(svr) : 0) +&#10;        (subj ? strlen(subj) : 0) +&#10;+                                                        (ct ? strlen(ct) : 0) +&#10;        (url ? strlen(url) : 0) + 100);&#10;    if (!h)&#10;   {&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">360529</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: mozilla.mano%sent.com &lt;mozilla.mano%sent.com&gt;  2008-03-03 16:15:37    Bug 360529, r=sayrer, sr=jst, a=beltzner.&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- browser/components/feeds/src/FeedWriter.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 3b86e3d..cd874b5 100755&#10;@@ -43,8 +43,9 @@&#10; const Cc = Components.classes;&#10; const Ci = Components.interfaces;&#10; const Cr = Components.results;&#10;+const Cu = Components.utils;&#10; &#10;-Components.utils.import(&quot;resource://gre/modules/XPCOMUtils.jsm&quot;);&#10;+Cu.import(&quot;resource://gre/modules/XPCOMUtils.jsm&quot;);&#10; &#10; function LOG(str) {&#10;   var prefB = Cc[&quot;@mozilla.org/preferences-service;1&quot;].&#10;@@ -84,6 +85,7 @@ const TYPE_MAYBE_FEED = &quot;application/vnd.mozilla.maybe.feed&quot;;&#10; const TYPE_MAYBE_AUDIO_FEED = &quot;application/vnd.mozilla.maybe.audio.feed&quot;;&#10; const TYPE_MAYBE_VIDEO_FEED = &quot;application/vnd.mozilla.maybe.video.feed&quot;;&#10; const URI_BUNDLE = &quot;chrome://browser/locale/feeds/subscribe.properties&quot;;&#10;+const SUBSCRIBE_PAGE_URI = &quot;chrome://browser/content/feeds/subscribe.xhtml&quot;;&#10; &#10; const PREF_SELECTED_APP = &quot;browser.feeds.handlers.application&quot;;&#10; const PREF_SELECTED_WEB = &quot;browser.feeds.handlers.webservice&quot;;&#10;@@ -234,6 +236,19 @@ FeedWriter.prototype = {&#10;     }&#10;   },&#10; &#10;+  /**&#10;+   * Calls doCommand for a the given XUL element within the context of the&#10;+   * content document.&#10;+   *&#10;+   * @param aElement&#10;+   *        the XUL element to call doCommand() on.&#10;+   */&#10;+  _safeDoCommand: function FW___safeDoCommand(aElement) {&#10;+    var sandbox = new Cu.Sandbox(this._window);&#10;+    sandbox.element = aElement;&#10;+    Cu.evalInSandbox(&quot;element.doCommand();&quot;, sandbox);&#10;+  },&#10;+&#10;   __faviconService: null,&#10;   get _faviconService() {&#10;     if (!this.__faviconService)&#10;@@ -283,9 +298,13 @@ FeedWriter.prototype = {&#10;       aCheckbox.removeAttribute('checked');&#10; &#10;     if (change) {&#10;-      var event = this._document.createEvent('Events');&#10;-      event.initEvent('CheckboxStateChange', true, true);&#10;-      aCheckbox.dispatchEvent(event);&#10;+      var sandbox = new Cu.Sandbox(this._window);&#10;+      sandbox.document = this._document;&#10;+      sandbox.checkbox = aCheckbox;&#10;+      var codeStr = &quot;var event = document.createEvent('Events'); &quot; +&#10;+                    &quot;event.initEvent('CheckboxStateChange', true, true);&quot; +&#10;+                    &quot;checkbox.dispatchEvent(event);&quot;&#10;+      Cu.evalInSandbox(codeStr, sandbox);&#10;     }&#10;   },&#10; &#10;@@ -726,7 +745,7 @@ FeedWriter.prototype = {&#10; &#10;             // Show and select the selected application menuitem&#10;             selectedAppMenuItem.hidden = false;&#10;-            selectedAppMenuItem.doCommand();&#10;+            this._safeDoCommand(selectedAppMenuItem);&#10;             return true;&#10;           }&#10;         }&#10;@@ -859,7 +878,7 @@ FeedWriter.prototype = {&#10;             return;&#10;           }&#10; &#10;-          handlers[0].doCommand();&#10;+          this._safeDoCommand(handlers[0]);&#10;         }&#10;         break;&#10;       }&#10;@@ -874,7 +893,7 @@ FeedWriter.prototype = {&#10;           if (selectedApp) {&#10;             this._initMenuItemWithFile(selectedAppMenuItem, selectedApp);&#10;             selectedAppMenuItem.hidden = false;&#10;-            selectedAppMenuItem.doCommand();&#10;+            this._safeDoCommand(selectedAppMenuItem);&#10; &#10;             // Only show the default reader menuitem if the default reader&#10;             // isn't the selected application&#10;@@ -891,7 +910,7 @@ FeedWriter.prototype = {&#10;       default: {&#10;         var liveBookmarksMenuItem = this._document.getElementById(&quot;liveBookmarksMenuItem&quot;);&#10;         if (liveBookmarksMenuItem)&#10;-          liveBookmarksMenuItem.doCommand();&#10;+          this._safeDoCommand(liveBookmarksMenuItem);&#10;       } &#10;     }&#10;   },&#10;@@ -1078,7 +1097,6 @@ FeedWriter.prototype = {&#10;                getInterface(Ci.nsIWebNavigation).&#10;                QueryInterface(Ci.nsIDocShell).currentDocumentChannel;&#10; &#10;-    const SUBSCRIBE_PAGE_URI = &quot;chrome://browser/content/feeds/subscribe.xhtml&quot;;&#10;     var uri = makeURI(SUBSCRIBE_PAGE_URI);&#10;     var resolvedURI = Cc[&quot;@mozilla.org/chrome/chrome-registry;1&quot;].&#10;                       getService(Ci.nsIChromeRegistry).&#10;@@ -1182,7 +1200,7 @@ FeedWriter.prototype = {&#10;     this.__bundle = null;&#10;     this._selectedApplicationItemWrapped = null;&#10;     this._defaultSystemReaderItemWrapped = null;&#10;-    this._FeedURI = null;&#10;+    this._feedURI = null;&#10;     var historySvc = Cc[&quot;@mozilla.org/browser/nav-history-service;1&quot;].&#10;                      getService(Ci.nsINavHistoryService);&#10;     historySvc.removeObserver(this);&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: mozilla.mano%sent.com &lt;mozilla.mano%sent.com&gt;  2008-03-24 20:43:44    Bug 360529, r+a=mconnor.&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- browser/components/feeds/src/FeedWriter.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index cd874b5..087ed45 100755&#10;@@ -203,10 +203,15 @@ FeedWriter.prototype = {&#10;   },&#10; &#10;   _setContentText: function FW__setContentText(id, text) {&#10;-    var element = this._document.getElementById(id);&#10;-    while (element.hasChildNodes())&#10;-      element.removeChild(element.firstChild);&#10;-    element.appendChild(this._document.createTextNode(text));&#10;+    this._contentSandbox.element = this._document.getElementById(id);&#10;+    this._contentSandbox.textNode = this._document.createTextNode(text);&#10;+    var codeStr =&#10;+      &quot;while (element.hasChildNodes()) &quot; +&#10;+      &quot;  element.removeChild(element.firstChild);&quot; +&#10;+      &quot;element.appendChild(textNode);&quot;;&#10;+    Cu.evalInSandbox(codeStr, this._contentSandbox);&#10;+    this._contentSandbox.element = null;&#10;+    this._contentSandbox.textNode = null;&#10;   },&#10; &#10;   /**&#10;@@ -229,11 +234,28 @@ FeedWriter.prototype = {&#10;       // checkLoadURIStrWithPrincipal will throw if the link URI should not be&#10;       // loaded, either because our feedURI isn't allowed to load it or per&#10;       // the rules specified in |flags|, so we'll never &quot;linkify&quot; the link...&#10;-      element.setAttribute(attribute, uri);&#10;     }&#10;     catch (e) {&#10;       // Not allowed to load this link because secman.checkLoadURIStr threw&#10;+      return;&#10;     }&#10;+&#10;+    this._contentSandbox.element = element;&#10;+    this._contentSandbox.uri = uri;&#10;+    var codeStr = &quot;element.setAttribute('&quot; + attribute + &quot;', uri);&quot;;&#10;+    Cu.evalInSandbox(codeStr, this._contentSandbox);&#10;+  },&#10;+&#10;+  /**&#10;+   * Use this sandbox to run any dom manipulation code on nodes which&#10;+   * are already inserted into the content document.&#10;+   */&#10;+  __contentSandbox: null,&#10;+  get _contentSandbox() {&#10;+    if (!this.__contentSandbox)&#10;+      this.__contentSandbox = new Cu.Sandbox(this._window);&#10;+&#10;+    return this.__contentSandbox;&#10;   },&#10; &#10;   /**&#10;@@ -244,9 +266,9 @@ FeedWriter.prototype = {&#10;    *        the XUL element to call doCommand() on.&#10;    */&#10;   _safeDoCommand: function FW___safeDoCommand(aElement) {&#10;-    var sandbox = new Cu.Sandbox(this._window);&#10;-    sandbox.element = aElement;&#10;-    Cu.evalInSandbox(&quot;element.doCommand();&quot;, sandbox);&#10;+    this._contentSandbox.element = aElement;&#10;+    Cu.evalInSandbox(&quot;element.doCommand();&quot;, this._contentSandbox);&#10;+    this._contentSandbox.element = null;&#10;   },&#10; &#10;   __faviconService: null,&#10;@@ -290,47 +312,23 @@ FeedWriter.prototype = {&#10;   },&#10; &#10;   _setCheckboxCheckedState: function FW__setCheckboxCheckedState(aCheckbox, aValue) {&#10;-    // see checkbox.xml&#10;+    // see checkbox.xml, xbl bindings are not applied within the sandbox!&#10;+    this._contentSandbox.checkbox = aCheckbox;&#10;+    var codeStr;&#10;     var change = (aValue != (aCheckbox.getAttribute('checked') == 'true'));&#10;     if (aValue)&#10;-      aCheckbox.setAttribute('checked', 'true');&#10;+      codeStr = &quot;checkbox.setAttribute('checked', 'true'); &quot;;&#10;     else&#10;-      aCheckbox.removeAttribute('checked');&#10;+      codeStr = &quot;checkbox.removeAttribute('checked'); &quot;;&#10; &#10;     if (change) {&#10;-      var sandbox = new Cu.Sandbox(this._window);&#10;-      sandbox.document = this._document;&#10;-      sandbox.checkbox = aCheckbox;&#10;-      var codeStr = &quot;var event = document.createEvent('Events'); &quot; +&#10;-                    &quot;event.initEvent('CheckboxStateChange', true, true);&quot; +&#10;-                    &quot;checkbox.dispatchEvent(event);&quot;&#10;-      Cu.evalInSandbox(codeStr, sandbox);&#10;-    }&#10;-  },&#10;-&#10;-  // For setting and getting the file expando property, we need to keep a&#10;-  // reference to explict XPCNativeWrappers around the associated menuitems&#10;-  _selectedApplicationItemWrapped: null,&#10;-  get selectedApplicationItemWrapped() {&#10;-    if (!this._selectedApplicationItemWrapped) {&#10;-      this._selectedApplicationItemWrapped =&#10;-        XPCNativeWrapper(this._document.getElementById(&quot;selectedAppMenuItem&quot;));&#10;-    }&#10;-&#10;-    return this._selectedApplicationItemWrapped;&#10;-  },&#10;-&#10;-  _defaultSystemReaderItemWrapped: null,&#10;-  get defaultSystemReaderItemWrapped() {&#10;-    if (!this._defaultSystemReaderItemWrapped) {&#10;-      // Unlike the selected application item, this might not exist at all,&#10;-      // see _initSubscriptionUI&#10;-      var menuItem = this._document.getElementById(&quot;defaultHandlerMenuItem&quot;);&#10;-      if (menuItem)&#10;-        this._defaultSystemReaderItemWrapped = XPCNativeWrapper(menuItem);&#10;+      this._contentSandbox.document = this._document;&#10;+      codeStr += &quot;var event = document.createEvent('Events'); &quot; +&#10;+                 &quot;event.initEvent('CheckboxStateChange', true, true);&quot; +&#10;+                 &quot;checkbox.dispatchEvent(event);&quot;&#10;     }&#10; &#10;-    return this._defaultSystemReaderItemWrapped;&#10;+    Cu.evalInSandbox(codeStr, this._contentSandbox);&#10;   },&#10; &#10;    /**&#10;@@ -424,7 +422,13 @@ FeedWriter.prototype = {&#10; &#10;       var titleText = this._getFormattedString(&quot;linkTitleTextFormat&quot;, &#10;                                                [parts.getPropertyAsAString(&quot;title&quot;)]);&#10;-      feedTitleLink.setAttribute(&quot;title&quot;, titleText);&#10;+      this._contentSandbox.feedTitleLink = feedTitleLink;&#10;+      this._contentSandbox.titleText = titleText;&#10;+      var codeStr = &quot;feedTitleLink.setAttribute('title', titleText);&quot;;&#10;+      Cu.evalInSandbox(codeStr, this._contentSandbox);&#10;+      this._contentSandbox.feedTitleLink = null;&#10;+      this._contentSandbox.titleText = null;&#10;+&#10;       this._safeSetURIAttribute(feedTitleLink, &quot;href&quot;, &#10;                                 parts.getPropertyAsAString(&quot;link&quot;));&#10; &#10;@@ -446,13 +450,17 @@ FeedWriter.prototype = {&#10;    */&#10;   _writeFeedContent: function FW__writeFeedContent(container) {&#10;     // Build the actual feed content&#10;-    var feedContent = this._document.getElementById(&quot;feedContent&quot;);&#10;     var feed = container.QueryInterface(Ci.nsIFeed);&#10;-    &#10;+    if (feed.items.length == 0)&#10;+      return;&#10;+&#10;+    this._contentSandbox.feedContent =&#10;+      this._document.getElementById(&quot;feedContent&quot;);&#10;+&#10;     for (var i = 0; i &lt; feed.items.length; ++i) {&#10;       var entry = feed.items.queryElementAt(i, Ci.nsIFeedEntry);&#10;       entry.QueryInterface(Ci.nsIFeedContainer);&#10;-      &#10;+&#10;       var entryContainer = this._document.createElementNS(HTML_NS, &quot;div&quot;);&#10;       entryContainer.className = &quot;entry&quot;;&#10; &#10;@@ -460,29 +468,29 @@ FeedWriter.prototype = {&#10;       if (entry.title) {&#10;         var a = this._document.createElementNS(HTML_NS, &quot;a&quot;);&#10;         a.appendChild(this._document.createTextNode(entry.title.plainText()));&#10;-      &#10;+&#10;         // Entries are not required to have links, so entry.link can be null.&#10;         if (entry.link)&#10;           this._safeSetURIAttribute(a, &quot;href&quot;, entry.link.spec);&#10; &#10;         var title = this._document.createElementNS(HTML_NS, &quot;h3&quot;);&#10;         title.appendChild(a);&#10;-        entryContainer.appendChild(title);&#10; &#10;         var lastUpdated = this._parseDate(entry.updated);&#10;         if (lastUpdated) {&#10;           var dateDiv = this._document.createElementNS(HTML_NS, &quot;div&quot;);&#10;-          dateDiv.setAttribute(&quot;class&quot;, &quot;lastUpdated&quot;);&#10;-          title.appendChild(dateDiv);&#10;+          dateDiv.className = &quot;lastUpdated&quot;;&#10;           dateDiv.textContent = lastUpdated;&#10;+          title.appendChild(dateDiv);&#10;         }&#10;+&#10;+        entryContainer.appendChild(title);&#10;       }&#10; &#10;       var body = this._document.createElementNS(HTML_NS, &quot;div&quot;);&#10;       var summary = entry.summary || entry.content;&#10;       var docFragment = null;&#10;       if (summary) {&#10;-&#10;         if (summary.base)&#10;           body.setAttributeNS(XML_NS, &quot;base&quot;, summary.base.spec);&#10;         else&#10;@@ -510,11 +518,19 @@ FeedWriter.prototype = {&#10;         entryContainer.appendChild(enclosuresDiv);&#10;       }&#10; &#10;-      feedContent.appendChild(entryContainer);&#10;-      var clearDiv = this._document.createElementNS(HTML_NS, &quot;div&quot;);&#10;-      clearDiv.style.clear = &quot;both&quot;;&#10;-      feedContent.appendChild(clearDiv);&#10;+      this._contentSandbox.entryContainer = entryContainer;&#10;+      this._contentSandbox.clearDiv =&#10;+        this._document.createElementNS(HTML_NS, &quot;div&quot;);&#10;+      this._contentSandbox.clearDiv.style.clear = &quot;both&quot;;&#10;+      &#10;+      var codeStr = &quot;feedContent.appendChild(entryContainer); &quot; +&#10;+                     &quot;feedContent.appendChild(clearDiv);&quot;&#10;+      Cu.evalInSandbox(codeStr, this._contentSandbox);&#10;     }&#10;+&#10;+    this._contentSandbox.feedContent = null;&#10;+    this._contentSandbox.entryContainer = null;&#10;+    this._contentSandbox.clearDiv = null;&#10;   },&#10; &#10;   /**&#10;@@ -546,7 +562,7 @@ FeedWriter.prototype = {&#10;    */&#10;   _buildEnclosureDiv: function FW__buildEnclosureDiv(entry) {&#10;     var enclosuresDiv = this._document.createElementNS(HTML_NS, &quot;div&quot;);&#10;-    enclosuresDiv.setAttribute(&quot;class&quot;, &quot;enclosures&quot;);&#10;+    enclosuresDiv.className = &quot;enclosures&quot;;&#10; &#10;     enclosuresDiv.appendChild(this._document.createTextNode(this._getString(&quot;mediaLabel&quot;)));&#10; &#10;@@ -708,9 +724,12 @@ FeedWriter.prototype = {&#10;    *          The menuitem's associated file&#10;    */&#10;   _initMenuItemWithFile: function(aMenuItem, aFile) {&#10;-    aMenuItem.setAttribute(&quot;label&quot;, this._getFileDisplayName(aFile));&#10;-    aMenuItem.setAttribute(&quot;image&quot;, this._getFileIconURL(aFile));&#10;-    aMenuItem.file = aFile;&#10;+    this._contentSandbox.menuitem = aMenuItem;&#10;+    this._contentSandbox.label = this._getFileDisplayName(aFile);&#10;+    this._contentSandbox.image = this._getFileIconURL(aFile);&#10;+    var codeStr = &quot;menuitem.setAttribute('label', label); &quot; +&#10;+                  &quot;menuitem.setAttribute('image', image);&quot;&#10;+    Cu.evalInSandbox(codeStr, this._contentSandbox);&#10;   },&#10; &#10;   /**&#10;@@ -726,8 +745,8 @@ FeedWriter.prototype = {&#10;       fp.appendFilters(Ci.nsIFilePicker.filterApps);&#10; &#10;       if (fp.show() == Ci.nsIFilePicker.returnOK) {&#10;-        var selectedApp = fp.file;&#10;-        if (selectedApp) {&#10;+        this._selectedApp = fp.file;&#10;+        if (this._selectedApp) {&#10;           // XXXben - we need to compare this with the running instance executable&#10;           //          just don't know how to do that via script...&#10;           // XXXmano TBD: can probably add this to nsIShellService&#10;@@ -740,12 +759,13 @@ FeedWriter.prototype = {&#10; #expand           if (fp.file.leafName != &quot;__MOZ_APP_NAME__-bin&quot;) {&#10; #endif&#10; #endif&#10;-            var selectedAppMenuItem = this.selectedApplicationItemWrapped;&#10;-            this._initMenuItemWithFile(selectedAppMenuItem, selectedApp);&#10;+            this._initMenuItemWithFile(this._contentSandbox.selectedAppMenuItem,&#10;+                                       this._selectedApp);&#10; &#10;             // Show and select the selected application menuitem&#10;-            selectedAppMenuItem.hidden = false;&#10;-            this._safeDoCommand(selectedAppMenuItem);&#10;+            var codeStr = &quot;selectedAppMenuItem.hidden = false;&quot; +&#10;+                          &quot;selectedAppMenuItem.doCommand();&quot;&#10;+            Cu.evalInSandbox(codeStr, this._contentSandbox);&#10;             return true;&#10;           }&#10;         }&#10;@@ -772,8 +792,7 @@ FeedWriter.prototype = {&#10;   },&#10; &#10;   _setSubscribeUsingLabel: function FW__setSubscribeUsingLabel() {&#10;-    var stringLabel = null;&#10;-&#10;+    var stringLabel = &quot;subscribeFeedUsing&quot;;&#10;     switch (this._getFeedType()) {&#10;       case Ci.nsIFeed.TYPE_VIDEO:&#10;         stringLabel = &quot;subscribeVideoPodcastUsing&quot;;&#10;@@ -782,13 +801,13 @@ FeedWriter.prototype = {&#10;       case Ci.nsIFeed.TYPE_AUDIO:&#10;         stringLabel = &quot;subscribeAudioPodcastUsing&quot;;&#10;         break;&#10;-&#10;-      default:&#10;-        stringLabel = &quot;subscribeFeedUsing&quot;;&#10;     }&#10; &#10;-    var subscribeUsing = this._document.getElementById(&quot;subscribeUsingDescription&quot;);&#10;-    subscribeUsing.setAttribute(&quot;value&quot;, this._getString(stringLabel));&#10;+    this._contentSandbox.subscribeUsing =&#10;+      this._document.getElementById(&quot;subscribeUsingDescription&quot;);&#10;+    this._contentSandbox.label = this._getString(stringLabel);&#10;+    var codeStr = &quot;subscribeUsing.setAttribute('value', label);&quot;&#10;+    Cu.evalInSandbox(codeStr, this._contentSandbox);&#10;   },&#10; &#10;   _setAlwaysUseLabel: function FW__setAlwaysUseLabel() {&#10;@@ -798,7 +817,7 @@ FeedWriter.prototype = {&#10;       if (handlersMenuList) {&#10;         var handlerName = this._getSelectedItemFromMenulist(handlersMenuList)&#10;                               .getAttribute(&quot;label&quot;);&#10;-        var stringlabel = null;&#10;+        var stringLabel = &quot;alwaysUseForFeeds&quot;;&#10;         switch (this._getFeedType()) {&#10;           case Ci.nsIFeed.TYPE_VIDEO:&#10;             stringlabel = &quot;alwaysUseForVideoPodcasts&quot;;&#10;@@ -807,12 +826,13 @@ FeedWriter.prototype = {&#10;           case Ci.nsIFeed.TYPE_AUDIO:&#10;             stringlabel = &quot;alwaysUseForAudioPodcasts&quot;;&#10;             break;&#10;-&#10;-          default:&#10;-            stringlabel = &quot;alwaysUseForFeeds&quot;;&#10;         }&#10;-  &#10;-        checkbox.setAttribute(&quot;label&quot;, this._getFormattedString(stringlabel, [handlerName]));&#10;+&#10;+        this._contentSandbox.checkbox = checkbox;&#10;+        this._contentSandbox.label = this._getFormattedString(stringlabel, [handlerName]);&#10;+        &#10;+        var codeStr = &quot;checkbox.setAttribute('label', label);&quot;;&#10;+        Cu.evalInSandbox(codeStr, this._contentSandbox);&#10;       }&#10;     }&#10;   },&#10;@@ -883,27 +903,29 @@ FeedWriter.prototype = {&#10;         break;&#10;       }&#10;       case &quot;client&quot;: {&#10;-        var selectedAppMenuItem = this.selectedApplicationItemWrapped;&#10;-        if (selectedAppMenuItem) {&#10;-          try {&#10;-            var selectedApp = prefs.getComplexValue(getPrefAppForType(feedType),&#10;-                                                    Ci.nsILocalFile);&#10;-          } catch(ex) { }&#10;-&#10;-          if (selectedApp) {&#10;-            this._initMenuItemWithFile(selectedAppMenuItem, selectedApp);&#10;-            selectedAppMenuItem.hidden = false;&#10;-            this._safeDoCommand(selectedAppMenuItem);&#10;-&#10;-            // Only show the default reader menuitem if the default reader&#10;-            // isn't the selected application&#10;-            var defaultHandlerMenuItem = this.defaultSystemReaderItemWrapped;&#10;-            if (defaultHandlerMenuItem) {&#10;-              defaultHandlerMenuItem.hidden =&#10;-                defaultHandlerMenuItem.file.path == selectedApp.path;&#10;-            }&#10;-            break;&#10;+        try {&#10;+          this._selectedApp =&#10;+            prefs.getComplexValue(getPrefAppForType(feedType), Ci.nsILocalFile);&#10;+        }&#10;+        catch(ex) {&#10;+          this._selectedApp = null;&#10;+        }&#10;+&#10;+        if (this._selectedApp) {&#10;+          this._initMenuItemWithFile(this._contentSandbox.selectedAppMenuItem,&#10;+                                     this._selectedApp);&#10;+          var codeStr = &quot;selectedAppMenuItem.hidden = false; &quot; +&#10;+                        &quot;selectedAppMenuItem.doCommand(); &quot;;&#10;+&#10;+          // Only show the default reader menuitem if the default reader&#10;+          // isn't the selected application&#10;+          if (this._defaultSystemReader) {&#10;+            var shouldHide =&#10;+              this._defaultSystemReader.path == this._selectedApp.path;&#10;+            codeStr += &quot;defaultHandlerMenuItem.hidden = &quot; + shouldHide + &quot;;&quot;&#10;           }&#10;+          Cu.evalInSandbox(codeStr, this._contentSandbox);&#10;+          break;&#10;         }&#10;       }&#10;       case &quot;bookmarks&quot;:&#10;@@ -921,79 +943,92 @@ FeedWriter.prototype = {&#10;       return;&#10;  &#10;     var feedType = this._getFeedType();&#10;+    var codeStr;&#10; &#10;     // change the background&#10;     var header = this._document.getElementById(&quot;feedHeader&quot;);&#10;+    this._contentSandbox.header = header;&#10;     switch (feedType) {&#10;       case Ci.nsIFeed.TYPE_VIDEO:&#10;-        header.setAttribute(&quot;class&quot;, &quot;videoPodcastBackground&quot;);&#10;+        codeStr = &quot;header.className = 'videoPodcastBackground'; &quot;;&#10;         break;&#10; &#10;       case Ci.nsIFeed.TYPE_AUDIO:&#10;-        header.setAttribute(&quot;class&quot;, &quot;audioPodcastBackground&quot;);&#10;+        codeStr = &quot;header.className = 'audioPodcastBackground'; &quot;;&#10;         break;&#10; &#10;       default:&#10;-        header.setAttribute(&quot;class&quot;, &quot;feedBackground&quot;);&#10;+        codeStr = &quot;header.className = 'feedBackground'; &quot;;&#10;+        header.className = &quot;feedBackground&quot;;&#10;     }&#10; &#10;+&#10;     // Last-selected application&#10;-    var selectedApp;&#10;     var menuItem = this._document.createElementNS(XUL_NS, &quot;menuitem&quot;);&#10;     menuItem.id = &quot;selectedAppMenuItem&quot;;&#10;     menuItem.className = &quot;menuitem-iconic&quot;;&#10;     menuItem.setAttribute(&quot;handlerType&quot;, &quot;client&quot;);&#10;-    handlersMenuPopup.appendChild(menuItem);&#10;-&#10;-    var selectedApplicationItem = this.selectedApplicationItemWrapped;&#10;     try {&#10;       var prefs = Cc[&quot;@mozilla.org/preferences-service;1&quot;].&#10;                   getService(Ci.nsIPrefBranch);&#10;-      selectedApp = prefs.getComplexValue(getPrefAppForType(feedType),&#10;-                                          Ci.nsILocalFile);&#10;+      this._selectedApp = prefs.getComplexValue(getPrefAppForType(feedType),&#10;+                                                Ci.nsILocalFile);&#10; &#10;-      if (selectedApp.exists())&#10;-        this._initMenuItemWithFile(selectedApplicationItem, selectedApp);&#10;+      if (this._selectedApp.exists())&#10;+        this._initMenuItemWithFile(menuItem, this._selectedApp);&#10;       else {&#10;         // Hide the menuitem if the last selected application doesn't exist&#10;-        selectedApplicationItem.hidden = true;&#10;+        menuItem.setAttribute(&quot;hidden&quot;, true);&#10;       }&#10;     }&#10;     catch(ex) {&#10;       // Hide the menuitem until an application is selected&#10;-      selectedApplicationItem.hidden = true;&#10;+      menuItem.setAttribute(&quot;hidden&quot;, true);&#10;     }&#10;+    this._contentSandbox.handlersMenuPopup = handlersMenuPopup;&#10;+    this._contentSandbox.selectedAppMenuItem = menuItem;&#10;+    &#10;+    codeStr += &quot;handlersMenuPopup.appendChild(selectedAppMenuItem); &quot;;&#10; &#10;     // List the default feed reader&#10;-    var defaultReader = null;&#10;     try {&#10;-      var defaultReader = Cc[&quot;@mozilla.org/browser/shell-service;1&quot;].&#10;-                          getService(Ci.nsIShellService).defaultFeedReader;&#10;+      this._defaultSystemReader = Cc[&quot;@mozilla.org/browser/shell-service;1&quot;].&#10;+                                  getService(Ci.nsIShellService).&#10;+                                  defaultFeedReader;&#10;       menuItem = this._document.createElementNS(XUL_NS, &quot;menuitem&quot;);&#10;       menuItem.id = &quot;defaultHandlerMenuItem&quot;;&#10;       menuItem.className = &quot;menuitem-iconic&quot;;&#10;       menuItem.setAttribute(&quot;handlerType&quot;, &quot;client&quot;);&#10;-      handlersMenuPopup.appendChild(menuItem);&#10; &#10;-      var defaultSystemReaderItem = this.defaultSystemReaderItemWrapped;&#10;-      this._initMenuItemWithFile(defaultSystemReaderItem, defaultReader);&#10;+      this._initMenuItemWithFile(menuItem, this._defaultSystemReader);&#10; &#10;       // Hide the default reader item if it points to the same application&#10;       // as the last-selected application&#10;-      if (selectedApp &amp;&amp; selectedApp.path == defaultReader.path)&#10;-        defaultSystemReaderItem.hidden = true;&#10;+      if (this._selectedApp &amp;&amp;&#10;+          this._selectedApp.path == this._defaultSystemReader.path)&#10;+        menuItem.hidden = true;&#10;+    }&#10;+    catch(ex) { menuItem = null; /* no default reader */ }&#10;+&#10;+    if (menuItem) {&#10;+      this._contentSandbox.defaultHandlerMenuItem = menuItem;&#10;+      codeStr += &quot;handlersMenuPopup.appendChild(defaultHandlerMenuItem); &quot;;&#10;     }&#10;-    catch(ex) { /* no default reader */ }&#10; &#10;     // &quot;Choose Application...&quot; menuitem&#10;     menuItem = this._document.createElementNS(XUL_NS, &quot;menuitem&quot;);&#10;     menuItem.id = &quot;chooseApplicationMenuItem&quot;;&#10;     menuItem.setAttribute(&quot;label&quot;, this._getString(&quot;chooseApplicationMenuItem&quot;));&#10;-    handlersMenuPopup.appendChild(menuItem);&#10;+&#10;+    this._contentSandbox.chooseAppMenuItem = menuItem;&#10;+    codeStr += &quot;handlersMenuPopup.appendChild(chooseAppMenuItem); &quot;;&#10; &#10;     // separator&#10;-    handlersMenuPopup.appendChild(this._document.createElementNS(XUL_NS,&#10;-                                  &quot;menuseparator&quot;));&#10;+    this._contentSandbox.chooseAppSep =&#10;+      this._document.createElementNS(XUL_NS, &quot;menuseparator&quot;)&#10;+    codeStr += &quot;handlersMenuPopup.appendChild(chooseAppSep); &quot;;&#10;+&#10;+    Cu.evalInSandbox(codeStr, this._contentSandbox);&#10; &#10;     var historySvc = Cc[&quot;@mozilla.org/browser/nav-history-service;1&quot;].&#10;                      getService(Ci.nsINavHistoryService);&#10;@@ -1010,7 +1045,9 @@ FeedWriter.prototype = {&#10;         menuItem.setAttribute(&quot;label&quot;, handlers[i].name);&#10;         menuItem.setAttribute(&quot;handlerType&quot;, &quot;web&quot;);&#10;         menuItem.setAttribute(&quot;webhandlerurl&quot;, handlers[i].uri);&#10;-        handlersMenuPopup.appendChild(menuItem);&#10;+        this._contentSandbox.menuItem = menuItem;&#10;+        codeStr = &quot;handlersMenuPopup.appendChild(menuItem);&quot;;&#10;+        Cu.evalInSandbox(codeStr, this._contentSandbox);&#10; &#10;         // For privacy reasons we cannot set the image attribute directly&#10;         // to the icon url, see Bug 358878&#10;@@ -1022,6 +1059,7 @@ FeedWriter.prototype = {&#10;           }&#10;         }&#10;       }&#10;+      this._contentSandbox.menuItem = null;&#10;     }&#10; &#10;     this._setSelectedHandler(feedType);&#10;@@ -1049,39 +1087,32 @@ FeedWriter.prototype = {&#10;     }&#10;     catch (ex) { }&#10;     if (showFirstRunUI) {&#10;-      var feedHeader = this._document.getElementById(&quot;feedHeader&quot;);&#10;-      if (feedHeader) {&#10;-        var textfeedinfo1 = null;&#10;-        switch (this._getFeedType()) {&#10;-          case Ci.nsIFeed.TYPE_VIDEO:&#10;-            textfeedinfo1 = &quot;feedSubscriptionVideoPodcast1&quot;;&#10;-            break;&#10;-          case Ci.nsIFeed.TYPE_AUDIO:&#10;-            textfeedinfo1 = &quot;feedSubscriptionAudioPodcast1&quot;;&#10;-            break;&#10;-          default:&#10;-            textfeedinfo1 = &quot;feedSubscriptionFeed1&quot;;&#10;-        }&#10;-        var feedinfo1 = this._document.getElementById(&quot;feedSubscriptionInfo1&quot;)&#10;-        feedinfo1.setAttribute(&quot;value&quot;, this._getString(textfeedinfo1));&#10;-&#10;-        var textfeedinfo2 = null;&#10;-        switch (this._getFeedType()) {&#10;-          case Ci.nsIFeed.TYPE_VIDEO:&#10;-            textfeedinfo2 = &quot;feedSubscriptionVideoPodcast2&quot;;&#10;-            break;&#10;-          case Ci.nsIFeed.TYPE_AUDIO:&#10;-            textfeedinfo2 = &quot;feedSubscriptionAudioPodcast2&quot;;&#10;-            break;&#10;-          default:&#10;-            textfeedinfo2 = &quot;feedSubscriptionFeed2&quot;;&#10;-        }&#10;-        var feedinfo2 = this._document.getElementById(&quot;feedSubscriptionInfo2&quot;)&#10;-        feedinfo2.setAttribute(&quot;value&quot;, this._getString(textfeedinfo2));&#10;-&#10;-        feedHeader.setAttribute(&quot;firstrun&quot;, &quot;true&quot;);&#10;+      var textfeedinfo1, textfeedinfo2;&#10;+      switch (feedType) {&#10;+        case Ci.nsIFeed.TYPE_VIDEO:&#10;+          textfeedinfo1 = &quot;feedSubscriptionVideoPodcast1&quot;;&#10;+          textfeedinfo2 = &quot;feedSubscriptionVideoPodcast2&quot;;&#10;+          break;&#10;+        case Ci.nsIFeed.TYPE_AUDIO:&#10;+          textfeedinfo1 = &quot;feedSubscriptionAudioPodcast1&quot;;&#10;+          textfeedinfo2 = &quot;feedSubscriptionAudioPodcast2&quot;;&#10;+          break;&#10;+        default:&#10;+          textfeedinfo1 = &quot;feedSubscriptionFeed1&quot;;&#10;+          textfeedinfo2 = &quot;feedSubscriptionFeed2&quot;;&#10;       }&#10; &#10;+      this._contentSandbox.feedinfo1 =&#10;+        this._document.getElementById(&quot;feedSubscriptionInfo1&quot;);&#10;+      this._contentSandbox.feedinfo1Str = this._getString(textfeedinfo1);&#10;+      this._contentSandbox.feedinfo2 =&#10;+        this._document.getElementById(&quot;feedSubscriptionInfo2&quot;);&#10;+      this._contentSandbox.feedinfo2Str = this._getString(textfeedinfo2);&#10;+      this._contentSandbox.header = header;&#10;+      codeStr = &quot;feedinfo1.value = feedinfo1Str; &quot; +&#10;+                &quot;feedinfo2.value = feedinfo2Str; &quot; +&#10;+                &quot;header.setAttribute('firstrun', 'true');&quot;&#10;+      Cu.evalInSandbox(codeStr, this._contentSandbox);&#10;       prefs.setBoolPref(PREF_SHOW_FIRST_RUN_UI, false);&#10;     }&#10;   },&#10;@@ -1198,9 +1229,9 @@ FeedWriter.prototype = {&#10;     this._removeFeedFromCache();&#10;     this.__faviconService = null;&#10;     this.__bundle = null;&#10;-    this._selectedApplicationItemWrapped = null;&#10;-    this._defaultSystemReaderItemWrapped = null;&#10;     this._feedURI = null;&#10;+    this.__contentSandbox = null;&#10;+&#10;     var historySvc = Cc[&quot;@mozilla.org/browser/nav-history-service;1&quot;].&#10;                      getService(Ci.nsINavHistoryService);&#10;     historySvc.removeObserver(this);&#10;@@ -1262,12 +1293,12 @@ FeedWriter.prototype = {&#10;         case &quot;selectedAppMenuItem&quot;:&#10;           prefs.setCharPref(getPrefReaderForType(feedType), &quot;client&quot;);&#10;           prefs.setComplexValue(getPrefAppForType(feedType), Ci.nsILocalFile, &#10;-                                this.selectedApplicationItemWrapped.file);&#10;+                                this._selectedApp);&#10;           break;&#10;         case &quot;defaultHandlerMenuItem&quot;:&#10;           prefs.setCharPref(getPrefReaderForType(feedType), &quot;client&quot;);&#10;           prefs.setComplexValue(getPrefAppForType(feedType), Ci.nsILocalFile, &#10;-                                this.defaultSystemReaderItemWrapped.file);&#10;+                                this._defaultSystemReader);&#10;           break;&#10;         case &quot;liveBookmarksMenuItem&quot;:&#10;           defaultHandler = &quot;bookmarks&quot;;&#10;@@ -1349,7 +1380,14 @@ FeedWriter.prototype = {&#10;       if (bytes) {&#10;         var dataURI = &quot;data:&quot; + mimeType.value + &quot;;&quot; + &quot;base64,&quot; +&#10;                       btoa(String.fromCharCode.apply(null, bytes));&#10;-        aMenuItem.setAttribute(&quot;image&quot;, dataURI);&#10;+&#10;+        this._contentSandbox.menuItem = aMenuItem;&#10;+        this._contentSandbox.dataURI = dataURI;&#10;+        var codeStr = &quot;menuItem.setAttribute('image', dataURI);&quot;;&#10;+        Cu.evalInSandbox(codeStr, this._contentSandbox);&#10;+        this._contentSandbox.menuItem = null;&#10;+        this._contentSandbox.dataURI = null;&#10;+&#10;         return true;&#10;       }&#10;     }&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">366123</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: igor.bukanov%gmail.com &lt;igor.bukanov%gmail.com&gt;  2007-03-20 05:46:45     Bug 366123: Patch brendan@mozilla.org, r=myself&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsemit.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index be953a3..c7bf79f 100644&#10;@@ -805,7 +805,9 @@ OptimizeSpanDeps(JSContext *cx, JSCodeGenerator *cg)&#10;                       case JSOP_DEFAULT:      op = JSOP_DEFAULTX; break;&#10;                       case JSOP_TABLESWITCH:  op = JSOP_TABLESWITCHX; break;&#10;                       case JSOP_LOOKUPSWITCH: op = JSOP_LOOKUPSWITCHX; break;&#10;-                      default:                JS_ASSERT(0);&#10;+                      default:&#10;+                        ReportStatementTooLarge(cx, cg);&#10;+                        return JS_FALSE;&#10;                     }&#10;                     *pc = (jsbytecode) op;&#10; &#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: bclary%bclary.com &lt;bclary%bclary.com&gt;  2007-05-06 16:34:25    JavaScript Test - regression test for bug 366123, by shutdown&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/e4x/Expressions/regress-366123.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..2270fcf&#10;@@ -0,0 +1,65 @@&#10;+/* -*- Mode: java; tab-width:8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */&#10;+&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2006&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): shutdown&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+&#10;+var bug = 366123;&#10;+var summary = 'Compiling long XML filtering predicate';&#10;+var actual = 'No Crash';&#10;+var expect = 'No Crash';&#10;+&#10;+printBugNumber (bug);&#10;+printStatus (summary);&#10;+&#10;+function exploit() {&#10;+  var code = &quot;foo = &lt;x/&gt;.(&quot;, obj = {};&#10;+  for(var i = 0; i &lt; 0x10000; i++) {&#10;+    code += &quot;0, &quot;;&#10;+  }&#10;+  code += &quot;0);&quot;;&#10;+  Function(code);&#10;+}&#10;+try&#10;+{&#10;+    exploit();&#10;+}&#10;+catch(ex)&#10;+{&#10;+}&#10;+&#10;+TEST(1, expect, actual);&#10;+&#10;+END();&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">367119</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: bclary%bclary.com &lt;bclary%bclary.com&gt;  2007-05-06 16:39:46    JavaScript Test - regression test for bug 367119, by moz_bu_r_a4&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/extensions/regress-367119-01.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..01b1ca2&#10;@@ -0,0 +1,72 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2007&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): moz_bug_r_a4&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 367119;&#10;+var summary = 'memory corruption in script_exec';&#10;+var actual = 'No Crash';&#10;+var expect = 'No Crash';&#10;+&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+test();&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+&#10;+function test()&#10;+{&#10;+  enterFunc ('test');&#10;+  printBugNumber (bug);&#10;+  printStatus (summary);&#10;+  &#10;+  if (typeof Script == 'undefined')&#10;+  {&#10;+    print('Test skipped. Script or toSource not defined');&#10;+  }&#10;+  else&#10;+  {&#10;+    var s = new Script(&quot;&quot;);&#10;+    var o = {&#10;+      valueOf : function() {&#10;+        s.compile(&quot;&quot;);&#10;+        Array(11).join(Array(11).join(Array(101).join(&quot;aaaaa&quot;)));&#10;+        return {};&#10;+      }&#10;+    };&#10;+    s.exec(o);&#10;+  }&#10;+  reportCompare(expect, actual, summary);&#10;+&#10;+  exitFunc ('test');&#10;+}&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/tests/js1_5/extensions/regress-367119-02.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100755&#10;index 0000000..c0bb8ae&#10;@@ -0,0 +1,72 @@&#10;+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is JavaScript Engine testing utilities.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Mozilla Foundation.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2007&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s): moz_bug_r_a4&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+var bug = 367119;&#10;+var summary = 'memory corruption in script_exec';&#10;+var actual = 'No Crash';&#10;+var expect = 'No Crash';&#10;+&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+test();&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+&#10;+function test()&#10;+{&#10;+  enterFunc ('test');&#10;+  printBugNumber (bug);&#10;+  printStatus (summary);&#10;+  &#10;+  if (typeof Script == 'undefined')&#10;+  {&#10;+    print('Test skipped. Script or toSource not defined');&#10;+  }&#10;+  else&#10;+  {&#10;+    var s = new Script(&quot;&quot;);&#10;+    var o = {&#10;+      valueOf : function() {&#10;+        s.compile(&quot;&quot;);&#10;+        print(1);&#10;+        return {};&#10;+      }&#10;+    };&#10;+    s.exec(o);&#10;+  }&#10;+  reportCompare(expect, actual, summary);&#10;+&#10;+  exitFunc ('test');&#10;+}&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">370127</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: mrbkap@gmail.com &lt;mrbkap@gmail.com&gt;  2007-05-24 08:18:00     Use the currently executing function as the nominal parent for our function so that we pull the correct prototype for our function. bug 370127, r+sr=jst&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/xpconnect/src/XPCNativeWrapper.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 127eccd..e05a225 100644&#10;@@ -231,13 +231,15 @@ WrapFunction(JSContext* cx, JSObject* funobj, jsval *rval)&#10;   // function's parent will be the original function and that's how we&#10;   // get the right thing to call when this function is called.&#10;   JSFunction *funWrapper =&#10;-    ::JS_NewFunction(cx, XPC_NW_FunctionWrapper, 0, 0, funobj,&#10;+    ::JS_NewFunction(cx, XPC_NW_FunctionWrapper, 0, 0, nsnull,&#10;                      &quot;XPCNativeWrapper function wrapper&quot;);&#10;   if (!funWrapper) {&#10;     return JS_FALSE;&#10;   }&#10; &#10;-  *rval = OBJECT_TO_JSVAL(::JS_GetFunctionObject(funWrapper));&#10;+  JSObject* funWrapperObj = ::JS_GetFunctionObject(funWrapper);&#10;+  ::JS_SetParent(cx, funWrapperObj, funobj);&#10;+  *rval = OBJECT_TO_JSVAL(funWrapperObj);&#10;   return JS_TRUE;&#10; }&#10; &#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: mrbkap@gmail.com &lt;mrbkap@gmail.com&gt;  2007-06-05 05:43:57    Create XPCNativeWrapper function wrappers with the right parent. bug 370127, r=bzbarsky sr=brendan&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/xpconnect/src/XPCNativeWrapper.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 127eccd..9a242af 100644&#10;@@ -1,5 +1,5 @@&#10; /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */&#10;-/* vim: set ts=2 sw=2 et tw=80: */&#10;+/* vim: set ts=2 sw=2 et tw=78: */&#10; /* ***** BEGIN LICENSE BLOCK *****&#10;  * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;  *&#10;@@ -226,18 +226,31 @@ WrapFunction(JSContext* cx, JSObject* funobj, jsval *rval)&#10;     *rval = OBJECT_TO_JSVAL(funobj);&#10;     return JS_TRUE;&#10;   }&#10;+&#10;+  // Ensure that we've been called from JS. Native code should extract&#10;+  // the wrapped native and deal with that directly.&#10;+  // XXX Can we simply trust |cx| here?&#10;+  JSStackFrame *iterator = nsnull;&#10;+  if (!::JS_FrameIterator(cx, &amp;iterator)) {&#10;+    ::JS_ReportError(cx, &quot;XPCNativeWrappers must be used from script&quot;);&#10;+    return JS_FALSE;&#10;+  }&#10;   &#10;   // Create a new function that'll call our given function.  This new&#10;   // function's parent will be the original function and that's how we&#10;   // get the right thing to call when this function is called.&#10;+  // Note that we pass nsnull as the nominal parent so that we'll inherit&#10;+  // our caller's Function.prototype.&#10;   JSFunction *funWrapper =&#10;-    ::JS_NewFunction(cx, XPC_NW_FunctionWrapper, 0, 0, funobj,&#10;+    ::JS_NewFunction(cx, XPC_NW_FunctionWrapper, 0, 0, nsnull,&#10;                      &quot;XPCNativeWrapper function wrapper&quot;);&#10;   if (!funWrapper) {&#10;     return JS_FALSE;&#10;   }&#10; &#10;-  *rval = OBJECT_TO_JSVAL(::JS_GetFunctionObject(funWrapper));&#10;+  JSObject* funWrapperObj = ::JS_GetFunctionObject(funWrapper);&#10;+  ::JS_SetParent(cx, funWrapperObj, funobj);&#10;+  *rval = OBJECT_TO_JSVAL(funWrapperObj);&#10;   return JS_TRUE;&#10; }&#10; &#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">389106</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: cbiesinger%gmx.at &lt;cbiesinger%gmx.at&gt;  2007-07-23 13:10:46    bug 389106 escape quotes&#10;    r=bz sr=dveditz&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- uriloader/exthandler/nsExternalHelperAppService.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 2c891b9..6b22c24 100644&#10;@@ -1214,7 +1214,19 @@ class nsExternalLoadRequest : public nsRunnable {&#10; &#10; NS_IMETHODIMP nsExternalHelperAppService::LoadURI(nsIURI * aURL, nsIPrompt * aPrompt)&#10; {&#10;-  nsCOMPtr&lt;nsIRunnable&gt; event = new nsExternalLoadRequest(aURL, aPrompt);&#10;+  nsCAutoString spec;&#10;+  aURL-&gt;GetSpec(spec);&#10;+&#10;+  spec.ReplaceSubstring(&quot;\&quot;&quot;, &quot;%22&quot;);&#10;+  spec.ReplaceSubstring(&quot;'&quot;, &quot;%27&quot;);&#10;+  spec.ReplaceSubstring(&quot;`&quot;, &quot;%60&quot;);&#10;+&#10;+  nsCOMPtr&lt;nsIIOService&gt; ios(do_GetIOService());&#10;+  nsCOMPtr&lt;nsIURI&gt; uri;&#10;+  nsresult rv = ios-&gt;NewURI(spec, nsnull, nsnull, getter_AddRefs(uri));&#10;+  NS_ENSURE_SUCCESS(rv, rv);&#10;+&#10;+  nsCOMPtr&lt;nsIRunnable&gt; event = new nsExternalLoadRequest(uri, aPrompt);&#10;   return NS_DispatchToCurrentThread(event);&#10; }&#10; &#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: cbiesinger%gmx.at &lt;cbiesinger%gmx.at&gt;  2007-07-24 08:12:58     bug 389106 didn't mean to check in this line&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- uriloader/exthandler/nsExternalHelperAppService.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 69dcbb9..7d8f740 100644&#10;@@ -1216,7 +1216,6 @@ NS_IMETHODIMP nsExternalHelperAppService::LoadURI(nsIURI * aURL, nsIPrompt * aPr&#10;   aURL-&gt;GetSpec(spec);&#10; &#10;   spec.ReplaceSubstring(&quot;\&quot;&quot;, &quot;%22&quot;);&#10;-  spec.ReplaceSubstring(&quot;'&quot;, &quot;%27&quot;);&#10;   spec.ReplaceSubstring(&quot;`&quot;, &quot;%60&quot;);&#10; &#10;   nsCOMPtr&lt;nsIIOService&gt; ios(do_GetIOService());&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: cbiesinger%gmx.at &lt;cbiesinger%gmx.at&gt;  2007-07-24 08:28:42    bug 389106 escape spaces even for the OnlyNonASCII flag&#10;    r=bzbarsky sr=dveditz&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- xpcom/io/nsEscape.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index a838c08..ab626f5 100644&#10;@@ -410,7 +410,7 @@ NS_COM PRBool NS_EscapeURL(const char *part,&#10;       // non-ASCII character as it may be part of a multi-byte character.&#10;       if ((NO_NEED_ESC(c) || (c == HEX_ESCAPE &amp;&amp; !forced)&#10;                           || (c &gt; 0x7f &amp;&amp; ignoreNonAscii)&#10;-                          || (c &gt; 0x1f &amp;&amp; c &lt; 0x7f &amp;&amp; ignoreAscii))&#10;+                          || (c &gt; 0x20 &amp;&amp; c &lt; 0x7f &amp;&amp; ignoreAscii))&#10;           &amp;&amp; !(c == ':' &amp;&amp; colon)&#10;           &amp;&amp; !(previousIsNonASCII &amp;&amp; c == '|' &amp;&amp; !ignoreNonAscii))&#10;       {&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">379959</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: jonas%sicking.cc &lt;jonas%sicking.cc&gt;  2007-06-13 05:56:07      Bug 379959: Add checks to loadBindingDocument. r/sr=jst&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/base/public/nsContentUtils.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 2b9f4ce..2d4304e 100644&#10;@@ -1015,6 +1015,39 @@ public:&#10;    * FALSE.&#10;    */&#10;   static void NotifyInstalledMenuKeyboardListener(PRBool aInstalling);&#10;+&#10;+  /**&#10;+   * Do security checks before loading a resource. Does the following checks:&#10;+   *   nsIScriptSecurityManager::CheckLoadURIWithPrincipal&#10;+   *   NS_CheckContentLoadPolicy&#10;+   *   nsIScriptSecurityManager::CheckSameOriginURI&#10;+   *&#10;+   * You will still need to do at least SameOrigin checks before on redirects.&#10;+   *&#10;+   * @param aURIToLoad         URI that is getting loaded.&#10;+   * @param aLoadingPrincipal  Principal of the resource that is initiating&#10;+   *                           the load&#10;+   * @param aCheckLoadFlags    Flags to be passed to&#10;+   *                           nsIScriptSecurityManager::CheckLoadURIWithPrincipal&#10;+   *                           NOTE: If this contains ALLOW_CHROME the&#10;+   *                                 CheckSameOriginURI check will be skipped if&#10;+   *                                 aURIToLoad is a chrome uri.&#10;+   * @param aAllowData         Set to true to skip CheckSameOriginURI check when&#10;+                               aURIToLoad is a data uri.&#10;+   * @param aContentPolicyType Type     \&#10;+   * @param aContext           Context   |- to be passed to&#10;+   * @param aMimeGuess         Mimetype  |      NS_CheckContentLoadPolicy&#10;+   * @param aExtra             Extra    /&#10;+   */&#10;+  static nsresult CheckSecurityBeforeLoad(nsIURI* aURIToLoad,&#10;+                                          nsIPrincipal* aLoadingPrincipal,&#10;+                                          PRUint32 aCheckLoadFlags,&#10;+                                          PRBool aAllowData,&#10;+                                          PRUint32 aContentPolicyType,&#10;+                                          nsISupports* aContext,&#10;+                                          const nsACString&amp; aMimeGuess = EmptyCString(),&#10;+                                          nsISupports* aExtra = nsnull);&#10;+&#10; private:&#10; &#10;   static PRBool InitializeEventTable();&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/base/src/nsContentUtils.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 65f2a31..db892db 100644&#10;@@ -137,6 +137,7 @@ static NS_DEFINE_CID(kXTFServiceCID, NS_XTFSERVICE_CID);&#10; #include &quot;nsMutationEvent.h&quot;&#10; #include &quot;nsIKBStateControl.h&quot;&#10; #include &quot;nsIMEStateManager.h&quot;&#10;+#include &quot;nsContentErrors.h&quot;&#10; &#10; #ifdef IBMBIDI&#10; #include &quot;nsIBidiKeyboard.h&quot;&#10;@@ -3552,3 +3553,56 @@ nsContentUtils::NotifyInstalledMenuKeyboardListener(PRBool aInstalling)&#10; {&#10;   nsIMEStateManager::OnInstalledMenuKeyboardListener(aInstalling);&#10; }&#10;+&#10;+static PRBool SchemeIs(nsIURI* aURI, const char* aScheme)&#10;+{&#10;+  nsCOMPtr&lt;nsIURI&gt; baseURI = NS_GetInnermostURI(aURI);&#10;+  NS_ENSURE_TRUE(baseURI, PR_FALSE);&#10;+&#10;+  PRBool isScheme = PR_FALSE;&#10;+  return NS_SUCCEEDED(baseURI-&gt;SchemeIs(aScheme, &amp;isScheme)) &amp;&amp; isScheme;&#10;+}&#10;+&#10;+/* static */&#10;+nsresult&#10;+nsContentUtils::CheckSecurityBeforeLoad(nsIURI* aURIToLoad,&#10;+                                        nsIPrincipal* aLoadingPrincipal,&#10;+                                        PRUint32 aCheckLoadFlags,&#10;+                                        PRBool aAllowData,&#10;+                                        PRUint32 aContentPolicyType,&#10;+                                        nsISupports* aContext,&#10;+                                        const nsACString&amp; aMimeGuess,&#10;+                                        nsISupports* aExtra)&#10;+{&#10;+  nsCOMPtr&lt;nsIURI&gt; loadingURI;&#10;+  nsresult rv = aLoadingPrincipal-&gt;GetURI(getter_AddRefs(loadingURI));&#10;+  NS_ENSURE_SUCCESS(rv, rv);&#10;+&#10;+  // CheckLoadURIWithPrincipal&#10;+  rv = sSecurityManager-&gt;&#10;+    CheckLoadURIWithPrincipal(aLoadingPrincipal, aURIToLoad, aCheckLoadFlags);&#10;+  NS_ENSURE_SUCCESS(rv, rv);&#10;+&#10;+  // Content Policy&#10;+  PRInt16 shouldLoad = nsIContentPolicy::ACCEPT;&#10;+  rv = NS_CheckContentLoadPolicy(aContentPolicyType,&#10;+                                 aURIToLoad,&#10;+                                 loadingURI,&#10;+                                 aContext,&#10;+                                 aMimeGuess,&#10;+                                 aExtra,&#10;+                                 &amp;shouldLoad,&#10;+                                 GetContentPolicy());&#10;+  NS_ENSURE_SUCCESS(rv, rv);&#10;+  if (NS_CP_REJECTED(shouldLoad)) {&#10;+    return NS_ERROR_CONTENT_BLOCKED;&#10;+  }&#10;+&#10;+  // Same Origin&#10;+  if ((aAllowData &amp;&amp; SchemeIs(aURIToLoad, &quot;data&quot;)) ||&#10;+      ((aCheckLoadFlags &amp; nsIScriptSecurityManager::ALLOW_CHROME) &amp;&amp;&#10;+       SchemeIs(aURIToLoad, &quot;chrome&quot;))) {&#10;+    return NS_OK;&#10;+  }&#10;+  return sSecurityManager-&gt;CheckSameOriginURI(loadingURI, aURIToLoad);&#10;+}&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/base/src/nsDocument.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 2cb1ea3..61e40db 100644&#10;@@ -154,6 +154,7 @@ static NS_DEFINE_CID(kDOMEventGroupCID, NS_DOMEVENTGROUP_CID);&#10; #include &quot;nsIXPConnect.h&quot;&#10; #include &quot;nsCycleCollector.h&quot;&#10; #include &quot;nsCCUncollectableMarker.h&quot;&#10;+#include &quot;nsIContentPolicy.h&quot;&#10; &#10; #ifdef MOZ_LOGGING&#10; // so we can get logging even in release builds&#10;@@ -3430,23 +3431,16 @@ nsDocument::RemoveBinding(nsIDOMElement* aContent, const nsAString&amp; aURI)&#10; }&#10; &#10; NS_IMETHODIMP&#10;-nsDocument::LoadBindingDocument(const nsAString&amp; aURI,&#10;-                                nsIDOMDocument** aResult)&#10;+nsDocument::LoadBindingDocument(const nsAString&amp; aURI)&#10; {&#10;   nsCOMPtr&lt;nsIURI&gt; uri;&#10;   nsresult rv = NS_NewURI(getter_AddRefs(uri), aURI,&#10;                           mCharacterSet.get(),&#10;                           NS_STATIC_CAST(nsIDocument *, this)-&gt;GetBaseURI());&#10;-&#10;   NS_ENSURE_SUCCESS(rv, rv);&#10;-  &#10;-  nsCOMPtr&lt;nsIDocument&gt; doc;&#10;-  mBindingManager-&gt;LoadBindingDocument(this, uri, getter_AddRefs(doc));&#10; &#10;-  if (doc) {&#10;-    CallQueryInterface(doc, aResult);&#10;-  }&#10;-  &#10;+  mBindingManager-&gt;LoadBindingDocument(this, uri);&#10;+&#10;   return NS_OK;&#10; }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xbl/src/nsBindingManager.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index c5a9541..5ebf6e2 100644&#10;@@ -766,19 +766,11 @@ nsBindingManager::RemoveLayeredBinding(nsIContent* aContent, nsIURI* aURL)&#10; &#10; nsresult&#10; nsBindingManager::LoadBindingDocument(nsIDocument* aBoundDoc,&#10;-                                      nsIURI* aURL,&#10;-                                      nsIDocument** aResult)&#10;+                                      nsIURI* aURL)&#10; {&#10;   NS_PRECONDITION(aURL, &quot;Must have a URI to load!&quot;);&#10;   &#10;-  nsCAutoString otherScheme;&#10;-  aURL-&gt;GetScheme(otherScheme);&#10;-  &#10;-  nsCAutoString scheme;&#10;-  aBoundDoc-&gt;GetDocumentURI()-&gt;GetScheme(scheme);&#10;-&#10;   // First we need to load our binding.&#10;-  *aResult = nsnull;&#10;   nsresult rv;&#10;   nsCOMPtr&lt;nsIXBLService&gt; xblService = &#10;            do_GetService(&quot;@mozilla.org/xbl;1&quot;, &amp;rv);&#10;@@ -792,11 +784,6 @@ nsBindingManager::LoadBindingDocument(nsIDocument* aBoundDoc,&#10;   if (!info)&#10;     return NS_ERROR_FAILURE;&#10; &#10;-  // XXXbz Why is this based on a scheme comparison?  Shouldn't this&#10;-  // be a real security check???&#10;-    if (!strcmp(scheme.get(), otherScheme.get()))&#10;-    info-&gt;GetDocument(aResult); // Addref happens here.&#10;-    &#10;   return NS_OK;&#10; }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xbl/src/nsBindingManager.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 79c5918..d3e6a76 100755&#10;@@ -156,8 +156,7 @@ public:&#10; &#10;   nsresult AddLayeredBinding(nsIContent* aContent, nsIURI* aURL);&#10;   nsresult RemoveLayeredBinding(nsIContent* aContent, nsIURI* aURL);&#10;-  nsresult LoadBindingDocument(nsIDocument* aBoundDoc, nsIURI* aURL,&#10;-                               nsIDocument** aResult);&#10;+  nsresult LoadBindingDocument(nsIDocument* aBoundDoc, nsIURI* aURL);&#10; &#10;   nsresult AddToAttachedQueue(nsXBLBinding* aBinding);&#10;   void ProcessAttachedQueue();&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xbl/src/nsXBLService.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 38baa9b..917ce17 100644&#10;@@ -522,42 +522,21 @@ nsXBLService::LoadBindings(nsIContent* aContent, nsIURI* aURL, PRBool aAugmentFl&#10;     }&#10;   }&#10; &#10;-  // Security check - remote pages can't load local bindings, except from chrome&#10;-  nsIURI *docURI = document-&gt;GetDocumentURI();&#10;-  PRBool isChrome = PR_FALSE;&#10;-  rv = docURI-&gt;SchemeIs(&quot;chrome&quot;, &amp;isChrome);&#10;-&#10;-  // Not everything with a chrome URI has a system principal.  See bug 160042.&#10;-  if (NS_FAILED(rv) || !isChrome) {&#10;-    rv = nsContentUtils::GetSecurityManager()-&gt;&#10;-      CheckLoadURIWithPrincipal(document-&gt;NodePrincipal(), aURL,&#10;-                                nsIScriptSecurityManager::ALLOW_CHROME);&#10;-    if (NS_FAILED(rv))&#10;-      return rv;&#10;-  }&#10;-&#10;-  // Content policy check.  We have to be careful to not pass aContent as the&#10;-  // context here.  Otherwise, if there is a JS-implemented content policy, we&#10;-  // will attempt to wrap the content node, which will try to load XBL bindings&#10;-  // for it, if any.  Since we're not done loading this binding yet, that will&#10;-  // reenter this method and we'll end up creating a binding and then&#10;-  // immediately clobbering it in our table.  That makes things very confused,&#10;-  // leading to misbehavior and crashes.&#10;-  PRInt16 decision = nsIContentPolicy::ACCEPT;&#10;-  rv = NS_CheckContentLoadPolicy(nsIContentPolicy::TYPE_OTHER,&#10;-                                 aURL,&#10;-                                 docURI,&#10;-                                 document,        // context&#10;-                                 EmptyCString(),  // mime guess&#10;-                                 nsnull,          // extra&#10;-                                 &amp;decision,&#10;-                                 nsContentUtils::GetContentPolicy());&#10;-&#10;-  if (NS_SUCCEEDED(rv) &amp;&amp; !NS_CP_ACCEPTED(decision))&#10;-    rv = NS_ERROR_NOT_AVAILABLE;&#10;-&#10;-  if (NS_FAILED(rv))&#10;-    return rv;&#10;+  // Security check - Enforce same-origin policy, except to chrome.&#10;+  // We have to be careful to not pass aContent as the context here. &#10;+  // Otherwise, if there is a JS-implemented content policy, we will attempt&#10;+  // to wrap the content node, which will try to load XBL bindings for it, if&#10;+  // any. Since we're not done loading this binding yet, that will reenter&#10;+  // this method and we'll end up creating a binding and then immediately&#10;+  // clobbering it in our table.  That makes things very confused, leading to&#10;+  // misbehavior and crashes.&#10;+  rv = nsContentUtils::CheckSecurityBeforeLoad(aURL,&#10;+                                               document-&gt;NodePrincipal(),&#10;+                                               nsIScriptSecurityManager::ALLOW_CHROME,&#10;+                                               PR_TRUE,&#10;+                                               nsIContentPolicy::TYPE_OTHER,&#10;+                                               document);&#10;+  NS_ENSURE_SUCCESS(rv, rv);&#10; &#10;   PRBool ready;&#10;   nsRefPtr&lt;nsXBLBinding&gt; newBinding;&#10;@@ -986,7 +965,16 @@ nsXBLService::LoadBindingDocumentInfo(nsIContent* aBoundElement,&#10; {&#10;   NS_PRECONDITION(aBindingURI, &quot;Must have a binding URI&quot;);&#10;   &#10;-  nsresult rv = NS_OK;&#10;+  nsresult rv;&#10;+  if (aBoundDocument) {&#10;+    rv = nsContentUtils::&#10;+      CheckSecurityBeforeLoad(aBindingURI, aBoundDocument-&gt;NodePrincipal(),&#10;+                              nsIScriptSecurityManager::ALLOW_CHROME,&#10;+                              PR_TRUE,&#10;+                              nsIContentPolicy::TYPE_OTHER,&#10;+                              aBoundDocument);&#10;+    NS_ENSURE_SUCCESS(rv, rv);&#10;+  }&#10; &#10;   *aResult = nsnull;&#10;   nsCOMPtr&lt;nsIXBLDocumentInfo&gt; info;&#10;@@ -1097,6 +1085,43 @@ nsXBLService::LoadBindingDocumentInfo(nsIContent* aBoundElement,&#10;   return NS_OK;&#10; }&#10; &#10;+class nsSameOriginChecker : public nsIChannelEventSink,&#10;+                            public nsIInterfaceRequestor&#10;+{&#10;+  NS_DECL_ISUPPORTS&#10;+  NS_DECL_NSICHANNELEVENTSINK&#10;+  NS_DECL_NSIINTERFACEREQUESTOR&#10;+};&#10;+&#10;+NS_IMPL_ISUPPORTS2(nsSameOriginChecker,&#10;+                   nsIChannelEventSink,&#10;+                   nsIInterfaceRequestor)&#10;+&#10;+NS_IMETHODIMP&#10;+nsSameOriginChecker::OnChannelRedirect(nsIChannel *aOldChannel,&#10;+                                       nsIChannel *aNewChannel,&#10;+                                       PRUint32    aFlags)&#10;+{&#10;+    NS_PRECONDITION(aNewChannel, &quot;Redirecting to null channel?&quot;);&#10;+&#10;+    nsCOMPtr&lt;nsIURI&gt; oldURI;&#10;+    nsresult rv = aOldChannel-&gt;GetURI(getter_AddRefs(oldURI)); // The original URI&#10;+    NS_ENSURE_SUCCESS(rv, rv);&#10;+&#10;+    nsCOMPtr&lt;nsIURI&gt; newURI;&#10;+    rv = aNewChannel-&gt;GetURI(getter_AddRefs(newURI)); // The new URI&#10;+    NS_ENSURE_SUCCESS(rv, rv);&#10;+&#10;+    return nsContentUtils::GetSecurityManager()-&gt;&#10;+      CheckSameOriginURI(oldURI, newURI);&#10;+}&#10;+&#10;+NS_IMETHODIMP&#10;+nsSameOriginChecker::GetInterface(const nsIID &amp; aIID, void **aResult)&#10;+{&#10;+    return QueryInterface(aIID, aResult);&#10;+}&#10;+&#10; nsresult&#10; nsXBLService::FetchBindingDocument(nsIContent* aBoundElement, nsIDocument* aBoundDocument,&#10;                                    nsIURI* aDocumentURI, nsIURI* aBindingURI, &#10;@@ -1131,6 +1156,11 @@ nsXBLService::FetchBindingDocument(nsIContent* aBoundElement, nsIDocument* aBoun&#10;   rv = NS_NewChannel(getter_AddRefs(channel), aDocumentURI, nsnull, loadGroup);&#10;   NS_ENSURE_SUCCESS(rv, rv);&#10; &#10;+  nsCOMPtr&lt;nsIInterfaceRequestor&gt; sameOriginChecker = new nsSameOriginChecker;&#10;+  NS_ENSURE_TRUE(sameOriginChecker, NS_ERROR_OUT_OF_MEMORY);&#10;+&#10;+  channel-&gt;SetNotificationCallbacks(sameOriginChecker);&#10;+&#10;   nsCOMPtr&lt;nsIStreamListener&gt; listener;&#10;   rv = doc-&gt;StartDocumentLoad(&quot;loadAsInteractiveData&quot;,&#10;                               channel,&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xml/document/src/nsXMLPrettyPrinter.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 708733d..6051519 100644&#10;@@ -155,9 +155,7 @@ nsXMLPrettyPrinter::PrettyPrint(nsIDocument* aDocument,&#10;     NS_ASSERTION(xblDoc, &quot;xml document doesn't implement nsIDOMDocumentXBL&quot;);&#10;     NS_ENSURE_TRUE(xblDoc, NS_ERROR_FAILURE);&#10; &#10;-    nsCOMPtr&lt;nsIDOMDocument&gt; dummy;&#10;-    xblDoc-&gt;LoadBindingDocument(NS_LITERAL_STRING(&quot;chrome://global/content/xml/XMLPrettyPrint.xml&quot;),&#10;-                                getter_AddRefs(dummy));&#10;+    xblDoc-&gt;LoadBindingDocument(NS_LITERAL_STRING(&quot;chrome://global/content/xml/XMLPrettyPrint.xml&quot;));&#10; &#10;     nsCOMPtr&lt;nsIDOMElement&gt; rootElem;&#10;     sourceDocument-&gt;GetDocumentElement(getter_AddRefs(rootElem));&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/public/idl/xbl/nsIDOMDocumentXBL.idl &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 21c83b9..6a7a9fb 100644&#10;@@ -39,7 +39,7 @@&#10; &#10; #include &quot;domstubs.idl&quot;&#10; &#10;-[scriptable, uuid(c7c0ae9b-a0ba-4f4e-9f2c-c18deb62ee8b)]&#10;+[scriptable, uuid(1a38762b-4da5-4f61-80fb-9317e198cb92)]&#10; interface nsIDOMDocumentXBL : nsISupports&#10; {&#10;   nsIDOMNodeList        getAnonymousNodes(in nsIDOMElement elt);&#10;@@ -53,5 +53,5 @@ interface nsIDOMDocumentXBL : nsISupports&#10;                                       in DOMString bindingURL);&#10; &#10;   nsIDOMElement         getBindingParent(in nsIDOMNode node);&#10;-  nsIDOMDocument        loadBindingDocument(in DOMString documentURL);&#10;+  void                  loadBindingDocument(in DOMString documentURL);&#10; };&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: jonas%sicking.cc &lt;jonas%sicking.cc&gt;  2008-04-24 12:41:34     Change reftest and crashtest in preparation for bug 379959 to not use data-urls for -moz-binding. r=dholbert. Test changes only.&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xul/content/crashtests/360078-1.xhtml &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 69bed72..a290870 100644&#10;@@ -3,7 +3,7 @@&#10; &#10; &lt;style&gt;&#10; &lt;![CDATA[&#10;-#baz { -moz-binding: url('data:text/xml,%3Cbindings%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%3E%3Cbinding%20id%3D%22foo%22%3E%3Ccontent%3E%0D%0A%3Ca%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20href%3D%22http%3A%2F%2Fwww.mozilla.org%2F%22%20id%3D%22mlink%22%3EFoo%3Cchildren%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%2F%3E%3C%2Fa%3E%0D%0A%3C%2Fcontent%3E%3C%2Fbinding%3E%3C%2Fbindings%3E%0D%0A'); }&#10;+#baz { -moz-binding: url(360078-1xbl.xml#foo); }&#10; ]]&gt;&#10; &lt;/style&gt;&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xul/content/crashtests/360078-1xbl.xml &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..c0f428c&#10;@@ -0,0 +1,3 @@&#10;+&lt;bindings xmlns=&quot;http://www.mozilla.org/xbl&quot;&gt;&lt;binding id=&quot;foo&quot;&gt;&lt;content&gt;&#10;+&lt;a xmlns=&quot;http://www.w3.org/1999/xhtml&quot; href=&quot;http://www.mozilla.org/&quot; id=&quot;mlink&quot;&gt;Foo&lt;children xmlns=&quot;http://www.mozilla.org/xbl&quot;/&gt;&lt;/a&gt;&#10;+&lt;/content&gt;&lt;/binding&gt;&lt;/bindings&gt;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- layout/reftests/bugs/372323-1.xhtml &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 3fc02a0..f43d520 100644&#10;@@ -5,20 +5,8 @@&#10;     &lt;/style&gt;&#10;   &lt;/head&gt;&#10;   &lt;body onload=&quot;runTest()&quot;&gt;&#10;-    &lt;!&#45;- The data: URIs are this binding&#10;-&lt;bindings xmlns=&quot;http://www.mozilla.org/xbl&quot;&gt;&#10;-  &lt;binding id=&quot;test&quot;&gt;&#10;-    &lt;content&gt;&#10;-      &lt;children includes=&quot;span&quot;/&gt;&#10;-      &lt;html:div xmlns:html=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;color: red&quot;&gt;&#10;-        &lt;children/&gt;&#10;-      &lt;/html:div&gt;&#10;-    &lt;/content&gt;&#10;-  &lt;/binding&gt;&#10;-&lt;/bindings&gt;&#10;-    &#45;-&gt;&#10;-    &lt;div id=&quot;test1&quot; style=&quot;-moz-binding: url(data:text/xml,%3Cbindings%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%3E%0D%0A%20%20%3Cbinding%20id%3D%22test%22%3E%0D%0A%20%20%20%20%3Ccontent%3E%0D%0A%20%20%20%20%20%20%3Cchildren%20includes%3D%22span%22%2F%3E%0D%0A%20%20%20%20%20%20%3Chtml%3Adiv%20xmlns%3Ahtml%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22color%3A%20red%22%3E%0D%0A%20%20%20%20%20%20%20%20%3Cchildren%2F%3E%0D%0A%20%20%20%20%20%20%3C%2Fhtml%3Adiv%3E%0D%0A%20%20%20%20%3C%2Fcontent%3E%0D%0A%20%20%3C%2Fbinding%3E%0D%0A%3C%2Fbindings%3E%0D%0A);&quot;/&gt;&#10;-    &lt;div id=&quot;test2&quot; style=&quot;-moz-binding: url(data:text/xml,%3Cbindings%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%3E%0D%0A%20%20%3Cbinding%20id%3D%22test%22%3E%0D%0A%20%20%20%20%3Ccontent%3E%0D%0A%20%20%20%20%20%20%3Cchildren%20includes%3D%22span%22%2F%3E%0D%0A%20%20%20%20%20%20%3Chtml%3Adiv%20xmlns%3Ahtml%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22color%3A%20red%22%3E%0D%0A%20%20%20%20%20%20%20%20%3Cchildren%2F%3E%0D%0A%20%20%20%20%20%20%3C%2Fhtml%3Adiv%3E%0D%0A%20%20%20%20%3C%2Fcontent%3E%0D%0A%20%20%3C%2Fbinding%3E%0D%0A%3C%2Fbindings%3E%0D%0A);&quot;&gt;&#10;+    &lt;div id=&quot;test1&quot; style=&quot;-moz-binding: url(372323-1xbl.xml#test);&quot;/&gt;&#10;+    &lt;div id=&quot;test2&quot; style=&quot;-moz-binding: url(372323-1xbl.xml#test);&quot;&gt;&#10;       &lt;!&#45;- Make the script load, so the binding loads first &#45;-&gt;&#10;       &lt;script src=&quot;data:text/javascript,document.body.offsetWidth;&quot;/&gt;&#10;       &lt;!&#45;- The whitespace here is important... or this comment will do&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- layout/reftests/bugs/372323-1xbl.xml &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..e72d031&#10;@@ -0,0 +1,11 @@&#10;+&lt;bindings xmlns=&quot;http://www.mozilla.org/xbl&quot;&gt;&#10;+  &lt;binding id=&quot;test&quot;&gt;&#10;+    &lt;content&gt;&#10;+      &lt;children includes=&quot;span&quot;/&gt;&#10;+      &lt;html:div xmlns:html=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;color: red&quot;&gt;&#10;+        &lt;children/&gt;&#10;+      &lt;/html:div&gt;&#10;+    &lt;/content&gt;&#10;+  &lt;/binding&gt;&#10;+&#10;+&lt;/bindings&gt;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- layout/reftests/bugs/374193-1.xhtml &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 3c000fe..b567f97 100644&#10;@@ -2,6 +2,6 @@&#10;   &gt;&lt;mtd xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&#10;   &gt;&lt;th xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&#10;   /&gt;&lt;mtable xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&#10;-  &gt;&lt;th xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;-moz-binding: url(data:text/xml;charset=utf-8,%3Cbindings%20xmlns%3D%22http%3A//www.mozilla.org/xbl%22%3E%0A%3Cbinding%20id%3D%22a%22%3E%0A%3Cimplementation%3E%0A%3Cconstructor%3E%0A%20%20this.style.position%3D%27fixed%27%3B%0A%3C/constructor%3E%0A%3C/implementation%3E%0A%3Ccontent%3E%3Cchildren/%3E%3C/content%3E%0A%3C/binding%3E%0A%3C/bindings%3E);&quot; id=&quot;mw_th20&quot;&gt;&lt;/th&gt;&lt;/mtable&gt;&lt;/mtd&gt;&lt;style&gt;&#10;+  &gt;&lt;th xmlns=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;-moz-binding: url(374193-1xbl.xml);&quot; id=&quot;mw_th20&quot;&gt;&lt;/th&gt;&lt;/mtable&gt;&lt;/mtd&gt;&lt;style&gt;&#10; mtable::after { content:&quot;anonymous text&quot;; }&#10; &lt;/style&gt;&lt;/html&gt;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- layout/reftests/bugs/374193-1xbl.xml &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..c1d2883&#10;@@ -0,0 +1,10 @@&#10;+&lt;bindings xmlns=&quot;http://www.mozilla.org/xbl&quot;&gt;&#10;+&lt;binding id=&quot;a&quot;&gt;&#10;+&lt;implementation&gt;&#10;+&lt;constructor&gt;&#10;+  this.style.position='fixed';&#10;+&lt;/constructor&gt;&#10;+&lt;/implementation&gt;&#10;+&lt;content&gt;&lt;children/&gt;&lt;/content&gt;&#10;+&lt;/binding&gt;&#10;+&lt;/bindings&gt;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- layout/reftests/bugs/396286-1.html &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 2a5a7a1..0af9132 100644&#10;@@ -2,10 +2,10 @@&#10; &lt;style id=&quot;script&quot;&gt;#a::first-line {}&lt;/style&gt;&#10; &lt;/head&gt;&#10; &lt;body&gt;&#10;-&lt;span id=&quot;a&quot; style=&quot;-moz-binding: url(data:text/xml;charset=utf-8,%3Cbindings%20xmlns%3D%22http%3A//www.mozilla.org/xbl%22%3E%0A%3Cbinding%20id%3D%22a%22%3E%0A%3Cimplementation%3E%0A%3Cconstructor%3E%0A%20%20this.style.position%3D%27fixed%27%3B%0A%3C/constructor%3E%0A%3C/implementation%3E%0A%3Ccontent%3E%0A%3Cchildren/%3E%0A%3C/content%3E%0A%3C/binding%3E%0A%3C/bindings%3E);&quot;&gt;&#10;+&lt;span id=&quot;a&quot; style=&quot;-moz-binding: url(396286-1xbl.xml#a);&quot;&gt;&#10;   &lt;br&gt;&#10;-  &lt;span style=&quot;-moz-binding: url(data:text/xml;charset=utf-8,%3Cbindings%20xmlns%3D%22http%3A//www.mozilla.org/xbl%22%3E%0A%3Cbinding%20id%3D%22a%22%3E%0A%3Ccontent%3E%0A%3Cchildren/%3E%0A%3C/content%3E%0A%3C/binding%3E%0A%3C/bindings%3E);&quot;&gt;&#10;-    &lt;span style=&quot;position: absolute;-moz-binding: url(data:text/xml;charset=utf-8,%3Cbindings%20xmlns%3D%22http%3A//www.mozilla.org/xbl%22%3E%0A%3Cbinding%20id%3D%22a%22%3E%0A%3Cimplementation%3E%0A%3Cconstructor%3E%0A%20%20this.style.position%3D%27fixed%27%3B%0A%3C/constructor%3E%0A%3C/implementation%3E%0A%3Ccontent%3E%0A%3Cchildren/%3E%0A%3C/content%3E%0A%3C/binding%3E%0A%3C/bindings%3E);&quot;&gt;&lt;/span&gt;&#10;+  &lt;span style=&quot;-moz-binding: url(396286-1xbl.xml#b);&quot;&gt;&#10;+    &lt;span style=&quot;position: absolute;-moz-binding: url(396286-1xbl.xml#a);&quot;&gt;&lt;/span&gt;&#10;   &lt;/span&gt;&#10; &lt;/span&gt;&#10; &lt;/body&gt;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- layout/reftests/bugs/396286-1xbl.xml &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..d1421d2&#10;@@ -0,0 +1,20 @@&#10;+&lt;bindings xmlns=&quot;http://www.mozilla.org/xbl&quot;&gt;&#10;+&#10;+&lt;binding id=&quot;a&quot;&gt;&#10;+&lt;implementation&gt;&#10;+&lt;constructor&gt;&#10;+  this.style.position='fixed';&#10;+&lt;/constructor&gt;&#10;+&lt;/implementation&gt;&#10;+&lt;content&gt;&#10;+&lt;children/&gt;&#10;+&lt;/content&gt;&#10;+&lt;/binding&gt;&#10;+&#10;+&lt;binding id=&quot;b&quot;&gt;&#10;+&lt;content&gt;&#10;+&lt;children/&gt;&#10;+&lt;/content&gt;&#10;+&lt;/binding&gt;&#10;+&#10;+&lt;/bindings&gt;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- layout/reftests/bugs/403962-1.xhtml &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 16f9bdb..6f135ca 100644&#10;@@ -1,39 +1,10 @@&#10; &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; class=&quot;reftest-wait&quot;&gt;&#10;   &lt;head&gt;&#10;-    &lt;!&#45;-&#10;-      The binding attached to #test1 and #test2 is:&#10;-&#10;-&lt;bindings xmlns=&quot;http://www.mozilla.org/xbl&quot;&gt;&#10;-  &lt;binding id=&quot;test&quot;&gt;&#10;-    &lt;content&gt;&#10;-      &lt;html:div xmlns:html=&quot;http://www.w3.org/1999/xhtml&quot;&#10;-                style=&quot;color: red; -moz-binding: url(data:text/xml,%3Cbindings%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%3E%0D%0A%20%20%3Cbinding%20id%3D%22test-base%22%3E%0D%0A%20%20%20%20%3Ccontent%3E%0D%0A%20%20%20%20%20%20%3Chtml%3Adiv%20xmlns%3Ahtml%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22color%3A%20green%22%3E%0D%0A%20%20%20%20%20%20%20%20%3Cchildren%20includes%3D%22span%22%2F%3E%0D%0A%20%20%20%20%20%20%3C%2Fhtml%3Adiv%3E%0D%0A%20%20%20%20%20%20%3Chtml%3Adiv%20xmlns%3Ahtml%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22color%3A%20red%22%3E%0D%0A%20%20%20%20%20%20%20%20%3Cchildren%2F%3E%0D%0A%20%20%20%20%20%20%3C%2Fhtml%3Adiv%3E%0D%0A%20%20%20%20%3C%2Fcontent%3E%0D%0A%20%20%3C%2Fbinding%3E%0D%0A%3C%2Fbindings%3E%0D%0A)&quot;&gt;&#10;-        &lt;children/&gt;&#10;-      &lt;/html:div&gt;&#10;-    &lt;/content&gt;&#10;-  &lt;/binding&gt;&#10;-&lt;/bindings&gt;&#10;-&#10;-    where the binding attached to the content div is:&#10;-      &#10;-&lt;bindings xmlns=&quot;http://www.mozilla.org/xbl&quot;&gt;&#10;-  &lt;binding id=&quot;test-base&quot;&gt;&#10;-    &lt;content&gt;&#10;-      &lt;html:div xmlns:html=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;color: green&quot;&gt;&#10;-        &lt;children includes=&quot;span&quot;/&gt;&#10;-      &lt;/html:div&gt;&#10;-      &lt;html:div xmlns:html=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;color: red&quot;&gt;&#10;-        &lt;children/&gt;&#10;-      &lt;/html:div&gt;&#10;-    &lt;/content&gt;&#10;-  &lt;/binding&gt;&#10;-&lt;/bindings&gt;&#10;&#45;&#45;-&gt;&#10;     &lt;style&gt;&#10;       div { color: green; }&#10; &#10;       #test1, #test2 {&#10;-        -moz-binding: url(&quot;data:text/xml,%3Cbindings%20xmlns%3D%22http%3A%2F%2Fwww.mozilla.org%2Fxbl%22%3E%0D%0A%20%20%3Cbinding%20id%3D%22test%22%3E%0D%0A%20%20%20%20%3Ccontent%3E%0D%0A%20%20%20%20%20%20%3Chtml%3Adiv%20xmlns%3Ahtml%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20style%3D%22color%3A%20red%3B%20-moz-binding%3A%20url(data%3Atext%2Fxml%2C%253Cbindings%2520xmlns%253D%2522http%253A%252F%252Fwww.mozilla.org%252Fxbl%2522%253E%250D%250A%2520%2520%253Cbinding%2520id%253D%2522test-base%2522%253E%250D%250A%2520%2520%2520%2520%253Ccontent%253E%250D%250A%2520%2520%2520%2520%2520%2520%253Chtml%253Adiv%2520xmlns%253Ahtml%253D%2522http%253A%252F%252Fwww.w3.org%252F1999%252Fxhtml%2522%2520style%253D%2522color%253A%2520green%2522%253E%250D%250A%2520%2520%2520%2520%2520%2520%2520%2520%253Cchildren%2520includes%253D%2522span%2522%252F%253E%250D%250A%2520%2520%2520%2520%2520%2520%253C%252Fhtml%253Adiv%253E%250D%250A%2520%2520%2520%2520%2520%2520%253Chtml%253Adiv%2520xmlns%253Ahtml%253D%2522http%253A%252F%252Fwww.w3.org%252F1999%252Fxhtml%2522%2520style%253D%2522color%253A%2520red%2522%253E%250D%250A%2520%2520%2520%2520%2520%2520%2520%2520%253Cchildren%252F%253E%250D%250A%2520%2520%2520%2520%2520%2520%253C%252Fhtml%253Adiv%253E%250D%250A%2520%2520%2520%2520%253C%252Fcontent%253E%250D%250A%2520%2520%253C%252Fbinding%253E%250D%250A%253C%252Fbindings%253E%250D%250A)%22%3E%0D%0A%20%20%20%20%20%20%20%20%3Cchildren%2F%3E%0D%0A%20%20%20%20%20%20%3C%2Fhtml%3Adiv%3E%0D%0A%20%20%20%20%3C%2Fcontent%3E%0D%0A%20%20%3C%2Fbinding%3E%0D%0A%3C%2Fbindings%3E%0D%0A&quot;);&#10;+        -moz-binding: url(403962-1xbl.xml#test);&#10;       }&#10;     &lt;/style&gt;&#10;   &lt;/head&gt;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- layout/reftests/bugs/403962-1xbl.xml &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..5f26345&#10;@@ -0,0 +1,22 @@&#10;+&lt;bindings xmlns=&quot;http://www.mozilla.org/xbl&quot;&gt;&#10;+  &lt;binding id=&quot;test&quot;&gt;&#10;+    &lt;content&gt;&#10;+      &lt;html:div xmlns:html=&quot;http://www.w3.org/1999/xhtml&quot;&#10;+                style=&quot;color: red; -moz-binding: url(403962-1xbl.xml#test-base)&quot;&gt;&#10;+        &lt;children/&gt;&#10;+      &lt;/html:div&gt;&#10;+    &lt;/content&gt;&#10;+  &lt;/binding&gt;&#10;+&#10;+  &lt;binding id=&quot;test-base&quot;&gt;&#10;+    &lt;content&gt;&#10;+      &lt;html:div xmlns:html=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;color: green&quot;&gt;&#10;+        &lt;children includes=&quot;span&quot;/&gt;&#10;+      &lt;/html:div&gt;&#10;+      &lt;html:div xmlns:html=&quot;http://www.w3.org/1999/xhtml&quot; style=&quot;color: red&quot;&gt;&#10;+        &lt;children/&gt;&#10;+      &lt;/html:div&gt;&#10;+&#10;+    &lt;/content&gt;&#10;+  &lt;/binding&gt;&#10;+&lt;/bindings&gt;&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s69"><Data ss:Type="String">Author: bent.mozilla%gmail.com &lt;bent.mozilla%gmail.com&gt;  2008-04-29 07:56:13    Bug 379959. Patch by Jonas Sicking &lt;jonas@sicking.cc&gt;. r+sr=bz, a=damons.&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- build/pgo/automation.py.in &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 09cc15a..c48564a 100644&#10;@@ -240,6 +240,7 @@ user_pref(&quot;browser.shell.checkDefaultBrowser&quot;, false);&#10; user_pref(&quot;browser.warnOnQuit&quot;, false);&#10; user_pref(&quot;accessibility.typeaheadfind.autostart&quot;, false);&#10; user_pref(&quot;javascript.options.showInConsole&quot;, true);&#10;+user_pref(&quot;layout.debug.enable_data_xbl&quot;, true);&#10; &quot;&quot;&quot;&#10;   prefs.append(part)&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/base/public/nsContentUtils.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 7d9df7b..b1898a2 100644&#10;@@ -546,6 +546,7 @@ public:&#10;   static void UnregisterPrefCallback(const char *aPref,&#10;                                      PrefChangedFunc aCallback,&#10;                                      void * aClosure);&#10;+  static void AddBoolPrefVarCache(const char* aPref, PRBool* aVariable);&#10;   static nsIPrefBranch *GetPrefBranch()&#10;   {&#10;     return sPrefBranch;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/base/src/nsContentUtils.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e81c2ca..c249569 100644&#10;@@ -2500,6 +2500,22 @@ nsContentUtils::UnregisterPrefCallback(const char *aPref,&#10;     sPref-&gt;UnregisterCallback(aPref, aCallback, aClosure);&#10; }&#10; &#10;+static int PR_CALLBACK&#10;+BoolVarChanged(const char *aPref, void *aClosure)&#10;+{&#10;+  PRBool* cache = static_cast&lt;PRBool*&gt;(aClosure);&#10;+  *cache = nsContentUtils::GetBoolPref(aPref, PR_FALSE);&#10;+  &#10;+  return 0;&#10;+}&#10;+&#10;+void&#10;+nsContentUtils::AddBoolPrefVarCache(const char *aPref,&#10;+                                    PRBool* aCache)&#10;+{&#10;+  *aCache = GetBoolPref(aPref, PR_FALSE);&#10;+  RegisterPrefCallback(aPref, BoolVarChanged, aCache);&#10;+}&#10; &#10; static const char *gEventNames[] = {&quot;event&quot;};&#10; static const char *gSVGEventNames[] = {&quot;evt&quot;};&#10;@@ -3844,6 +3860,13 @@ nsContentUtils::CheckSecurityBeforeLoad(nsIURI* aURIToLoad,&#10;                                         nsISupports* aExtra)&#10; {&#10;   NS_PRECONDITION(aLoadingPrincipal, &quot;Must have a loading principal here&quot;);&#10;+&#10;+  PRBool isSystemPrin = PR_FALSE;&#10;+  if (NS_SUCCEEDED(sSecurityManager-&gt;IsSystemPrincipal(aLoadingPrincipal,&#10;+                                                       &amp;isSystemPrin)) &amp;&amp;&#10;+      isSystemPrin) {&#10;+    return NS_OK;&#10;+  }&#10;   &#10;   // XXXbz do we want to fast-path skin stylesheets loading XBL here somehow?&#10;   // CheckLoadURIWithPrincipal&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xbl/src/nsXBLService.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 5d8a500..6a86315 100644&#10;@@ -427,7 +427,8 @@ nsXBLStreamListener::Load(nsIDOMEvent* aEvent)&#10; &#10; // Static member variable initialization&#10; PRUint32 nsXBLService::gRefCnt = 0;&#10;- &#10;+PRBool nsXBLService::gAllowDataURIs = PR_FALSE;&#10;+&#10; nsHashtable* nsXBLService::gClassTable = nsnull;&#10; &#10; JSCList  nsXBLService::gClassLRUList = JS_INIT_STATIC_CLIST(&amp;nsXBLService::gClassLRUList);&#10;@@ -446,6 +447,9 @@ nsXBLService::nsXBLService(void)&#10;   if (gRefCnt == 1) {&#10;     gClassTable = new nsHashtable();&#10;   }&#10;+  &#10;+  nsContentUtils::AddBoolPrefVarCache(&quot;layout.debug.enable_data_xbl&quot;,&#10;+                                      &amp;gAllowDataURIs);&#10; }&#10; &#10; nsXBLService::~nsXBLService(void)&#10;@@ -958,7 +962,7 @@ nsXBLService::LoadBindingDocumentInfo(nsIContent* aBoundElement,&#10;     rv = nsContentUtils::&#10;       CheckSecurityBeforeLoad(aBindingURI, aOriginPrincipal,&#10;                               nsIScriptSecurityManager::ALLOW_CHROME,&#10;-                              PR_TRUE,&#10;+                              gAllowDataURIs,&#10;                               nsIContentPolicy::TYPE_XBL,&#10;                               aBoundDocument);&#10;     NS_ENSURE_SUCCESS(rv, rv);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xbl/src/nsXBLService.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index d8c506b..b6bb9a2 100644&#10;@@ -150,6 +150,9 @@ public:&#10;   static JSCList  gClassLRUList;             // LRU list of cached classes.&#10;   static PRUint32 gClassLRUListLength;       // Number of classes on LRU list.&#10;   static PRUint32 gClassLRUListQuota;        // Quota on class LRU list.&#10;+  static PRBool   gAllowDataURIs;            // Whether we should allow data&#10;+                                             // urls in -moz-binding. Needed for&#10;+                                             // testing.&#10; &#10;   nsFixedSizeAllocator mPool;&#10; };&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xbl/test/Makefile.in &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 9deb767..28037a7 100644&#10;@@ -49,6 +49,7 @@ include $(topsrcdir)/config/rules.mk&#10; _TEST_FILES = \&#10;   test_bug296375.xul \&#10;   test_bug310107.html \&#10;+  bug310107-resource.xhtml \&#10;   test_bug366770.html \&#10;   test_bug371724.xhtml \&#10;   test_bug372769.xhtml \&#10;@@ -60,7 +61,10 @@ _TEST_FILES = \&#10;   test_bug400705.xhtml \&#10;   test_bug401907.xhtml \&#10;   test_bug403162.xhtml \&#10;-  bug310107-resource.xhtml \&#10;+  test_bug379959.html \&#10;+  file_bug379959_data.html \&#10;+  file_bug379959_cross.html \&#10;+  file_bug379959_xbl.xml \&#10;   $(NULL)&#10; &#10; libs:: $(_TEST_FILES)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xbl/test/file_bug379959_cross.html &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..21e1149&#10;@@ -0,0 +1,25 @@&#10;+&lt;!DOCTYPE HTML&gt;&#10;+&lt;html&gt;&#10;+&lt;head&gt;&#10;+&lt;style&gt;&#10;+#div1 {&#10;+  color: green;&#10;+  -moz-binding: url(file_bug379959_xbl.xml#xbltest);&#10;+}&#10;+#div2 {&#10;+  color: green;&#10;+  -moz-binding: url(http://example.com/tests/content/xbl/test/file_bug379959_xbl.xml#xbltest);&#10;+}&#10;+&lt;/style&gt;&#10;+&lt;body&gt;&#10;+&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;&#10;+&lt;div id=&quot;div2&quot;&gt;&lt;/div&gt;&#10;+&lt;script&gt;&#10;+onload = function() {&#10;+  nodes = document.getAnonymousNodes(document.getElementById('div1'));&#10;+  parent.postMessage(nodes ? nodes.length : 0);&#10;+  nodes = document.getAnonymousNodes(document.getElementById('div2'));&#10;+  parent.postMessage(nodes ? nodes.length : 0);&#10;+}&#10;+&lt;/script&gt;&#10;+&lt;/html&gt;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xbl/test/file_bug379959_data.html &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..ae9d943&#10;@@ -0,0 +1,18 @@&#10;+&lt;!DOCTYPE HTML&gt;&#10;+&lt;html&gt;&#10;+&lt;head&gt;&#10;+&lt;style&gt;&#10;+#d {&#10;+  color: green;&#10;+  -moz-binding: url(data:text/xml;charset=utf-8,%3C%3Fxml%20version%3D%221.0%22%3F%3E%0A%3Cbindings%20id%3D%22xbltestBindings%22%20xmlns%3D%22http%3A//www.mozilla.org/xbl%22%3E%0A%20%20%3Cbinding%20id%3D%22xbltest%22%3E%3Ccontent%3EPASS%3C/content%3E%3C/binding%3E%0A%3C/bindings%3E%0A);&#10;+}&#10;+&lt;/style&gt;&#10;+&lt;body&gt;&#10;+&lt;div id=&quot;d&quot;&gt;&lt;/div&gt;&#10;+&lt;script&gt;&#10;+onload = function() {&#10;+  nodes = document.getAnonymousNodes(document.getElementById('d'));&#10;+  parent.postMessage(nodes ? nodes.length : 0);&#10;+}&#10;+&lt;/script&gt;&#10;+&lt;/html&gt;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xbl/test/file_bug379959_xbl.xml &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..c791a2e&#10;@@ -0,0 +1,4 @@&#10;+&lt;?xml version=&quot;1.0&quot;?&gt;&#10;+&lt;bindings id=&quot;xbltestBindings&quot; xmlns=&quot;http://www.mozilla.org/xbl&quot;&gt;&#10;+  &lt;binding id=&quot;xbltest&quot;&gt;&lt;content&gt;PASS&lt;/content&gt;&lt;/binding&gt;&#10;+&lt;/bindings&gt;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xbl/test/test_bug379959.html &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..fdda4f2&#10;@@ -0,0 +1,82 @@&#10;+&lt;!DOCTYPE HTML&gt;&#10;+&lt;html&gt;&#10;+&lt;!&#45;-&#10;+https://bugzilla.mozilla.org/show_bug.cgi?id=366770&#10;+&#45;-&gt;&#10;+&lt;head&gt;&#10;+  &lt;title&gt;Test for Bug 366770&lt;/title&gt;&#10;+  &lt;script type=&quot;text/javascript&quot; src=&quot;/MochiKit/MochiKit.js&quot;&gt;&lt;/script&gt;&#10;+  &lt;script type=&quot;text/javascript&quot; src=&quot;/tests/SimpleTest/SimpleTest.js&quot;&gt;&lt;/script&gt;&#10;+  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/tests/SimpleTest/test.css&quot; /&gt;&#10;+&lt;/head&gt;&#10;+&lt;body onload=&quot;gen.next();&quot;&gt;&#10;+  &lt;a target=&quot;_blank&quot; href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=366770&quot;&gt;Mozilla Bug 366770&lt;/a&gt;&#10;+  &lt;p id=&quot;display&quot;&gt;&#10;+    Note: In order to re-run this test correctly you need to shift-reload&#10;+    rather than simply reload. If you just reload we will restore the&#10;+    previous url in the iframe which will result in an extra unexpected&#10;+    message.&#10;+  &lt;/p&gt;&#10;+  &lt;div id=&quot;content&quot; style=&quot;display: none&quot;&gt;&lt;/div&gt;&#10;+  &lt;iframe id=&quot;f&quot;&gt;&lt;/iframe&gt;&#10;+&#10;+  &lt;pre id=&quot;test&quot;&gt;&#10;+    &lt;script class=&quot;testbody&quot; type=&quot;application/javascript;version=1.7&quot;&gt;&#10;+SimpleTest.waitForExplicitFinish();&#10;+&#10;+gen = runTest();&#10;+var messages = 0;&#10;+&#10;+document.addEventListener(&quot;message&quot;,&#10;+                          function(e) { messages++; gen.send(e.data); },&#10;+                          false);&#10;+&#10;+const prefName = &quot;layout.debug.enable_data_xbl&quot;;&#10;+&#10;+function runTest() {&#10;+  iframe = document.getElementById('f');&#10;+&#10;+  // Turn on loads of data-urls&#10;+  netscape.security.PrivilegeManager.enablePrivilege(&quot;UniversalXPConnect&quot;);&#10;+  var prefs = Components.classes[&quot;@mozilla.org/preferences-service;1&quot;]&#10;+    .getService(Components.interfaces.nsIPrefBranch);&#10;+  var oldPrefVal = undefined;&#10;+  if (prefs.prefHasUserValue(prefName)) {&#10;+    oldPrefVal = prefs.getBoolPref(prefName);&#10;+  }&#10;+&#10;+  // Test with data-urls off&#10;+  prefs.setBoolPref(prefName, false);&#10;+  iframe.src = &quot;file_bug379959_data.html&quot;;&#10;+  is((yield), 0, &quot;data-url load should have failed&quot;);&#10;+&#10;+  // Test with data-urls on&#10;+  prefs.setBoolPref(prefName, true);&#10;+  iframe.src = &quot;file_bug379959_data.html&quot;;&#10;+  is((yield), 1, &quot;data-url load should have been successful&quot;);&#10;+&#10;+  // Try a cross-site load&#10;+  iframe.src = &quot;file_bug379959_cross.html&quot;;&#10;+  is((yield), 1, &quot;same site load should have succeeded&quot;);&#10;+  is((yield), 0, &quot;cross site load should have failed&quot;);&#10;+&#10;+  // Check that we got the right number of messages to make sure that&#10;+  // the right message has aligned with the right test&#10;+  is(messages, 4, &quot;wrong number of messages&quot;);&#10;+&#10;+  // We're done&#10;+  if (oldPrefVal === undefined) {&#10;+    prefs.clearUserPref(prefName);&#10;+  }&#10;+  else {&#10;+    prefs.setBoolPref(prefName, oldPrefVal);&#10;+  }&#10;+&#10;+  SimpleTest.finish();&#10;+&#10;+  yield;&#10;+}&#10;+    &lt;/script&gt;&#10;+  &lt;/pre&gt;&#10;+&lt;/body&gt;&#10;+&lt;/html&gt;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- testing/mochitest/runtests.pl.in &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index cd20d64..0d956bc 100644&#10;@@ -438,6 +438,7 @@ user_pref(&quot;browser.shell.checkDefaultBrowser&quot;, false);&#10; user_pref(&quot;browser.warnOnQuit&quot;, false);&#10; user_pref(&quot;accessibility.typeaheadfind.autostart&quot;, false);&#10; user_pref(&quot;javascript.options.showInConsole&quot;, true);&#10;+user_pref(&quot;layout.debug.enable_data_xbl&quot;, true);&#10; PREFEND&#10; &#10;   # Grant God-power to all the servers on which tests can run.&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- testing/tools/profiles/createTestingProfile.py &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 4c10002..6cdc32ff 100644&#10;@@ -23,7 +23,8 @@ userPrefs = {&#10;     'dom.disable_window_move_resize': 'false',&#10;     'layout.fire_onload_after_image_background_loads': 'true',&#10;     'javascript.options.showInConsole': 'true',&#10;-    'privacy.popups.firstTime': 'false'&#10;+    'privacy.popups.firstTime': 'false',&#10;+    'layout.debug.enable_data_xbl': 'true'&#10; }&#10; &#10; def usage():&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="324">
    <Cell><Data ss:Type="Number">389580</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: cbiesinger%gmx.at &lt;cbiesinger%gmx.at&gt;  2007-07-26 06:48:00    389580 don't allow escaped null bytes in URLs for external protocol handlers&#10;    r=bzbarsky sr=dveditz&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- uriloader/exthandler/nsExternalHelperAppService.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 199494b..d1cbe56 100644&#10;@@ -1215,6 +1215,9 @@ NS_IMETHODIMP nsExternalHelperAppService::LoadURI(nsIURI * aURL, nsIPrompt * aPr&#10;   nsCAutoString spec;&#10;   aURL-&gt;GetSpec(spec);&#10; &#10;+  if (spec.Find(&quot;%00&quot;) != -1)&#10;+    return NS_ERROR_MALFORMED_URI;&#10;+&#10;   spec.ReplaceSubstring(&quot;\&quot;&quot;, &quot;%22&quot;);&#10;   spec.ReplaceSubstring(&quot;`&quot;, &quot;%60&quot;);&#10; &#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">410156</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: rob_strong%exchangecode.com &lt;rob_strong%exchangecode.com&gt;  2008-04-18 06:20:20      Bug 410156 - r=bsmedberg, approval1.9=beltzner, blocking-firefox3=beltzner&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- toolkit/components/commandlines/src/nsCommandLine.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 70e34dc..c4b7933 100644&#10;@@ -95,6 +95,7 @@ protected:&#10;      void *aClosure);&#10; &#10;   void appendArg(const char* arg);&#10;+  void resolveShortcutURL(nsILocalFile* aFile, nsACString&amp; outURL);&#10;   nsresult EnumerateHandlers(EnumerateHandlersCallback aCallback, void *aClosure);&#10;   nsresult EnumerateValidators(EnumerateValidatorsCallback aCallback, void *aClosure);&#10; &#10;@@ -442,16 +443,26 @@ nsCommandLine::ResolveURI(const nsAString&amp; aArgument, nsIURI* *aResult)&#10;   nsCOMPtr&lt;nsIIOService&gt; io = do_GetIOService();&#10;   NS_ENSURE_TRUE(io, NS_ERROR_OUT_OF_MEMORY);&#10; &#10;+  nsCOMPtr&lt;nsIURI&gt; workingDirURI;&#10;+  if (mWorkingDir) {&#10;+    io-&gt;NewFileURI(mWorkingDir, getter_AddRefs(workingDirURI));&#10;+  }&#10;+&#10;   nsCOMPtr&lt;nsILocalFile&gt; lf (do_CreateInstance(NS_LOCAL_FILE_CONTRACTID));&#10;   rv = lf-&gt;InitWithPath(aArgument);&#10;   if (NS_SUCCEEDED(rv)) {&#10;     lf-&gt;Normalize();&#10;-    return io-&gt;NewFileURI(lf, aResult);&#10;-  }&#10;+    nsCAutoString url;&#10;+    // Try to resolve the url for .url files.&#10;+    resolveShortcutURL(lf, url);&#10;+    if (!url.IsEmpty()) {&#10;+      return io-&gt;NewURI(url,&#10;+                        nsnull,&#10;+                        workingDirURI,&#10;+                        aResult);&#10;+    }&#10; &#10;-  nsCOMPtr&lt;nsIURI&gt; workingDirURI;&#10;-  if (mWorkingDir) {&#10;-    io-&gt;NewFileURI(mWorkingDir, getter_AddRefs(workingDirURI));&#10;+    return io-&gt;NewFileURI(lf, aResult);&#10;   }&#10; &#10;   return io-&gt;NewURI(NS_ConvertUTF16toUTF8(aArgument),&#10;@@ -477,6 +488,22 @@ nsCommandLine::appendArg(const char* arg)&#10;   mArgs.AppendString(warg);&#10; }&#10; &#10;+void&#10;+nsCommandLine::resolveShortcutURL(nsILocalFile* aFile, nsACString&amp; outURL)&#10;+{&#10;+  nsCOMPtr&lt;nsIFileProtocolHandler&gt; fph;&#10;+  nsresult rv = NS_GetFileProtocolHandler(getter_AddRefs(fph));&#10;+  if (NS_FAILED(rv))&#10;+    return;&#10;+&#10;+  nsCOMPtr&lt;nsIURI&gt; uri;&#10;+  rv = fph-&gt;ReadURLFile(aFile, getter_AddRefs(uri));&#10;+  if (NS_FAILED(rv))&#10;+    return;&#10;+&#10;+  uri-&gt;GetSpec(outURL);&#10;+}&#10;+&#10; NS_IMETHODIMP&#10; nsCommandLine::Init(PRInt32 argc, char** argv, nsIFile* aWorkingDir,&#10;                     PRUint32 aState)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- toolkit/components/commandlines/test/Makefile.in &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 1e2e001..224b4f5 100644&#10;@@ -45,9 +45,14 @@ VPATH  = @srcdir@&#10; include $(DEPTH)/config/autoconf.mk&#10; &#10; MODULE  = test_harness_commandlines&#10;+TESTROOT = $(shell cd $(DEPTH) &amp;&amp; pwd)/_tests/xpcshell-simple/$(MODULE)&#10; &#10; XPCSHELL_TESTS = \&#10;                  unit \&#10;                  $(NULL)&#10; &#10; include $(topsrcdir)/config/rules.mk&#10;+&#10;+# Hack to allow preprocessing of test_bug410156.js&#10;+libs:: unit/test_bug410156.js.in&#10;+ $(PYTHON) $(MOZILLA_DIR)/config/Preprocessor.py $(DEFINES) $(ACDEFINES) $^ &gt; $(TESTROOT)/unit/test_bug410156.js&#10;&#10;&#45;&#45;&#45;- toolkit/components/commandlines/test/unit/data/test_bug410156.desktop &#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..1847cdd&#10;@@ -0,0 +1,7 @@&#10;+[Desktop Entry]&#10;+Version=1.0&#10;+Encoding=UTF-8&#10;+Name=test_bug410156&#10;+Type=Link&#10;+URL=http://www.bug410156.com/&#10;+Icon=gnome-fs-bookmark&#10;&#10;&#45;&#45;&#45;&#45;&#45;- toolkit/components/commandlines/test/unit/data/test_bug410156.url &#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..6920e1f&#10;@@ -0,0 +1,9 @@&#10;+[InternetShortcut]&#10;+URL=http://www.bug410156.com/&#10;+IDList=&#10;+HotKey=0&#10;+[{000214A0-0000-0000-C000-000000000046}]&#10;+Prop3=19,2&#10;+[InternetShortcut.A]&#10;+[InternetShortcut.W]&#10;+URL=http://www.bug410156.com/&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- toolkit/components/commandlines/test/unit/test_bug410156.js.in &#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..e69de29&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: rob_strong%exchangecode.com &lt;rob_strong%exchangecode.com&gt;  2008-04-18 06:59:53      Bustage fix for Bug 410156&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- toolkit/components/commandlines/test/Makefile.in &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 224b4f5..09eccc7 100644&#10;@@ -53,6 +53,8 @@ XPCSHELL_TESTS = \&#10; &#10; include $(topsrcdir)/config/rules.mk&#10; &#10;+ifneq (,$(filter-out OS2 Darwin,$(OS_ARCH)))&#10; # Hack to allow preprocessing of test_bug410156.js&#10; libs:: unit/test_bug410156.js.in&#10;  $(PYTHON) $(MOZILLA_DIR)/config/Preprocessor.py $(DEFINES) $(ACDEFINES) $^ &gt; $(TESTROOT)/unit/test_bug410156.js&#10;+endif&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: rob_strong%exchangecode.com &lt;rob_strong%exchangecode.com&gt;  2008-04-18 07:05:06     Backing out Bug 410156 due to test bustage&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- toolkit/components/commandlines/src/nsCommandLine.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index c4b7933..70e34dc 100644&#10;@@ -95,7 +95,6 @@ protected:&#10;      void *aClosure);&#10; &#10;   void appendArg(const char* arg);&#10;-  void resolveShortcutURL(nsILocalFile* aFile, nsACString&amp; outURL);&#10;   nsresult EnumerateHandlers(EnumerateHandlersCallback aCallback, void *aClosure);&#10;   nsresult EnumerateValidators(EnumerateValidatorsCallback aCallback, void *aClosure);&#10; &#10;@@ -443,28 +442,18 @@ nsCommandLine::ResolveURI(const nsAString&amp; aArgument, nsIURI* *aResult)&#10;   nsCOMPtr&lt;nsIIOService&gt; io = do_GetIOService();&#10;   NS_ENSURE_TRUE(io, NS_ERROR_OUT_OF_MEMORY);&#10; &#10;-  nsCOMPtr&lt;nsIURI&gt; workingDirURI;&#10;-  if (mWorkingDir) {&#10;-    io-&gt;NewFileURI(mWorkingDir, getter_AddRefs(workingDirURI));&#10;-  }&#10;-&#10;   nsCOMPtr&lt;nsILocalFile&gt; lf (do_CreateInstance(NS_LOCAL_FILE_CONTRACTID));&#10;   rv = lf-&gt;InitWithPath(aArgument);&#10;   if (NS_SUCCEEDED(rv)) {&#10;     lf-&gt;Normalize();&#10;-    nsCAutoString url;&#10;-    // Try to resolve the url for .url files.&#10;-    resolveShortcutURL(lf, url);&#10;-    if (!url.IsEmpty()) {&#10;-      return io-&gt;NewURI(url,&#10;-                        nsnull,&#10;-                        workingDirURI,&#10;-                        aResult);&#10;-    }&#10;-&#10;     return io-&gt;NewFileURI(lf, aResult);&#10;   }&#10; &#10;+  nsCOMPtr&lt;nsIURI&gt; workingDirURI;&#10;+  if (mWorkingDir) {&#10;+    io-&gt;NewFileURI(mWorkingDir, getter_AddRefs(workingDirURI));&#10;+  }&#10;+&#10;   return io-&gt;NewURI(NS_ConvertUTF16toUTF8(aArgument),&#10;                     nsnull,&#10;                     workingDirURI,&#10;@@ -488,22 +477,6 @@ nsCommandLine::appendArg(const char* arg)&#10;   mArgs.AppendString(warg);&#10; }&#10; &#10;-void&#10;-nsCommandLine::resolveShortcutURL(nsILocalFile* aFile, nsACString&amp; outURL)&#10;-{&#10;-  nsCOMPtr&lt;nsIFileProtocolHandler&gt; fph;&#10;-  nsresult rv = NS_GetFileProtocolHandler(getter_AddRefs(fph));&#10;-  if (NS_FAILED(rv))&#10;-    return;&#10;-&#10;-  nsCOMPtr&lt;nsIURI&gt; uri;&#10;-  rv = fph-&gt;ReadURLFile(aFile, getter_AddRefs(uri));&#10;-  if (NS_FAILED(rv))&#10;-    return;&#10;-&#10;-  uri-&gt;GetSpec(outURL);&#10;-}&#10;-&#10; NS_IMETHODIMP&#10; nsCommandLine::Init(PRInt32 argc, char** argv, nsIFile* aWorkingDir,&#10;                     PRUint32 aState)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- toolkit/components/commandlines/test/Makefile.in &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 09eccc7..1e2e001 100644&#10;@@ -45,16 +45,9 @@ VPATH  = @srcdir@&#10; include $(DEPTH)/config/autoconf.mk&#10; &#10; MODULE  = test_harness_commandlines&#10;-TESTROOT = $(shell cd $(DEPTH) &amp;&amp; pwd)/_tests/xpcshell-simple/$(MODULE)&#10; &#10; XPCSHELL_TESTS = \&#10;                  unit \&#10;                  $(NULL)&#10; &#10; include $(topsrcdir)/config/rules.mk&#10;-&#10;-ifneq (,$(filter-out OS2 Darwin,$(OS_ARCH)))&#10;-# Hack to allow preprocessing of test_bug410156.js&#10;-libs:: unit/test_bug410156.js.in&#10;- $(PYTHON) $(MOZILLA_DIR)/config/Preprocessor.py $(DEFINES) $(ACDEFINES) $^ &gt; $(TESTROOT)/unit/test_bug410156.js&#10;-endif&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: rob_strong%exchangecode.com &lt;rob_strong%exchangecode.com&gt;  2008-04-18 07:13:32    Backing out Bug 410156 due to test bustage&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- toolkit/components/commandlines/test/unit/test_bug410156.js.in &#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;deleted file mode 100644&#10;index e69de29..0000000&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: rob_strong%exchangecode.com &lt;rob_strong%exchangecode.com&gt;  2008-04-19 04:43:50     Relanding Bug 410156 - r=bsmedberg, approval1.9=beltzner, blocking-firefox3=beltzner&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- toolkit/components/commandlines/src/nsCommandLine.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 70e34dc..c4b7933 100644&#10;@@ -95,6 +95,7 @@ protected:&#10;      void *aClosure);&#10; &#10;   void appendArg(const char* arg);&#10;+  void resolveShortcutURL(nsILocalFile* aFile, nsACString&amp; outURL);&#10;   nsresult EnumerateHandlers(EnumerateHandlersCallback aCallback, void *aClosure);&#10;   nsresult EnumerateValidators(EnumerateValidatorsCallback aCallback, void *aClosure);&#10; &#10;@@ -442,16 +443,26 @@ nsCommandLine::ResolveURI(const nsAString&amp; aArgument, nsIURI* *aResult)&#10;   nsCOMPtr&lt;nsIIOService&gt; io = do_GetIOService();&#10;   NS_ENSURE_TRUE(io, NS_ERROR_OUT_OF_MEMORY);&#10; &#10;+  nsCOMPtr&lt;nsIURI&gt; workingDirURI;&#10;+  if (mWorkingDir) {&#10;+    io-&gt;NewFileURI(mWorkingDir, getter_AddRefs(workingDirURI));&#10;+  }&#10;+&#10;   nsCOMPtr&lt;nsILocalFile&gt; lf (do_CreateInstance(NS_LOCAL_FILE_CONTRACTID));&#10;   rv = lf-&gt;InitWithPath(aArgument);&#10;   if (NS_SUCCEEDED(rv)) {&#10;     lf-&gt;Normalize();&#10;-    return io-&gt;NewFileURI(lf, aResult);&#10;-  }&#10;+    nsCAutoString url;&#10;+    // Try to resolve the url for .url files.&#10;+    resolveShortcutURL(lf, url);&#10;+    if (!url.IsEmpty()) {&#10;+      return io-&gt;NewURI(url,&#10;+                        nsnull,&#10;+                        workingDirURI,&#10;+                        aResult);&#10;+    }&#10; &#10;-  nsCOMPtr&lt;nsIURI&gt; workingDirURI;&#10;-  if (mWorkingDir) {&#10;-    io-&gt;NewFileURI(mWorkingDir, getter_AddRefs(workingDirURI));&#10;+    return io-&gt;NewFileURI(lf, aResult);&#10;   }&#10; &#10;   return io-&gt;NewURI(NS_ConvertUTF16toUTF8(aArgument),&#10;@@ -477,6 +488,22 @@ nsCommandLine::appendArg(const char* arg)&#10;   mArgs.AppendString(warg);&#10; }&#10; &#10;+void&#10;+nsCommandLine::resolveShortcutURL(nsILocalFile* aFile, nsACString&amp; outURL)&#10;+{&#10;+  nsCOMPtr&lt;nsIFileProtocolHandler&gt; fph;&#10;+  nsresult rv = NS_GetFileProtocolHandler(getter_AddRefs(fph));&#10;+  if (NS_FAILED(rv))&#10;+    return;&#10;+&#10;+  nsCOMPtr&lt;nsIURI&gt; uri;&#10;+  rv = fph-&gt;ReadURLFile(aFile, getter_AddRefs(uri));&#10;+  if (NS_FAILED(rv))&#10;+    return;&#10;+&#10;+  uri-&gt;GetSpec(outURL);&#10;+}&#10;+&#10; NS_IMETHODIMP&#10; nsCommandLine::Init(PRInt32 argc, char** argv, nsIFile* aWorkingDir,&#10;                     PRUint32 aState)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- toolkit/components/commandlines/test/Makefile.in &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 1e2e001..3076204 100644&#10;@@ -50,4 +50,12 @@ XPCSHELL_TESTS = \&#10;                  unit \&#10;                  $(NULL)&#10; &#10;+ifeq ($(OS_ARCH),WINNT)&#10;+XPCSHELL_TESTS += unit/win&#10;+else&#10;+ifneq (,$(filter-out OS2 Darwin,$(OS_ARCH)))&#10;+XPCSHELL_TESTS += unit/unix&#10;+endif&#10;+endif&#10;+&#10; include $(topsrcdir)/config/rules.mk&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;- toolkit/components/commandlines/test/unit/unix/test_bug410156.js &#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..82a2399&#10;@@ -0,0 +1,43 @@&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is Command Line tests.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Robert Strong &lt;robert_bugzila@gmail.com&gt;.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2007&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s):&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+&#10;+function run_test() {&#10;+  var clClass = Components.classes[&quot;@mozilla.org/toolkit/command-line;1&quot;];&#10;+  var commandLine = clClass.createInstance();&#10;+  var urlFile = do_get_file(&quot;toolkit/components/commandlines/test/unit/data/test_bug410156.desktop&quot;);&#10;+  var uri = commandLine.resolveURI(urlFile.path);&#10;+  do_check_eq(uri.spec, &quot;http://www.bug410156.com/&quot;);&#10;+}&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;- toolkit/components/commandlines/test/unit/win/test_bug410156.js &#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..d594416&#10;@@ -0,0 +1,43 @@&#10;+/* ***** BEGIN LICENSE BLOCK *****&#10;+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1&#10;+ *&#10;+ * The contents of this file are subject to the Mozilla Public License Version&#10;+ * 1.1 (the &quot;License&quot;); you may not use this file except in compliance with&#10;+ * the License. You may obtain a copy of the License at&#10;+ * http://www.mozilla.org/MPL/&#10;+ *&#10;+ * Software distributed under the License is distributed on an &quot;AS IS&quot; basis,&#10;+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License&#10;+ * for the specific language governing rights and limitations under the&#10;+ * License.&#10;+ *&#10;+ * The Original Code is Command Line tests.&#10;+ *&#10;+ * The Initial Developer of the Original Code is&#10;+ * Robert Strong &lt;robert_bugzila@gmail.com&gt;.&#10;+ * Portions created by the Initial Developer are Copyright (C) 2007&#10;+ * the Initial Developer. All Rights Reserved.&#10;+ *&#10;+ * Contributor(s):&#10;+ *&#10;+ * Alternatively, the contents of this file may be used under the terms of&#10;+ * either the GNU General Public License Version 2 or later (the &quot;GPL&quot;), or&#10;+ * the GNU Lesser General Public License Version 2.1 or later (the &quot;LGPL&quot;),&#10;+ * in which case the provisions of the GPL or the LGPL are applicable instead&#10;+ * of those above. If you wish to allow use of your version of this file only&#10;+ * under the terms of either the GPL or the LGPL, and not to allow others to&#10;+ * use your version of this file under the terms of the MPL, indicate your&#10;+ * decision by deleting the provisions above and replace them with the notice&#10;+ * and other provisions required by the GPL or the LGPL. If you do not delete&#10;+ * the provisions above, a recipient may use your version of this file under&#10;+ * the terms of any one of the MPL, the GPL or the LGPL.&#10;+ *&#10;+ * ***** END LICENSE BLOCK ***** */&#10;+&#10;+function run_test() {&#10;+  var clClass = Components.classes[&quot;@mozilla.org/toolkit/command-line;1&quot;];&#10;+  var commandLine = clClass.createInstance();&#10;+  var urlFile = do_get_file(&quot;toolkit/components/commandlines/test/unit/data/test_bug410156.url&quot;);&#10;+  var uri = commandLine.resolveURI(urlFile.path);&#10;+  do_check_eq(uri.spec, &quot;http://www.bug410156.com/&quot;);&#10;+}&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">413250</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: dveditz%cruzio.com &lt;dveditz%cruzio.com&gt;  2008-01-25 14:57:52     bug 413250 fix chrome: URI scheme traversal. r=Neil, sr=bsmedberg&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- chrome/src/nsChromeRegistry.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 1efeace..8be54be 100644&#10;@@ -682,9 +682,10 @@ nsChromeRegistry::Canonify(nsIURL* aChromeURL)&#10;     nsCAutoString filePath;&#10;     rv = aChromeURL-&gt;GetFilePath(filePath);&#10;     NS_ENSURE_SUCCESS(rv, rv);&#10;+    filePath.SetLength(nsUnescapeCount(filePath.BeginWriting()));&#10; &#10;-    if (filePath.Find(NS_LITERAL_CSTRING(&quot;..&quot;)) != -1 ||&#10;-        filePath.FindChar(':') != -1) {&#10;+    if (filePath.Find(NS_LITERAL_CSTRING(&quot;..&quot;)) != kNotFound ||&#10;+        filePath.FindChar(':') != kNotFound) {&#10;       return NS_ERROR_DOM_BAD_URI;&#10;     }&#10;   }&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- rdf/chrome/src/nsChromeRegistry.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index d960d2b..20a4437 100644&#10;@@ -81,6 +81,7 @@&#10; #include &quot;nsLayoutCID.h&quot;&#10; #include &quot;prio.h&quot;&#10; #include &quot;nsInt64.h&quot;&#10;+#include &quot;nsEscape.h&quot;&#10; #include &quot;nsIDirectoryService.h&quot;&#10; #include &quot;nsILocalFile.h&quot;&#10; #include &quot;nsAppDirectoryServiceDefs.h&quot;&#10;@@ -388,26 +389,16 @@ SplitURL(nsIURI *aChromeURI, nsCString&amp; aPackage, nsCString&amp; aProvider, nsCStrin&#10;   } else {&#10;     // Protect against URIs containing .. that reach up out of the&#10;     // chrome directory to grant chrome privileges to non-chrome files.&#10;-    int depth = 0;&#10;-    PRBool sawSlash = PR_TRUE;  // .. at the beginning is suspect as well as /..&#10;-    for (const char* p=aFile.get(); *p; p++) {&#10;-      if (sawSlash) {&#10;-        if (p[0] == '.' &amp;&amp; p[1] == '.'){&#10;-          depth&#45;-;    // we have /.., decrement depth.&#10;-        } else {&#10;-          static const char escape[] = &quot;%2E%2E&quot;;&#10;-          if (PL_strncasecmp(p, escape, sizeof(escape)-1) == 0)&#10;-            depth&#45;-;   // we have the HTML-escaped form of /.., decrement depth.&#10;-        }&#10;-      } else if (p[0] != '/') {&#10;-        depth++;        // we have /x for some x that is not /&#10;-      }&#10;-      sawSlash = (p[0] == '/');&#10;-&#10;-      if (depth &lt; 0) {&#10;-        return NS_ERROR_FAILURE;&#10;-      }&#10;+    PRInt32 origLen = aFile.Length();&#10;+    PRInt32 newLen = nsUnescapeCount(aFile.BeginWriting());&#10;+    if (origLen != newLen) {&#10;+        aFile.SetLength(newLen);&#10;+        nofile = PR_TRUE; // let caller know path is modified&#10;     }&#10;+&#10;+    if (aFile.Find(NS_LITERAL_CSTRING(&quot;..&quot;)) != kNotFound ||&#10;+        aFile.FindChar(':') != kNotFound)&#10;+      return NS_ERROR_FAILURE;&#10;   }&#10;   if (aModified)&#10;     *aModified = nofile;&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: dveditz%cruzio.com &lt;dveditz%cruzio.com&gt;  2008-02-01 09:59:12      bug 413250 additional patch to catch double escaped chrome URIs too. r/sr=bsmedberg, a=beltzner&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- chrome/src/nsChromeRegistry.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 8be54be..3dc16d5 100644&#10;@@ -679,14 +679,26 @@ nsChromeRegistry::Canonify(nsIURL* aChromeURL)&#10;     aChromeURL-&gt;SetPath(path);&#10;   }&#10;   else {&#10;-    nsCAutoString filePath;&#10;-    rv = aChromeURL-&gt;GetFilePath(filePath);&#10;-    NS_ENSURE_SUCCESS(rv, rv);&#10;-    filePath.SetLength(nsUnescapeCount(filePath.BeginWriting()));&#10;-&#10;-    if (filePath.Find(NS_LITERAL_CSTRING(&quot;..&quot;)) != kNotFound ||&#10;-        filePath.FindChar(':') != kNotFound) {&#10;-      return NS_ERROR_DOM_BAD_URI;&#10;+    // prevent directory traversals (&quot;..&quot;)&#10;+    // path is already unescaped once, but uris can get unescaped twice&#10;+    const char* curChar = path.BeginReading();&#10;+    const char* end = path.EndReading();&#10;+    while (curChar &lt; end) {&#10;+      switch (*curChar) {&#10;+        case ':':&#10;+          return NS_ERROR_DOM_BAD_URI;&#10;+        case '.':&#10;+          if (*(curChar+1) == '.')&#10;+            return NS_ERROR_DOM_BAD_URI;&#10;+        case '%':&#10;+          // chrome: URIs with double-escapes are trying to trick us.&#10;+          // watch for %2e, and %25 in case someone triple unescapes&#10;+          if (*(curChar+1) == '2' &amp;&amp;&#10;+               ( *(curChar+2) == 'e' || *(curChar+2) == 'E' || &#10;+                 *(curChar+2) == '5' ))&#10;+            return NS_ERROR_DOM_BAD_URI;&#10;+      }&#10;+      ++curChar;&#10;     }&#10;   }&#10; &#10;@@ -744,7 +756,7 @@ nsChromeRegistry::ConvertChromeURL(nsIURI* aChromeURI, nsIURI* *aResult)&#10;   else if (provider.EqualsLiteral(&quot;skin&quot;)) {&#10;     baseURI = entry-&gt;skins.GetBase(mSelectedSkin, nsProviderArray::ANY);&#10;   }&#10;-  else {&#10;+  else if (provider.EqualsLiteral(&quot;content&quot;)) {&#10;     baseURI = entry-&gt;baseURI;&#10;   }&#10; &#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">418356</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: bzbarsky%mit.edu &lt;bzbarsky%mit.edu&gt;  2008-03-18 11:46:53    Set the right url in the script and don't allow loading non-chrome scripts.&#10;    Bug 418356, r+sr=jst&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/xpconnect/loader/mozJSSubScriptLoader.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 2c771e4..78540d3 100644&#10;@@ -52,16 +52,22 @@&#10; #include &quot;nsIInputStream.h&quot;&#10; #include &quot;nsNetCID.h&quot;&#10; #include &quot;nsDependentString.h&quot;&#10;+#include &quot;nsAutoPtr.h&quot;&#10;+#include &quot;nsNetUtil.h&quot;&#10; &#10; #include &quot;jsapi.h&quot;&#10; &#10; /* load() error msgs, XXX localize? */&#10; #define LOAD_ERROR_NOSERVICE &quot;Error creating IO Service.&quot;&#10;-#define LOAD_ERROR_NOCHANNEL &quot;Error creating channel (invalid URL scheme?)&quot;&#10;+#define LOAD_ERROR_NOURI &quot;Error creating URI (invalid URL scheme?)&quot;&#10;+#define LOAD_ERROR_NOSCHEME &quot;Failed to get URI scheme.  This is bad.&quot;&#10;+#define LOAD_ERROR_URI_NOT_CHROME &quot;Trying to load a non-chrome URI.&quot;&#10; #define LOAD_ERROR_NOSTREAM  &quot;Error opening input stream (invalid filename?)&quot;&#10; #define LOAD_ERROR_NOCONTENT &quot;ContentLength not available (not a local URL?)&quot;&#10; #define LOAD_ERROR_BADREAD   &quot;File Read Error.&quot;&#10; #define LOAD_ERROR_READUNDERFLOW &quot;File Read Error (underflow.)&quot;&#10;+#define LOAD_ERROR_NOPRINCIPALS &quot;Failed to get principals.&quot;&#10;+#define LOAD_ERROR_NOSPEC &quot;Failed to get URI spec.  This is bad.&quot;&#10; &#10; // We just use the same reporter as the component loader&#10; extern void JS_DLL_CALLBACK&#10;@@ -207,7 +213,7 @@ mozJSSubScriptLoader::LoadSubScript (const PRUnichar * /*url*/&#10;     PRInt32   len = -1;&#10;     PRUint32  readcount = 0;  // Total amount of data read&#10;     PRUint32  lastReadCount = 0;  // Amount of data read in last Read() call&#10;-    char     *buf = nsnull;&#10;+    nsAutoArrayPtr&lt;char&gt; buf;&#10;     &#10;     JSString        *errmsg;&#10;     JSErrorReporter  er;&#10;@@ -215,6 +221,9 @@ mozJSSubScriptLoader::LoadSubScript (const PRUnichar * /*url*/&#10;     &#10;     nsCOMPtr&lt;nsIChannel&gt;     chan;&#10;     nsCOMPtr&lt;nsIInputStream&gt; instream;&#10;+    nsCOMPtr&lt;nsIURI&gt; uri;&#10;+    nsCAutoString uriStr;&#10;+    nsCAutoString scheme;&#10; &#10;     nsCOMPtr&lt;nsIIOService&gt; serv = do_GetService(NS_IOSERVICE_CONTRACTID);&#10;     if (!serv)&#10;@@ -223,15 +232,27 @@ mozJSSubScriptLoader::LoadSubScript (const PRUnichar * /*url*/&#10;         goto return_exception;&#10;     }&#10; &#10;-    rv = serv-&gt;NewChannel(nsDependentCString(url), nsnull, static_cast&lt;nsIURI *&gt;(nsnull),&#10;-                          getter_AddRefs(chan));&#10;-    if (NS_FAILED(rv))&#10;-    {&#10;-        errmsg = JS_NewStringCopyZ (cx, LOAD_ERROR_NOCHANNEL);&#10;+    // Make sure to explicitly create the URI, since we'll need the&#10;+    // canonicalized spec.&#10;+    rv = NS_NewURI(getter_AddRefs(uri), url, nsnull, serv);&#10;+    if (NS_FAILED(rv)) {&#10;+        errmsg = JS_NewStringCopyZ (cx, LOAD_ERROR_NOURI);&#10;         goto return_exception;&#10;     }&#10; &#10;-    rv = chan-&gt;Open (getter_AddRefs(instream));&#10;+    rv = uri-&gt;GetScheme(scheme);&#10;+    if (NS_FAILED(rv)) {&#10;+        errmsg = JS_NewStringCopyZ (cx, LOAD_ERROR_NOSCHEME);&#10;+        goto return_exception;&#10;+    }&#10;+    if (!scheme.EqualsLiteral(&quot;chrome&quot;)) {&#10;+        errmsg = JS_NewStringCopyZ (cx, LOAD_ERROR_URI_NOT_CHROME);&#10;+        goto return_exception;&#10;+    }        &#10;+        &#10;+    rv = NS_OpenURI(getter_AddRefs(instream), uri, serv,&#10;+                    nsnull, nsnull, nsIRequest::LOAD_NORMAL,&#10;+                    getter_AddRefs(chan));&#10;     if (NS_FAILED(rv))&#10;     {&#10;         errmsg = JS_NewStringCopyZ (cx, LOAD_ERROR_NOSTREAM);&#10;@@ -271,34 +292,35 @@ mozJSSubScriptLoader::LoadSubScript (const PRUnichar * /*url*/&#10;      * destructor */&#10;     rv = mSystemPrincipal-&gt;GetJSPrincipals(cx, &amp;jsPrincipals);&#10;     if (NS_FAILED(rv) || !jsPrincipals) {&#10;-        delete[] buf;&#10;-        return rv;&#10;+        errmsg = JS_NewStringCopyZ (cx, LOAD_ERROR_NOPRINCIPALS);&#10;+        goto return_exception;&#10;     }&#10; &#10;+    rv = uri-&gt;GetSpec(uriStr);&#10;+    if (NS_FAILED(rv)) {&#10;+        errmsg = JS_NewStringCopyZ (cx, LOAD_ERROR_NOSPEC);&#10;+        goto return_exception;&#10;+    }    &#10;+&#10;     /* set our own error reporter so we can report any bad things as catchable&#10;      * exceptions, including the source/line number */&#10;     er = JS_SetErrorReporter (cx, mozJSLoaderErrorReporter);&#10; &#10;     ok = JS_EvaluateScriptForPrincipals (cx, target_obj, jsPrincipals,&#10;-                                         buf, len, url, 1, rval);        &#10;+                                         buf, len, uriStr.get(), 1, rval);        &#10;     /* repent for our evil deeds */&#10;     JS_SetErrorReporter (cx, er);&#10; &#10;     cc-&gt;SetExceptionWasThrown (!ok);&#10;     cc-&gt;SetReturnValueWasSet (ok);&#10; &#10;-    delete[] buf;&#10;     JSPRINCIPALS_DROP(cx, jsPrincipals);&#10;     return NS_OK;&#10; &#10;  return_exception:&#10;-    if (buf)&#10;-        delete[] buf;&#10;-&#10;     JS_SetPendingException (cx, STRING_TO_JSVAL(errmsg));&#10;     cc-&gt;SetExceptionWasThrown (JS_TRUE);&#10;     return NS_OK;&#10;-&#10; }&#10; &#10; #endif /* NO_SUBSCRIPT_LOADER */&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s69"><Data ss:Type="String">Author: jst%mozilla.org &lt;jst%mozilla.org&gt;  2008-03-21 13:07:25     Followup fix for bug 418356. Re-enable loading file:// URIs using the subscript loader. r+sr=bzbarsky@mit.edu&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/xpconnect/loader/mozJSSubScriptLoader.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 78540d3..632fe32 100644&#10;@@ -54,14 +54,17 @@&#10; #include &quot;nsDependentString.h&quot;&#10; #include &quot;nsAutoPtr.h&quot;&#10; #include &quot;nsNetUtil.h&quot;&#10;+#include &quot;nsIProtocolHandler.h&quot;&#10;+#include &quot;nsIFileURL.h&quot;&#10; &#10; #include &quot;jsapi.h&quot;&#10;+#include &quot;jsdbgapi.h&quot;&#10; &#10; /* load() error msgs, XXX localize? */&#10; #define LOAD_ERROR_NOSERVICE &quot;Error creating IO Service.&quot;&#10; #define LOAD_ERROR_NOURI &quot;Error creating URI (invalid URL scheme?)&quot;&#10; #define LOAD_ERROR_NOSCHEME &quot;Failed to get URI scheme.  This is bad.&quot;&#10;-#define LOAD_ERROR_URI_NOT_CHROME &quot;Trying to load a non-chrome URI.&quot;&#10;+#define LOAD_ERROR_URI_NOT_LOCAL &quot;Trying to load a non-local URI.&quot;&#10; #define LOAD_ERROR_NOSTREAM  &quot;Error opening input stream (invalid filename?)&quot;&#10; #define LOAD_ERROR_NOCONTENT &quot;ContentLength not available (not a local URL?)&quot;&#10; #define LOAD_ERROR_BADREAD   &quot;File Read Error.&quot;&#10;@@ -139,11 +142,10 @@ mozJSSubScriptLoader::LoadSubScript (const PRUnichar * /*url*/&#10;         rv = secman-&gt;GetSystemPrincipal(getter_AddRefs(mSystemPrincipal));&#10;         if (NS_FAILED(rv) || !mSystemPrincipal)&#10;             return rv;&#10;-&#10;     }&#10; &#10;     JSAutoRequest ar(cx);&#10;-    &#10;+&#10;     char     *url;&#10;     JSObject *target_obj = nsnull;&#10;     ok = JS_ConvertArguments (cx, argc, argv, &quot;s / o&quot;, &amp;url, &amp;target_obj);&#10;@@ -153,7 +155,7 @@ mozJSSubScriptLoader::LoadSubScript (const PRUnichar * /*url*/&#10;         /* let the exception raised by JS_ConvertArguments show through */&#10;         return NS_OK;&#10;     }&#10;-    &#10;+&#10;     if (!target_obj)&#10;     {&#10;         /* if the user didn't provide an object to eval onto, find the global&#10;@@ -225,6 +227,25 @@ mozJSSubScriptLoader::LoadSubScript (const PRUnichar * /*url*/&#10;     nsCAutoString uriStr;&#10;     nsCAutoString scheme;&#10; &#10;+    JSStackFrame* frame = nsnull;&#10;+    JSScript* script = nsnull;&#10;+&#10;+    // Figure out who's calling us&#10;+    do&#10;+    {&#10;+        frame = JS_FrameIterator(cx, &amp;frame);&#10;+&#10;+        if (frame)&#10;+            script = JS_GetFrameScript(cx, frame);&#10;+    } while (frame &amp;&amp; !script);&#10;+&#10;+    if (!script)&#10;+    {&#10;+        // No script means we don't know who's calling, bail.&#10;+&#10;+        return NS_ERROR_FAILURE;&#10;+    }&#10;+&#10;     nsCOMPtr&lt;nsIIOService&gt; serv = do_GetService(NS_IOSERVICE_CONTRACTID);&#10;     if (!serv)&#10;     {&#10;@@ -240,14 +261,36 @@ mozJSSubScriptLoader::LoadSubScript (const PRUnichar * /*url*/&#10;         goto return_exception;&#10;     }&#10; &#10;-    rv = uri-&gt;GetScheme(scheme);&#10;+    rv = uri-&gt;GetSpec(uriStr);&#10;     if (NS_FAILED(rv)) {&#10;+        errmsg = JS_NewStringCopyZ (cx, LOAD_ERROR_NOSPEC);&#10;+        goto return_exception;&#10;+    }    &#10;+&#10;+    rv = uri-&gt;GetScheme(scheme);&#10;+    if (NS_FAILED(rv))&#10;+    {&#10;         errmsg = JS_NewStringCopyZ (cx, LOAD_ERROR_NOSCHEME);&#10;         goto return_exception;&#10;     }&#10;-    if (!scheme.EqualsLiteral(&quot;chrome&quot;)) {&#10;-        errmsg = JS_NewStringCopyZ (cx, LOAD_ERROR_URI_NOT_CHROME);&#10;-        goto return_exception;&#10;+&#10;+    if (!scheme.EqualsLiteral(&quot;chrome&quot;))&#10;+    {&#10;+        // This might be a URI to a local file, though!&#10;+        nsCOMPtr&lt;nsIFileURL&gt; fileURL = do_QueryInterface(uri);&#10;+        if (!fileURL)&#10;+        {&#10;+            errmsg = JS_NewStringCopyZ (cx, LOAD_ERROR_URI_NOT_LOCAL);&#10;+            goto return_exception;&#10;+        }&#10;+&#10;+        // For file URIs prepend the filename with the filename of the&#10;+        // calling script, and &quot; -&gt; &quot;. See bug 418356.&#10;+        nsCAutoString tmp(JS_GetScriptFilename(cx, script));&#10;+        tmp.AppendLiteral(&quot; -&gt; &quot;);&#10;+        tmp.Append(uriStr);&#10;+&#10;+        uriStr = tmp;&#10;     }        &#10;         &#10;     rv = NS_OpenURI(getter_AddRefs(instream), uri, serv,&#10;@@ -296,12 +339,6 @@ mozJSSubScriptLoader::LoadSubScript (const PRUnichar * /*url*/&#10;         goto return_exception;&#10;     }&#10; &#10;-    rv = uri-&gt;GetSpec(uriStr);&#10;-    if (NS_FAILED(rv)) {&#10;-        errmsg = JS_NewStringCopyZ (cx, LOAD_ERROR_NOSPEC);&#10;-        goto return_exception;&#10;-    }    &#10;-&#10;     /* set our own error reporter so we can report any bad things as catchable&#10;      * exceptions, including the source/line number */&#10;     er = JS_SetErrorReporter (cx, mozJSLoaderErrorReporter);&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">419848</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: jst@mozilla.org &lt;jst@mozilla.org&gt;  2008-03-04 12:17:33     Fixing bug 419848. Tighten rules about what JS files content can load. r+sr=jonas@sicking.cc&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/base/src/nsScriptLoader.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index f7caf28..2358ddf 100644&#10;@@ -427,8 +427,7 @@ nsScriptLoader::ProcessScriptElement(nsIScriptElement *aElement)&#10;   if (scriptURI) {&#10;     // Check that the containing page is allowed to load this URI.&#10;     rv = nsContentUtils::GetSecurityManager()-&gt;&#10;-      CheckLoadURIWithPrincipal(mDocument-&gt;NodePrincipal(), scriptURI,&#10;-                                nsIScriptSecurityManager::ALLOW_CHROME);&#10;+      CheckLoadURIWithPrincipal(mDocument-&gt;NodePrincipal(), scriptURI, 0);&#10; &#10;     NS_ENSURE_SUCCESS(rv, rv);&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xml/document/src/nsXMLContentSink.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index dd058b5..58d0dd5 100644&#10;@@ -767,8 +767,7 @@ nsXMLContentSink::ProcessStyleLink(nsIContent* aElement,&#10;     // Do security check&#10;     nsIScriptSecurityManager *secMan = nsContentUtils::GetSecurityManager();&#10;     rv = secMan-&gt;&#10;-      CheckLoadURIWithPrincipal(mDocument-&gt;NodePrincipal(), url,&#10;-                                nsIScriptSecurityManager::ALLOW_CHROME);&#10;+      CheckLoadURIWithPrincipal(mDocument-&gt;NodePrincipal(), url, 0);&#10;     NS_ENSURE_SUCCESS(rv, NS_OK);&#10; &#10;     // Do content policy check&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xul/document/src/nsXULContentSink.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 48d257b..dc7b0f7 100644&#10;@@ -1158,8 +1158,7 @@ XULContentSinkImpl::OpenScript(const PRUnichar** aAttributes,&#10;                   if (NS_SUCCEEDED(rv)) {&#10;                       rv = mSecMan-&gt;&#10;                           CheckLoadURIWithPrincipal(doc-&gt;NodePrincipal(),&#10;-                                                    script-&gt;mSrcURI,&#10;-                                                    nsIScriptSecurityManager::ALLOW_CHROME);&#10;+                                                    script-&gt;mSrcURI, 0);&#10;                   }&#10;               }&#10;           }&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: jst@mozilla.org &lt;jst@mozilla.org&gt;  2008-03-04 13:39:09     Backing out fix for bug 419848 due to feed code breakage.&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/base/src/nsScriptLoader.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 2358ddf..f7caf28 100644&#10;@@ -427,7 +427,8 @@ nsScriptLoader::ProcessScriptElement(nsIScriptElement *aElement)&#10;   if (scriptURI) {&#10;     // Check that the containing page is allowed to load this URI.&#10;     rv = nsContentUtils::GetSecurityManager()-&gt;&#10;-      CheckLoadURIWithPrincipal(mDocument-&gt;NodePrincipal(), scriptURI, 0);&#10;+      CheckLoadURIWithPrincipal(mDocument-&gt;NodePrincipal(), scriptURI,&#10;+                                nsIScriptSecurityManager::ALLOW_CHROME);&#10; &#10;     NS_ENSURE_SUCCESS(rv, rv);&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xml/document/src/nsXMLContentSink.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 58d0dd5..dd058b5 100644&#10;@@ -767,7 +767,8 @@ nsXMLContentSink::ProcessStyleLink(nsIContent* aElement,&#10;     // Do security check&#10;     nsIScriptSecurityManager *secMan = nsContentUtils::GetSecurityManager();&#10;     rv = secMan-&gt;&#10;-      CheckLoadURIWithPrincipal(mDocument-&gt;NodePrincipal(), url, 0);&#10;+      CheckLoadURIWithPrincipal(mDocument-&gt;NodePrincipal(), url,&#10;+                                nsIScriptSecurityManager::ALLOW_CHROME);&#10;     NS_ENSURE_SUCCESS(rv, NS_OK);&#10; &#10;     // Do content policy check&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xul/document/src/nsXULContentSink.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index dc7b0f7..48d257b 100644&#10;@@ -1158,7 +1158,8 @@ XULContentSinkImpl::OpenScript(const PRUnichar** aAttributes,&#10;                   if (NS_SUCCEEDED(rv)) {&#10;                       rv = mSecMan-&gt;&#10;                           CheckLoadURIWithPrincipal(doc-&gt;NodePrincipal(),&#10;-                                                    script-&gt;mSrcURI, 0);&#10;+                                                    script-&gt;mSrcURI,&#10;+                                                    nsIScriptSecurityManager::ALLOW_CHROME);&#10;                   }&#10;               }&#10;           }&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s69"><Data ss:Type="String">Author: mrbkap@gmail.com &lt;mrbkap@gmail.com&gt;  2008-03-07 06:52:58     Don't assume that chrome:// implies system principals. bug 419848, r=brendan sr=jst&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/src/base/nsJSTimeoutHandler.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index ffa2579..03fe368 100644&#10;@@ -254,17 +254,12 @@ nsJSScriptTimeoutHandler::Init(nsGlobalWindow *aWindow, PRBool *aIsInterval,&#10;     mExpr = expr;&#10; &#10;     nsIPrincipal *prin = aWindow-&gt;GetPrincipal();&#10;-    JSPrincipals *jsprins;&#10;-    rv = prin-&gt;GetJSPrincipals(cx, &amp;jsprins);&#10;-    NS_ENSURE_SUCCESS(rv, rv);&#10; &#10;     // Get the calling location.&#10;     const char *filename;&#10;-    if (nsJSUtils::GetCallingLocation(cx, &amp;filename, &amp;mLineNo, jsprins)) {&#10;+    if (nsJSUtils::GetCallingLocation(cx, &amp;filename, &amp;mLineNo, prin)) {&#10;       mFileName.Assign(filename);&#10;     }&#10;-&#10;-    JSPRINCIPALS_DROP(cx, jsprins);&#10;   } else if (funobj) {&#10;     rv = NS_HOLD_JS_OBJECTS(this, nsJSScriptTimeoutHandler);&#10;     NS_ENSURE_SUCCESS(rv, rv);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/src/base/nsJSUtils.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 7da71a8..068cf4c 100644&#10;@@ -62,7 +62,7 @@&#10; &#10; JSBool&#10; nsJSUtils::GetCallingLocation(JSContext* aContext, const char* *aFilename,&#10;-                              PRUint32* aLineno, JSPrincipals* aPrincipals)&#10;+                              PRUint32* aLineno, nsIPrincipal* aPrincipal)&#10; {&#10;   // Get the current filename and line number&#10;   JSStackFrame* frame = nsnull;&#10;@@ -78,32 +78,24 @@ nsJSUtils::GetCallingLocation(JSContext* aContext, const char* *aFilename,&#10;   if (script) {&#10;     // If aPrincipals is non-null then our caller is asking us to ensure&#10;     // that the filename we return does not have elevated privileges.&#10;-    if (aPrincipals) {&#10;-      // The principals might not be in the script, but we can always&#10;-      // find the right principals in the frame's callee.&#10;-      JSPrincipals* scriptPrins = JS_GetScriptPrincipals(aContext, script);&#10;-      if (!scriptPrins) {&#10;-        JSObject *callee = JS_GetFrameCalleeObject(aContext, frame);&#10;-        nsCOMPtr&lt;nsIPrincipal&gt; prin;&#10;+    if (aPrincipal) {&#10;+      uint32 flags = JS_GetScriptFilenameFlags(script);&#10;+&#10;+      // Use the principal for the filename if it shouldn't be receiving&#10;+      // implicit XPCNativeWrappers.&#10;+      PRBool system;&#10;+      if (flags &amp; JSFILENAME_PROTECTED) {&#10;         nsIScriptSecurityManager *ssm = nsContentUtils::GetSecurityManager();&#10;-        if (NS_FAILED(ssm-&gt;GetObjectPrincipal(aContext, callee,&#10;-                                              getter_AddRefs(prin))) ||&#10;-            !prin) {&#10;-          return JS_FALSE;&#10;-        }&#10; &#10;-        prin-&gt;GetJSPrincipals(aContext, &amp;scriptPrins);&#10;+        if (NS_FAILED(ssm-&gt;IsSystemPrincipal(aPrincipal, &amp;system)) || !system) {&#10;+          JSPrincipals* jsprins;&#10;+          aPrincipal-&gt;GetJSPrincipals(aContext, &amp;jsprins);&#10; &#10;-        // The script has a reference to the principals.&#10;-        JSPRINCIPALS_DROP(aContext, scriptPrins);&#10;-      }&#10;-&#10;-      // Return the weaker of the two principals if they differ.&#10;-      if (scriptPrins != aPrincipals &amp;&amp;&#10;-          scriptPrins-&gt;subsume(scriptPrins, aPrincipals)) {&#10;-        *aFilename = aPrincipals-&gt;codebase;&#10;-        *aLineno = 0;&#10;-        return JS_TRUE;&#10;+          *aFilename = jsprins-&gt;codebase;&#10;+          *aLineno = 0;&#10;+          JSPRINCIPALS_DROP(aContext, jsprins);&#10;+          return JS_TRUE;&#10;+        }&#10;       }&#10;     }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/src/base/nsJSUtils.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index faacd0e..9c3d990 100644&#10;@@ -52,12 +52,13 @@&#10; class nsIDOMEventListener;&#10; class nsIScriptContext;&#10; class nsIScriptGlobalObject;&#10;+class nsIPrincipal;&#10; &#10; class nsJSUtils&#10; {&#10; public:&#10;   static JSBool GetCallingLocation(JSContext* aContext, const char* *aFilename,&#10;-                                   PRUint32* aLineno, JSPrincipals* aPrincipals);&#10;+                                   PRUint32* aLineno, nsIPrincipal* aPrincipal);&#10; &#10;   static jsval ConvertStringToJSVal(const nsString&amp; aProp,&#10;                                     JSContext* aContext);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsfun.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index a584e62..072aba0 100644&#10;@@ -1758,13 +1758,7 @@ Function(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)&#10;     caller = JS_GetScriptedCaller(cx, fp);&#10;     if (caller) {&#10;         principals = JS_EvalFramePrincipals(cx, fp, caller);&#10;-        if (principals == caller-&gt;script-&gt;principals) {&#10;-            filename = caller-&gt;script-&gt;filename;&#10;-            lineno = js_PCToLineNumber(cx, caller-&gt;script, caller-&gt;pc);&#10;-        } else {&#10;-            filename = principals-&gt;codebase;&#10;-            lineno = 0;&#10;-        }&#10;+        filename = js_ComputeFilename(cx, caller, principals, &amp;lineno);&#10;     } else {&#10;         filename = NULL;&#10;         lineno = 0;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 5909075..22ccb2f9 100644&#10;@@ -1133,6 +1133,23 @@ bad:&#10;     return NULL;&#10; }&#10; &#10;+const char *&#10;+js_ComputeFilename(JSContext *cx, JSStackFrame *caller,&#10;+                   JSPrincipals *principals, uintN *linenop)&#10;+{&#10;+    uint32 flags;&#10;+&#10;+    flags = JS_GetScriptFilenameFlags(caller-&gt;script);&#10;+    if ((flags &amp; JSFILENAME_PROTECTED) &amp;&amp;&#10;+        strcmp(principals-&gt;codebase, &quot;[System Principal]&quot;)) {&#10;+        *linenop = 0;&#10;+        return principals-&gt;codebase;&#10;+    }&#10;+&#10;+    *linenop = js_PCToLineNumber(cx, caller-&gt;script, caller-&gt;pc);&#10;+    return caller-&gt;script-&gt;filename;&#10;+}&#10;+&#10; static JSBool&#10; obj_eval(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)&#10; {&#10;@@ -1271,13 +1288,7 @@ obj_eval(JSContext *cx, JSObject *obj, uintN argc, jsval *argv, jsval *rval)&#10;     str = JSVAL_TO_STRING(argv[0]);&#10;     if (caller) {&#10;         principals = JS_EvalFramePrincipals(cx, fp, caller);&#10;-        if (principals == caller-&gt;script-&gt;principals) {&#10;-            file = caller-&gt;script-&gt;filename;&#10;-            line = js_PCToLineNumber(cx, caller-&gt;script, caller-&gt;pc);&#10;-        } else {&#10;-            file = principals-&gt;codebase;&#10;-            line = 0;&#10;-        }&#10;+        file = js_ComputeFilename(cx, caller, principals, &amp;line);&#10;     } else {&#10;         file = NULL;&#10;         line = 0;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsobj.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index ba7506e..c9d4113 100644&#10;@@ -699,6 +699,10 @@ js_CheckPrincipalsAccess(JSContext *cx, JSObject *scopeobj,&#10; extern JSObject *&#10; js_GetWrappedObject(JSContext *cx, JSObject *obj);&#10; &#10;+/* NB: Infallible. */&#10;+extern const char *&#10;+js_ComputeFilename(JSContext *cx, JSStackFrame *caller,&#10;+                   JSPrincipals *principals, uintN *linenop);&#10; JS_END_EXTERN_C&#10; &#10; #endif /* jsobj_h___ */&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/jsscript.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 7dc9dbc..54f0589 100644&#10;@@ -241,9 +241,8 @@ script_compile_sub(JSContext *cx, JSObject *obj, uintN argc, jsval *argv,&#10;             fp-&gt;scopeChain = scopeobj;  /* for the compiler's benefit */&#10;         }&#10; &#10;-        file = caller-&gt;script-&gt;filename;&#10;-        line = js_PCToLineNumber(cx, caller-&gt;script, caller-&gt;pc);&#10;         principals = JS_EvalFramePrincipals(cx, fp, caller);&#10;+        file = js_ComputeFilename(cx, caller, principals, &amp;line);&#10;     } else {&#10;         file = NULL;&#10;         line = 0;&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">441169</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: reed%reedloden.com &lt;reed%reedloden.com&gt;  2008-07-01 14:07:38     Bug 441169 - [p=johnath@mozilla.com (Johnathan Nightingale [johnath]) r=bzbarsky sr=dveditz a=beltzner]&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- docshell/resources/content/netError.xhtml &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 7409ed4..5d59289 100644&#10;@@ -214,8 +214,34 @@&#10;       function addDomainErrorLink() {&#10;         // Rather than textContent, we need to treat description as HTML&#10;         var sd = document.getElementById(&quot;errorShortDescText&quot;);&#10;-        if (sd)&#10;-          sd.innerHTML = getDescription();&#10;+        if (sd) {&#10;+          var desc = getDescription();&#10;+          &#10;+          // sanitize description text - see bug 441169&#10;+          &#10;+          // First, find the index of the &lt;a&gt; tag we care about, being careful not to&#10;+          // use an over-greedy regex&#10;+          var re = /&lt;a id=&quot;cert_domain_link&quot; title=&quot;([^&quot;]+)&quot;&gt;/;&#10;+          var result = re.exec(desc);&#10;+          if(!result)&#10;+            return;&#10;+          &#10;+          // Remove sd's existing children&#10;+          sd.textContent = &quot;&quot;;&#10;+&#10;+          // Everything up to the link should be text content&#10;+          sd.appendChild(document.createTextNode(desc.slice(0, result.index)));&#10;+          &#10;+          // Now create the link itself&#10;+          var anchorEl = document.createElement(&quot;a&quot;);&#10;+          anchorEl.setAttribute(&quot;id&quot;, &quot;cert_domain_link&quot;);&#10;+          anchorEl.setAttribute(&quot;title&quot;, result[1]);&#10;+          anchorEl.appendChild(document.createTextNode(result[1]));&#10;+          sd.appendChild(anchorEl);&#10;+          &#10;+          // Finally, append text for anything after the closing &lt;/a&gt;&#10;+          sd.appendChild(document.createTextNode(desc.slice(desc.indexOf(&quot;&lt;/a&gt;&quot;) + &quot;&lt;/a&gt;&quot;.length)));&#10;+        }&#10; &#10;         var link = document.getElementById('cert_domain_link');&#10;         if (!link)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- docshell/test/browser/Makefile.in &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 06ddbc2..120614a 100644&#10;@@ -47,6 +47,7 @@ _BROWSER_TEST_FILES = \&#10;   browser_bug349769.js \&#10;   browser_bug388121-1.js \&#10;   browser_bug388121-2.js \&#10;+  browser_bug441169.js \&#10;   $(NULL)&#10; &#10; # the tests below use FUEL, which is a Firefox-specific feature&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- docshell/test/browser/browser_bug441169.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..6a7be2b&#10;@@ -0,0 +1,26 @@&#10;+/* Make sure that netError won't allow HTML injection through badcert parameters.  See bug 441169. */&#10;+var newBrowser&#10;+&#10;+// An edited version of the standard neterror url which attempts to&#10;+// insert a &lt;span id=&quot;test_span&quot;&gt; tag into the text.  We will navigate to this page&#10;+// and ensure that the span tag is not parsed as HTML.&#10;+var chromeURL = &quot;about:neterror?e=nssBadCert&amp;u=https%3A//test.kuix.de/&amp;c=UTF-8&amp;d=This%20sentence%20should%20not%20be%20parsed%20to%20include%20a%20%3Cspan%20id=%22test_span%22%3Enamed%3C/span%3E%20span%20tag.%0A%0AThe%20certificate%20is%20only%20valid%20for%20%3Ca%20id=%22cert_domain_link%22%20title=%22kuix.de%22%3Ekuix.de%3C/a%3E%0A%0A(Error%20code%3A%20ssl_error_bad_cert_domain)&quot;;&#10;+&#10;+function test() {&#10;+  waitForExplicitFinish();&#10;+  &#10;+  var newTab = gBrowser.addTab();&#10;+  gBrowser.selectedTab = newTab;&#10;+  newBrowser = gBrowser.getBrowserForTab(newTab);&#10;+  &#10;+  window.addEventListener(&quot;DOMContentLoaded&quot;, checkPage, false);&#10;+  newBrowser.contentWindow.location = chromeURL;&#10;+}&#10;+&#10;+function checkPage() {&#10;+  &#10;+  is(newBrowser.contentDocument.getElementById(&quot;test_span&quot;), null, &quot;Error message should not be parsed as HTML, and hence shouldn't include the 'test_span' element.&quot;);&#10;+  &#10;+  gBrowser.removeCurrentTab();&#10;+  finish();&#10;+}&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s69"><Data ss:Type="String">Author: Johnathan Nightingale [johnath] &lt;johnath@mozilla.com&gt;  2008-07-12 18:22:34     Bug 441169 - [r=bzbarsky sr=dveditz]&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- docshell/resources/content/netError.xhtml &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 7409ed4..5d59289 100644&#10;@@ -214,8 +214,34 @@&#10;       function addDomainErrorLink() {&#10;         // Rather than textContent, we need to treat description as HTML&#10;         var sd = document.getElementById(&quot;errorShortDescText&quot;);&#10;-        if (sd)&#10;-          sd.innerHTML = getDescription();&#10;+        if (sd) {&#10;+          var desc = getDescription();&#10;+          &#10;+          // sanitize description text - see bug 441169&#10;+          &#10;+          // First, find the index of the &lt;a&gt; tag we care about, being careful not to&#10;+          // use an over-greedy regex&#10;+          var re = /&lt;a id=&quot;cert_domain_link&quot; title=&quot;([^&quot;]+)&quot;&gt;/;&#10;+          var result = re.exec(desc);&#10;+          if(!result)&#10;+            return;&#10;+          &#10;+          // Remove sd's existing children&#10;+          sd.textContent = &quot;&quot;;&#10;+&#10;+          // Everything up to the link should be text content&#10;+          sd.appendChild(document.createTextNode(desc.slice(0, result.index)));&#10;+          &#10;+          // Now create the link itself&#10;+          var anchorEl = document.createElement(&quot;a&quot;);&#10;+          anchorEl.setAttribute(&quot;id&quot;, &quot;cert_domain_link&quot;);&#10;+          anchorEl.setAttribute(&quot;title&quot;, result[1]);&#10;+          anchorEl.appendChild(document.createTextNode(result[1]));&#10;+          sd.appendChild(anchorEl);&#10;+          &#10;+          // Finally, append text for anything after the closing &lt;/a&gt;&#10;+          sd.appendChild(document.createTextNode(desc.slice(desc.indexOf(&quot;&lt;/a&gt;&quot;) + &quot;&lt;/a&gt;&quot;.length)));&#10;+        }&#10; &#10;         var link = document.getElementById('cert_domain_link');&#10;         if (!link)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- docshell/test/browser/Makefile.in &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 06ddbc2..120614a 100644&#10;@@ -47,6 +47,7 @@ _BROWSER_TEST_FILES = \&#10;   browser_bug349769.js \&#10;   browser_bug388121-1.js \&#10;   browser_bug388121-2.js \&#10;+  browser_bug441169.js \&#10;   $(NULL)&#10; &#10; # the tests below use FUEL, which is a Firefox-specific feature&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- docshell/test/browser/browser_bug441169.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..6a7be2b&#10;@@ -0,0 +1,26 @@&#10;+/* Make sure that netError won't allow HTML injection through badcert parameters.  See bug 441169. */&#10;+var newBrowser&#10;+&#10;+// An edited version of the standard neterror url which attempts to&#10;+// insert a &lt;span id=&quot;test_span&quot;&gt; tag into the text.  We will navigate to this page&#10;+// and ensure that the span tag is not parsed as HTML.&#10;+var chromeURL = &quot;about:neterror?e=nssBadCert&amp;u=https%3A//test.kuix.de/&amp;c=UTF-8&amp;d=This%20sentence%20should%20not%20be%20parsed%20to%20include%20a%20%3Cspan%20id=%22test_span%22%3Enamed%3C/span%3E%20span%20tag.%0A%0AThe%20certificate%20is%20only%20valid%20for%20%3Ca%20id=%22cert_domain_link%22%20title=%22kuix.de%22%3Ekuix.de%3C/a%3E%0A%0A(Error%20code%3A%20ssl_error_bad_cert_domain)&quot;;&#10;+&#10;+function test() {&#10;+  waitForExplicitFinish();&#10;+  &#10;+  var newTab = gBrowser.addTab();&#10;+  gBrowser.selectedTab = newTab;&#10;+  newBrowser = gBrowser.getBrowserForTab(newTab);&#10;+  &#10;+  window.addEventListener(&quot;DOMContentLoaded&quot;, checkPage, false);&#10;+  newBrowser.contentWindow.location = chromeURL;&#10;+}&#10;+&#10;+function checkPage() {&#10;+  &#10;+  is(newBrowser.contentDocument.getElementById(&quot;test_span&quot;), null, &quot;Error message should not be parsed as HTML, and hence shouldn't include the 'test_span' element.&quot;);&#10;+  &#10;+  gBrowser.removeCurrentTab();&#10;+  finish();&#10;+}&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">441751</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Dave Camp &lt;dcamp@mozilla.com&gt;  2008-12-09 11:24:33      Bug 441751: Fix up LOAD_ONLY_FROM_CACHE.  r+sr=bz&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/src/base/nsGlobalWindow.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e8971ba..e26cd4b 100644&#10;@@ -9401,7 +9401,8 @@ nsNavigator::MozIsLocallyAvailable(const nsAString &amp;aURI,&#10; &#10;   if (aWhenOffline) {&#10;     loadFlags |= nsICachingChannel::LOAD_CHECK_OFFLINE_CACHE |&#10;-                 nsICachingChannel::LOAD_ONLY_FROM_CACHE;&#10;+                 nsICachingChannel::LOAD_ONLY_FROM_CACHE |&#10;+                 nsIRequest::LOAD_FROM_CACHE;&#10;   }&#10; &#10;   nsCOMPtr&lt;nsIChannel&gt; channel;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/protocol/http/src/nsHttpChannel.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 6ec636c..415353f 100644&#10;@@ -1543,7 +1543,7 @@ nsHttpChannel::OpenCacheEntry(PRBool offline, PRBool *delayed)&#10; &#10;     // Set the desired cache access mode accordingly...&#10;     nsCacheAccessMode accessRequested;&#10;-    if (mLoadFlags &amp; (LOAD_ONLY_FROM_CACHE | INHIBIT_CACHING)) {&#10;+    if (offline || (mLoadFlags &amp; INHIBIT_CACHING)) {&#10;         // If we have been asked to bypass the cache and not write to the&#10;         // cache, then don't use the cache at all.  Unless we're actually&#10;         // offline, which takes precedence over BYPASS_LOCAL_CACHE.&#10;@@ -1914,12 +1914,11 @@ nsHttpChannel::CheckCache()&#10;     NS_ENSURE_SUCCESS(rv, rv);&#10;     buf.Adopt(0);&#10; &#10;-    // Don't bother to validate LOAD_ONLY_FROM_CACHE items.&#10;     // Don't bother to validate items that are read-only,&#10;     // unless they are read-only because of INHIBIT_CACHING or because&#10;     // we're updating the offline cache.&#10;     // Don't bother to validate if this is a fallback entry.&#10;-    if (mLoadFlags &amp; LOAD_ONLY_FROM_CACHE ||&#10;+    if (mLoadedFromApplicationCache ||&#10;         (mCacheAccess == nsICache::ACCESS_READ &amp;&amp;&#10;          !((mLoadFlags &amp; INHIBIT_CACHING) || mCacheForOfflineUse)) ||&#10;         mFallbackChannel) {&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/test/unit/test_cacheflags.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..c4fb42e&#10;@@ -0,0 +1,268 @@&#10;+do_import_script(&quot;netwerk/test/httpserver/httpd.js&quot;);&#10;+&#10;+var httpserver = null;&#10;+&#10;+// Need to randomize, because apparently no one clears our cache&#10;+var suffix = Math.random();&#10;+var httpBase = &quot;http://localhost:4444&quot;;&#10;+var httpsBase = &quot;http://localhost:4445&quot;;&#10;+var shortexpPath = &quot;/shortexp&quot; + suffix;&#10;+var longexpPath = &quot;/longexp&quot; + suffix;&#10;+var nocachePath = &quot;/nocache&quot; + suffix;&#10;+var nostorePath = &quot;/nostore&quot; + suffix;&#10;+&#10;+function make_channel(url, flags) {&#10;+  var ios = Cc[&quot;@mozilla.org/network/io-service;1&quot;].&#10;+    getService(Ci.nsIIOService);&#10;+  var req = ios.newChannel(url, null, null);&#10;+  req.loadFlags = flags;&#10;+  return req;&#10;+}&#10;+&#10;+function Test(path, flags, expectSuccess, readFromCache, hitServer) {&#10;+  this.path = path;&#10;+  this.flags = flags;&#10;+  this.expectSuccess = expectSuccess;&#10;+  this.readFromCache = readFromCache;&#10;+  this.hitServer = hitServer;&#10;+}&#10;+&#10;+Test.prototype = {&#10;+  flags: 0,&#10;+  expectSuccess: true,&#10;+  readFromCache: false,&#10;+  hitServer: true,&#10;+  _buffer: &quot;&quot;,&#10;+  _isFromCache: false,&#10;+&#10;+  QueryInterface: function(iid) {&#10;+    if (iid.equals(Components.interfaces.nsIStreamListener) ||&#10;+        iid.equals(Components.interfaces.nsIRequestObserver) ||&#10;+        iid.equals(Components.interfaces.nsISupports))&#10;+      return this;&#10;+    throw Components.results.NS_ERROR_NO_INTERFACE;&#10;+  },&#10;+&#10;+  onStartRequest: function(request, context) {&#10;+    var cachingChannel = request.QueryInterface(Ci.nsICachingChannel);&#10;+    this._isFromCache = request.isPending() &amp;&amp; cachingChannel.isFromCache();&#10;+  },&#10;+&#10;+  onDataAvailable: function(request, context, stream, offset, count) {&#10;+    this._buffer = this._buffer.concat(read_stream(stream, count));&#10;+  },&#10;+&#10;+  onStopRequest: function(request, context, status) {&#10;+    do_check_eq(Components.isSuccessCode(status), this.expectSuccess);&#10;+    do_check_eq(this._isFromCache, this.readFromCache);&#10;+    do_check_eq(gHitServer, this.hitServer);&#10;+&#10;+    do_timeout(0, &quot;run_next_test();&quot;);&#10;+  },&#10;+&#10;+  run: function() {&#10;+    dump(&quot;Running:&quot; +&#10;+         &quot;\n  &quot; + this.path +&#10;+         &quot;\n  &quot; + this.flags +&#10;+         &quot;\n  &quot; + this.expectSuccess +&#10;+         &quot;\n  &quot; + this.readFromCache +&#10;+         &quot;\n  &quot; + this.hitServer + &quot;\n&quot;);&#10;+    gHitServer = false;&#10;+    var channel = make_channel(this.path, this.flags);&#10;+    channel.asyncOpen(this, null);&#10;+  }&#10;+};&#10;+&#10;+var gHitServer = false;&#10;+&#10;+var gTests = [&#10;+  new Test(httpBase + shortexpPath, 0,&#10;+           true,   // expect success&#10;+           false,  // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + shortexpPath, 0,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + shortexpPath, Ci.nsIRequest.LOAD_BYPASS_CACHE,&#10;+           true,   // expect success&#10;+           false,  // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + shortexpPath, Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE,&#10;+           false,  // expect success&#10;+           false,  // read from cache&#10;+           false), // hit server&#10;+  new Test(httpBase + shortexpPath,&#10;+           Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE |&#10;+           Ci.nsIRequest.VALIDATE_NEVER,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+  new Test(httpBase + shortexpPath, Ci.nsIRequest.LOAD_FROM_CACHE,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+&#10;+  new Test(httpBase + longexpPath, 0,&#10;+           true,   // expect success&#10;+           false,  // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + longexpPath, 0,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+  new Test(httpBase + longexpPath, Ci.nsIRequest.LOAD_BYPASS_CACHE,&#10;+           true,   // expect success&#10;+           false,  // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + longexpPath,&#10;+           Ci.nsIRequest.VALIDATE_ALWAYS,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + longexpPath, Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+  new Test(httpBase + longexpPath,&#10;+           Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE |&#10;+           Ci.nsIRequest.VALIDATE_NEVER,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+  new Test(httpBase + longexpPath,&#10;+           Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE |&#10;+           Ci.nsIRequest.VALIDATE_ALWAYS,&#10;+           false,  // expect success&#10;+           false,  // read from cache&#10;+           false), // hit server&#10;+  new Test(httpBase + longexpPath, Ci.nsIRequest.LOAD_FROM_CACHE,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+&#10;+  new Test(httpBase + nocachePath, 0,&#10;+           true,   // expect success&#10;+           false,  // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + nocachePath, 0,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + nocachePath, Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE,&#10;+           false,  // expect success&#10;+           false,  // read from cache&#10;+           false), // hit server&#10;+  new Test(httpBase + nocachePath, Ci.nsIRequest.LOAD_FROM_CACHE,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+  // LOAD_ONLY_FROM_CACHE would normally fail (because no-cache forces&#10;+  // a validation), but VALIDATE_NEVER should override that.&#10;+  new Test(httpBase + nocachePath,&#10;+           Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE |&#10;+           Ci.nsIRequest.VALIDATE_NEVER,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+&#10;+  // ... however, no-cache over ssl should act like no-store and force&#10;+  // a validation (and therefore failure) even if VALIDATE_NEVER is&#10;+  // set.&#10;+  /* XXX bug 466524: We can't currently start an ssl server in xpcshell tests,&#10;+                     so this test is currently disabled.&#10;+  new Test(httpsBase + nocachePath,&#10;+           Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE |&#10;+           Ci.nsIRequest.VALIDATE_NEVER,&#10;+           false,  // expect success&#10;+           false,  // read from cache&#10;+           false)  // hit server&#10;+  */&#10;+  new Test(httpBase + nostorePath, 0,&#10;+           true,   // expect success&#10;+           false,  // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + nostorePath, 0,&#10;+           true,   // expect success&#10;+           false,  // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + nostorePath, Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE,&#10;+           false,  // expect success&#10;+           false,  // read from cache&#10;+           false), // hit server&#10;+  new Test(httpBase + nostorePath, Ci.nsIRequest.LOAD_FROM_CACHE,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+  // no-store should force the validation (and therefore failure, with&#10;+  // LOAD_ONLY_FROM_CACHE) even if VALIDATE_NEVER is set.&#10;+  new Test(httpBase + nostorePath,&#10;+           Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE |&#10;+           Ci.nsIRequest.VALIDATE_NEVER,&#10;+           false,  // expect success&#10;+           false,  // read from cache&#10;+           false)  // hit server&#10;+  ];&#10;+&#10;+function run_next_test()&#10;+{&#10;+  if (gTests.length == 0) {&#10;+    httpserver.stop();&#10;+    do_test_finished();&#10;+    return;&#10;+  }&#10;+&#10;+  var test = gTests.shift();&#10;+  test.run();&#10;+}&#10;+&#10;+function handler(metadata, response) {&#10;+  gHitServer = true;&#10;+  try {&#10;+    var etag = metadata.getHeader(&quot;If-None-Match&quot;);&#10;+  } catch(ex) {&#10;+    var etag = &quot;&quot;;&#10;+  }&#10;+  if (etag == &quot;testtag&quot;) {&#10;+    // Allow using the cached data&#10;+    response.setStatusLine(metadata.httpVersion, 304, &quot;Not Modified&quot;);&#10;+  } else {&#10;+    response.setStatusLine(metadata.httpVersion, 200, &quot;OK&quot;);&#10;+    response.setHeader(&quot;Content-Type&quot;, &quot;text/plain&quot;, false);&#10;+    response.setHeader(&quot;ETag&quot;, &quot;testtag&quot;, false);&#10;+    const body = &quot;data&quot;;&#10;+    response.bodyOutputStream.write(body, body.length);&#10;+  }&#10;+}&#10;+&#10;+function nocache_handler(metadata, response) {&#10;+  response.setHeader(&quot;Cache-Control&quot;, &quot;no-cache&quot;, false);&#10;+  handler(metadata, response);&#10;+}&#10;+&#10;+function nostore_handler(metadata, response) {&#10;+  response.setHeader(&quot;Cache-Control&quot;, &quot;no-store&quot;, false);&#10;+  handler(metadata, response);&#10;+}&#10;+&#10;+function shortexp_handler(metadata, response) {&#10;+  response.setHeader(&quot;Cache-Control&quot;, &quot;max-age=0&quot;, false);&#10;+  handler(metadata, response);&#10;+}&#10;+&#10;+function longexp_handler(metadata, response) {&#10;+  response.setHeader(&quot;Cache-Control&quot;, &quot;max-age=10000&quot;, false);&#10;+  handler(metadata, response);&#10;+}&#10;+&#10;+function run_test() {&#10;+  httpserver = new nsHttpServer();&#10;+  httpserver.registerPathHandler(shortexpPath, shortexp_handler);&#10;+  httpserver.registerPathHandler(longexpPath, longexp_handler);&#10;+  httpserver.registerPathHandler(nocachePath, nocache_handler);&#10;+  httpserver.registerPathHandler(nostorePath, nostore_handler);&#10;+  httpserver.start(4444);&#10;+&#10;+  run_next_test();&#10;+  do_test_pending();&#10;+}&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/test/unit/test_redirect_caching.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 1fda7c4..c752998 100644&#10;@@ -30,7 +30,7 @@ function firstTimeThrough(request, buffer)&#10; {&#10;   do_check_eq(buffer, responseBody);&#10;   var chan = make_channel(randomURI);&#10;-  chan.loadFlags |= Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE;&#10;+  chan.loadFlags |= Ci.nsICachingChannel.LOAD_FROM_CACHE;&#10;   chan.asyncOpen(new ChannelListener(finish_test, null), null);&#10; }&#10; &#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Dave Camp &lt;dcamp@mozilla.com&gt;  2008-12-12 13:57:47     Bug 441751 - &quot;Directives not to cache pages ignored.&quot; [r+sr=bzbarsky]&#10;    * * *&#10;    Bug 441751 - &quot;Directives not to cache pages ignored.&quot; (fix for offline cache updating) [r+sr=bzbarsky]&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/src/base/nsGlobalWindow.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 9364446..3fb5169 100644&#10;@@ -9399,7 +9399,8 @@ nsNavigator::MozIsLocallyAvailable(const nsAString &amp;aURI,&#10; &#10;   if (aWhenOffline) {&#10;     loadFlags |= nsICachingChannel::LOAD_CHECK_OFFLINE_CACHE |&#10;-                 nsICachingChannel::LOAD_ONLY_FROM_CACHE;&#10;+                 nsICachingChannel::LOAD_ONLY_FROM_CACHE |&#10;+                 nsIRequest::LOAD_FROM_CACHE;&#10;   }&#10; &#10;   nsCOMPtr&lt;nsIChannel&gt; channel;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/protocol/http/src/nsHttpChannel.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 6ec636c..7538834 100644&#10;@@ -1543,7 +1543,7 @@ nsHttpChannel::OpenCacheEntry(PRBool offline, PRBool *delayed)&#10; &#10;     // Set the desired cache access mode accordingly...&#10;     nsCacheAccessMode accessRequested;&#10;-    if (mLoadFlags &amp; (LOAD_ONLY_FROM_CACHE | INHIBIT_CACHING)) {&#10;+    if (offline || (mLoadFlags &amp; INHIBIT_CACHING)) {&#10;         // If we have been asked to bypass the cache and not write to the&#10;         // cache, then don't use the cache at all.  Unless we're actually&#10;         // offline, which takes precedence over BYPASS_LOCAL_CACHE.&#10;@@ -1914,15 +1914,15 @@ nsHttpChannel::CheckCache()&#10;     NS_ENSURE_SUCCESS(rv, rv);&#10;     buf.Adopt(0);&#10; &#10;-    // Don't bother to validate LOAD_ONLY_FROM_CACHE items.&#10;     // Don't bother to validate items that are read-only,&#10;     // unless they are read-only because of INHIBIT_CACHING or because&#10;     // we're updating the offline cache.&#10;     // Don't bother to validate if this is a fallback entry.&#10;-    if (mLoadFlags &amp; LOAD_ONLY_FROM_CACHE ||&#10;-        (mCacheAccess == nsICache::ACCESS_READ &amp;&amp;&#10;-         !((mLoadFlags &amp; INHIBIT_CACHING) || mCacheForOfflineUse)) ||&#10;-        mFallbackChannel) {&#10;+    if (!mCacheForOfflineUse &amp;&amp;&#10;+        (mLoadedFromApplicationCache ||&#10;+         (mCacheAccess == nsICache::ACCESS_READ &amp;&amp;&#10;+          !(mLoadFlags &amp; INHIBIT_CACHING)) ||&#10;+         mFallbackChannel)) {&#10;         mCachedContentIsValid = PR_TRUE;&#10;         return NS_OK;&#10;     }&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/test/unit/test_cacheflags.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..c4fb42e&#10;@@ -0,0 +1,268 @@&#10;+do_import_script(&quot;netwerk/test/httpserver/httpd.js&quot;);&#10;+&#10;+var httpserver = null;&#10;+&#10;+// Need to randomize, because apparently no one clears our cache&#10;+var suffix = Math.random();&#10;+var httpBase = &quot;http://localhost:4444&quot;;&#10;+var httpsBase = &quot;http://localhost:4445&quot;;&#10;+var shortexpPath = &quot;/shortexp&quot; + suffix;&#10;+var longexpPath = &quot;/longexp&quot; + suffix;&#10;+var nocachePath = &quot;/nocache&quot; + suffix;&#10;+var nostorePath = &quot;/nostore&quot; + suffix;&#10;+&#10;+function make_channel(url, flags) {&#10;+  var ios = Cc[&quot;@mozilla.org/network/io-service;1&quot;].&#10;+    getService(Ci.nsIIOService);&#10;+  var req = ios.newChannel(url, null, null);&#10;+  req.loadFlags = flags;&#10;+  return req;&#10;+}&#10;+&#10;+function Test(path, flags, expectSuccess, readFromCache, hitServer) {&#10;+  this.path = path;&#10;+  this.flags = flags;&#10;+  this.expectSuccess = expectSuccess;&#10;+  this.readFromCache = readFromCache;&#10;+  this.hitServer = hitServer;&#10;+}&#10;+&#10;+Test.prototype = {&#10;+  flags: 0,&#10;+  expectSuccess: true,&#10;+  readFromCache: false,&#10;+  hitServer: true,&#10;+  _buffer: &quot;&quot;,&#10;+  _isFromCache: false,&#10;+&#10;+  QueryInterface: function(iid) {&#10;+    if (iid.equals(Components.interfaces.nsIStreamListener) ||&#10;+        iid.equals(Components.interfaces.nsIRequestObserver) ||&#10;+        iid.equals(Components.interfaces.nsISupports))&#10;+      return this;&#10;+    throw Components.results.NS_ERROR_NO_INTERFACE;&#10;+  },&#10;+&#10;+  onStartRequest: function(request, context) {&#10;+    var cachingChannel = request.QueryInterface(Ci.nsICachingChannel);&#10;+    this._isFromCache = request.isPending() &amp;&amp; cachingChannel.isFromCache();&#10;+  },&#10;+&#10;+  onDataAvailable: function(request, context, stream, offset, count) {&#10;+    this._buffer = this._buffer.concat(read_stream(stream, count));&#10;+  },&#10;+&#10;+  onStopRequest: function(request, context, status) {&#10;+    do_check_eq(Components.isSuccessCode(status), this.expectSuccess);&#10;+    do_check_eq(this._isFromCache, this.readFromCache);&#10;+    do_check_eq(gHitServer, this.hitServer);&#10;+&#10;+    do_timeout(0, &quot;run_next_test();&quot;);&#10;+  },&#10;+&#10;+  run: function() {&#10;+    dump(&quot;Running:&quot; +&#10;+         &quot;\n  &quot; + this.path +&#10;+         &quot;\n  &quot; + this.flags +&#10;+         &quot;\n  &quot; + this.expectSuccess +&#10;+         &quot;\n  &quot; + this.readFromCache +&#10;+         &quot;\n  &quot; + this.hitServer + &quot;\n&quot;);&#10;+    gHitServer = false;&#10;+    var channel = make_channel(this.path, this.flags);&#10;+    channel.asyncOpen(this, null);&#10;+  }&#10;+};&#10;+&#10;+var gHitServer = false;&#10;+&#10;+var gTests = [&#10;+  new Test(httpBase + shortexpPath, 0,&#10;+           true,   // expect success&#10;+           false,  // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + shortexpPath, 0,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + shortexpPath, Ci.nsIRequest.LOAD_BYPASS_CACHE,&#10;+           true,   // expect success&#10;+           false,  // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + shortexpPath, Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE,&#10;+           false,  // expect success&#10;+           false,  // read from cache&#10;+           false), // hit server&#10;+  new Test(httpBase + shortexpPath,&#10;+           Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE |&#10;+           Ci.nsIRequest.VALIDATE_NEVER,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+  new Test(httpBase + shortexpPath, Ci.nsIRequest.LOAD_FROM_CACHE,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+&#10;+  new Test(httpBase + longexpPath, 0,&#10;+           true,   // expect success&#10;+           false,  // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + longexpPath, 0,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+  new Test(httpBase + longexpPath, Ci.nsIRequest.LOAD_BYPASS_CACHE,&#10;+           true,   // expect success&#10;+           false,  // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + longexpPath,&#10;+           Ci.nsIRequest.VALIDATE_ALWAYS,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + longexpPath, Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+  new Test(httpBase + longexpPath,&#10;+           Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE |&#10;+           Ci.nsIRequest.VALIDATE_NEVER,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+  new Test(httpBase + longexpPath,&#10;+           Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE |&#10;+           Ci.nsIRequest.VALIDATE_ALWAYS,&#10;+           false,  // expect success&#10;+           false,  // read from cache&#10;+           false), // hit server&#10;+  new Test(httpBase + longexpPath, Ci.nsIRequest.LOAD_FROM_CACHE,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+&#10;+  new Test(httpBase + nocachePath, 0,&#10;+           true,   // expect success&#10;+           false,  // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + nocachePath, 0,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + nocachePath, Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE,&#10;+           false,  // expect success&#10;+           false,  // read from cache&#10;+           false), // hit server&#10;+  new Test(httpBase + nocachePath, Ci.nsIRequest.LOAD_FROM_CACHE,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+  // LOAD_ONLY_FROM_CACHE would normally fail (because no-cache forces&#10;+  // a validation), but VALIDATE_NEVER should override that.&#10;+  new Test(httpBase + nocachePath,&#10;+           Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE |&#10;+           Ci.nsIRequest.VALIDATE_NEVER,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+&#10;+  // ... however, no-cache over ssl should act like no-store and force&#10;+  // a validation (and therefore failure) even if VALIDATE_NEVER is&#10;+  // set.&#10;+  /* XXX bug 466524: We can't currently start an ssl server in xpcshell tests,&#10;+                     so this test is currently disabled.&#10;+  new Test(httpsBase + nocachePath,&#10;+           Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE |&#10;+           Ci.nsIRequest.VALIDATE_NEVER,&#10;+           false,  // expect success&#10;+           false,  // read from cache&#10;+           false)  // hit server&#10;+  */&#10;+  new Test(httpBase + nostorePath, 0,&#10;+           true,   // expect success&#10;+           false,  // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + nostorePath, 0,&#10;+           true,   // expect success&#10;+           false,  // read from cache&#10;+           true),  // hit server&#10;+  new Test(httpBase + nostorePath, Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE,&#10;+           false,  // expect success&#10;+           false,  // read from cache&#10;+           false), // hit server&#10;+  new Test(httpBase + nostorePath, Ci.nsIRequest.LOAD_FROM_CACHE,&#10;+           true,   // expect success&#10;+           true,   // read from cache&#10;+           false), // hit server&#10;+  // no-store should force the validation (and therefore failure, with&#10;+  // LOAD_ONLY_FROM_CACHE) even if VALIDATE_NEVER is set.&#10;+  new Test(httpBase + nostorePath,&#10;+           Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE |&#10;+           Ci.nsIRequest.VALIDATE_NEVER,&#10;+           false,  // expect success&#10;+           false,  // read from cache&#10;+           false)  // hit server&#10;+  ];&#10;+&#10;+function run_next_test()&#10;+{&#10;+  if (gTests.length == 0) {&#10;+    httpserver.stop();&#10;+    do_test_finished();&#10;+    return;&#10;+  }&#10;+&#10;+  var test = gTests.shift();&#10;+  test.run();&#10;+}&#10;+&#10;+function handler(metadata, response) {&#10;+  gHitServer = true;&#10;+  try {&#10;+    var etag = metadata.getHeader(&quot;If-None-Match&quot;);&#10;+  } catch(ex) {&#10;+    var etag = &quot;&quot;;&#10;+  }&#10;+  if (etag == &quot;testtag&quot;) {&#10;+    // Allow using the cached data&#10;+    response.setStatusLine(metadata.httpVersion, 304, &quot;Not Modified&quot;);&#10;+  } else {&#10;+    response.setStatusLine(metadata.httpVersion, 200, &quot;OK&quot;);&#10;+    response.setHeader(&quot;Content-Type&quot;, &quot;text/plain&quot;, false);&#10;+    response.setHeader(&quot;ETag&quot;, &quot;testtag&quot;, false);&#10;+    const body = &quot;data&quot;;&#10;+    response.bodyOutputStream.write(body, body.length);&#10;+  }&#10;+}&#10;+&#10;+function nocache_handler(metadata, response) {&#10;+  response.setHeader(&quot;Cache-Control&quot;, &quot;no-cache&quot;, false);&#10;+  handler(metadata, response);&#10;+}&#10;+&#10;+function nostore_handler(metadata, response) {&#10;+  response.setHeader(&quot;Cache-Control&quot;, &quot;no-store&quot;, false);&#10;+  handler(metadata, response);&#10;+}&#10;+&#10;+function shortexp_handler(metadata, response) {&#10;+  response.setHeader(&quot;Cache-Control&quot;, &quot;max-age=0&quot;, false);&#10;+  handler(metadata, response);&#10;+}&#10;+&#10;+function longexp_handler(metadata, response) {&#10;+  response.setHeader(&quot;Cache-Control&quot;, &quot;max-age=10000&quot;, false);&#10;+  handler(metadata, response);&#10;+}&#10;+&#10;+function run_test() {&#10;+  httpserver = new nsHttpServer();&#10;+  httpserver.registerPathHandler(shortexpPath, shortexp_handler);&#10;+  httpserver.registerPathHandler(longexpPath, longexp_handler);&#10;+  httpserver.registerPathHandler(nocachePath, nocache_handler);&#10;+  httpserver.registerPathHandler(nostorePath, nostore_handler);&#10;+  httpserver.start(4444);&#10;+&#10;+  run_next_test();&#10;+  do_test_pending();&#10;+}&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/test/unit/test_redirect_caching.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 1fda7c4..c752998 100644&#10;@@ -30,7 +30,7 @@ function firstTimeThrough(request, buffer)&#10; {&#10;   do_check_eq(buffer, responseBody);&#10;   var chan = make_channel(randomURI);&#10;-  chan.loadFlags |= Ci.nsICachingChannel.LOAD_ONLY_FROM_CACHE;&#10;+  chan.loadFlags |= Ci.nsICachingChannel.LOAD_FROM_CACHE;&#10;   chan.asyncOpen(new ChannelListener(finish_test, null), null);&#10; }&#10; &#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">452979</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Masayuki Nakano &lt;masayuki@d-toybox.com&gt;  2008-11-13 00:24:51        Bug 452979 p=Masahiro Yamada &lt;masa141421356@gmail.com&gt;, r=gavin, a=beltzner&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- browser/base/content/browser.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index c75db51..ea74403 100644&#10;@@ -2095,6 +2095,11 @@ function losslessDecodeURI(aURI) {&#10;                          encodeURIComponent);&#10;     } catch (e) {}&#10; &#10;+  // Encode invisible characters (invisible control characters, soft hyphen,&#10;+  // zero-width space, BOM, line separator, paragraph separator) (bug 452979)&#10;+  value = value.replace(/[\v\x0c\x1c\x1d\x1e\x1f\u00ad\u200b\ufeff\u2028\u2029]/g,&#10;+                        encodeURIComponent);&#10;+&#10;   // Encode bidirectional formatting characters.&#10;   // (RFC 3987 sections 3.2 and 4.1 paragraph 6)&#10;   value = value.replace(/[\u200e\u200f\u202a\u202b\u202c\u202d\u202e]/g,&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s69"><Data ss:Type="String">Author: Vladimir Vukicevic &lt;vladimir@pobox.com&gt;  2008-11-13 07:05:37     Backing out bug 452979, in attempt to fix bustage&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- browser/base/content/browser.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index ea74403..c75db51 100644&#10;@@ -2095,11 +2095,6 @@ function losslessDecodeURI(aURI) {&#10;                          encodeURIComponent);&#10;     } catch (e) {}&#10; &#10;-  // Encode invisible characters (invisible control characters, soft hyphen,&#10;-  // zero-width space, BOM, line separator, paragraph separator) (bug 452979)&#10;-  value = value.replace(/[\v\x0c\x1c\x1d\x1e\x1f\u00ad\u200b\ufeff\u2028\u2029]/g,&#10;-                        encodeURIComponent);&#10;-&#10;   // Encode bidirectional formatting characters.&#10;   // (RFC 3987 sections 3.2 and 4.1 paragraph 6)&#10;   value = value.replace(/[\u200e\u200f\u202a\u202b\u202c\u202d\u202e]/g,&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s69"><Data ss:Type="String">Author: Vladimir Vukicevic &lt;vladimir@pobox.com&gt;  2008-11-13 07:20:04       Putting back 452979, wasn't the problem.&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- browser/base/content/browser.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index c75db51..ea74403 100644&#10;@@ -2095,6 +2095,11 @@ function losslessDecodeURI(aURI) {&#10;                          encodeURIComponent);&#10;     } catch (e) {}&#10; &#10;+  // Encode invisible characters (invisible control characters, soft hyphen,&#10;+  // zero-width space, BOM, line separator, paragraph separator) (bug 452979)&#10;+  value = value.replace(/[\v\x0c\x1c\x1d\x1e\x1f\u00ad\u200b\ufeff\u2028\u2029]/g,&#10;+                        encodeURIComponent);&#10;+&#10;   // Encode bidirectional formatting characters.&#10;   // (RFC 3987 sections 3.2 and 4.1 paragraph 6)&#10;   value = value.replace(/[\u200e\u200f\u202a\u202b\u202c\u202d\u202e]/g,&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s71"><Data ss:Type="String">Author: masa141421356@gmail.com &lt;masa141421356@gmail.com&gt;  2009-01-07 01:41:34     Bug 452979 - Invisible control characters in URL MUST NOT be decoded when showing its address (r=gavin)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- browser/base/content/browser.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index b47e0cd..bf2bec4 100644&#10;@@ -2124,9 +2124,10 @@ function losslessDecodeURI(aURI) {&#10;                          encodeURIComponent);&#10;     } catch (e) {}&#10; &#10;-  // Encode invisible characters (invisible control characters, soft hyphen,&#10;-  // zero-width space, BOM, line separator, paragraph separator) (bug 452979)&#10;-  value = value.replace(/[\v\x0c\x1c\x1d\x1e\x1f\u00ad\u200b\ufeff\u2028\u2029]/g,&#10;+  // Encode invisible characters (soft hyphen, zero-width space, BOM,&#10;+  // line and paragraph separator, word joiner, invisible times,&#10;+  // invisible separator, object replacement character) (bug 452979)&#10;+  value = value.replace(/[\v\x0c\x1c\x1d\x1e\x1f\u00ad\u200b\ufeff\u2028\u2029\u2060\u2062\u2063\ufffc]/g,&#10;                         encodeURIComponent);&#10; &#10;   // Encode bidirectional formatting characters.&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">460425</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Boris Zbarsky &lt;bzbarsky@mit.edu&gt;  2008-11-26 09:50:04         Bug 460425.  Do better security checks during redirection.  r=sicking,biesi, sr=sicking&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- caps/src/nsScriptSecurityManager.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 6f35139..b83b234 100644&#10;@@ -3143,13 +3143,19 @@ nsScriptSecurityManager::OnChannelRedirect(nsIChannel* oldChannel,&#10; &#10;     nsCOMPtr&lt;nsIURI&gt; newURI;&#10;     newChannel-&gt;GetURI(getter_AddRefs(newURI));&#10;+    nsCOMPtr&lt;nsIURI&gt; newOriginalURI;&#10;+    newChannel-&gt;GetOriginalURI(getter_AddRefs(newOriginalURI));&#10; &#10;-    NS_ENSURE_STATE(oldPrincipal &amp;&amp; newURI);&#10;+    NS_ENSURE_STATE(oldPrincipal &amp;&amp; newURI &amp;&amp; newOriginalURI);&#10; &#10;     const PRUint32 flags =&#10;         nsIScriptSecurityManager::LOAD_IS_AUTOMATIC_DOCUMENT_REPLACEMENT |&#10;         nsIScriptSecurityManager::DISALLOW_SCRIPT;&#10;-    return CheckLoadURIWithPrincipal(oldPrincipal, newURI, flags);&#10;+    nsresult rv = CheckLoadURIWithPrincipal(oldPrincipal, newURI, flags);&#10;+    if (NS_SUCCEEDED(rv) &amp;&amp; newOriginalURI != newURI) {&#10;+        rv = CheckLoadURIWithPrincipal(oldPrincipal, newOriginalURI, flags);&#10;+    }&#10;+    return rv;&#10; }&#10; &#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/base/src/nsContentUtils.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index d9477d0..36fd75a 100644&#10;@@ -4487,17 +4487,26 @@ nsSameOriginChecker::OnChannelRedirect(nsIChannel *aOldChannel,&#10;                                        PRUint32    aFlags)&#10; {&#10;   NS_PRECONDITION(aNewChannel, &quot;Redirecting to null channel?&quot;);&#10;+  if (!nsContentUtils::GetSecurityManager()) {&#10;+    return NS_ERROR_NOT_AVAILABLE;&#10;+  }&#10; &#10;-  nsCOMPtr&lt;nsIURI&gt; oldURI;&#10;-  nsresult rv = aOldChannel-&gt;GetURI(getter_AddRefs(oldURI)); // The original URI&#10;-  NS_ENSURE_SUCCESS(rv, rv);&#10;+  nsCOMPtr&lt;nsIPrincipal&gt; oldPrincipal;&#10;+  nsContentUtils::GetSecurityManager()-&gt;&#10;+    GetChannelPrincipal(aOldChannel, getter_AddRefs(oldPrincipal));&#10; &#10;   nsCOMPtr&lt;nsIURI&gt; newURI;&#10;-  rv = aNewChannel-&gt;GetURI(getter_AddRefs(newURI)); // The new URI&#10;-  NS_ENSURE_SUCCESS(rv, rv);&#10;+  aNewChannel-&gt;GetURI(getter_AddRefs(newURI));&#10;+  nsCOMPtr&lt;nsIURI&gt; newOriginalURI;&#10;+  aNewChannel-&gt;GetOriginalURI(getter_AddRefs(newOriginalURI));&#10; &#10;-  return nsContentUtils::GetSecurityManager()-&gt;&#10;-    CheckSameOriginURI(oldURI, newURI, PR_TRUE);&#10;+  NS_ENSURE_STATE(oldPrincipal &amp;&amp; newURI &amp;&amp; newOriginalURI);&#10;+&#10;+  nsresult rv = oldPrincipal-&gt;CheckMayLoad(newURI, PR_FALSE);&#10;+  if (NS_SUCCEEDED(rv) &amp;&amp; newOriginalURI != newURI) {&#10;+    rv = oldPrincipal-&gt;CheckMayLoad(newOriginalURI, PR_FALSE);&#10;+  }&#10;+  return rv;&#10; }&#10; &#10; NS_IMETHODIMP&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/base/src/nsCrossSiteListenerProxy.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index ab48e85..03c5934 100644&#10;@@ -351,9 +351,11 @@ nsCrossSiteListenerProxy::OnChannelRedirect(nsIChannel *aOldChannel,&#10; nsresult&#10; nsCrossSiteListenerProxy::UpdateChannel(nsIChannel* aChannel)&#10; {&#10;-  nsCOMPtr&lt;nsIURI&gt; uri;&#10;+  nsCOMPtr&lt;nsIURI&gt; uri, originalURI;&#10;   nsresult rv = aChannel-&gt;GetURI(getter_AddRefs(uri));&#10;   NS_ENSURE_SUCCESS(rv, rv);&#10;+  rv = aChannel-&gt;GetOriginalURI(getter_AddRefs(originalURI));&#10;+  NS_ENSURE_SUCCESS(rv, rv);  &#10; &#10;   // Check that the uri is ok to load&#10;   rv = nsContentUtils::GetSecurityManager()-&gt;&#10;@@ -361,8 +363,18 @@ nsCrossSiteListenerProxy::UpdateChannel(nsIChannel* aChannel)&#10;                               nsIScriptSecurityManager::STANDARD);&#10;   NS_ENSURE_SUCCESS(rv, rv);&#10; &#10;+  if (originalURI != uri) {&#10;+    rv = nsContentUtils::GetSecurityManager()-&gt;&#10;+      CheckLoadURIWithPrincipal(mRequestingPrincipal, originalURI,&#10;+                                nsIScriptSecurityManager::STANDARD);&#10;+    NS_ENSURE_SUCCESS(rv, rv);&#10;+  }&#10;+&#10;   if (!mHasBeenCrossSite &amp;&amp;&#10;-      NS_SUCCEEDED(mRequestingPrincipal-&gt;CheckMayLoad(uri, PR_FALSE))) {&#10;+      NS_SUCCEEDED(mRequestingPrincipal-&gt;CheckMayLoad(uri, PR_FALSE)) &amp;&amp;&#10;+      (originalURI == uri ||&#10;+       NS_SUCCEEDED(mRequestingPrincipal-&gt;CheckMayLoad(originalURI,&#10;+                                                       PR_FALSE)))) {&#10;     return NS_OK;&#10;   }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/base/src/nsDocument.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e25a56e..08d375f 100644&#10;@@ -1117,17 +1117,16 @@ nsExternalResourceMap::PendingLoad::StartLoad(nsIURI* aURI,&#10;     return NS_ERROR_NOT_AVAILABLE;&#10;   }&#10; &#10;+  nsCOMPtr&lt;nsIInterfaceRequestor&gt; req = nsContentUtils::GetSameOriginChecker();&#10;+  NS_ENSURE_TRUE(req, NS_ERROR_OUT_OF_MEMORY);&#10;+&#10;   nsCOMPtr&lt;nsILoadGroup&gt; loadGroup = doc-&gt;GetDocumentLoadGroup();&#10;   nsCOMPtr&lt;nsIChannel&gt; channel;&#10;-  rv = NS_NewChannel(getter_AddRefs(channel), aURI, nsnull, loadGroup);&#10;+  rv = NS_NewChannel(getter_AddRefs(channel), aURI, nsnull, loadGroup, req);&#10;   NS_ENSURE_SUCCESS(rv, rv);&#10; &#10;   mURI = aURI;&#10; &#10;-  nsCOMPtr&lt;nsIInterfaceRequestor&gt; req = nsContentUtils::GetSameOriginChecker();&#10;-  NS_ENSURE_TRUE(req, NS_ERROR_OUT_OF_MEMORY);&#10;-&#10;-  channel-&gt;SetNotificationCallbacks(req);&#10;   return channel-&gt;AsyncOpen(this, nsnull);&#10; }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/base/src/nsXMLHttpRequest.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 6650a53..87d1e86 100644&#10;@@ -1738,11 +1738,16 @@ CheckMayLoad(nsIPrincipal* aPrincipal, nsIChannel* aChannel)&#10; {&#10;   NS_ASSERTION(!IsSystemPrincipal(aPrincipal), &quot;Shouldn't get here!&quot;);&#10; &#10;-  nsCOMPtr&lt;nsIURI&gt; channelURI;&#10;+  nsCOMPtr&lt;nsIURI&gt; channelURI, originalURI;&#10;   nsresult rv = aChannel-&gt;GetURI(getter_AddRefs(channelURI));&#10;   NS_ENSURE_SUCCESS(rv, PR_FALSE);&#10;+  rv = aChannel-&gt;GetOriginalURI(getter_AddRefs(originalURI));&#10;+  NS_ENSURE_SUCCESS(rv, PR_FALSE);&#10; &#10;   rv = aPrincipal-&gt;CheckMayLoad(channelURI, PR_FALSE);&#10;+  if (NS_SUCCEEDED(rv) &amp;&amp; originalURI != channelURI) {&#10;+    rv = aPrincipal-&gt;CheckMayLoad(originalURI, PR_FALSE);&#10;+  }&#10;   return NS_SUCCEEDED(rv);&#10; }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xml/document/src/nsXMLDocument.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index ae798ed..3b9d15e 100644&#10;@@ -236,8 +236,6 @@ nsXMLDocument::~nsXMLDocument()&#10; // QueryInterface implementation for nsXMLDocument&#10; NS_INTERFACE_TABLE_HEAD(nsXMLDocument)&#10;   NS_DOCUMENT_INTERFACE_TABLE_BEGIN(nsXMLDocument)&#10;-    NS_INTERFACE_TABLE_ENTRY(nsXMLDocument, nsIInterfaceRequestor)&#10;-    NS_INTERFACE_TABLE_ENTRY(nsXMLDocument, nsIChannelEventSink)&#10;     NS_INTERFACE_TABLE_ENTRY(nsXMLDocument, nsIDOMXMLDocument)&#10;   NS_OFFSET_AND_INTERFACE_TABLE_END&#10;   NS_OFFSET_AND_INTERFACE_TABLE_TO_MAP_SEGUE&#10;@@ -277,35 +275,6 @@ nsXMLDocument::ResetToURI(nsIURI *aURI, nsILoadGroup *aLoadGroup,&#10;   nsDocument::ResetToURI(aURI, aLoadGroup, aPrincipal);&#10; }&#10; &#10;-/////////////////////////////////////////////////////&#10;-// nsIInterfaceRequestor methods:&#10;-//&#10;-NS_IMETHODIMP&#10;-nsXMLDocument::GetInterface(const nsIID&amp; aIID, void** aSink)&#10;-{&#10;-  return QueryInterface(aIID, aSink);&#10;-}&#10;-&#10;-// nsIChannelEventSink&#10;-NS_IMETHODIMP&#10;-nsXMLDocument::OnChannelRedirect(nsIChannel *aOldChannel,&#10;-                                 nsIChannel *aNewChannel,&#10;-                                 PRUint32 aFlags)&#10;-{&#10;-  NS_PRECONDITION(aNewChannel, &quot;Redirecting to null channel?&quot;);&#10;-&#10;-  nsCOMPtr&lt;nsIURI&gt; oldURI;&#10;-  nsresult rv = aOldChannel-&gt;GetURI(getter_AddRefs(oldURI));&#10;-  NS_ENSURE_SUCCESS(rv, rv);&#10;-&#10;-  nsCOMPtr&lt;nsIURI&gt; newURI;&#10;-  rv = aNewChannel-&gt;GetURI(getter_AddRefs(newURI));&#10;-  NS_ENSURE_SUCCESS(rv, rv);&#10;-&#10;-  return nsContentUtils::GetSecurityManager()-&gt;&#10;-    CheckSameOriginURI(oldURI, newURI, PR_TRUE);&#10;-}&#10;-&#10; NS_IMETHODIMP&#10; nsXMLDocument::EvaluateFIXptr(const nsAString&amp; aExpression, nsIDOMRange **aRange)&#10; {&#10;@@ -438,11 +407,13 @@ nsXMLDocument::Load(const nsAString&amp; aUrl, PRBool *aReturn)&#10;   mListenerManager = elm;&#10; &#10;   // Create a channel&#10;+  nsCOMPtr&lt;nsIInterfaceRequestor&gt; req = nsContentUtils::GetSameOriginChecker();&#10;+  NS_ENSURE_TRUE(req, NS_ERROR_OUT_OF_MEMORY);  &#10; &#10;   nsCOMPtr&lt;nsIChannel&gt; channel;&#10;   // nsIRequest::LOAD_BACKGROUND prevents throbber from becoming active,&#10;   // which in turn keeps STOP button from becoming active  &#10;-  rv = NS_NewChannel(getter_AddRefs(channel), uri, nsnull, loadGroup, this, &#10;+  rv = NS_NewChannel(getter_AddRefs(channel), uri, nsnull, loadGroup, req, &#10;                      nsIRequest::LOAD_BACKGROUND);&#10;   if (NS_FAILED(rv)) {&#10;     return rv;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xml/document/src/nsXMLDocument.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index c34c362..5bfbf4b 100644&#10;@@ -39,9 +39,6 @@&#10; #define nsXMLDocument_h___&#10; &#10; #include &quot;nsDocument.h&quot;&#10;-#include &quot;nsIInterfaceRequestor.h&quot;&#10;-#include &quot;nsIInterfaceRequestorUtils.h&quot;&#10;-#include &quot;nsIChannelEventSink.h&quot;&#10; #include &quot;nsIDOMXMLDocument.h&quot;&#10; #include &quot;nsIScriptContext.h&quot;&#10; #include &quot;nsHTMLStyleSheet.h&quot;&#10;@@ -52,9 +49,7 @@ class nsIDOMNode;&#10; class nsIURI;&#10; class nsIChannel;&#10; &#10;-class nsXMLDocument : public nsDocument,&#10;-                      public nsIInterfaceRequestor,&#10;-                      public nsIChannelEventSink&#10;+class nsXMLDocument : public nsDocument&#10; {&#10; public:&#10;   nsXMLDocument(const char* aContentType = &quot;application/xml&quot;);&#10;@@ -75,12 +70,6 @@ public:&#10; &#10;   virtual void EndLoad();&#10; &#10;-  // nsIInterfaceRequestor&#10;-  NS_DECL_NSIINTERFACEREQUESTOR&#10;-&#10;-  // nsIHTTPEventSink&#10;-  NS_DECL_NSICHANNELEVENTSINK&#10;-&#10;   // nsIDOMXMLDocument&#10;   NS_DECL_NSIDOMXMLDOCUMENT&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/xml/document/test/test_bug392338.html &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index bf2dae1..0516bdb 100644&#10;@@ -30,36 +30,43 @@ function obs () {&#10; obs.prototype = {&#10;   observe: function obs_observe (theSubject, theTopic, theData)&#10;   {&#10;+    this.timeToFinish = true;&#10;     try{&#10;       this.window.netscape.security&#10;           .PrivilegeManager.enablePrivilege(&quot;UniversalXPConnect&quot;);&#10;       var ir = theSubject.QueryInterface(this.window.Components.interfaces&#10;                                              .nsIChannel).notificationCallbacks;&#10;-      if (!(ir instanceof this.window.Components.interfaces.nsIDOMDocument)) {&#10;+      if (!ir) {&#10;+        this.timeToFinish = false;&#10;         return;&#10;       }&#10;+      this.window.ok(true, &quot;No exception thrown&quot;);&#10; &#10;       this.window.is(ir instanceof&#10;                        this.window.Components.interfaces.nsIInterfaceRequestor,&#10;                      true, &quot;Must be an interface requestor&quot;);&#10; &#10;-      var count = {};&#10;-      var interfaces = ir.&#10;-                   QueryInterface(this.window.Components&#10;-                                      .interfaces.nsIClassInfo).&#10;-                   getInterfaces(count).&#10;-                   map(function(id) {&#10;-                              return this.window.Components&#10;-                                                .interfacesByID[id].toString();&#10;-                       });&#10;-      this.window.isnot(interfaces.indexOf(&quot;nsIInterfaceRequestor&quot;), -1,&#10;-                        &quot;Must have interface requestor classinfo&quot;);&#10;+      if (ir instanceof this.window.Components.interfaces.nsIClassInfo) {&#10;+        var count = {};&#10;+        var interfaces = ir.&#10;+                     QueryInterface(this.window.Components&#10;+                                        .interfaces.nsIClassInfo).&#10;+                     getInterfaces(count).&#10;+                     map(function(id) {&#10;+                                return this.window.Components&#10;+                                                  .interfacesByID[id].toString();&#10;+                         });&#10;+        this.window.isnot(interfaces.indexOf(&quot;nsIInterfaceRequestor&quot;), -1,&#10;+                          &quot;Must have interface requestor classinfo&quot;);&#10;+      }&#10;     } catch(ex) {&#10;       this.window.is(true, false, &quot;Exception thrown &quot; + ex);&#10;     } finally {&#10;-      this.remove();&#10;-      this.window.SimpleTest.finish();&#10;-      this.window = null;&#10;+      if (this.timeToFinish) {&#10;+        this.remove();&#10;+        this.window.SimpleTest.finish();&#10;+        this.window = null;&#10;+      }&#10;     }&#10;   },&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- docshell/base/nsWebShell.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 5d8a420..df94164 100644&#10;@@ -390,6 +390,8 @@ nsPingListener::OnChannelRedirect(nsIChannel *oldChan, nsIChannel *newChan,&#10;   if (!mRequireSameHost)&#10;     return NS_OK;&#10; &#10;+  // XXXbz should this be using something more like the nsContentUtils&#10;+  // same-origin checker?&#10;   nsCOMPtr&lt;nsIURI&gt; oldURI;&#10;   oldChan-&gt;GetURI(getter_AddRefs(oldURI));&#10;   NS_ENSURE_STATE(oldURI &amp;&amp; newURI);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/src/base/nsDOMClassInfo.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index fb8db86..ba5fcfa 100644&#10;@@ -2038,7 +2038,6 @@ nsDOMClassInfo::Init()&#10;   DOM_CLASSINFO_MAP_BEGIN(XMLDocument, nsIDOMXMLDocument)&#10;     DOM_CLASSINFO_MAP_ENTRY(nsIDOMDocument)&#10;     DOM_CLASSINFO_MAP_ENTRY(nsIDOMXMLDocument)&#10;-    DOM_CLASSINFO_MAP_ENTRY(nsIInterfaceRequestor)&#10;     DOM_CLASSINFO_DOCUMENT_MAP_ENTRIES&#10;   DOM_CLASSINFO_MAP_END&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/base/src/nsBaseChannel.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 3355100..a24ccdc 100644&#10;@@ -102,7 +102,6 @@ nsBaseChannel::Redirect(nsIChannel *newChannel, PRUint32 redirectFlags,&#10; &#10;   // Transfer properties&#10; &#10;-  newChannel-&gt;SetOriginalURI(OriginalURI());&#10;   newChannel-&gt;SetLoadGroup(mLoadGroup);&#10;   newChannel-&gt;SetNotificationCallbacks(mCallbacks);&#10;   newChannel-&gt;SetLoadFlags(mLoadFlags | LOAD_REPLACE);&#10;@@ -145,6 +144,9 @@ nsBaseChannel::Redirect(nsIChannel *newChannel, PRUint32 redirectFlags,&#10;       return rv;&#10;   }&#10; &#10;+  // Make sure to do this _after_ making all the  OnChannelRedirect calls&#10;+  newChannel-&gt;SetOriginalURI(OriginalURI());&#10;+&#10;   // If we fail to open the new channel, then we want to leave this channel&#10;   // unaffected, so we defer tearing down our channel until we have succeeded&#10;   // with the redirect.&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/protocol/http/src/nsHttpChannel.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 808b856..404d97e 100644&#10;@@ -1133,6 +1133,9 @@ nsHttpChannel::DoReplaceWithProxy(nsIProxyInfo* pi)&#10;     if (NS_FAILED(rv))&#10;         return rv;&#10; &#10;+    // Make sure to do this _after_ calling OnChannelRedirect&#10;+    newChannel-&gt;SetOriginalURI(mOriginalURI);&#10;+&#10;     // open new channel&#10;     rv = newChannel-&gt;AsyncOpen(mListener, mListenerContext);&#10;     if (NS_FAILED(rv))&#10;@@ -1463,6 +1466,9 @@ nsHttpChannel::ProcessFallback(PRBool *fallingBack)&#10;     if (NS_FAILED(rv))&#10;         return rv;&#10; &#10;+    // Make sure to do this _after_ calling OnChannelRedirect&#10;+    newChannel-&gt;SetOriginalURI(mOriginalURI);&#10;+    &#10;     rv = newChannel-&gt;AsyncOpen(mListener, mListenerContext);&#10;     NS_ENSURE_SUCCESS(rv, rv);&#10; &#10;@@ -2582,7 +2588,6 @@ nsHttpChannel::SetupReplacementChannel(nsIURI       *newURI,&#10;     // Do not pass along LOAD_CHECK_OFFLINE_CACHE&#10;     newLoadFlags &amp;= ~LOAD_CHECK_OFFLINE_CACHE;&#10; &#10;-    newChannel-&gt;SetOriginalURI(mOriginalURI);&#10;     newChannel-&gt;SetLoadGroup(mLoadGroup); &#10;     newChannel-&gt;SetNotificationCallbacks(mCallbacks);&#10;     newChannel-&gt;SetLoadFlags(newLoadFlags);&#10;@@ -2763,6 +2768,9 @@ nsHttpChannel::ProcessRedirection(PRUint32 redirectType)&#10;     if (NS_FAILED(rv))&#10;         return rv;&#10; &#10;+    // Make sure to do this _after_ calling OnChannelRedirect&#10;+    newChannel-&gt;SetOriginalURI(mOriginalURI);    &#10;+&#10;     // And now, the deprecated way&#10;     nsCOMPtr&lt;nsIHttpEventSink&gt; httpEventSink;&#10;     GetCallback(httpEventSink);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- uriloader/base/nsDocLoader.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 1879733..f579cb5 100644&#10;@@ -1487,15 +1487,6 @@ NS_IMETHODIMP nsDocLoader::OnChannelRedirect(nsIChannel *aOldChannel,&#10; {&#10;   if (aOldChannel)&#10;   {&#10;-    nsresult rv;&#10;-    nsCOMPtr&lt;nsIURI&gt; oldURI, newURI;&#10;-&#10;-    rv = aOldChannel-&gt;GetOriginalURI(getter_AddRefs(oldURI));&#10;-    if (NS_FAILED(rv)) return rv;&#10;-&#10;-    rv = aNewChannel-&gt;GetURI(getter_AddRefs(newURI));&#10;-    if (NS_FAILED(rv)) return rv;&#10;-&#10;     nsLoadFlags loadFlags = 0;&#10;     PRInt32 stateFlags = nsIWebProgressListener::STATE_REDIRECTING |&#10;                          nsIWebProgressListener::STATE_IS_REQUEST;&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">474536</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Jason Duell &lt;jduell.mcbugs@gmail.com&gt;  2009-02-20 04:25:18     Bug 474536.  Expose the underlying channel's content-disposition on jar: channels.  r+sr=bzbarsky&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libjar/nsJARChannel.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 2058727..73914df 100644&#10;@@ -46,6 +46,7 @@&#10; #include &quot;nsEscape.h&quot;&#10; #include &quot;nsIPrefService.h&quot;&#10; #include &quot;nsIPrefBranch.h&quot;&#10;+#include &quot;nsChannelProperties.h&quot;&#10; &#10; #include &quot;nsIScriptSecurityManager.h&quot;&#10; #include &quot;nsIPrincipal.h&quot;&#10;@@ -218,6 +219,9 @@ nsJARInputThunk::IsNonBlocking(PRBool *nonBlocking)&#10; }&#10; &#10; //&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+// nsJARChannel&#10;+//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;+&#10; &#10; nsJARChannel::nsJARChannel()&#10;     : mContentLength(-1)&#10;@@ -246,18 +250,23 @@ nsJARChannel::~nsJARChannel()&#10;     NS_RELEASE(handler); // NULL parameter&#10; }&#10; &#10;-NS_IMPL_ISUPPORTS6(nsJARChannel,&#10;-                   nsIRequest,&#10;-                   nsIChannel,&#10;-                   nsIStreamListener,&#10;-                   nsIRequestObserver,&#10;-                   nsIDownloadObserver,&#10;-                   nsIJARChannel)&#10;+NS_IMPL_ISUPPORTS_INHERITED6(nsJARChannel,&#10;+                             nsHashPropertyBag,&#10;+                             nsIRequest,&#10;+                             nsIChannel,&#10;+                             nsIStreamListener,&#10;+                             nsIRequestObserver,&#10;+                             nsIDownloadObserver,&#10;+                             nsIJARChannel)&#10; &#10; nsresult &#10; nsJARChannel::Init(nsIURI *uri)&#10; {&#10;     nsresult rv;&#10;+    rv = nsHashPropertyBag::Init();&#10;+    if (NS_FAILED(rv))&#10;+        return rv;&#10;+&#10;     mJarURI = do_QueryInterface(uri, &amp;rv);&#10;     if (NS_FAILED(rv))&#10;         return rv;&#10;@@ -752,6 +761,7 @@ nsJARChannel::OnDownloadComplete(nsIDownloader *downloader,&#10;     }&#10; &#10;     if (NS_SUCCEEDED(status) &amp;&amp; channel) {&#10;+        nsCAutoString header;&#10;         // Grab the security info from our base channel&#10;         channel-&gt;GetSecurityInfo(getter_AddRefs(mSecurityInfo));&#10; &#10;@@ -760,16 +770,17 @@ nsJARChannel::OnDownloadComplete(nsIDownloader *downloader,&#10;             // We only want to run scripts if the server really intended to&#10;             // send us a JAR file.  Check the server-supplied content type for&#10;             // a JAR type.&#10;-            nsCAutoString header;&#10;             httpChannel-&gt;GetResponseHeader(NS_LITERAL_CSTRING(&quot;Content-Type&quot;),&#10;                                            header);&#10;-&#10;             nsCAutoString contentType;&#10;             nsCAutoString charset;&#10;             NS_ParseContentType(header, contentType, charset);&#10;-&#10;             mIsUnsafe = !contentType.EqualsLiteral(&quot;application/java-archive&quot;) &amp;&amp;&#10;                         !contentType.EqualsLiteral(&quot;application/x-jar&quot;);&#10;+            rv = httpChannel-&gt;GetResponseHeader(NS_LITERAL_CSTRING(&quot;Content-Disposition&quot;),&#10;+                                                header);&#10;+            if (NS_SUCCEEDED(rv))&#10;+                SetPropertyAsACString(NS_CHANNEL_PROP_CONTENT_DISPOSITION, header);&#10;         } else {&#10;             nsCOMPtr&lt;nsIJARChannel&gt; innerJARChannel(do_QueryInterface(channel));&#10;             if (innerJARChannel) {&#10;@@ -777,6 +788,10 @@ nsJARChannel::OnDownloadComplete(nsIDownloader *downloader,&#10;                 innerJARChannel-&gt;GetIsUnsafe(&amp;unsafe);&#10;                 mIsUnsafe = unsafe;&#10;             }&#10;+            // Soon-to-be common way to get Disposition: right now only nsIJARChannel&#10;+            rv = NS_GetContentDisposition(request, header);&#10;+            if (NS_SUCCEEDED(rv))&#10;+                SetPropertyAsACString(NS_CHANNEL_PROP_CONTENT_DISPOSITION, header);&#10;         }&#10;     }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libjar/nsJARChannel.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 719b298..9e84f58 100644&#10;@@ -47,6 +47,7 @@&#10; #include &quot;nsIZipReader.h&quot;&#10; #include &quot;nsIDownloader.h&quot;&#10; #include &quot;nsILoadGroup.h&quot;&#10;+#include &quot;nsHashPropertyBag.h&quot;&#10; #include &quot;nsIFile.h&quot;&#10; #include &quot;nsIURI.h&quot;&#10; #include &quot;nsCOMPtr.h&quot;&#10;@@ -60,6 +61,7 @@ class nsJARInputThunk;&#10; class nsJARChannel : public nsIJARChannel&#10;                    , public nsIDownloadObserver&#10;                    , public nsIStreamListener&#10;+                   , public nsHashPropertyBag&#10; {&#10; public:&#10;     NS_DECL_ISUPPORTS&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/base/public/nsChannelProperties.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 5a45821..f1036a6 100644&#10;@@ -58,11 +58,21 @@&#10;  */&#10; #define NS_CHANNEL_PROP_CONTENT_LENGTH_STR &quot;content-length&quot;&#10; &#10;+/**&#10;+ * MIME Content-Disposition header of channel.  &#10;+ * Not available before onStartRequest. &#10;+ * Type: nsACString&#10;+ */&#10;+#define NS_CHANNEL_PROP_CONTENT_DISPOSITION_STR &quot;content-disposition&quot;&#10;+&#10; #ifdef IMPL_NS_NET&#10; #define NS_CHANNEL_PROP_CONTENT_LENGTH gNetStrings-&gt;kContentLength&#10;+#define NS_CHANNEL_PROP_CONTENT_DISPOSITION gNetStrings-&gt;kContentDisposition&#10; #else&#10; #define NS_CHANNEL_PROP_CONTENT_LENGTH \&#10;   NS_LITERAL_STRING(NS_CHANNEL_PROP_CONTENT_LENGTH_STR)&#10;+#define NS_CHANNEL_PROP_CONTENT_DISPOSITION \&#10;+  NS_LITERAL_STRING(NS_CHANNEL_PROP_CONTENT_DISPOSITION_STR)&#10; #endif&#10; &#10; #endif&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/base/public/nsNetStrings.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 603457a..44d63a77 100644&#10;@@ -49,6 +49,7 @@ public:&#10; &#10;   /** &quot;content-length&quot; */&#10;   const nsLiteralString kContentLength;&#10;+  const nsLiteralString kContentDisposition;&#10; };&#10; &#10; extern NS_HIDDEN_(nsNetStrings*) gNetStrings;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/base/public/nsNetUtil.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 5db2261..05eb50c 100644&#10;@@ -62,6 +62,7 @@&#10; #include &quot;nsIIOService.h&quot;&#10; #include &quot;nsIServiceManager.h&quot;&#10; #include &quot;nsIChannel.h&quot;&#10;+#include &quot;nsChannelProperties.h&quot;&#10; #include &quot;nsIInputStreamChannel.h&quot;&#10; #include &quot;nsITransport.h&quot;&#10; #include &quot;nsIStreamTransportService.h&quot;&#10;@@ -194,6 +195,19 @@ NS_NewChannel(nsIChannel           **result,&#10;     return rv;&#10; }&#10; &#10;+// For now, works only with JARChannel.  Future: with all channels that may&#10;+// have Content-Disposition header (JAR, nsIHttpChannel, and nsIMultiPartChannel).&#10;+inline nsresult&#10;+NS_GetContentDisposition(nsIRequest     *channel,&#10;+                         nsACString     &amp;result)&#10;+{&#10;+    nsCOMPtr&lt;nsIPropertyBag2&gt; props(do_QueryInterface(channel));&#10;+    if (props)&#10;+        return props-&gt;GetPropertyAsACString(NS_CHANNEL_PROP_CONTENT_DISPOSITION,&#10;+                                            result);&#10;+    return NS_ERROR_NOT_AVAILABLE;&#10;+}&#10;+&#10; // Use this function with CAUTION. It creates a stream that blocks when you&#10; // Read() from it and blocking the UI thread is a bad idea. If you don't want&#10; // to implement a full blown asynchronous consumer (via nsIStreamListener) look&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/base/src/nsNetStrings.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index b8d47d8..2ac1a86 100644&#10;@@ -41,6 +41,7 @@ NS_HIDDEN_(nsNetStrings*) gNetStrings;&#10; &#10; nsNetStrings::nsNetStrings()&#10;   : NS_LITERAL_STRING_INIT(kContentLength, NS_CHANNEL_PROP_CONTENT_LENGTH_STR)&#10;+  : NS_LITERAL_STRING_INIT(kContentDisposition, NS_CHANNEL_PROP_CONTENT_DISPOSITION_STR)&#10; {}&#10; &#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/protocol/http/src/nsHttpAtomList.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 77096da..f11c724 100644&#10;@@ -62,6 +62,7 @@ HTTP_ATOM(Authorization,             &quot;Authorization&quot;)&#10; HTTP_ATOM(Cache_Control,             &quot;Cache-Control&quot;)&#10; HTTP_ATOM(Connection,                &quot;Connection&quot;)&#10; HTTP_ATOM(Content_Base,              &quot;Content-Base&quot;)&#10;+HTTP_ATOM(Content_Disposition,       &quot;Content-Disposition&quot;)&#10; HTTP_ATOM(Content_Encoding,          &quot;Content-Encoding&quot;)&#10; HTTP_ATOM(Content_Language,          &quot;Content-Language&quot;)&#10; HTTP_ATOM(Content_Length,            &quot;Content-Length&quot;)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/streamconv/test/Makefile.in &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 4b8b597..ea2f55b 100644&#10;@@ -73,4 +73,3 @@ DEFINES  += -DNGPREFS&#10; endif&#10; endif # WINNT&#10; &#10;-DEFINES += -DIMPL_NS_NET&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- uriloader/base/nsURILoader.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 770bcaa..a593877 100644&#10;@@ -65,7 +65,7 @@&#10; &#10; #include &quot;nsXPIDLString.h&quot;&#10; #include &quot;nsString.h&quot;&#10;-&#10;+#include &quot;nsNetUtil.h&quot;&#10; #include &quot;nsIDOMWindowInternal.h&quot;&#10; #include &quot;nsReadableUtils.h&quot;&#10; #include &quot;nsDOMError.h&quot;&#10;@@ -380,6 +380,9 @@ nsresult nsDocumentOpenInfo::DispatchContent(nsIRequest *request, nsISupports *&#10;     if (multipartChannel)&#10;     {&#10;       rv = multipartChannel-&gt;GetContentDisposition(disposition);&#10;+    } else {&#10;+      // Soon-to-be common way to get Disposition: right now only JARChannel&#10;+      rv = NS_GetContentDisposition(request, disposition);&#10;     }&#10;   }&#10; &#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s69"><Data ss:Type="String">Author: L. David Baron &lt;dbaron@dbaron.org&gt;  2009-02-20 04:37:53    Backed out changeset 4bd7dd7645c2 (Bug 474536)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libjar/nsJARChannel.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 73914df..2058727 100644&#10;@@ -46,7 +46,6 @@&#10; #include &quot;nsEscape.h&quot;&#10; #include &quot;nsIPrefService.h&quot;&#10; #include &quot;nsIPrefBranch.h&quot;&#10;-#include &quot;nsChannelProperties.h&quot;&#10; &#10; #include &quot;nsIScriptSecurityManager.h&quot;&#10; #include &quot;nsIPrincipal.h&quot;&#10;@@ -219,9 +218,6 @@ nsJARInputThunk::IsNonBlocking(PRBool *nonBlocking)&#10; }&#10; &#10; //&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;-// nsJARChannel&#10;-//&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;-&#10; &#10; nsJARChannel::nsJARChannel()&#10;     : mContentLength(-1)&#10;@@ -250,23 +246,18 @@ nsJARChannel::~nsJARChannel()&#10;     NS_RELEASE(handler); // NULL parameter&#10; }&#10; &#10;-NS_IMPL_ISUPPORTS_INHERITED6(nsJARChannel,&#10;-                             nsHashPropertyBag,&#10;-                             nsIRequest,&#10;-                             nsIChannel,&#10;-                             nsIStreamListener,&#10;-                             nsIRequestObserver,&#10;-                             nsIDownloadObserver,&#10;-                             nsIJARChannel)&#10;+NS_IMPL_ISUPPORTS6(nsJARChannel,&#10;+                   nsIRequest,&#10;+                   nsIChannel,&#10;+                   nsIStreamListener,&#10;+                   nsIRequestObserver,&#10;+                   nsIDownloadObserver,&#10;+                   nsIJARChannel)&#10; &#10; nsresult &#10; nsJARChannel::Init(nsIURI *uri)&#10; {&#10;     nsresult rv;&#10;-    rv = nsHashPropertyBag::Init();&#10;-    if (NS_FAILED(rv))&#10;-        return rv;&#10;-&#10;     mJarURI = do_QueryInterface(uri, &amp;rv);&#10;     if (NS_FAILED(rv))&#10;         return rv;&#10;@@ -761,7 +752,6 @@ nsJARChannel::OnDownloadComplete(nsIDownloader *downloader,&#10;     }&#10; &#10;     if (NS_SUCCEEDED(status) &amp;&amp; channel) {&#10;-        nsCAutoString header;&#10;         // Grab the security info from our base channel&#10;         channel-&gt;GetSecurityInfo(getter_AddRefs(mSecurityInfo));&#10; &#10;@@ -770,17 +760,16 @@ nsJARChannel::OnDownloadComplete(nsIDownloader *downloader,&#10;             // We only want to run scripts if the server really intended to&#10;             // send us a JAR file.  Check the server-supplied content type for&#10;             // a JAR type.&#10;+            nsCAutoString header;&#10;             httpChannel-&gt;GetResponseHeader(NS_LITERAL_CSTRING(&quot;Content-Type&quot;),&#10;                                            header);&#10;+&#10;             nsCAutoString contentType;&#10;             nsCAutoString charset;&#10;             NS_ParseContentType(header, contentType, charset);&#10;+&#10;             mIsUnsafe = !contentType.EqualsLiteral(&quot;application/java-archive&quot;) &amp;&amp;&#10;                         !contentType.EqualsLiteral(&quot;application/x-jar&quot;);&#10;-            rv = httpChannel-&gt;GetResponseHeader(NS_LITERAL_CSTRING(&quot;Content-Disposition&quot;),&#10;-                                                header);&#10;-            if (NS_SUCCEEDED(rv))&#10;-                SetPropertyAsACString(NS_CHANNEL_PROP_CONTENT_DISPOSITION, header);&#10;         } else {&#10;             nsCOMPtr&lt;nsIJARChannel&gt; innerJARChannel(do_QueryInterface(channel));&#10;             if (innerJARChannel) {&#10;@@ -788,10 +777,6 @@ nsJARChannel::OnDownloadComplete(nsIDownloader *downloader,&#10;                 innerJARChannel-&gt;GetIsUnsafe(&amp;unsafe);&#10;                 mIsUnsafe = unsafe;&#10;             }&#10;-            // Soon-to-be common way to get Disposition: right now only nsIJARChannel&#10;-            rv = NS_GetContentDisposition(request, header);&#10;-            if (NS_SUCCEEDED(rv))&#10;-                SetPropertyAsACString(NS_CHANNEL_PROP_CONTENT_DISPOSITION, header);&#10;         }&#10;     }&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libjar/nsJARChannel.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 9e84f58..719b298 100644&#10;@@ -47,7 +47,6 @@&#10; #include &quot;nsIZipReader.h&quot;&#10; #include &quot;nsIDownloader.h&quot;&#10; #include &quot;nsILoadGroup.h&quot;&#10;-#include &quot;nsHashPropertyBag.h&quot;&#10; #include &quot;nsIFile.h&quot;&#10; #include &quot;nsIURI.h&quot;&#10; #include &quot;nsCOMPtr.h&quot;&#10;@@ -61,7 +60,6 @@ class nsJARInputThunk;&#10; class nsJARChannel : public nsIJARChannel&#10;                    , public nsIDownloadObserver&#10;                    , public nsIStreamListener&#10;-                   , public nsHashPropertyBag&#10; {&#10; public:&#10;     NS_DECL_ISUPPORTS&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/base/public/nsChannelProperties.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index f1036a6..5a45821 100644&#10;@@ -58,21 +58,11 @@&#10;  */&#10; #define NS_CHANNEL_PROP_CONTENT_LENGTH_STR &quot;content-length&quot;&#10; &#10;-/**&#10;- * MIME Content-Disposition header of channel.  &#10;- * Not available before onStartRequest. &#10;- * Type: nsACString&#10;- */&#10;-#define NS_CHANNEL_PROP_CONTENT_DISPOSITION_STR &quot;content-disposition&quot;&#10;-&#10; #ifdef IMPL_NS_NET&#10; #define NS_CHANNEL_PROP_CONTENT_LENGTH gNetStrings-&gt;kContentLength&#10;-#define NS_CHANNEL_PROP_CONTENT_DISPOSITION gNetStrings-&gt;kContentDisposition&#10; #else&#10; #define NS_CHANNEL_PROP_CONTENT_LENGTH \&#10;   NS_LITERAL_STRING(NS_CHANNEL_PROP_CONTENT_LENGTH_STR)&#10;-#define NS_CHANNEL_PROP_CONTENT_DISPOSITION \&#10;-  NS_LITERAL_STRING(NS_CHANNEL_PROP_CONTENT_DISPOSITION_STR)&#10; #endif&#10; &#10; #endif&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/base/public/nsNetStrings.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 44d63a77..603457a 100644&#10;@@ -49,7 +49,6 @@ public:&#10; &#10;   /** &quot;content-length&quot; */&#10;   const nsLiteralString kContentLength;&#10;-  const nsLiteralString kContentDisposition;&#10; };&#10; &#10; extern NS_HIDDEN_(nsNetStrings*) gNetStrings;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/base/public/nsNetUtil.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 05eb50c..5db2261 100644&#10;@@ -62,7 +62,6 @@&#10; #include &quot;nsIIOService.h&quot;&#10; #include &quot;nsIServiceManager.h&quot;&#10; #include &quot;nsIChannel.h&quot;&#10;-#include &quot;nsChannelProperties.h&quot;&#10; #include &quot;nsIInputStreamChannel.h&quot;&#10; #include &quot;nsITransport.h&quot;&#10; #include &quot;nsIStreamTransportService.h&quot;&#10;@@ -195,19 +194,6 @@ NS_NewChannel(nsIChannel           **result,&#10;     return rv;&#10; }&#10; &#10;-// For now, works only with JARChannel.  Future: with all channels that may&#10;-// have Content-Disposition header (JAR, nsIHttpChannel, and nsIMultiPartChannel).&#10;-inline nsresult&#10;-NS_GetContentDisposition(nsIRequest     *channel,&#10;-                         nsACString     &amp;result)&#10;-{&#10;-    nsCOMPtr&lt;nsIPropertyBag2&gt; props(do_QueryInterface(channel));&#10;-    if (props)&#10;-        return props-&gt;GetPropertyAsACString(NS_CHANNEL_PROP_CONTENT_DISPOSITION,&#10;-                                            result);&#10;-    return NS_ERROR_NOT_AVAILABLE;&#10;-}&#10;-&#10; // Use this function with CAUTION. It creates a stream that blocks when you&#10; // Read() from it and blocking the UI thread is a bad idea. If you don't want&#10; // to implement a full blown asynchronous consumer (via nsIStreamListener) look&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/base/src/nsNetStrings.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 2ac1a86..b8d47d8 100644&#10;@@ -41,7 +41,6 @@ NS_HIDDEN_(nsNetStrings*) gNetStrings;&#10; &#10; nsNetStrings::nsNetStrings()&#10;   : NS_LITERAL_STRING_INIT(kContentLength, NS_CHANNEL_PROP_CONTENT_LENGTH_STR)&#10;-  : NS_LITERAL_STRING_INIT(kContentDisposition, NS_CHANNEL_PROP_CONTENT_DISPOSITION_STR)&#10; {}&#10; &#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/protocol/http/src/nsHttpAtomList.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index f11c724..77096da 100644&#10;@@ -62,7 +62,6 @@ HTTP_ATOM(Authorization,             &quot;Authorization&quot;)&#10; HTTP_ATOM(Cache_Control,             &quot;Cache-Control&quot;)&#10; HTTP_ATOM(Connection,                &quot;Connection&quot;)&#10; HTTP_ATOM(Content_Base,              &quot;Content-Base&quot;)&#10;-HTTP_ATOM(Content_Disposition,       &quot;Content-Disposition&quot;)&#10; HTTP_ATOM(Content_Encoding,          &quot;Content-Encoding&quot;)&#10; HTTP_ATOM(Content_Language,          &quot;Content-Language&quot;)&#10; HTTP_ATOM(Content_Length,            &quot;Content-Length&quot;)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/streamconv/test/Makefile.in &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index ea2f55b..4b8b597 100644&#10;@@ -73,3 +73,4 @@ DEFINES  += -DNGPREFS&#10; endif&#10; endif # WINNT&#10; &#10;+DEFINES += -DIMPL_NS_NET&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- uriloader/base/nsURILoader.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index a593877..770bcaa 100644&#10;@@ -65,7 +65,7 @@&#10; &#10; #include &quot;nsXPIDLString.h&quot;&#10; #include &quot;nsString.h&quot;&#10;-#include &quot;nsNetUtil.h&quot;&#10;+&#10; #include &quot;nsIDOMWindowInternal.h&quot;&#10; #include &quot;nsReadableUtils.h&quot;&#10; #include &quot;nsDOMError.h&quot;&#10;@@ -380,9 +380,6 @@ nsresult nsDocumentOpenInfo::DispatchContent(nsIRequest *request, nsISupports *&#10;     if (multipartChannel)&#10;     {&#10;       rv = multipartChannel-&gt;GetContentDisposition(disposition);&#10;-    } else {&#10;-      // Soon-to-be common way to get Disposition: right now only JARChannel&#10;-      rv = NS_GetContentDisposition(request, disposition);&#10;     }&#10;   }&#10; &#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s74"><Data ss:Type="String">Author: L. David Baron &lt;dbaron@dbaron.org&gt;  2009-02-20 04:38:11     Merge backout of Bug 474536 to fix build bustage.</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: Jason Duell &lt;jduell.mcbugs@gmail.com&gt;  2009-09-02 23:33:13      Adding test for bug 474536.  r=dcamp sr=bzbarsky&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/test/unit/data/bug474536/foo.jar &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..de20c50&#10;Binary files /dev/null and b/netwerk/test/unit/data/bug474536/foo.jar differ&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/test/unit/data/bug474536/foo.jar^headers^ &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..f7ae703&#10;@@ -0,0 +1,2 @@&#10;+Content-type: application/java-archive&#10;+Content-Disposition: attachment; filename=foo.jar&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/test/unit/test_bug474536.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..6a3ac35&#10;@@ -0,0 +1,90 @@&#10;+&#10;+do_load_httpd_js();&#10;+&#10;+var httpserv = null;&#10;+&#10;+var _CSvc = null;&#10;+function get_cache_service() &#10;+{&#10;+  if (_CSvc)&#10;+    return _CSvc;&#10;+&#10;+  return _CSvc = Cc[&quot;@mozilla.org/network/cache-service;1&quot;].&#10;+                 getService(Ci.nsICacheService);&#10;+}&#10;+&#10;+function setup_server()&#10;+{&#10;+  httpserv = new nsHttpServer();&#10;+  var dataDir = do_get_file(&quot;data/bug474536/&quot;);&#10;+  httpserv.registerDirectory(&quot;/&quot;, dataDir);&#10;+  httpserv.start(4444);&#10;+}&#10;+&#10;+function makeJARChannel(url)&#10;+{&#10;+  var ios = Cc[&quot;@mozilla.org/network/io-service;1&quot;].getService(Ci.nsIIOService);&#10;+  return ios.newChannel(url, null, null).QueryInterface(Ci.nsIJARChannel);&#10;+}&#10;+&#10;+var testNumber = 1;&#10;+&#10;+var listener = {&#10;+  // In all test cases, the Content-disposition header returned during the HTTP&#10;+  // request should be visible in the Channel (HTTP, JAR, or nested JAR)&#10;+  onStartRequest: function test_onStartR(request, ctx) {&#10;+    try {&#10;+      do_check_true(request instanceof Ci.nsIPropertyBag);&#10;+      try {&#10;+        dispo = request.getProperty(&quot;content-disposition&quot;); &#10;+      } catch (e) {&#10;+        do_throw(&quot;content-disposition not present!&quot;);&#10;+      }&#10;+      do_check_eq(request.getProperty(&quot;content-disposition&quot;),&#10;+                                      &quot;attachment; filename=foo.jar&quot;);&#10;+    } catch (e) {&#10;+      do_throw(&quot;unexpected exception: &quot; + e);&#10;+    }&#10;+    throw Components.results.NS_ERROR_ABORT;&#10;+  },&#10;+  onDataAvailable: function(request, context, stream, offset, count) {&#10;+    throw Components.results.NS_ERROR_UNEXPECTED; &#10;+  },&#10;+  onStopRequest: function test_onStopR(request, ctx, status) {&#10;+    switch (testNumber) {&#10;+      case 1:&#10;+        run_test2_JAR_JAR_HTTP();&#10;+        break;&#10;+      case 2:&#10;+        httpserv.stop();&#10;+        break;&#10;+      default:&#10;+        do_throw(&quot;Inconceivable!&quot;);&#10;+    }&#10;+    testNumber++;&#10;+    do_test_finished();&#10;+  }&#10;+};&#10;+&#10;+function run_test()&#10;+{&#10;+  setup_server(); &#10;+&#10;+  test1_JAR_HTTP();&#10;+}&#10;+&#10;+function test1_JAR_HTTP() {&#10;+  var jarChannel1 = &#10;+    makeJARChannel(&quot;jar:http://localhost:4444/foo.jar!/foo.html&quot;);&#10;+  jarChannel1.asyncOpen(listener, null);&#10;+  do_test_pending();&#10;+}&#10;+&#10;+function run_test2_JAR_JAR_HTTP()&#10;+{&#10;+  var jarChannel1 = &#10;+    makeJARChannel(&quot;jar:jar:http://localhost:4444/foo.jar!/bar.jar!/bar.html&quot;);&#10;+  jarChannel1.asyncOpen(listener, null);&#10;+  do_test_pending();&#10;+}&#10;+&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s71"><Data ss:Type="String">Author: Boris Zbarsky &lt;bzbarsky@mit.edu&gt;  2009-09-03 01:34:18      Backed out changeset 6ee269c6c118 (test for bug 474536) because it hangs on Tinderbox&#10;    &#10;    &#45;-HG&#45;-&#10;    extra : rebase_source : 4a94234dc481caff6e147082e0f1c5a13602e84b&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/test/unit/data/bug474536/foo.jar &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;deleted file mode 100644&#10;index de20c50..0000000&#10;Binary files a/netwerk/test/unit/data/bug474536/foo.jar and /dev/null differ&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/test/unit/data/bug474536/foo.jar^headers^ &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;deleted file mode 100644&#10;index f7ae703..0000000&#10;@@ -1,2 +0,0 @@&#10;-Content-type: application/java-archive&#10;-Content-Disposition: attachment; filename=foo.jar&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/test/unit/test_bug474536.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;deleted file mode 100644&#10;index 6a3ac35..0000000&#10;@@ -1,90 +0,0 @@&#10;-&#10;-do_load_httpd_js();&#10;-&#10;-var httpserv = null;&#10;-&#10;-var _CSvc = null;&#10;-function get_cache_service() &#10;-{&#10;-  if (_CSvc)&#10;-    return _CSvc;&#10;-&#10;-  return _CSvc = Cc[&quot;@mozilla.org/network/cache-service;1&quot;].&#10;-                 getService(Ci.nsICacheService);&#10;-}&#10;-&#10;-function setup_server()&#10;-{&#10;-  httpserv = new nsHttpServer();&#10;-  var dataDir = do_get_file(&quot;data/bug474536/&quot;);&#10;-  httpserv.registerDirectory(&quot;/&quot;, dataDir);&#10;-  httpserv.start(4444);&#10;-}&#10;-&#10;-function makeJARChannel(url)&#10;-{&#10;-  var ios = Cc[&quot;@mozilla.org/network/io-service;1&quot;].getService(Ci.nsIIOService);&#10;-  return ios.newChannel(url, null, null).QueryInterface(Ci.nsIJARChannel);&#10;-}&#10;-&#10;-var testNumber = 1;&#10;-&#10;-var listener = {&#10;-  // In all test cases, the Content-disposition header returned during the HTTP&#10;-  // request should be visible in the Channel (HTTP, JAR, or nested JAR)&#10;-  onStartRequest: function test_onStartR(request, ctx) {&#10;-    try {&#10;-      do_check_true(request instanceof Ci.nsIPropertyBag);&#10;-      try {&#10;-        dispo = request.getProperty(&quot;content-disposition&quot;); &#10;-      } catch (e) {&#10;-        do_throw(&quot;content-disposition not present!&quot;);&#10;-      }&#10;-      do_check_eq(request.getProperty(&quot;content-disposition&quot;),&#10;-                                      &quot;attachment; filename=foo.jar&quot;);&#10;-    } catch (e) {&#10;-      do_throw(&quot;unexpected exception: &quot; + e);&#10;-    }&#10;-    throw Components.results.NS_ERROR_ABORT;&#10;-  },&#10;-  onDataAvailable: function(request, context, stream, offset, count) {&#10;-    throw Components.results.NS_ERROR_UNEXPECTED; &#10;-  },&#10;-  onStopRequest: function test_onStopR(request, ctx, status) {&#10;-    switch (testNumber) {&#10;-      case 1:&#10;-        run_test2_JAR_JAR_HTTP();&#10;-        break;&#10;-      case 2:&#10;-        httpserv.stop();&#10;-        break;&#10;-      default:&#10;-        do_throw(&quot;Inconceivable!&quot;);&#10;-    }&#10;-    testNumber++;&#10;-    do_test_finished();&#10;-  }&#10;-};&#10;-&#10;-function run_test()&#10;-{&#10;-  setup_server(); &#10;-&#10;-  test1_JAR_HTTP();&#10;-}&#10;-&#10;-function test1_JAR_HTTP() {&#10;-  var jarChannel1 = &#10;-    makeJARChannel(&quot;jar:http://localhost:4444/foo.jar!/foo.html&quot;);&#10;-  jarChannel1.asyncOpen(listener, null);&#10;-  do_test_pending();&#10;-}&#10;-&#10;-function run_test2_JAR_JAR_HTTP()&#10;-{&#10;-  var jarChannel1 = &#10;-    makeJARChannel(&quot;jar:jar:http://localhost:4444/foo.jar!/bar.jar!/bar.html&quot;);&#10;-  jarChannel1.asyncOpen(listener, null);&#10;-  do_test_pending();&#10;-}&#10;-&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">478901</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Daniel Veditz &lt;dveditz@cruzio.com&gt;  2009-03-01 17:15:25     bug 478901 update to libpng 1.2.35, patch by Glenn Randers-Pehrson, r=Joe Drew, sr=dveditz, blocking=vlad&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libimg/png/CHANGES &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 3f04811..da52eab 100644&#10;@@ -2186,7 +2186,7 @@ version 1.2.30beta03 [July 6, 2008]&#10; version 1.2.30beta04 [July 10, 2008]&#10;   Merged more cosmetic whitespace changes from libpng-1.4.0beta19.&#10; &#10;-version 1.0.38rc01, 1.2.30rc01 [December 18, 2008]&#10;+version 1.0.38rc01, 1.2.30rc01 [July 18, 2008]&#10;   No changes.&#10; &#10; version 1.0.38rc02, 1.2.30rc02 [July 21, 2008]&#10;@@ -2309,6 +2309,25 @@ version 1.0.42rc01, 1.2.34rc01 [December 11, 2008]&#10; version 1.0.42, 1.2.34 [December 18, 2008]&#10;   No changes.&#10; &#10;+version 1.2.35beta01 [February 4, 2009]&#10;+  Zero out some arrays of pointers after png_malloc(). (Tavis Ormandy)&#10;+&#10;+version 1.2.35beta02 [Feburary 4, 2009]&#10;+  Zero out more arrays of pointers after png_malloc().&#10;+&#10;+version 1.2.35beta03 [February 5, 2009]&#10;+  Use png_memset() instead of a loop to intialize pointers.  We realize&#10;+    this will not work on platforms where the NULL pointer is not all zeroes.&#10;+&#10;+version 1.2.35rc01 [February 11, 2009]&#10;+  No changes.&#10;+&#10;+version 1.2.35rc02 [February 12, 2009]&#10;+  Fix typo in new png_memset call in pngset.c (png_color should be png_charp)&#10;+&#10;+version 1.0.43 and 1.2.35 [February 14, 2009]&#10;+  No changes.&#10;+&#10; Send comments/corrections/commendations to png-mng-implement at lists.sf.net&#10; (subscription required; visit&#10; https://lists.sourceforge.net/lists/listinfo/png-mng-implement&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libimg/png/LICENSE &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 4597e13..50b4041 100644&#10;@@ -8,7 +8,7 @@ COPYRIGHT NOTICE, DISCLAIMER, and LICENSE:&#10; If you modify libpng you may insert additional notices immediately following&#10; this sentence.&#10; &#10;-libpng versions 1.2.6, August 15, 2004, through 1.2.34, December 18, 2008, are&#10;+libpng versions 1.2.6, August 15, 2004, through 1.2.35, February 14, 2009, are&#10; Copyright (c) 2004, 2006-2008 Glenn Randers-Pehrson, and are&#10; distributed according to the same disclaimer and license as libpng-1.2.5&#10; with the following individual added to the list of Contributing Authors&#10;@@ -106,4 +106,4 @@ certification mark of the Open Source Initiative.&#10; &#10; Glenn Randers-Pehrson&#10; glennrp at users.sourceforge.net&#10;-December 18, 2008&#10;+February 14, 2009&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libimg/png/MOZCHANGES &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 1201997..1e8af5e 100644&#10;@@ -1,6 +1,8 @@&#10; &#10; Changes made to pristine png source by mozilla.org developers.&#10; &#10;+2009/02/19  &#45;- Synced with libpng-1.2.35 (bug #478901).&#10;+&#10; 2008/08/21  &#45;- Synced with libpng-1.2.31 (bug #418900).&#10; &#10; 2008/03/29  &#45;- Initialize prev_row for each APNG frame, only when&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libimg/png/README &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 3dd92f4..6d57ac4 100644&#10;@@ -1,4 +1,4 @@&#10;-README for libpng version 1.2.34 - December 18, 2008 (shared library 12.0)&#10;+README for libpng version 1.2.35 - February 14, 2009 (shared library 12.0)&#10; See the note about version numbers near the top of png.h&#10; &#10; See INSTALL for instructions on how to install libpng.&#10;@@ -194,11 +194,11 @@ Files in this distribution:&#10;        descrip.mms      =&gt;  VMS makefile for MMS or MMK&#10;        makefile.std     =&gt;  Generic UNIX makefile (cc, creates static libpng.a)&#10;        makefile.elf     =&gt;  Linux/ELF makefile symbol versioning,&#10;-                            gcc, creates libpng12.so.0.1.2.34)&#10;+                            gcc, creates libpng12.so.0.1.2.35)&#10;        makefile.linux   =&gt;  Linux/ELF makefile&#10;-                            (gcc, creates libpng12.so.0.1.2.34)&#10;+                            (gcc, creates libpng12.so.0.1.2.35)&#10;        makefile.gcmmx   =&gt;  Linux/ELF makefile&#10;-                            (gcc, creates libpng12.so.0.1.2.34,&#10;+                            (gcc, creates libpng12.so.0.1.2.35,&#10;                             uses assembler code tuned for Intel MMX platform)&#10;        makefile.gcc     =&gt;  Generic makefile (gcc, creates static libpng.a)&#10;        makefile.knr     =&gt;  Archaic UNIX Makefile that converts files with&#10;@@ -220,12 +220,12 @@ Files in this distribution:&#10;        makefile.openbsd =&gt;  OpenBSD makefile&#10;        makefile.sgi     =&gt;  Silicon Graphics IRIX (cc, creates static lib)&#10;        makefile.sggcc   =&gt;  Silicon Graphics&#10;-                            (gcc, creates libpng12.so.0.1.2.34)&#10;+                            (gcc, creates libpng12.so.0.1.2.35)&#10;        makefile.sunos   =&gt;  Sun makefile&#10;        makefile.solaris =&gt;  Solaris 2.X makefile&#10;-                            (gcc, creates libpng12.so.0.1.2.34)&#10;+                            (gcc, creates libpng12.so.0.1.2.35)&#10;        makefile.so9     =&gt;  Solaris 9 makefile&#10;-                            (gcc, creates libpng12.so.0.1.2.34)&#10;+                            (gcc, creates libpng12.so.0.1.2.35)&#10;        makefile.32sunu  =&gt;  Sun Ultra 32-bit makefile&#10;        makefile.64sunu  =&gt;  Sun Ultra 64-bit makefile&#10;        makefile.sco     =&gt;  For SCO OSr5  ELF and Unixware 7 with Native cc&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libimg/png/libpng.txt &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index f9921aa..4f56736 100644&#10;@@ -1,15 +1,15 @@&#10;   libpng.txt - A description on how to use and modify libpng&#10;   &#10;- libpng version 1.2.34 - December 18, 2008&#10;+ libpng version 1.2.35 - February 14, 2009&#10;  Updated and distributed by Glenn Randers-Pehrson&#10;  &lt;glennrp at users.sourceforge.net&gt;&#10;- Copyright (c) 1998-2008 Glenn Randers-Pehrson&#10;+ Copyright (c) 1998-2009 Glenn Randers-Pehrson&#10;  For conditions of distribution and use, see copyright&#10;  notice in png.h.&#10;   &#10;  Based on:&#10;   &#10;- libpng versions 0.97, January 1998, through 1.2.34 - December 18, 2008&#10;+ libpng versions 0.97, January 1998, through 1.2.35 - February 14, 2009&#10;  Updated and distributed by Glenn Randers-Pehrson&#10;  Copyright (c) 1998-2008 Glenn Randers-Pehrson&#10; &#10;@@ -472,6 +472,8 @@ row_pointers prior to calling png_read_png() with&#10;    row_pointers = png_malloc(png_ptr,&#10;       height*png_sizeof(png_bytep));&#10;    for (int i=0; i&lt;height, i++)&#10;+      row_pointers[i]=NULL;  /* security precaution */&#10;+   for (int i=0; i&lt;height, i++)&#10;       row_pointers[i]=png_malloc(png_ptr,&#10;          width*pixel_size);&#10;    png_set_rows(png_ptr, info_ptr, &amp;row_pointers);&#10;@@ -2851,13 +2853,13 @@ application:&#10; &#10; IX. Y2K Compliance in libpng&#10; &#10;-August 21, 2008&#10;+February 14, 2009&#10; &#10; Since the PNG Development group is an ad-hoc body, we can't make&#10; an official declaration.&#10; &#10; This is your unofficial assurance that libpng from version 0.71 and&#10;-upward through 1.2.31 are Y2K compliant.  It is my belief that earlier&#10;+upward through 1.2.35 are Y2K compliant.  It is my belief that earlier&#10; versions were also Y2K compliant.&#10; &#10; Libpng only has three year fields.  One is a 2-byte unsigned integer that&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libimg/png/png.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index ae78dd3..2f8fcb0 100644&#10;@@ -13,7 +13,7 @@&#10; #include &quot;png.h&quot;&#10; &#10; /* Generate a compiler error if there is an old png.h in the search path. */&#10;-typedef version_1_2_34 Your_png_h_is_not_version_1_2_34;&#10;+typedef version_1_2_35 Your_png_h_is_not_version_1_2_35;&#10; &#10; /* Version information for C files.  This had better match the version&#10;  * string defined in png.h.  */&#10;@@ -697,7 +697,7 @@ png_charp PNGAPI&#10; png_get_copyright(png_structp png_ptr)&#10; {&#10;    png_ptr = png_ptr;  /* silence compiler warning about unused png_ptr */&#10;-   return ((png_charp) &quot;\n libpng version 1.2.34 - December 18, 2008\n\&#10;+   return ((png_charp) &quot;\n libpng version 1.2.35 - February 14, 2009\n\&#10;    Copyright (c) 1998-2008 Glenn Randers-Pehrson\n\&#10;    Copyright (c) 1996-1997 Andreas Dilger\n\&#10;    Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.\n&quot;);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libimg/png/png.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index b9bee0b..969c8e1 100644&#10;@@ -1,14 +1,14 @@&#10; /* png.h - header file for PNG reference library&#10;  *&#10;- * libpng version 1.2.34 - December 18, 2008&#10;- * Copyright (c) 1998-2008 Glenn Randers-Pehrson&#10;+ * libpng version 1.2.35 - February 14, 2009&#10;+ * Copyright (c) 1998-2009 Glenn Randers-Pehrson&#10;  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)&#10;  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)&#10;  *&#10;  * Authors and maintainers:&#10;  *  libpng versions 0.71, May 1995, through 0.88, January 1996: Guy Schalnat&#10;  *  libpng versions 0.89c, June 1996, through 0.96, May 1997: Andreas Dilger&#10;- *  libpng versions 0.97, January 1998, through 1.2.34 - December 18, 2008: Glenn&#10;+ *  libpng versions 0.97, January 1998, through 1.2.35 - February 14, 2009: Glenn&#10;  *  See also &quot;Contributing Authors&quot;, below.&#10;  *&#10;  * Note about libpng version numbers:&#10;@@ -217,6 +217,11 @@&#10;  *    1.2.34rc01              13    10234  12.so.0.34[.0]&#10;  *    1.0.42                  10    10042  10.so.0.42[.0]&#10;  *    1.2.34                  13    10234  12.so.0.34[.0]&#10;+ *    1.2.35beta01-03         13    10235  12.so.0.35[.0]&#10;+ *    1.0.43rc01-02           10    10043  10.so.0.43[.0]&#10;+ *    1.2.35rc01-02           13    10235  12.so.0.35[.0]&#10;+ *    1.0.43                  10    10043  10.so.0.43[.0]&#10;+ *    1.2.35                  13    10235  12.so.0.35[.0]&#10;  *&#10;  *    Henceforth the source version will match the shared-library major&#10;  *    and minor numbers; the shared-library major version number will be&#10;@@ -246,7 +251,7 @@&#10;  * If you modify libpng you may insert additional notices immediately following&#10;  * this sentence.&#10;  *&#10;- * libpng versions 1.2.6, August 15, 2004, through 1.2.34, December 18, 2008, are&#10;+ * libpng versions 1.2.6, August 15, 2004, through 1.2.35, February 14, 2009, are&#10;  * Copyright (c) 2004, 2006-2008 Glenn Randers-Pehrson, and are&#10;  * distributed according to the same disclaimer and license as libpng-1.2.5&#10;  * with the following individual added to the list of Contributing Authors:&#10;@@ -358,13 +363,13 @@&#10;  * Y2K compliance in libpng:&#10;  * =========================&#10;  *&#10;- *    December 18, 2008&#10;+ *    February 14, 2009&#10;  *&#10;  *    Since the PNG Development group is an ad-hoc body, we can't make&#10;  *    an official declaration.&#10;  *&#10;  *    This is your unofficial assurance that libpng from version 0.71 and&#10;- *    upward through 1.2.34 are Y2K compliant.  It is my belief that earlier&#10;+ *    upward through 1.2.35 are Y2K compliant.  It is my belief that earlier&#10;  *    versions were also Y2K compliant.&#10;  *&#10;  *    Libpng only has three year fields.  One is a 2-byte unsigned integer&#10;@@ -420,9 +425,9 @@&#10;  */&#10; &#10; /* Version information for png.h - this should match the version in png.c */&#10;-#define PNG_LIBPNG_VER_STRING &quot;1.2.34&quot;&#10;+#define PNG_LIBPNG_VER_STRING &quot;1.2.35&quot;&#10; #define PNG_HEADER_VERSION_STRING \&#10;-   &quot; libpng version 1.2.34 - December 18, 2008\n&quot;&#10;+   &quot; libpng version 1.2.35 - February 14, 2009\n&quot;&#10; &#10; #define PNG_LIBPNG_VER_SONUM   0&#10; #define PNG_LIBPNG_VER_DLLNUM  13&#10;@@ -430,7 +435,7 @@&#10; /* These should match the first 3 components of PNG_LIBPNG_VER_STRING: */&#10; #define PNG_LIBPNG_VER_MAJOR   1&#10; #define PNG_LIBPNG_VER_MINOR   2&#10;-#define PNG_LIBPNG_VER_RELEASE 34&#10;+#define PNG_LIBPNG_VER_RELEASE 35&#10; /* This should match the numeric part of the final component of&#10;  * PNG_LIBPNG_VER_STRING, omitting any leading zero: */&#10; &#10;@@ -458,7 +463,7 @@&#10;  * Versions 0.7 through 1.0.0 were in the range 0 to 100 here (only&#10;  * version 1.0.0 was mis-numbered 100 instead of 10000).  From&#10;  * version 1.0.1 it's    xxyyzz, where x=major, y=minor, z=release */&#10;-#define PNG_LIBPNG_VER 10234 /* 1.2.34 */&#10;+#define PNG_LIBPNG_VER 10235 /* 1.2.35 */&#10; &#10; #ifndef PNG_VERSION_INFO_ONLY&#10; /* include the compression library's header */&#10;@@ -1534,7 +1539,7 @@ struct png_struct_def&#10; /* This triggers a compiler error in png.c, if png.c and png.h&#10;  * do not agree upon the version number.&#10;  */&#10;-typedef png_structp version_1_2_34;&#10;+typedef png_structp version_1_2_35;&#10; &#10; typedef png_struct FAR * FAR * png_structpp;&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libimg/png/pngconf.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e47d53c..f6a4465 100644&#10;@@ -1,9 +1,9 @@&#10; &#10; /* pngconf.h - machine configurable file for libpng&#10;  *&#10;- * libpng version 1.2.34 - December 18, 2008&#10;+ * libpng version 1.2.35 - February 14, 2009&#10;  * For conditions of distribution and use, see copyright notice in png.h&#10;- * Copyright (c) 1998-2008 Glenn Randers-Pehrson&#10;+ * Copyright (c) 1998-2009 Glenn Randers-Pehrson&#10;  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)&#10;  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)&#10;  */&#10;@@ -235,6 +235,8 @@&#10; #  include &lt;windows.h&gt;&#10;    /* Console I/O functions are not supported on WindowsCE */&#10; #  define PNG_NO_CONSOLE_IO&#10;+   /* abort() may not be supported on some/all Windows CE platforms */&#10;+#  define PNG_ABORT() exit(-1)&#10; #  ifdef PNG_DEBUG&#10; #    undef PNG_DEBUG&#10; #  endif&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libimg/png/pngget.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index f9bb43d..2d74198 100644&#10;@@ -1044,7 +1044,7 @@ png_get_mmx_rowbytes_threshold (png_structp png_ptr)&#10; #endif /* ?PNG_ASSEMBLER_CODE_SUPPORTED */&#10; &#10; #ifdef PNG_SET_USER_LIMITS_SUPPORTED&#10;-/* these functions were added to libpng 1.2.6 */&#10;+/* These functions were added to libpng 1.2.6 */&#10; png_uint_32 PNGAPI&#10; png_get_user_width_max (png_structp png_ptr)&#10; {&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libimg/png/pngread.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index e964e3e..8b8a153 100644&#10;@@ -1,9 +1,9 @@&#10; &#10; /* pngread.c - read a PNG file&#10;  *&#10;- * Last changed in libpng 1.2.30 [August 13, 2008]&#10;+ * Last changed in libpng 1.2.35 [February 14, 2009]&#10;  * For conditions of distribution and use, see copyright notice in png.h&#10;- * Copyright (c) 1998-2008 Glenn Randers-Pehrson&#10;+ * Copyright (c) 1998-2009 Glenn Randers-Pehrson&#10;  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)&#10;  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)&#10;  *&#10;@@ -1577,11 +1577,11 @@ png_read_png(png_structp png_ptr, png_infop info_ptr,&#10; #ifdef PNG_FREE_ME_SUPPORTED&#10;       info_ptr-&gt;free_me |= PNG_FREE_ROWS;&#10; #endif&#10;+      png_memset(info_ptr-&gt;row_pointers, 0, info_ptr-&gt;height&#10;+         * png_sizeof(png_bytep));&#10;       for (row = 0; row &lt; (int)info_ptr-&gt;height; row++)&#10;-      {&#10;          info_ptr-&gt;row_pointers[row] = (png_bytep)png_malloc(png_ptr,&#10;             png_get_rowbytes(png_ptr, info_ptr));&#10;-      }&#10;    }&#10; &#10;    png_read_image(png_ptr, info_ptr-&gt;row_pointers);&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libimg/png/pngrtran.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index f389275..a916f54 100644&#10;@@ -1,9 +1,9 @@&#10; &#10; /* pngrtran.c - transforms the data in a row for PNG readers&#10;  *&#10;- * Last changed in libpng 1.2.30 [August 13, 2008]&#10;+ * Last changed in libpng 1.2.35 [February 14, 2009]&#10;  * For conditions of distribution and use, see copyright notice in png.h&#10;- * Copyright (c) 1998-2008 Glenn Randers-Pehrson&#10;+ * Copyright (c) 1998-2009 Glenn Randers-Pehrson&#10;  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)&#10;  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)&#10;  *&#10;@@ -309,9 +309,7 @@ png_set_dither(png_structp png_ptr, png_colorp palette,&#10; &#10;          hash = (png_dsortpp)png_malloc(png_ptr, (png_uint_32)(769 *&#10;             png_sizeof(png_dsortp)));&#10;-         for (i = 0; i &lt; 769; i++)&#10;-            hash[i] = NULL;&#10;-/*         png_memset(hash, 0, 769 * png_sizeof(png_dsortp)); */&#10;+         png_memset(hash, 0, 769 * png_sizeof(png_dsortp));&#10; &#10;          num_new_palette = num_palette;&#10; &#10;@@ -684,7 +682,7 @@ png_set_rgb_to_gray_fixed(png_structp png_ptr, int error_action,&#10;       }&#10;       png_ptr-&gt;rgb_to_gray_red_coeff   = red_int;&#10;       png_ptr-&gt;rgb_to_gray_green_coeff = green_int;&#10;-      png_ptr-&gt;rgb_to_gray_blue_coeff  = &#10;+      png_ptr-&gt;rgb_to_gray_blue_coeff  =&#10;          (png_uint_16)(32768 - red_int - green_int);&#10;    }&#10; }&#10;@@ -1329,7 +1327,7 @@ png_do_read_transformations(png_structp png_ptr)&#10;       if (rgb_error)&#10;       {&#10;          png_ptr-&gt;rgb_to_gray_status=1;&#10;-         if ((png_ptr-&gt;transformations &amp; PNG_RGB_TO_GRAY) == &#10;+         if ((png_ptr-&gt;transformations &amp; PNG_RGB_TO_GRAY) ==&#10;              PNG_RGB_TO_GRAY_WARN)&#10;             png_warning(png_ptr, &quot;png_do_rgb_to_gray found nongray pixel&quot;);&#10;          if ((png_ptr-&gt;transformations &amp; PNG_RGB_TO_GRAY) ==&#10;@@ -3836,7 +3834,7 @@ png_do_expand(png_row_infop row_info, png_bytep row,&#10;                dp = row + (row_info-&gt;rowbytes &lt;&lt; 1) - 1;&#10;                for (i = 0; i &lt; row_width; i++)&#10;                {&#10;-                  if (*(sp - 1) == gray_high &amp;&amp; *(sp) == gray_low) &#10;+                  if (*(sp - 1) == gray_high &amp;&amp; *(sp) == gray_low)&#10;                   {&#10;                      *dp&#45;- = 0;&#10;                      *dp&#45;- = 0;&#10;@@ -4133,6 +4131,8 @@ png_build_gamma_table(png_structp png_ptr)&#10;         double fin, fout;&#10;         png_uint_32 last, max;&#10; &#10;+        png_memset(png_ptr-&gt;gamma_16_table, 0, num * png_sizeof(png_uint_16p)); &#10;+&#10;         for (i = 0; i &lt; num; i++)&#10;         {&#10;            png_ptr-&gt;gamma_16_table[i] = (png_uint_16p)png_malloc(png_ptr,&#10;@@ -4188,6 +4188,8 @@ png_build_gamma_table(png_structp png_ptr)&#10;         png_ptr-&gt;gamma_16_to_1 = (png_uint_16pp)png_malloc(png_ptr,&#10;            (png_uint_32)(num * png_sizeof(png_uint_16p )));&#10; &#10;+        png_memset(png_ptr-&gt;gamma_16_to_1, 0, num * png_sizeof(png_uint_16p)); &#10;+&#10;         for (i = 0; i &lt; num; i++)&#10;         {&#10;            png_ptr-&gt;gamma_16_to_1[i] = (png_uint_16p)png_malloc(png_ptr,&#10;@@ -4211,6 +4213,9 @@ png_build_gamma_table(png_structp png_ptr)&#10;         png_ptr-&gt;gamma_16_from_1 = (png_uint_16pp)png_malloc(png_ptr,&#10;            (png_uint_32)(num * png_sizeof(png_uint_16p)));&#10; &#10;+        png_memset(png_ptr-&gt;gamma_16_from_1, 0,&#10;+           num * png_sizeof(png_uint_16p)); &#10;+&#10;         for (i = 0; i &lt; num; i++)&#10;         {&#10;            png_ptr-&gt;gamma_16_from_1[i] = (png_uint_16p)png_malloc(png_ptr,&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libimg/png/pngrutil.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 58ae8f9..25d1d27 100644&#10;@@ -1123,6 +1123,7 @@ png_handle_sPLT(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)&#10; &#10;    png_debug(1, &quot;in png_handle_sPLT&quot;);&#10; &#10;+&#10;    if (!(png_ptr-&gt;mode &amp; PNG_HAVE_IHDR))&#10;       png_error(png_ptr, &quot;Missing IHDR before sPLT&quot;);&#10;    else if (png_ptr-&gt;mode &amp; PNG_HAVE_IDAT)&#10;@@ -1909,6 +1910,7 @@ png_handle_tEXt(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)&#10; &#10;    png_debug(1, &quot;in png_handle_tEXt&quot;);&#10; &#10;+&#10;    if (!(png_ptr-&gt;mode &amp; PNG_HAVE_IHDR))&#10;       png_error(png_ptr, &quot;Missing IHDR before tEXt&quot;);&#10; &#10;@@ -1925,6 +1927,7 @@ png_handle_tEXt(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)&#10; #endif&#10; &#10;    png_free(png_ptr, png_ptr-&gt;chunkdata);&#10;+&#10;    png_ptr-&gt;chunkdata = (png_charp)png_malloc_warn(png_ptr, length + 1);&#10;    if (png_ptr-&gt;chunkdata == NULL)&#10;    {&#10;@@ -1942,6 +1945,7 @@ png_handle_tEXt(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)&#10;    }&#10; &#10;    key = png_ptr-&gt;chunkdata;&#10;+&#10;    key[slength] = 0x00;&#10; &#10;    for (text = key; *text; text++)&#10;@@ -1991,6 +1995,8 @@ png_handle_zTXt(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)&#10;    png_size_t slength, prefix_len, data_len;&#10; &#10;    png_debug(1, &quot;in png_handle_zTXt&quot;);&#10;+&#10;+&#10;    if (!(png_ptr-&gt;mode &amp; PNG_HAVE_IHDR))&#10;       png_error(png_ptr, &quot;Missing IHDR before zTXt&quot;);&#10; &#10;@@ -2095,6 +2101,7 @@ png_handle_iTXt(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)&#10; &#10;    png_debug(1, &quot;in png_handle_iTXt&quot;);&#10; &#10;+&#10;    if (!(png_ptr-&gt;mode &amp; PNG_HAVE_IHDR))&#10;       png_error(png_ptr, &quot;Missing IHDR before iTXt&quot;);&#10; &#10;@@ -2383,6 +2390,7 @@ png_handle_unknown(png_structp png_ptr, png_infop info_ptr, png_uint_32 length)&#10; &#10;    png_debug(1, &quot;in png_handle_unknown&quot;);&#10; &#10;+&#10;    if (png_ptr-&gt;mode &amp; PNG_HAVE_IDAT)&#10;    {&#10; #ifdef PNG_USE_LOCAL_ARRAYS&#10;@@ -3371,9 +3379,9 @@ defined(PNG_USER_TRANSFORM_PTR_SUPPORTED)&#10;    png_debug1(3, &quot;width = %lu,&quot;, png_ptr-&gt;width);&#10;    png_debug1(3, &quot;height = %lu,&quot;, png_ptr-&gt;height);&#10;    png_debug1(3, &quot;iwidth = %lu,&quot;, png_ptr-&gt;iwidth);&#10;-   png_debug1(3, &quot;num_rows = %lu&quot;, png_ptr-&gt;num_rows);&#10;+   png_debug1(3, &quot;num_rows = %lu,&quot;, png_ptr-&gt;num_rows);&#10;    png_debug1(3, &quot;rowbytes = %lu,&quot;, png_ptr-&gt;rowbytes);&#10;-   png_debug1(3, &quot;irowbytes = %lu,&quot;, png_ptr-&gt;irowbytes);&#10;+   png_debug1(3, &quot;irowbytes = %lu&quot;, png_ptr-&gt;irowbytes);&#10; &#10;    png_ptr-&gt;flags |= PNG_FLAG_ROW_INIT;&#10; }&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libimg/png/pngset.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 1e303fb..77fbc7c 100644&#10;@@ -1,9 +1,9 @@&#10; &#10; /* pngset.c - storage of image information into info struct&#10;  *&#10;- * Last changed in libpng 1.2.34 [December 18, 2008]&#10;+ * Last changed in libpng 1.2.35 [February 14, 2009]&#10;  * For conditions of distribution and use, see copyright notice in png.h&#10;- * Copyright (c) 1998-2008 Glenn Randers-Pehrson&#10;+ * Copyright (c) 1998-2009 Glenn Randers-Pehrson&#10;  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)&#10;  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)&#10;  *&#10;@@ -61,7 +61,8 @@ png_set_cHRM(png_structp png_ptr, png_infop info_ptr,&#10; #endif&#10;    info_ptr-&gt;valid |= PNG_INFO_cHRM;&#10; }&#10;-#endif&#10;+#endif /* PNG_FLOATING_POINT_SUPPORTED */&#10;+&#10; #ifdef PNG_FIXED_POINT_SUPPORTED&#10; void PNGAPI&#10; png_set_cHRM_fixed(png_structp png_ptr, png_infop info_ptr,&#10;@@ -387,7 +388,11 @@ png_set_pCAL(png_structp png_ptr, png_infop info_ptr,&#10;       return;&#10;    }&#10; &#10;-   info_ptr-&gt;pcal_params[nparams] = NULL;&#10;+#ifdef PNG_FREE_ME_SUPPORTED&#10;+   info_ptr-&gt;free_me |= PNG_FREE_PCAL;&#10;+#endif&#10;+&#10;+   png_memset(info_ptr-&gt;pcal_params, 0, (nparams + 1) * png_sizeof(png_charp));&#10; &#10;    for (i = 0; i &lt; nparams; i++)&#10;    {&#10;@@ -404,9 +409,6 @@ png_set_pCAL(png_structp png_ptr, png_infop info_ptr,&#10;    }&#10; &#10;    info_ptr-&gt;valid |= PNG_INFO_pCAL;&#10;-#ifdef PNG_FREE_ME_SUPPORTED&#10;-   info_ptr-&gt;free_me |= PNG_FREE_PCAL;&#10;-#endif&#10; }&#10; #endif&#10; &#10;@@ -640,7 +642,7 @@ png_set_sRGB_gAMA_and_cHRM(png_structp png_ptr, png_infop info_ptr,&#10;    }&#10; #endif /* cHRM */&#10; }&#10;-#endif&#10;+#endif /* sRGB */&#10; &#10; &#10; #if defined(PNG_iCCP_SUPPORTED)&#10;@@ -964,6 +966,7 @@ png_set_sPLT(png_structp png_ptr,&#10; &#10;     png_memcpy(np, info_ptr-&gt;splt_palettes,&#10;            info_ptr-&gt;splt_palettes_num * png_sizeof(png_sPLT_t));&#10;+&#10;     png_free(png_ptr, info_ptr-&gt;splt_palettes);&#10;     info_ptr-&gt;splt_palettes=NULL;&#10; &#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libimg/png/pngwio.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 3c008c3..52eb7c0 100644&#10;@@ -1,9 +1,9 @@&#10; &#10; /* pngwio.c - functions for data output&#10;  *&#10;- * Last changed in libpng 1.2.30 [August 13, 2008]&#10;+ * Last changed in libpng 1.2.35 [February 14, 2009]&#10;  * For conditions of distribution and use, see copyright notice in png.h&#10;- * Copyright (c) 1998-2008 Glenn Randers-Pehrson&#10;+ * Copyright (c) 1998-2009 Glenn Randers-Pehrson&#10;  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)&#10;  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)&#10;  *&#10;@@ -137,7 +137,7 @@ png_default_flush(png_structp png_ptr)&#10;    if (png_ptr == NULL) return;&#10; #if !defined(_WIN32_WCE)&#10;    io_ptr = (png_FILE_p)CVT_PTR((png_ptr-&gt;io_ptr));&#10;-   if (io_ptr != NULL)&#10;+   if (io_ptr != NULL &amp;&amp; fileno(io_ptr) != -1)&#10;       fflush(io_ptr);&#10; #endif&#10; }&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- modules/libimg/png/pngwrite.c &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 0ef89a1..b03753b 100644&#10;@@ -1,7 +1,7 @@&#10; &#10; /* pngwrite.c - general routines to write a PNG file&#10;  *&#10;- * Last changed in libpng 1.2.31 [August 19, 2008]&#10;+ * Last changed in libpng 1.2.34 [December 18, 2008]&#10;  * For conditions of distribution and use, see copyright notice in png.h&#10;  * Copyright (c) 1998-2008 Glenn Randers-Pehrson&#10;  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">484031</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Boris Zbarsky &lt;bzbarsky@mit.edu&gt;  2009-03-30 23:23:14       Bug 484031.  Be a bit more careful with ContentAppended.  r+sr=roc&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- layout/base/nsCSSFrameConstructor.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index f0bd4c4..3e5ac5d 100644&#10;@@ -6100,6 +6100,13 @@ nsCSSFrameConstructor::ContentAppended(nsIContent*     aContainer,&#10;       // ContentInserted will ignore the passed-in index.&#10;       PRUint32 containerCount = aContainer-&gt;GetChildCount();&#10;       for (PRUint32 i = aNewIndexInContainer; i &lt; containerCount; i++) {&#10;+        nsIContent* content = aContainer-&gt;GetChildAt(i);&#10;+        if (mPresShell-&gt;GetPrimaryFrameFor(content)) {&#10;+          // Already have a frame for this content; a previous ContentInserted&#10;+          // in this loop must have reconstructed its insertion parent.  Skip&#10;+          // it.&#10;+          continue;&#10;+        }&#10;         LAYOUT_PHASE_TEMP_EXIT();&#10;         // Call ContentInserted with this index.&#10;         ContentInserted(aContainer, aContainer-&gt;GetChildAt(i), i,&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Boris Zbarsky &lt;bzbarsky@mit.edu&gt;  2009-03-31 06:04:29        Backing out revision 6a8a88c62925 (bug 484031) on suspicion of causing a Tp increase&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- layout/base/nsCSSFrameConstructor.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 7035ec1..9558f95 100644&#10;@@ -6100,13 +6100,6 @@ nsCSSFrameConstructor::ContentAppended(nsIContent*     aContainer,&#10;       // ContentInserted will ignore the passed-in index.&#10;       PRUint32 containerCount = aContainer-&gt;GetChildCount();&#10;       for (PRUint32 i = aNewIndexInContainer; i &lt; containerCount; i++) {&#10;-        nsIContent* content = aContainer-&gt;GetChildAt(i);&#10;-        if (mPresShell-&gt;GetPrimaryFrameFor(content)) {&#10;-          // Already have a frame for this content; a previous ContentInserted&#10;-          // in this loop must have reconstructed its insertion parent.  Skip&#10;-          // it.&#10;-          continue;&#10;-        }&#10;         LAYOUT_PHASE_TEMP_EXIT();&#10;         // Call ContentInserted with this index.&#10;         ContentInserted(aContainer, aContainer-&gt;GetChildAt(i), i,&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Boris Zbarsky &lt;bzbarsky@mit.edu&gt;  2009-04-01 02:21:39      Use the local instead of making another virtual  function call.  Followup for bug 484031&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- layout/base/nsCSSFrameConstructor.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 87f14d6..89b0b8d 100644&#10;@@ -6111,8 +6111,7 @@ nsCSSFrameConstructor::ContentAppended(nsIContent*     aContainer,&#10;         }&#10;         LAYOUT_PHASE_TEMP_EXIT();&#10;         // Call ContentInserted with this index.&#10;-        ContentInserted(aContainer, aContainer-&gt;GetChildAt(i), i,&#10;-                        mTempFrameTreeState);&#10;+        ContentInserted(aContainer, content, i, mTempFrameTreeState);&#10;         LAYOUT_PHASE_TEMP_REENTER();&#10;       }&#10; &#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">479880</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: Jason Duell &lt;jduell.mcbugs@gmail.com&gt;  2009-04-24 03:49:32     Bug 479880.  Prevent failed SSL tunnel replies from being interpreted: replace with boilerplate error pages.  r=jwalden, sr=bzbarsky&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/protocol/http/src/nsHttpChannel.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 6076b2b..47f08fe 100644&#10;@@ -853,6 +853,71 @@ nsHttpChannel::CallOnStartRequest()&#10; }&#10; &#10; nsresult&#10;+nsHttpChannel::ProcessFailedSSLConnect(PRUint32 httpStatus)&#10;+{&#10;+    // Failure to set up SSL proxy tunnel means one of the following:&#10;+    // 1) Proxy wants authorization, or forbids.&#10;+    // 2) DNS at proxy couldn't resolve target URL.&#10;+    // 3) Proxy connection to target failed or timed out.&#10;+    // 4) Eve noticed our proxy CONNECT, and is replying with malicious HTML.&#10;+    // &#10;+    // Our current architecture will parse response content with the&#10;+    // permission of the target URL!  Given #4, we must avoid rendering the&#10;+    // body of the reply, and instead give the user a (hopefully helpful) &#10;+    // boilerplate error page, based on just the HTTP status of the reply.&#10;+&#10;+    NS_ABORT_IF_FALSE(mConnectionInfo-&gt;UsingSSL(),&#10;+                      &quot;SSL connect failed but not using SSL?&quot;);&#10;+    nsresult rv;&#10;+    switch (httpStatus) &#10;+    {&#10;+    case 403: // HTTP/1.1: &quot;Forbidden&quot;&#10;+    case 407: // ProcessAuthentication() failed&#10;+    case 501: // HTTP/1.1: &quot;Not Implemented&quot;&#10;+        // user sees boilerplate Mozilla &quot;Proxy Refused Connection&quot; page.&#10;+        rv = NS_ERROR_PROXY_CONNECTION_REFUSED; &#10;+        break;&#10;+    // Squid sends 404 if DNS fails (regular 404 from target is tunneled)&#10;+    case 404: // HTTP/1.1: &quot;Not Found&quot;&#10;+    // RFC 2616: &quot;some deployed proxies are known to return 400 or 500 when&#10;+    // DNS lookups time out.&quot;  (Squid uses 500 if it runs out of sockets: so&#10;+    // we have a conflict here).&#10;+    case 400: // HTTP/1.1 &quot;Bad Request&quot;&#10;+    case 500: // HTTP/1.1: &quot;Internal Server Error&quot;&#10;+        /* User sees: &quot;Address Not Found: Firefox can't find the server at&#10;+         * www.foo.com.&quot;&#10;+         */&#10;+        rv = NS_ERROR_UNKNOWN_HOST; &#10;+        break;&#10;+    case 502: // HTTP/1.1: &quot;Bad Gateway&quot; (invalid resp from target server)&#10;+    // Squid returns 503 if target request fails for anything but DNS.&#10;+    case 503: // HTTP/1.1: &quot;Service Unavailable&quot;&#10;+        /* User sees: &quot;Failed to Connect:&#10;+         *  Firefox can't establish a connection to the server at&#10;+         *  www.foo.com.  Though the site seems valid, the browser&#10;+         *  was unable to establish a connection.&quot;&#10;+         */&#10;+        rv = NS_ERROR_CONNECTION_REFUSED;&#10;+        break;&#10;+    // RFC 2616 uses 504 for both DNS and target timeout, so not clear what to&#10;+    // do here: picking target timeout, as DNS covered by 400/404/500&#10;+    case 504: // HTTP/1.1: &quot;Gateway Timeout&quot; &#10;+        // user sees: &quot;Network Timeout: The server at www.foo.com&#10;+        //              is taking too long to respond.&quot;&#10;+        rv = NS_ERROR_NET_TIMEOUT;&#10;+        break;&#10;+    // Confused proxy server or malicious response&#10;+    default:&#10;+        rv = NS_ERROR_PROXY_CONNECTION_REFUSED; &#10;+        break;&#10;+    }&#10;+    LOG((&quot;Cancelling failed SSL proxy connection [this=%x httpStatus=%u]\n&quot;,&#10;+         this, httpStatus)); &#10;+    Cancel(rv);&#10;+    return rv;&#10;+}&#10;+&#10;+nsresult&#10; nsHttpChannel::ProcessResponse()&#10; {&#10;     nsresult rv;&#10;@@ -861,6 +926,9 @@ nsHttpChannel::ProcessResponse()&#10;     LOG((&quot;nsHttpChannel::ProcessResponse [this=%x httpStatus=%u]\n&quot;,&#10;         this, httpStatus));&#10; &#10;+    if (mTransaction-&gt;SSLConnectFailed() &amp;&amp; httpStatus != 407)&#10;+        return ProcessFailedSSLConnect(httpStatus);&#10;+&#10;     // notify &quot;http-on-examine-response&quot; observers&#10;     gHttpHandler-&gt;OnExamineResponse(this);&#10; &#10;@@ -947,6 +1015,8 @@ nsHttpChannel::ProcessResponse()&#10;         rv = ProcessAuthentication(httpStatus);&#10;         if (NS_FAILED(rv)) {&#10;             LOG((&quot;ProcessAuthentication failed [rv=%x]\n&quot;, rv));&#10;+            if (mTransaction-&gt;SSLConnectFailed())&#10;+                return ProcessFailedSSLConnect(httpStatus);&#10;             CheckForSuperfluousAuth();&#10;             rv = ProcessNormal();&#10;         }&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- netwerk/protocol/http/src/nsHttpChannel.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index a3523af..f3a6dcd 100644&#10;@@ -172,6 +172,7 @@ private:&#10;     nsresult ProcessNormal();&#10;     nsresult ProcessNotModified();&#10;     nsresult ProcessRedirection(PRUint32 httpStatus);&#10;+    nsresult ProcessFailedSSLConnect(PRUint32 httpStatus);&#10;     nsresult ProcessAuthentication(PRUint32 httpStatus);&#10;     nsresult ProcessFallback(PRBool *fallingBack);&#10;     PRBool   ResponseWouldVary();&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">522430</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: Blake Kaplan &lt;mrbkap@gmail.com&gt;  2009-10-21 08:22:16     Bug 522430 - Don't hand out unexpected objects. r=jst sr=sicking&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/base/nsGlobalWindow.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 12dfe2e..fe37c4e 100644&#10;@@ -2959,7 +2959,7 @@ nsGlobalWindow::GetOpener(nsIDOMWindowInternal** aOpener)&#10; &#10;   *aOpener = nsnull;&#10; &#10;-  nsCOMPtr&lt;nsIDOMWindowInternal&gt; opener = do_QueryReferent(mOpener);&#10;+  nsCOMPtr&lt;nsPIDOMWindow&gt; opener = do_QueryReferent(mOpener);&#10;   if (!opener) {&#10;     return NS_OK;&#10;   }&#10;@@ -2970,27 +2970,36 @@ nsGlobalWindow::GetOpener(nsIDOMWindowInternal** aOpener)&#10;     return NS_OK;&#10;   }&#10; &#10;+  nsCOMPtr&lt;nsPIDOMWindow&gt; openerPwin(do_QueryInterface(opener));&#10;+  if (!openerPwin) {&#10;+    return NS_OK;&#10;+  }&#10;+&#10;+  // First, ensure that we're not handing back a chrome window.&#10;+  nsGlobalWindow *win = static_cast&lt;nsGlobalWindow *&gt;(openerPwin.get());&#10;+  if (win-&gt;IsChromeWindow()) {&#10;+    return NS_OK;&#10;+  }&#10;+&#10;   // We don't want to reveal the opener if the opener is a mail window,&#10;   // because opener can be used to spoof the contents of a message (bug 105050).&#10;   // So, we look in the opener's root docshell to see if it's a mail window.&#10;-  nsCOMPtr&lt;nsPIDOMWindow&gt; openerPwin(do_QueryInterface(opener));&#10;-  if (openerPwin) {&#10;-    nsCOMPtr&lt;nsIDocShellTreeItem&gt; docShellAsItem =&#10;-      do_QueryInterface(openerPwin-&gt;GetDocShell());&#10;-&#10;-    if (docShellAsItem) {&#10;-      nsCOMPtr&lt;nsIDocShellTreeItem&gt; openerRootItem;&#10;-      docShellAsItem-&gt;GetRootTreeItem(getter_AddRefs(openerRootItem));&#10;-      nsCOMPtr&lt;nsIDocShell&gt; openerRootDocShell(do_QueryInterface(openerRootItem));&#10;-      if (openerRootDocShell) {&#10;-        PRUint32 appType;&#10;-        nsresult rv = openerRootDocShell-&gt;GetAppType(&amp;appType);&#10;-        if (NS_SUCCEEDED(rv) &amp;&amp; appType != nsIDocShell::APP_TYPE_MAIL) {&#10;-          *aOpener = opener;&#10;-        }&#10;+  nsCOMPtr&lt;nsIDocShellTreeItem&gt; docShellAsItem =&#10;+    do_QueryInterface(openerPwin-&gt;GetDocShell());&#10;+&#10;+  if (docShellAsItem) {&#10;+    nsCOMPtr&lt;nsIDocShellTreeItem&gt; openerRootItem;&#10;+    docShellAsItem-&gt;GetRootTreeItem(getter_AddRefs(openerRootItem));&#10;+    nsCOMPtr&lt;nsIDocShell&gt; openerRootDocShell(do_QueryInterface(openerRootItem));&#10;+    if (openerRootDocShell) {&#10;+      PRUint32 appType;&#10;+      nsresult rv = openerRootDocShell-&gt;GetAppType(&amp;appType);&#10;+      if (NS_SUCCEEDED(rv) &amp;&amp; appType != nsIDocShell::APP_TYPE_MAIL) {&#10;+        *aOpener = opener;&#10;       }&#10;     }&#10;   }&#10;+&#10;   NS_IF_ADDREF(*aOpener);&#10;   return NS_OK;&#10; }&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: Blake Kaplan &lt;mrbkap@gmail.com&gt;  2009-10-21 08:22:16    Bug 522430 - Assert that this bad case doesn't happen. r=jst&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/base/nsDOMClassInfo.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 2ad3e87..24a5b93 100644&#10;@@ -4540,6 +4540,23 @@ NS_IMETHODIMP&#10; nsWindowSH::PreCreate(nsISupports *nativeObj, JSContext *cx,&#10;                       JSObject *globalObj, JSObject **parentObj)&#10; {&#10;+#ifdef DEBUG&#10;+  {&#10;+    nsGlobalWindow *win = nsGlobalWindow::FromSupports(nativeObj);&#10;+    if (win-&gt;IsChromeWindow()) {&#10;+      nsCOMPtr&lt;nsIPrincipal&gt; principal;&#10;+      nsresult rv =&#10;+        sSecMan-&gt;GetObjectPrincipal(cx, globalObj, getter_AddRefs(principal));&#10;+      if (NS_SUCCEEDED(rv)) {&#10;+        PRBool isSystem;&#10;+        rv = sSecMan-&gt;IsSystemPrincipal(principal, &amp;isSystem);&#10;+        NS_ASSERTION(NS_SUCCEEDED(rv) &amp;&amp; isSystem,&#10;+                     &quot;Why are we wrapping a chrome window in a content scope?&quot;);&#10;+      }&#10;+    }&#10;+  }&#10;+#endif&#10;+&#10;   // Normally ::PreCreate() is used to give XPConnect the parent&#10;   // object for the object that's being wrapped, this parent object is&#10;   // set as the parent of the wrapper and it's also used to find the&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">531364</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: Blake Kaplan &lt;mrbkap@gmail.com&gt;  2009-12-18 08:21:57        Bug 531364 - Change up the order of these calls. r=peterv sr=bzbarsky&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/base/nsDOMClassInfo.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 050d829..c6181fc 100644&#10;@@ -7415,8 +7415,6 @@ nsEventReceiverSH::AddEventListenerHelper(JSContext *cx, JSObject *obj,&#10;     return JS_FALSE;&#10;   }&#10; &#10;-  OBJ_TO_INNER_OBJECT(cx, obj);&#10;-&#10;   nsresult rv = sXPConnect-&gt;GetJSObjectOfWrapper(cx, obj, &amp;obj);&#10;   if (NS_FAILED(rv)) {&#10;     nsDOMClassInfo::ThrowJSException(cx, rv);&#10;@@ -7424,6 +7422,11 @@ nsEventReceiverSH::AddEventListenerHelper(JSContext *cx, JSObject *obj,&#10;     return JS_FALSE;&#10;   }&#10; &#10;+  OBJ_TO_INNER_OBJECT(cx, obj);&#10;+  if (!obj) {&#10;+    return JS_FALSE;&#10;+  }&#10;+&#10;   // Check that the caller has permission to call obj's addEventListener.&#10;   if (NS_FAILED(sSecMan-&gt;CheckPropertyAccess(cx, obj,&#10;                                              JS_GET_CLASS(cx, obj)-&gt;name,&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Blake Kaplan &lt;mrbkap@gmail.com&gt;  2010-01-06 07:03:04           Bug 531364 - Add a function call here. r=peterv sr=bzbarsky&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- js/src/xpconnect/src/xpccomponents.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index a459ae7..8b1e2ff 100644&#10;@@ -2808,8 +2808,13 @@ nsXPCComponents_Utils::LookupMethod()&#10;         return NS_ERROR_XPC_BAD_CONVERT_JS;&#10; &#10;     JSObject* obj = JSVAL_TO_OBJECT(argv[0]);&#10;+    rv = nsXPConnect::GetXPConnect()-&gt;GetJSObjectOfWrapper(cx, obj, &amp;obj);&#10;+    if(NS_FAILED(rv))&#10;+        return rv;&#10; &#10;     OBJ_TO_INNER_OBJECT(cx, obj);&#10;+    if(!obj)&#10;+        return NS_ERROR_XPC_BAD_CONVERT_JS;&#10; &#10;     // second param must be a string&#10;     if(!JSVAL_IS_STRING(argv[1]))&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">541530</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Blake Kaplan &lt;mrbkap@gmail.com&gt;  2010-03-05 05:44:42       Fix bug 541530. r=jst sr=brendan&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/base/nsDOMClassInfo.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index cdfea4c..207fd95 100644&#10;@@ -584,7 +584,8 @@ static nsDOMClassInfoData sClassInfoData[] = {&#10;                            WINDOW_SCRIPTABLE_FLAGS)&#10; &#10;   NS_DEFINE_CLASSINFO_DATA(Location, nsLocationSH,&#10;-                           DOM_DEFAULT_SCRIPTABLE_FLAGS)&#10;+                           (DOM_DEFAULT_SCRIPTABLE_FLAGS &amp;&#10;+                            ~nsIXPCScriptable::ALLOW_PROP_MODS_TO_PROTOTYPE))&#10; &#10;   NS_DEFINE_CLASSINFO_DATA(Navigator, nsNavigatorSH,&#10;                            DOM_DEFAULT_SCRIPTABLE_FLAGS |&#10;@@ -6538,7 +6539,10 @@ nsWindowSH::NewResolve(nsIXPConnectWrappedNative *wrapper, JSContext *cx,&#10; &#10;     JSBool ok = ::JS_DefineUCProperty(cx, obj, ::JS_GetStringChars(str),&#10;                                       ::JS_GetStringLength(str), v, nsnull,&#10;-                                      nsnull, JSPROP_ENUMERATE);&#10;+                                      nsnull,&#10;+                                      JSPROP_PERMANENT |&#10;+                                      JSPROP_READONLY |&#10;+                                      JSPROP_ENUMERATE);&#10; &#10;     if (!ok) {&#10;       return NS_ERROR_FAILURE;&#10;@@ -8155,7 +8159,10 @@ nsDocumentSH::NewResolve(nsIXPConnectWrappedNative *wrapper, JSContext *cx,&#10;     JSString *str = JSVAL_TO_STRING(id);&#10;     JSBool ok = ::JS_DefineUCProperty(cx, obj, ::JS_GetStringChars(str),&#10;                                       ::JS_GetStringLength(str), v, nsnull,&#10;-                                      nsnull, JSPROP_ENUMERATE);&#10;+                                      nsnull,&#10;+                                      JSPROP_PERMANENT |&#10;+                                      JSPROP_READONLY |&#10;+                                      JSPROP_ENUMERATE);&#10; &#10;     if (!ok) {&#10;       return NS_ERROR_FAILURE;&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Blake Kaplan &lt;mrbkap@gmail.com&gt;  2010-03-05 09:25:44        Fix build bustage from bug 541530.&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/base/nsDOMClassInfo.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 207fd95..ecc4a19 100644&#10;@@ -6541,7 +6541,6 @@ nsWindowSH::NewResolve(nsIXPConnectWrappedNative *wrapper, JSContext *cx,&#10;                                       ::JS_GetStringLength(str), v, nsnull,&#10;                                       nsnull,&#10;                                       JSPROP_PERMANENT |&#10;-                                      JSPROP_READONLY |&#10;                                       JSPROP_ENUMERATE);&#10; &#10;     if (!ok) {&#10;@@ -8161,7 +8160,6 @@ nsDocumentSH::NewResolve(nsIXPConnectWrappedNative *wrapper, JSContext *cx,&#10;                                       ::JS_GetStringLength(str), v, nsnull,&#10;                                       nsnull,&#10;                                       JSPROP_PERMANENT |&#10;-                                      JSPROP_READONLY |&#10;                                       JSPROP_ENUMERATE);&#10; &#10;     if (!ok) {&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s74"><Data ss:Type="String">Author: Robert O'Callahan &lt;robert@ocallahan.org&gt;  2010-03-05 15:19:48    Backing out fix for bug 541530 to fix test failure</Data></Cell>
    <Cell ss:StyleID="s74"><Data ss:Type="String">Author: Robert O'Callahan &lt;robert@ocallahan.org&gt;  2010-03-05 15:28:26     Backing out fix for bug 541530 to fix test failure (CLOSED TREE)</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Blake Kaplan &lt;mrbkap@gmail.com&gt;  2010-03-05 05:44:42     Fix bug 541530. r=jst sr=brendan&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/base/nsDOMClassInfo.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index cdfea4c..ecc4a19 100644&#10;@@ -584,7 +584,8 @@ static nsDOMClassInfoData sClassInfoData[] = {&#10;                            WINDOW_SCRIPTABLE_FLAGS)&#10; &#10;   NS_DEFINE_CLASSINFO_DATA(Location, nsLocationSH,&#10;-                           DOM_DEFAULT_SCRIPTABLE_FLAGS)&#10;+                           (DOM_DEFAULT_SCRIPTABLE_FLAGS &amp;&#10;+                            ~nsIXPCScriptable::ALLOW_PROP_MODS_TO_PROTOTYPE))&#10; &#10;   NS_DEFINE_CLASSINFO_DATA(Navigator, nsNavigatorSH,&#10;                            DOM_DEFAULT_SCRIPTABLE_FLAGS |&#10;@@ -6538,7 +6539,9 @@ nsWindowSH::NewResolve(nsIXPConnectWrappedNative *wrapper, JSContext *cx,&#10; &#10;     JSBool ok = ::JS_DefineUCProperty(cx, obj, ::JS_GetStringChars(str),&#10;                                       ::JS_GetStringLength(str), v, nsnull,&#10;-                                      nsnull, JSPROP_ENUMERATE);&#10;+                                      nsnull,&#10;+                                      JSPROP_PERMANENT |&#10;+                                      JSPROP_ENUMERATE);&#10; &#10;     if (!ok) {&#10;       return NS_ERROR_FAILURE;&#10;@@ -8155,7 +8158,9 @@ nsDocumentSH::NewResolve(nsIXPConnectWrappedNative *wrapper, JSContext *cx,&#10;     JSString *str = JSVAL_TO_STRING(id);&#10;     JSBool ok = ::JS_DefineUCProperty(cx, obj, ::JS_GetStringChars(str),&#10;                                       ::JS_GetStringLength(str), v, nsnull,&#10;-                                      nsnull, JSPROP_ENUMERATE);&#10;+                                      nsnull,&#10;+                                      JSPROP_PERMANENT |&#10;+                                      JSPROP_ENUMERATE);&#10; &#10;     if (!ok) {&#10;       return NS_ERROR_FAILURE;&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/tests/mochitest/bugs/Makefile.in &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 8b8750a..6d6a250 100644&#10;@@ -107,8 +107,6 @@ _TEST_FILES = \&#10;   grandchild_bug260264.html \&#10;   utils_bug260264.js \&#10;   test_bug531176.html \&#10;-  test_bug534362.html \&#10;-  iframe_bug534362.html \&#10;   test_bug531542.html \&#10;   test_bug456151.html \&#10;   $(NULL)&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/tests/mochitest/bugs/test_bug534362.html &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;deleted file mode 100644&#10;index 2b60bf6..0000000&#10;@@ -1,44 +0,0 @@&#10;-&lt;!DOCTYPE HTML&gt;&#10;-&lt;html&gt;&#10;-&lt;!&#45;-&#10;-https://bugzilla.mozilla.org/show_bug.cgi?id=534362&#10;&#45;&#45;-&gt;&#10;-&lt;head&gt;&#10;-  &lt;title&gt;Test for Bug 534362&lt;/title&gt;&#10;-  &lt;script type=&quot;application/javascript&quot; src=&quot;/MochiKit/packed.js&quot;&gt;&lt;/script&gt;&#10;-  &lt;script type=&quot;application/javascript&quot; src=&quot;/tests/SimpleTest/SimpleTest.js&quot;&gt;&lt;/script&gt;&#10;-  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/tests/SimpleTest/test.css&quot;/&gt;&#10;-&lt;/head&gt;&#10;-&lt;body&gt;&#10;-&lt;a target=&quot;_blank&quot; href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=534362&quot;&gt;Mozilla Bug 534362&lt;/a&gt;&#10;-&lt;p id=&quot;display&quot;&gt;&lt;/p&gt;&#10;-&lt;div id=&quot;content&quot; style=&quot;display: none&quot;&gt;&#10;-  &lt;iframe src=&quot;http://example.org/tests/dom/tests/mochitest/bugs/iframe_bug534362.html&quot; name=&quot;testFrame&quot; onload=&quot;changeLocation();&quot;&gt;&lt;/iframe&gt;&#10;-&lt;/div&gt;&#10;-&lt;pre id=&quot;test&quot;&gt;&#10;-&lt;script type=&quot;application/javascript&quot;&gt;&#10;-&#10;-/** Test for Bug 534362 **/&#10;-&#10;-function checkSetterCalled(called, shouldCall)&#10;-{&#10;-  is(called, shouldCall, &quot;Setter &quot; + (called ? &quot;&quot; : &quot;not &quot;) + &quot;called.&quot;);&#10;-  if (!shouldCall) {&#10;-    SimpleTest.finish();&#10;-  }&#10;-}&#10;-&#10;-function changeLocation()&#10;-{&#10;-  checkSetterCalled(setterCalled, true);&#10;-  setterCalled = false;&#10;-  frames[&quot;testFrame&quot;].location.href = &quot;javascript:&quot;;&#10;-  checkSetterCalled(setterCalled, false);&#10;-}&#10;-&#10;-SimpleTest.waitForExplicitFinish();&#10;-&#10;-&lt;/script&gt;&#10;-&lt;/pre&gt;&#10;-&lt;/body&gt;&#10;-&lt;/html&gt;&#10;&#10;</Data></Cell>
    <Cell ss:StyleID="s65"><Data ss:Type="String">Author: Blake Kaplan &lt;mrbkap@gmail.com&gt;  2010-11-10 04:29:41     Add a test for bug 541530. a=tests&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/tests/mochitest/bugs/Makefile.in &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index a8d6e8c..002223d 100644&#10;@@ -112,6 +112,7 @@ _TEST_FILES = \&#10;   test_bug531542.html \&#10;   test_bug456151.html \&#10;   test_bug534149.html \&#10;+  test_bug541530.html \&#10;   test_bug558973.html \&#10;   test_bug563487.html \&#10;   test_bug545314.html \&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- dom/tests/mochitest/bugs/test_bug541530.html &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..5358a53&#10;@@ -0,0 +1,81 @@&#10;+&lt;!DOCTYPE html&gt;&#10;+&lt;html&gt;&#10;+&lt;!&#45;-&#10;+https://bugzilla.mozilla.org/show_bug.cgi?id=541530&#10;+&#45;-&gt;&#10;+&lt;head&gt;&#10;+  &lt;title&gt;Test for Bug 411103&lt;/title&gt;&#10;+  &lt;script type=&quot;text/javascript&quot; src=&quot;/MochiKit/packed.js&quot;&gt;&lt;/script&gt;&#10;+  &lt;script type=&quot;text/javascript&quot; src=&quot;/tests/SimpleTest/SimpleTest.js&quot;&gt;&lt;/script&gt;&#10;+  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/tests/SimpleTest/test.css&quot; /&gt;&#10;+&lt;/head&gt;&#10;+&lt;body&gt;&#10;+&lt;a target=&quot;_blank&quot; href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=541530&quot;&gt;Mozilla Bug 541530&lt;/a&gt;&#10;+&lt;p id=&quot;display&quot;&gt;&lt;/p&gt;&#10;+&lt;div id=&quot;content&quot; style=&quot;display: none&quot;&gt;&lt;/div&gt;&#10;+&#10;+&lt;pre id=&quot;test&quot;&gt;&#10;+&lt;script class=&quot;testbody&quot; type=&quot;text/javascript&quot;&gt;&#10;+&#10;+var orig = window;&#10;+window = {};&#10;+&#10;+var origLocation = location;&#10;+&#10;+ok(window === orig, &quot;can't override window&quot;);&#10;+ok(window.location === location, &quot;properties are properly aliased&quot;);&#10;+ok(document.location === location, &quot;properties are properly aliased&quot;);&#10;+&#10;+try {&#10;+    __defineGetter__('window', function() {});&#10;+    ok(false, &quot;should not be able to defineGetter(window)&quot;);&#10;+} catch (e) {&#10;+}&#10;+&#10;+try {&#10;+    window.__defineGetter__('location', function(){});&#10;+    ok(false, &quot;should not be able to defineGetter(window.location)&quot;);&#10;+} catch (e) {&#10;+}&#10;+&#10;+try {&#10;+    window.location.__defineGetter__('href', function(){});&#10;+    ok(false, &quot;shouldn't be able to override location.href&quot;);&#10;+} catch (e) {&#10;+}&#10;+&#10;+try {&#10;+    window.location.__proto__.__defineGetter__('href', function(){});&#10;+    ok(false, &quot;shouldn't be able to use the prototype&quot;);&#10;+} catch (e) {&#10;+}&#10;+&#10;+try {&#10;+    window.location.__defineSetter__('href', function(){});&#10;+    ok(false, &quot;overrode a setter for location.href?&quot;);&#10;+} catch (e) {&#10;+}&#10;+&#10;+try {&#10;+    document.__defineGetter__('location', function(){});&#10;+    ok(false, &quot;shouldn't be able to override document.location&quot;);&#10;+} catch (e) {&#10;+}&#10;+&#10;+is(location.watch, undefined, &quot;watch doesn't exist on location objects&quot;);&#10;+try {&#10;+    Object.prototype.watch.call(location, function() {});&#10;+    ok(false, &quot;shouldn't be able to set a watchpoint on location&quot;);&#10;+} catch (e) {&#10;+}&#10;+&#10;+ok(window === orig, &quot;can't override window&quot;);&#10;+ok(window.location === origLocation, &quot;properties are properly aliased&quot;);&#10;+ok(document.location === origLocation, &quot;properties are properly aliased&quot;);&#10;+&#10;+location.href = 'javascript:ok(true, &quot;was able to set location.href through a watchpoint&quot;)';&#10;+&#10;+&lt;/script&gt;&#10;+&lt;/pre&gt;&#10;+&lt;/body&gt;&#10;+&lt;/html&gt;&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">579593</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Reed Loden &lt;reed@reedloden.com&gt;  2010-08-14 15:05:03     Bug 579593 - Reorganize how theme library loading works. [r=robarnold]&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- widget/src/windows/nsUXThemeData.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index fda4648..52113a8 100644&#10;@@ -114,8 +114,12 @@ nsUXThemeData::Initialize()&#10; {&#10;   ::ZeroMemory(sThemes, sizeof(sThemes));&#10;   NS_ASSERTION(!sThemeDLL, &quot;nsUXThemeData being initialized twice!&quot;);&#10;-  sThemeDLL = ::LoadLibraryW(kThemeLibraryName);&#10;-  if (sThemeDLL) {&#10;+&#10;+  PRInt32 version = nsWindow::GetWindowsVersion();&#10;+  sIsXPOrLater = version &gt;= WINXP_VERSION;&#10;+  sIsVistaOrLater = version &gt;= VISTA_VERSION;&#10;+&#10;+  if (GetThemeDLL()) {&#10;     openTheme = (OpenThemeDataPtr)GetProcAddress(sThemeDLL, &quot;OpenThemeData&quot;);&#10;     closeTheme = (CloseThemeDataPtr)GetProcAddress(sThemeDLL, &quot;CloseThemeData&quot;);&#10;     drawThemeBG = (DrawThemeBackgroundPtr)GetProcAddress(sThemeDLL, &quot;DrawThemeBackground&quot;);&#10;@@ -132,22 +136,18 @@ nsUXThemeData::Initialize()&#10;     isThemeBackgroundPartiallyTransparent = (IsThemeBackgroundPartiallyTransparentPtr)GetProcAddress(sThemeDLL, &quot;IsThemeBackgroundPartiallyTransparent&quot;);&#10;   }&#10; #if MOZ_WINSDK_TARGETVER &gt;= MOZ_NTDDI_LONGHORN&#10;-   sDwmDLL = ::LoadLibraryW(kDwmLibraryName);&#10;-   if(sDwmDLL) {&#10;-     dwmExtendFrameIntoClientAreaPtr = (DwmExtendFrameIntoClientAreaProc)::GetProcAddress(sDwmDLL, &quot;DwmExtendFrameIntoClientArea&quot;);&#10;-     dwmIsCompositionEnabledPtr = (DwmIsCompositionEnabledProc)::GetProcAddress(sDwmDLL, &quot;DwmIsCompositionEnabled&quot;);&#10;-     dwmSetIconicThumbnailPtr = (DwmSetIconicThumbnailProc)::GetProcAddress(sDwmDLL, &quot;DwmSetIconicThumbnail&quot;);&#10;-     dwmSetIconicLivePreviewBitmapPtr = (DwmSetIconicLivePreviewBitmapProc)::GetProcAddress(sDwmDLL, &quot;DwmSetIconicLivePreviewBitmap&quot;);&#10;-     dwmSetWindowAttributePtr = (DwmSetWindowAttributeProc)::GetProcAddress(sDwmDLL, &quot;DwmSetWindowAttribute&quot;);&#10;-     dwmInvalidateIconicBitmapsPtr = (DwmInvalidateIconicBitmapsProc)::GetProcAddress(sDwmDLL, &quot;DwmInvalidateIconicBitmaps&quot;);&#10;-     dwmDwmDefWindowProcPtr = (DwmDefWindowProcProc)::GetProcAddress(sDwmDLL, &quot;DwmDefWindowProc&quot;);&#10;-     CheckForCompositor();&#10;-   }&#10;+  if (GetDwmDLL()) {&#10;+    dwmExtendFrameIntoClientAreaPtr = (DwmExtendFrameIntoClientAreaProc)::GetProcAddress(sDwmDLL, &quot;DwmExtendFrameIntoClientArea&quot;);&#10;+    dwmIsCompositionEnabledPtr = (DwmIsCompositionEnabledProc)::GetProcAddress(sDwmDLL, &quot;DwmIsCompositionEnabled&quot;);&#10;+    dwmSetIconicThumbnailPtr = (DwmSetIconicThumbnailProc)::GetProcAddress(sDwmDLL, &quot;DwmSetIconicThumbnail&quot;);&#10;+    dwmSetIconicLivePreviewBitmapPtr = (DwmSetIconicLivePreviewBitmapProc)::GetProcAddress(sDwmDLL, &quot;DwmSetIconicLivePreviewBitmap&quot;);&#10;+    dwmSetWindowAttributePtr = (DwmSetWindowAttributeProc)::GetProcAddress(sDwmDLL, &quot;DwmSetWindowAttribute&quot;);&#10;+    dwmInvalidateIconicBitmapsPtr = (DwmInvalidateIconicBitmapsProc)::GetProcAddress(sDwmDLL, &quot;DwmInvalidateIconicBitmaps&quot;);&#10;+    dwmDwmDefWindowProcPtr = (DwmDefWindowProcProc)::GetProcAddress(sDwmDLL, &quot;DwmDefWindowProc&quot;);&#10;+    CheckForCompositor();&#10;+  }&#10; #endif&#10; &#10;-  PRInt32 version = nsWindow::GetWindowsVersion();&#10;-  sIsXPOrLater = version &gt;= WINXP_VERSION;&#10;-  sIsVistaOrLater = version &gt;= VISTA_VERSION;&#10;   Invalidate();&#10; }&#10; &#10;@@ -186,6 +186,20 @@ nsUXThemeData::GetTheme(nsUXThemeClass cls) {&#10;   return sThemes[cls];&#10; }&#10; &#10;+HMODULE&#10;+nsUXThemeData::GetThemeDLL() {&#10;+  if (!sThemeDLL &amp;&amp; sIsXPOrLater)&#10;+    sThemeDLL = ::LoadLibraryW(kThemeLibraryName);&#10;+  return sThemeDLL;&#10;+}&#10;+&#10;+HMODULE&#10;+nsUXThemeData::GetDwmDLL() {&#10;+  if (!sDwmDLL &amp;&amp; sIsVistaOrLater)&#10;+    sDwmDLL = ::LoadLibraryW(kDwmLibraryName);&#10;+  return sDwmDLL;&#10;+}&#10;+&#10; const wchar_t *nsUXThemeData::GetClassName(nsUXThemeClass cls) {&#10;   switch(cls) {&#10;     case eUXButton:&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- widget/src/windows/nsUXThemeData.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index a5c1d09..0db117e 100644&#10;@@ -120,6 +120,8 @@ public:&#10;   static void Teardown();&#10;   static void Invalidate();&#10;   static HANDLE GetTheme(nsUXThemeClass cls);&#10;+  static HMODULE GetThemeDLL();&#10;+  static HMODULE GetDwmDLL();&#10; &#10;   // nsWindow calls this to update desktop settings info&#10;   static void InitTitlebarInfo();&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- widget/src/windows/nsWinGesture.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 5b67e9d..40ef2c3 100644&#10;@@ -42,6 +42,7 @@&#10; &#10; #include &quot;nscore.h&quot;&#10; #include &quot;nsWinGesture.h&quot;&#10;+#include &quot;nsUXThemeData.h&quot;&#10; #include &quot;nsIPrefBranch.h&quot;&#10; #include &quot;nsIPrefService.h&quot;&#10; #include &quot;nsIServiceManager.h&quot;&#10;@@ -53,7 +54,6 @@&#10; #endif&#10; &#10; const PRUnichar nsWinGesture::kGestureLibraryName[] =  L&quot;user32.dll&quot;;&#10;-const PRUnichar nsWinGesture::kThemeLibraryName[] =  L&quot;uxtheme.dll&quot;;&#10; HMODULE nsWinGesture::sLibraryHandle = nsnull;&#10; nsWinGesture::GetGestureInfoPtr nsWinGesture::getGestureInfo = nsnull;&#10; nsWinGesture::CloseGestureInfoHandlePtr nsWinGesture::closeGestureInfoHandle = nsnull;&#10;@@ -96,7 +96,7 @@ PRBool nsWinGesture::InitLibrary()&#10;   }&#10; &#10;   sLibraryHandle = ::LoadLibraryW(kGestureLibraryName);&#10;-  HMODULE hTheme = ::LoadLibraryW(kThemeLibraryName);&#10;+  HMODULE hTheme = nsUXThemeData::GetThemeDLL();&#10; &#10;   // gesture interfaces&#10;   if (sLibraryHandle) {&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- widget/src/windows/nsWinGesture.h &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index ce4538c..e72747f 100644&#10;@@ -300,7 +300,6 @@ private:&#10; &#10;   static HMODULE sLibraryHandle;&#10;   static const PRUnichar kGestureLibraryName[];&#10;-  static const PRUnichar kThemeLibraryName[];&#10; &#10;   // Pan and feedback state&#10;   nsPointWin mPanIntermediate;&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">657201</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Benoit Jacob &lt;bjacob@mozilla.com&gt;  2011-05-21 03:53:53      Bug 657201 - we must really avoid glValidateProgram() on Mac - r=cdiehl&#10;    &#10;    We thought it was only crashy with NVIDIA, but it's now confirmed on ATI on Mac OS 10.6.7 too&#10;    &#10;    It's OK to just not call it, as it's only a developer feature and not really useful in actual content.&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- content/canvas/src/WebGLContextGL.cpp &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 0c184c2..303e042 100644&#10;@@ -3595,11 +3595,9 @@ WebGLContext::ValidateProgram(nsIWebGLProgram *pobj)&#10;     MakeContextCurrent();&#10; &#10; #ifdef XP_MACOSX&#10;-    if (gl-&gt;Vendor() == gl::GLContext::VendorNVIDIA) {&#10;-        LogMessageIfVerbose(&quot;validateProgram: implemented as a no-operation &quot;&#10;-                            &quot;on Mac/NVIDIA to work around a driver crash&quot;);&#10;-        return NS_OK;&#10;-    }&#10;+    // see bug 593867 for NVIDIA and bug 657201 for ATI. The latter is confirmed with Mac OS 10.6.7&#10;+    LogMessageIfVerbose(&quot;validateProgram: implemented as a no-operation on Mac to work around crashes&quot;);&#10;+    return NS_OK;&#10; #endif&#10; &#10;     gl-&gt;fValidateProgram(progname);&#10;&#10;</Data></Cell>
   </Row>
   <Row ss:Height="409.5">
    <Cell><Data ss:Type="Number">672485</Data></Cell>
    <Cell ss:StyleID="s66"><Data ss:Type="String">Author: Blair McBride &lt;bmcbride@mozilla.com&gt;  2011-08-11 10:29:48        Bug 672485 - Ensure window watcher is defined. r=dtownsend,jst&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- toolkit/mozapps/extensions/amWebInstallListener.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index 43da0e3..45bb218 100644&#10;@@ -54,6 +54,8 @@ Components.utils.import(&quot;resource://gre/modules/XPCOMUtils.jsm&quot;);&#10; Components.utils.import(&quot;resource://gre/modules/AddonManager.jsm&quot;);&#10; Components.utils.import(&quot;resource://gre/modules/Services.jsm&quot;);&#10; &#10;+const URI_XPINSTALL_DIALOG = &quot;chrome://mozapps/content/xpinstall/xpinstallConfirm.xul&quot;;&#10;+&#10; // Installation can begin from any of these states&#10; const READY_STATES = [&#10;   AddonManager.STATE_AVAILABLE,&#10;@@ -204,8 +206,13 @@ Installer.prototype = {&#10;     args.installs = this.downloads;&#10;     args.wrappedJSObject = args;&#10; &#10;-    Services.ww.openWindow(this.window, &quot;chrome://mozapps/content/xpinstall/xpinstallConfirm.xul&quot;,&#10;-                           null, &quot;chrome,modal,centerscreen&quot;, args);&#10;+    try {&#10;+      Services.ww.openWindow(this.window, URI_XPINSTALL_DIALOG,&#10;+                             null, &quot;chrome,modal,centerscreen&quot;, args);&#10;+    } catch (e) {&#10;+      this.downloads.forEach(function(aInstall) aInstall.cancel());&#10;+      notifyObservers(&quot;addon-install-failed&quot;, this.window, this.url, failed);&#10;+    }&#10;   },&#10; &#10;   /**&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- toolkit/mozapps/extensions/test/xpinstall/Makefile.in &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;index c18337d..76759f4 100644&#10;@@ -98,6 +98,7 @@ _BROWSER_FILES = head.js \&#10;                  browser_bug611242.js \&#10;                  browser_bug638292.js \&#10;                  browser_bug645699.js \&#10;+                 browser_bug672485.js \&#10;                  unsigned.xpi \&#10;                  signed.xpi \&#10;                  signed2.xpi \&#10;&#10;&#45;&#45;&#45;&#45;&#45;&#45;&#45;- toolkit/mozapps/extensions/test/xpinstall/browser_bug672485.js &#45;&#45;&#45;&#45;&#45;&#45;&#45;-&#10;new file mode 100644&#10;index 0000000..3bde4348&#10;@@ -0,0 +1,48 @@&#10;+/* Any copyright is dedicated to the Public Domain.&#10;+ * http://creativecommons.org/publicdomain/zero/1.0/&#10;+ */&#10;+&#10;+function test() {&#10;+  Harness.installConfirmCallback = confirm_install;&#10;+  Harness.installFailedCallback = failed_install;&#10;+  Harness.installEndedCallback = complete_install;&#10;+  Harness.installsCompletedCallback = finish_test;&#10;+  Harness.setup();&#10;+  &#10;+  delete Services.ww;&#10;+  is(Services.ww, undefined, &quot;Services.ww should now be undefined&quot;);&#10;+&#10;+  var pm = Services.perms;&#10;+  pm.add(makeURI(&quot;http://example.com/&quot;), &quot;install&quot;, pm.ALLOW_ACTION);&#10;+&#10;+  var triggers = encodeURIComponent(JSON.stringify({&#10;+    &quot;Unsigned XPI&quot;: TESTROOT + &quot;unsigned.xpi&quot;&#10;+  }));&#10;+  gBrowser.selectedTab = gBrowser.addTab();&#10;+  gBrowser.loadURI(TESTROOT + &quot;installtrigger.html?&quot; + triggers);&#10;+}&#10;+&#10;+function confirm_install(window) {&#10;+  ok(false, &quot;Should not see the install dialog&quot;);&#10;+  return false;&#10;+}&#10;+&#10;+function failed_install() {&#10;+  ok(true, &quot;Install should fail&quot;);&#10;+}&#10;+&#10;+function complete_install() {&#10;+  ok(false, &quot;Install should not have completed&quot;);&#10;+  return false;&#10;+}&#10;+&#10;+function finish_test(count) {&#10;+  is(count, 0, &quot;0 Add-ons should have been successfully installed&quot;);&#10;+&#10;+  gBrowser.removeCurrentTab();&#10;+  &#10;+  Services.ww = Cc[&quot;@mozilla.org/embedcomp/window-watcher;1&quot;]&#10;+                  .getService(Ci.nsIWindowWatcher);&#10;+  &#10;+  Harness.finish();&#10;+}&#10;&#10;</Data></Cell>
   </Row>
  </Table>
  <WorksheetOptions xmlns="urn:schemas-microsoft-com:office:excel">
   <PageSetup>
    <Header x:Margin="0.3"/>
    <Footer x:Margin="0.3"/>
    <PageMargins x:Bottom="0.75" x:Left="0.7" x:Right="0.7" x:Top="0.75"/>
   </PageSetup>
   <Print>
    <ValidPrinterInfo/>
    <PaperSizeIndex>9</PaperSizeIndex>
    <HorizontalResolution>600</HorizontalResolution>
    <VerticalResolution>600</VerticalResolution>
   </Print>
   <Selected/>
   <TopRowVisible>49</TopRowVisible>
   <Panes>
    <Pane>
     <Number>3</Number>
     <ActiveRow>49</ActiveRow>
    </Pane>
   </Panes>
   <ProtectObjects>False</ProtectObjects>
   <ProtectScenarios>False</ProtectScenarios>
  </WorksheetOptions>
 </Worksheet>
</Workbook>
